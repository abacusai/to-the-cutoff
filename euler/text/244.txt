You probably know the game **Fifteen Puzzle**. Here, instead of numbered
tiles, we have seven red tiles and eight blue tiles.

A move is denoted by the uppercase initial of the direction (Left, Right, Up,
Down) in which the tile is slid, e.g. starting from configuration ( **S** ),
by the sequence **LULUR** we reach the configuration ( **E** ):

( **S** )|
![0244_start.gif](resources/images/0244_start.gif?1678992055?1678992055)| , (
**E** )| ![0244_example.gif](resources/images/0244_example.gif?1678992055)  
—|—|—|—  
  
For each path, its checksum is calculated by (pseudocode):


    checksum   = 0
     checksum   =
    (checksum× 243 + m_1)  100 000 007
     checksum   = (checksum× 243 + m_2)  100 000 007
     ⋯   
    checksum   = (checksum× 243 + m_n)  100 000 007
 where m_k is the ASCII value of the kth letter in the move
sequence and the ASCII values for the moves are:

**L**|  76  
—|—  
 **R**|  82  
 **U**|  85  
 **D**|  68  
  
For the sequence **LULUR** given above, the checksum would be 19761398.

Now, starting from configuration ( **S** ), find all shortest ways to reach
configuration ( **T** ).

( **S** )|
![0244_start.gif](resources/images/0244_start.gif?1678992055?1678992055)| , (
**T** )| ![0244_target.gif](resources/images/0244_target.gif?1678992055)  
—|—|—|—  
  
What is the sum of all checksums for the paths having the minimal length?

