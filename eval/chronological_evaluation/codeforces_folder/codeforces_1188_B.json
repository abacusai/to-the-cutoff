[
    {
        "name": "Count Pairs",
        "description": "You are given a prime number \n    p\n, \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n, and an integer \n    k\n. Find the number of pairs of indexes \n    (i,\n    j)\n (\n    1 \n    \u2264 i < j \n    \u2264 n\n) for which \n    (a_i + a_j)(a_i^2 + a_j^2)\n    \n    \u2261 k \n     p\n. Input The first line contains integers \n    n, p, k\n\n(\n    2 \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n, \n    2 \n    \u2264 p \n    \u2264 10^9\n, \n    0 \n    \u2264\n    k \n    \u2264 p-1\n). \n    p\n is guaranteed to be prime. The second line contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 p-1\n).\nIt is guaranteed that all elements are different. Output Output a single\ninteger \u2014 answer to the problem. Examples Input 3 3 0 0 1 2 Output 1 Input 6 7\n2 1 2 3 4 5 6 Output 3 Note In the first example: \n    (0+1)(0^2 + 1^2) = 1\n    \n    \u2261 1 \n     3\n. \n    (0+2)(0^2 + 2^2) = 8 \n    \u2261 2 \n     3\n.\n\n    (1+2)(1^2 + 2^2) = 15 \n    \u2261 0 \n     3\n. So only \n    1\n pair\nsatisfies the condition. In the second example, there are \n    3\n such pairs:\n\n    (1, 5)\n, \n    (2, 3)\n, \n    (4, 6)\n.\n\n",
        "cf_contest_id": 1188,
        "cf_index": "B",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "matrices",
            "number theory",
            "two pointers"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3 0\r\n0 1 2\r\n",
                "1\r\n"
            ],
            [
                "6 7 2\r\n1 2 3 4 5 6\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 5 3\r\n3 0 4 1 2\r\n",
                "1\r\n"
            ],
            [
                "7 7 3\r\n4 0 5 3 1 2 6\r\n",
                "0\r\n"
            ],
            [
                "2 2 1\r\n1 0\r\n",
                "1\r\n"
            ],
            [
                "3 3 0\r\n0 2 1\r\n",
                "1\r\n"
            ],
            [
                "2 2 0\r\n1 0\r\n",
                "0\r\n"
            ],
            [
                "3 3 1\r\n0 2 1\r\n",
                "1\r\n"
            ],
            [
                "3 3 2\r\n0 1 2\r\n",
                "1\r\n"
            ],
            [
                "2 37 5\r\n30 10\r\n",
                "0\r\n"
            ]
        ]
    }
]