[
    {
        "name": "Robot on the Board 1",
        "description": "The robot is located on a checkered rectangular board of size \n    n \n    \u00d7\n    m\n (\n    n\n rows, \n    m\n columns). The rows in the board are numbered from\n\n    1\n to \n    n\n from top to bottom, and the columns \u2014 from \n    1\n to\n\n    m\n from left to right. The robot is able to move from the current cell to\none of the four cells adjacent by side. The sequence of commands \n    s\n\nexecuted by the robot is given. Each command is denoted by one of the symbols\n'L', 'R', 'D' or 'U', and triggers the movement to left, right, down or up,\nrespectively. The robot can start its movement in any cell. The robot executes\nthe commands starting from the first one, strictly in the order in which they\nare listed in \n    s\n. If the robot moves beyond the edge of the board, it\nfalls and breaks. A command that causes the robot to break is not considered\nsuccessfully executed. The robot's task is to execute as many commands as\npossible without falling off the board. For example, on board \n    3 \n    \u00d7\n    3\n, if the robot starts a sequence of actions \n    s=\n\"RRDLUU\" (\"right\",\n\"right\", \"down\", \"left\", \"up\", \"up\") from the central cell, the robot will\nperform one command, then the next command will force him to cross the edge.\nIf the robot starts moving from the cell \n    (2, 1)\n (second row, first\ncolumn) then all commands will be executed successfully and the robot will\nstop at the cell \n    (1, 2)\n (first row, second column). The robot starts\nfrom cell \n    (2, 1)\n (second row, first column). It moves right, right,\ndown, left, up, and up. In this case it ends in the cell \n    (1, 2)\n (first\nrow, second column). Determine the cell from which the robot should start its\nmovement in order to execute as many commands as possible. Input The first\nline contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number\nof test cases. The next \n    2t\n lines contain descriptions of the test cases.\nIn the description of each test case, the first line contains two integers\n\n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 10^6\n) \u2014 the height and width\nof the field that the robot is located on. The second line of the description\nis a string \n    s\n consisting solely of characters 'L', 'R', 'D' and 'U' \u2014\nthe sequence of commands the robot executes. The string has a length from\n\n    1\n to \n    10^6\n commands. It is guaranteed that the total length of\n\n    s\n over all test cases does not exceed \n    10^6\n. Output Print \n    t\n\nlines, each of which contains the answer to the corresponding test case. The\nanswer to the test case are two integers \n    r\n (\n    1 \n    \u2264 r \n    \u2264 n\n)\nand \n    c\n (\n    1 \n    \u2264 c \n    \u2264 m\n), separated by a space \u2014 the\ncoordinates of the cell (row number and column number) from which the robot\nshould start moving to perform as many commands as possible. If there are\nseveral such cells, you may output any of them. Example Input 4 1 1 L 1 2 L 3\n3 RRDLUU 4 3 LUURRDDLLLUU Output 1 1 1 2 2 1 3 2\n\n",
        "cf_contest_id": 1607,
        "cf_index": "E",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 1\r\nL\r\n1 2\r\nL\r\n3 3\r\nRRDLUU\r\n4 3\r\nLUURRDDLLLUU\r\n",
                "1 1\r\n1 2\r\n2 1\r\n3 2\r\n"
            ]
        ],
        "private_cases": []
    }
]