[
    {
        "name": "Three swimmers",
        "description": "Three swimmers decided to organize a party in the swimming pool! At noon, they\nstarted to swim from the left side of the pool. It takes the first swimmer\nexactly \n    a\n minutes to swim across the entire pool and come back, exactly\n\n    b\n minutes for the second swimmer and \n    c\n minutes for the third.\nHence, the first swimmer will be on the left side of the pool after \n    0\n,\n\n    a\n, \n    2a\n, \n    3a\n, ... minutes after the start time, the second one\nwill be at \n    0\n, \n    b\n, \n    2b\n, \n    3b\n, ... minutes, and the third\none will be on the left side of the pool after \n    0\n, \n    c\n, \n    2c\n,\n\n    3c\n, ... minutes. You came to the left side of the pool exactly \n    p\n\nminutes after they started swimming. Determine how long you have to wait\nbefore one of the swimmers arrives at the left side of the pool. Input The\nfirst line of the input contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 1000\n) \u2014 the number of test cases. Next \n    t\n lines contains test\ncase descriptions, one per line. Each line contains four integers \n    p\n,\n\n    a\n, \n    b\n and \n    c\n (\n    1 \n    \u2264 p, a, b, c \n    \u2264 10^18\n), time\nin minutes after the start, when you came to the pool and times in minutes it\ntake the swimmers to cross the entire pool and come back. Output For each test\ncase, output one integer \u2014 how long you have to wait (in minutes) before one\nof the swimmers arrives at the left side of the pool. Example Input 4 9 5 4 8\n2 6 10 9 10 2 5 10 10 9 9 9 Output 1 4 0 8 Note In the first test case, the\nfirst swimmer is on the left side in \n    0, 5, 10, 15, \n    \u2026\n minutes\nafter the start time, the second swimmer is on the left side in \n    0, 4, 8,\n    12, \n    \u2026\n minutes after the start time, and the third swimmer is on the\nleft side in \n    0, 8, 16, 24, \n    \u2026\n minutes after the start time. You\narrived at the pool in \n    9\n minutes after the start time and in a minute\nyou will meet the first swimmer on the left side. In the second test case, the\nfirst swimmer is on the left side in \n    0, 6, 12, 18, \n    \u2026\n minutes\nafter the start time, the second swimmer is on the left side in \n    0, 10, 20,\n    30, \n    \u2026\n minutes after the start time, and the third swimmer is on the\nleft side in \n    0, 9, 18, 27, \n    \u2026\n minutes after the start time. You\narrived at the pool \n    2\n minutes after the start time and after \n    4\n\nminutes meet the first swimmer on the left side. In the third test case, you\ncame to the pool \n    10\n minutes after the start time. At the same time, all\nthree swimmers are on the left side. A rare stroke of luck! In the fourth test\ncase, all swimmers are located on the left side in \n    0, 9, 18, 27,\n    \n    \u2026\n minutes after the start time. You arrived at the pool \n    10\n\nminutes after the start time and after \n    8\n minutes meet all three swimmers\non the left side.\n\n",
        "cf_contest_id": 1492,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n9 5 4 8\r\n2 6 10 9\r\n10 2 5 10\r\n10 9 9 9\r\n",
                "1\r\n4\r\n0\r\n8\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 2 3 4\r\n1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\r\n",
                "1\r\n0\r\n"
            ],
            [
                "1\r\n2 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n4 2 2 2\r\n",
                "0\r\n"
            ],
            [
                "1\r\n12 6 6 6\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10 5 7 6\r\n",
                "0\r\n"
            ],
            [
                "1\r\n20 2 5 10\r\n",
                "0\r\n"
            ],
            [
                "1\r\n6 2 2 2\r\n",
                "0\r\n"
            ],
            [
                "5\r\n6 3 1000 2000\r\n9 5 4 8\r\n2 6 10 9\r\n10 2 5 10\r\n10 9 9 9\r\n",
                "0\r\n1\r\n4\r\n0\r\n8\r\n"
            ],
            [
                "1\r\n8 2 3 5\r\n",
                "0\r\n"
            ],
            [
                "1\r\n20 10 10 10\r\n",
                "0\r\n"
            ],
            [
                "1\r\n8 4 4 4\r\n",
                "0\r\n"
            ],
            [
                "1\r\n100 10 11 12\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10 5 3 4\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10 2 1000 1000\r\n",
                "0\r\n"
            ],
            [
                "1\r\n3 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10 2 3 4\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10 2 2 2\r\n",
                "0\r\n"
            ],
            [
                "1\r\n4 2 100 200\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1000000000000000000 10 7 59465946\r\n",
                "0\r\n"
            ],
            [
                "1\r\n48 12 16 24\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10 5 2 4\r\n",
                "0\r\n"
            ],
            [
                "1\r\n24 2 3 4\r\n",
                "0\r\n"
            ],
            [
                "1\r\n24 6 9 12\r\n",
                "0\r\n"
            ],
            [
                "1\r\n20 4 5 10\r\n",
                "0\r\n"
            ],
            [
                "1\r\n18 9 9 9\r\n",
                "0\r\n"
            ],
            [
                "1\r\n14 2 7 5\r\n",
                "0\r\n"
            ],
            [
                "1\r\n100 10 20 50\r\n",
                "0\r\n"
            ],
            [
                "2\r\n10 5 11 11\r\n10 5 19 19\r\n",
                "0\r\n0\r\n"
            ],
            [
                "1\r\n10 5 5 5\r\n",
                "0\r\n"
            ],
            [
                "1\r\n60 3 4 5\r\n",
                "0\r\n"
            ],
            [
                "1\r\n8 2 2 2\r\n",
                "0\r\n"
            ],
            [
                "1\r\n120 3 4 5\r\n",
                "0\r\n"
            ],
            [
                "1\r\n6 1 2 3\r\n",
                "0\r\n"
            ],
            [
                "1\r\n15 5 7 9\r\n",
                "0\r\n"
            ],
            [
                "10\r\n30 2 3 5\r\n60 2 3 5\r\n40 2 5 8\r\n50 2 5 10\r\n66 2 3 11\r\n48 2 3 4\r\n24 2 4 6\r\n100 2 10 20\r\n20 2 4 5\r\n15 1 3 5\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "1\r\n18 2 3 6\r\n",
                "0\r\n"
            ],
            [
                "1\r\n100 2 4 5\r\n",
                "0\r\n"
            ],
            [
                "1\r\n30 2 3 5\r\n",
                "0\r\n"
            ],
            [
                "1\r\n6 3 3 3\r\n",
                "0\r\n"
            ],
            [
                "1\r\n100 10 10 10\r\n",
                "0\r\n"
            ],
            [
                "1\r\n14 7 7 7\r\n",
                "0\r\n"
            ],
            [
                "4\r\n18 9 9 9\r\n18 6 3 2\r\n18 5 4 3\r\n18 7 6 5\r\n",
                "0\r\n0\r\n0\r\n0\r\n"
            ]
        ]
    }
]