[
    {
        "name": "Escape The Maze (hard version)",
        "description": "The only difference with E1 is the question of the problem. Vlad built a maze\nout of \n    n\n rooms and \n    n-1\n bidirectional corridors. From any room\n\n    u\n any other room \n    v\n can be reached through a sequence of corridors.\nThus, the room system forms an undirected tree. Vlad invited \n    k\n friends\nto play a game with them. Vlad starts the game in the room \n    1\n and wins if\nhe reaches a room other than \n    1\n, into which exactly one corridor leads.\nFriends are placed in the maze: the friend with number \n    i\n is in the room\n\n    x_i\n, and no two friends are in the same room (that is, \n    x_i \n    \u2260\n    x_j\n for all \n    i \n    \u2260 j\n). Friends win if one of them meets Vlad in any\nroom or corridor before he wins. For one unit of time, each participant of the\ngame can go through one corridor. All participants move at the same time.\nParticipants may not move. Each room can fit all participants at the same\ntime. Friends know the plan of a maze and intend to win. They don't want to\nwaste too much energy. They ask you to determine if they can win and if they\ncan, what minimum number of friends must remain in the maze so that they can\nalways catch Vlad. In other words, you need to determine the size of the\nminimum (by the number of elements) subset of friends who can catch Vlad or\nsay that such a subset does not exist. Input The first line of the input\ncontains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test\ncases in the input. The input contains an empty string before each test case.\nThe first line of the test case contains two numbers \n    n\n and \n    k\n (\n    1\n    \n    \u2264 k < n \n    \u2264 2\n    \u00b7 10^5\n) \u2014 the number of rooms and friends,\nrespectively. The next line of the test case contains \n    k\n integers \n    x_1,\n    x_2, \n    \u2026, x_k\n (\n    2 \n    \u2264 x_i \n    \u2264 n\n) \u2014 numbers of rooms with\nfriends. All \n    x_i\n are different. The next \n    n-1\n lines contain\ndescriptions of the corridors, two numbers per line \n    v_j\n and \n    u_j\n\n(\n    1 \n    \u2264 u_j, v_j \n    \u2264 n\n) \u2014 numbers of rooms that connect the \n    j\n\ncorridor. All corridors are bidirectional. From any room, you can go to any\nother by moving along the corridors. It is guaranteed that the sum of the\nvalues \n    n\n over all test cases in the test is not greater than\n\n    2\n    \u00b710^5\n. Output Print \n    t\n lines, each line containing the\nanswer to the corresponding test case. The answer to a test case should be\n\n    -1\n if Vlad wins anyway and a minimal number of friends otherwise.\nExample Input 4 8 2 5 3 4 7 2 5 1 6 3 6 7 2 1 7 6 8 8 4 6 5 7 3 4 7 2 5 1 6 3\n6 7 2 1 7 6 8 3 1 2 1 2 2 3 3 2 2 3 3 1 1 2 Output -1 2 1 2 Note In the first\nset of inputs, even if all the friends stay in the maze, Vlad can still win.\nTherefore, the answer is \"-1\". In the second set of inputs it is enough to\nleave friends from rooms \n    6\n and \n    7\n. Then Vlad will not be able to\nwin. The answer is \"2\". In the third and fourth sets of inputs Vlad cannot win\nonly if all his friends stay in the maze. Therefore the answers are \"1\" and\n\"2\".\n\n",
        "cf_contest_id": 1611,
        "cf_index": "E2",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "shortest paths",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n\r\n8 2\r\n5 3\r\n4 7\r\n2 5\r\n1 6\r\n3 6\r\n7 2\r\n1 7\r\n6 8\r\n\r\n8 4\r\n6 5 7 3\r\n4 7\r\n2 5\r\n1 6\r\n3 6\r\n7 2\r\n1 7\r\n6 8\r\n\r\n3 1\r\n2\r\n1 2\r\n2 3\r\n\r\n3 2\r\n2 3\r\n3 1\r\n1 2\r\n",
                "-1\r\n2\r\n1\r\n2\r\n"
            ]
        ],
        "private_cases": []
    }
]