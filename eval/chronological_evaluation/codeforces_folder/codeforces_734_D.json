[
    {
        "name": "Anton and Chess",
        "description": "Anton likes to play chess. Also, he likes to do programming. That is why he\ndecided to write the program that plays chess. However, he finds the game on 8\nto 8 board to too simple, he uses an infinite one instead. The first task he\nfaced is to check whether the king is in check. Anton doesn't know how to\nimplement this so he asks you to help. Consider that an infinite chess board\ncontains one white king and the number of black pieces. There are only rooks,\nbishops and queens, as the other pieces are not supported yet. The white king\nis said to be in check if at least one black piece can reach the cell with the\nking in one move. Help Anton and write the program that for the given position\ndetermines whether the white king is in check. Remainder, on how do chess\npieces move: Bishop moves any number of cells diagonally, but it can't \"leap\"\nover the occupied cells. Rook moves any number of cells horizontally or\nvertically, but it also can't \"leap\" over the occupied cells. Queen is able to\nmove any number of cells horizontally, vertically or diagonally, but it also\ncan't \"leap\". Input The first line of the input contains a single integer n (1\n\u2264 n \u2264 500 000) \u2014 the number of black pieces. The second line contains two\nintegers x0 and y0 ( - 10^9 \u2264 x0, y0 \u2264 10^9) \u2014 coordinates of the white king.\nThen follow n lines, each of them contains a character and two integers xi and\nyi ( - 10^9 \u2264 xi, yi \u2264 10^9) \u2014 type of the i-th piece and its position.\nCharacter 'B' stands for the bishop, 'R' for the rook and 'Q' for the queen.\nIt's guaranteed that no two pieces occupy the same position. Output The only\nline of the output should contains \"YES\" (without quotes) if the white king is\nin check and \"NO\" (without quotes) otherwise. Examples Input 2 4 2 R 1 1 B 1 5\nOutput YES Input 2 4 2 R 3 3 B 1 5 Output NO Note Picture for the first\nsample: White king is in check, because the black bishop can reach the cell\nwith the white king in one move. The answer is \"YES\".Picture for the second\nsample: Here bishop can't reach the cell with the white king, because his path\nis blocked by the rook, and the bishop cant \"leap\" over it. Rook can't reach\nthe white king, because it can't move diagonally. Hence, the king is not in\ncheck and the answer is \"NO\".\n\n",
        "cf_contest_id": 734,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n4 2\r\nR 1 1\r\nB 1 5\r\n",
                "YES\r\n"
            ],
            [
                "2\r\n4 2\r\nR 3 3\r\nB 1 5\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n-1 1\r\nR -10 10\r\nQ -9 9\r\nQ -2 -8\r\nB -6 10\r\nB -10 1\r\n",
                "YES\r\n"
            ],
            [
                "20\r\n-321 454\r\nQ 967 -89\r\nR -811 454\r\nQ -404 454\r\nR -734 454\r\nQ -804 454\r\nQ -316 77\r\nQ -802 454\r\nB -499 454\r\nQ 401 -663\r\nQ -601 454\r\nQ -974 454\r\nB 710 298\r\nB -917 454\r\nB -555 -542\r\nQ -337 950\r\nR 501 40\r\nR 355 310\r\nB 657 -374\r\nR -860 454\r\nR 839 -10\r\n",
                "YES\r\n"
            ],
            [
                "3\r\n-1000000000 -1000000000\r\nB 1000000000 -1000000000\r\nB -1000000000 1000000000\r\nB 1000000000 1000000000\r\n",
                "YES\r\n"
            ],
            [
                "4\r\n1000000000 -1000000000\r\nB -1000000000 -1000000000\r\nB -1000000000 1000000000\r\nB 1000000000 1000000000\r\nR 0 0\r\n",
                "NO\r\n"
            ],
            [
                "5\r\n-1000000000 1000000000\r\nR -1000000000 -1000000000\r\nB 1000000000 -1000000000\r\nR 1000000000 1000000000\r\nB -1000000000 0\r\nB 0 1000000000\r\n",
                "YES\r\n"
            ],
            [
                "6\r\n-1000000000 1000000000\r\nR -1000000000 -1000000000\r\nB 1000000000 -1000000000\r\nR 1000000000 1000000000\r\nB -1000000000 0\r\nB 0 1000000000\r\nQ 0 0\r\n",
                "YES\r\n"
            ],
            [
                "5\r\n1000000000 1000000000\r\nQ -1000000000 -1000000000\r\nQ -1000000000 1000000000\r\nQ 1000000000 -1000000000\r\nB 1000000000 0\r\nB 0 1000000000\r\n",
                "YES\r\n"
            ],
            [
                "6\r\n1000000000 1000000000\r\nQ -1000000000 -1000000000\r\nQ -1000000000 1000000000\r\nQ 1000000000 -1000000000\r\nB 1000000000 0\r\nB 0 1000000000\r\nR 0 0\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n-1000000000 -1000000000\r\nB 1000000000 1000000000\r\nR 0 0\r\nQ 2 2\r\nR 4851521 8054854\r\nR -1000000000 1000000000\r\nB -1000000000 379\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n0 0\r\nB 0 1\r\nB -1 0\r\nR 1 1\r\nQ -1 -1\r\n",
                "YES\r\n"
            ],
            [
                "3\r\n0 0\r\nR -1 -1\r\nR 1 -1\r\nB 0 1\r\n",
                "NO\r\n"
            ],
            [
                "2\r\n0 0\r\nR 0 2\r\nB 0 1\r\n",
                "NO\r\n"
            ],
            [
                "2\r\n5 5\r\nR 7 5\r\nB 6 5\r\n",
                "NO\r\n"
            ],
            [
                "2\r\n1 1\r\nR 1 3\r\nB 1 2\r\n",
                "NO\r\n"
            ],
            [
                "2\r\n0 0\r\nB 1 0\r\nR -2 0\r\n",
                "YES\r\n"
            ],
            [
                "2\r\n4 2\r\nB 1 5\r\nR 3 3\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n0 0\r\nB 1 -1\r\n",
                "YES\r\n"
            ],
            [
                "2\r\n0 0\r\nB 2 2\r\nR 1 1\r\n",
                "NO\r\n"
            ],
            [
                "2\r\n1 0\r\nR 0 -1\r\nB 3 2\r\n",
                "YES\r\n"
            ]
        ]
    }
]