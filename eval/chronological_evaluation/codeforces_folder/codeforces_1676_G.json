[
    {
        "name": "White-Black Balanced Subtrees",
        "description": "You are given a rooted tree consisting of \n    n\n vertices numbered from\n\n    1\n to \n    n\n. The root is vertex \n    1\n. There is also a string \n    s\n\ndenoting the color of each vertex: if \n    s_i =\n, then vertex\n\n    i\n is black, and if \n    s_i =\n, then vertex \n    i\n is\nwhite. A subtree of the tree is called balanced if the number of white\nvertices equals the number of black vertices. Count the number of balanced\nsubtrees. A tree is a connected undirected graph without cycles. A rooted tree\nis a tree with a selected vertex, which is called the root. In this problem,\nall trees have root \n    1\n. The tree is specified by an array of parents\n\n    a_2, \n    \u2026, a_n\n containing \n    n-1\n numbers: \n    a_i\n is the parent\nof the vertex with the number \n    i\n for all \n    i = 2, \n    \u2026, n\n. The\nparent of a vertex \n    u\n is a vertex that is the next vertex on a simple\npath from \n    u\n to the root. The subtree of a vertex \n    u\n is the set of\nall vertices that pass through \n    u\n on a simple path to the root. For\nexample, in the picture below, \n    7\n is in the subtree of \n    3\n because\nthe simple path \n    7 \n    \u2192 5 \n    \u2192 3 \n    \u2192 1\n passes through \n    3\n. Note\nthat a vertex is included in its subtree, and the subtree of the root is the\nentire tree. The picture shows the tree for \n    n=7\n, \n    a=[1,1,2,3,3,5]\n,\nand \n    s=\n. The subtree at the vertex \n    3\n is balanced.\nInput The first line of input contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014 the number of test cases. The first line of each test case contains\nan integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 4000\n) \u2014 the number of vertices in\nthe tree. The second line of each test case contains \n    n-1\n integers\n\n    a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i < i\n) \u2014 the parents of the vertices\n\n    2, \n    \u2026, n\n. The third line of each test case contains a string\n\n    s\n of length \n    n\n consisting of the characters \n    \n and\n\n    \n \u2014 the coloring of the tree. It is guaranteed that the sum\nof the values \n    n\n over all test cases does not exceed \n    2 \n    \u00b7\n    10^5\n. Output For each test case, output a single integer \u2014 the number of\nbalanced subtrees. Example Input 3 7 1 1 2 3 3 5 WBBWWBW 2 1 BW 8 1 2 3 4 5 6\n7 BWBWBWBW Output 2 1 4 Note The first test case is pictured in the statement.\nOnly the subtrees at vertices \n    2\n and \n    3\n are balanced. In the second\ntest case, only the subtree at vertex \n    1\n is balanced. In the third test\ncase, only the subtrees at vertices \n    1\n, \n    3\n, \n    5\n, and \n    7\n are\nbalanced.\n\n",
        "cf_contest_id": 1676,
        "cf_index": "G",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n7\r\n1 1 2 3 3 5\r\nWBBWWBW\r\n2\r\n1\r\nBW\r\n8\r\n1 2 3 4 5 6 7\r\nBWBWBWBW\r\n",
                "2\r\n1\r\n4\r\n"
            ]
        ],
        "private_cases": []
    }
]