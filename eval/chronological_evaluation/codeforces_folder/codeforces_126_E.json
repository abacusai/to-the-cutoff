[
    {
        "name": "Pills",
        "description": "Doctor prescribed medicine to his patient. The medicine is represented by\npills. Each pill consists of a shell and healing powder. The shell consists of\ntwo halves; each half has one of four colors \u2014 blue, red, white or yellow. The\ndoctor wants to put 28 pills in a rectangular box 7 \u00d7 8 in size. Besides, each\npill occupies exactly two neighboring cells and any cell contains exactly one\nhalf of a pill. Thus, the result is a four colored picture 7 \u00d7 8 in size. The\ndoctor thinks that a patient will recover sooner if the picture made by the\npills will be special. Unfortunately, putting the pills in the box so as to\nget the required picture is not a very easy task. That's why doctor asks you\nto help. Doctor has some amount of pills of each of 10 painting types. They\nall contain the same medicine, that's why it doesn't matter which 28 of them\nwill be stored inside the box. Place the pills in the box so that the required\npicture was formed. If it is impossible to place the pills in the required\nmanner, then place them so that the number of matching colors in all 56 cells\nin the final arrangement and the doctor's picture were maximum. Input First 7\nlines contain the doctor's picture. Each line contains 8 characters, each\ncharacter can be \"B\", \"R\", \"W\" and \"Y\" that stands for blue, red, white and\nyellow colors correspondingly. Next four lines contain 10 numbers that stand\nfor, correspondingly, the number of pills painted: \"BY\" \"BW\" \"BR\" \"BB\" \"RY\"\n\"RW\" \"RR\" \"WY\" \"WW\" \"YY\" Those numbers lie within range from 0 to 28\ninclusively. It is guaranteed that the total number of pills in no less than\n28. Output Print on the first line the maximal number cells for which the\ncolors match. Then print 13 lines each containing 15 characters \u2014 the pills'\nposition in the optimal arrangement. The intersections of odd lines and odd\ncolumns should contain characters \"B\", \"R\", \"W\" and \"Y\". All other positions\nshould contain characters \".\", \"-\" and \"|\". Use \"-\" and \"|\" to show which\nhalves belong to one pill. See the samples for more clarification. If there\nare several possible solutions, print any of them. Examples Input WWWBBWWW\nWWWBBWWW YYWBBWWW YYWBBWRR YYWBBWRR YYWBBWRR YYWBBWRR 0 0 0 8 0 1 5 1 10 5\nOutput 53 W.W.W.B.B.W.W.W |.|.|.|.|.|.|.| W.W.W.B.B.W.W.W ...............\nY.Y.W.B.B.W.W-W |.|.|.|.|.|.... Y.Y.W.B.B.W.R.R ............|.|\nY.Y.W.B.B.R.R.R |.|.|.|.|.|.... Y.Y.W.B.B.W.R.R ............|.|\nY-Y.B-B.B-B.R.R Input WWWWWWWW WBYWRBBY BRYRBWYY WWBRYWBB BWWRWBYW RBWRBWYY\nWWWWWWWW 0 0 0 1 0 0 1 0 1 25 Output 15 W.Y.Y-Y.Y-Y.Y-Y |.|............\nW.Y.Y.Y.Y.B-B.Y ....|.|.|.....| Y-Y.Y.Y.Y.Y-Y.Y ...............\nY.Y.Y.R.Y.Y.Y-Y |.|.|.|.|.|.... Y.Y.Y.R.Y.Y.Y.Y ............|.|\nY-Y.Y.Y-Y.Y.Y.Y ....|.....|.... Y-Y.Y.Y-Y.Y.Y-Y\n\n",
        "cf_contest_id": 126,
        "cf_index": "E",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "flows"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "WWWBBWWW\r\nWWWBBWWW\r\nYYWBBWWW\r\nYYWBBWRR\r\nYYWBBWRR\r\nYYWBBWRR\r\nYYWBBWRR\r\n0 0 0 8\r\n0 1 5\r\n1 10\r\n5\r\n",
                "53\r\nW-W.B-B.B-B.W-W\r\n...............\r\nW-W.W.B-B.W-W.W\r\n....|.........|\r\nY-Y.W.B-B.W-W.W\r\n...............\r\nY-Y.W.B-B.W-R.R\r\n....|.........|\r\nY-Y.W.B-B.R-R.R\r\n...............\r\nY-Y.W.B-B.W.R-R\r\n....|.....|....\r\nY-Y.W.B-B.W.R-R\r\n"
            ],
            [
                "WWWWWWWW\r\nWBYWRBBY\r\nBRYRBWYY\r\nWWBRYWBB\r\nBWWRWBYW\r\nRBWRBWYY\r\nWWWWWWWW\r\n0 0 0 1\r\n0 0 1\r\n0 1\r\n25\r\n",
                "15\r\nW-W.Y-Y.Y-Y.Y-Y\r\n...............\r\nY-Y.Y-Y.Y-Y.Y-Y\r\n...............\r\nY-Y.Y-Y.Y-Y.Y-Y\r\n...............\r\nY-Y.Y-Y.Y-Y.B-B\r\n...............\r\nY-Y.Y.R.Y-Y.Y-Y\r\n....|.|........\r\nY-Y.Y.R.Y-Y.Y-Y\r\n...............\r\nY-Y.Y-Y.Y-Y.Y-Y\r\n"
            ]
        ],
        "private_cases": []
    }
]