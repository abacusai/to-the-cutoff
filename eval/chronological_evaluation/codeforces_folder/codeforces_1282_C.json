[
    {
        "name": "Petya and Exam",
        "description": "Petya has come to the math exam and wants to solve as many problems as\npossible. He prepared and carefully studied the rules by which the exam\npasses. The exam consists of \n    n\n problems that can be solved in \n    T\n\nminutes. Thus, the exam begins at time \n    0\n and ends at time \n    T\n. Petya\ncan leave the exam at any integer time from \n    0\n to \n    T\n, inclusive. All\nproblems are divided into two types: easy problems \u2014 Petya takes exactly\n\n    a\n minutes to solve any easy problem; hard problems \u2014 Petya takes exactly\n\n    b\n minutes (\n    b > a\n) to solve any hard problem. Thus, if Petya starts\nsolving an easy problem at time \n    x\n, then it will be solved at time\n\n    x+a\n. Similarly, if at a time \n    x\n Petya starts to solve a hard\nproblem, then it will be solved at time \n    x+b\n. For every problem, Petya\nknows if it is easy or hard. Also, for each problem is determined time\n\n    t_i\n (\n    0 \n    \u2264 t_i \n    \u2264 T\n) at which it will become mandatory\n(required). If Petya leaves the exam at time \n    s\n and there is such a\nproblem \n    i\n that \n    t_i \n    \u2264 s\n and he didn't solve it, then he will\nreceive \n    0\n points for the whole exam. Otherwise (i.e if he has solved all\nsuch problems for which \n    t_i \n    \u2264 s\n) he will receive a number of points\nequal to the number of solved problems. Note that leaving at time \n    s\n\nPetya can have both \"mandatory\" and \"non-mandatory\" problems solved. For\nexample, if \n    n=2\n, \n    T=5\n, \n    a=2\n, \n    b=3\n, the first problem is\nhard and \n    t_1=3\n and the second problem is easy and \n    t_2=2\n. Then: if\nhe leaves at time \n    s=0\n, then he will receive \n    0\n points since he will\nnot have time to solve any problems; if he leaves at time \n    s=1\n, he will\nreceive \n    0\n points since he will not have time to solve any problems; if\nhe leaves at time \n    s=2\n, then he can get a \n    1\n point by solving the\nproblem with the number \n    2\n (it must be solved in the range from \n    0\n\nto \n    2\n); if he leaves at time \n    s=3\n, then he will receive \n    0\n\npoints since at this moment both problems will be mandatory, but he will not\nbe able to solve both of them; if he leaves at time \n    s=4\n, then he will\nreceive \n    0\n points since at this moment both problems will be mandatory,\nbut he will not be able to solve both of them; if he leaves at time \n    s=5\n,\nthen he can get \n    2\n points by solving all problems. Thus, the answer to\nthis test is \n    2\n. Help Petya to determine the maximal number of points\nthat he can receive, before leaving the exam. Input The first line contains\nthe integer \n    m\n (\n    1 \n    \u2264 m \n    \u2264 10^4\n) \u2014 the number of test cases in\nthe test. The next lines contain a description of \n    m\n test cases. The\nfirst line of each test case contains four integers \n    n, T, a, b\n (\n    2\n    \n    \u2264 n \n    \u2264 2\n    \u00b710^5\n, \n    1 \n    \u2264 T \n    \u2264 10^9\n, \n    1 \n    \u2264 a < b\n    \n    \u2264 10^9\n) \u2014 the number of problems, minutes given for the exam and the\ntime to solve an easy and hard problem, respectively. The second line of each\ntest case contains \n    n\n numbers \n    0\n or \n    1\n, separated by single\nspace: the \n    i\n-th number means the type of the \n    i\n-th problem. A value\nof \n    0\n means that the problem is easy, and a value of \n    1\n that the\nproblem is hard. The third line of each test case contains \n    n\n integers\n\n    t_i\n (\n    0 \n    \u2264 t_i \n    \u2264 T\n), where the \n    i\n-th number means the\ntime at which the \n    i\n-th problem will become mandatory. It is guaranteed\nthat the sum of \n    n\n for all test cases does not exceed \n    2\n    \u00b710^5\n.\nOutput Print the answers to \n    m\n test cases. For each set, print a single\ninteger \u2014 maximal number of points that he can receive, before leaving the\nexam. Example Input 10 3 5 1 3 0 0 1 2 1 4 2 5 2 3 1 0 3 2 1 20 2 4 0 16 6 20\n2 5 1 1 0 1 0 0 0 8 2 9 11 6 4 16 3 6 1 0 1 1 8 3 5 6 6 20 3 6 0 1 0 0 1 0 20\n11 3 20 16 17 7 17 1 6 1 1 0 1 0 0 0 1 7 0 11 10 15 10 6 17 2 6 0 0 1 0 0 1 7\n6 3 7 10 12 5 17 2 5 1 1 1 1 0 17 11 10 6 4 1 1 1 2 0 1 Output 3 2 1 0 1 4 0 1\n2 1\n\n",
        "cf_contest_id": 1282,
        "cf_index": "C",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10\r\n3 5 1 3\r\n0 0 1\r\n2 1 4\r\n2 5 2 3\r\n1 0\r\n3 2\r\n1 20 2 4\r\n0\r\n16\r\n6 20 2 5\r\n1 1 0 1 0 0\r\n0 8 2 9 11 6\r\n4 16 3 6\r\n1 0 1 1\r\n8 3 5 6\r\n6 20 3 6\r\n0 1 0 0 1 0\r\n20 11 3 20 16 17\r\n7 17 1 6\r\n1 1 0 1 0 0 0\r\n1 7 0 11 10 15 10\r\n6 17 2 6\r\n0 0 1 0 0 1\r\n7 6 3 7 10 12\r\n5 17 2 5\r\n1 1 1 1 0\r\n17 11 10 6 4\r\n1 1 1 2\r\n0\r\n1\r\n",
                "3\r\n2\r\n1\r\n0\r\n1\r\n4\r\n0\r\n1\r\n2\r\n1\r\n"
            ]
        ],
        "private_cases": []
    }
]