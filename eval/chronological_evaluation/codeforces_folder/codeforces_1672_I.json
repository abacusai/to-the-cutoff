[
    {
        "name": "PermutationForces",
        "description": "You have a permutation \n    p\n of integers from \n    1\n to \n    n\n. You have a\nstrength of \n    s\n and will perform the following operation some times:\nChoose an index \n    i\n such that \n    1 \n    \u2264 i \n    \u2264 |p|\n and \n    |i-p_i|\n    \n    \u2264 s\n. For all \n    j\n such that \n    1 \n    \u2264 j \n    \u2264 |p|\n and\n\n    p_i<p_j\n, update \n    p_j\n to \n    p_j-1\n. Delete the \n    i\n-th element\nfrom \n    p\n. Formally, update \n    p\n to\n\n    [p_1,\n    \u2026,p_i-1,p_i+1,\n    \u2026,p_n]\n. It can be shown that no\nmatter what \n    i\n you have chosen, \n    p\n will be a permutation of integers\nfrom \n    1\n to \n    |p|\n after all operations. You want to be able to\ntransform \n    p\n into the empty permutation. Find the minimum strength\n\n    s\n that will allow you to do so. Input The first line of input contains a\nsingle integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 5 \n    \u00b7 10^5\n) \u2014 the length\nof the permutation \n    p\n. The second line of input conatains \n    n\n\nintegers \n    p_1, p_2, \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n) \u2014 the\nelements of the permutation \n    p\n. It is guaranteed that all elements in\n\n    p\n are distinct. Output Print the minimum strength \n    s\n required.\nExamples Input 3 3 2 1 Output 1 Input 1 1 Output 0 Input 10 1 8 4 3 7 10 6 5 9\n2 Output 1 Note In the first test case, the minimum \n    s\n required is\n\n    1\n. Here is how we can transform \n    p\n into the empty permutation with\n\n    s=1\n: In the first move, you can only choose \n    i=2\n as choosing any\nother value of \n    i\n will result in \n    |i-p_i| \n    \u2264 s\n being false. With\n\n    i=2\n, \n    p\n will be changed to \n    [2,1]\n. In the second move, you\nchoose \n    i=1\n, then \n    p\n will be changed to \n    [1]\n. In the third\nmove, you choose \n    i=1\n, then \n    p\n will be changed to \n    [\u00a0]\n. It can\nbe shown that with \n    s=0\n, it is impossible to transform \n    p\n into the\nempty permutation.\n\n",
        "cf_contest_id": 1672,
        "cf_index": "I",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "3\r\n3 2 1\r\n",
                "1"
            ],
            [
                "1\r\n1\r\n",
                "0"
            ],
            [
                "10\r\n1 8 4 3 7 10 6 5 9 2\r\n",
                "1"
            ]
        ],
        "private_cases": [
            [
                "10\r\n8 7 9 2 1 3 5 6 10 4\r\n",
                "2"
            ],
            [
                "10\r\n9 6 2 8 10 3 7 5 1 4\r\n",
                "2"
            ]
        ]
    }
]