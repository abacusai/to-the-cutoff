[
    {
        "name": "Princess and Her Shadow",
        "description": "Princess Vlada enjoys springing in the meadows and walking in the forest. One\nday \u2014 wonderful, sunny day \u2014 during her walk Princess found out with\nastonishment that her shadow was missing! \"Blimey!\", \u2014 she thought and started\nher search of the shadow in the forest. Normally the Shadow is too lazy and\nsimply sleeps under the Princess. But at this terrifically hot summer day she\ngot bored of such a dull life, so she decided to play with Vlada. The forest,\nwhere our characters entertain themselves, may be represented as a set of\ninteger cells in the plane, where the Shadow and the Princess can move only\nup, down, left and right by 1. Some cells (as it happens in decent forests)\nare occupied by trees. The Shadow and the Princess are not allowed to enter a\ncell occupied by a tree. Unfortunately, these are the hard times for the\nforest, so there are very few trees growing here... At first the Princess was\nwalking within the cell (vx, vy), while the Shadow hid from the Princess in\nthe cell (sx, sy). The Princess, The Shadow and the trees are located in the\ndifferent cells. The Shadow is playing with the Princess. As soon as the\nPrincess moves by 1 in some direction, the Shadow simultaneously flies by 1 in\nthe same direction, if it is possible (if the cell to fly to is not occupied\nby some tree); otherwise, the Shadow doesn't move. The Shadow is very shadowy,\nso our characters do not interfere with each other. We say that the Shadow is\ncaught by the Princess if after some move both of them are located in the same\ncell. Vlada managed to catch her Shadow! Can you? Input First line of the\ninput contains the coordinates of the characters vx, vy, sx, sy and the number\nof trees m (0 \u2264 m \u2264 400). The following m lines contain the coordinates of the\ntrees. All the coordinates are integers between -100 and 100, inclusive. The\nPrincess, The Shadow and the trees are located in the different cells. Output\nIf it is impossible for the Princess to catch the Shadow, print \"-1\" (without\nquotes). Otherwise print a sequence of characters \"L\", \"R\", \"D\", \"U\",\ncorresponding to the Princess's moves, following which she will be able to\ncatch the Shadow at some turn (L \u2014 move to the left, R \u2014 to the right, U \u2014 up,\nD \u2014 down; axis x is directed to the right, y \u2014 up). The number of characters\n(that is, the number of moves) must not exceed 10^6. All the Princess's moves\nshould be correct, that is must not lead to the cell where a tree grows. It is\nallowed for the Princess and the Shadow to occupy the same cell before the\nlast turn. Examples Input 0 0 1 0 1 0 1 Output LLUR Input 5 0 3 0 8 2 -1 2 0 2\n1 3 -1 4 1 4 0 3 1 4 -1 Output -1 Input 3 2 1 1 3 0 1 1 0 0 0 Output DLL Note\nBelow the pictures for the samples are given (Princess, Shadow and the trees\nare colored in pink, gray and black correspondingly; the blue dot marks the\nlattice center). In the first case the Princess may make two left steps, one\nstep upwards and one right step: In the following case the Princess cannot\ncatch the Shadow: In the last sample the Princess may make two left steps and\none down step (in any order):\n\n",
        "cf_contest_id": 317,
        "cf_index": "E",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "shortest paths"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "0 0 1 0 1\r\n0 1\r\n",
                "RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUULLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL..."
            ],
            [
                "5 0 3 0 8\r\n2 -1\r\n2 0\r\n2 1\r\n3 -1\r\n4 1\r\n4 0\r\n3 1\r\n4 -1\r\n",
                "-1\r\n"
            ],
            [
                "3 2 1 1 3\r\n0 1\r\n1 0\r\n0 0\r\n",
                "DLL\r\n"
            ]
        ],
        "private_cases": [
            [
                "0 0 0 1 0\r\n",
                "-1\r\n"
            ],
            [
                "-100 -100 100 100 0\r\n",
                "-1\r\n"
            ],
            [
                "-100 100 99 -99 5\r\n100 -99\r\n98 -99\r\n99 -100\r\n99 -98\r\n23 39\r\n",
                "-1\r\n"
            ],
            [
                "-99 99 100 -100 6\r\n-100 99\r\n-98 99\r\n-99 100\r\n15 41\r\n-99 98\r\n-2 3\r\n",
                "-1\r\n"
            ],
            [
                "0 17 2 17 15\r\n2 15\r\n2 18\r\n3 16\r\n3 17\r\n3 15\r\n3 18\r\n-1 18\r\n-1 15\r\n-1 16\r\n-1 17\r\n1 17\r\n1 18\r\n1 15\r\n0 18\r\n0 15\r\n",
                "DRR\r\n"
            ]
        ]
    }
]