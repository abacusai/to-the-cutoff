[
    {
        "name": "Martian Architecture",
        "description": "Chris the Rabbit found the traces of an ancient Martian civilization. The\nbrave astronomer managed to see through a small telescope an architecture\nmasterpiece \u2014 \"A Road to the Sun\". The building stands on cubical stones of\nthe same size. The foundation divides the entire \"road\" into cells, into which\nthe cubical stones are fit tightly. Thus, to any cell of the foundation a\ncoordinate can be assigned. To become the leader of the tribe, a Martian\nshould build a Road to the Sun, that is to build from those cubical stones on\na given foundation a stairway. The stairway should be described by the number\nof stones in the initial coordinate and the coordinates of the stairway's\nbeginning and end. Each following cell in the coordinate's increasing order\nshould contain one cubical stone more than the previous one. At that if the\ncell has already got stones, they do not count in this building process, the\nstairways were simply built on them. In other words, let us assume that a\nstairway is built with the initial coordinate of l, the final coordinate of r\nand the number of stones in the initial coordinate x. That means that x stones\nwill be added in the cell l, x + 1 stones will be added in the cell l + 1,\n..., x + r - l stones will be added in the cell r. Chris managed to find an\nancient manuscript, containing the descriptions of all the stairways. Now he\nwants to compare the data to be sure that he has really found \"A Road to the\nSun\". For that he chose some road cells and counted the total number of\ncubical stones that has been accumulated throughout the Martian history and\nthen asked you to count using the manuscript to what the sum should ideally\ntotal. Input The first line contains three space-separated integers: n, m, k\n(1 \u2264 n, m \u2264 10^5, 1 \u2264 k \u2264 min(n, 100)) which is the number of cells, the\nnumber of \"Roads to the Sun\" and the number of cells in the query\ncorrespondingly. Each of the following m roads contain three space-separated\nintegers: ai, bi, ci (1 \u2264 ai \u2264 bi \u2264 n, 1 \u2264 ci \u2264 1000) which are the stairway's\ndescription, its beginning, end and the initial cell's height. Then follow a\nline, containing k different space-separated integers bi. All these numbers\nranging from 1 to n are cells, the number of stones in which interests Chris.\nOutput You have to print a single number on a single line which is the sum of\nstones in all the cells Chris is interested in. Please, do not use \nspecificator to read or write 64-bit integers in C++. It is preffered to use\ncin (also you may use \nInput 3 2 1 1 3 1 1 3 1 2 Output 4 Input 3 2 1 1 3 1 1 3 1 3 Output 6\n\n",
        "cf_contest_id": 57,
        "cf_index": "B",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 2 1\r\n1 5 1\r\n2 4 1\r\n3\r\n",
                "5"
            ],
            [
                "3 2 1\r\n1 3 1\r\n1 3 1\r\n2\r\n",
                "4"
            ],
            [
                "3 2 1\r\n1 3 1\r\n1 3 1\r\n3\r\n",
                "6"
            ]
        ],
        "private_cases": [
            [
                "10 10 3\r\n6 10 74\r\n7 9 35\r\n3 6 63\r\n2 4 80\r\n2 10 78\r\n10 10 13\r\n4 10 16\r\n1 2 13\r\n3 7 17\r\n4 6 67\r\n9 8 10\r\n",
                "635"
            ],
            [
                "10 10 6\r\n5 9 618\r\n4 8 717\r\n4 7 815\r\n7 10 22\r\n4 6 186\r\n8 10 205\r\n2 6 424\r\n5 10 267\r\n2 3 512\r\n1 6 967\r\n5 8 9 1 3 2\r\n",
                "11745"
            ],
            [
                "10 10 1\r\n4 9 6\r\n4 5 5\r\n1 5 6\r\n4 5 6\r\n8 10 5\r\n7 10 1\r\n2 3 6\r\n4 8 4\r\n5 8 7\r\n7 8 6\r\n1\r\n",
                "6"
            ],
            [
                "100 10 19\r\n75 86 9\r\n3 16 49\r\n12 94 58\r\n67 78 98\r\n32 54 30\r\n34 36 46\r\n39 89 4\r\n7 75 38\r\n6 85 73\r\n11 66 79\r\n91 69 65 43 82 19 96 50 97 20 58 49 8 83 85 73 70 56 57\r\n",
                "6666"
            ],
            [
                "272 10 10\r\n16 29 2\r\n43 269 2\r\n146 265 2\r\n198 267 8\r\n38 140 3\r\n172 187 1\r\n2 172 4\r\n142 230 1\r\n12 199 5\r\n15 27 8\r\n70 3 190 83 81 17 16 148 15 107\r\n",
                "1994"
            ],
            [
                "986 10 20\r\n249 846 37\r\n110 335 5\r\n170 568 34\r\n399 668 30\r\n118 832 42\r\n294 336 62\r\n335 713 60\r\n245 671 18\r\n263 512 61\r\n94 417 75\r\n63 641 553 61 818 339 254 784 673 572 932 657 432 257 335 971 223 548 758 79\r\n",
                "21557"
            ]
        ]
    }
]