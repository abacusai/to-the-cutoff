[
    {
        "name": "Make It Round",
        "description": "Inflation has occurred in Berlandia, so the store needs to change the price of\ngoods. The current price of good \n    n\n is given. It is allowed to increase\nthe price of the good by \n    k\n times, with \n    1 \n    \u2264 k \n    \u2264 m\n, k is an\ninteger. Output the roundest possible new price of the good. That is, the one\nthat has the maximum number of zeros at the end. For example, the number\n481000 is more round than the number 1000010 (three zeros at the end of 481000\nand only one at the end of 1000010). If there are several possible variants,\noutput the one in which the new price is maximal. If it is impossible to get a\nrounder price, output \n    n \n    \u00b7 m\n (that is, the maximum possible price).\nInput The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014the number of test cases in the test. Each test case consists of one\nline. This line contains two integers: \n    n\n and \n    m\n (\n    1 \n    \u2264 n, m\n    \n    \u2264 10^9\n). Where \n    n\n is the old price of the good, and the number\n\n    m\n means that you can increase the price \n    n\n no more than \n    m\n\ntimes. Output For each test case, output on a separate line the roundest\ninteger of the form \n    n \n    \u00b7 k\n (\n    1 \n    \u2264 k \n    \u2264 m\n, \n    k\n \u2014 an\ninteger). If there are several possible variants, output the one in which the\nnew price (value \n    n \n    \u00b7 k\n) is maximal. If it is impossible to get a\nmore rounded price, output \n    n \n    \u00b7 m\n (that is, the maximum possible\nprice). Example Input 10 6 11 5 43 13 5 4 16 10050 12345 2 6 4 30 25 10 2 81 1\n7 Output 60 200 65 60 120600000 10 100 200 100 7 Note In the first case \n    n =\n    6\n, \n    m = 11\n. We cannot get a number with two zeros or more at the end,\nbecause we need to increase the price \n    50\n times, but \n    50 > m = 11\n.\nThe maximum price multiple of \n    10\n would be \n    6 \n    \u00b7 10 = 60\n. In\nthe second case \n    n = 5\n, \n    m = 43\n. The maximum price multiple of\n\n    100\n would be \n    5 \n    \u00b7 40 = 200\n. In the third case, \n    n = 13\n,\n\n    m = 5\n. All possible new prices will not end in \n    0\n, then you should\noutput \n    n \n    \u00b7 m = 65\n. In the fourth case, you should increase the\nprice \n    15\n times. In the fifth case, increase the price \n    12000\n times.\n\n",
        "cf_contest_id": 1759,
        "cf_index": "D",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10\r\n6 11\r\n5 43\r\n13 5\r\n4 16\r\n10050 12345\r\n2 6\r\n4 30\r\n25 10\r\n2 81\r\n1 7\r\n",
                "60\r\n200\r\n65\r\n60\r\n120600000\r\n10\r\n100\r\n200\r\n100\r\n7\r\n"
            ]
        ],
        "private_cases": []
    }
]