[
    {
        "name": "Typical Party in Dorm",
        "description": "Today is a holiday in the residence hall \u2014 Oleh arrived, in honor of which the\ngirls gave him a string. Oleh liked the gift a lot, so he immediately thought\nup and offered you, his best friend, the following problem. You are given a\nstring \n    s\n of length \n    n\n, which consists of the first \n    17\n\nlowercase Latin letters \n    a\n, \n    b\n, \n    c\n, \n    \u2026\n, \n    p\n,\n\n    q\n and question marks. And \n    q\n queries. Each query is defined by a\nset of pairwise distinct lowercase first \n    17\n letters of the Latin\nalphabet, which can be used to replace the question marks in the string\n\n    s\n. The answer to the query is the sum of the number of distinct\nsubstrings that are palindromes over all strings that can be obtained from the\noriginal string \n    s\n by replacing question marks with available characters.\nThe answer must be calculated modulo \n    998\n     244\n     353\n. Pay attention!\nTwo substrings are different when their start and end positions in the string\nare different. So, the number of different substrings that are palindromes for\nthe string aba will be \n    4\n: a, b, a, aba. Consider examples of replacing\nquestion marks with letters. For example, from the string aba??ee when\nquerying \n    a\n, \n    b\n you can get the strings ababaee or abaaaee but you\ncannot get the strings pizza, abaee, abacaba, aba?fee, aba47ee, or abatree.\nRecall that a palindrome is a string that reads the same from left to right as\nfrom right to left. Input The first line contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 1\n     000\n) \u2014 the length of the string \n    s\n. The\nsecond line contains the string \n    s\n, which consists of \n    n\n lowercase\nLatin letters and question marks. It is guaranteed that all letters in the\nstring belong to the set \n    a\n, \n    b\n, \n    c\n, \n    \u2026\n, \n    p\n,\n\n    q\n. The third line contains a single integer \n    q\n (\n    1 \n    \u2264 q \n    \u2264\n    2 \n    \u00b7 10^5\n) \u2014 the number of queries. This is followed by \n    q\n lines,\neach containing a single line \n    t\n \u2014 a set of characters that can replace\nquestion marks (\n    1 \n    \u2264 |t| \n    \u2264 17\n). It is guaranteed that all letters\nin the string belong to the set \n    a\n, \n    b\n, \n    c\n, \n    \u2026\n,\n\n    p\n, \n    q\n and occur at most once. Output For each query print one\nnumber \u2014 the total numbers of palindromic substrings in all strings that can\nbe obtained from the string \n    s\n, modulo \n    998\n     244\n     353\n. Examples\nInput 7 ab??aba 8 a b ab abc abcd abcde abcdef abcdefg Output 14 13 55 105 171\n253 351 465 Input 11 ??????????? 6 abcdefghijklmnopq ecpnkhbmlidgfjao olehfan\ncodef glhf q Output 900057460 712815817 839861037 756843750 70840320 66 Note\nConsider the first example and the first query in it. We can get only one\nstring as a result of replacing the question marks \u2014 abaaaba. It has the\nfollowing palindrome substrings: a \u2014 substring [\n    1\n; \n    1\n]. b \u2014\nsubstring [\n    2\n; \n    2\n]. a \u2014 substring [\n    3\n; \n    3\n]. a \u2014 substring\n[\n    4\n; \n    4\n]. a \u2014 substring [\n    5\n; \n    5\n]. b \u2014 substring [\n    6\n;\n\n    6\n]. a \u2014 substring [\n    7\n; \n    7\n]. aa \u2014 substring [\n    3\n; \n    4\n].\naa \u2014 substring [\n    4\n; \n    5\n]. aba \u2014 substring [\n    1\n; \n    3\n]. aaa \u2014\nsubstring [\n    3\n; \n    5\n]. aba \u2014 substring [\n    5\n; \n    7\n]. baaab \u2014\nsubstring [\n    2\n; \n    6\n]. abaaaba \u2014 substring [\n    1\n; \n    7\n]. In the\nthird request, we get 4 lines: abaaaba, abababa, abbaaba, abbbaba.\n\n",
        "cf_contest_id": 1679,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "combinatorics",
            "dp",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\nab??aba\r\n8\r\na\r\nb\r\nab\r\nabc\r\nabcd\r\nabcde\r\nabcdef\r\nabcdefg\r\n",
                "14\r\n13\r\n55\r\n105\r\n171\r\n253\r\n351\r\n465\r\n"
            ],
            [
                "11\r\n???????????\r\n6\r\nabcdefghijklmnopq\r\necpnkhbmlidgfjao\r\nolehfan\r\ncodef\r\nglhf\r\nq\r\n",
                "900057460\r\n712815817\r\n839861037\r\n756843750\r\n70840320\r\n66\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\ncpdm\r\n3\r\nb\r\nac\r\nd\r\n",
                "4\r\n4\r\n4\r\n"
            ],
            [
                "4\r\n????\r\n3\r\ndfjhibc\r\ne\r\nijegdfhab\r\n",
                "11368\r\n10\r\n29970\r\n"
            ],
            [
                "10\r\n??????????\r\n10\r\ncg\r\ngdi\r\ncbgefhjda\r\nibcjhefg\r\ncbfaigde\r\nf\r\ncfjihebdg\r\naheic\r\nighjadebfc\r\nf\r\n",
                "23776\r\n1033965\r\n133099845\r\n280264691\r\n280264691\r\n55\r\n133099845\r\n136721875\r\n602266346\r\n55\r\n"
            ],
            [
                "1\r\n?\r\n4\r\na\r\nabcdefg\r\nabcd\r\nabcdefghijklmnopq\r\n",
                "1\r\n7\r\n4\r\n17\r\n"
            ],
            [
                "8\r\n??k???n?\r\n2\r\npcqfkhj\r\necpofmgab\r\n",
                "1121610\r\n4612383\r\n"
            ],
            [
                "36\r\n??abcdefghijklmnopq?????????????????\r\n5\r\nqponkji\r\nabcd\r\nabcdefghijklmnopq\r\ncdefghijklmnopq\r\nabcdefgh\r\n",
                "845412709\r\n809487727\r\n200586003\r\n163129624\r\n960352478\r\n"
            ]
        ]
    }
]