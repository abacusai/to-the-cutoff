[
    {
        "name": "Sweet Problem",
        "description": "You have three piles of candies: red, green and blue candies: the first pile\ncontains only red candies and there are \n    r\n candies in it, the second pile\ncontains only green candies and there are \n    g\n candies in it, the third\npile contains only blue candies and there are \n    b\n candies in it. Each day\nTanya eats exactly two candies of different colors. She is free to choose the\ncolors of eaten candies: the only restriction that she can't eat two candies\nof the same color in a day. Find the maximal number of days Tanya can eat\ncandies? Each day she needs to eat exactly two candies. Input The first line\ncontains integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test\ncases in the input. Then \n    t\n test cases follow. Each test case is given as\na separate line of the input. It contains three integers \n    r\n, \n    g\n and\n\n    b\n (\n    1 \n    \u2264 r, g, b \n    \u2264 10^8\n) \u2014 the number of red, green and blue\ncandies, respectively. Output Print \n    t\n integers: the \n    i\n-th printed\ninteger is the answer on the \n    i\n-th test case in the input. Example Input\n6 1 1 1 1 2 1 4 1 1 7 4 10 8 1 4 8 2 8 Output 1 2 2 10 5 9 Note In the first\nexample, Tanya can eat candies for one day only. She can eat any pair of\ncandies this day because all of them have different colors. In the second\nexample, Tanya can eat candies for two days. For example, she can eat red and\ngreen candies on the first day, and green and blue candies on the second day.\nIn the third example, Tanya can eat candies for two days. For example, she can\neat red and green candies on the first day, and red and blue candies on the\nsecond day. Note, that two red candies will remain uneaten.\n\n",
        "cf_contest_id": 1263,
        "cf_index": "A",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1 1 1\r\n1 2 1\r\n4 1 1\r\n7 4 10\r\n8 1 4\r\n8 2 8\r\n",
                "1\r\n2\r\n2\r\n10\r\n5\r\n9\r\n"
            ]
        ],
        "private_cases": []
    }
]