[
    {
        "name": "Volleyball",
        "description": "Petya loves volleyball very much. One day he was running late for a volleyball\nmatch. Petya hasn't bought his own car yet, that's why he had to take a taxi.\nThe city has n junctions, some of which are connected by two-way roads. The\nlength of each road is defined by some positive integer number of meters; the\nroads can have different lengths. Initially each junction has exactly one taxi\nstanding there. The taxi driver from the i-th junction agrees to drive Petya\n(perhaps through several intermediate junctions) to some other junction if the\ntravel distance is not more than ti meters. Also, the cost of the ride doesn't\ndepend on the distance and is equal to ci bourles. Taxis can't stop in the\nmiddle of a road. Each taxi can be used no more than once. Petya can catch\ntaxi only in the junction, where it stands initially. At the moment Petya is\nlocated on the junction x and the volleyball stadium is on the junction y.\nDetermine the minimum amount of money Petya will need to drive to the stadium.\nInput The first line contains two integers n and m (1 \u2264 n \u2264 1000, 0 \u2264 m \u2264\n1000). They are the number of junctions and roads in the city correspondingly.\nThe junctions are numbered from 1 to n, inclusive. The next line contains two\nintegers x and y (1 \u2264 x, y \u2264 n). They are the numbers of the initial and final\njunctions correspondingly. Next m lines contain the roads' description. Each\nroad is described by a group of three integers ui, vi, wi (1 \u2264 ui, vi \u2264 n, 1 \u2264\nwi \u2264 10^9) \u2014 they are the numbers of the junctions connected by the road and\nthe length of the road, correspondingly. The next n lines contain n pairs of\nintegers ti and ci (1 \u2264 ti, ci \u2264 10^9), which describe the taxi driver that\nwaits at the i-th junction \u2014 the maximum distance he can drive and the drive's\ncost. The road can't connect the junction with itself, but between a pair of\njunctions there can be more than one road. All consecutive numbers in each\nline are separated by exactly one space character. Output If taxis can't drive\nPetya to the destination point, print \"-1\" (without the quotes). Otherwise,\nprint the drive's minimum cost. Please do not use the \nread or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams\nor the \n7 2 1 2 7 7 Output 9 Note An optimal way \u2014 ride from the junction 1 to 2 (via\njunction 4), then from 2 to 3. It costs 7+2=9 bourles.\n\n",
        "cf_contest_id": 95,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 4\r\n1 3\r\n1 2 3\r\n1 4 1\r\n2 4 1\r\n2 3 5\r\n2 7\r\n7 2\r\n1 2\r\n7 7\r\n",
                "9\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 3\r\n1 3\r\n1 2 2\r\n1 3 3\r\n3 2 1\r\n2 7\r\n2 7\r\n3 6\r\n",
                "14\r\n"
            ],
            [
                "3 1\r\n1 3\r\n1 2 2\r\n2 7\r\n2 7\r\n3 6\r\n",
                "-1\r\n"
            ],
            [
                "3 2\r\n3 3\r\n1 2 2\r\n1 3 3\r\n2 7\r\n2 7\r\n3 7\r\n",
                "0\r\n"
            ],
            [
                "2 2\r\n1 2\r\n1 2 3\r\n1 2 2\r\n2 7\r\n3 2\r\n",
                "7\r\n"
            ],
            [
                "1 0\r\n1 1\r\n74 47\r\n",
                "0\r\n"
            ],
            [
                "5 5\r\n1 3\r\n1 3 3\r\n5 1 6\r\n4 3 8\r\n1 3 3\r\n5 2 4\r\n1 2\r\n4 1\r\n2 5\r\n5 2\r\n1 2\r\n",
                "-1\r\n"
            ],
            [
                "7 4\r\n3 4\r\n6 2 7\r\n6 1 4\r\n4 3 5\r\n3 6 4\r\n1 6\r\n7 3\r\n3 6\r\n6 5\r\n3 7\r\n4 4\r\n1 4\r\n",
                "-1\r\n"
            ],
            [
                "5 5\r\n4 5\r\n1 4 8\r\n4 2 4\r\n4 1 3\r\n3 1 9\r\n4 5 4\r\n2 7\r\n2 7\r\n5 1\r\n6 3\r\n3 2\r\n",
                "3\r\n"
            ],
            [
                "5 5\r\n5 4\r\n2 4 10\r\n2 4 7\r\n3 1 7\r\n2 4 2\r\n5 3 9\r\n6 17\r\n2 4\r\n3 12\r\n7 18\r\n2 5\r\n",
                "-1\r\n"
            ],
            [
                "4 7\r\n3 4\r\n2 3 5\r\n3 2 9\r\n4 1 9\r\n3 2 1\r\n3 1 2\r\n2 3 6\r\n1 2 8\r\n2 2\r\n5 3\r\n2 1\r\n1 5\r\n",
                "-1\r\n"
            ],
            [
                "7 14\r\n7 5\r\n1 3 15\r\n2 1 10\r\n1 3 5\r\n2 4 9\r\n5 4 19\r\n1 3 11\r\n5 1 1\r\n2 4 5\r\n2 3 11\r\n3 2 10\r\n3 4 18\r\n5 1 18\r\n6 2 5\r\n5 6 2\r\n3 6\r\n6 7\r\n9 1\r\n3 6\r\n1 1\r\n9 4\r\n9 8\r\n",
                "-1\r\n"
            ],
            [
                "7 15\r\n5 5\r\n3 4 6\r\n7 4 3\r\n7 2 8\r\n2 5 2\r\n7 2 8\r\n5 2 9\r\n3 1 7\r\n1 2 4\r\n7 1 8\r\n7 5 7\r\n2 4 2\r\n4 3 9\r\n7 4 2\r\n5 4 8\r\n7 2 8\r\n15 4\r\n18 18\r\n6 8\r\n16 5\r\n11 1\r\n5 3\r\n18 4\r\n",
                "0\r\n"
            ],
            [
                "8 20\r\n8 4\r\n6 3 1\r\n3 4 4\r\n5 2 2\r\n3 6 3\r\n5 8 7\r\n6 2 7\r\n8 6 4\r\n6 4 5\r\n4 2 5\r\n5 3 3\r\n5 7 3\r\n8 1 6\r\n2 4 3\r\n6 8 5\r\n1 8 6\r\n8 2 7\r\n8 2 3\r\n1 6 7\r\n8 7 3\r\n6 3 6\r\n2 2\r\n5 9\r\n1 9\r\n4 7\r\n1 8\r\n4 8\r\n9 7\r\n9 3\r\n",
                "3\r\n"
            ],
            [
                "8 20\r\n8 2\r\n1 7 5\r\n3 2 3\r\n2 7 6\r\n6 5 6\r\n4 8 5\r\n7 8 4\r\n1 6 2\r\n7 4 3\r\n4 3 1\r\n6 7 5\r\n4 2 4\r\n2 8 7\r\n6 2 2\r\n2 3 4\r\n3 7 3\r\n7 8 4\r\n5 4 2\r\n7 1 1\r\n5 7 3\r\n4 3 7\r\n4 4\r\n2 7\r\n3 5\r\n3 1\r\n3 5\r\n1 5\r\n11 4\r\n10 5\r\n",
                "5\r\n"
            ],
            [
                "9 20\r\n5 1\r\n8 9 3\r\n1 8 6\r\n5 6 3\r\n2 1 4\r\n7 1 6\r\n1 4 4\r\n3 2 4\r\n5 6 4\r\n3 9 6\r\n6 2 3\r\n9 1 7\r\n1 7 1\r\n1 3 3\r\n8 4 7\r\n7 1 7\r\n6 9 3\r\n5 8 3\r\n9 4 5\r\n6 9 1\r\n6 2 6\r\n1 7\r\n1 3\r\n6 1\r\n1 2\r\n6 1\r\n2 2\r\n4 7\r\n4 5\r\n4 1\r\n",
                "-1\r\n"
            ],
            [
                "10 21\r\n9 5\r\n5 2 6\r\n1 9 7\r\n6 2 7\r\n8 10 2\r\n7 2 1\r\n6 9 6\r\n10 9 4\r\n2 10 2\r\n10 8 4\r\n10 1 7\r\n9 1 7\r\n1 8 5\r\n10 9 7\r\n7 5 3\r\n2 10 6\r\n4 7 3\r\n10 5 6\r\n5 10 4\r\n6 9 2\r\n2 3 6\r\n1 9 3\r\n10 6\r\n7 12\r\n13 3\r\n17 4\r\n18 17\r\n1 9\r\n16 16\r\n12 13\r\n1 10\r\n6 15\r\n",
                "-1\r\n"
            ],
            [
                "14 20\r\n7 2\r\n12 2 17\r\n13 3 8\r\n6 8 3\r\n14 4 16\r\n13 5 17\r\n7 14 7\r\n11 10 6\r\n12 4 16\r\n6 11 7\r\n2 13 12\r\n13 2 18\r\n2 10 12\r\n13 12 1\r\n12 5 4\r\n9 4 16\r\n7 6 7\r\n2 3 15\r\n4 14 1\r\n13 5 3\r\n10 9 3\r\n4 6\r\n4 5\r\n5 3\r\n2 6\r\n2 4\r\n1 2\r\n4 7\r\n2 2\r\n6 1\r\n1 1\r\n6 5\r\n7 7\r\n3 4\r\n2 6\r\n",
                "-1\r\n"
            ],
            [
                "15 29\r\n6 6\r\n7 12 7\r\n11 3 7\r\n4 5 18\r\n13 9 18\r\n3 8 12\r\n6 1 7\r\n4 1 4\r\n12 5 18\r\n10 8 15\r\n2 10 1\r\n9 7 11\r\n2 4 10\r\n2 14 3\r\n15 12 14\r\n1 13 8\r\n11 4 1\r\n15 11 2\r\n1 5 9\r\n5 2 5\r\n9 10 5\r\n15 2 17\r\n11 5 1\r\n14 15 14\r\n10 1 16\r\n15 9 2\r\n13 15 6\r\n13 5 1\r\n7 12 6\r\n12 5 13\r\n8 26\r\n35 17\r\n16 14\r\n12 13\r\n21 1\r\n31 9\r\n7 24\r\n11 31\r\n29 5\r\n16 22\r\n29 7\r\n30 20\r\n36 3\r\n26 22\r\n37 6\r\n",
                "0\r\n"
            ],
            [
                "5 0\r\n2 4\r\n1 2\r\n6 9\r\n4 585\r\n6 9\r\n7 4\r\n",
                "-1\r\n"
            ],
            [
                "5 8\r\n1 3\r\n1 2 1\r\n1 3 3\r\n1 5 1\r\n1 4 2\r\n5 4 3\r\n3 5 2\r\n2 3 8\r\n1 3 2\r\n2 7\r\n10 3\r\n4 7\r\n2 1\r\n1 1\r\n",
                "7\r\n"
            ],
            [
                "5 7\r\n1 3\r\n1 2 1\r\n1 3 3\r\n1 5 1\r\n1 4 2\r\n5 4 3\r\n3 5 2\r\n2 3 8\r\n2 7\r\n10 3\r\n4 7\r\n2 1\r\n1 1\r\n",
                "10\r\n"
            ],
            [
                "7 5\r\n6 7\r\n1 3 1000000000\r\n2 7 999999999\r\n5 7 123456789\r\n1 5 148879589\r\n5 4 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n999999999 145785965\r\n1000000000 1000000000\r\n1000000000 1\r\n123456789 123568591\r\n1000000000 1000000000\r\n",
                "-1\r\n"
            ],
            [
                "7 8\r\n6 7\r\n1 3 1000000000\r\n1 6 1000000000\r\n1 2 1000000000\r\n6 2 1000000000\r\n2 5 1000000000\r\n5 7 1000000000\r\n4 7 1\r\n3 4 1000000000\r\n1000000000 100000000\r\n999999999 1\r\n1000000000 10000000\r\n1000000000 10000000\r\n1000000000 128\r\n1000000000 10000000\r\n1000000000 1000000000\r\n",
                "130000000\r\n"
            ],
            [
                "7 8\r\n6 7\r\n1 3 1000000000\r\n1 6 1000000000\r\n1 2 1000000000\r\n6 2 1000000000\r\n2 5 1000000000\r\n5 7 1000000000\r\n4 7 1\r\n3 4 999999999\r\n1000000000 100000000\r\n999999999 1\r\n999999999 10000000\r\n1000000000 10000000\r\n1000000000 128\r\n1000000000 10000000\r\n1000000000 1000000000\r\n",
                "130000000\r\n"
            ],
            [
                "7 8\r\n1 7\r\n1 3 1000000000\r\n1 6 1000000000\r\n1 2 1000000000\r\n6 2 1000000000\r\n2 5 1000000000\r\n5 7 1000000000\r\n4 7 1\r\n3 4 999999999\r\n1000000000 100000000\r\n999999999 1\r\n999999999 10000000\r\n1000000000 10000000\r\n1000000000 128\r\n1000000000 10000000\r\n1000000000 1000000000\r\n",
                "120000000\r\n"
            ],
            [
                "2 1\r\n1 2\r\n1 2 1\r\n1 999999998\r\n1 999999998\r\n",
                "999999998\r\n"
            ],
            [
                "3 3\r\n1 3\r\n2 1 1\r\n1 2 1000000000\r\n1 2 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n",
                "-1\r\n"
            ],
            [
                "3 3\r\n1 2\r\n2 1 1\r\n1 2 1000000000\r\n1 2 1000000000\r\n10000000 1000000000\r\n10000000 1000000000\r\n10000000 1000000000\r\n",
                "1000000000\r\n"
            ],
            [
                "3 3\r\n1 2\r\n2 1 1000000000\r\n1 2 1000000000\r\n1 2 1000000000\r\n10000000 1000000000\r\n10000000 1000000000\r\n10000000 1000000000\r\n",
                "-1\r\n"
            ]
        ]
    }
]