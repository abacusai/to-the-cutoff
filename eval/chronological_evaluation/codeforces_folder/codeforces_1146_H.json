[
    {
        "name": "Satanic Panic",
        "description": "You are given a set of \n    n\n points in a 2D plane. No three points are\ncollinear. A pentagram is a set of \n    5\n points \n    A,B,C,D,E\n that can be\narranged as follows. Note the length of the line segments don't matter, only\nthat those particular intersections exist. Count the number of ways to choose\n\n    5\n points from the given set that form a pentagram. Input The first line\ncontains an integer \n    n\n (\n    5 \n    \u2264 n \n    \u2264 300\n) \u2014 the number of\npoints. Each of the next \n    n\n lines contains two integers \n    x_i, y_i\n\n(\n    -10^6 \n    \u2264 x_i,y_i \n    \u2264 10^6\n) \u2014 the coordinates of the \n    i\n-th\npoint. It is guaranteed that no three points are collinear. Output Print a\nsingle integer, the number of sets of \n    5\n points that form a pentagram.\nExamples Input 5 0 0 0 2 2 0 2 2 1 3 Output 1 Input 5 0 0 4 0 0 4 4 4 2 3\nOutput 0 Input 10 841746 527518 595261 331297 -946901 129987 670374 -140388\n-684770 309555 -302589 415564 -387435 613331 -624940 -95922 945847 -199224\n24636 -565799 Output 85 Note A picture of the first sample: A picture of the\nsecond sample: A picture of the third sample:\n\n",
        "cf_contest_id": 1146,
        "cf_index": "H",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "geometry"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n0 0\r\n0 2\r\n2 0\r\n2 2\r\n1 3\r\n",
                "1\r\n"
            ],
            [
                "5\r\n0 0\r\n4 0\r\n0 4\r\n4 4\r\n2 3\r\n",
                "0\r\n"
            ],
            [
                "10\r\n841746 527518\r\n595261 331297\r\n-946901 129987\r\n670374 -140388\r\n-684770 309555\r\n-302589 415564\r\n-387435 613331\r\n-624940 -95922\r\n945847 -199224\r\n24636 -565799\r\n",
                "85\r\n"
            ]
        ],
        "private_cases": [
            [
                "11\r\n838639 270856\r\n929121 359790\r\n704217 233383\r\n-187632 328488\r\n-22847 520353\r\n653545 373822\r\n-38674 810464\r\n61566 813177\r\n945100 -264059\r\n-522422 975663\r\n-833384 778013\r\n",
                "164\r\n"
            ],
            [
                "12\r\n-199320 -83881\r\n-638945 388283\r\n383704 -628369\r\n-108859 727661\r\n569372 800854\r\n574827 360450\r\n-655062 -964033\r\n-315151 -277725\r\n-118869 -300523\r\n-104331 -448024\r\n-657922 986234\r\n-456379 -810222\r\n",
                "217\r\n"
            ],
            [
                "13\r\n762722 596234\r\n-305084 -646448\r\n34821 411806\r\n67987 161685\r\n-838409 46504\r\n-538744 -646441\r\n-236598 -766900\r\n371355 631374\r\n-49913 599791\r\n313760 156661\r\n-384385 257678\r\n640382 -540258\r\n-783943 -157499\r\n",
                "532\r\n"
            ],
            [
                "14\r\n-275237 311201\r\n126850 416897\r\n-314063 584906\r\n-888093 630561\r\n788662 257302\r\n417390 276966\r\n-852985 493457\r\n-5362 505621\r\n-50659 563328\r\n-233297 732975\r\n854300 465900\r\n673919 -172219\r\n-999050 804373\r\n301940 -981761\r\n",
                "547\r\n"
            ],
            [
                "15\r\n-278344 -43536\r\n460711 445389\r\n400277 -276846\r\n-711246 -970267\r\n-619119 537803\r\n338671 235223\r\n530628 690590\r\n681144 351497\r\n885372 -438285\r\n-780355 274436\r\n92985 -291028\r\n707456 -839033\r\n-179305 -331830\r\n823501 -610123\r\n325137 900137\r\n",
                "961\r\n"
            ]
        ]
    }
]