[
    {
        "name": "Keshi Is Throwing a Party",
        "description": "Keshi is throwing a party and he wants everybody in the party to be happy. He\nhas \n    n\n friends. His \n    i\n-th friend has \n    i\n dollars. If you invite\nthe \n    i\n-th friend to the party, he will be happy only if at most \n    a_i\n\npeople in the party are strictly richer than him and at most \n    b_i\n people\nare strictly poorer than him. Keshi wants to invite as many people as\npossible. Find the maximum number of people he can invite to the party so that\nevery invited person would be happy. Input The first line contains a single\ninteger \n    t\n \n    (1\n    \u2264 t\n    \u2264 10^4)\n \u2014 the number of test cases. The\ndescription of the test cases follows. The first line of each test case\ncontains a single integer \n    n\n \n    (1\n    \u2264 n\n    \u2264 2 \n    \u00b7 10^5)\n \u2014 the\nnumber of Keshi's friends. The \n    i\n-th of the following \n    n\n lines\ncontains two integers \n    a_i\n and \n    b_i\n \n    (0 \n    \u2264 a_i, b_i < n)\n. It\nis guaranteed that the sum of \n    n\n over all test cases doesn't exceed \n    2\n    \n    \u00b7 10^5\n. Output For each test case print the maximum number of people\nKeshi can invite. Example Input 3 3 1 2 2 1 1 1 2 0 0 0 1 2 1 0 0 1 Output 2 1\n2 Note In the first test case, he invites the first and the second person. If\nhe invites all of them, the third person won't be happy because there will be\nmore than \n    1\n person poorer than him.\n\n",
        "cf_contest_id": 1610,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n1 2\r\n2 1\r\n1 1\r\n2\r\n0 0\r\n0 1\r\n2\r\n1 0\r\n0 1\r\n",
                "2\r\n1\r\n2\r\n"
            ]
        ],
        "private_cases": []
    }
]