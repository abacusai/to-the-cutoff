[
    {
        "name": "Chladni Figure",
        "description": "Inaka has a disc, the circumference of which is \n    n\n units. The\ncircumference is equally divided by \n    n\n points numbered clockwise from\n\n    1\n to \n    n\n, such that points \n    i\n and \n    i + 1\n (\n    1 \n    \u2264 i <\n    n\n) are adjacent, and so are points \n    n\n and \n    1\n. There are \n    m\n\nstraight segments on the disc, the endpoints of which are all among the\naforementioned \n    n\n points. Inaka wants to know if her image is\nrotationally symmetrical, i.e. if there is an integer \n    k\n (\n    1 \n    \u2264 k <\n    n\n), such that if all segments are rotated clockwise around the center of\nthe circle by \n    k\n units, the new image will be the same as the original\none. Input The first line contains two space-separated integers \n    n\n and\n\n    m\n (\n    2 \n    \u2264 n \n    \u2264 100\n     000\n, \n    1 \n    \u2264 m \n    \u2264\n    200\n     000\n) \u2014 the number of points and the number of segments,\nrespectively. The \n    i\n-th of the following \n    m\n lines contains two\nspace-separated integers \n    a_i\n and \n    b_i\n (\n    1 \n    \u2264 a_i, b_i \n    \u2264\n    n\n, \n    a_i \n    \u2260 b_i\n) that describe a segment connecting points\n\n    a_i\n and \n    b_i\n. It is guaranteed that no segments coincide. Output\nOutput one line \u2014 \"Yes\" if the image is rotationally symmetrical, and \"No\"\notherwise (both excluding quotation marks). You can output each letter in any\ncase (upper or lower). Examples Input 12 6 1 3 3 7 5 7 7 11 9 11 11 3 Output\nYes Input 9 6 4 5 5 6 7 8 8 9 1 2 2 3 Output Yes Input 10 3 1 2 3 2 7 2 Output\nNo Input 10 2 1 6 2 7 Output Yes Note The first two examples are illustrated\nbelow. Both images become the same as their respective original ones after a\nclockwise rotation of \n    120\n degrees around the center.\n\n",
        "cf_contest_id": 1147,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "strings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "12 6\r\n1 3\r\n3 7\r\n5 7\r\n7 11\r\n9 11\r\n11 3\r\n",
                "Yes"
            ],
            [
                "9 6\r\n4 5\r\n5 6\r\n7 8\r\n8 9\r\n1 2\r\n2 3\r\n",
                "Yes"
            ],
            [
                "10 3\r\n1 2\r\n3 2\r\n7 2\r\n",
                "No"
            ],
            [
                "10 2\r\n1 6\r\n2 7\r\n",
                "Yes"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n2 1\r\n",
                "Yes"
            ],
            [
                "7 16\r\n7 1\r\n7 3\r\n4 1\r\n7 5\r\n5 6\r\n4 7\r\n5 1\r\n4 5\r\n6 1\r\n2 4\r\n4 3\r\n6 4\r\n3 2\r\n6 2\r\n2 1\r\n6 7\r\n",
                "No"
            ],
            [
                "50 25\r\n12 14\r\n28 30\r\n12 10\r\n18 16\r\n34 32\r\n4 6\r\n2 4\r\n32 30\r\n6 8\r\n20 22\r\n26 24\r\n44 42\r\n36 34\r\n42 40\r\n48 46\r\n44 46\r\n50 2\r\n10 8\r\n24 22\r\n38 36\r\n20 18\r\n40 38\r\n14 16\r\n48 50\r\n26 28\r\n",
                "Yes"
            ],
            [
                "12 14\r\n7 11\r\n4 8\r\n7 3\r\n7 6\r\n11 3\r\n7 8\r\n2 10\r\n6 2\r\n9 1\r\n6 10\r\n9 5\r\n12 4\r\n8 12\r\n5 1\r\n",
                "No"
            ],
            [
                "72 38\r\n11 25\r\n59 45\r\n35 21\r\n41 55\r\n45 31\r\n41 27\r\n17 3\r\n33 19\r\n47 61\r\n31 17\r\n63 49\r\n11 69\r\n65 7\r\n39 25\r\n15 1\r\n55 24\r\n13 71\r\n23 9\r\n9 67\r\n7 21\r\n51 65\r\n63 5\r\n37 51\r\n55 69\r\n19 5\r\n29 43\r\n47 33\r\n59 1\r\n27 13\r\n57 71\r\n29 15\r\n43 57\r\n53 39\r\n49 35\r\n19 60\r\n23 37\r\n3 61\r\n67 53\r\n",
                "Yes"
            ],
            [
                "99 36\r\n92 83\r\n20 29\r\n95 86\r\n74 65\r\n59 68\r\n74 83\r\n2 11\r\n98 8\r\n86 77\r\n38 29\r\n5 95\r\n80 89\r\n53 44\r\n89 98\r\n68 77\r\n2 92\r\n26 35\r\n26 17\r\n65 56\r\n59 50\r\n38 47\r\n56 47\r\n35 44\r\n32 23\r\n62 71\r\n21 5\r\n38 54\r\n14 23\r\n8 17\r\n50 41\r\n14 5\r\n71 80\r\n20 11\r\n32 41\r\n87 71\r\n53 62\r\n",
                "Yes"
            ],
            [
                "12 7\r\n12 2\r\n4 6\r\n3 4\r\n10 9\r\n9 5\r\n8 10\r\n6 8\r\n",
                "No"
            ],
            [
                "30000 28\r\n10601 1119\r\n11119 20601\r\n9493 25771\r\n14351 4869\r\n13101 3619\r\n23101 13619\r\n29869 9351\r\n6119 15601\r\n3101 23619\r\n1851 22369\r\n11851 2369\r\n8619 18101\r\n19579 20882\r\n18619 28101\r\n16851 7369\r\n8101 28619\r\n24869 4351\r\n24351 14869\r\n27369 6851\r\n9869 19351\r\n5601 26119\r\n3976 21301\r\n21851 12369\r\n25601 16119\r\n24493 10771\r\n26851 17369\r\n601 21119\r\n29351 19869\r\n",
                "No"
            ],
            [
                "6 3\r\n1 5\r\n2 6\r\n3 4\r\n",
                "No"
            ]
        ]
    }
]