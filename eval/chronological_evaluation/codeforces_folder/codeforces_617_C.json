[
    {
        "name": "Watering Flowers",
        "description": "A flowerbed has many flowers and two fountains. You can adjust the water\npressure and set any values r1(r1 \u2265 0) and r2(r2 \u2265 0), giving the distances at\nwhich the water is spread from the first and second fountain respectively. You\nhave to set such r1 and r2 that all the flowers are watered, that is, for each\nflower, the distance between the flower and the first fountain doesn't exceed\nr1, or the distance to the second fountain doesn't exceed r2. It's OK if some\nflowers are watered by both fountains. You need to decrease the amount of\nwater you need, that is set such r1 and r2 that all the flowers are watered\nand the r1^2 + r2^2 is minimum possible. Find this minimum value. Input The\nfirst line of the input contains integers n, x1, y1, x2, y2 (1 \u2264 n \u2264 2000, -\n10^7 \u2264 x1, y1, x2, y2 \u2264 10^7) \u2014 the number of flowers, the coordinates of the\nfirst and the second fountain. Next follow n lines. The i-th of these lines\ncontains integers xi and yi ( - 10^7 \u2264 xi, yi \u2264 10^7) \u2014 the coordinates of the\ni-th flower. It is guaranteed that all n + 2 points in the input are distinct.\nOutput Print the minimum possible value r1^2 + r2^2. Note, that in this\nproblem optimal answer is always integer. Examples Input 2 -1 0 5 3 0 2 5 2\nOutput 6 Input 4 0 0 5 0 9 4 8 3 -1 0 1 4 Output 33 Note The first sample is\n(r1^2 = 5, r2^2 = 1): The second sample is (r1^2 = 1, r2^2 = 32):\n\n",
        "cf_contest_id": 617,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 -1 0 5 3\r\n0 2\r\n5 2\r\n",
                "6\r\n"
            ],
            [
                "4 0 0 5 0\r\n9 4\r\n8 3\r\n-1 0\r\n1 4\r\n",
                "33\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 -6 -4 0 10\r\n-7 6\r\n-9 7\r\n-5 -1\r\n-2 1\r\n-8 10\r\n",
                "100\r\n"
            ],
            [
                "10 -68 10 87 22\r\n30 89\r\n82 -97\r\n-52 25\r\n76 -22\r\n-20 95\r\n21 25\r\n2 -3\r\n45 -7\r\n-98 -56\r\n-15 16\r\n",
                "22034\r\n"
            ],
            [
                "1 -10000000 -10000000 -10000000 -9999999\r\n10000000 10000000\r\n",
                "799999960000001\r\n"
            ]
        ]
    }
]