[
    {
        "name": "MUH and Important Things",
        "description": "It's time polar bears Menshykov and Uslada from the zoo of St. Petersburg and\nelephant Horace from the zoo of Kiev got down to business. In total, there are\nn tasks for the day and each animal should do each of these tasks. For each\ntask, they have evaluated its difficulty. Also animals decided to do the tasks\nin order of their difficulty. Unfortunately, some tasks can have the same\ndifficulty, so the order in which one can perform the tasks may vary.\nMenshykov, Uslada and Horace ask you to deal with this nuisance and come up\nwith individual plans for each of them. The plan is a sequence describing the\norder in which an animal should do all the n tasks. Besides, each of them\nwants to have its own unique plan. Therefore three plans must form three\ndifferent sequences. You are to find the required plans, or otherwise deliver\nthe sad news to them by stating that it is impossible to come up with three\ndistinct plans for the given tasks. Input The first line contains integer n (1\n\u2264 n \u2264 2000) \u2014 the number of tasks. The second line contains n integers h1, h2,\n..., hn (1 \u2264 hi \u2264 2000), where hi is the difficulty of the i-th task. The\nlarger number hi is, the more difficult the i-th task is. Output In the first\nline print \"YES\" (without the quotes), if it is possible to come up with three\ndistinct plans of doing the tasks. Otherwise print in the first line \"NO\"\n(without the quotes). If three desired plans do exist, print in the second\nline n distinct integers that represent the numbers of the tasks in the order\nthey are done according to the first plan. In the third and fourth line print\ntwo remaining plans in the same form. If there are multiple possible answers,\nyou can print any of them. Examples Input 4 1 3 3 1 Output YES 1 4 2 3 4 1 2 3\n4 1 3 2 Input 5 2 4 1 4 8 Output NO Note In the first sample the difficulty of\nthe tasks sets one limit: tasks 1 and 4 must be done before tasks 2 and 3.\nThat gives the total of four possible sequences of doing tasks : [1, 4, 2, 3],\n[4, 1, 2, 3], [1, 4, 3, 2], [4, 1, 3, 2]. You can print any three of them in\nthe answer. In the second sample there are only two sequences of tasks that\nmeet the conditions \u2014 [3, 1, 2, 4, 5] and [3, 1, 4, 2, 5]. Consequently, it is\nimpossible to make three distinct sequences of tasks.\n\n",
        "cf_contest_id": 471,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 3 3 1\r\n",
                "YES\r\n4 1 2 3\r\n1 4 2 3\r\n1 4 3 2\r\n"
            ],
            [
                "5\r\n2 4 1 4 8\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "8\r\n1 5 4 12 7 2 10 11\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n5 1 2 5 2 4\r\n",
                "YES\r\n2 5 3 6 4 1\r\n2 5 3 6 1 4\r\n2 3 5 6 1 4\r\n"
            ],
            [
                "1\r\n1083\r\n",
                "NO\r\n"
            ],
            [
                "10\r\n5 5 5 5 5 5 5 5 5 5\r\n",
                "YES\r\n8 3 10 6 7 1 4 5 9 2\r\n8 6 10 4 5 3 9 1 2 7\r\n1 9 10 2 3 7 8 5 4 6\r\n"
            ],
            [
                "6\r\n3 8 3 9 3 10\r\n",
                "YES\r\n5 1 3 2 4 6\r\n1 5 3 2 4 6\r\n1 3 5 2 4 6\r\n"
            ],
            [
                "19\r\n895 1302 724 952 340 952 939 1302 724 952 939 340 340 1844 770 976 435 1302 1302\r\n",
                "YES\r\n12 13 5 17 3 9 15 1 11 7 6 4 10 16 2 18 8 19 14\r\n13 5 12 17 9 3 15 1 7 11 10 4 6 16 19 8 18 2 14\r\n12 5 13 17 3 9 15 1 11 7 4 6 10 16 8 19 18 2 14\r\n"
            ],
            [
                "7\r\n766 766 1477 766 107 1774 990\r\n",
                "YES\r\n5 1 4 2 7 3 6\r\n5 2 1 4 7 3 6\r\n5 2 4 1 7 3 6\r\n"
            ],
            [
                "11\r\n1552 1010 1552 1248 1550 388 1541 1010 613 1821 388\r\n",
                "YES\r\n11 6 9 8 2 4 7 5 1 3 10\r\n11 6 9 2 8 4 7 5 1 3 10\r\n6 11 9 2 8 4 7 5 3 1 10\r\n"
            ],
            [
                "15\r\n688 848 1462 688 12 1336 1336 1113 1462 1074 659 1384 12 12 1074\r\n",
                "YES\r\n5 14 13 11 1 4 2 10 15 8 7 6 12 3 9\r\n13 5 14 11 1 4 2 10 15 8 7 6 12 3 9\r\n14 5 13 11 1 4 2 15 10 8 6 7 12 9 3\r\n"
            ],
            [
                "19\r\n65 117 159 402 117 402 65 1016 1850 1265 854 159 347 1501 117 805 854 117 1265\r\n",
                "YES\r\n1 7 2 15 5 18 3 12 13 6 4 16 11 17 8 10 19 14 9\r\n1 7 2 5 15 18 3 12 13 6 4 16 11 17 8 10 19 14 9\r\n1 7 5 2 18 15 12 3 13 6 4 16 17 11 8 19 10 14 9\r\n"
            ],
            [
                "3\r\n1282 101 420\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n1 1 1\r\n",
                "YES\r\n1 2 3\r\n3 2 1\r\n2 3 1\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n1\r\n",
                "NO\r\n"
            ]
        ]
    }
]