[
    {
        "name": "Misha and Changing Handles",
        "description": "Misha hacked the Codeforces site. Then he decided to let all the users change\ntheir handles. A user can now change his handle any number of times. But each\nnew handle must not be equal to any handle that is already used or that was\nused at some point. Misha has a list of handle change requests. After\ncompleting the requests he wants to understand the relation between the\noriginal and the new handles of the users. Help him to do that. Input The\nfirst line contains integer q (1 \u2264 q \u2264 1000), the number of handle change\nrequests. Next q lines contain the descriptions of the requests, one per line.\nEach query consists of two non-empty strings old and new, separated by a\nspace. The strings consist of lowercase and uppercase Latin letters and\ndigits. Strings old and new are distinct. The lengths of the strings do not\nexceed 20. The requests are given chronologically. In other words, by the\nmoment of a query there is a single person with handle old, and handle new is\nnot used and has not been used by anyone. Output In the first line output the\ninteger n \u2014 the number of users that changed their handles at least once. In\nthe next n lines print the mapping between the old and the new handles of the\nusers. Each of them must contain two strings, old and new, separated by a\nspace, meaning that before the user had handle old, and after all the requests\nare completed, his handle is new. You may output lines in any order. Each user\nwho changes the handle must occur exactly once in this description. Examples\nInput 5 Misha ILoveCodeforces Vasya Petrov Petrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov Petya Ivanov Output 3 Petya Ivanov Misha\nMikeMirzayanov Vasya VasyaPetrov123\n\n",
        "cf_contest_id": 501,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dsu",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\nMisha ILoveCodeforces\r\nVasya Petrov\r\nPetrov VasyaPetrov123\r\nILoveCodeforces MikeMirzayanov\r\nPetya Ivanov\r\n",
                "3\r\nVasya VasyaPetrov123\r\nPetya Ivanov\r\nMisha MikeMirzayanov\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nMisha Vasya\r\n",
                "1\r\nMisha Vasya\r\n"
            ],
            [
                "10\r\na b\r\nb c\r\nc d\r\nd e\r\ne f\r\nf g\r\ng h\r\nh i\r\ni j\r\nj k\r\n",
                "1\r\na k\r\n"
            ],
            [
                "5\r\n123abc abc123\r\nabc123 a1b2c3\r\na1b2c3 1A2B3C\r\n1 2\r\n2 Misha\r\n",
                "2\r\n123abc 1A2B3C\r\n1 Misha\r\n"
            ],
            [
                "8\r\nM F\r\nS D\r\n1 2\r\nF G\r\n2 R\r\nD Q\r\nQ W\r\nW e\r\n",
                "3\r\n1 R\r\nM G\r\nS e\r\n"
            ],
            [
                "17\r\nn5WhQ VCczxtxKwFio5U\r\nVCczxtxKwFio5U 1WMVGA17cd1LRcp4r\r\n1WMVGA17cd1LRcp4r SJl\r\nSJl D8bPUoIft5v1\r\nNAvvUgunbPZNCL9ZY2 jnLkarKYsotz\r\nD8bPUoIft5v1 DnDkHi7\r\njnLkarKYsotz GfjX109HSQ81gFEBJc\r\nGfjX109HSQ81gFEBJc kBJ0zrH78mveJ\r\nkBJ0zrH78mveJ 9DrAypYW\r\nDnDkHi7 3Wkho2PglMDaFQw\r\n3Wkho2PglMDaFQw pOqW\r\n9DrAypYW G3y0cXXGsWAh\r\npOqW yr1Ec\r\nG3y0cXXGsWAh HrmWWg5u4Hsy\r\nyr1Ec GkFeivXjQ01\r\nGkFeivXjQ01 mSsWgbCCZcotV4goiA\r\nHrmWWg5u4Hsy zkCmEV\r\n",
                "2\r\nNAvvUgunbPZNCL9ZY2 zkCmEV\r\nn5WhQ mSsWgbCCZcotV4goiA\r\n"
            ],
            [
                "10\r\nH1nauWCJOImtVqXk gWPMQ9DHv5CtkYp9lwm9\r\nSEj 2knOMLyzr\r\n0v69ijnAc S7d7zGTjmlku01Gv\r\n2knOMLyzr otGmEd\r\nacwr3TfMV7oCIp RUSVFa9TIWlLsd7SB\r\nS7d7zGTjmlku01Gv Gd6ZufVmQnBpi\r\nS1 WOJLpk\r\nWOJLpk Gu\r\nRUSVFa9TIWlLsd7SB RFawatGnbVB\r\notGmEd OTB1zKiOI\r\n",
                "5\r\nacwr3TfMV7oCIp RFawatGnbVB\r\nH1nauWCJOImtVqXk gWPMQ9DHv5CtkYp9lwm9\r\n0v69ijnAc Gd6ZufVmQnBpi\r\nSEj OTB1zKiOI\r\nS1 Gu\r\n"
            ],
            [
                "14\r\nTPdoztSZROpjZe z6F8bYFvnER4V5SP0n\r\n8Aa3PQY3hzHZTPEUz fhrZZPJ3iUS\r\nm9p888KaZAoQaO KNmdRSAlUVn8zXOM0\r\nAO s1VGWTCbHzM\r\ni 4F\r\nfhrZZPJ3iUS j0OVZQF6MvNcKN9xDZFJ\r\nDnlkXtaKNlYEI2ApBuwu DMA9i8ScKRxwhe72a3\r\nj0OVZQF6MvNcKN9xDZFJ DzjmeNqN0H4Teq0Awr\r\n4F wJcdxt1kwqfDeJ\r\nqxXlsa5t RHCL1K6aUyns\r\nr6WYbDaXt hEHw\r\nJ0Usg DKdKMFJ6tK8XA\r\nz6F8bYFvnER4V5SP0n 0alJ\r\nMijh2O6 qic8kXWuR6\r\n",
                "10\r\nMijh2O6 qic8kXWuR6\r\nTPdoztSZROpjZe 0alJ\r\ni wJcdxt1kwqfDeJ\r\n8Aa3PQY3hzHZTPEUz DzjmeNqN0H4Teq0Awr\r\nAO s1VGWTCbHzM\r\nr6WYbDaXt hEHw\r\nm9p888KaZAoQaO KNmdRSAlUVn8zXOM0\r\nqxXlsa5t RHCL1K6aUyns\r\nDnlkXtaKNlYEI2ApBuwu DMA9i8ScKRxwhe72a3\r\nJ0Usg DKdKMFJ6tK8XA\r\n"
            ],
            [
                "14\r\nHAXRxayyf1Dj1F0mT hjR4A8IQMb0nyBtqG\r\nWNuMJa5Jg05qkqZOrL noNkWXrSidHGwxgbQ\r\nmOitVy6W52s0FENMz6 oLUkLNfojssvLvb1t\r\nhjR4A8IQMb0nyBtqG oA7uBFu4Oo\r\noA7uBFu4Oo M450\r\nM450 LXEzO4\r\noLUkLNfojssvLvb1t YG5\r\nnoNkWXrSidHGwxgbQ L\r\nL YBWzu4W\r\nYBWzu4W ML\r\nML scVZE9m8JnH\r\nLXEzO4 Ne0oBPY0Iy\r\nscVZE9m8JnH GXhznv\r\nYG5 UY08abilYF1LaXj49hQ\r\n",
                "3\r\nWNuMJa5Jg05qkqZOrL GXhznv\r\nmOitVy6W52s0FENMz6 UY08abilYF1LaXj49hQ\r\nHAXRxayyf1Dj1F0mT Ne0oBPY0Iy\r\n"
            ]
        ]
    }
]