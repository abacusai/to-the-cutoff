[
    {
        "name": "Food Buying",
        "description": "Mishka wants to buy some food in the nearby shop. Initially, he has \n    s\n\nburles on his card. Mishka can perform the following operation any number of\ntimes (possibly, zero): choose some positive integer number \n    1 \n    \u2264 x \n    \u2264\n    s\n, buy food that costs exactly \n    x\n burles and obtain\n\n    \u230a\n    x/10\n    \u230b\n burles as a cashback (in other words,\nMishka spends \n    x\n burles and obtains\n\n    \u230a\n    x/10\n    \u230b\n back). The operation\n\n    \u230a\n    a/b\n    \u230b\n means \n    a\n divided by \n    b\n rounded\ndown. It is guaranteed that you can always buy some food that costs \n    x\n\nfor any possible value of \n    x\n. Your task is to say the maximum number of\nburles Mishka can spend if he buys food optimally. For example, if Mishka has\n\n    s=19\n burles then the maximum number of burles he can spend is \n    21\n.\nFirstly, he can spend \n    x=10\n burles, obtain \n    1\n burle as a cashback.\nNow he has \n    s=10\n burles, so can spend \n    x=10\n burles, obtain \n    1\n\nburle as a cashback and spend it too. You have to answer \n    t\n independent\ntest cases. Input The first line of the input contains one integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The next \n    t\n\nlines describe test cases. Each test case is given on a separate line and\nconsists of one integer \n    s\n (\n    1 \n    \u2264 s \n    \u2264 10^9\n) \u2014 the number of\nburles Mishka initially has. Output For each test case print the answer on it\n\u2014 the maximum number of burles Mishka can spend if he buys food optimally.\nExample Input 6 1 10 19 9876 12345 1000000000 Output 1 11 21 10973 13716\n1111111111\n\n",
        "cf_contest_id": 1296,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1\r\n10\r\n19\r\n9876\r\n12345\r\n1000000000\r\n",
                "1\r\n11\r\n21\r\n10973\r\n13716\r\n1111111111\r\n"
            ]
        ],
        "private_cases": []
    }
]