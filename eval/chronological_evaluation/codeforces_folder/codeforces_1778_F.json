[
    {
        "name": "Maximizing Root",
        "description": "You are given a rooted tree consisting of \n    n\n vertices numbered from\n\n    1\n to \n    n\n. Vertex \n    1\n is the root of the tree. Each vertex has an\ninteger value. The value of \n    i\n-th vertex is \n    a_i\n. You can do the\nfollowing operation at most \n    k\n times. Choose a vertex \n    v\n that has\nnot been chosen before and an integer \n    x\n such that \n    x\n is a common\ndivisor of the values of all vertices of the subtree of \n    v\n. Multiply by\n\n    x\n the value of each vertex in the subtree of \n    v\n. What is the\nmaximum possible value of the root node \n    1\n after at most \n    k\n\noperations? Formally, you have to maximize the value of \n    a_1\n. A tree is a\nconnected undirected graph without cycles. A rooted tree is a tree with a\nselected vertex, which is called the root. The subtree of a node \n    u\n is\nthe set of all nodes \n    y\n such that the simple path from \n    y\n to the\nroot passes through \n    u\n. Note that \n    u\n is in the subtree of \n    u\n.\nInput The first line contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    50\n     000\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains two integers \n    n\n and\n\n    k\n (\n    2 \n    \u2264 n \n    \u2264 10^5\n, \n    0 \n    \u2264 k \n    \u2264 n\n) \u2014 the number\nof vertices in the tree and the number of operations. The second line contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    1000\n), where \n    a_i\n denotes the value of vertex \n    i\n. Each of the\nnext \n    n - 1\n lines contains two integers \n    u_i\n and \n    v_i\n (\n    1\n    \n    \u2264 u_i, v_i \n    \u2264 n\n, \n    u_i \n    \u2260 v_i\n), denoting the edge of the\ntree between vertices \n    u_i\n and \n    v_i\n. It is guaranteed that the given\nedges form a tree. It is guaranteed that the sum of \n    n\n over all test\ncases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, output\nthe maximum value of the root after performing at most \n    k\n operations.\nExample Input 2 5 2 24 12 24 6 12 1 2 1 3 2 4 2 5 5 3 24 12 24 6 12 1 2 1 3 2\n4 2 5 Output 288 576 Note Both examples have the same tree: For the first test\ncase, you can do two operations as follows: Choose the subtree of vertex\n\n    4\n and \n    x = 2\n. After this operation, the node values become\n\n    24, 12, 24, 12, 12\n    \n    .\n Choose the subtree of vertex \n    1\n and\n\n    x = 12\n. After this operation, the node values become \n    288, 144,\n    288, 144, 144\n    \n    .\n The value of the root is \n    288\n and it is the\nmaximum.For the second test case, you can do three operations as follows:\nChoose the subtree of vertex \n    4\n and \n    x = 2\n. After this operation,\nthe node values become \n    24, 12, 24, 12, 12\n    \n    .\n Choose the subtree\nof vertex \n    2\n and \n    x = 4\n. After this operation, the node values\nbecome \n    24, 48, 24, 48, 48\n    \n    .\n Choose the subtree of vertex\n\n    1\n and \n    x = 24\n. After this operation, the node values become\n\n    576, 1152, 576, 1152, 1152\n    \n    .\n The value of the root is \n    576\n\nand it is the maximum.\n\n",
        "cf_contest_id": 1778,
        "cf_index": "F",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math",
            "number theory",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "2\r\n5 2\r\n24 12 24 6 12\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n5 3\r\n24 12 24 6 12\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n",
                "288\r\n576\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n5 4\r\n650 454 259 79 424\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n",
                "650\r\n"
            ]
        ]
    }
]