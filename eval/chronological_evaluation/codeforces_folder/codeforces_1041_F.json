[
    {
        "name": "Ray in the tube",
        "description": "You are given a tube which is reflective inside represented as two non-\ncoinciding, but parallel to \n    Ox\n lines. Each line has some special integer\npoints \u2014 positions of sensors on sides of the tube. You are going to emit a\nlaser ray in the tube. To do so, you have to choose two integer points \n    A\n\nand \n    B\n on the first and the second line respectively (coordinates can be\nnegative): the point \n    A\n is responsible for the position of the laser, and\nthe point \n    B\n \u2014 for the direction of the laser ray. The laser ray is a ray\nstarting at \n    A\n and directed at \n    B\n which will reflect from the sides\nof the tube (it doesn't matter if there are any sensors at a reflection point\nor not). A sensor will only register the ray if the ray hits exactly at the\nposition of the sensor. Examples of laser rays. Note that image contains two\nexamples. The \n    3\n sensors (denoted by black bold points on the tube sides)\nwill register the blue ray but only \n    2\n will register the red. Calculate\nthe maximum number of sensors which can register your ray if you choose points\n\n    A\n and \n    B\n on the first and the second lines respectively. Input The\nfirst line contains two integers \n    n\n and \n    y_1\n (\n    1 \n    \u2264 n \n    \u2264\n    10^5\n, \n    0 \n    \u2264 y_1 \n    \u2264 10^9\n) \u2014 number of sensors on the first line\nand its \n    y\n coordinate. The second line contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 \n    x\n coordinates of\nthe sensors on the first line in the ascending order. The third line contains\ntwo integers \n    m\n and \n    y_2\n (\n    1 \n    \u2264 m \n    \u2264 10^5\n, \n    y_1 < y_2\n    \n    \u2264 10^9\n) \u2014 number of sensors on the second line and its \n    y\n\ncoordinate. The fourth line contains \n    m\n integers \n    b_1, b_2, \n    \u2026,\n    b_m\n (\n    0 \n    \u2264 b_i \n    \u2264 10^9\n) \u2014 \n    x\n coordinates of the sensors on\nthe second line in the ascending order. Output Print the only integer \u2014 the\nmaximum number of sensors which can register the ray. Example Input 3 1 1 5 6\n1 3 3 Output 3 Note One of the solutions illustrated on the image by pair\n\n    A_2\n and \n    B_2\n.\n\n",
        "cf_contest_id": 1041,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "divide and conquer",
            "dp",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 1\r\n1 5 6\r\n1 3\r\n3\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 0\r\n268435456\r\n2 1\r\n0 536870912\r\n",
                "3\r\n"
            ],
            [
                "2 0\r\n0 2\r\n4 1000000000\r\n0 2 4 6\r\n",
                "4\r\n"
            ],
            [
                "5 999999999\r\n999999996 999999997 999999998 999999999 1000000000\r\n5 1000000000\r\n999999996 999999997 999999998 999999999 1000000000\r\n",
                "5\r\n"
            ],
            [
                "13 968288\r\n0 67108864 134217728 201326592 268435456 335544320 402653184 469762048 536870912 603979776 671088640 738197504 805306368\r\n13 986214\r\n33554432 100663296 167772160 234881024 301989888 369098752 436207616 503316480 570425344 637534208 704643072 771751936 838860800\r\n",
                "26\r\n"
            ],
            [
                "6 94192\r\n0 134217728 268435456 402653184 536870912 671088640\r\n6 435192\r\n67108864 201326592 335544320 469762048 603979776 738197504\r\n",
                "12\r\n"
            ],
            [
                "2 32871\r\n0 268435456\r\n2 244027\r\n134217728 402653184\r\n",
                "4\r\n"
            ],
            [
                "1 828613\r\n0\r\n1 951087\r\n268435456\r\n",
                "2\r\n"
            ],
            [
                "22 369666\r\n1 9 17 25 33 41 49 57 65 73 81 89 97 105 113 121 129 137 145 153 161 169\r\n16 492689\r\n5 9 13 17 21 25 29 33 37 41 45 49 53 57 61 65\r\n",
                "30\r\n"
            ],
            [
                "8 13637560\r\n75803938 118458082 578587112 599074426 675903899 825712388 835922815 876673516\r\n8 823205164\r\n54450960 552515514 586968563 590678437 611812464 705676588 725408561 901537037\r\n",
                "10\r\n"
            ],
            [
                "8 896753688\r\n106089702 120543561 161218905 447312211 764275096 764710792 813135974 841008065\r\n8 933908609\r\n20162935 104158090 483658135 499325847 728277205 735070694 855995285 879244384\r\n",
                "9\r\n"
            ],
            [
                "8 369804408\r\n295549995 297155803 364413607 495086842 522088849 729029685 791692715 987594669\r\n8 773248229\r\n167810330 261639682 321080432 453152328 502142334 643215633 657539609 917625873\r\n",
                "12\r\n"
            ],
            [
                "8 252920536\r\n244638831 495795451 571294469 608283654 824658394 848820488 889026403 989575878\r\n8 536603650\r\n173809980 459083932 618916368 671025009 824972497 845836688 910492805 996913393\r\n",
                "8\r\n"
            ],
            [
                "8 136036664\r\n126269260 262156105 282965964 352160984 697058273 782155472 852153700 917928159\r\n8 683144774\r\n61397867 113538443 319336093 384894230 392472203 597064745 621785013 743973848\r\n",
                "11\r\n"
            ],
            [
                "8 314120088\r\n96023745 125339289 248259794 279673378 308309305 545296057 624420255 846280440\r\n8 567898834\r\n218919064 398609068 402104390 521955395 551024729 612549267 863097158 874451603\r\n",
                "9\r\n"
            ],
            [
                "8 492203512\r\n98566550 171717746 339893791 370819580 755813098 774632721 775762385 997216159\r\n8 780893623\r\n126572826 185519858 200153392 395703045 594904233 795104446 848860665 987834782\r\n",
                "9\r\n"
            ],
            [
                "8 670286936\r\n388336854 391155719 408017710 459915835 583763838 598232267 651837043 677546042\r\n8 739744483\r\n77918488 346255845 684268992 706730425 729280923 764781472 851729309 960597662\r\n",
                "8\r\n"
            ],
            [
                "8 553403064\r\n90389644 110886835 224843533 416499061 494331076 500074828 631337283 827633884\r\n8 657307279\r\n149565245 163218715 233843732 346670915 508274748 782271108 878164651 972834939\r\n",
                "9\r\n"
            ],
            [
                "8 934901355\r\n37124098 77222116 138199181 249214100 487897674 738878092 880827398 954080351\r\n8 945722121\r\n54836744 340149103 518507628 534560545 659693096 807080067 837037908 971967276\r\n",
                "9\r\n"
            ],
            [
                "1 1\r\n1\r\n1 2\r\n1\r\n",
                "2\r\n"
            ],
            [
                "1 1\r\n0\r\n1 2\r\n0\r\n",
                "2\r\n"
            ],
            [
                "1 100\r\n0\r\n1 200\r\n0\r\n",
                "2\r\n"
            ],
            [
                "1 1\r\n1\r\n1 3\r\n1\r\n",
                "2\r\n"
            ],
            [
                "1 2\r\n1\r\n1 3\r\n1\r\n",
                "2\r\n"
            ]
        ]
    }
]