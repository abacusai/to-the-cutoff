[
    {
        "name": "Add Odd or Subtract Even",
        "description": "You are given two positive integers \n    a\n and \n    b\n. In one move, you can\nchange \n    a\n in the following way: Choose any positive odd integer \n    x\n\n(\n    x > 0\n) and replace \n    a\n with \n    a+x\n; choose any positive even\ninteger \n    y\n (\n    y > 0\n) and replace \n    a\n with \n    a-y\n. You can\nperform as many such operations as you want. You can choose the same numbers\n\n    x\n and \n    y\n in different moves. Your task is to find the minimum\nnumber of moves required to obtain \n    b\n from \n    a\n. It is guaranteed that\nyou can always obtain \n    b\n from \n    a\n. You have to answer \n    t\n\nindependent test cases. Input The first line of the input contains one integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. Then \n    t\n\ntest cases follow. Each test case is given as two space-separated integers\n\n    a\n and \n    b\n (\n    1 \n    \u2264 a, b \n    \u2264 10^9\n). Output For each test\ncase, print the answer \u2014 the minimum number of moves required to obtain\n\n    b\n from \n    a\n if you can perform any number of moves described in the\nproblem statement. It is guaranteed that you can always obtain \n    b\n from\n\n    a\n. Example Input 5 2 3 10 10 2 4 7 4 9 3 Output 1 0 2 2 1 Note In the\nfirst test case, you can just add \n    1\n. In the second test case, you don't\nneed to do anything. In the third test case, you can add \n    1\n two times. In\nthe fourth test case, you can subtract \n    4\n and add \n    1\n. In the fifth\ntest case, you can just subtract \n    6\n.\n\n",
        "cf_contest_id": 1311,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 3\r\n10 10\r\n2 4\r\n7 4\r\n9 3\r\n",
                "1\r\n0\r\n2\r\n2\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n19260817 114514\r\n",
                "2\r\n"
            ],
            [
                "1\r\n484887 54\r\n",
                "2\r\n"
            ],
            [
                "1\r\n55678978 55678978\r\n",
                "0\r\n"
            ]
        ]
    }
]