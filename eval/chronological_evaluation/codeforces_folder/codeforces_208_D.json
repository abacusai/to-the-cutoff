[
    {
        "name": "Prizes, Prizes, more Prizes",
        "description": "Vasya, like many others, likes to participate in a variety of sweepstakes and\nlotteries. Now he collects wrappings from a famous chocolate bar \"Jupiter\".\nAccording to the sweepstake rules, each wrapping has an integer written on it\n\u2014 the number of points that the participant adds to his score as he buys the\nbar. After a participant earns a certain number of points, he can come to the\nprize distribution center and exchange the points for prizes. When somebody\ntakes a prize, the prize's cost is simply subtracted from the number of his\npoints. Vasya didn't only bought the bars, he also kept a record of how many\npoints each wrapping cost. Also, he remembers that he always stucks to the\ngreedy strategy \u2014 as soon as he could take at least one prize, he went to the\nprize distribution centre and exchanged the points for prizes. Moreover, if he\ncould choose between multiple prizes, he chose the most expensive one. If\nafter an exchange Vasya had enough points left to get at least one more prize,\nthen he continued to exchange points. The sweepstake has the following prizes\n(the prizes are sorted by increasing of their cost): a mug (costs a points), a\ntowel (costs b points), a bag (costs c points), a bicycle (costs d points), a\ncar (costs e points). Now Vasya wants to recollect what prizes he has\nreceived. You know sequence p1, p2, ..., pn, where pi is the number of points\nVasya got for the i-th bar. The sequence of points is given in the\nchronological order. You also know numbers a, b, c, d, e. Your task is to\nfind, how many prizes Vasya received, what prizes they are and how many points\nhe's got left after all operations are completed. Input The first line\ncontains a single integer n (1 \u2264 n \u2264 50) \u2014 the number of chocolate bar\nwrappings that brought points to Vasya. The second line contains space-\nseparated integers p1, p2, ..., pn (1 \u2264 pi \u2264 10^9). The third line contains 5\nintegers a, b, c, d, e (1 \u2264 a < b < c < d < e \u2264 10^9) \u2014 the prizes' costs.\nOutput Print on the first line 5 integers, separated by a space \u2014 the number\nof mugs, towels, bags, bicycles and cars that Vasya has got, respectively. On\nthe second line print a single integer \u2014 the number of points Vasya will have\nleft after all operations of exchange are completed. Please, do not use the\n\nthe cin, cout streams or the \n15 20 Output 1 1 1 0 0 1 Input 4 10 4 39 2 3 5 10 11 12 Output 3 0 1 0 3 0\nNote In the first sample Vasya gets 3 points after eating the first chocolate\nbar. Then he exchanges 2 points and gets a mug. Vasya wins a bag after eating\nthe second chocolate bar. Then he wins a towel after eating the third\nchocolate bar. After all chocolate bars 3 - 2 + 10 - 10 + 4 - 4 = 1 points\nremains.\n\n",
        "cf_contest_id": 208,
        "cf_index": "D",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 10 4\r\n2 4 10 15 20\r\n",
                "1 1 1 0 0\n1\n"
            ],
            [
                "4\r\n10 4 39 2\r\n3 5 10 11 12\r\n",
                "3 0 1 0 3\n0\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n45\r\n1 2 3 4 5\r\n",
                "0 0 0 0 9\n0\n"
            ],
            [
                "1\r\n50\r\n1 2 4 5 6\r\n",
                "0 1 0 0 8\n0\n"
            ],
            [
                "1\r\n6\r\n1 2 4 6 7\r\n",
                "0 0 0 1 0\n0\n"
            ],
            [
                "1\r\n11\r\n1 2 3 6 8\r\n",
                "0 0 1 0 1\n0\n"
            ],
            [
                "5\r\n43 4 16 36 41\r\n5 6 7 8 9\r\n",
                "0 0 2 0 14\n0\n"
            ],
            [
                "5\r\n6 6 47 32 28\r\n1 2 6 9 11\r\n",
                "2 1 3 1 8\n0\n"
            ],
            [
                "5\r\n30 25 31 47 40\r\n1 3 6 13 20\r\n",
                "6 3 3 0 7\n0\n"
            ],
            [
                "10\r\n588141495 24894836 162095938 610922780 767639361 522148294 556163403 302924834 618125209 410537083\r\n1 2 3 4 5\r\n",
                "2 0 3 3 912718642\n0\n"
            ],
            [
                "10\r\n5 37 8 21 10 13 36 4 40 26\r\n3 5 6 7 10\r\n",
                "1 2 1 3 16\n0\n"
            ],
            [
                "10\r\n3 25 17 20 25 26 15 35 47 16\r\n5 8 11 14 15\r\n",
                "1 1 3 0 12\n3\n"
            ],
            [
                "10\r\n1 10 34 9 49 42 45 8 42 7\r\n2 6 11 13 14\r\n",
                "5 5 1 0 14\n0\n"
            ],
            [
                "15\r\n13 44 13 13 38 25 43 25 40 28 5 23 25 41 6\r\n1 2 3 4 5\r\n",
                "2 0 7 1 71\n0\n"
            ],
            [
                "15\r\n195995511 767544072 924890005 342377584 638748004 904551320 222776859 921356712 204326392 225923474 90658415 610365756 971907038 41090763 853207872\r\n5 7 8 9 10\r\n",
                "3 0 3 2 791571972\n0\n"
            ],
            [
                "15\r\n14 19 5 16 11 22 40 7 13 21 24 26 49 22 26\r\n1 2 7 8 9\r\n",
                "4 19 2 2 27\n0\n"
            ],
            [
                "15\r\n5 41 46 48 22 49 5 37 10 4 19 2 16 32 24\r\n2 11 15 18 20\r\n",
                "30 1 2 1 12\n1\n"
            ],
            [
                "15\r\n50 12 36 11 38 28 4 11 29 34 22 46 43 2 29\r\n7 8 10 17 23\r\n",
                "1 0 6 3 12\n1\n"
            ],
            [
                "15\r\n676837988 94471701 777591167 399710490 409807125 414445437 8315750 102835211 36239666 141260442 589733329 572072035 789807197 431009789 123234386\r\n20 39 45 46 48\r\n",
                "5 2 1 0 115986906\n2\n"
            ],
            [
                "25\r\n26 29 17 11 35 21 11 22 17 24 41 44 27 34 42 24 44 3 8 25 23 6 16 41 2\r\n1 2 3 4 5\r\n",
                "8 6 3 6 108\n0\n"
            ],
            [
                "25\r\n46 37 12 28 16 9 26 12 31 49 28 23 39 49 21 40 1 31 8 6 33 46 4 12 20\r\n5 6 7 8 10\r\n",
                "1 2 2 3 57\n2\n"
            ],
            [
                "25\r\n48 3 22 29 40 21 28 31 22 16 17 3 47 37 38 15 16 27 41 48 17 11 22 15 15\r\n10 11 12 13 15\r\n",
                "1 1 1 2 38\n0\n"
            ],
            [
                "25\r\n43 34 26 43 11 13 34 8 6 25 39 41 21 34 27 12 11 1 36 45 47 12 18 43 38\r\n1 2 10 24 25\r\n",
                "11 46 19 0 15\n0\n"
            ],
            [
                "25\r\n38 30 40 7 7 18 43 5 29 49 50 9 4 18 30 35 21 22 15 33 9 31 32 22 6\r\n2 14 15 40 48\r\n",
                "48 0 22 2 2\n1\n"
            ],
            [
                "50\r\n7 33 16 27 6 26 21 46 28 43 34 28 44 21 40 32 47 47 29 22 25 18 31 18 37 3 47 43 37 25 33 10 29 43 44 33 45 14 43 5 27 25 35 20 9 13 49 9 21 26\r\n3 4 5 7 9\r\n",
                "4 6 6 15 138\n1\n"
            ],
            [
                "45\r\n18 21 6 3 48 23 5 26 37 6 49 6 42 19 8 39 38 47 36 22 13 21 14 32 43 42 5 30 35 36 16 34 32 8 1 37 14 29 39 50 25 26 10 25 39\r\n1 6 7 8 14\r\n",
                "77 5 4 19 62\n0\n"
            ],
            [
                "45\r\n28 28 3 4 7 34 44 2 8 7 20 29 27 49 20 33 11 31 47 38 41 40 11 16 5 20 12 47 49 25 25 6 40 3 2 3 32 38 34 21 28 48 12 39 43\r\n9 10 12 14 20\r\n",
                "4 5 2 8 44\n8\n"
            ],
            [
                "50\r\n17 30 29 29 50 42 15 18 34 10 30 3 44 11 4 35 42 8 14 41 30 4 11 1 3 23 7 28 35 6 24 37 6 12 8 7 36 40 41 26 13 46 15 40 32 34 15 28 46 31\r\n20 24 40 46 50\r\n",
                "4 11 9 5 5\n7\n"
            ]
        ]
    }
]