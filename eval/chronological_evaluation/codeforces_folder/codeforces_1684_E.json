[
    {
        "name": "MEX vs DIFF",
        "description": "You are given an array \n    a\n of \n    n\n non-negative integers. In one\noperation you can change any number in the array to any other non-negative\ninteger. Let's define the cost of the array as \n    DIFF(a) -\n    \n    MEX(a)\n, where \n    MEX\n of a set of non-\nnegative integers is the smallest non-negative integer not present in the set,\nand \n    DIFF\n is the number of different numbers in the\narray. For example, \n    MEX(\n    \n    1, 2, 3\n    \n    ) = 0\n,\n\n    MEX(\n    \n    0, 1, 2, 4, 5\n    \n    ) = 3\n. You should find the\nminimal cost of the array \n    a\n if you are allowed to make at most \n    k\n\noperations. Input The input consists of multiple test cases. The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of\ntest cases. Description of the test cases follows. The first line of each test\ncase contains two integers \n    n\n and \n    k\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n,\n\n    0 \n    \u2264 k \n    \u2264 10^5\n) \u2014 the length of the array \n    a\n and the number\nof operations that you are allowed to make. The second line of each test case\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264\n    10^9\n) \u2014 the elements of the array \n    a\n. It is guaranteed that the sum of\n\n    n\n over all test cases does not exceed \n    10^5\n. Output For each test\ncase output a single integer \u2014 minimal cost that it is possible to get making\nat most \n    k\n operations. Example Input 4 4 1 3 0 1 2 4 1 0 2 4 5 7 2 4 13 0\n0 13 1337 1000000000 6 2 1 2 8 0 0 0 Output 0 1 2 0 Note In the first test\ncase no operations are needed to minimize the value of\n\n    DIFF - \n    MEX\n. In the second test case it\nis possible to replace \n    5\n by \n    1\n. After that the array \n    a\n is\n\n    [0,\n      2,\n      4,\n      1]\n, \n    DIFF = 4\n,\n\n    MEX = \n    MEX(\n    \n    0, 1, 2, 4\n    \n    ) = 3\n,\nso the answer is \n    1\n. In the third test case one possible array \n    a\n is\n\n    [4,\n      13,\n      0,\n      0,\n      13,\n      1,\n      2]\n,\n\n    DIFF = 5\n, \n    MEX = 3\n. In the fourth\ntest case one possible array \n    a\n is \n    [1,\n      2,\n      3,\n      0,\n      0,\n     \n    0]\n.\n\n",
        "cf_contest_id": 1684,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "constructive algorithms",
            "data structures",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n4 1\r\n3 0 1 2\r\n4 1\r\n0 2 4 5\r\n7 2\r\n4 13 0 0 13 1337 1000000000\r\n6 2\r\n1 2 8 0 0 0\r\n",
                "0\r\n1\r\n2\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n5 1\r\n5 4 3 1 2\r\n",
                "0\r\n"
            ],
            [
                "1\r\n5 1\r\n1 2 3 4 5\r\n",
                "0\r\n"
            ],
            [
                "5\r\n5 1\r\n1 2 3 4 5\r\n5 1\r\n1 2 3 4 5\r\n5 1\r\n1 2 3 4 5\r\n5 1\r\n1 2 3 4 5\r\n5 1\r\n1 2 3 4 5\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "1\r\n10 5\r\n0 1 2 3 100 101 102 102 102 102\r\n",
                "1\r\n"
            ]
        ]
    }
]