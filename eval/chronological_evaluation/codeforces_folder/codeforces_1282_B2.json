[
    {
        "name": "K for the Price of One (Hard Version)",
        "description": "This is the hard version of this problem. The only difference is the\nconstraint on \n    k\n \u2014 the number of gifts in the offer. In this version:\n\n    2 \n    \u2264 k \n    \u2264 n\n. Vasya came to the store to buy goods for his friends\nfor the New Year. It turned out that he was very lucky \u2014 today the offer\n\"\n    k\n of goods for the price of one\" is held in store. Using this offer,\nVasya can buy exactly \n    k\n of any goods, paying only for the most expensive\nof them. Vasya decided to take this opportunity and buy as many goods as\npossible for his friends with the money he has. More formally, for each good,\nits price is determined by \n    a_i\n \u2014 the number of coins it costs.\nInitially, Vasya has \n    p\n coins. He wants to buy the maximum number of\ngoods. Vasya can perform one of the following operations as many times as\nnecessary: Vasya can buy one good with the index \n    i\n if he currently has\nenough coins (i.e \n    p \n    \u2265 a_i\n). After buying this good, the number of\nVasya's coins will decrease by \n    a_i\n, (i.e it becomes \n    p := p - a_i\n).\nVasya can buy a good with the index \n    i\n, and also choose exactly \n    k-1\n\ngoods, the price of which does not exceed \n    a_i\n, if he currently has\nenough coins (i.e \n    p \n    \u2265 a_i\n). Thus, he buys all these \n    k\n goods,\nand his number of coins decreases by \n    a_i\n (i.e it becomes \n    p := p -\n    a_i\n). Please note that each good can be bought no more than once. For\nexample, if the store now has \n    n=5\n goods worth \n    a_1=2, a_2=4, a_3=3,\n    a_4=5, a_5=7\n, respectively, \n    k=2\n, and Vasya has \n    6\n coins, then he\ncan buy \n    3\n goods. A good with the index \n    1\n will be bought by Vasya\nwithout using the offer and he will pay \n    2\n coins. Goods with the indices\n\n    2\n and \n    3\n Vasya will buy using the offer and he will pay \n    4\n\ncoins. It can be proved that Vasya can not buy more goods with six coins. Help\nVasya to find out the maximum number of goods he can buy. Input The first line\ncontains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test\ncases in the test. The next lines contain a description of \n    t\n test cases.\nThe first line of each test case contains three integers \n    n, p, k\n (\n    2\n    \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    1 \n    \u2264 p \n    \u2264 2\n    \u00b710^9\n, \n    2\n    \n    \u2264 k \n    \u2264 n\n) \u2014 the number of goods in the store, the number of coins\nVasya has and the number of goods that can be bought by the price of the most\nexpensive of them. The second line of each test case contains \n    n\n integers\n\n    a_i\n (\n    1 \n    \u2264 a_i \n    \u2264 10^4\n) \u2014 the prices of goods. It is\nguaranteed that the sum of \n    n\n for all test cases does not exceed \n    2\n    \n    \u00b7 10^5\n. Output For each test case in a separate line print one\ninteger \n    m\n \u2014 the maximum number of goods that Vasya can buy. Example\nInput 8 5 6 2 2 4 3 5 7 5 11 2 2 4 3 5 7 3 2 3 4 2 6 5 2 3 10 1 3 9 2 2 10000\n2 10000 10000 2 9999 2 10000 10000 4 6 4 3 2 3 2 5 5 3 1 2 2 1 2 Output 3 4 1\n1 2 0 4 5\n\n",
        "cf_contest_id": 1282,
        "cf_index": "B2",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8\r\n5 6 2\r\n2 4 3 5 7\r\n5 11 2\r\n2 4 3 5 7\r\n3 2 3\r\n4 2 6\r\n5 2 3\r\n10 1 3 9 2\r\n2 10000 2\r\n10000 10000\r\n2 9999 2\r\n10000 10000\r\n4 6 4\r\n3 2 3 2\r\n5 5 3\r\n1 2 2 1 2\r\n",
                "3 4 1 1 2 0 4 5 "
            ]
        ],
        "private_cases": [
            [
                "2\r\n2 1 2\r\n1 1\r\n2 2000000000 2\r\n1 1\r\n",
                "2 2 "
            ]
        ]
    }
]