[
    {
        "name": "OKEA",
        "description": "People worry that computers will get too smart and take over the world, but\nthe real problem is that they're too stupid and they've already taken over the\nworld. \u2014 Pedro Domingos You work for a well-known department store that uses\nleading technologies and employs mechanistic work \u2014 that is, robots! The\ndepartment you work in sells \n    n \n    \u00b7 k\n items. The first item costs\n\n    1\n dollar, the second item costs \n    2\n dollars, and so on: \n    i\n-th\nitem costs \n    i\n dollars. The items are situated on shelves. The items form\na rectangular grid: there are \n    n\n shelves in total, and each shelf\ncontains exactly \n    k\n items. We will denote by \n    a_i,j\n the price of\n\n    j\n-th item (counting from the left) on the \n    i\n-th shelf, \n    1 \n    \u2264 i\n    \n    \u2264 n, 1 \n    \u2264 j \n    \u2264 k\n. Occasionally robots get curious and ponder on\nthe following question: what is the mean price (arithmetic average) of items\n\n    a_i,l, a_i,l+1, \n    \u2026, a_i,r\n for some shelf \n    i\n and indices\n\n    l \n    \u2264 r\n? Unfortunately, the old robots can only work with whole\nnumbers. If the mean price turns out not to be an integer, they break down.\nYou care about robots' welfare. You want to arrange the items in such a way\nthat the robots cannot theoretically break. Formally, you want to choose such\na two-dimensional array \n    a\n that: Every number from \n    1\n to \n    n\n    \n    \u00b7 k\n (inclusively) occurs exactly once. For each \n    i, l, r\n, the\nmean price of items from \n    l\n to \n    r\n on \n    i\n-th shelf is an integer.\nFind out if such an arrangement is possible, and if it is, give any example of\nsuch arrangement. Input The first line contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 500\n) \u2014 the number of test cases. The first and only line of\neach test case contains two integers \n    n\n and \n    k\n (\n    1 \n    \u2264 n, k\n    \n    \u2264 500\n) \u2014 the number of shelves and length of each shelf, respectively.\nIt is guaranteed that the sum \n    n\n over all test cases does not exceed\n\n    500\n and the sum \n    k\n over all test cases does not exceed \n    500\n.\nOutput Print the answer for each test case. If such an arrangement exists,\nprint \"YES\" on a single line. After that, print any example on \n    n\n lines\nof \n    k\n numbers each, one line per shelf. Each number from \n    1\n to \n    n\n    \n    \u00b7 k\n must occur exactly once in the output. If no good arrangement\nexists, print a single word \"NO\" on its own line. Example Input 4 1 1 2 2 3 3\n3 1 Output YES 1 YES 1 3 2 4 NO YES 1 2 3\n\n",
        "cf_contest_id": 1634,
        "cf_index": "C",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 1\r\n2 2\r\n3 3\r\n3 1\r\n",
                "YES\r\n1\r\nYES\r\n1 3\r\n2 4\r\nNO\r\nYES\r\n1\r\n2\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]