[
    {
        "name": "Playing in a Casino",
        "description": "Galaxy Luck, a well-known casino in the entire solar system, introduces a new\ncard game. In this game, there is a deck that consists of \n    n\n cards. Each\ncard has \n    m\n numbers written on it. Each of the \n    n\n players receives\nexactly one card from the deck. Then all players play with each other in\npairs, and each pair of players plays exactly once. Thus, if there are, for\nexample, four players in total, then six games are played: the first against\nthe second, the first against the third, the first against the fourth, the\nsecond against the third, the second against the fourth and the third against\nthe fourth. Each of these games determines the winner in some way, but the\nrules are quite complicated, so we will not describe them here. All that\nmatters is how many chips are paid out to the winner. Let the first player's\ncard have the numbers \n    a_1, a_2, \n    \u2026, a_m\n, and the second player's\ncard \u2014 \n    b_1, b_2, \n    \u2026, b_m\n. Then the winner of the game gets \n    |a_1\n    - b_1| + |a_2 - b_2| + \n    \u2026 + |a_m - b_m|\n chips from the total pot,\nwhere \n    |x|\n denotes the absolute value of \n    x\n. To determine the size\nof the total pot, it is necessary to calculate the winners' total winnings for\nall games. Since there can be many cards in a deck and many players, you have\nbeen assigned to write a program that does all the necessary calculations.\nInput Each test consists of several test cases. The first line contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The\ndescription of the test cases follows. The first line of each test case\ncontains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u00b7 m \n    \u2264\n    3\n    \u00b7 10^5\n) \u2014 the number of cards in the deck and the count of numbers\non the one card. Each of the following \n    n\n lines of the test case set\ncontains \n    m\n integers \n    c_i,j\n (\n    1 \n    \u2264 c_i,j\n    \u2264 10^6\n) \u2014 a\ndescription of the \n    i\n-th card. It is guaranteed that the total \n    n\n    \n    \u00b7 m\n in all tests does not exceed \n    3 \n    \u00b7 10^5\n. Output For\neach test case, print one number \u2014 the total amount of winnings from all\ngames. Example Input 3 3 5 1 4 2 8 5 7 9 2 1 4 3 8 5 3 1 1 4 4 15 1 10 4 3 1 2\n3 3 2 1 1 2 1 4 2 7 Output 50 0 31 Note Consider the first test case. In the\ngame between the first and second player, the winner receives \n    |1-7| + |4-9|\n    + |2-2| + |8-1| + |5-4| = 19\n chips. In the game between the first and third\nplayer, the winner receives \n    |1-3| + |4-8| + |2-5| + |8-3| + |5-1| = 18\n\nin chips. In the game between the second and third player, the winner receives\n\n    |7-3| + |9-8| + |2-5| + |1-3| + |4-1| = 13\n chips. The total is \n    19 +\n    18 + 13 = 50\n chips.\n\n",
        "cf_contest_id": 1808,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 5\r\n1 4 2 8 5\r\n7 9 2 1 4\r\n3 8 5 3 1\r\n1 4\r\n4 15 1 10\r\n4 3\r\n1 2 3\r\n3 2 1\r\n1 2 1\r\n4 2 7\r\n",
                "50\r\n0\r\n31\r\n"
            ]
        ],
        "private_cases": []
    }
]