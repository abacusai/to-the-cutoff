[
    {
        "name": "Spider Man",
        "description": "Peter Parker wants to play a game with Dr. Octopus. The game is about cycles.\nCycle is a sequence of vertices, such that first one is connected with the\nsecond, second is connected with third and so on, while the last one is\nconnected with the first one again. Cycle may consist of a single isolated\nvertex. Initially there are k cycles, i-th of them consisting of exactly vi\nvertices. Players play alternatively. Peter goes first. On each turn a player\nmust choose a cycle with at least 2 vertices (for example, x vertices) among\nall available cycles and replace it by two cycles with p and x - p vertices\nwhere 1 \u2264 p < x is chosen by the player. The player who cannot make a move\nloses the game (and his life!). Peter wants to test some configurations of\ninitial cycle sets before he actually plays with Dr. Octopus. Initially he has\nan empty set. In the i-th test he adds a cycle with ai vertices to the set\n(this is actually a multiset because it can contain two or more identical\ncycles). After each test, Peter wants to know that if the players begin the\ngame with the current set of cycles, who wins? Peter is pretty good at math,\nbut now he asks you to help. Input The first line of the input contains a\nsingle integer n (1 \u2264 n \u2264 100 000) \u2014 the number of tests Peter is about to\nmake. The second line contains n space separated integers a1, a2, ..., an (1 \u2264\nai \u2264 10^9), i-th of them stands for the number of vertices in the cycle added\nbefore the i-th test. Output Print the result of all tests in order they are\nperformed. Print 1 if the player who moves first wins or 2 otherwise. Examples\nInput 3 1 2 3 Output 2 1 1 Input 5 1 1 5 1 1 Output 2 2 2 2 2 Note In the\nfirst sample test: In Peter's first test, there's only one cycle with 1\nvertex. First player cannot make a move and loses. In his second test, there's\none cycle with 1 vertex and one with 2. No one can make a move on the cycle\nwith 1 vertex. First player can replace the second cycle with two cycles of 1\nvertex and second player can't make any move and loses. In his third test,\ncycles have 1, 2 and 3 vertices. Like last test, no one can make a move on the\nfirst cycle. First player can replace the third cycle with one cycle with size\n1 and one with size 2. Now cycles have 1, 1, 2, 2 vertices. Second player's\nonly move is to replace a cycle of size 2 with 2 cycles of size 1. And cycles\nare 1, 1, 1, 1, 2. First player replaces the last cycle with 2 cycles with\nsize 1 and wins. In the second sample test: Having cycles of size 1 is like\nnot having them (because no one can make a move on them). In Peter's third\ntest: There a cycle of size 5 (others don't matter). First player has two\noptions: replace it with cycles of sizes 1 and 4 or 2 and 3. If he replaces it\nwith cycles of sizes 1 and 4: Only second cycle matters. Second player will\nreplace it with 2 cycles of sizes 2. First player's only option to replace one\nof them with two cycles of size 1. Second player does the same thing with the\nother cycle. First player can't make any move and loses. If he replaces it\nwith cycles of sizes 2 and 3: Second player will replace the cycle of size 3\nwith two of sizes 1 and 2. Now only cycles with more than one vertex are two\ncycles of size 2. As shown in previous case, with 2 cycles of size 2 second\nplayer wins. So, either way first player loses.\n\n",
        "cf_contest_id": 705,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 3\r\n",
                "2\r\n1\r\n1\r\n"
            ],
            [
                "5\r\n1 1 5 1 1\r\n",
                "2\r\n2\r\n2\r\n2\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n167959139\r\n",
                "2\r\n"
            ],
            [
                "10\r\n802030518 598196518 640274071 983359971 71550121 96204862 799843967 446173607 796619138 402690754\r\n",
                "1\r\n2\r\n2\r\n2\r\n2\r\n1\r\n1\r\n1\r\n2\r\n1\r\n"
            ],
            [
                "1\r\n1\r\n",
                "2\r\n"
            ],
            [
                "1\r\n1000000000\r\n",
                "1\r\n"
            ],
            [
                "2\r\n2 4\r\n",
                "1\r\n2\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "2\r\n2\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "2\r\n1\r\n"
            ],
            [
                "2\r\n2 1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "3\r\n1 3 1\r\n",
                "2\r\n2\r\n2\r\n"
            ],
            [
                "3\r\n1 2 1\r\n",
                "2\r\n1\r\n1\r\n"
            ],
            [
                "3\r\n2 1 1\r\n",
                "1\r\n1\r\n1\r\n"
            ],
            [
                "3\r\n1 1 2\r\n",
                "2\r\n2\r\n1\r\n"
            ],
            [
                "10\r\n9 8 5 4 1 1 2 1 1 1\r\n",
                "2\r\n1\r\n1\r\n2\r\n2\r\n2\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "1\r\n2\r\n",
                "1\r\n"
            ],
            [
                "2\r\n3 3\r\n",
                "2\r\n2\r\n"
            ],
            [
                "5\r\n2 2 2 1 1\r\n",
                "1\r\n2\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "5\r\n1 1 1 2 1\r\n",
                "2\r\n2\r\n2\r\n1\r\n1\r\n"
            ],
            [
                "5\r\n2 1 1 1 1\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "4\r\n1 2 1 1\r\n",
                "2\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "5\r\n5 4 4 4 1\r\n",
                "2\r\n1\r\n2\r\n1\r\n1\r\n"
            ],
            [
                "2\r\n3 1\r\n",
                "2\r\n2\r\n"
            ],
            [
                "3\r\n3 2 1\r\n",
                "2\r\n1\r\n1\r\n"
            ],
            [
                "5\r\n1 1 4 1 1\r\n",
                "2\r\n2\r\n1\r\n1\r\n1\r\n"
            ]
        ]
    }
]