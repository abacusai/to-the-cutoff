[
    {
        "name": "Chess Championship",
        "description": "Ostap is preparing to play chess again and this time he is about to prepare.\nThus, he was closely monitoring one recent chess tournament. There were m\nplayers participating and each pair of players played exactly one game. The\nvictory gives 2 points, draw \u2014 1 points, lose \u2014 0 points. Ostap is lazy, so he\nnever tries to remember the outcome of each game. Instead, he computes the\ntotal number of points earned by each of the players (the sum of his points in\nall games which he took part in), sort these value in non-ascending order and\nthen remembers first n integers in this list. Now the Great Strategist Ostap\nwonders whether he remembers everything correct. He considers that he is\ncorrect if there exists at least one tournament results table such that it\nwill produce the given integers. That means, if we count the sum of points for\neach player, sort them and take first n elements, the result will coincide\nwith what Ostap remembers. Can you check if such table exists? Input The first\nline of the input contains two integers m and n (1 \u2264 n \u2264 m \u2264 3000) \u2014 the\nnumber of participants of the tournament and the number of top results Ostap\nremembers. The second line contains n integers, provided in non-ascending\norder \u2014 the number of points earned by top participants as Ostap remembers\nthem. It's guaranteed that this integers are non-negative and do not exceed\n2\u00b7m. Output If there is no tournament such that Ostap can obtain the given set\nof integers using the procedure described in the statement, then print \"no\" in\nthe only line of the output. Otherwise, the first line of the output should\ncontain the word \"yes\". Next m lines should provide the description of any\nvalid tournament. Each of these lines must contain m characters 'X', 'W', 'D'\nand 'L'. Character 'X' should always be located on the main diagonal (and only\nthere), that is on the i-th position of the i-th string. Character 'W' on the\nj-th position of the i-th string means that the i-th player won the game\nagainst the j-th. In the same way character 'L' means loose and 'D' means\ndraw. The table you print must be consistent and the points earned by best n\nparticipants should match the memory of Ostap. If there are many possible\nanswers, print any of them. Examples Input 5 5 8 6 4 2 0 Output yes XWWWW\nLXWWW LLXWW LLLXW LLLLX Input 5 1 9 Output no\n\n",
        "cf_contest_id": 736,
        "cf_index": "E",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "flows",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 5\r\n8 6 4 2 0\r\n",
                "yes\r\nXWWWW\r\nLXWWW\r\nLLXWW\r\nLLLXW\r\nLLLLX\r\n"
            ],
            [
                "5 1\r\n9\r\n",
                "no\r\n"
            ]
        ],
        "private_cases": [
            [
                "6 4\r\n8 7 4 4\r\n",
                "yes\r\nXLWWWW\r\nWXLDWW\r\nLWXDLD\r\nLDDXWL\r\nLLWLXW\r\nLLDWLX\r\n"
            ],
            [
                "5 2\r\n8 7\r\n",
                "no\r\n"
            ],
            [
                "3 2\r\n3 3\r\n",
                "yes\r\nXDW\r\nDXW\r\nLLX\r\n"
            ],
            [
                "5 4\r\n8 6 4 2\r\n",
                "yes\r\nXWWWW\r\nLXWWW\r\nLLXWW\r\nLLLXW\r\nLLLLX\r\n"
            ],
            [
                "5 5\r\n8 6 4 2 1\r\n",
                "no\r\n"
            ],
            [
                "5 5\r\n8 7 5 2 0\r\n",
                "no\r\n"
            ],
            [
                "10 7\r\n15 15 13 12 11 11 11\r\n",
                "no\r\n"
            ],
            [
                "20 8\r\n34 34 33 28 26 25 23 21\r\n",
                "yes\r\nXWLLWWWWWWWWWWWWWWWW\r\nLXLWWWWWWWWWWWWWWWWW\r\nWWXLLDWWWWWWWWWWWWWW\r\nWLWXWWWLDDLLWWWWWWWW\r\nLLWLXLLWLWWWWWWWWWWW\r\nLLDLWXLLWWWLWWWWWWWW\r\nLLLLWWXWDLWDLDWWWWWW\r\nLLLWLWLXLLDWWLWWWWWW\r\nLLLDWLDWXLDWLLWWWWWW\r\nLLLDLLWWWXLWLLWWWWWW\r\nLLLWLLLDDWXLDWWWWWWW\r\nLLLWLWDLLLWXWLWWWWWW\r\nLLLLLLWLWWDLXWWWWWWW\r\nLLLLLLDWWWLWLXWWWWWW\r\nLLLLLLLLLLLLLLXWWWWW\r\nLLLLLLLLLLLLLLLXWWWW\r\nLLLLLLLLLLLLLLLLXWWW\r\nLLLLLLLLLLLLLLLLLXWW\r\nLLLLLLLLLLLLLLLLLLXW\r\nLLLLLLLLLLLLLLLLLLLX\r\n"
            ],
            [
                "5 1\r\n3\r\n",
                "no\r\n"
            ],
            [
                "30 8\r\n58 56 54 52 50 20 20 19\r\n",
                "no\r\n"
            ],
            [
                "1 1\r\n2\r\n",
                "no\r\n"
            ],
            [
                "1 1\r\n0\r\n",
                "yes\r\nX\r\n"
            ],
            [
                "2 1\r\n2\r\n",
                "yes\r\nXW\r\nLX\r\n"
            ],
            [
                "2 1\r\n1\r\n",
                "yes\r\nXD\r\nDX\r\n"
            ],
            [
                "2 2\r\n2 1\r\n",
                "no\r\n"
            ]
        ]
    }
]