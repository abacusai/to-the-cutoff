[
    {
        "name": "Odd Swap Sort",
        "description": "You are given an array \n    a_1, a_2, \n    \u2026, a_n\n. You can perform\noperations on the array. In each operation you can choose an integer \n    i\n\n(\n    1 \n    \u2264 i < n\n), and swap elements \n    a_i\n and \n    a_i+1\n of the\narray, if \n    a_i + a_i+1\n is odd. Determine whether it can be sorted in\nnon-decreasing order using this operation any number of times. Input Each test\ncontains multiple test cases. The first line contains a single integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 10^5\n) \u2014 the number of test cases. Description of the\ntest cases follows. The first line of each test case contains a single integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the length of the array. The second\nline of each test case contains \n    n\n integers \n    a_1,a_2, \n    \u2026, a_n\n\n(\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the elements of the array. It is guaranteed\nthat the sum of \n    n\n over all test cases does not exceed \n    2 \n    \u00b7\n    10^5\n. Output For each test case, print \"Yes\" or \"No\" depending on whether\nyou can or can not sort the given array. You may print each letter in any case\n(for example, \"YES\", \"Yes\", \"yes\", \"yEs\" will all be recognized as positive\nanswer). Example Input 4 4 1 6 31 14 2 4 2 5 2 9 6 7 10 3 6 6 6 Output Yes No\nNo Yes Note In the first test case, we can simply swap \n    31\n and \n    14\n\n(\n    31 + 14 = 45\n which is odd) and obtain the non-decreasing array\n\n    [1,6,14,31]\n. In the second test case, the only way we could sort the\narray is by swapping \n    4\n and \n    2\n, but this is impossible, since their\nsum \n    4 + 2 = 6\n is even. In the third test case, there is no way to make\nthe array non-decreasing. In the fourth test case, the array is already non-\ndecreasing.\n\n",
        "cf_contest_id": 1638,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n4\r\n1 6 31 14\r\n2\r\n4 2\r\n5\r\n2 9 6 7 10\r\n3\r\n6 6 6\r\n",
                "Yes\r\nNo\r\nNo\r\nYes\r\n"
            ]
        ],
        "private_cases": []
    }
]