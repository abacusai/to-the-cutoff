[
    {
        "name": "Berzerk",
        "description": "Rick and Morty are playing their own version of Berzerk (which has nothing in\ncommon with the famous Berzerk game). This game needs a huge space, so they\nplay it with a computer. In this game there are n objects numbered from 1 to n\narranged in a circle (in clockwise order). Object number 1 is a black hole and\nthe others are planets. There's a monster in one of the planet. Rick and Morty\ndon't know on which one yet, only that he's not initially in the black hole,\nbut Unity will inform them before the game starts. But for now, they want to\nbe prepared for every possible scenario. Each one of them has a set of numbers\nbetween 1 and n - 1 (inclusive). Rick's set is s1 with k1 elements and Morty's\nis s2 with k2 elements. One of them goes first and the player changes\nalternatively. In each player's turn, he should choose an arbitrary number\nlike x from his set and the monster will move to his x-th next object from its\ncurrent position (clockwise). If after his move the monster gets to the black\nhole he wins. Your task is that for each of monster's initial positions and\nwho plays first determine if the starter wins, loses, or the game will stuck\nin an infinite loop. In case when player can lose or make game infinity, it\nmore profitable to choose infinity game. Input The first line of input\ncontains a single integer n (2 \u2264 n \u2264 7000) \u2014 number of objects in game. The\nsecond line contains integer k1 followed by k1 distinct integers s1, 1, s1, 2,\n..., s1, k1 \u2014 Rick's set. The third line contains integer k2 followed by k2\ndistinct integers s2, 1, s2, 2, ..., s2, k2 \u2014 Morty's set 1 \u2264 ki \u2264 n - 1 and 1\n\u2264 si, 1, si, 2, ..., si, ki \u2264 n - 1 for 1 \u2264 i \u2264 2. Output In the first line\nprint n - 1 words separated by spaces where i-th word is \"Win\" (without\nquotations) if in the scenario that Rick plays first and monster is initially\nin object number i + 1 he wins, \"Lose\" if he loses and \"Loop\" if the game will\nnever end. Similarly, in the second line print n - 1 words separated by spaces\nwhere i-th word is \"Win\" (without quotations) if in the scenario that Morty\nplays first and monster is initially in object number i + 1 he wins, \"Lose\" if\nhe loses and \"Loop\" if the game will never end. Examples Input 5 2 3 2 3 1 2 3\nOutput Lose Win Win Loop Loop Win Win Win Input 8 4 6 2 3 4 2 3 6 Output Win\nWin Win Win Win Win Win Lose Win Lose Lose Win Lose Lose\n\n",
        "cf_contest_id": 786,
        "cf_index": "A",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "games"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 3 2\r\n3 1 2 3\r\n",
                "Lose Win Win Loop\r\nLoop Win Win Win\r\n"
            ],
            [
                "8\r\n4 6 2 3 4\r\n2 3 6\r\n",
                "Win Win Win Win Win Win Win\r\nLose Win Lose Lose Win Lose Lose\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n3 4 7 5\r\n2 8 5\r\n",
                "Win Win Win Win Win Win Win Loop Win\r\nLose Win Loop Lose Win Lose Lose Lose Lose\r\n"
            ],
            [
                "17\r\n1 10\r\n1 12\r\n",
                "Win Win Win Win Win Win Win Win Win Win Win Lose Win Win Win Win\r\nLose Lose Lose Lose Win Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose\r\n"
            ],
            [
                "23\r\n1 20\r\n3 9 2 12\r\n",
                "Lose Lose Win Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose Lose\r\nWin Win Win Win Win Win Win Win Win Win Win Win Win Win Win Win Win Win Win Win Win Win\r\n"
            ],
            [
                "2\r\n1 1\r\n1 1\r\n",
                "Win\r\nWin\r\n"
            ],
            [
                "2\r\n1 1\r\n1 1\r\n",
                "Win\r\nWin\r\n"
            ],
            [
                "3\r\n1 1\r\n1 2\r\n",
                "Loop Win\r\nWin Loop\r\n"
            ],
            [
                "20\r\n1 1\r\n1 11\r\n",
                "Loop Loop Win Lose Loop Loop Win Lose Loop Loop Win Lose Loop Loop Win Lose Loop Loop Win\r\nWin Loop Loop Lose Win Loop Loop Lose Win Loop Loop Lose Win Loop Loop Lose Win Loop Loop\r\n"
            ]
        ]
    }
]