[
    {
        "name": "Line Empire",
        "description": "You are an ambitious king who wants to be the Emperor of The Reals. But to do\nthat, you must first become Emperor of The Integers. Consider a number axis.\nThe capital of your empire is initially at \n    0\n. There are \n    n\n\nunconquered kingdoms at positions \n    0<x_1<x_2<\n    \u2026<x_n\n. You want to\nconquer all other kingdoms. There are two actions available to you: You can\nchange the location of your capital (let its current position be \n    c_1\n) to\nany other conquered kingdom (let its position be \n    c_2\n) at a cost of\n\n    a\n    \u00b7 |c_1-c_2|\n. From the current capital (let its current position\nbe \n    c_1\n) you can conquer an unconquered kingdom (let its position be\n\n    c_2\n) at a cost of \n    b\n    \u00b7 |c_1-c_2|\n. You cannot conquer a kingdom\nif there is an unconquered kingdom between the target and your capital. Note\nthat you cannot place the capital at a point without a kingdom. In other\nwords, at any point, your capital can only be at \n    0\n or one of\n\n    x_1,x_2,\n    \u2026,x_n\n. Also note that conquering a kingdom does not\nchange the position of your capital. Find the minimum total cost to conquer\nall kingdoms. Your capital can be anywhere at the end. Input The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of\ntest cases. The description of each test case follows. The first line of each\ntest case contains \n    3\n integers \n    n\n, \n    a\n, and \n    b\n (\n    1 \n    \u2264\n    n \n    \u2264 2 \n    \u00b7 10^5\n; \n    1 \n    \u2264 a,b \n    \u2264 10^5\n). The second line\nof each test case contains \n    n\n integers \n    x_1, x_2, \n    \u2026, x_n\n\n(\n    1 \n    \u2264 x_1 < x_2 < \n    \u2026 < x_n \n    \u2264 10^8\n). The sum of \n    n\n\nover all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test\ncase, output a single integer \u2014 the minimum cost to conquer all kingdoms.\nExample Input 4 5 2 7 3 5 12 13 21 5 6 3 1 5 6 21 30 2 9 3 10 15 11 27182\n31415 16 18 33 98 874 989 4848 20458 34365 38117 72030 Output 173 171 75\n3298918744 Note Here is an optimal sequence of moves for the second test case:\nConquer the kingdom at position \n    1\n with cost \n    3\n    \u00b7(1-0)=3\n. Move\nthe capital to the kingdom at position \n    1\n with cost\n\n    6\n    \u00b7(1-0)=6\n. Conquer the kingdom at position \n    5\n with cost\n\n    3\n    \u00b7(5-1)=12\n. Move the capital to the kingdom at position \n    5\n\nwith cost \n    6\n    \u00b7(5-1)=24\n. Conquer the kingdom at position \n    6\n with\ncost \n    3\n    \u00b7(6-5)=3\n. Conquer the kingdom at position \n    21\n with cost\n\n    3\n    \u00b7(21-5)=48\n. Conquer the kingdom at position \n    30\n with cost\n\n    3\n    \u00b7(30-5)=75\n. The total cost is \n    3+6+12+24+3+48+75=171\n. You\ncannot get a lower cost than this.\n\n",
        "cf_contest_id": 1659,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "dp",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5 2 7\r\n3 5 12 13 21\r\n5 6 3\r\n1 5 6 21 30\r\n2 9 3\r\n10 15\r\n11 27182 31415\r\n16 18 33 98 874 989 4848 20458 34365 38117 72030\r\n",
                "173\r\n171\r\n75\r\n3298918744\r\n"
            ]
        ],
        "private_cases": []
    }
]