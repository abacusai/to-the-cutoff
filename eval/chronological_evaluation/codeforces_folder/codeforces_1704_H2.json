[
    {
        "name": "Game of AI (hard version)",
        "description": "This is the hard version of this problem. The difference between easy and hard\nversions is the constraint on \n    k\n and the time limit. Notice that you need\nto calculate the answer for all positive integers \n    n \n    \u2208 [1,k]\n in this\nversion. You can make hacks only if both versions of the problem are solved.\nCirno is playing a war simulator game with \n    n\n towers (numbered from\n\n    1\n to \n    n\n) and \n    n\n bots (numbered from \n    1\n to \n    n\n). The\n\n    i\n-th tower is initially occupied by the \n    i\n-th bot for \n    1 \n    \u2264 i\n    \n    \u2264 n\n. Before the game, Cirno first chooses a permutation \n    p = [p_1,\n    p_2, \n    \u2026, p_n]\n of length \n    n\n (A permutation of length \n    n\n is\nan array of length \n    n\n where each integer between \n    1\n and \n    n\n\nappears exactly once). After that, she can choose a sequence \n    a = [a_1, a_2,\n    \n    \u2026, a_n]\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n and \n    a_i \n     i\n for all\n\n    1 \n    \u2264 i \n    \u2264 n\n). The game has \n    n\n rounds of attacks. In the\n\n    i\n-th round, if the \n    p_i\n-th bot is still in the game, it will begin\nits attack, and as the result the \n    a_p_i\n-th tower becomes occupied by\nthe \n    p_i\n-th bot; the bot that previously occupied the \n    a_p_i\n-th\ntower will no longer occupy it. If the \n    p_i\n-th bot is not in the game,\nnothing will happen in this round. After each round, if a bot doesn't occupy\nany towers, it will be eliminated and leave the game. Please note that no\ntower can be occupied by more than one bot, but one bot can occupy more than\none tower during the game. At the end of the game, Cirno will record the\nresult as a sequence \n    b = [b_1, b_2, \n    \u2026, b_n]\n, where \n    b_i\n is\nthe number of the bot that occupies the \n    i\n-th tower at the end of the\ngame. However, as a mathematics master, she wants you to solve the following\ncounting problem instead of playing games: Count the number of different pairs\nof sequences \n    a\n, \n    b\n from all possible choices of sequence \n    a\n\nand permutation \n    p\n. Calculate the answers for all \n    n\n such that \n    1\n    \n    \u2264 n \n    \u2264 k\n. Since these numbers may be large, output them modulo\n\n    M\n. Input The only line contains two positive integers \n    k\n and\n\n    M\n (\n    1\n    \u2264 k\n    \u2264 10^5\n, \n    2\n    \u2264 M\n    \u2264 10^9\n ). It is\nguaranteed that \n    2^18\n is a divisor of \n    M-1\n and \n    M\n is a prime\nnumber. Output Output \n    k\n lines, where the \n    i\n-th line contains a non-\nnegative integer, which is the answer for \n    n=i\n modulo \n    M\n. Example\nInput 8 998244353 Output 0 2 24 360 6800 153150 4057452 123391016 Note For\n\n    n=1\n, no valid sequence \n    a\n exists. We regard the answer as \n    0\n.\nFor \n    n=2\n, there is only one possible array \n    a\n: \n    [2, 1]\n. For\narray \n    a\n is \n    [2, 1]\n and permutation \n    p\n is \n    [1, 2]\n, the\nsequence \n    b\n will be \n    [1, 1]\n after all rounds have finished. The\ndetails for each rounds: In the first round, the first bot will begin its\nattack and successfully capture the tower \n    2\n. After this round, the\nsecond bot will be eliminated and leave the game as all of its towers are\noccupied by other bots. In the second round, the second bot is not in the\ngame. For array \n    a\n is \n    [2, 1]\n and permutation \n    p\n is \n    [2,\n    1]\n, the sequence \n    b\n will be \n    [2, 2]\n after all rounds have\nfinished. The details for each rounds: In the first round, the second bot will\nbegin its attack and successfully capture the tower \n    1\n. After this round,\nthe first bot will be eliminated and leave the game as all of its towers are\noccupied by other bots. In the second round, the first bot is not in the game.\nSo the number of different pairs of sequences \n    (a,b)\n is \n    2\n (\n    [2,\n    1]\n, \n    [1, 1]\n and \n    [2, 1]\n, \n    [2, 2]\n) for \n    n=2\n.\n\n",
        "cf_contest_id": 1704,
        "cf_index": "H2",
        "cf_rating": 3500,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "fft",
            "math"
        ],
        "time_limit_seconds": 12.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "8 998244353\r\n",
                "0\r\n2\r\n24\r\n360\r\n6800\r\n153150\r\n4057452\r\n123391016\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 998244353\r\n",
                "0\r\n"
            ],
            [
                "6 998244353\r\n",
                "0\r\n2\r\n24\r\n360\r\n6800\r\n153150\r\n"
            ]
        ]
    }
]