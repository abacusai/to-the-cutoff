[
    {
        "name": "Self-exploration",
        "description": "Being bored of exploring the Moon over and over again Wall-B decided to\nexplore something he is made of \u2014 binary numbers. He took a binary number and\ndecided to count how many times different substrings of length two appeared.\nHe stored those values in \n    c_00\n, \n    c_01\n, \n    c_10\n and\n\n    c_11\n, representing how many times substrings 00, 01, 10 and 11 appear\nin the number respectively. For example: \n    10111100 \n    \u2192 c_00 = 1,\n    \n     c_01 = 1,\n     c_10 = 2,\n     c_11 = 3\n \n    10000 \n    \u2192 c_00\n    = 3,\n     c_01 = 0,\n     c_10 = 1,\n     c_11 = 0\n \n    10101001 \n    \u2192\n    c_00 = 1,\n     c_01 = 3,\n     c_10 = 3,\n     c_11 = 0\n \n    1 \n    \u2192\n    c_00 = 0,\n     c_01 = 0,\n     c_10 = 0,\n     c_11 = 0\n Wall-B noticed that\nthere can be multiple binary numbers satisfying the same \n    c_00\n,\n\n    c_01\n, \n    c_10\n and \n    c_11\n constraints. Because of that he\nwanted to count how many binary numbers satisfy the constraints \n    c_xy\n\ngiven the interval \n    [A, B]\n. Unfortunately, his processing power wasn't\nstrong enough to handle large intervals he was curious about. Can you help\nhim? Since this number can be large print it modulo \n    10^9 + 7\n. Input\nFirst two lines contain two positive binary numbers \n    A\n and \n    B\n (\n    1\n    \n    \u2264 A \n    \u2264 B < 2^100\n     000\n), representing the start and the end of\nthe interval respectively. Binary numbers \n    A\n and \n    B\n have no leading\nzeroes. Next four lines contain decimal numbers \n    c_00\n, \n    c_01\n,\n\n    c_10\n and \n    c_11\n (\n    0 \n    \u2264 c_00, c_01, c_10, c_11\n    \u2264 100\n     000\n) representing the count of two-digit substrings 00, 01,\n10 and 11 respectively. Output Output one integer number representing how many\nbinary numbers in the interval \n    [A, B]\n satisfy the constraints mod\n\n    10^9 + 7\n. Examples Input 10 1001 0 0 1 1 Output 1 Input 10 10001 1 2 3 4\nOutput 0 Note Example 1: The binary numbers in the interval \n    [10,1001]\n\nare \n    10,11,100,101,110,111,1000,1001\n. Only number 110 satisfies the\nconstraints: \n    c_00 = 0, c_01 = 0, c_10 = 1, c_11 = 1\n. Example 2:\nNo number in the interval satisfies the constraints\n\n",
        "cf_contest_id": 1045,
        "cf_index": "H",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10\r\n1001\r\n0\r\n0\r\n1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "10\r\n10001\r\n1\r\n2\r\n3\r\n4\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "111100\r\n11110011011010100000\r\n0\r\n4\r\n4\r\n0\r\n",
                "1\r\n"
            ],
            [
                "101010\r\n10101010100100011100\r\n0\r\n6\r\n7\r\n0\r\n",
                "1\r\n"
            ],
            [
                "1000110000101111111\r\n111111111111111111111\r\n3\r\n5\r\n7\r\n5\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10000001001100111010\r\n0\r\n1\r\n0\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10111011110010011001\r\n0\r\n0\r\n1\r\n0\r\n",
                "1\r\n"
            ],
            [
                "1\r\n11011111011010110011\r\n0\r\n0\r\n0\r\n1\r\n",
                "1\r\n"
            ],
            [
                "11\r\n11000100010111011001\r\n0\r\n0\r\n0\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1011100000000000100\r\n1111111111111111111\r\n2\r\n5\r\n5\r\n6\r\n",
                "4480\r\n"
            ],
            [
                "1100101100001000000\r\n1111111111111111111\r\n3\r\n5\r\n5\r\n5\r\n",
                "3830\r\n"
            ],
            [
                "10010000000000001000\r\n11111111111111111111\r\n3\r\n5\r\n6\r\n5\r\n",
                "13356\r\n"
            ],
            [
                "1\r\n10100101100111110001\r\n0\r\n0\r\n0\r\n0\r\n",
                "1\r\n"
            ]
        ]
    }
]