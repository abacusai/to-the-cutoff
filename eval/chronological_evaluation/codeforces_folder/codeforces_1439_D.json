[
    {
        "name": "INOI Final Contests",
        "description": "Today is the final contest of INOI (Iranian National Olympiad in Informatics).\nThe contest room is a row with \n    n\n computers. All computers are numbered\nwith integers from \n    1\n to \n    n\n from left to right. There are \n    m\n\nparticipants, numbered with integers from \n    1\n to \n    m\n. We have an array\n\n    a\n of length \n    m\n where \n    a_i\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) is\nthe computer behind which the \n    i\n-th participant wants to sit. Also, we\nhave another array \n    b\n of length \n    m\n consisting of characters 'L' and\n'R'. \n    b_i\n is the side from which the \n    i\n-th participant enters the\nroom. 'L' means the participant enters from the left of computer \n    1\n and\ngoes from left to right, and 'R' means the participant enters from the right\nof computer \n    n\n and goes from right to left. The participants in the order\nfrom \n    1\n to \n    m\n enter the room one by one. The \n    i\n-th of them\nenters the contest room in the direction \n    b_i\n and goes to sit behind the\n\n    a_i\n-th computer. If it is occupied he keeps walking in his direction\nuntil he reaches the first unoccupied computer. After that, he sits behind it.\nIf he doesn't find any computer he gets upset and gives up on the contest. The\nmadness of the \n    i\n-th participant is the distance between his assigned\ncomputer (\n    a_i\n) and the computer he ends up sitting behind. The distance\nbetween computers \n    i\n and \n    j\n is equal to \n    |i - j|\n. The values in\nthe array \n    a\n can be equal. There exist \n    n^m \n    \u00b7 2^m\n possible\npairs of arrays \n    (a, b)\n. Consider all pairs of arrays \n    (a, b)\n such\nthat no person becomes upset. For each of them let's calculate the sum of\nparticipants madnesses. Find the sum of all these values. You will be given\nsome prime modulo \n    p\n. Find this sum by modulo \n    p\n. Input The only\nline contains three integers \n    n\n, \n    m\n, \n    p\n (\n    1 \n    \u2264 m \n    \u2264 n\n    \n    \u2264 500, 10^8 \n    \u2264 p \n    \u2264 10 ^ 9 + 9\n). It is guaranteed, that the\nnumber \n    p\n is prime. Output Print only one integer \u2014 the required sum by\nmodulo \n    p\n. Examples Input 3 1 1000000007 Output 0 Input 2 2 1000000009\nOutput 4 Input 3 2 998244353 Output 8 Input 20 10 1000000009 Output 352081045\nNote In the first test, there are three possible arrays \n    a\n:\n\n    1\n, \n    2\n, and \n    3\n and two possible\narrays \n    b\n: \n    \ud835\ude7b\n and \n    \ud835\ude81\n.\nFor all six pairs of arrays \n    (a, b)\n, the only participant will sit behind\nthe computer \n    a_1\n, so his madness will be \n    0\n. So the total sum of\nmadnesses will be \n    0\n. In the second test, all possible pairs of arrays\n\n    (a, b)\n, such that no person becomes upset are: \n    (\n    \n    1, 1\n    \n    ,\n    \n    \n    \n    \ud835\ude7b, \n    \ud835\ude7b\n    \n    )\n, the sum of madnesses is \n    1\n;\n\n    (\n    \n    1, 1\n    \n    , \n    \n    \n    \ud835\ude81, \n    \ud835\ude7b\n    \n    )\n, the sum of\nmadnesses is \n    1\n; \n    (\n    \n    2, 2\n    \n    , \n    \n    \n    \ud835\ude81,\n    \n    \ud835\ude81\n    \n    )\n, the sum of madnesses is \n    1\n; \n    (\n    \n    2, 2\n    \n    ,\n    \n    \n    \n    \ud835\ude7b, \n    \ud835\ude81\n    \n    )\n, the sum of madnesses is \n    1\n; all\npossible pairs of \n    a \n    \u2208\n    \n    \n    \n    1, 2\n    \n    , \n    \n    2, 1\n and\n\n    b \n    \u2208\n    \n    \n    \n    \n    \ud835\ude7b, \n    \ud835\ude7b\n    \n    , \n    \n    \n    \ud835\ude81,\n    \n    \ud835\ude7b\n    \n    , \n    \n    \n    \ud835\ude7b, \n    \ud835\ude81\n    \n    , \n    \n    \n    \ud835\ude81,\n    \n    \ud835\ude81\n, the sum of madnesses is \n    0\n. So, the answer is\n\n    1 + 1 + 1 + 1 + 0 \n    \u2026 = 4\n.\n\n",
        "cf_contest_id": 1439,
        "cf_index": "D",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "fft"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 1 1000000007\r\n",
                "0\r\n"
            ],
            [
                "2 2 1000000009\r\n",
                "4\r\n"
            ],
            [
                "3 2 998244353\r\n",
                "8\r\n"
            ],
            [
                "20 10 1000000009\r\n",
                "352081045\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 2 1000000007\r\n",
                "16\r\n"
            ],
            [
                "500 498 1000000007\r\n",
                "497900737\r\n"
            ],
            [
                "10 9 1000000007\r\n",
                "904119416\r\n"
            ],
            [
                "7 4 1000000009\r\n",
                "31488\r\n"
            ],
            [
                "8 8 700001153\r\n",
                "247497204\r\n"
            ],
            [
                "6 3 999999487\r\n",
                "768\r\n"
            ],
            [
                "310 228 998244799\r\n",
                "861313351\r\n"
            ],
            [
                "385 76 998244353\r\n",
                "750286580\r\n"
            ],
            [
                "259 76 998244353\r\n",
                "41310904\r\n"
            ],
            [
                "459 14 200003077\r\n",
                "142997933\r\n"
            ],
            [
                "1 1 1000000007\r\n",
                "0\r\n"
            ],
            [
                "498 155 998244799\r\n",
                "673213318\r\n"
            ],
            [
                "372 309 1000000009\r\n",
                "698627891\r\n"
            ],
            [
                "44 19 998244799\r\n",
                "81944049\r\n"
            ],
            [
                "70 39 700001153\r\n",
                "401935379\r\n"
            ],
            [
                "282 190 300001657\r\n",
                "210852530\r\n"
            ],
            [
                "370 100 1000000007\r\n",
                "112411341\r\n"
            ],
            [
                "234 21 200003077\r\n",
                "137641479\r\n"
            ],
            [
                "194 184 200003077\r\n",
                "76845836\r\n"
            ],
            [
                "499 497 998244799\r\n",
                "514945258\r\n"
            ],
            [
                "500 117 1000000007\r\n",
                "234794832\r\n"
            ],
            [
                "45 41 200003077\r\n",
                "176259818\r\n"
            ],
            [
                "2 1 1000000007\r\n",
                "0\r\n"
            ],
            [
                "2 2 1000000007\r\n",
                "4\r\n"
            ]
        ]
    }
]