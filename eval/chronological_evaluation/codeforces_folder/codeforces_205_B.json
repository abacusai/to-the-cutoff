[
    {
        "name": "Little Elephant and Sorting",
        "description": "The Little Elephant loves sortings. He has an array a consisting of n\nintegers. Let's number the array elements from 1 to n, then the i-th element\nwill be denoted as ai. The Little Elephant can make one move to choose an\narbitrary pair of integers l and r (1 \u2264 l \u2264 r \u2264 n) and increase ai by 1 for\nall i such that l \u2264 i \u2264 r. Help the Little Elephant find the minimum number of\nmoves he needs to convert array a to an arbitrary array sorted in the non-\ndecreasing order. Array a, consisting of n elements, is sorted in the non-\ndecreasing order if for any i (1 \u2264 i < n) ai \u2264 ai + 1 holds. Input The first\nline contains a single integer n (1 \u2264 n \u2264 10^5) \u2014 the size of array a. The\nnext line contains n integers, separated by single spaces \u2014 array a (1 \u2264 ai \u2264\n10^9). The array elements are listed in the line in the order of their index's\nincreasing. Output In a single line print a single integer \u2014 the answer to the\nproblem. Please, do not use the \nintegers in \u0421++. It is preferred to use the cin, cout streams or the \nspecifier. Examples Input 3 1 2 3 Output 0 Input 3 3 2 1 Output 2 Input 4 7 4\n1 47 Output 6 Note In the first sample the array is already sorted in the non-\ndecreasing order, so the answer is 0. In the second sample you need to perform\ntwo operations: first increase numbers from second to third (after that the\narray will be: [3, 3, 2]), and second increase only the last element (the\narray will be: [3, 3, 3]). In the third sample you should make at least 6\nsteps. The possible sequence of the operations is: (2; 3), (2; 3), (2; 3), (3;\n3), (3; 3), (3; 3). After that the array converts to [7, 7, 7, 47].\n\n",
        "cf_contest_id": 205,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy"
        ],
        "time_limit_seconds": 0.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 3\r\n",
                "0\r\n"
            ],
            [
                "3\r\n3 2 1\r\n",
                "2\r\n"
            ],
            [
                "4\r\n7 4 1 47\r\n",
                "6\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 2 3 4 5 6 7 8 9 1000000000\r\n",
                "0\r\n"
            ],
            [
                "10\r\n1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000 1\r\n",
                "4999999995\r\n"
            ],
            [
                "7\r\n47 47 47 47 47 47 48\r\n",
                "0\r\n"
            ],
            [
                "47\r\n479793446 951468508 89486286 338446715 32648506 624498057 608503040 669251062 922459299 753303599 15471514 633954104 726178809 25774434 239818174 886000554 86565563 340322990 233160987 244152140 400122002 267331289 113220645 554372347 628491411 141545764 72472415 172718507 818323067 524691081 273905810 540908460 264978418 971408123 336064021 681508839 387880395 446312618 486187013 687624992 335098176 259987774 832741771 604233011 459307319 378796313 520655387\r\n",
                "7171587476\r\n"
            ],
            [
                "47\r\n7 9 9 3 7 3 6 8 3 6 6 2 6 4 2 2 4 3 6 1 3 9 8 2 3 5 3 10 7 7 5 2 8 1 5 7 2 7 6 2 1 9 7 7 4 10 3\r\n",
                "76\r\n"
            ],
            [
                "74\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n940259367\r\n",
                "0\r\n"
            ],
            [
                "2\r\n710095427 879909817\r\n",
                "0\r\n"
            ],
            [
                "3\r\n39740000 928596641 251625421\r\n",
                "676971220\r\n"
            ],
            [
                "47\r\n3 999999997 5 999999991 9 999999996 1 999999991 6 999999996 4 999999998 6 999999994 4 999999994 7 999999990 1 999999993 6 999999997 4 999999996 1 999999990 7 1000000000 3 999999994 5 999999997 3 999999991 2 999999997 4 999999992 8 999999994 10 999999992 2 999999995 2 999999990 2\r\n",
                "22999999763\r\n"
            ],
            [
                "47\r\n703599938 780784195 912005704 957182560 961181825 964876912 996677776 997012583 999004240 999888999 999980718 999997556 999997940 999999989 999999991 999999991 999999999 999999999 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n",
                "0\r\n"
            ]
        ]
    }
]