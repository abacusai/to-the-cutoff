[
    {
        "name": "Easy Assembly",
        "description": "Emma loves playing with blocks. She has several cubic blocks of the same size\nthat are numbered with distinct integers written on them. She assembles towers\nfrom those blocks by stacking them vertically. A configuration of her game is\na set of towers that she has assembled from the blocks. Emma can perform two\nkinds of operations on a configuration of towers: Split any tower with more\nthan one block in it by taking any number of blocks from the top of the tower\nand moving them to a new tower keeping their order, so that the top block of\nthe old tower becomes the top block of the new tower. As a result of this\noperation, the number of towers increases by one. Combine any two towers by\nmoving blocks from one tower on top of the other tower in the same order. As a\nresult of this operation, the number of towers decreases by one.Emma wants to\nstack all the blocks into a single tower so that all blocks come in order\nsorted by the numbers \u2014 from the block with the minimal number at the top to\nthe block with the maximal number at the bottom. Emma wants to do as little of\nsplitting and combining operations as possible. Your task is to find the\nminimal number of operations she has to make and output how many splits and\ncombines are needed. Input The first line of the input file contains an\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10\n     000\n) \u2014 the number of towers in\nthe initial configuration. Next \n    n\n lines describe towers. Each tower\n\n    i\n is described by a line that starts with the number \n    k_i\n (\n    k_i\n    \n    \u2265 1\n; \n    \u2211_1^nk_i\n    \u2264 10\n     000\n) \u2014 the number of blocks in\nthe tower, followed by \n    k_i\n numbers \n    b_i,j\n (\n    1 \n    \u2264 b_i,j\n    \u2264 10^9\n) \u2014 numbers written on the blocks in the \n    i\n-th tower, listed\nfrom top to bottom. All block numbers listed in the input are different.\nOutput Output a line with two integers \n    s\n and \n    c\n \u2014 the number of\nsplit and combine operations Emma should make to get a single tower with\nblocks sorted by their numbers, so that the total number of operations is\nminimized. Example Input 2 3 3 5 8 2 9 2 Output 1 2 Note The example needs the\nfollowing operations (1 split and 2 combines). InitialSplit lastCombined 2nd\nonto 1stCombined 1st onto 2nd\n\n",
        "cf_contest_id": 1773,
        "cf_index": "E",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [],
        "private_cases": []
    }
]