[
    {
        "name": "Digit Minimization",
        "description": "There is an integer \n    n\n without zeros in its decimal representation. Alice\nand Bob are playing a game with this integer. Alice starts first. They play\nthe game in turns. On her turn, Alice must swap any two digits of the integer\nthat are on different positions. Bob on his turn always removes the last digit\nof the integer. The game ends when there is only one digit left. You have to\nfind the smallest integer Alice can get in the end, if she plays optimally.\nInput The input consists of multiple test cases. The first line contains a\nsingle integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test\ncases. Description of the test cases follows. The first and the only line of\neach test case contains the integer \n    n\n (\n    10 \n    \u2264 n \n    \u2264 10^9\n) \u2014\nthe integer for the game. \n    n\n does not have zeros in its decimal\nrepresentation. Output For each test case output a single integer \u2014 the\nsmallest integer Alice can get in the end of the game. Example Input 3 12 132\n487456398 Output 2 1 3 Note In the first test case Alice has to swap \n    1\n\nand \n    2\n. After that Bob removes the last digit, \n    1\n, so the answer is\n\n    2\n. In the second test case Alice can swap \n    3\n and \n    1\n:\n\n    312\n. After that Bob deletes the last digit: \n    31\n. Then Alice swaps\n\n    3\n and \n    1\n: \n    13\n and Bob deletes \n    3\n, so the answer is\n\n    1\n.\n\n",
        "cf_contest_id": 1684,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "games",
            "math",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n12\r\n132\r\n487456398\r\n",
                "2\r\n1\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]