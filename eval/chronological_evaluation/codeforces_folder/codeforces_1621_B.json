[
    {
        "name": "Integers Shop",
        "description": "The integers shop sells \n    n\n segments. The \n    i\n-th of them contains all\nintegers from \n    l_i\n to \n    r_i\n and costs \n    c_i\n coins. Tomorrow Vasya\nwill go to this shop and will buy some segments there. He will get all\nintegers that appear in at least one of bought segments. The total cost of the\npurchase is the sum of costs of all segments in it. After shopping, Vasya will\nget some more integers as a gift. He will get integer \n    x\n as a gift if and\nonly if all of the following conditions are satisfied: Vasya hasn't bought\n\n    x\n. Vasya has bought integer \n    l\n that is less than \n    x\n. Vasya has\nbought integer \n    r\n that is greater than \n    x\n. Vasya can get integer\n\n    x\n as a gift only once so he won't have the same integers after receiving\na gift. For example, if Vasya buys segment \n    [2, 4]\n for \n    20\n coins and\nsegment \n    [7, 8]\n for \n    22\n coins, he spends \n    42\n coins and receives\nintegers \n    2, 3, 4, 7, 8\n from these segments. He also gets integers\n\n    5\n and \n    6\n as a gift. Due to the technical issues only the first\n\n    s\n segments (that is, segments \n    [l_1, r_1], [l_2, r_2], \n    \u2026, [l_s,\n    r_s]\n) will be available tomorrow in the shop. Vasya wants to get (to buy or\nto get as a gift) as many integers as possible. If he can do this in\ndifferents ways, he selects the cheapest of them. For each \n    s\n from\n\n    1\n to \n    n\n, find how many coins will Vasya spend if only the first\n\n    s\n segments will be available. Input The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The\nfirst line of each test case contains the single integer \n    n\n (\n    1 \n    \u2264\n    n \n    \u2264 10^5\n) \u2014 the number of segments in the shop. Each of next \n    n\n\nlines contains three integers \n    l_i\n, \n    r_i\n, \n    c_i\n (\n    1 \n    \u2264 l_i\n    \n    \u2264 r_i \n    \u2264 10^9, 1 \n    \u2264 c_i \n    \u2264 10^9\n) \u2014 the ends of the\n\n    i\n-th segments and its cost. It is guaranteed that the total sum of\n\n    n\n over all test cases doesn't exceed \n    2 \n    \u00b7 10^5\n. Output For\neach test case output \n    n\n integers: the \n    s\n-th (\n    1 \n    \u2264 s \n    \u2264\n    n\n) of them should be the number of coins Vasia will spend in the shop if\nonly the first \n    s\n segments will be available. Example Input 3 2 2 4 20 7\n8 22 2 5 11 42 5 11 42 6 1 4 4 5 8 9 7 8 7 2 10 252 1 11 271 1 10 1 Output 20\n42 42 42 4 13 11 256 271 271 Note In the first test case if \n    s = 1\n then\nVasya can buy only the segment \n    [2, 4]\n for \n    20\n coins and get \n    3\n\nintegers. The way to get \n    7\n integers for \n    42\n coins in case \n    s =\n    2\n is described in the statement. In the second test case note, that there\ncan be the same segments in the shop.\n\n",
        "cf_contest_id": 1621,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2\r\n2 4 20\r\n7 8 22\r\n2\r\n5 11 42\r\n5 11 42\r\n6\r\n1 4 4\r\n5 8 9\r\n7 8 7\r\n2 10 252\r\n1 11 271\r\n1 10 1\r\n",
                "20\r\n42\r\n42\r\n42\r\n4\r\n13\r\n11\r\n256\r\n271\r\n271\r\n"
            ]
        ],
        "private_cases": []
    }
]