[
    {
        "name": "Right Triangles",
        "description": "You are given a n \u00d7 m field consisting only of periods ('.') and asterisks\n('*'). Your task is to count all right triangles with two sides parallel to\nthe square sides, whose vertices are in the centers of '*'-cells. A right\ntriangle is a triangle in which one angle is a right angle (that is, a 90\ndegree angle). Input The first line contains two positive integer numbers n\nand m (1 \u2264 n, m \u2264 1000). The following n lines consist of m characters each,\ndescribing the field. Only '.' and '*' are allowed. Output Output a single\nnumber \u2014 total number of square triangles in the field. Please, do not use\n\nuse cout (also you may use \n*..* .**. *.** Output 9\n\n",
        "cf_contest_id": 52,
        "cf_index": "B",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2\r\n**\r\n*.\r\n",
                "1\r\n"
            ],
            [
                "3 4\r\n*..*\r\n.**.\r\n*.**\r\n",
                "9\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 2\r\n..\r\n..\r\n*.\r\n",
                "0\r\n"
            ],
            [
                "1 2\r\n**\r\n",
                "0\r\n"
            ],
            [
                "1 3\r\n*.*\r\n",
                "0\r\n"
            ],
            [
                "5 2\r\n*.\r\n**\r\n.*\r\n..\r\n.*\r\n",
                "3\r\n"
            ],
            [
                "2 3\r\n.*.\r\n**.\r\n",
                "1\r\n"
            ],
            [
                "5 3\r\n**.\r\n..*\r\n*.*\r\n*.*\r\n*..\r\n",
                "13\r\n"
            ],
            [
                "4 2\r\n**\r\n**\r\n.*\r\n**\r\n",
                "15\r\n"
            ],
            [
                "5 2\r\n**\r\n**\r\n**\r\n*.\r\n*.\r\n",
                "18\r\n"
            ],
            [
                "2 3\r\n***\r\n.*.\r\n",
                "2\r\n"
            ],
            [
                "4 2\r\n.*\r\n.*\r\n..\r\n..\r\n",
                "0\r\n"
            ],
            [
                "13 26\r\n.**.****.*****************\r\n*************.**.*.*******\r\n.*.***.*********..********\r\n******.******.**.**.*****.\r\n.******.*************.*.**\r\n***********.*.************\r\n**.***.**.*.*********.*.**\r\n******.*****************.*\r\n*****.***.*.**********.***\r\n*.************************\r\n************.*************\r\n*..*******.******.********\r\n******.***.**.*.******.***\r\n",
                "65889\r\n"
            ],
            [
                "2 1\r\n.\r\n.\r\n",
                "0\r\n"
            ],
            [
                "2 1\r\n*\r\n*\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n.\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n*\r\n",
                "0\r\n"
            ]
        ]
    }
]