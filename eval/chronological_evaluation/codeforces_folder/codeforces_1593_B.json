[
    {
        "name": "Make it Divisible by 25",
        "description": "It is given a positive integer \n    n\n. In \n    1\n move, one can select any\nsingle digit and remove it (i.e. one selects some position in the number and\nremoves the digit located at this position). The operation cannot be performed\nif only one digit remains. If the resulting number contains leading zeroes,\nthey are automatically removed. E.g. if one removes from the number\n\n    32925\n the \n    3\n-rd digit, the resulting number will be \n    3225\n. If\none removes from the number \n    20099050\n the first digit, the resulting\nnumber will be \n    99050\n (the \n    2\n zeroes going next to the first digit\nare automatically removed). What is the minimum number of steps to get a\nnumber such that it is divisible by \n    25\n and positive? It is guaranteed\nthat, for each \n    n\n occurring in the input, the answer exists. It is\nguaranteed that the number \n    n\n has no leading zeros. Input The first line\ncontains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test\ncases. Then \n    t\n test cases follow. Each test case consists of one line\ncontaining one integer \n    n\n (\n    25 \n    \u2264 n \n    \u2264 10^18\n). It is\nguaranteed that, for each \n    n\n occurring in the input, the answer exists.\nIt is guaranteed that the number \n    n\n has no leading zeros. Output For each\ntest case output on a separate line an integer \n    k\n (\n    k \n    \u2265 0\n) \u2014 the\nminimum number of steps to get a number such that it is divisible by \n    25\n\nand positive. Example Input 5 100 71345 3259 50555 2050047 Output 0 3 1 3 2\nNote In the first test case, it is already given a number divisible by\n\n    25\n. In the second test case, we can remove the digits \n    1\n, \n    3\n,\nand \n    4\n to get the number \n    75\n. In the third test case, it's enough to\nremove the last digit to get the number \n    325\n. In the fourth test case, we\ncan remove the three last digits to get the number \n    50\n. In the fifth test\ncase, it's enough to remove the digits \n    4\n and \n    7\n.\n\n",
        "cf_contest_id": 1593,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "math",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n100\r\n71345\r\n3259\r\n50555\r\n2050047\r\n",
                "0\r\n3\r\n1\r\n3\r\n2\r\n"
            ]
        ],
        "private_cases": []
    }
]