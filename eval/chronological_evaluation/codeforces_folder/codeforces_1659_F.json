[
    {
        "name": "Tree and Permutation Game",
        "description": "There is a tree of \n    n\n vertices and a permutation \n    p\n of size \n    n\n.\nA token is present on vertex \n    x\n of the tree. Alice and Bob are playing a\ngame. Alice is in control of the permutation \n    p\n, and Bob is in control of\nthe token on the tree. In Alice's turn, she must pick two distinct numbers\n\n    u\n and \n    v\n (not positions; \n    u \n    \u2260 v\n), such that the token is\nneither at vertex \n    u\n nor vertex \n    v\n on the tree, and swap their\npositions in the permutation \n    p\n. In Bob's turn, he must move the token to\nan adjacent vertex from the one it is currently on. Alice wants to sort the\npermutation in increasing order. Bob wants to prevent that. Alice wins if the\npermutation is sorted in increasing order at the beginning or end of her turn.\nBob wins if he can make the game go on for an infinite number of moves (which\nmeans that Alice is never able to get a sorted permutation). Both players play\noptimally. Alice makes the first move. Given the tree, the permutation\n\n    p\n, and the vertex \n    x\n on which the token initially is, find the\nwinner of the game. Input The first line contains a single integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The description of\neach test case follows. The first line of each test case has two integers\n\n    n\n and \n    x\n (\n    3 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n; \n    1 \n    \u2264 x\n    \n    \u2264 n\n). Each of the next \n    n-1\n lines contains two integers \n    a\n\nand \n    b\n (\n    1 \n    \u2264 a, b \n    \u2264 n\n, \n    a \n    \u2260 b\n) indicating an\nundirected edge between vertex \n    a\n and vertex \n    b\n. It is guaranteed\nthat the given edges form a tree. The next line contains \n    n\n integers\n\n    p_1, p_2, \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n) \u2014 the permutation\n\n    p\n. The sum of \n    n\n over all test cases does not exceed \n    2 \n    \u00b7\n    10^5\n. Output For each test case, output one line containing Alice or Bob \u2014\nthe winner of the game. The output is case-sensitive. Examples Input 3 6 3 1 3\n3 2 4 3 3 6 5 3 2 1 3 6 4 5 3 2 1 2 3 2 1 3 2 3 2 1 2 3 2 1 2 3 Output Alice\nBob Alice Input 1 11 4 3 11 5 9 10 3 4 8 2 4 1 8 6 8 8 7 4 5 5 11 7 4 9 8 6 5\n11 10 2 3 1 Output Alice Note Here is the explanation for the first example:\nIn the first test case, there is a way for Alice to win. Here is a possible\nsequence of moves: Alice swaps \n    5\n and \n    6\n, resulting in\n\n    [2,1,3,5,4,6]\n. Bob moves the token to vertex \n    5\n. Alice swaps\n\n    1\n and \n    2\n, resulting in \n    [1,2,3,5,4,6]\n. Bob moves the token to\nvertex \n    3\n. Alice swaps \n    4\n and \n    5\n, resulting in\n\n    [1,2,3,4,5,6]\n, and wins. In the second test case, Alice cannot win since\nBob can make the game go on forever. Here is the sequence of moves: Alice can\nonly swap \n    1\n and \n    3\n, resulting in \n    [3,1,2]\n. Bob moves the token\nto vertex \n    1\n. Alice can only swap \n    2\n and \n    3\n, resulting in\n\n    [2,1,3]\n. Bob moves the token to vertex \n    2\n. Alice can only swap\n\n    1\n and \n    3\n, resulting in \n    [2,3,1]\n. Bob moves the token to vertex\n\n    3\n. Alice can only swap \n    1\n and \n    2\n, resulting in \n    [1,3,2]\n.\nBob moves the token to vertex \n    2\n. And then the sequence repeats\nforever.In the third test case, Alice wins immediately since the permutation\nis already sorted.\n\n",
        "cf_contest_id": 1659,
        "cf_index": "F",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "games",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n6 3\r\n1 3\r\n3 2\r\n4 3\r\n3 6\r\n5 3\r\n2 1 3 6 4 5\r\n3 2\r\n1 2\r\n3 2\r\n1 3 2\r\n3 2\r\n1 2\r\n3 2\r\n1 2 3\r\n",
                "Alice\r\nBob\r\nAlice\r\n"
            ],
            [
                "1\r\n11 4\r\n3 11\r\n5 9\r\n10 3\r\n4 8\r\n2 4\r\n1 8\r\n6 8\r\n8 7\r\n4 5\r\n5 11\r\n7 4 9 8 6 5 11 10 2 3 1\r\n",
                "Alice\r\n"
            ]
        ],
        "private_cases": []
    }
]