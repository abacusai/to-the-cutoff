[
    {
        "name": "Inna, Dima and Song",
        "description": "Inna is a great piano player and Dima is a modest guitar player. Dima has\nrecently written a song and they want to play it together. Of course, Sereja\nwants to listen to the song very much. A song is a sequence of notes. Dima and\nInna want to play each note at the same time. At that, they can play the i-th\nnote at volume v (1 \u2264 v \u2264 ai; v is an integer) both on the piano and the\nguitar. They should retain harmony, so the total volume with which the i-th\nnote was played on the guitar and the piano must equal bi. If Dima and Inna\ncannot play a note by the described rules, they skip it and Sereja's joy drops\nby 1. But if Inna and Dima play the i-th note at volumes xi and yi (xi + yi =\nbi) correspondingly, Sereja's joy rises by xi\u00b7yi. Sereja has just returned\nhome from the university and his current joy is 0. Help Dima and Inna play the\nsong so as to maximize Sereja's total joy after listening to the whole song!\nInput The first line of the input contains integer n (1 \u2264 n \u2264 10^5) \u2014 the\nnumber of notes in the song. The second line contains n integers ai (1 \u2264 ai \u2264\n10^6). The third line contains n integers bi (1 \u2264 bi \u2264 10^6). Output In a\nsingle line print an integer \u2014 the maximum possible joy Sereja feels after he\nlistens to a song. Examples Input 3 1 1 2 2 2 3 Output 4 Input 1 2 5 Output -1\nNote In the first sample, Dima and Inna play the first two notes at volume 1\n(1 + 1 = 2, the condition holds), they should play the last note at volumes 1\nand 2. Sereja's total joy equals: 1\u00b71 + 1\u00b71 + 1\u00b72 = 4. In the second sample,\nthere is no such pair (x, y), that 1 \u2264 x, y \u2264 2, x + y = 5, so Dima and Inna\nskip a note. Sereja's total joy equals -1.\n\n",
        "cf_contest_id": 390,
        "cf_index": "B",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 1 2\r\n2 2 3\r\n",
                "4\r\n"
            ],
            [
                "1\r\n2\r\n5\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n2 2 3 4 5 6 7 8 9 10\r\n2 2 3 4 5 6 7 8 9 10\r\n",
                "96\r\n"
            ],
            [
                "10\r\n1 2 3 4 5 6 7 8 9 10\r\n1 2 3 4 5 6 7 8 9 10\r\n",
                "94\r\n"
            ],
            [
                "3\r\n10000 10000 10000\r\n5000 5000 1\r\n",
                "12499999\r\n"
            ],
            [
                "2\r\n1 1\r\n2 1\r\n",
                "0\r\n"
            ]
        ]
    }
]