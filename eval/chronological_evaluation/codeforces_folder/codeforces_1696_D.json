[
    {
        "name": "Permutation Graph",
        "description": "A permutation is an array consisting of \n    n\n distinct integers from \n    1\n\nto \n    n\n in arbitrary order. For example, \n    [2,3,1,5,4]\n is a\npermutation, but \n    [1,2,2]\n is not a permutation (\n    2\n appears twice in\nthe array) and \n    [1,3,4]\n is also not a permutation (\n    n=3\n but there is\n\n    4\n in the array). You are given a permutation of \n    1,2,\n    \u2026,n\n,\n\n    [a_1,a_2,\n    \u2026,a_n]\n. For integers \n    i\n, \n    j\n such that \n    1\n    \u2264\n    i<j\n    \u2264 n\n, define \n    mn(i,j)\n as\n\n    min\n    _k=i^j a_k\n, and define \n    mx(i,j)\n\nas \n    max\n    _k=i^j a_k\n. Let us build an undirected graph of\n\n    n\n vertices, numbered \n    1\n to \n    n\n. For every pair of integers\n\n    1\n    \u2264 i<j\n    \u2264 n\n, if \n    mn(i,j)=a_i\n and\n\n    mx(i,j)=a_j\n both holds, or\n\n    mn(i,j)=a_j\n and \n    mx(i,j)=a_i\n both\nholds, add an undirected edge of length \n    1\n between vertices \n    i\n and\n\n    j\n. In this graph, find the length of the shortest path from vertex\n\n    1\n to vertex \n    n\n. We can prove that \n    1\n and \n    n\n will always\nbe connected via some path, so a shortest path always exists. Input Each test\ncontains multiple test cases. The first line contains the number of test cases\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 5\n    \u00b7 10^4\n). Description of the test cases\nfollows. The first line of each test case contains one integer \n    n\n\n(\n    1\n    \u2264 n\n    \u2264 2.5\n    \u00b7 10^5\n). The second line of each test case\ncontains \n    n\n integers \n    a_1\n, \n    a_2\n, \n    \u2026\n, \n    a_n\n\n(\n    1\n    \u2264 a_i\n    \u2264 n\n). It's guaranteed that \n    a\n is a permutation of\n\n    1\n, \n    2\n, \n    \u2026\n, \n    n\n. It is guaranteed that the sum of\n\n    n\n over all test cases does not exceed \n    5\n    \u00b7 10^5\n. Output For\neach test case, print a single line containing one integer \u2014 the length of the\nshortest path from \n    1\n to \n    n\n. Example Input 5 1 1 2 1 2 5 1 4 2 3 5 5\n2 1 5 3 4 10 7 4 8 1 6 10 3 5 2 9 Output 0 1 1 4 6 Note The following are\nillustrations of constructed graphs in example test cases. the constructed\ngraph in test case 1 the constructed graph in test case 2 the constructed\ngraph in test case 3 the constructed graph in test case 4 the constructed\ngraph in test case 5\n\n",
        "cf_contest_id": 1696,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "divide and conquer",
            "greedy",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n1\r\n1\r\n2\r\n1 2\r\n5\r\n1 4 2 3 5\r\n5\r\n2 1 5 3 4\r\n10\r\n7 4 8 1 6 10 3 5 2 9\r\n",
                "0\r\n1\r\n1\r\n4\r\n6\r\n"
            ]
        ],
        "private_cases": []
    }
]