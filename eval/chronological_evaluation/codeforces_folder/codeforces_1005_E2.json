[
    {
        "name": "Median on Segments (General Case Edition)",
        "description": "You are given an integer sequence \n    a_1, a_2, \n    \u2026, a_n\n. Find the\nnumber of pairs of indices \n    (l, r)\n (\n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 n\n) such\nthat the value of median of \n    a_l, a_l+1, \n    \u2026, a_r\n is exactly the\ngiven number \n    m\n. The median of a sequence is the value of an element\nwhich is in the middle of the sequence after sorting it in non-decreasing\norder. If the length of the sequence is even, the left of two middle elements\nis used. For example, if \n    a=[4, 2, 7, 5]\n then its median is \n    4\n since\nafter sorting the sequence, it will look like \n    [2, 4, 5, 7]\n and the left\nof two middle elements is equal to \n    4\n. The median of \n    [7, 1, 2, 9,\n    6]\n equals \n    6\n since after sorting, the value \n    6\n will be in the\nmiddle of the sequence. Write a program to find the number of pairs of indices\n\n    (l, r)\n (\n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 n\n) such that the value of median\nof \n    a_l, a_l+1, \n    \u2026, a_r\n is exactly the given number \n    m\n. Input\nThe first line contains integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n,m \n    \u2264\n    2\n    \u00b710^5\n) \u2014 the length of the given sequence and the required value of\nthe median. The second line contains an integer sequence \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 2\n    \u00b710^5\n). Output Print the required\nnumber. Examples Input 5 4 1 4 5 60 4 Output 8 Input 3 1 1 1 1 Output 6 Input\n15 2 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 Output 97 Note In the first example, the\nsuitable pairs of indices are: \n    (1, 3)\n, \n    (1, 4)\n, \n    (1, 5)\n,\n\n    (2, 2)\n, \n    (2, 3)\n, \n    (2, 5)\n, \n    (4, 5)\n and \n    (5, 5)\n.\n\n",
        "cf_contest_id": 1005,
        "cf_index": "E2",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4\r\n1 4 5 60 4\r\n",
                "8"
            ],
            [
                "3 1\r\n1 1 1\r\n",
                "6"
            ],
            [
                "15 2\r\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\r\n",
                "97"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n",
                "1"
            ],
            [
                "2 1\r\n1 2\r\n",
                "2"
            ],
            [
                "2 1\r\n2 1\r\n",
                "2"
            ],
            [
                "2 2\r\n1 2\r\n",
                "1"
            ],
            [
                "2 2\r\n2 1\r\n",
                "1"
            ],
            [
                "3 1\r\n1 2 3\r\n",
                "2"
            ],
            [
                "3 1\r\n1 3 2\r\n",
                "2"
            ],
            [
                "3 1\r\n2 1 3\r\n",
                "3"
            ],
            [
                "3 1\r\n2 3 1\r\n",
                "2"
            ],
            [
                "3 1\r\n3 1 2\r\n",
                "3"
            ],
            [
                "3 1\r\n3 2 1\r\n",
                "2"
            ],
            [
                "2 2\r\n1 1\r\n",
                "0"
            ],
            [
                "3 2\r\n1 1 2\r\n",
                "1"
            ],
            [
                "2 1\r\n1 1\r\n",
                "3"
            ],
            [
                "1 1\r\n2\r\n",
                "0"
            ],
            [
                "2 2\r\n4 1\r\n",
                "0"
            ],
            [
                "3 3\r\n5 5 3\r\n",
                "2"
            ],
            [
                "4 3\r\n3 5 2 3\r\n",
                "6"
            ],
            [
                "5 2\r\n1 9 2 8 10\r\n",
                "5"
            ],
            [
                "6 5\r\n7 2 11 8 9 12\r\n",
                "0"
            ],
            [
                "7 5\r\n14 4 1 11 12 3 4\r\n",
                "0"
            ],
            [
                "8 2\r\n2 6 11 14 10 9 9 5\r\n",
                "2"
            ],
            [
                "9 8\r\n10 8 8 15 1 2 13 8 6\r\n",
                "27"
            ],
            [
                "10 7\r\n14 20 3 3 8 16 17 13 6 4\r\n",
                "0"
            ],
            [
                "1 200000\r\n1\r\n",
                "0"
            ],
            [
                "1 200000\r\n200000\r\n",
                "1"
            ]
        ]
    }
]