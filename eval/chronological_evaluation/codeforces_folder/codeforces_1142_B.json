[
    {
        "name": "Lynyrd Skynyrd",
        "description": "Recently Lynyrd and Skynyrd went to a shop where Lynyrd bought a permutation\n\n    p\n of length \n    n\n, and Skynyrd bought an array \n    a\n of length\n\n    m\n, consisting of integers from \n    1\n to \n    n\n. Lynyrd and Skynyrd\nbecame bored, so they asked you \n    q\n queries, each of which has the\nfollowing form: \"does the subsegment of \n    a\n from the \n    l\n-th to the\n\n    r\n-th positions, inclusive, have a subsequence that is a cyclic shift of\n\n    p\n?\" Please answer the queries. A permutation of length \n    n\n is a\nsequence of \n    n\n integers such that each integer from \n    1\n to \n    n\n\nappears exactly once in it. A cyclic shift of a permutation \n    (p_1, p_2,\n    \n    \u2026, p_n)\n is a permutation \n    (p_i, p_i + 1, \n    \u2026, p_n, p_1,\n    p_2, \n    \u2026, p_i - 1)\n for some \n    i\n from \n    1\n to \n    n\n. For\nexample, a permutation \n    (2, 1, 3)\n has three distinct cyclic shifts:\n\n    (2, 1, 3)\n, \n    (1, 3, 2)\n, \n    (3, 2, 1)\n. A subsequence of a\nsubsegment of array \n    a\n from the \n    l\n-th to the \n    r\n-th positions,\ninclusive, is a sequence \n    a_i_1, a_i_2, \n    \u2026, a_i_k\n for some\n\n    i_1, i_2, \n    \u2026, i_k\n such that \n    l \n    \u2264 i_1 < i_2 < \n    \u2026 < i_k\n    \n    \u2264 r\n. Input The first line contains three integers \n    n\n, \n    m\n,\n\n    q\n (\n    1 \n    \u2264 n, m, q \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of the\npermutation \n    p\n, the length of the array \n    a\n and the number of\nqueries. The next line contains \n    n\n integers from \n    1\n to \n    n\n,\nwhere the \n    i\n-th of them is the \n    i\n-th element of the permutation.\nEach integer from \n    1\n to \n    n\n appears exactly once. The next line\ncontains \n    m\n integers from \n    1\n to \n    n\n, the \n    i\n-th of them is\nthe \n    i\n-th element of the array \n    a\n. The next \n    q\n lines describe\nqueries. The \n    i\n-th of these lines contains two integers \n    l_i\n and\n\n    r_i\n (\n    1 \n    \u2264 l_i \n    \u2264 r_i \n    \u2264 m\n), meaning that the \n    i\n-th\nquery is about the subsegment of the array from the \n    l_i\n-th to the\n\n    r_i\n-th positions, inclusive. Output Print a single string of length\n\n    q\n, consisting of \n    0\n and \n    1\n, the digit on the \n    i\n-th\npositions should be \n    1\n, if the subsegment of array \n    a\n from the\n\n    l_i\n-th to the \n    r_i\n-th positions, inclusive, contains a subsequence\nthat is a cyclic shift of \n    p\n, and \n    0\n otherwise. Examples Input 3 6 3\n2 1 3 1 2 3 1 2 3 1 5 2 6 3 5 Output 110 Input 2 4 3 2 1 1 1 2 2 1 2 2 3 3 4\nOutput 010 Note In the first example the segment from the \n    1\n-st to the\n\n    5\n-th positions is \n    1, 2, 3, 1, 2\n. There is a subsequence \n    1, 3,\n    2\n that is a cyclic shift of the permutation. The subsegment from the\n\n    2\n-nd to the \n    6\n-th positions also contains a subsequence \n    2, 1,\n    3\n that is equal to the permutation. The subsegment from the \n    3\n-rd to\nthe \n    5\n-th positions is \n    3, 1, 2\n, there is only one subsequence of\nlength \n    3\n (\n    3, 1, 2\n), but it is not a cyclic shift of the\npermutation. In the second example the possible cyclic shifts are \n    1, 2\n\nand \n    2, 1\n. The subsegment from the \n    1\n-st to the \n    2\n-nd positions\nis \n    1, 1\n, its subsequences are not cyclic shifts of the permutation. The\nsubsegment from the \n    2\n-nd to the \n    3\n-rd positions is \n    1, 2\n, it\ncoincides with the permutation. The subsegment from the \n    3\n to the \n    4\n\npositions is \n    2, 2\n, its subsequences are not cyclic shifts of the\npermutation.\n\n",
        "cf_contest_id": 1142,
        "cf_index": "B",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "math",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 6 3\r\n2 1 3\r\n1 2 3 1 2 3\r\n1 5\r\n2 6\r\n3 5\r\n",
                "110"
            ],
            [
                "2 4 3\r\n2 1\r\n1 1 2 2\r\n1 2\r\n2 3\r\n3 4\r\n",
                "010"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n1\r\n1\r\n1 1\r\n",
                "1"
            ]
        ]
    }
]