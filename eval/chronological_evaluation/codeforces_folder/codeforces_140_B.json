[
    {
        "name": "New Year Cards",
        "description": "As meticulous Gerald sets the table, Alexander finished another post on\nCodeforces and begins to respond to New Year greetings from friends. Alexander\nhas n friends, and each of them sends to Alexander exactly one e-card. Let us\nnumber his friends by numbers from 1 to n in the order in which they send the\ncards. Let's introduce the same numbering for the cards, that is, according to\nthe numbering the i-th friend sent to Alexander a card number i. Alexander\nalso sends cards to friends, but he doesn't look for the new cards on the Net.\nHe simply uses the cards previously sent to him (sometimes, however, he does\nneed to add some crucial details). Initially Alexander doesn't have any cards.\nAlexander always follows the two rules: He will never send to a firend a card\nthat this friend has sent to him. Among the other cards available to him at\nthe moment, Alexander always chooses one that Alexander himself likes most.\nAlexander plans to send to each friend exactly one card. Of course, Alexander\ncan send the same card multiple times. Alexander and each his friend has the\nlist of preferences, which is a permutation of integers from 1 to n. The first\nnumber in the list is the number of the favorite card, the second number shows\nthe second favorite, and so on, the last number shows the least favorite card.\nYour task is to find a schedule of sending cards for Alexander. Determine at\nwhich moments of time Alexander must send cards to his friends, to please each\nof them as much as possible. In other words, so that as a result of applying\ntwo Alexander's rules, each friend receives the card that is preferred for him\nas much as possible. Note that Alexander doesn't choose freely what card to\nsend, but he always strictly follows the two rules. Input The first line\ncontains an integer n (2 \u2264 n \u2264 300) \u2014 the number of Alexander's friends, equal\nto the number of cards. Next n lines contain his friends' preference lists.\nEach list consists of n different integers from 1 to n. The last line contains\nAlexander's preference list in the same format. Output Print n space-separated\nnumbers: the i-th number should be the number of the friend, whose card\nAlexander receives right before he should send a card to the i-th friend. If\nthere are several solutions, print any of them. Examples Input 4 1 2 3 4 4 1 3\n2 4 3 1 2 3 4 2 1 3 1 2 4 Output 2 1 1 4 Note In the sample, the algorithm of\nactions Alexander and his friends perform is as follows: Alexander receives\ncard 1 from the first friend. Alexander sends the card he has received (at the\nmoment he only has one card, and therefore it is the most preferable for him)\nto friends with the numbers 2 and 3. Alexander receives card 2 from the second\nfriend, now he has two cards \u2014 1 and 2. Alexander sends a card to the first\nfriend. Despite the fact that Alexander likes card 1 more, he sends card 2 as\nhe cannot send a friend the card sent by that very friend. Alexander receives\ncard 3 from the third friend. Alexander receives card 4 from the fourth\nfriend. Among the cards Alexander has number 3 is his favorite and he sends it\nto the fourth friend. Note that Alexander can send cards to multiple friends\nat a time (in this case the second and the third one). Alexander can send card\n3 to the fourth friend after he receives the third card or after he receives\nthe fourth card (both variants are correct).\n\n",
        "cf_contest_id": 140,
        "cf_index": "B",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 2 3 4\r\n4 1 3 2\r\n4 3 1 2\r\n3 4 2 1\r\n3 1 2 4\r\n",
                "2 1 1 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 2\r\n2 1\r\n2 1\r\n",
                "2 1\r\n"
            ],
            [
                "3\r\n1 2 3\r\n2 3 1\r\n1 3 2\r\n3 2 1\r\n",
                "2 3 1\r\n"
            ],
            [
                "5\r\n1 4 2 3 5\r\n5 1 3 4 2\r\n3 2 4 1 5\r\n1 4 5 3 2\r\n5 2 3 4 1\r\n5 4 2 1 3\r\n",
                "4 5 2 1 2\r\n"
            ],
            [
                "10\r\n5 1 6 2 8 3 4 10 9 7\r\n3 1 10 6 8 5 2 7 9 4\r\n2 9 1 4 10 6 8 7 3 5\r\n10 1 7 8 3 2 4 6 5 9\r\n3 2 10 4 7 8 5 6 1 9\r\n5 6 3 10 8 7 2 9 4 1\r\n6 5 1 3 2 7 9 10 8 4\r\n1 10 9 3 7 8 4 2 6 5\r\n6 8 4 5 9 1 2 10 7 3\r\n9 6 8 5 10 3 1 7 2 4\r\n5 7 4 8 9 6 1 10 3 2\r\n",
                "5 1 1 1 4 5 5 1 4 5\r\n"
            ]
        ]
    }
]