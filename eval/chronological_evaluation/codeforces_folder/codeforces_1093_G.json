[
    {
        "name": "Multidimensional Queries",
        "description": "You are given an array \n    a\n of \n    n\n points in \n    k\n-dimensional space.\nLet the distance between two points \n    a_x\n and \n    a_y\n be \n    \u2211\n    _i = 1^k |a_x, i - a_y, i|\n (it is also known as Manhattan\ndistance). You have to process \n    q\n queries of the following two types:\n\n    1\n \n    i\n \n    b_1\n \n    b_2\n ... \n    b_k\n \u2014 set \n    i\n-th element of\n\n    a\n to the point \n    (b_1, b_2, \n    \u2026, b_k)\n; \n    2\n \n    l\n \n    r\n \u2014\nfind the maximum distance between two points \n    a_i\n and \n    a_j\n, where\n\n    l \n    \u2264 i, j \n    \u2264 r\n. Input The first line contains two numbers \n    n\n\nand \n    k\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    1 \n    \u2264 k \n    \u2264 5\n) \u2014\nthe number of elements in \n    a\n and the number of dimensions of the space,\nrespectively. Then \n    n\n lines follow, each containing \n    k\n integers\n\n    a_i, 1\n, \n    a_i, 2\n, ..., \n    a_i, k\n (\n    -10^6 \n    \u2264 a_i, j\n    \u2264 10^6\n) \u2014 the coordinates of \n    i\n-th point. The next line contains\none integer \n    q\n (\n    1 \n    \u2264 q \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of\nqueries. Then \n    q\n lines follow, each denoting a query. There are two types\nof queries: \n    1\n \n    i\n \n    b_1\n \n    b_2\n ... \n    b_k\n (\n    1 \n    \u2264 i\n    \n    \u2264 n\n, \n    -10^6 \n    \u2264 b_j \n    \u2264 10^6\n) \u2014 set \n    i\n-th element of\n\n    a\n to the point \n    (b_1, b_2, \n    \u2026, b_k)\n; \n    2\n \n    l\n \n    r\n\n(\n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 n\n) \u2014 find the maximum distance between two\npoints \n    a_i\n and \n    a_j\n, where \n    l \n    \u2264 i, j \n    \u2264 r\n.There is at\nleast one query of the second type. Output Print the answer for each query of\nthe second type. Example Input 5 2 1 2 2 3 3 4 4 5 5 6 7 2 1 5 2 1 3 2 3 5 1 5\n-1 -2 2 1 5 1 4 -1 -2 2 1 5 Output 8 4 4 12 10\n\n",
        "cf_contest_id": 1093,
        "cf_index": "G",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "data structures"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5 2\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n7\r\n2 1 5\r\n2 1 3\r\n2 3 5\r\n1 5 -1 -2\r\n2 1 5\r\n1 4 -1 -2\r\n2 1 5\r\n",
                "8\r\n4\r\n4\r\n12\r\n10\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 1\r\n970715\r\n242683\r\n60388\r\n-211938\r\n-30886\r\n717189\r\n-297423\r\n237152\r\n-594589\r\n-907253\r\n10\r\n1 9 -454984\r\n1 10 483556\r\n1 2 766266\r\n2 4 6\r\n1 5 -570123\r\n1 9 972121\r\n2 6 10\r\n2 10 10\r\n2 1 6\r\n2 9 9\r\n",
                "929127\r\n1269544\r\n0\r\n1540838\r\n0\r\n"
            ],
            [
                "10 2\r\n-925889 -713397\r\n-505588 380282\r\n-785237 -396381\r\n625983 683987\r\n-397455 814105\r\n233383 -469234\r\n-697035 -315629\r\n79348 -675802\r\n-75463 -309949\r\n-680075 823843\r\n10\r\n2 1 3\r\n1 5 -600096 663306\r\n1 6 -829461 -369307\r\n1 7 230247 413064\r\n2 4 9\r\n2 3 10\r\n1 10 -252152 -698261\r\n1 9 -632659 -340026\r\n2 5 8\r\n2 5 6\r\n",
                "1513980\r\n2508738\r\n2508738\r\n2018552\r\n1261978\r\n"
            ],
            [
                "10 3\r\n-850863 -536550 928437\r\n972501 -574439 559752\r\n-352537 -967253 -171951\r\n-597464 177333 466798\r\n203280 -960760 655661\r\n562883 132759 -276411\r\n653113 -356413 799514\r\n490064 371581 -703188\r\n-723836 620698 -924501\r\n3613 -136008 132195\r\n10\r\n1 4 468704 658687 625502\r\n2 4 9\r\n1 9 -741695 -531303 -933143\r\n2 1 9\r\n1 6 -621284 -394568 675803\r\n2 2 10\r\n2 2 4\r\n2 6 8\r\n1 9 -991550 -318382 576639\r\n1 2 990873 78074 162188\r\n",
                "4088736\r\n3959034\r\n3959034\r\n3244634\r\n3256488\r\n"
            ]
        ]
    }
]