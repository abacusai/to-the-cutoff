[
    {
        "name": "New Year Tree Decorations",
        "description": "Due to atheistic Soviet past, Christmas wasn't officially celebrated in Russia\nfor most of the twentieth century. As a result, the Russian traditions for\nChristmas and New Year mixed into one event celebrated on the New Year but\nincluding the tree, a Santa-like 'Grandfather Frost', presents and huge family\nreunions and dinner parties all over the country. Bying a Tree at the New Year\nand installing it in the house is a tradition. Usually the whole family\ndecorates the tree on the New Year Eve. We hope that Codeforces is a big and\nloving family, so in this problem we are going to decorate a tree as well. So,\nour decoration consists of n pieces, each piece is a piece of colored paper,\nits border is a closed polyline of a special shape. The pieces go one by one\nas is shown on the picture. The i-th piece is a polyline that goes through\npoints: (0, 0), (0, y0), (1, y1), (2, y2), ..., (k, yk), (k, 0). The width of\neach piece equals k. The figure to the left shows the decoration, the figure\nto the right shows the individual pieces it consists of. The piece number 1\n(shown red on the figure) is the outer piece (we see it completely), piece\nnumber 2 (shown yellow) follows it (we don't see it completely as it is\npartially closed by the first piece) and so on. The programmers are quite\ncurious guys, so the moment we hung a decoration on the New Year tree we\nstarted to wonder: what area of each piece can people see? Input The first\nline contains two integers, n and k (1 \u2264 n, k \u2264 300). Each of the following n\nlines contains k + 1 integers \u2014 the description of the polyline. If the i-th\nline contains ontegers yi, 0, yi, 1, ..., yi, k, that means that the polyline\nof the i-th piece goes through points (0, 0), (0, yi, 0), (1, yi, 1), (2, yi,\n2), ..., (k, yi, k), (k, 0) (1 \u2264 yi, j \u2264 1000). Output Print n real numbers \u2014\nfor each polyline, the area of its visible part. The answer will be considered\ncorrect if its relative or absolute error do not exceed 10^-4. Examples Input\n2 2 2 1 2 1 2 1 Output 3.000000000000 0.500000000000 Input 1 1 1 1 Output\n1.000000000000 Input 4 1 2 7 7 2 5 5 6 4 Output 4.500000000000 1.250000000000\n0.050000000000 0.016666666667\n\n",
        "cf_contest_id": 379,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "geometry",
            "schedules",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2\r\n2 1 2\r\n1 2 1\r\n",
                "3\r\n0.5\r\n"
            ],
            [
                "1 1\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "4 1\r\n2 7\r\n7 2\r\n5 5\r\n6 4\r\n",
                "4.5\r\n1.25\r\n0.05\r\n0.0166667\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1000 1000\r\n",
                "1000\r\n"
            ],
            [
                "1 1\r\n1 1000\r\n",
                "500.501\r\n"
            ],
            [
                "1 1\r\n1000 1\r\n",
                "500.501\r\n"
            ],
            [
                "10 10\r\n7 5 5 5 9 10 9 8 7 5 10\r\n4 2 8 2 9 1 2 8 10 7 10\r\n9 7 7 2 5 1 5 4 7 9 7\r\n7 3 2 10 6 9 10 2 4 2 4\r\n1 4 8 6 9 2 1 3 6 2 8\r\n2 4 10 7 1 1 7 9 8 9 8\r\n8 3 10 9 4 9 9 1 9 6 3\r\n8 10 7 2 6 2 1 3 9 7 5\r\n1 8 3 1 7 2 8 8 3 3 9\r\n4 1 10 2 7 4 1 9 8 1 7\r\n",
                "71.5001\r\n6.5\r\n4.13334\r\n3.41964\r\n0.63631\r\n2.26742\r\n0.646465\r\n2.375\r\n0\r\n0\r\n"
            ],
            [
                "20 10\r\n10 1 5 3 3 2 6 10 4 1 1\r\n4 7 1 8 6 1 9 9 4 5 10\r\n1 7 5 6 10 4 6 5 10 5 3\r\n3 7 7 9 2 4 2 7 5 7 9\r\n6 9 3 6 2 3 4 2 6 9 8\r\n7 4 7 9 10 1 7 3 5 10 7\r\n2 10 10 5 8 3 8 1 3 5 8\r\n3 5 9 4 10 8 10 10 6 1 10\r\n10 3 10 1 8 9 3 5 2 2 9\r\n4 8 5 6 3 2 9 6 5 8 4\r\n6 7 6 9 1 9 3 8 6 1 4\r\n5 1 9 9 7 5 3 4 10 5 2\r\n5 2 9 7 2 8 5 6 3 10 7\r\n7 10 9 2 3 7 3 10 2 8 3\r\n1 1 1 5 9 3 9 8 5 7 6\r\n1 8 2 9 7 9 8 5 4 7 9\r\n7 2 7 1 6 9 9 6 9 6 8\r\n8 3 3 6 2 6 5 1 7 3 2\r\n5 8 4 6 1 2 5 3 1 6 2\r\n9 4 8 8 5 9 3 4 5 7 1\r\n",
                "40.5001\r\n20.5639\r\n11.6141\r\n4.21905\r\n2.88095\r\n1.56667\r\n3.49286\r\n6.29419\r\n0.3625\r\n0\r\n0\r\n0.457143\r\n0\r\n0.55\r\n0\r\n0.104167\r\n0.0833333\r\n0\r\n0\r\n0\r\n"
            ]
        ]
    }
]