[
    {
        "name": "Remove One Element",
        "description": "You are given an array \n    a\n consisting of \n    n\n integers. You can remove\nat most one element from this array. Thus, the final length of the array is\n\n    n-1\n or \n    n\n. Your task is to calculate the maximum possible length of\nthe strictly increasing contiguous subarray of the remaining array. Recall\nthat the contiguous subarray \n    a\n with indices from \n    l\n to \n    r\n is\n\n    a[l \n    \u2026 r] = a_l, a_l + 1, \n    \u2026, a_r\n. The subarray \n    a[l\n    \n    \u2026 r]\n is called strictly increasing if \n    a_l < a_l+1 < \n    \u2026 <\n    a_r\n. Input The first line of the input contains one integer \n    n\n (\n    2\n    \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of elements in \n    a\n. The\nsecond line of the input contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n), where \n    a_i\n is the \n    i\n-th\nelement of \n    a\n. Output Print one integer \u2014 the maximum possible length of\nthe strictly increasing contiguous subarray of the array \n    a\n after\nremoving at most one element. Examples Input 5 1 2 5 3 4 Output 4 Input 2 1 2\nOutput 2 Input 7 6 5 4 3 2 4 3 Output 2 Note In the first example, you can\ndelete \n    a_3=5\n. Then the resulting array will be equal to \n    [1, 2, 3,\n    4]\n and the length of its largest increasing subarray will be equal to\n\n    4\n.\n\n",
        "cf_contest_id": 1272,
        "cf_index": "D",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2 5 3 4\r\n",
                "4\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "2\r\n"
            ],
            [
                "7\r\n6 5 4 3 2 4 3\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n6 5 4 3\r\n",
                "1\r\n"
            ],
            [
                "2\r\n2 1\r\n",
                "1\r\n"
            ],
            [
                "5\r\n111 111 100 22 3\r\n",
                "1\r\n"
            ],
            [
                "4\r\n26 18 26 9\r\n",
                "2\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "5\r\n1 2 3 4 4\r\n",
                "4\r\n"
            ],
            [
                "7\r\n5 2 3 4 5 6 3\r\n",
                "5\r\n"
            ],
            [
                "15\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "5\r\n7 6 5 6 1\r\n",
                "2\r\n"
            ],
            [
                "3\r\n2 1 2\r\n",
                "2\r\n"
            ],
            [
                "3\r\n3 2 1\r\n",
                "1\r\n"
            ],
            [
                "3\r\n2 2 1\r\n",
                "1\r\n"
            ],
            [
                "12\r\n123654 1 2 3 4 5 6 7 8 9 10 11\r\n",
                "11\r\n"
            ],
            [
                "11\r\n123654 1 2 3 4 5 6 7 8 9 10\r\n",
                "10\r\n"
            ],
            [
                "2\r\n7 6\r\n",
                "1\r\n"
            ],
            [
                "2\r\n2 2\r\n",
                "1\r\n"
            ],
            [
                "6\r\n6 6 6 6 6 6\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 1 1\r\n",
                "1\r\n"
            ],
            [
                "5\r\n5 5 5 5 5\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 2 1\r\n",
                "2\r\n"
            ],
            [
                "4\r\n5 1 2 1\r\n",
                "2\r\n"
            ],
            [
                "4\r\n8 9 8 10\r\n",
                "3\r\n"
            ],
            [
                "5\r\n5 4 3 2 1\r\n",
                "1\r\n"
            ],
            [
                "3\r\n43 25 21\r\n",
                "1\r\n"
            ],
            [
                "6\r\n4 5 10 10 12 13\r\n",
                "5\r\n"
            ],
            [
                "8\r\n53 43 6 58 62 52 66 8\r\n",
                "4\r\n"
            ],
            [
                "10\r\n1 2 10 10 3 4 5 6 7 8\r\n",
                "6\r\n"
            ]
        ]
    }
]