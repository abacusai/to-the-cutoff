[
    {
        "name": "Daleks' Invasion (medium)",
        "description": "After a successful field test, Heidi is considering deploying a trap along\nsome Corridor, possibly not the first one. She wants to avoid meeting the\nDaleks inside the Time Vortex, so for abundance of caution she considers\nplacing the traps only along those Corridors that are not going to be used\naccording to the current Daleks' plan \u2013 which is to use a minimum spanning\ntree of Corridors. Heidi knows that all energy requirements for different\nCorridors are now different, and that the Daleks have a single unique plan\nwhich they are intending to use. Your task is to calculate the number\n\n    E_max(c)\n, which is defined in the same way as in the easy version \u2013\ni.e., the largest \n    e \n    \u2264 10^9\n such that if we changed the energy of\ncorridor \n    c\n to \n    e\n, the Daleks might use it \u2013 but now for every\ncorridor that Heidi considers. Input The first line: number \n    n\n of\ndestinations, number \n    m\n of Time Corridors (\n    2 \n    \u2264 n \n    \u2264 10^5\n,\n\n    n - 1 \n    \u2264 m \n    \u2264 10^6\n). The next \n    m\n lines: destinations\n\n    a\n, \n    b\n and energy \n    e\n (\n    1 \n    \u2264 a, b \n    \u2264 n\n, \n    a \n    \u2260\n    b\n, \n    0 \n    \u2264 e \n    \u2264 10^9\n). No pair \n    a, b\n will repeat.\nThe graph is guaranteed to be connected. All energy requirements \n    e\n are\ndistinct. Output Output \n    m-(n-1)\n lines, each containing one integer:\n\n    E_max(c_i)\n for the \n    i\n-th Corridor \n    c_i\n from the input that\nis not part of the current Daleks' plan (minimum spanning tree). Example Input\n3 3 1 2 8 2 3 3 3 1 4 Output 4 Note If \n    m = n-1\n, then you need not output\nanything.\n\n",
        "cf_contest_id": 1184,
        "cf_index": "E2",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs",
            "shortest paths",
            "trees"
        ],
        "time_limit_seconds": 15.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n1 2 8\r\n2 3 3\r\n3 1 4\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1 2 944277353\r\n",
                ""
            ],
            [
                "10 9\r\n5 10 606854707\r\n3 8 737506631\r\n2 4 429066157\r\n8 9 947792932\r\n6 4 56831480\r\n2 5 541638168\r\n10 7 20498997\r\n7 9 250445792\r\n6 1 9522145\r\n",
                ""
            ],
            [
                "10 10\r\n4 8 149799098\r\n1 9 441387450\r\n2 6 928239402\r\n8 2 218467721\r\n5 4 977011818\r\n10 1 747500850\r\n10 7 851690801\r\n3 9 861306802\r\n6 3 699067097\r\n7 5 196064252\r\n",
                "928239402\r\n"
            ],
            [
                "10 9\r\n5 9 151288246\r\n3 5 481488672\r\n5 6 391594456\r\n10 5 728759526\r\n5 2 805393633\r\n5 4 714291015\r\n5 7 695244366\r\n1 5 225107090\r\n5 8 524571007\r\n",
                ""
            ],
            [
                "10 9\r\n2 6 346401989\r\n10 8 669413260\r\n1 2 610565686\r\n5 4 715678008\r\n7 3 871652693\r\n5 10 68113756\r\n8 3 201574229\r\n8 2 149162258\r\n5 9 785306306\r\n",
                ""
            ],
            [
                "10 9\r\n10 6 372466999\r\n8 10 747983735\r\n7 3 152533203\r\n9 4 277637756\r\n6 3 433907019\r\n3 5 559956918\r\n8 2 749679249\r\n3 1 793145160\r\n9 7 24657622\r\n",
                ""
            ],
            [
                "10 17\r\n8 2 166387394\r\n1 6 237498837\r\n6 9 99779164\r\n4 7 525284035\r\n5 3 354857458\r\n5 4 957219660\r\n4 8 447860623\r\n4 2 765484117\r\n4 1 862758183\r\n6 10 141683709\r\n6 3 249157457\r\n4 3 868580407\r\n4 10 509806549\r\n2 5 163095060\r\n6 4 653748301\r\n9 4 804011952\r\n7 6 240252621\r\n",
                "447860623\r\n447860623\r\n447860623\r\n447860623\r\n447860623\r\n447860623\r\n447860623\r\n447860623\r\n"
            ],
            [
                "10 23\r\n3 7 292245429\r\n5 9 644603858\r\n6 1 884124407\r\n6 3 244841288\r\n1 10 38146622\r\n6 2 529286525\r\n8 9 335938769\r\n10 9 399043296\r\n5 1 23773535\r\n9 4 245601913\r\n1 4 137094263\r\n10 5 938320345\r\n8 10 163440023\r\n6 8 290082836\r\n8 5 883612433\r\n4 6 444836263\r\n5 7 574857993\r\n3 10 566664661\r\n1 7 471134851\r\n2 4 241024296\r\n3 9 830974156\r\n2 8 33633506\r\n2 5 836391860\r\n",
                "245601913\r\n290082836\r\n290082836\r\n245601913\r\n245601913\r\n38146622\r\n163440023\r\n290082836\r\n292245429\r\n290082836\r\n292245429\r\n163440023\r\n290082836\r\n163440023\r\n"
            ],
            [
                "10 23\r\n6 4 861606467\r\n9 8 623704841\r\n10 1 133361044\r\n8 5 617644813\r\n6 7 165487071\r\n1 5 142216854\r\n3 5 794256868\r\n8 10 289613671\r\n2 10 444236719\r\n4 8 197742755\r\n9 7 686841046\r\n2 4 836881642\r\n4 1 256190959\r\n10 3 282914152\r\n2 5 819846864\r\n1 9 433108807\r\n5 4 253997951\r\n3 1 77348173\r\n3 2 726719509\r\n6 5 220427628\r\n7 3 870576760\r\n8 2 26067477\r\n9 3 980800089\r\n",
                "253997951\r\n433108807\r\n253997951\r\n142216854\r\n253997951\r\n253997951\r\n433108807\r\n197742755\r\n253997951\r\n133361044\r\n253997951\r\n253997951\r\n220427628\r\n433108807\r\n"
            ],
            [
                "10 22\r\n3 1 452480187\r\n4 7 143663931\r\n4 3 34459005\r\n9 5 207495009\r\n4 9 645089995\r\n2 1 47132091\r\n5 10 442015877\r\n8 10 863305236\r\n4 2 790681324\r\n3 6 216728624\r\n8 2 936313463\r\n2 7 997285327\r\n1 5 67550244\r\n10 6 15791397\r\n6 7 151400164\r\n3 8 636684530\r\n6 9 890128172\r\n5 6 771400672\r\n7 3 236669094\r\n10 9 373277926\r\n7 1 186819658\r\n10 4 974389859\r\n",
                "186819658\r\n207495009\r\n186819658\r\n636684530\r\n186819658\r\n151400164\r\n636684530\r\n186819658\r\n207495009\r\n186819658\r\n143663931\r\n207495009\r\n151400164\r\n"
            ],
            [
                "10 12\r\n6 10 826624278\r\n5 4 894720922\r\n7 6 936937925\r\n9 1 277439546\r\n1 3 253080431\r\n3 2 191875277\r\n3 5 830704966\r\n4 8 354568025\r\n7 5 786556082\r\n9 10 421459197\r\n3 10 184630839\r\n9 2 737415175\r\n",
                "830704966\r\n277439546\r\n277439546\r\n"
            ],
            [
                "10 26\r\n9 5 277429172\r\n10 8 789225932\r\n5 2 992601916\r\n9 8 277294258\r\n8 6 245446241\r\n6 2 439001127\r\n7 1 447891377\r\n10 6 699661758\r\n1 9 865851152\r\n2 8 299785854\r\n7 10 756200111\r\n8 3 431547893\r\n5 6 465205287\r\n7 4 957301499\r\n3 4 308491540\r\n3 7 252157788\r\n10 5 282875145\r\n1 8 262659451\r\n5 4 981921705\r\n2 4 160482450\r\n5 3 754541486\r\n7 8 608514491\r\n2 9 223037582\r\n4 8 437313046\r\n8 5 594074027\r\n6 9 843134026\r\n",
                "282875145\r\n277429172\r\n277294258\r\n308491540\r\n282875145\r\n277294258\r\n277294258\r\n308491540\r\n308491540\r\n277429172\r\n308491540\r\n277429172\r\n308491540\r\n308491540\r\n277294258\r\n277429172\r\n277294258\r\n"
            ]
        ]
    }
]