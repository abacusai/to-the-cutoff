[
    {
        "name": "Yet Another Maxflow Problem",
        "description": "In this problem you will have to deal with a very special network. The network\nconsists of two parts: part A and part B. Each part consists of n vertices;\ni-th vertex of part A is denoted as Ai, and i-th vertex of part B is denoted\nas Bi. For each index i (1 \u2264 i < n) there is a directed edge from vertex Ai to\nvertex Ai + 1, and from Bi to Bi + 1, respectively. Capacities of these edges\nare given in the input. Also there might be several directed edges going from\npart A to part B (but never from B to A). You have to calculate the maximum\nflow value from A1 to Bn in this network. Capacities of edges connecting Ai to\nAi + 1 might sometimes change, and you also have to maintain the maximum flow\nvalue after these changes. Apart from that, the network is fixed (there are no\nchanges in part B, no changes of edges going from A to B, and no edge\ninsertions or deletions). Take a look at the example and the notes to\nunderstand the structure of the network better. Input The first line contains\nthree integer numbers n, m and q (2 \u2264 n, m \u2264 2\u00b710^5, 0 \u2264 q \u2264 2\u00b710^5) \u2014 the\nnumber of vertices in each part, the number of edges going from A to B and the\nnumber of changes, respectively. Then n - 1 lines follow, i-th line contains\ntwo integers xi and yi denoting that the edge from Ai to Ai + 1 has capacity\nxi and the edge from Bi to Bi + 1 has capacity yi (1 \u2264 xi, yi \u2264 10^9). Then m\nlines follow, describing the edges from A to B. Each line contains three\nintegers x, y and z denoting an edge from Ax to By with capacity z (1 \u2264 x, y \u2264\nn, 1 \u2264 z \u2264 10^9). There might be multiple edges from Ax to By. And then q\nlines follow, describing a sequence of changes to the network. i-th line\ncontains two integers vi and wi, denoting that the capacity of the edge from\nAvi to Avi + 1 is set to wi (1 \u2264 vi < n, 1 \u2264 wi \u2264 10^9). Output Firstly, print\nthe maximum flow value in the original network. Then print q integers, i-th of\nthem must be equal to the maximum flow value after i-th change. Example Input\n4 3 2 1 2 3 4 5 6 2 2 7 1 4 8 4 3 9 1 100 2 100 Output 9 14 14 Note This is\nthe original network in the example:\n\n",
        "cf_contest_id": 903,
        "cf_index": "G",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "flows",
            "graphs"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3 2\r\n1 2\r\n3 4\r\n5 6\r\n2 2 7\r\n1 4 8\r\n4 3 9\r\n1 100\r\n2 100\r\n",
                "9\r\n14\r\n14\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 10 10\r\n291546518 199012865\r\n327731857 137263959\r\n145140225 631959974\r\n559674936 815057131\r\n677050070 949982094\r\n839693202 160045764\r\n967872826 489258292\r\n706535160 594950620\r\n230389718 274785590\r\n1 10 861488983\r\n7 10 994974516\r\n4 3 117635148\r\n6 2 167777067\r\n5 7 445100727\r\n2 1 921884141\r\n7 7 959090371\r\n7 10 181366040\r\n10 7 81752829\r\n6 7 936166852\r\n3 990769845\r\n4 35744486\r\n9 546990449\r\n7 359218204\r\n7 77668723\r\n8 653500720\r\n6 5995747\r\n5 383604942\r\n3 184831761\r\n7 149619462\r\n",
                "1143893167\r\n1153035501\r\n1057279233\r\n1057279233\r\n1057279233\r\n1057279233\r\n1057279233\r\n1057279233\r\n1057279233\r\n1057279233\r\n1057279233\r\n"
            ]
        ]
    }
]