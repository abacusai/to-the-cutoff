[
    {
        "name": "Tree Elimination",
        "description": "Vasya has a tree with \n    n\n vertices numbered from \n    1\n to \n    n\n, and\n\n    n - 1\n edges numbered from \n    1\n to \n    n - 1\n. Initially each vertex\ncontains a token with the number of the vertex written on it. Vasya plays a\ngame. He considers all edges of the tree by increasing of their indices. For\nevery edge he acts as follows: If both endpoints of the edge contain a token,\nremove a token from one of the endpoints and write down its number. Otherwise,\ndo nothing.The result of the game is the sequence of numbers Vasya has written\ndown. Note that there may be many possible resulting sequences depending on\nthe choice of endpoints when tokens are removed. Vasya has played for such a\nlong time that he thinks he exhausted all possible resulting sequences he can\nobtain. He wants you to verify him by computing the number of distinct\nsequences modulo \n    998\n     244\n     353\n. Input The first line contains a\nsingle integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number\nof vertices of the tree. The next \n    n - 1\n lines describe edges of the\ntree. The \n    i\n-th of these lines contains two integers \n    u_i, v_i\n (\n    1\n    \n    \u2264 u_i, v_i \n    \u2264 n\n) \u2014 endpoints of the edge with index \n    i\n. It is\nguaranteed that the given graph is indeed a tree. Output Print a single\ninteger \u2014 the number of distinct sequences modulo \n    998\n     244\n     353\n.\nExamples Input 5 1 2 1 3 1 4 1 5 Output 5 Input 7 7 2 7 6 1 2 7 5 4 7 3 5\nOutput 10 Note In the first sample case the distinct sequences are \n    (1), (2,\n    1), (2, 3, 1), (2, 3, 4, 1), (2, 3, 4, 5)\n. Int the second sample case the\ndistinct sequences are \n    (2, 6, 5, 3), (2, 6, 5, 7), (2, 6, 7, 2), (2, 6, 7,\n    5), (2, 7, 3), (2, 7, 5), (7, 1, 3), (7, 1, 5), (7, 2, 3), (7, 2, 5)\n.\n\n",
        "cf_contest_id": 1276,
        "cf_index": "D",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n",
                "5"
            ],
            [
                "7\r\n7 2\r\n7 6\r\n1 2\r\n7 5\r\n4 7\r\n3 5\r\n",
                "10"
            ]
        ],
        "private_cases": [
            [
                "2\r\n2 1\r\n",
                "2"
            ],
            [
                "3\r\n3 1\r\n2 1\r\n",
                "3"
            ],
            [
                "4\r\n1 3\r\n1 4\r\n4 2\r\n",
                "5"
            ],
            [
                "4\r\n1 2\r\n2 4\r\n2 3\r\n",
                "4"
            ],
            [
                "10\r\n1 2\r\n6 5\r\n2 7\r\n1 8\r\n2 10\r\n9 1\r\n3 2\r\n3 4\r\n5 1\r\n",
                "28"
            ]
        ]
    }
]