[
    {
        "name": "Train Maintenance",
        "description": "Kawasiro Nitori is excellent in engineering. Thus she has been appointed to\nhelp maintain trains. There are \n    n\n models of trains, and Nitori's\ndepartment will only have at most one train of each model at any moment. In\nthe beginning, there are no trains, at each of the following \n    m\n days, one\ntrain will be added, or one train will be removed. When a train of model\n\n    i\n is added at day \n    t\n, it works for \n    x_i\n days (day \n    t\n\ninclusive), then it is in maintenance for \n    y_i\n days, then in work for\n\n    x_i\n days again, and so on until it is removed. In order to make\nmanagement easier, Nitori wants you to help her calculate how many trains are\nin maintenance in each day. On a day a train is removed, it is not counted as\nin maintenance. Input The first line contains two integers \n    n\n, \n    m\n\n(\n    1 \n    \u2264 n,m \n    \u2264 2 \n    \u00b7 10^5\n). The \n    i\n-th of the next \n    n\n\nlines contains two integers \n    x_i,y_i\n (\n    1 \n    \u2264 x_i,y_i \n    \u2264 10^9\n).\nEach of the next \n    m\n lines contains two integers \n    op\n, \n    k\n (\n    1\n    \n    \u2264 k \n    \u2264 n\n, \n    op = 1\n or \n    op = 2\n). If \n    op=1\n, it means\nthis day's a train of model \n    k\n is added, otherwise the train of model\n\n    k\n is removed. It is guaranteed that when a train of model \n    x\n is\nadded, there is no train of the same model in the department, and when a train\nof model \n    x\n is removed, there is such a train in the department. Output\nPrint \n    m\n lines, The \n    i\n-th of these lines contains one integers,\ndenoting the number of trains in maintenance in the \n    i\n-th day. Examples\nInput 3 4 10 15 12 10 1 1 1 3 1 1 2 1 2 3 Output 0 1 0 0 Input 5 4 1 1\n10000000 100000000 998244353 1 2 1 1 2 1 5 2 5 1 5 1 1 Output 0 0 0 1 Note\nConsider the first example: The first day: Nitori adds a train of model\n\n    3\n. Only a train of model \n    3\n is running and no train is in\nmaintenance. The second day: Nitori adds a train of model \n    1\n. A train of\nmodel \n    1\n is running and a train of model \n    3\n is in maintenance. The\nthird day: Nitori removes a train of model \n    1\n. The situation is the same\nas the first day. The fourth day: Nitori removes a train of model \n    3\n.\nThere are no trains at all.\n\n",
        "cf_contest_id": 1580,
        "cf_index": "C",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 4\r\n10 15\r\n12 10\r\n1 1\r\n1 3\r\n1 1\r\n2 1\r\n2 3\r\n",
                "0\r\n1\r\n0\r\n0\r\n"
            ],
            [
                "5 4\r\n1 1\r\n10000000 100000000\r\n998244353 1\r\n2 1\r\n1 2\r\n1 5\r\n2 5\r\n1 5\r\n1 1\r\n",
                "0\r\n0\r\n0\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 10\r\n3 10\r\n9 6\r\n430995384 733598623\r\n2 9\r\n5 10\r\n657453515 169535970\r\n3 10\r\n8 6\r\n10 6\r\n7 8\r\n1 1\r\n2 1\r\n1 8\r\n2 8\r\n1 9\r\n1 4\r\n2 9\r\n1 3\r\n1 5\r\n1 6\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "20 20\r\n1 4\r\n864803385 772221280\r\n17 4\r\n12 3\r\n8 2\r\n15 4\r\n6 17\r\n16 11\r\n188952235 273519822\r\n7 8\r\n17 12\r\n2 7\r\n15 9\r\n14 19\r\n7 19\r\n2 9\r\n15 15\r\n7 3\r\n15 7\r\n7 17\r\n1 11\r\n1 8\r\n1 1\r\n1 20\r\n1 9\r\n1 18\r\n1 13\r\n1 12\r\n1 6\r\n1 4\r\n1 19\r\n1 7\r\n1 14\r\n1 10\r\n1 5\r\n1 2\r\n1 15\r\n1 16\r\n1 17\r\n1 3\r\n",
                "0\r\n0\r\n0\r\n1\r\n1\r\n1\r\n1\r\n0\r\n1\r\n2\r\n3\r\n3\r\n3\r\n4\r\n4\r\n3\r\n2\r\n4\r\n6\r\n7\r\n"
            ]
        ]
    }
]