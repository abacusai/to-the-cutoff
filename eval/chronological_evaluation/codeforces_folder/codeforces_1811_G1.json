[
    {
        "name": "Vlad and the Nice Paths (easy version)",
        "description": "This is an easy version of the problem, it differs from the hard one only by\nconstraints on \n    n\n and \n    k\n. Vlad found a row of \n    n\n tiles and the\ninteger \n    k\n. The tiles are indexed from left to right and the \n    i\n-th\ntile has the color \n    c_i\n. After a little thought, he decided what to do\nwith it. You can start from any tile and jump to any number of tiles right,\nforming the path \n    p\n. Let's call the path \n    p\n of length \n    m\n nice\nif: \n    p\n can be divided into blocks of length exactly \n    k\n, that is,\n\n    m\n is divisible by \n    k\n; \n    c_p_1 = c_p_2 = \n    \u2026 = c_p_k\n;\n\n    c_p_k+1 = c_p_k+2 = \n    \u2026 = c_p_2k\n; \n    \u2026\n\n\n    c_p_m-k+1 = c_p_m-k+2 = \n    \u2026 = c_p_m\n; Your task is to\nfind the number of nice paths of maximum length. Since this number may be too\nlarge, print it modulo \n    10^9 + 7\n. Input The first line of each test\ncontains the integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test\ncases in the test. The first line of each test case contains two integers\n\n    n\n and \n    k\n (\n    1 \n    \u2264 k \n    \u2264 n \n    \u2264 100\n) \u2014 the number of tiles\nin a row and the length of the block. The second line of each test case\ncontains \n    n\n integers \n    c_1, c_2, c_3, \n    \u2026, c_n\n (\n    1 \n    \u2264 c_i\n    \n    \u2264 n\n) \u2014 tile colors. It is guaranteed that the sum of \n    n^3\n over all\ntest cases does not exceed \n    5 \n    \u00b7 10^6\n. Output Print \n    t\n numbers,\neach of which is the answer to the corresponding test case \u2014 the number of\nnice paths of maximum length modulo \n    10^9 + 7\n. Example Input 5 5 2 1 2 3\n4 5 7 2 1 3 1 3 3 1 3 11 4 1 1 1 1 1 1 1 1 1 1 1 5 2 1 1 2 2 2 5 1 1 2 3 4 5\nOutput 1 4 165 3 1 Note In the first sample, it is impossible to make a nice\npath with a length greater than \n    0\n. In the second sample, we are\ninterested in the following paths: \n    1 \n    \u2192 3 \n    \u2192 4\n    \n    \u2192 5\n \n    2 \n    \u2192 4 \n    \u2192 5 \n    \u2192 7\n\n\n    1 \n    \u2192 3 \n    \u2192 5 \n    \u2192 7\n \n    1 \n    \u2192 3\n    \n    \u2192 4 \n    \u2192 7\n In the third example, any path of length\n\n    8\n is nice.\n\n",
        "cf_contest_id": 1811,
        "cf_index": "G1",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n5 2\r\n1 2 3 4 5\r\n7 2\r\n1 3 1 3 3 1 3\r\n11 4\r\n1 1 1 1 1 1 1 1 1 1 1\r\n5 2\r\n1 1 2 2 2\r\n5 1\r\n1 2 3 4 5\r\n",
                "1\r\n4\r\n165\r\n3\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n100 51\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "273521609\r\n"
            ],
            [
                "1\r\n100 43\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "368015006\r\n"
            ]
        ]
    }
]