[
    {
        "name": "Three Arrays",
        "description": "There are three arrays a, b and c. Each of them consists of n integers. SmallY\nwants to find three integers u, v, w (0 \u2264 u, v, w \u2264 n) such that the following\ncondition holds: each number that appears in the union of a, b and c, appears\neither in the first u elements of a, or in the first v elements of b, or in\nthe first w elements of c. Of course, SmallY doesn't want to have huge numbers\nu, v and w, so she wants sum u + v + w to be as small as possible. Please,\nhelp her to find the minimal possible sum of u + v + w. Input The first line\ncontains a single integer n (1 \u2264 n \u2264 10^5). The second line contains n space-\nseparated integers a1, a2, ..., an \u2014 array a. The third line contains the\ndescription of array b in the same format. The fourth line contains the\ndescription of array c in the same format. The following constraint holds: 1 \u2264\nai, bi, ci \u2264 10^9. Output Print a single integer \u2014 the minimum possible sum of\nu + v + w. Examples Input 3 1 1 101 1 2 1 3 2 1 Output 5 Input 5 1 1 2 2 3 2 2\n4 3 3 3 3 1 1 1 Output 5 Note In the first example you should choose u = 3, v\n= 0, w = 2. In the second example you should choose u = 1, v = 3, w = 1.\n\n",
        "cf_contest_id": 392,
        "cf_index": "D",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 1 101\r\n1 2 1\r\n3 2 1\r\n",
                "5\r\n"
            ],
            [
                "5\r\n1 1 2 2 3\r\n2 2 4 3 3\r\n3 3 1 1 1\r\n",
                "5\r\n"
            ]
        ],
        "private_cases": [
            [
                "8\r\n190409007 190409007 352375776 190409007 352375776 352375776 352375776 352375776\r\n190409007 190409007 190409007 190409007 190409007 352375776 352375776 190409007\r\n190409007 352375776 352375776 190409007 190409007 190409007 352375776 352375776\r\n",
                "2\r\n"
            ],
            [
                "1\r\n377489979\r\n588153796\r\n588153796\r\n",
                "2\r\n"
            ],
            [
                "1\r\n1\r\n1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n2\r\n3\r\n2\r\n",
                "2\r\n"
            ],
            [
                "2\r\n1 1\r\n2 2\r\n3 3\r\n",
                "3\r\n"
            ],
            [
                "2\r\n1 2\r\n2 2\r\n1 1\r\n",
                "2\r\n"
            ],
            [
                "3\r\n1 1 2\r\n1 1 3\r\n1 1 4\r\n",
                "9\r\n"
            ],
            [
                "4\r\n1 1 1 1\r\n1 1 1 1\r\n1 1 1 1\r\n",
                "1\r\n"
            ]
        ]
    }
]