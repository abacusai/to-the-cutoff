[
    {
        "name": "Where Are My Flakes?",
        "description": "One morning the Cereal Guy found out that all his cereal flakes were gone. He\nfound a note instead of them. It turned out that his smart roommate hid the\nflakes in one of n boxes. The boxes stand in one row, they are numbered from 1\nto n from the left to the right. The roommate left hints like \"Hidden to the\nleft of the i-th box\" (\"To the left of i\"), \"Hidden to the right of the i-th\nbox\" (\"To the right of i\"). Such hints mean that there are no flakes in the\ni-th box as well. The Cereal Guy wants to know the minimal number of boxes he\nnecessarily needs to check to find the flakes considering all the hints. Or he\nwants to find out that the hints are contradictory and the roommate lied to\nhim, that is, no box has the flakes. Input The first line contains two\nintegers n and m (1 \u2264 n \u2264 1000, 0 \u2264 m \u2264 1000) which represent the number of\nboxes and the number of hints correspondingly. Next m lines contain hints like\n\"To the left of i\" and \"To the right of i\", where i is integer (1 \u2264 i \u2264 n).\nThe hints may coincide. Output The answer should contain exactly one integer \u2014\nthe number of boxes that should necessarily be checked or \"-1\" if the hints\nare contradictory. Examples Input 2 1 To the left of 2 Output 1 Input 3 2 To\nthe right of 1 To the right of 2 Output 1 Input 3 1 To the left of 3 Output 2\nInput 3 2 To the left of 2 To the right of 1 Output -1\n\n",
        "cf_contest_id": 60,
        "cf_index": "A",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1\r\nTo the left of 2\r\n",
                "1\r\n"
            ],
            [
                "3 2\r\nTo the right of 1\r\nTo the right of 2\r\n",
                "1\r\n"
            ],
            [
                "3 1\r\nTo the left of 3\r\n",
                "2\r\n"
            ],
            [
                "3 2\r\nTo the left of 2\r\nTo the right of 1\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 0\r\n",
                "3\r\n"
            ],
            [
                "2 2\r\nTo the left of 2\r\nTo the left of 2\r\n",
                "1\r\n"
            ],
            [
                "5 0\r\n",
                "5\r\n"
            ],
            [
                "6 2\r\nTo the right of 2\r\nTo the left of 4\r\n",
                "1\r\n"
            ],
            [
                "8 6\r\nTo the right of 3\r\nTo the left of 4\r\nTo the left of 4\r\nTo the right of 1\r\nTo the right of 5\r\nTo the left of 6\r\n",
                "-1\r\n"
            ],
            [
                "1000 1\r\nTo the right of 117\r\n",
                "883\r\n"
            ],
            [
                "1000 0\r\n",
                "1000\r\n"
            ],
            [
                "1 0\r\n",
                "1\r\n"
            ],
            [
                "2 0\r\n",
                "2\r\n"
            ],
            [
                "1 1\r\nTo the right of 1\r\n",
                "-1\r\n"
            ],
            [
                "1 1\r\nTo the left of 1\r\n",
                "-1\r\n"
            ],
            [
                "2 1\r\nTo the right of 2\r\n",
                "-1\r\n"
            ]
        ]
    }
]