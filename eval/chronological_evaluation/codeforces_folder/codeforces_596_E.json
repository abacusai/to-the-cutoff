[
    {
        "name": "Wilbur and Strings",
        "description": "Wilbur the pig now wants to play with strings. He has found an n by m table\nconsisting only of the digits from 0 to 9 where the rows are numbered 1 to n\nand the columns are numbered 1 to m. Wilbur starts at some square and makes\ncertain moves. If he is at square (x, y) and the digit d (0 \u2264 d \u2264 9) is\nwritten at position (x, y), then he must move to the square (x + ad, y + bd),\nif that square lies within the table, and he stays in the square (x, y)\notherwise. Before Wilbur makes a move, he can choose whether or not to write\nthe digit written in this square on the white board. All digits written on the\nwhiteboard form some string. Every time a new digit is written, it goes to the\nend of the current string. Wilbur has q strings that he is worried about. For\neach string si, Wilbur wants to know whether there exists a starting position\n(x, y) so that by making finitely many moves, Wilbur can end up with the\nstring si written on the white board. Input The first line of the input\nconsists of three integers n, m, and q (1 \u2264 n, m, q \u2264 200) \u2014 the dimensions of\nthe table and the number of strings to process, respectively. Each of the next\nn lines contains m digits from 0 and 9 giving the table itself. Then follow 10\nlines. The i-th of them contains the values ai - 1 and bi - 1 ( - 200 \u2264 ai, bi\n\u2264 200), i.e. the vector that Wilbur uses to make a move from the square with a\ndigit i - 1 in it. There are q lines that follow. The i-th of them will\ncontain a string si consisting only of digits from 0 to 9. It is guaranteed\nthat the total length of these q strings won't exceed 1 000 000. Output For\neach of the q strings, print \"YES\" if Wilbur can choose x and y in order to\nfinish with this string after some finite number of moves. If it's impossible,\nthan print \"NO\" for the corresponding string. Examples Input 1 1 2 0 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0000000000000 2413423432432 Output YES NO Input\n4 2 5 01 23 45 67 0 1 0 -1 0 1 0 -1 0 1 0 -1 0 1 0 -1 0 1 0 -1 0000000000\n010101011101 32232232322 44343222342444324 6767 Output YES YES YES NO YES Note\nIn the first sample, there is a 1 by 1 table consisting of the only digit 0.\nThe only move that can be made is staying on the square. The first string can\nbe written on the white board by writing 0 repeatedly. The second string\ncannot be written as there is no 2 on the table.\n\n",
        "cf_contest_id": 596,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "strings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 1 2\r\n0\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n0000000000000\r\n2413423432432\r\n",
                "YES\r\nNO\r\n"
            ],
            [
                "4 2 5\r\n01\r\n23\r\n45\r\n67\r\n0 1\r\n0 -1\r\n0 1\r\n0 -1\r\n0 1\r\n0 -1\r\n0 1\r\n0 -1\r\n0 1\r\n0 -1\r\n0000000000\r\n010101011101\r\n32232232322\r\n44343222342444324\r\n6767\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\nYES\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2 2\r\n10\r\n98\r\n-1 1\r\n2 -1\r\n2 1\r\n1 0\r\n1 1\r\n0 0\r\n2 2\r\n2 2\r\n0 1\r\n1 -1\r\n8\r\n77\r\n",
                "YES\r\nNO\r\n"
            ],
            [
                "4 9 66\r\n948394151\r\n570018719\r\n639380858\r\n297865879\r\n1 8\r\n0 9\r\n-3 8\r\n2 4\r\n-3 0\r\n3 9\r\n-4 -8\r\n1 9\r\n1 -7\r\n-3 4\r\n108\r\n07189\r\n84703\r\n2157\r\n30344\r\n30118\r\n6322\r\n6\r\n90171\r\n834\r\n9\r\n4\r\n679\r\n1\r\n85531\r\n3\r\n7\r\n04\r\n31\r\n6\r\n22106\r\n470\r\n5940\r\n8058\r\n59401\r\n48586\r\n015\r\n673\r\n6320\r\n627\r\n691\r\n164\r\n185\r\n11\r\n32\r\n98\r\n4630\r\n52087\r\n790\r\n3365\r\n2\r\n3984\r\n657\r\n086\r\n7\r\n850\r\n8\r\n1\r\n2\r\n429\r\n901\r\n0\r\n7\r\n8762\r\n7\r\n50040\r\n5964\r\n4841\r\n6\r\n6\r\n7\r\n87\r\n545\r\n6\r\n44738\r\n2309\r\n",
                "NO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nYES\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\n"
            ],
            [
                "9 9 10\r\n419436561\r\n335353330\r\n829298887\r\n600223849\r\n085122552\r\n213550458\r\n846974502\r\n660665613\r\n510003630\r\n0 8\r\n2 -7\r\n-2 -4\r\n8 -6\r\n0 -4\r\n-1 -8\r\n2 -6\r\n9 -3\r\n1 9\r\n6 4\r\n000000000\r\n0\r\n999\r\n666666666\r\n12222\r\n2222222222\r\n55\r\n74174536\r\n55555555\r\n333333\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nNO\r\nYES\r\nYES\r\n"
            ],
            [
                "5 3 5\r\n314\r\n308\r\n538\r\n880\r\n673\r\n2 -1\r\n-5 -3\r\n0 -1\r\n-4 -3\r\n0 -2\r\n-1 -3\r\n-4 -3\r\n0 2\r\n4 1\r\n-3 0\r\n666666\r\n888888888\r\n0\r\n502585\r\n333333\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\nYES\r\n"
            ],
            [
                "8 1 10\r\n5\r\n8\r\n8\r\n0\r\n4\r\n4\r\n1\r\n2\r\n7 1\r\n-8 1\r\n3 1\r\n6 -1\r\n6 -1\r\n2 0\r\n8 1\r\n-7 -1\r\n2 0\r\n-3 0\r\n8\r\n444444444\r\n4444\r\n000\r\n44444444\r\n44\r\n00\r\n844\r\n444444444\r\n22\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "8 3 4\r\n582\r\n599\r\n196\r\n530\r\n543\r\n554\r\n535\r\n758\r\n-5 0\r\n-7 1\r\n1 -1\r\n8 1\r\n3 0\r\n5 -1\r\n7 0\r\n-8 -1\r\n-3 -3\r\n2 -3\r\n55555555\r\n888888\r\n11\r\n55555555\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "4 7 9\r\n7034539\r\n0968517\r\n3173655\r\n7353756\r\n1 -3\r\n1 5\r\n-4 -2\r\n4 5\r\n4 -2\r\n-1 1\r\n-4 3\r\n2 6\r\n-4 -7\r\n-3 7\r\n3333333\r\n333333333\r\n5333333\r\n53\r\n666666\r\n1666666666\r\n3333333\r\n632946046\r\n84\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nNO\r\nNO\r\n"
            ],
            [
                "5 3 4\r\n955\r\n308\r\n996\r\n939\r\n653\r\n2 -2\r\n0 -3\r\n-4 -1\r\n-5 -1\r\n1 2\r\n-2 -2\r\n-3 -3\r\n-4 1\r\n-4 -2\r\n-2 -2\r\n33333333\r\n888\r\n66666\r\n6666\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "1 7 3\r\n8708549\r\n0 2\r\n1 4\r\n1 -1\r\n-1 -3\r\n-1 -7\r\n-1 2\r\n1 1\r\n-1 7\r\n1 -2\r\n0 1\r\n555\r\n55555555\r\n77\r\n",
                "YES\r\nYES\r\nYES\r\n"
            ],
            [
                "4 5 5\r\n46471\r\n98640\r\n61149\r\n92624\r\n4 -3\r\n3 -1\r\n3 0\r\n-4 2\r\n-1 4\r\n2 3\r\n2 4\r\n-3 1\r\n-1 5\r\n-2 3\r\n444\r\n40935\r\n222222222\r\n9999\r\n66666\r\n",
                "YES\r\nNO\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "10 8 10\r\n46866581\r\n51168791\r\n15565530\r\n97701661\r\n97713690\r\n65941177\r\n27223016\r\n67963522\r\n66074862\r\n73260398\r\n-5 8\r\n-3 -7\r\n8 7\r\n4 -1\r\n-7 -6\r\n2 7\r\n-6 0\r\n8 8\r\n-6 6\r\n10 -4\r\n7777777777\r\n51444444\r\n6666\r\n630000\r\n9999999999\r\n0000\r\n777777777\r\n333\r\n2222222222\r\n11111111\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "7 5 5\r\n48987\r\n64931\r\n71801\r\n79698\r\n66140\r\n43686\r\n62195\r\n6 0\r\n-1 -2\r\n-6 4\r\n-7 5\r\n0 4\r\n6 -1\r\n-7 -5\r\n-2 -1\r\n-5 -2\r\n1 -4\r\n2\r\n999999999\r\n8888888888\r\n1073998\r\n777777777\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\nYES\r\n"
            ]
        ]
    }
]