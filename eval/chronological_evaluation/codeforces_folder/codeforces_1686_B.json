[
    {
        "name": "Odd Subarrays",
        "description": "For an array \n    [b_1, b_2, \n    \u2026, b_m]\n define its number of inversions\nas the number of pairs \n    (i, j)\n of integers such that \n    1 \n    \u2264 i < j\n    \n    \u2264 m\n and \n    b_i>b_j\n. Let's call array \n    b\n odd if its number of\ninversions is odd. For example, array \n    [4, 2, 7]\n is odd, as its number of\ninversions is \n    1\n, while array \n    [2, 1, 4, 3]\n isn't, as its number of\ninversions is \n    2\n. You are given a permutation \n    [p_1, p_2, \n    \u2026,\n    p_n]\n of integers from \n    1\n to \n    n\n (each of them appears exactly once\nin the permutation). You want to split it into several consecutive subarrays\n(maybe just one), so that the number of the odd subarrays among them is as\nlarge as possible. What largest number of these subarrays may be odd? Input\nThe first line of the input contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^5\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the size of the permutation. The second line of\neach test case contains \n    n\n integers \n    p_1, p_2, \n    \u2026, p_n\n (\n    1\n    \n    \u2264 p_i \n    \u2264 n\n, all \n    p_i\n are distinct) \u2014 the elements of the\npermutation. The sum of \n    n\n over all test cases doesn't exceed \n    2\n    \u00b7\n    10^5\n. Output For each test case output a single integer \u2014 the largest\npossible number of odd subarrays that you can get after splitting the\npermutation into several consecutive subarrays. Example Input 5 3 1 2 3 4 4 3\n2 1 2 1 2 2 2 1 6 4 5 6 1 2 3 Output 0 2 0 1 1 Note In the first and third\ntest cases, no matter how we split our permutation, there won't be any odd\nsubarrays. In the second test case, we can split our permutation into\nsubarrays \n    [4, 3], [2, 1]\n, both of which are odd since their numbers of\ninversions are \n    1\n. In the fourth test case, we can split our permutation\ninto a single subarray \n    [2, 1]\n, which is odd. In the fifth test case, we\ncan split our permutation into subarrays \n    [4, 5], [6, 1, 2, 3]\n. The first\nsubarray has \n    0\n inversions, and the second has \n    3\n, so it is odd.\n\n",
        "cf_contest_id": 1686,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3\r\n1 2 3\r\n4\r\n4 3 2 1\r\n2\r\n1 2\r\n2\r\n2 1\r\n6\r\n4 5 6 1 2 3\r\n",
                "0\r\n2\r\n0\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": []
    }
]