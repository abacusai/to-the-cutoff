[
    {
        "name": "Trips",
        "description": "There are \n    n\n persons who initially don't know each other. On each\nmorning, two of them, who were not friends before, become friends. We want to\nplan a trip for every evening of \n    m\n days. On each trip, you have to\nselect a group of people that will go on the trip. For every person, one of\nthe following should hold: Either this person does not go on the trip, Or at\nleast \n    k\n of his friends also go on the trip. Note that the friendship is\nnot transitive. That is, if \n    a\n and \n    b\n are friends and \n    b\n and\n\n    c\n are friends, it does not necessarily imply that \n    a\n and \n    c\n\nare friends. For each day, find the maximum number of people that can go on\nthe trip on that day. Input The first line contains three integers \n    n\n,\n\n    m\n, and \n    k\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5, 1 \n    \u2264 m \n    \u2264 2\n    \n    \u00b7 10^5\n, \n    1 \n    \u2264 k < n\n) \u2014 the number of people, the number of\ndays and the number of friends each person on the trip should have in the\ngroup. The \n    i\n-th (\n    1 \n    \u2264 i \n    \u2264 m\n) of the next \n    m\n lines\ncontains two integers \n    x\n and \n    y\n (\n    1\n    \u2264 x, y\n    \u2264 n\n,\n\n    x\n     y\n), meaning that persons \n    x\n and \n    y\n become friends on\nthe morning of day \n    i\n. It is guaranteed that \n    x\n and \n    y\n were not\nfriends before. Output Print exactly \n    m\n lines, where the \n    i\n-th of\nthem (\n    1\n    \u2264 i\n    \u2264 m\n) contains the maximum number of people that can\ngo on the trip on the evening of the day \n    i\n. Examples Input 4 4 2 2 3 1 2\n1 3 1 4 Output 0 0 3 3 Input 5 8 2 2 1 4 2 5 4 5 2 4 3 5 1 4 1 3 2 Output 0 0\n0 3 3 4 4 5 Input 5 7 2 1 5 3 2 2 5 3 4 1 2 5 3 1 3 Output 0 0 0 0 3 4 4 Note\nIn the first example, \n    1,2,3\n can go on day \n    3\n and \n    4\n. In the\nsecond example, \n    2,4,5\n can go on day \n    4\n and \n    5\n. \n    1,2,4,5\n\ncan go on day \n    6\n and \n    7\n. \n    1,2,3,4,5\n can go on day \n    8\n. In\nthe third example, \n    1,2,5\n can go on day \n    5\n. \n    1,2,3,5\n can go on\nday \n    6\n and \n    7\n.\n\n",
        "cf_contest_id": 1037,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 4 2\r\n2 3\r\n1 2\r\n1 3\r\n1 4\r\n",
                "0\r\n0\r\n3\r\n3\r\n"
            ],
            [
                "5 8 2\r\n2 1\r\n4 2\r\n5 4\r\n5 2\r\n4 3\r\n5 1\r\n4 1\r\n3 2\r\n",
                "0\r\n0\r\n0\r\n3\r\n3\r\n4\r\n4\r\n5\r\n"
            ],
            [
                "5 7 2\r\n1 5\r\n3 2\r\n2 5\r\n3 4\r\n1 2\r\n5 3\r\n1 3\r\n",
                "0\r\n0\r\n0\r\n0\r\n3\r\n4\r\n4\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1 1\r\n2 1\r\n",
                "2\r\n"
            ],
            [
                "16 20 2\r\n10 3\r\n5 3\r\n10 5\r\n12 7\r\n7 6\r\n9 12\r\n9 6\r\n1 10\r\n11 16\r\n11 1\r\n16 2\r\n10 2\r\n14 4\r\n15 14\r\n4 13\r\n13 15\r\n1 8\r\n7 15\r\n1 7\r\n8 15\r\n",
                "0\r\n0\r\n3\r\n3\r\n3\r\n3\r\n7\r\n7\r\n7\r\n7\r\n7\r\n11\r\n11\r\n11\r\n11\r\n15\r\n15\r\n15\r\n15\r\n16\r\n"
            ]
        ]
    }
]