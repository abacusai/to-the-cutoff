[
    {
        "name": "The Contest",
        "description": "Pasha is participating in a contest on one well-known website. This time he\nwants to win the contest and will do anything to get to the first place! This\ncontest consists of n problems, and Pasha solves ith problem in ai time units\n(his solutions are always correct). At any moment of time he can be thinking\nabout a solution to only one of the problems (that is, he cannot be solving\ntwo problems at the same time). The time Pasha spends to send his solutions is\nnegligible. Pasha can send any number of solutions at the same moment.\nUnfortunately, there are too many participants, and the website is not always\nworking. Pasha received the information that the website will be working only\nduring m time periods, jth period is represented by its starting moment lj and\nending moment rj. Of course, Pasha can send his solution only when the website\nis working. In other words, Pasha can send his solution at some moment T iff\nthere exists a period x such that lx \u2264 T \u2264 rx. Pasha wants to know his best\npossible result. We need to tell him the minimal moment of time by which he is\nable to have solutions to all problems submitted, if he acts optimally, or say\nthat it's impossible no matter how Pasha solves the problems. Input The first\nline contains one integer n (1 \u2264 n \u2264 1000) \u2014 the number of problems. The\nsecond line contains n integers ai (1 \u2264 ai \u2264 10^5) \u2014 the time Pasha needs to\nsolve ith problem. The third line contains one integer m (0 \u2264 m \u2264 1000) \u2014 the\nnumber of periods of time when the website is working. Next m lines represent\nthese periods. jth line contains two numbers lj and rj (1 \u2264 lj < rj \u2264 10^5) \u2014\nthe starting and the ending moment of jth period. It is guaranteed that the\nperiods are not intersecting and are given in chronological order, so for\nevery j > 1 the condition lj > rj - 1 is met. Output If Pasha can solve and\nsubmit all the problems before the end of the contest, print the minimal\nmoment of time by which he can have all the solutions submitted. Otherwise\nprint \"-1\" (without brackets). Examples Input 2 3 4 2 1 4 7 9 Output 7 Input 1\n5 1 1 4 Output -1 Input 1 5 1 1 5 Output 5 Note In the first example Pasha can\nact like this: he solves the second problem in 4 units of time and sends it\nimmediately. Then he spends 3 time units to solve the first problem and sends\nit 7 time units after the contest starts, because at this moment the website\nstarts working again. In the second example Pasha invents the solution only\nafter the website stops working for the last time. In the third example Pasha\nsends the solution exactly at the end of the first period.\n\n",
        "cf_contest_id": 813,
        "cf_index": "A",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n3 4\r\n2\r\n1 4\r\n7 9\r\n",
                "7\r\n"
            ],
            [
                "1\r\n5\r\n1\r\n1 4\r\n",
                "-1\r\n"
            ],
            [
                "1\r\n5\r\n1\r\n1 5\r\n",
                "5\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n100000 100000 100000 100000 100000\r\n0\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n886 524 128 4068 298\r\n3\r\n416 3755\r\n4496 11945\r\n17198 18039\r\n",
                "5904\r\n"
            ],
            [
                "10\r\n575 3526 1144 1161 889 1038 790 19 765 357\r\n2\r\n4475 10787\r\n16364 21678\r\n",
                "10264\r\n"
            ],
            [
                "1\r\n4\r\n1\r\n5 9\r\n",
                "5\r\n"
            ],
            [
                "1\r\n200\r\n4\r\n1 10\r\n20 40\r\n50 55\r\n190 210\r\n",
                "200\r\n"
            ],
            [
                "4\r\n643 70 173 745\r\n14\r\n990 995\r\n1256 1259\r\n1494 1499\r\n1797 1804\r\n2443 2450\r\n2854 2859\r\n3164 3167\r\n4084 4092\r\n4615 4622\r\n5555 5563\r\n6412 6421\r\n7173 7180\r\n7566 7571\r\n8407 8415\r\n",
                "1797\r\n"
            ],
            [
                "42\r\n749 516 256 497 37 315 184 518 103 726 80 983 474 884 209 706 10 543 587 371 199 315 967 707 948 736 590 734 715 184 230 513 199 898 287 468 250 600 352 29 408 22\r\n2\r\n312 314\r\n1293 1302\r\n",
                "-1\r\n"
            ],
            [
                "1\r\n10000\r\n2\r\n1 10\r\n9998 10000\r\n",
                "10000\r\n"
            ],
            [
                "1\r\n547\r\n15\r\n774 779\r\n1598 1605\r\n2458 2464\r\n3138 3140\r\n3372 3378\r\n4268 4272\r\n4730 4733\r\n5064 5067\r\n5074 5075\r\n5483 5490\r\n5894 5901\r\n5931 5938\r\n6750 6756\r\n7487 7491\r\n8328 8332\r\n",
                "774\r\n"
            ],
            [
                "1\r\n10\r\n2\r\n1 2\r\n11 12\r\n",
                "11\r\n"
            ],
            [
                "2\r\n4 6\r\n2\r\n5 10\r\n15 20\r\n",
                "10\r\n"
            ],
            [
                "2\r\n16 5\r\n3\r\n5 10\r\n15 20\r\n25 30\r\n",
                "25\r\n"
            ],
            [
                "1\r\n16\r\n2\r\n5 10\r\n15 20\r\n",
                "16\r\n"
            ],
            [
                "44\r\n750 672 846 969 981 698 380 968 813 587 156 28 446 917 849 449 173 764 226 958 335 622 236 782 416 689 113 728 452 265 585 217 707 50 520 712 946 275 423 123 175 268 583 528\r\n4\r\n869 870\r\n1353 1354\r\n1683 1685\r\n2532 2540\r\n",
                "-1\r\n"
            ],
            [
                "1\r\n1\r\n0\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 2 5\r\n3\r\n5 6\r\n7 8\r\n9 13\r\n",
                "8\r\n"
            ],
            [
                "1\r\n2\r\n0\r\n",
                "-1\r\n"
            ],
            [
                "1\r\n5\r\n3\r\n1 2\r\n3 4\r\n10 11\r\n",
                "10\r\n"
            ],
            [
                "1\r\n4\r\n0\r\n",
                "-1\r\n"
            ],
            [
                "1\r\n5\r\n0\r\n",
                "-1\r\n"
            ],
            [
                "1\r\n239\r\n0\r\n",
                "-1\r\n"
            ]
        ]
    }
]