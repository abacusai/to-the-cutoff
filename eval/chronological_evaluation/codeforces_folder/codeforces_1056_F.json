[
    {
        "name": "Write The Contest",
        "description": "Polycarp, Arkady's friend, prepares to the programming competition and decides\nto write a contest. The contest consists of \n    n\n problems and lasts for\n\n    T\n minutes. Each of the problems is defined by two positive integers\n\n    a_i\n and \n    p_i\n \u2014 its difficulty and the score awarded by its\nsolution. Polycarp's experience suggests that his skill level is defined with\npositive real value \n    s\n, and initially \n    s=1.0\n. To solve the\n\n    i\n-th problem Polycarp needs \n    a_i/s\n minutes. Polycarp loves to watch\nseries, and before solving each of the problems he will definitely watch one\nepisode. After Polycarp watches an episode, his skill decreases by\n\n    10\n    %\n, that is skill level \n    s\n decreases to \n    0.9s\n. Each\nepisode takes exactly \n    10\n minutes to watch. When Polycarp decides to\nsolve some problem, he firstly has to watch one episode, and only then he\nstarts solving the problem without breaks for \n    a_i/s\n minutes, where\n\n    s\n is his current skill level. In calculation of \n    a_i/s\n no rounding\nis performed, only division of integer value \n    a_i\n by real value \n    s\n\nhappens. Also, Polycarp can train for some time. If he trains for \n    t\n\nminutes, he increases his skill by \n    C \n    \u00b7 t\n, where \n    C\n is some\ngiven positive real constant. Polycarp can train only before solving any\nproblem (and before watching series). Duration of the training can be\narbitrary real value. Polycarp is interested: what is the largest score he can\nget in the contest? It is allowed to solve problems in any order, while\ntraining is only allowed before solving the first problem. Input The first\nline contains one integer \n    tc\n (\n    1 \n    \u2264 tc \n    \u2264 20\n) \u2014 the number of\ntest cases. Then \n    tc\n test cases follow. The first line of each test\ncontains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n) \u2014 the number of\nproblems in the contest. The second line of the test contains two real values\n\n    C, T\n (\n    0 < C < 10\n, \n    0 \n    \u2264 T \n    \u2264 2 \n    \u00b7 10^5\n), where\n\n    C\n defines the efficiency of the training and \n    T\n is the duration of\nthe contest in minutes. Value \n    C, T\n are given exactly with three digits\nafter the decimal point. Each of the next \n    n\n lines of the test contain\ncharacteristics of the corresponding problem: two integers \n    a_i, p_i\n\n(\n    1 \n    \u2264 a_i \n    \u2264 10^4\n, \n    1 \n    \u2264 p_i \n    \u2264 10\n) \u2014 the difficulty\nand the score of the problem. It is guaranteed that the value of \n    T\n is\nsuch that changing it by the \n    0.001\n in any direction will not change the\ntest answer. Please note that in hacks you can only use \n    tc = 1\n. Output\nPrint \n    tc\n integers \u2014 the maximum possible score in each test case.\nExamples Input 2 4 1.000 31.000 12 3 20 6 30 1 5 1 3 1.000 30.000 1 10 10 10\n20 8 Output 7 20 Note In the first example, Polycarp can get score of \n    7\n\nas follows: Firstly he trains for \n    4\n minutes, increasing \n    s\n to the\nvalue of \n    5\n; Then he decides to solve \n    4\n-th problem: he watches one\nepisode in \n    10\n minutes, his skill level decreases to \n    s=5*0.9=4.5\n\nand then he solves the problem in \n    5/s=5/4.5\n, which is roughly\n\n    1.111\n minutes; Finally, he decides to solve \n    2\n-nd problem: he\nwatches one episode in \n    10\n minutes, his skill level decreases to\n\n    s=4.5*0.9=4.05\n and then he solves the problem in \n    20/s=20/4.05\n,\nwhich is roughly \n    4.938\n minutes. This way, Polycarp uses roughly\n\n    4+10+1.111+10+4.938=30.049\n minutes, to get score of \n    7\n points. It\nis not possible to achieve larger score in \n    31\n minutes. In the second\nexample, Polycarp can get \n    20\n points as follows: Firstly he trains for\n\n    4\n minutes, increasing \n    s\n to the value of \n    5\n; Then he decides\nto solve \n    1\n-st problem: he watches one episode in \n    10\n minutes, his\nskill decreases to \n    s=5*0.9=4.5\n and then he solves problem in\n\n    1/s=1/4.5\n, which is roughly \n    0.222\n minutes. Finally, he decides to\nsolve \n    2\n-nd problem: he watches one episode in \n    10\n minutes, his\nskill decreases to \n    s=4.5*0.9=4.05\n and then he solves the problem in\n\n    10/s=10/4.05\n, which is roughly \n    2.469\n minutes. This way, Polycarp\ngets score of \n    20\n in \n    4+10+0.222+10+2.469=26.691\n minutes. It is not\npossible to achieve larger score in \n    30\n minutes.\n\n",
        "cf_contest_id": 1056,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "dp",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n4\r\n1.000 31.000\r\n12 3\r\n20 6\r\n30 1\r\n5 1\r\n3\r\n1.000 30.000\r\n1 10\r\n10 10\r\n20 8\r\n",
                "7\r\n20\r\n"
            ]
        ],
        "private_cases": []
    }
]