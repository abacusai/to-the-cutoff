[
    {
        "name": "A Wide, Wide Graph",
        "description": "You are given a tree (a connected graph without cycles) with \n    n\n vertices.\nConsider a fixed integer \n    k\n. Then, the graph \n    G_k\n is an undirected\ngraph with \n    n\n vertices, where an edge between vertices \n    u\n and\n\n    v\n exists if and only if the distance between vertices \n    u\n and\n\n    v\n in the given tree is at least \n    k\n. For each \n    k\n from \n    1\n\nto \n    n\n, print the number of connected components in the graph \n    G_k\n.\nInput The first line contains the integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^5\n)\n\u2014 the number of vertices in the graph. Each of the next \n    n-1\n lines\ncontains two integers \n    u\n and \n    v\n (\n    1 \n    \u2264 u, v \n    \u2264 n\n),\ndenoting an edge between vertices \n    u\n and \n    v\n in the tree. It is\nguaranteed that these edges form a valid tree. Output Output \n    n\n integers:\nthe number of connected components in the graph \n    G_k\n for each \n    k\n\nfrom \n    1\n to \n    n\n. Examples Input 6 1 2 1 3 2 4 2 5 3 6 Output 1 1 2 4 6\n6 Input 5 1 2 2 3 3 4 3 5 Output 1 1 3 5 5 Note In the first example: If\n\n    k=1\n, the graph has an edge between each pair of vertices, so it has one\ncomponent. If \n    k=4\n, the graph has only edges \n    4 \n    \u2194 6\n\nand \n    5 \n    \u2194 6\n, so the graph has \n    4\n components. In the\nsecond example: when \n    k=1\n or \n    k=2\n the graph has one component. When\n\n    k=3\n the graph \n    G_k\n splits into \n    3\n components: one component\nhas vertices \n    1\n, \n    4\n and \n    5\n, and two more components contain one\nvertex each. When \n    k=4\n or \n    k=5\n each vertex is a separate component.\n\n",
        "cf_contest_id": 1805,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n3 6\r\n",
                "1 1 2 4 6 6 "
            ],
            [
                "5\r\n1 2\r\n2 3\r\n3 4\r\n3 5\r\n",
                "1 1 3 5 5 "
            ]
        ],
        "private_cases": [
            [
                "10\r\n7 10\r\n1 2\r\n1 9\r\n10 1\r\n4 8\r\n10 5\r\n7 6\r\n3 7\r\n9 4\r\n",
                "1 1 1 2 5 8 10 10 10 10 "
            ],
            [
                "2\r\n1 2\r\n",
                "1 2 "
            ],
            [
                "4\r\n1 2\r\n2 3\r\n2 4\r\n",
                "1 2 4 4 "
            ]
        ]
    }
]