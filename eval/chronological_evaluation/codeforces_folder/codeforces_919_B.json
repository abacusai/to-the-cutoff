[
    {
        "name": "Perfect Number",
        "description": "We consider a positive integer perfect, if and only if the sum of its digits\nis exactly \n    10\n. Given a positive integer \n    k\n, your task is to find\nthe \n    k\n-th smallest perfect positive integer. Input A single line with a\npositive integer \n    k\n (\n    1 \n    \u2264 k \n    \u2264 10\n     000\n). Output A single\nnumber, denoting the \n    k\n-th smallest perfect integer. Examples Input 1\nOutput 19 Input 2 Output 28 Note The first perfect integer is \n    19\n and the\nsecond one is \n    28\n.\n\n",
        "cf_contest_id": 919,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "dp",
            "implementation",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n",
                "19\r\n"
            ],
            [
                "2\r\n",
                "28\r\n"
            ]
        ],
        "private_cases": [
            [
                "13\r\n",
                "136\r\n"
            ],
            [
                "101\r\n",
                "1432\r\n"
            ],
            [
                "1023\r\n",
                "100270\r\n"
            ],
            [
                "9999\r\n",
                "10800010\r\n"
            ],
            [
                "10000\r\n",
                "10800100\r\n"
            ],
            [
                "2333\r\n",
                "310060\r\n"
            ],
            [
                "9139\r\n",
                "10134010\r\n"
            ],
            [
                "9859\r\n",
                "10422001\r\n"
            ],
            [
                "5987\r\n",
                "2221201\r\n"
            ],
            [
                "3\r\n",
                "37\r\n"
            ],
            [
                "4\r\n",
                "46\r\n"
            ],
            [
                "5\r\n",
                "55\r\n"
            ],
            [
                "7\r\n",
                "73\r\n"
            ],
            [
                "9\r\n",
                "91\r\n"
            ],
            [
                "10\r\n",
                "109\r\n"
            ],
            [
                "15\r\n",
                "154\r\n"
            ],
            [
                "51\r\n",
                "613\r\n"
            ],
            [
                "99\r\n",
                "1414\r\n"
            ],
            [
                "138\r\n",
                "2224\r\n"
            ],
            [
                "233\r\n",
                "5050\r\n"
            ],
            [
                "666\r\n",
                "27100\r\n"
            ],
            [
                "1234\r\n",
                "110206\r\n"
            ],
            [
                "3567\r\n",
                "1033003\r\n"
            ],
            [
                "4445\r\n",
                "1221301\r\n"
            ],
            [
                "5689\r\n",
                "2114002\r\n"
            ],
            [
                "6666\r\n",
                "3102004\r\n"
            ],
            [
                "7777\r\n",
                "5300200\r\n"
            ],
            [
                "8888\r\n",
                "10110061\r\n"
            ],
            [
                "9411\r\n",
                "10214200\r\n"
            ],
            [
                "5539\r\n",
                "2101114\r\n"
            ],
            [
                "6259\r\n",
                "2511100\r\n"
            ],
            [
                "2387\r\n",
                "312220\r\n"
            ],
            [
                "8515\r\n",
                "10030114\r\n"
            ]
        ]
    }
]