[
    {
        "name": "Parade",
        "description": "No Great Victory anniversary in Berland has ever passed without the war\nparade. This year is not an exception. That\u2019s why the preparations are on in\nfull strength. Tanks are building a line, artillery mounts are ready to fire,\nsoldiers are marching on the main square... And the air forces general Mr.\nGeneralov is in trouble again. This year a lot of sky-scrapers have been built\nwhich makes it difficult for the airplanes to fly above the city. It was\ndecided that the planes should fly strictly from south to north. Moreover,\nthere must be no sky scraper on a plane\u2019s route, otherwise the anniversary\nwill become a tragedy. The Ministry of Building gave the data on n sky\nscrapers (the rest of the buildings are rather small and will not be a problem\nto the planes). When looking at the city from south to north as a geometrical\nplane, the i-th building is a rectangle of height hi. Its westernmost point\nhas the x-coordinate of li and the easternmost \u2014 of ri. The terrain of the\narea is plain so that all the buildings stand on one level. Your task as the\nMinistry of Defence\u2019s head programmer is to find an enveloping polyline using\nthe data on the sky-scrapers. The polyline\u2019s properties are as follows: If you\nlook at the city from south to north as a plane, then any part of any building\nwill be inside or on the boarder of the area that the polyline encloses\ntogether with the land surface. The polyline starts and ends on the land\nlevel, i.e. at the height equal to 0. The segments of the polyline are\nparallel to the coordinate axes, i.e. they can only be vertical or horizontal.\nThe polyline\u2019s vertices should have integer coordinates. If you look at the\ncity from south to north the polyline (together with the land surface) must\nenclose the minimum possible area. The polyline must have the smallest length\namong all the polylines, enclosing the minimum possible area with the land.\nThe consecutive segments of the polyline must be perpendicular. Picture to the\nsecond sample test (the enveloping polyline is marked on the right). Input The\nfirst input line contains integer n (1 \u2264 n \u2264 100000). Then follow n lines,\neach containing three integers hi, li, ri (1 \u2264 hi \u2264 10^9, - 10^9 \u2264 li < ri \u2264\n10^9). Output In the first line output integer m \u2014 amount of vertices of the\nenveloping polyline. The next m lines should contain 2 integers each \u2014 the\nposition and the height of the polyline\u2019s vertex. Output the coordinates of\neach vertex in the order of traversing the polyline from west to east.\nRemember that the first and the last vertices of the polyline should have the\nheight of 0. Examples Input 2 3 0 2 4 1 3 Output 6 0 0 0 3 1 3 1 4 3 4 3 0\nInput 5 3 -3 0 2 -1 1 4 2 4 2 3 7 3 6 8 Output 14 -3 0 -3 3 0 3 0 2 1 2 1 0 2\n0 2 4 4 4 4 2 6 2 6 3 8 3 8 0\n\n",
        "cf_contest_id": 35,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "2\r\n3 0 2\r\n4 1 3\r\n",
                "6\r\n0 0\r\n0 3\r\n1 3\r\n1 4\r\n3 4\r\n3 0\r\n"
            ],
            [
                "5\r\n3 -3 0\r\n2 -1 1\r\n4 2 4\r\n2 3 7\r\n3 6 8\r\n",
                "14\r\n-3 0\r\n-3 3\r\n0 3\r\n0 2\r\n1 2\r\n1 0\r\n2 0\r\n2 4\r\n4 4\r\n4 2\r\n6 2\r\n6 3\r\n8 3\r\n8 0\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n5 -5 -4\r\n3 -3 0\r\n2 -1 1\r\n1 0 1\r\n4 2 4\r\n2 3 7\r\n3 6 8\r\n",
                "18\r\n-5 0\r\n-5 5\r\n-4 5\r\n-4 0\r\n-3 0\r\n-3 3\r\n0 3\r\n0 2\r\n1 2\r\n1 0\r\n2 0\r\n2 4\r\n4 4\r\n4 2\r\n6 2\r\n6 3\r\n8 3\r\n8 0\r\n"
            ],
            [
                "8\r\n7 4 9\r\n2 9 11\r\n2 11 13\r\n1 -3 -2\r\n4 4 8\r\n4 0 3\r\n6 2 7\r\n3 5 6\r\n",
                "14\r\n-3 0\r\n-3 1\r\n-2 1\r\n-2 0\r\n0 0\r\n0 4\r\n2 4\r\n2 6\r\n4 6\r\n4 7\r\n9 7\r\n9 2\r\n13 2\r\n13 0\r\n"
            ],
            [
                "1\r\n1 0 1\r\n",
                "4\r\n0 0\r\n0 1\r\n1 1\r\n1 0\r\n"
            ],
            [
                "1\r\n1 -427665346 938966985\r\n",
                "4\r\n-427665346 0\r\n-427665346 1\r\n938966985 1\r\n938966985 0\r\n"
            ],
            [
                "1\r\n960440942 -427665346 938966985\r\n",
                "4\r\n-427665346 0\r\n-427665346 960440942\r\n938966985 960440942\r\n938966985 0\r\n"
            ],
            [
                "3\r\n6 -8 -1\r\n5 5 10\r\n1 9 10\r\n",
                "8\r\n-8 0\r\n-8 6\r\n-1 6\r\n-1 0\r\n5 0\r\n5 5\r\n10 5\r\n10 0\r\n"
            ],
            [
                "5\r\n10 -2 6\r\n10 3 6\r\n2 -7 2\r\n7 -10 4\r\n6 8 10\r\n",
                "10\r\n-10 0\r\n-10 7\r\n-2 7\r\n-2 10\r\n6 10\r\n6 0\r\n8 0\r\n8 6\r\n10 6\r\n10 0\r\n"
            ],
            [
                "10\r\n1 -6 5\r\n4 5 6\r\n5 -5 8\r\n10 7 8\r\n8 2 7\r\n9 0 3\r\n1 -1 3\r\n8 1 8\r\n7 3 9\r\n5 -9 -8\r\n",
                "18\r\n-9 0\r\n-9 5\r\n-8 5\r\n-8 0\r\n-6 0\r\n-6 1\r\n-5 1\r\n-5 5\r\n0 5\r\n0 9\r\n3 9\r\n3 8\r\n7 8\r\n7 10\r\n8 10\r\n8 7\r\n9 7\r\n9 0\r\n"
            ],
            [
                "5\r\n827 -447 -283\r\n103 309 421\r\n268 -472 -402\r\n737 -294 281\r\n880 881 953\r\n",
                "16\r\n-472 0\r\n-472 268\r\n-447 268\r\n-447 827\r\n-283 827\r\n-283 737\r\n281 737\r\n281 0\r\n309 0\r\n309 103\r\n421 103\r\n421 0\r\n881 0\r\n881 880\r\n953 880\r\n953 0\r\n"
            ],
            [
                "10\r\n819 -655 900\r\n935 -251 707\r\n444 568 750\r\n329 -438 953\r\n712 721 882\r\n416 -267 -199\r\n394 280 704\r\n960 107 988\r\n82 750 817\r\n630 -525 698\r\n",
                "8\r\n-655 0\r\n-655 819\r\n-251 819\r\n-251 935\r\n107 935\r\n107 960\r\n988 960\r\n988 0\r\n"
            ],
            [
                "20\r\n755 -911 -652\r\n255 -43 272\r\n244 248 590\r\n145 458 641\r\n464 721 984\r\n112 757 950\r\n834 -664 640\r\n976 -357 -98\r\n298 302 499\r\n406 -685 654\r\n698 -182 -149\r\n942 774 923\r\n594 -548 311\r\n594 -181 285\r\n856 517 740\r\n753 935 952\r\n245 -627 430\r\n434 5 433\r\n737 749 990\r\n755 778 801\r\n",
                "24\r\n-911 0\r\n-911 755\r\n-664 755\r\n-664 834\r\n-357 834\r\n-357 976\r\n-98 976\r\n-98 834\r\n517 834\r\n517 856\r\n740 856\r\n740 464\r\n749 464\r\n749 737\r\n774 737\r\n774 942\r\n923 942\r\n923 737\r\n935 737\r\n935 753\r\n952 753\r\n952 737\r\n990 737\r\n990 0\r\n"
            ],
            [
                "5\r\n960440942 -427665346 938966985\r\n77422042 -708929687 883258129\r\n880006277 -818916365 -626946202\r\n306092724 916069264 970899369\r\n609160934 -699461833 -677820983\r\n",
                "10\r\n-818916365 0\r\n-818916365 880006277\r\n-626946202 880006277\r\n-626946202 77422042\r\n-427665346 77422042\r\n-427665346 960440942\r\n938966985 960440942\r\n938966985 306092724\r\n970899369 306092724\r\n970899369 0\r\n"
            ],
            [
                "10\r\n64 23 96\r\n24 85 98\r\n24 -93 -70\r\n58 -30 30\r\n1 39 88\r\n55 54 87\r\n75 41 53\r\n75 97 99\r\n50 -80 -13\r\n48 95 97\r\n",
                "18\r\n-93 0\r\n-93 24\r\n-80 24\r\n-80 50\r\n-30 50\r\n-30 58\r\n23 58\r\n23 64\r\n41 64\r\n41 75\r\n53 75\r\n53 64\r\n96 64\r\n96 48\r\n97 48\r\n97 75\r\n99 75\r\n99 0\r\n"
            ],
            [
                "10\r\n33 -295 -197\r\n100 -165 309\r\n36 121 270\r\n37 415 453\r\n36 208 478\r\n88 -463 339\r\n43 -223 497\r\n78 -423 310\r\n97 -289 -258\r\n95 307 485\r\n",
                "14\r\n-463 0\r\n-463 88\r\n-289 88\r\n-289 97\r\n-258 97\r\n-258 88\r\n-165 88\r\n-165 100\r\n309 100\r\n309 95\r\n485 95\r\n485 43\r\n497 43\r\n497 0\r\n"
            ],
            [
                "2\r\n1 -1000000000 1000000000\r\n2 -999999999 999999999\r\n",
                "8\r\n-1000000000 0\r\n-1000000000 1\r\n-999999999 1\r\n-999999999 2\r\n999999999 2\r\n999999999 1\r\n1000000000 1\r\n1000000000 0\r\n"
            ],
            [
                "6\r\n1 -1000000000 1000000000\r\n101 -999999900 999999900\r\n201 -999999800 999999800\r\n301 -999999700 999999700\r\n401 -999999600 999999600\r\n501 -999999500 999999500\r\n",
                "24\r\n-1000000000 0\r\n-1000000000 1\r\n-999999900 1\r\n-999999900 101\r\n-999999800 101\r\n-999999800 201\r\n-999999700 201\r\n-999999700 301\r\n-999999600 301\r\n-999999600 401\r\n-999999500 401\r\n-999999500 501\r\n999999500 501\r\n999999500 401\r\n999999600 401\r\n999999600 301\r\n999999700 301\r\n999999700 201\r\n999999800 201\r\n999999800 101\r\n999999900 101\r\n999999900 1\r\n1000000000 1\r\n1000000000 0\r\n"
            ],
            [
                "1\r\n1 -129298960 -129298947\r\n",
                "4\r\n-129298960 0\r\n-129298960 1\r\n-129298947 1\r\n-129298947 0\r\n"
            ],
            [
                "1\r\n31252541 -129298960 -129298947\r\n",
                "4\r\n-129298960 0\r\n-129298960 31252541\r\n-129298947 31252541\r\n-129298947 0\r\n"
            ],
            [
                "3\r\n10 -9 -8\r\n8 10 11\r\n7 9 10\r\n",
                "10\r\n-9 0\r\n-9 10\r\n-8 10\r\n-8 0\r\n9 0\r\n9 7\r\n10 7\r\n10 8\r\n11 8\r\n11 0\r\n"
            ],
            [
                "5\r\n8 9 10\r\n10 8 10\r\n7 8 9\r\n8 -9 -5\r\n4 -5 -1\r\n",
                "10\r\n-9 0\r\n-9 8\r\n-5 8\r\n-5 4\r\n-1 4\r\n-1 0\r\n8 0\r\n8 10\r\n10 10\r\n10 0\r\n"
            ],
            [
                "10\r\n4 8 9\r\n7 6 7\r\n6 -9 -8\r\n6 1 2\r\n6 6 7\r\n10 -9 -8\r\n5 -5 -4\r\n4 3 4\r\n2 -7 -6\r\n6 3 4\r\n",
                "28\r\n-9 0\r\n-9 10\r\n-8 10\r\n-8 0\r\n-7 0\r\n-7 2\r\n-6 2\r\n-6 0\r\n-5 0\r\n-5 5\r\n-4 5\r\n-4 0\r\n1 0\r\n1 6\r\n2 6\r\n2 0\r\n3 0\r\n3 6\r\n4 6\r\n4 0\r\n6 0\r\n6 7\r\n7 7\r\n7 0\r\n8 0\r\n8 4\r\n9 4\r\n9 0\r\n"
            ],
            [
                "5\r\n505 217 218\r\n57 817 818\r\n153 -115 -114\r\n501 773 774\r\n989 -843 -842\r\n",
                "20\r\n-843 0\r\n-843 989\r\n-842 989\r\n-842 0\r\n-115 0\r\n-115 153\r\n-114 153\r\n-114 0\r\n217 0\r\n217 505\r\n218 505\r\n218 0\r\n773 0\r\n773 501\r\n774 501\r\n774 0\r\n817 0\r\n817 57\r\n818 57\r\n818 0\r\n"
            ],
            [
                "10\r\n677 -995 -972\r\n745 550 625\r\n981 -736 -685\r\n267 -646 -621\r\n770 338 359\r\n292 948 1000\r\n828 -805 -742\r\n360 976 987\r\n311 -962 -942\r\n717 17 43\r\n",
                "40\r\n-995 0\r\n-995 677\r\n-972 677\r\n-972 0\r\n-962 0\r\n-962 311\r\n-942 311\r\n-942 0\r\n-805 0\r\n-805 828\r\n-742 828\r\n-742 0\r\n-736 0\r\n-736 981\r\n-685 981\r\n-685 0\r\n-646 0\r\n-646 267\r\n-621 267\r\n-621 0\r\n17 0\r\n17 717\r\n43 717\r\n43 0\r\n338 0\r\n338 770\r\n359 770\r\n359 0\r\n550 0\r\n550 745\r\n625 745\r\n625 0\r\n948 0\r\n948 292\r\n976 292\r\n976 360\r\n987 360\r\n987 292\r\n1000 292\r\n1000 0\r\n"
            ],
            [
                "20\r\n77 -118 113\r\n61 -89 41\r\n907 571 816\r\n477 197 275\r\n844 -760 -463\r\n16 292 360\r\n762 -560 -557\r\n95 -78 66\r\n181 -179 60\r\n321 -101 133\r\n477 -682 -515\r\n763 -579 -433\r\n208 -888 -796\r\n428 -794 -747\r\n269 349 525\r\n110 577 712\r\n706 173 393\r\n602 -65 1\r\n560 -655 -413\r\n514 801 909\r\n",
                "36\r\n-888 0\r\n-888 208\r\n-796 208\r\n-796 0\r\n-794 0\r\n-794 428\r\n-760 428\r\n-760 844\r\n-463 844\r\n-463 763\r\n-433 763\r\n-433 560\r\n-413 560\r\n-413 0\r\n-179 0\r\n-179 181\r\n-101 181\r\n-101 321\r\n-65 321\r\n-65 602\r\n1 602\r\n1 321\r\n133 321\r\n133 0\r\n173 0\r\n173 706\r\n393 706\r\n393 269\r\n525 269\r\n525 0\r\n571 0\r\n571 907\r\n816 907\r\n816 514\r\n909 514\r\n909 0\r\n"
            ],
            [
                "3\r\n5 0 2\r\n2 0 2\r\n4 1 2\r\n",
                "4\r\n0 0\r\n0 5\r\n2 5\r\n2 0\r\n"
            ],
            [
                "8\r\n5 -4 3\r\n4 -2 -1\r\n3 -4 4\r\n2 0 2\r\n5 0 2\r\n4 1 2\r\n3 4 5\r\n2 5 6\r\n",
                "8\r\n-4 0\r\n-4 5\r\n3 5\r\n3 3\r\n5 3\r\n5 2\r\n6 2\r\n6 0\r\n"
            ],
            [
                "5\r\n10 -10 -8\r\n20 -6 -4\r\n5 1 5\r\n100 6 10\r\n23 11 100\r\n",
                "20\r\n-10 0\r\n-10 10\r\n-8 10\r\n-8 0\r\n-6 0\r\n-6 20\r\n-4 20\r\n-4 0\r\n1 0\r\n1 5\r\n5 5\r\n5 0\r\n6 0\r\n6 100\r\n10 100\r\n10 0\r\n11 0\r\n11 23\r\n100 23\r\n100 0\r\n"
            ],
            [
                "11\r\n12 0 5\r\n12 0 5\r\n12 0 5\r\n12 0 5\r\n12 0 5\r\n12 0 5\r\n12 0 5\r\n12 0 5\r\n12 0 5\r\n12 0 5\r\n10 100 1000\r\n",
                "8\r\n0 0\r\n0 12\r\n5 12\r\n5 0\r\n100 0\r\n100 10\r\n1000 10\r\n1000 0\r\n"
            ],
            [
                "6\r\n3 -3 1\r\n2 -2 0\r\n4 1 2\r\n4 4 5\r\n1 7 8\r\n2 3 6\r\n",
                "18\r\n-3 0\r\n-3 3\r\n1 3\r\n1 4\r\n2 4\r\n2 0\r\n3 0\r\n3 2\r\n4 2\r\n4 4\r\n5 4\r\n5 2\r\n6 2\r\n6 0\r\n7 0\r\n7 1\r\n8 1\r\n8 0\r\n"
            ]
        ]
    }
]