[
    {
        "name": "Towers",
        "description": "The city of D consists of n towers, built consecutively on a straight line.\nThe height of the tower that goes i-th (from left to right) in the sequence\nequals hi. The city mayor decided to rebuild the city to make it beautiful. In\na beautiful city all towers are are arranged in non-descending order of their\nheight from left to right. The rebuilding consists of performing several\n(perhaps zero) operations. An operation constitutes using a crane to take any\ntower and put it altogether on the top of some other neighboring tower. In\nother words, we can take the tower that stands i-th and put it on the top of\neither the (i - 1)-th tower (if it exists), or the (i + 1)-th tower (of it\nexists). The height of the resulting tower equals the sum of heights of the\ntwo towers that were put together. After that the two towers can't be split by\nany means, but more similar operations can be performed on the resulting\ntower. Note that after each operation the total number of towers on the\nstraight line decreases by 1. Help the mayor determine the minimum number of\noperations required to make the city beautiful. Input The first line contains\na single integer n (1 \u2264 n \u2264 5000) \u2014 the number of towers in the city. The next\nline contains n space-separated integers: the i-th number hi (1 \u2264 hi \u2264 10^5)\ndetermines the height of the tower that is i-th (from left to right) in the\ninitial tower sequence. Output Print a single integer \u2014 the minimum number of\noperations needed to make the city beautiful. Examples Input 5 8 2 7 3 1\nOutput 3 Input 3 5 2 1 Output 2\n\n",
        "cf_contest_id": 229,
        "cf_index": "D",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n8 2 7 3 1\r\n",
                "3"
            ],
            [
                "3\r\n5 2 1\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n",
                "0"
            ],
            [
                "2\r\n1 2\r\n",
                "0"
            ],
            [
                "2\r\n2 1\r\n",
                "1"
            ],
            [
                "3\r\n1 3 2\r\n",
                "1"
            ],
            [
                "5\r\n16 8 4 2 1\r\n",
                "4"
            ],
            [
                "6\r\n5 5 2 3 5 5\r\n",
                "1"
            ],
            [
                "5\r\n4 4 4 4 4\r\n",
                "0"
            ],
            [
                "10\r\n5 4 2 13 5 2 21 2 20 1\r\n",
                "5"
            ],
            [
                "10\r\n10 9 8 7 6 5 4 3 2 1\r\n",
                "7"
            ],
            [
                "12\r\n5 1 3 2 3 3 2 2 2 1 3 2\r\n",
                "7"
            ],
            [
                "10\r\n1 2 4 8 1 2 8 16 4 1\r\n",
                "4"
            ],
            [
                "10\r\n6 6 6 6 4 4 4 3 3 2\r\n",
                "4"
            ],
            [
                "17\r\n8 6 1 2 3 6 2 2 2 6 6 1 1 1 1 1 1\r\n",
                "12"
            ],
            [
                "10\r\n982 825 689 538 970 73 40 735 930 719\r\n",
                "6"
            ],
            [
                "20\r\n131 883 492 278 77 934 244 539 929 253 442 84 862 282 141 4 13 843 287 646\r\n",
                "15"
            ],
            [
                "30\r\n632 292 647 666 184 442 449 695 281 786 52 576 124 927 273 771 217 56 135 624 162 406 341 30 343 137 658 318 394 71\r\n",
                "23"
            ],
            [
                "40\r\n780 349 449 406 290 950 653 500 281 320 14 67 386 572 404 538 421 270 983 602 464 611 718 636 912 678 697 203 775 309 764 132 59 801 713 826 759 51 945 742\r\n",
                "30"
            ],
            [
                "50\r\n929 406 604 146 397 811 858 656 632 853 624 559 648 216 183 305 977 483 831 228 117 465 95 891 834 219 88 440 156 547 319 920 540 15 513 371 473 129 290 462 315 815 470 511 151 851 96 52 259 825\r\n",
                "40"
            ],
            [
                "100\r\n981 756 746 449 425 692 211 546 943 980 556 784 426 943 496 742 488 515 753 435 188 875 373 618 415 506 660 446 82 398 244 987 442 588 32 351 832 802 195 104 724 167 109 183 253 847 329 906 640 691 739 639 987 341 560 627 573 809 443 411 180 550 881 154 450 100 435 946 164 688 174 798 1000 275 976 627 779 457 408 262 989 44 26 392 938 857 55 111 885 938 941 206 339 251 904 245 425 872 980 811\r\n",
                "85"
            ],
            [
                "17\r\n65536 32768 16384 8192 4096 2048 1024 512 256 128 64 32 16 8 4 2 1\r\n",
                "16"
            ],
            [
                "5\r\n5 1 3 3 6\r\n",
                "2"
            ]
        ]
    }
]