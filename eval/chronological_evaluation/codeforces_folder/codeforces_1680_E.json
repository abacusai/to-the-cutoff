[
    {
        "name": "Moving Chips",
        "description": "You are given a board of size \n    2 \n    \u00d7 n\n (\n    2\n rows, \n    n\n\ncolumns). Some cells of the board contain chips. The chip is represented as\n'*', and an empty space is represented as '.'. It is guaranteed that there is\nat least one chip on the board. In one move, you can choose any chip and move\nit to any adjacent (by side) cell of the board (if this cell is inside the\nboard). It means that if the chip is in the first row, you can move it left,\nright or down (but it shouldn't leave the board). Same, if the chip is in the\nsecond row, you can move it left, right or up. If the chip moves to the cell\nwith another chip, the chip in the destination cell disappears (i. e. our chip\ncaptures it). Your task is to calculate the minimum number of moves required\nto leave exactly one chip on the board. You have to answer \n    t\n independent\ntest cases. Input The first line of the input contains one integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 2 \n    \u00b7 10^4\n) \u2014 the number of test cases. Then\n\n    t\n test cases follow. The first line of the test case contains one\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of the\nboard. The second line of the test case contains the string \n    s_1\n\nconsisting of \n    n\n characters '*' (chip) and/or '.' (empty cell). The third\nline of the test case contains the string \n    s_2\n consisting of \n    n\n\ncharacters '*' (chip) and/or '.' (empty cell). Additional constraints on the\ninput: in each test case, there is at least one chip on a board; the sum of\n\n    n\n over all test cases does not exceed \n    2 \n    \u00b7 10^5\n (\n    \u2211 n\n    \n    \u2264 2 \n    \u00b7 10^5\n). Output For each test case, print one integer \u2014 the\nminimum number of moves required to leave exactly one chip on the board.\nExample Input 5 1 * . 2 .* ** 3 *.* .*. 4 **.* **.. 5 **... ...** Output 0 2 3\n5 5\n\n",
        "cf_contest_id": 1680,
        "cf_index": "E",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1\r\n*\r\n.\r\n2\r\n.*\r\n**\r\n3\r\n*.*\r\n.*.\r\n4\r\n**.*\r\n**..\r\n5\r\n**...\r\n...**\r\n",
                "0\r\n2\r\n3\r\n5\r\n5\r\n"
            ]
        ],
        "private_cases": []
    }
]