[
    {
        "name": "Name",
        "description": "Everything got unclear to us in a far away constellation Tau Ceti.\nSpecifically, the Taucetians choose names to their children in a very peculiar\nmanner. Two young parents abac and bbad think what name to give to their\nfirst-born child. They decided that the name will be the permutation of\nletters of string s. To keep up with the neighbours, they decided to call the\nbaby so that the name was lexicographically strictly larger than the\nneighbour's son's name t. On the other hand, they suspect that a name tax will\nbe introduced shortly. According to it, the Taucetians with lexicographically\nlarger names will pay larger taxes. That's the reason abac and bbad want to\ncall the newborn so that the name was lexicographically strictly larger than\nname t and lexicographically minimum at that. The lexicographical order of\nstrings is the order we are all used to, the \"dictionary\" order. Such\ncomparison is used in all modern programming languages to compare strings.\nFormally, a string p of length n is lexicographically less than string q of\nlength m, if one of the two statements is correct: n < m, and p is the\nbeginning (prefix) of string q (for example, \"aba\" is less than string\n\"abaa\"), p1 = q1, p2 = q2, ..., pk - 1 = qk - 1, pk < qk for some k (1 \u2264 k \u2264\nmin(n, m)), here characters in strings are numbered starting from 1. Write a\nprogram that, given string s and the heighbours' child's name t determines the\nstring that is the result of permutation of letters in s. The string should be\nlexicographically strictly more than t and also, lexicographically minimum.\nInput The first line contains a non-empty string s (1 \u2264 |s| \u2264 5000), where |s|\nis its length. The second line contains a non-empty string t (1 \u2264 |t| \u2264 5000),\nwhere |t| is its length. Both strings consist of lowercase Latin letters.\nOutput Print the sought name or -1 if it doesn't exist. Examples Input aad aac\nOutput aad Input abad bob Output daab Input abc defg Output -1 Input czaaab\nabcdef Output abczaa Note In the first sample the given string s is the sought\none, consequently, we do not need to change the letter order there.\n\n",
        "cf_contest_id": 180,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "aad\r\naac\r\n",
                "aad"
            ],
            [
                "abad\r\nbob\r\n",
                "daab"
            ],
            [
                "abc\r\ndefg\r\n",
                "-1\r\n"
            ],
            [
                "czaaab\r\nabcdef\r\n",
                "abczaa"
            ]
        ],
        "private_cases": [
            [
                "a\r\na\r\n",
                "-1\r\n"
            ],
            [
                "a\r\nb\r\n",
                "-1\r\n"
            ],
            [
                "z\r\na\r\n",
                "z"
            ],
            [
                "aa\r\naa\r\n",
                "-1\r\n"
            ],
            [
                "ab\r\naa\r\n",
                "ab"
            ],
            [
                "aa\r\nab\r\n",
                "-1\r\n"
            ],
            [
                "abc\r\naca\r\n",
                "acb"
            ],
            [
                "abc\r\ncaa\r\n",
                "cab"
            ],
            [
                "abab\r\naaba\r\n",
                "aabb"
            ],
            [
                "zaaa\r\naaaw\r\n",
                "aaaz"
            ],
            [
                "abacaba\r\naba\r\n",
                "abaaabc"
            ],
            [
                "abacaba\r\nabababa\r\n",
                "ababaca"
            ],
            [
                "abc\r\nbbb\r\n",
                "bca"
            ],
            [
                "abc\r\ncac\r\n",
                "cba"
            ],
            [
                "abc\r\naaac\r\n",
                "abc"
            ],
            [
                "abc\r\nabbc\r\n",
                "abc"
            ],
            [
                "abc\r\naabb\r\n",
                "abc"
            ],
            [
                "abcabc\r\naaccba\r\n",
                "aaccbb"
            ],
            [
                "aabbaa\r\ncaaaaaaaaa\r\n",
                "-1\r\n"
            ],
            [
                "aabbaa\r\naaaaaaaaaaaaaaaaaaaa\r\n",
                "aaaabb"
            ],
            [
                "aabbaa\r\na\r\n",
                "aaaabb"
            ],
            [
                "abcabc\r\nabccaa\r\n",
                "abccab"
            ],
            [
                "z\r\nanana\r\n",
                "z"
            ],
            [
                "z\r\nzz\r\n",
                "-1\r\n"
            ],
            [
                "z\r\nww\r\n",
                "z"
            ],
            [
                "zzzzzzzzzz\r\naaaaaaaaa\r\n",
                "zzzzzzzzzz"
            ],
            [
                "zzzzzzzzzzzz\r\na\r\n",
                "zzzzzzzzzzzz"
            ],
            [
                "aaaaaaaaz\r\nwwwwwwwwwwwwwwwwwwww\r\n",
                "zaaaaaaaa"
            ],
            [
                "qwertyz\r\nqwertyuiop\r\n",
                "qwertyz"
            ],
            [
                "acaccaaadd\r\nbabcacbadd\r\n",
                "caaaaaccdd"
            ],
            [
                "aaabccadac\r\nacabbbabaa\r\n",
                "acabcaaacd"
            ],
            [
                "bcbcdddbbd\r\nabbbcbdcdc\r\n",
                "bbbbccdddd"
            ],
            [
                "acbdcbacbb\r\ncbcddabcbdaccdd\r\n",
                "cbdaabbbcc"
            ],
            [
                "adbddbccdacbaab\r\nadaddcbddb\r\n",
                "adaddccaabbbbcd"
            ],
            [
                "bbbaabbaab\r\nababbaaabb\r\n",
                "ababbaabbb"
            ],
            [
                "abbabaaabaaabbbbabbbbbababababaaaabbabbbbabbbbbabbbbababbaaaaabbbabbbbabbbbbbabaabababaabbbabababbaa\r\nbbaabaabaaaabbabaaaababababaabaabaaaabbaabbbbabbbaabaabaababbaababaaaabababbaabbaaabbbaaaaaaabaabbbb\r\n",
                "bbaabaabaaaabbabaaaababababaabaabaaaabbaabbbbabbbaabaabaababbaababaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
            ],
            [
                "acaccaaadd\r\nacaccaaadd\r\n",
                "acaccaadad"
            ],
            [
                "aaabccadac\r\naabbccbdac\r\n",
                "aabcaaaccd"
            ],
            [
                "bcbcdddbbd\r\nbcbcdbdbbd\r\n",
                "bcbcdbdbdd"
            ],
            [
                "adbddbccdacbaab\r\nadcddbdcda\r\n",
                "adcddcaaabbbbcd"
            ],
            [
                "bbbaabbaab\r\nbbbaabbaab\r\n",
                "bbbaabbaba"
            ],
            [
                "abbabaaabaaabbbbabbbbbababababaaaabbabbbbabbbbbabbbbababbaaaaabbbabbbbabbbbbbabaabababaabbbabababbaa\r\nabbabaaabaaabbbbabbbabababababaaaabbabbbbabbbbbabbbbababbaaaaabbaabbbbabbbbbbabaabababaabbbabababbaa\r\n",
                "abbabaaabaaabbbbabbbabababababaaaabbabbbbabbbbbabbbbababbaaaaabbaabbbbabbbbbbabaabababaabbbabababbbb"
            ],
            [
                "acaccaaadz\r\ncaadccaaaa\r\n",
                "caadccaaaz"
            ],
            [
                "aaabccadaz\r\nacabcaadaa\r\n",
                "acabcaadaz"
            ],
            [
                "bcbcdddbbz\r\ndbbccbddba\r\n",
                "dbbccbddbz"
            ],
            [
                "adbddbccdacbaaz\r\ndacdcaddbb\r\n",
                "dacdcaddbbaabcz"
            ],
            [
                "bbbaabbaaz\r\nabaabbbbaa\r\n",
                "abaabbbbaz"
            ],
            [
                "abbabaaabaaabbbbabbbbbababababaaaabbabbbbabbbbbabbbbababbaaaaabbbabbbbabbbbbbabaabababaabbbabababbaz\r\nabaaabaabbbbaabbbbaabababbaabaabababbbaabbbaaabbabbabbbbbbbbaabbbbbabababbbbaaabaaaabbbbbbbbabababba\r\n",
                "abaaabaabbbbaabbbbaabababbaabaabababbbaabbbaaabbabbabbbbbbbbaabbbbbabababbbbaaabaaaabbbbbbbbabababbz"
            ],
            [
                "ac\r\na\r\n",
                "ac"
            ],
            [
                "ccc\r\ncc\r\n",
                "ccc"
            ],
            [
                "babbaccbab\r\nb\r\n",
                "baaabbbbcc"
            ],
            [
                "ccabcaabcc\r\nbcca\r\n",
                "bccaaabccc"
            ],
            [
                "bbbcaabcaa\r\ncacbababab\r\n",
                "cacbababba"
            ],
            [
                "bbbbaacacb\r\ncbacbaabb\r\n",
                "cbacbaabbb"
            ],
            [
                "aaa\r\naa\r\n",
                "aaa"
            ],
            [
                "aab\r\naa\r\n",
                "aab"
            ],
            [
                "aa\r\na\r\n",
                "aa"
            ],
            [
                "ab\r\na\r\n",
                "ab"
            ],
            [
                "ab\r\nb\r\n",
                "ba"
            ],
            [
                "aaaaaaaaa\r\na\r\n",
                "aaaaaaaaa"
            ],
            [
                "aaaaaaaaaaaaaaa\r\naaaaaaaaaaaaaa\r\n",
                "aaaaaaaaaaaaaaa"
            ]
        ]
    }
]