[
    {
        "name": "Ehab and Prefix MEXs",
        "description": "Given an array \n    a\n of length \n    n\n, find another array, \n    b\n, of\nlength \n    n\n such that: for each \n    i\n \n    (1 \n    \u2264 i \n    \u2264 n)\n\n\n    MEX(\n    \n    b_1,b_2,\n    \u2026,b_i\n    \n    )=a_i\n. The\n\n    MEX\n of a set of integers is the smallest non-negative integer that\ndoesn't belong to this set. If such array doesn't exist, determine this. Input\nThe first line contains an integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the\nlength of the array \n    a\n. The second line contains \n    n\n integers\n\n    a_1\n, \n    a_2\n, \n    \u2026\n, \n    a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 i\n) \u2014\nthe elements of the array \n    a\n. It's guaranteed that \n    a_i \n    \u2264\n    a_i+1\n for \n    1\n    \u2264 i < n\n. Output If there's no such array, print a\nsingle line containing \n    -1\n. Otherwise, print a single line containing\n\n    n\n integers \n    b_1\n, \n    b_2\n, \n    \u2026\n, \n    b_n\n (\n    0 \n    \u2264\n    b_i \n    \u2264 10^6\n) If there are multiple answers, print any. Examples Input 3\n1 2 3 Output 0 1 2 Input 4 0 0 0 2 Output 1 3 4 0 Input 3 1 1 3 Output 0 2 1\nNote In the second test case, other answers like \n    [1,1,1,0]\n, for example,\nare valid.\n\n",
        "cf_contest_id": 1364,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 3\r\n",
                "0 1 2 "
            ],
            [
                "4\r\n0 0 0 2\r\n",
                "1 3 4 0 "
            ],
            [
                "3\r\n1 1 3\r\n",
                "0 2 1 "
            ]
        ],
        "private_cases": [
            [
                "7\r\n0 0 2 2 5 5 6\r\n",
                "1 3 0 4 2 7 5 "
            ],
            [
                "10\r\n1 2 3 4 4 4 7 7 7 10\r\n",
                "0 1 2 3 5 6 4 8 9 7 "
            ],
            [
                "1\r\n1\r\n",
                "0 "
            ],
            [
                "1\r\n0\r\n",
                "1 "
            ]
        ]
    }
]