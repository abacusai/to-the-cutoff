[
    {
        "name": "Funny Permutation",
        "description": "A sequence of \n    n\n numbers is called permutation if it contains all numbers\nfrom \n    1\n to \n    n\n exactly once. For example, the sequences \n    [3, 1, 4,\n    2]\n, [\n    1\n] and \n    [2,1]\n are permutations, but \n    [1,2,1]\n,\n\n    [0,1]\n and \n    [1,3,4]\n are not. For a given number \n    n\n you need to\nmake a permutation \n    p\n such that two requirements are satisfied at the\nsame time: For each element \n    p_i\n, at least one of its neighbors has a\nvalue that differs from the value of \n    p_i\n by one. That is, for each\nelement \n    p_i\n (\n    1 \n    \u2264 i \n    \u2264 n\n), at least one of its neighboring\nelements (standing to the left or right of \n    p_i\n) must be \n    p_i + 1\n,\nor \n    p_i - 1\n. the permutation must have no fixed points. That is, for\nevery \n    i\n (\n    1 \n    \u2264 i \n    \u2264 n\n), \n    p_i \n    \u2260 i\n must be satisfied.\nLet's call the permutation that satisfies these requirements funny. For\nexample, let \n    n = 4\n. Then [\n    4, 3, 1, 2\n] is a funny permutation,\nsince: to the right of \n    p_1=4\n is \n    p_2=p_1-1=4-1=3\n; to the left of\n\n    p_2=3\n is \n    p_1=p_2+1=3+1=4\n; to the right of \n    p_3=1\n is\n\n    p_4=p_3+1=1+1=2\n; to the left of \n    p_4=2\n is \n    p_3=p_4-1=2-1=1\n.\nfor all \n    i\n is \n    p_i \n     i\n. For a given positive integer \n    n\n,\noutput any funny permutation of length \n    n\n, or output -1 if funny\npermutation of length \n    n\n does not exist. Input The first line of input\ndata contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the\nnumber of test cases. The description of the test cases follows. Each test\ncase consists of f single line containing one integer \n    n\n (\n    2 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n). It is guaranteed that the sum of \n    n\n over all\ntest cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test case,\nprint on a separate line: any funny permutation \n    p\n of length \n    n\n; or\nthe number -1 if the permutation you are looking for does not exist. Example\nInput 5 4 3 7 5 2 Output 3 4 2 1 -1 6 7 4 5 3 2 1 5 4 1 2 3 2 1 Note The first\ntest case is explained in the problem statement. In the second test case, it\nis not possible to make the required permutation: permutations \n    [1, 2,\n    3]\n, \n    [1, 3, 2]\n, \n    [2, 1, 3]\n, \n    [3, 2, 1]\n have fixed points,\nand in \n    [2, 3, 1]\n and \n    [3, 1, 2]\n the first condition is met not for\nall positions.\n\n",
        "cf_contest_id": 1741,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4\r\n3\r\n7\r\n5\r\n2\r\n",
                "3 4 2 1\r\n-1\r\n3 4 5 6 7 2 1\r\n3 4 5 2 1\r\n2 1\r\n"
            ]
        ],
        "private_cases": []
    }
]