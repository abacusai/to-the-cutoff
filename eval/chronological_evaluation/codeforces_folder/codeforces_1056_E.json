[
    {
        "name": "Check Transcription",
        "description": "One of Arkady's friends works at a huge radio telescope. A few decades ago the\ntelescope has sent a signal \n    s\n towards a faraway galaxy. Recently they've\nreceived a response \n    t\n which they believe to be a response from aliens!\nThe scientists now want to check if the signal \n    t\n is similar to \n    s\n.\nThe original signal \n    s\n was a sequence of zeros and ones (everyone knows\nthat binary code is the universe-wide language). The returned signal \n    t\n,\nhowever, does not look as easy as \n    s\n, but the scientists don't give up!\nThey represented \n    t\n as a sequence of English letters and say that \n    t\n\nis similar to \n    s\n if you can replace all zeros in \n    s\n with some string\n\n    r_0\n and all ones in \n    s\n with some other string \n    r_1\n and obtain\n\n    t\n. The strings \n    r_0\n and \n    r_1\n must be different and non-empty.\nPlease help Arkady's friend and find the number of possible replacements for\nzeros and ones (the number of pairs of strings \n    r_0\n and \n    r_1\n) that\ntransform \n    s\n to \n    t\n. Input The first line contains a string \n    s\n\n(\n    2 \n    \u2264 |s| \n    \u2264 10^5\n) consisting of zeros and ones \u2014 the original\nsignal. The second line contains a string \n    t\n (\n    1 \n    \u2264 |t| \n    \u2264\n    10^6\n) consisting of lowercase English letters only \u2014 the received signal.\nIt is guaranteed, that the string \n    s\n contains at least one '0' and at\nleast one '1'. Output Print a single integer \u2014 the number of pairs of strings\n\n    r_0\n and \n    r_1\n that transform \n    s\n to \n    t\n. In case there are\nno such pairs, print \n    0\n. Examples Input 01 aaaaaa Output 4 Input 001\nkokokokotlin Output 2 Note In the first example, the possible pairs \n    (r_0,\n    r_1)\n are as follows: \"a\", \"aaaaa\" \"aa\", \"aaaa\" \"aaaa\", \"aa\" \"aaaaa\", \"a\"\nThe pair \"aaa\", \"aaa\" is not allowed, since \n    r_0\n and \n    r_1\n must be\ndifferent. In the second example, the following pairs are possible: \"ko\",\n\"kokotlin\" \"koko\", \"tlin\"\n\n",
        "cf_contest_id": 1056,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "hashing",
            "strings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "01\r\naaaaaa\r\n",
                "4"
            ],
            [
                "001\r\nkokokokotlin\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "010\r\nojwprcaaaaaaaaaab\r\n",
                "0"
            ],
            [
                "010\r\ngvmorcaaaaaaaaaab\r\n",
                "0"
            ],
            [
                "010\r\nugkircaaaaaaaaaab\r\n",
                "0"
            ],
            [
                "01\r\nzbrronwaofovklkopelo\r\n",
                "19"
            ]
        ]
    }
]