[
    {
        "name": "Equilibrium",
        "description": "William has two arrays \n    a\n and \n    b\n, each consisting of \n    n\n items.\nFor some segments \n    l..r\n of these arrays William wants to know if it is\npossible to equalize the values of items in these segments using a balancing\noperation. Formally, the values are equalized if for each \n    i\n from \n    l\n\nto \n    r\n holds \n    a_i = b_i\n. To perform a balancing operation an even\nnumber of indices must be selected, such that \n    l \n    \u2264 pos_1 < pos_2 <\n    \n    \u2026 < pos_k \n    \u2264 r\n. Next the items of array a at positions \n    pos_1,\n    pos_3, pos_5, \n    \u2026\n get incremented by one and the items of array b at\npositions \n    pos_2, pos_4, pos_6, \n    \u2026\n get incremented by one. William\nwants to find out if it is possible to equalize the values of elements in two\narrays for each segment using some number of balancing operations, and what is\nthe minimal number of operations required for that. Note that for each segment\nthe operations are performed independently. Input The first line contains a\ntwo integers \n    n\n and \n    q\n (\n    2 \n    \u2264 n \n    \u2264 10^5\n, \n    1 \n    \u2264 q\n    \n    \u2264 10^5\n), the size of arrays \n    a\n and \n    b\n and the number of\nsegments. The second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n \n    (0 \n    \u2264 a_i \n    \u2264 10^9)\n. The third line contains \n    n\n\nintegers \n    b_1, b_2, \n    \u2026, b_n\n \n    (0 \n    \u2264 b_i \n    \u2264 10^9)\n. Each of\nthe next \n    q\n lines contains two integers \n    l_i\n and \n    r_i\n \n    (1\n    \n    \u2264 l_i < r_i \n    \u2264 n)\n, the edges of segments. Output For each segment\noutput a single number \u2014 the minimal number of balancing operations needed or\n\"-1\" if it is impossible to equalize segments of arrays. Example Input 8 5 0 1\n2 9 3 2 7 5 2 2 1 9 4 1 5 8 2 6 1 7 2 4 7 8 5 8 Output 1 3 1 -1 -1 Note For\nthe first segment from \n    2\n to \n    6\n you can do one operation with \n    pos\n    = [2, 3, 5, 6]\n, after this operation the arrays will be: \n    a = [0, 2, 2,\n    9, 4, 2, 7, 5]\n, \n    b = [2, 2, 2, 9, 4, 2, 5, 8]\n. Arrays are equal on a\nsegment from \n    2\n to \n    6\n after this operation. For the second segment\nfrom \n    1\n to \n    7\n you can do three following operations: \n    pos = [1, 3,\n    5, 6]\n \n    pos = [1, 7]\n \n    pos = [2, 7]\n After these operations, the\narrays will be: \n    a = [2, 2, 2, 9, 4, 2, 7, 5]\n, \n    b = [2, 2, 2, 9, 4, 2,\n    7, 8]\n. Arrays are equal on a segment from \n    1\n to \n    7\n after these\noperations. For the third segment from \n    2\n to \n    4\n you can do one\noperation with \n    pos = [2, 3]\n, after the operation arrays will be: \n    a =\n    [0, 2, 2, 9, 3, 2, 7, 5]\n, \n    b = [2, 2, 2, 9, 4, 1, 5, 8]\n. Arrays are\nequal on a segment from \n    2\n to \n    4\n after this operation. It is\nimpossible to equalize the fourth and the fifth segment.\n\n",
        "cf_contest_id": 1556,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8 5\r\n0 1 2 9 3 2 7 5\r\n2 2 1 9 4 1 5 8\r\n2 6\r\n1 7\r\n2 4\r\n7 8\r\n5 8\r\n",
                "1\r\n3\r\n1\r\n-1\r\n-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 5\r\n146321077 449813547 308647993 833095737 785151702 11689582 907479269 508379103 675578062 401735370\r\n146321077 449813547 308647993 833095737 785151702 988246116 58441821 380860017 175603431 31790197\r\n3 5\r\n9 10\r\n6 8\r\n3 8\r\n2 5\r\n",
                "0\r\n-1\r\n976556534\r\n976556534\r\n0\r\n"
            ],
            [
                "10 5\r\n158940588 34239756 288734822 316534684 228951315 866032471 806021689 724650793 696767640 926615042\r\n964453732 300325315 427348614 561213099 808239813 286743973 561343274 586037001 430682081 121101898\r\n4 7\r\n1 10\r\n5 6\r\n3 8\r\n2 9\r\n",
                "823966913\r\n2034179408\r\n579288498\r\n962580705\r\n1228666264\r\n"
            ],
            [
                "10 5\r\n45670959 545531531 135390377 36946509 557920450 875937703 470556293 706737516 419634423 996593331\r\n984619228 834233676 676043383 272491394 909400281 524457872 235011408 166084510 130932278 57645062\r\n1 10\r\n3 8\r\n2 9\r\n4 7\r\n5 6\r\n",
                "2355328136\r\n1127677722\r\n1416379867\r\n587024716\r\n351479831\r\n"
            ],
            [
                "10 10\r\n126206464 651802458 630521348 183784110 425578668 966626468 697588369 299160294 275516626 962689147\r\n687331437 90677485 630521348 572146764 425578668 966626468 697588369 299160294 275516626 962689147\r\n4 8\r\n6 8\r\n3 7\r\n3 4\r\n7 8\r\n3 8\r\n4 5\r\n8 9\r\n6 7\r\n3 9\r\n",
                "-1\r\n0\r\n-1\r\n-1\r\n0\r\n-1\r\n-1\r\n0\r\n0\r\n-1\r\n"
            ],
            [
                "10 10\r\n592405600 910529436 497167328 167343740 79573221 792632905 565587748 762298283 220571848 982615724\r\n592405600 910529436 497167328 167343740 518475713 353730413 565587748 762298283 969011429 234176143\r\n1 6\r\n1 4\r\n2 5\r\n7 10\r\n1 3\r\n9 10\r\n5 10\r\n4 10\r\n5 8\r\n2 6\r\n",
                "438902492\r\n0\r\n-1\r\n748439581\r\n0\r\n748439581\r\n748439581\r\n748439581\r\n438902492\r\n438902492\r\n"
            ],
            [
                "10 10\r\n963572849 386055889 976362908 231406501 262666398 22957326 819361255 553166901 505545635 953363124\r\n963572849 386055889 976362908 231406501 262666398 562895542 10564425 553166901 505545635 953363124\r\n4 10\r\n8 10\r\n3 9\r\n4 7\r\n2 10\r\n2 8\r\n2 9\r\n3 5\r\n7 10\r\n6 8\r\n",
                "-1\r\n0\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n0\r\n-1\r\n-1\r\n"
            ],
            [
                "10 10\r\n930913675 61754512 108130591 303057240 23976376 874177876 843075852 25236502 284198367 649486650\r\n930913675 692991054 108130591 303057240 855548825 42605427 843075852 25236502 863707525 69977492\r\n5 6\r\n5 7\r\n5 8\r\n3 7\r\n3 8\r\n2 8\r\n1 7\r\n2 10\r\n2 4\r\n1 2\r\n",
                "831572449\r\n831572449\r\n831572449\r\n831572449\r\n831572449\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "10 10\r\n894887111 146743785 109114345 815955099 968902979 475266442 919978438 174336213 986559256 952162378\r\n894887111 146743785 820647914 104421530 968902979 475266442 919978438 908881640 252013829 952162378\r\n7 10\r\n6 9\r\n5 9\r\n1 7\r\n2 9\r\n1 2\r\n3 10\r\n1 10\r\n3 7\r\n2 4\r\n",
                "734545427\r\n734545427\r\n734545427\r\n711533569\r\n734545427\r\n0\r\n734545427\r\n734545427\r\n711533569\r\n711533569\r\n"
            ],
            [
                "10 10\r\n719320440 246325748 657046920 921405001 768031322 71871129 982819884 386690684 226761511 243460901\r\n719320440 768531702 134840966 921405001 768031322 995059843 59631170 386690684 339735990 243460901\r\n2 5\r\n1 5\r\n5 10\r\n2 7\r\n4 7\r\n1 10\r\n4 10\r\n1 6\r\n8 9\r\n2 9\r\n",
                "522205954\r\n522205954\r\n-1\r\n923188714\r\n923188714\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "10 10\r\n755075081 948103422 704184013 496635924 275068805 631006681 469018402 175389106 863439045 563324185\r\n745041331 424509185 704184013 561942970 209761759 631006681 469018402 175389106 863439045 563324185\r\n8 9\r\n6 7\r\n7 10\r\n8 10\r\n3 6\r\n4 8\r\n7 9\r\n1 7\r\n1 6\r\n6 8\r\n",
                "0\r\n0\r\n0\r\n0\r\n65307046\r\n65307046\r\n0\r\n-1\r\n-1\r\n0\r\n"
            ],
            [
                "10 10\r\n505880323 918208695 460188208 289539002 811477839 450701929 21738868 254700621 810290626 444567575\r\n505880323 918208695 460188208 289539002 811477839 450701929 21738868 902556105 162435142 444567575\r\n8 9\r\n4 5\r\n3 10\r\n2 3\r\n7 9\r\n4 10\r\n4 6\r\n2 9\r\n4 9\r\n2 10\r\n",
                "647855484\r\n0\r\n647855484\r\n0\r\n647855484\r\n647855484\r\n0\r\n647855484\r\n647855484\r\n647855484\r\n"
            ],
            [
                "10 10\r\n500007913 856079006 196913426 406692832 364084743 994266054 378700256 38254769 479272503 393613505\r\n923435067 432651852 196913426 406692832 364084743 994266054 378700256 988322977 166602985 393613505\r\n1 3\r\n3 10\r\n1 7\r\n3 7\r\n3 5\r\n3 4\r\n1 5\r\n1 9\r\n6 9\r\n5 9\r\n",
                "423427154\r\n-1\r\n423427154\r\n0\r\n0\r\n0\r\n423427154\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "10 10\r\n840548502 606856656 21876831 152015851 829334461 742062 774876583 243397054 282966197 864319815\r\n840548502 606856656 21876831 152015851 829334461 999307361 237494825 243397054 667732243 479553769\r\n2 8\r\n2 10\r\n1 4\r\n2 5\r\n2 4\r\n4 8\r\n1 8\r\n6 7\r\n1 7\r\n3 10\r\n",
                "-1\r\n-1\r\n0\r\n0\r\n0\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "10 10\r\n740372751 105575569 760892788 179868872 972628896 396430042 113285890 966641544 851044893 69041708\r\n740372751 105575569 760892788 179868872 972628896 396430042 953914175 126013259 851044893 69041708\r\n3 9\r\n2 9\r\n2 3\r\n2 10\r\n5 10\r\n5 6\r\n5 9\r\n2 8\r\n6 9\r\n2 6\r\n",
                "840628285\r\n840628285\r\n0\r\n840628285\r\n840628285\r\n0\r\n840628285\r\n840628285\r\n840628285\r\n0\r\n"
            ],
            [
                "10 10\r\n399757924 936089749 973487846 553104849 239001707 681777562 634646935 79438405 63468741 204680105\r\n647054445 139905803 973487846 553104849 239001707 681777562 634646935 79438405 63468741 204680105\r\n3 7\r\n4 5\r\n5 10\r\n7 9\r\n7 8\r\n6 10\r\n3 4\r\n3 6\r\n3 10\r\n8 10\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "4 1\r\n0 10 0 5\r\n5 0 10 0\r\n1 4\r\n",
                "-1\r\n"
            ],
            [
                "2 1\r\n3 0\r\n0 3\r\n1 2\r\n",
                "-1\r\n"
            ],
            [
                "2 1\r\n2 0\r\n1 1\r\n1 2\r\n",
                "-1\r\n"
            ],
            [
                "2 1\r\n1 0\r\n0 1\r\n1 2\r\n",
                "-1\r\n"
            ],
            [
                "2 1\r\n2 1\r\n1 2\r\n1 2\r\n",
                "-1\r\n"
            ],
            [
                "2 1\r\n2 0\r\n0 2\r\n1 2\r\n",
                "-1\r\n"
            ],
            [
                "4 1\r\n0 2 0 1\r\n1 0 2 0\r\n1 4\r\n",
                "-1\r\n"
            ],
            [
                "4 1\r\n5 6 7 8\r\n6 4 10 6\r\n1 4\r\n",
                "-1\r\n"
            ],
            [
                "8 5\r\n2 2 1 9 4 1 5 8\r\n0 1 2 9 3 2 7 5\r\n2 6\r\n1 7\r\n2 4\r\n7 8\r\n5 8\r\n",
                "-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "6 2\r\n0 1 0 4 0 1\r\n2 0 3 0 2 0\r\n1 4\r\n3 6\r\n",
                "4\r\n-1\r\n"
            ]
        ]
    }
]