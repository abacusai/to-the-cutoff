[
    {
        "name": "TV Subscriptions (Easy Version)",
        "description": "The only difference between easy and hard versions is constraints. The BerTV\nchannel every day broadcasts one episode of one of the \n    k\n TV shows. You\nknow the schedule for the next \n    n\n days: a sequence of integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 k\n), where \n    a_i\n is the show,\nthe episode of which will be shown in \n    i\n-th day. The subscription to the\nshow is bought for the entire show (i.e. for all its episodes), for each show\nthe subscription is bought separately. How many minimum subscriptions do you\nneed to buy in order to have the opportunity to watch episodes of purchased\nshows \n    d\n (\n    1 \n    \u2264 d \n    \u2264 n\n) days in a row? In other words, you\nwant to buy the minimum number of TV shows so that there is some segment of\n\n    d\n consecutive days in which all episodes belong to the purchased shows.\nInput The first line contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014\nthe number of test cases in the input. Then \n    t\n test case descriptions\nfollow. The first line of each test case contains three integers \n    n, k\n\nand \n    d\n (\n    1 \n    \u2264 n \n    \u2264 100\n, \n    1 \n    \u2264 k \n    \u2264 100\n, \n    1 \n    \u2264\n    d \n    \u2264 n\n). The second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 k\n), where \n    a_i\n is the show that is\nbroadcasted on the \n    i\n-th day. It is guaranteed that the sum of the values\n\u200b\u200bof \n    n\n for all test cases in the input does not exceed \n    100\n. Output\nPrint \n    t\n integers \u2014 the answers to the test cases in the input in the\norder they follow. The answer to a test case is the minimum number of TV shows\nfor which you need to purchase a subscription so that you can watch episodes\nof the purchased TV shows on BerTV for \n    d\n consecutive days. Please note\nthat it is permissible that you will be able to watch more than \n    d\n days\nin a row. Example Input 4 5 2 2 1 2 1 2 1 9 3 3 3 3 3 2 2 2 1 1 1 4 10 4 10 8\n6 4 16 9 8 3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 Output 2 1 4 5 Note In the first\ntest case to have an opportunity to watch shows for two consecutive days, you\nneed to buy a subscription on show \n    1\n and on show \n    2\n. So the answer\nis two. In the second test case, you can buy a subscription to any show\nbecause for each show you can find a segment of three consecutive days,\nconsisting only of episodes of this show. In the third test case in the unique\nsegment of four days, you have four different shows, so you need to buy a\nsubscription to all these four shows. In the fourth test case, you can buy\nsubscriptions to shows \n    3,5,7,8,9\n, and you will be able to watch shows\nfor the last eight days.\n\n",
        "cf_contest_id": 1225,
        "cf_index": "B1",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5 2 2\r\n1 2 1 2 1\r\n9 3 3\r\n3 3 3 2 2 2 1 1 1\r\n4 10 4\r\n10 8 6 4\r\n16 9 8\r\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3\r\n",
                "2\r\n1\r\n4\r\n5\r\n"
            ]
        ],
        "private_cases": [
            [
                "30\r\n4 4 1\r\n3 3 1 2\r\n4 4 1\r\n4 1 4 1\r\n1 1 1\r\n1\r\n3 2 1\r\n2 1 2\r\n4 4 2\r\n3 2 2 2\r\n4 2 4\r\n1 2 2 2\r\n1 4 1\r\n4\r\n2 3 1\r\n2 3\r\n2 2 1\r\n2 2\r\n4 4 2\r\n1 2 4 2\r\n4 4 1\r\n2 4 4 3\r\n4 3 1\r\n1 3 1 3\r\n1 1 1\r\n1\r\n2 2 2\r\n2 1\r\n2 4 1\r\n1 4\r\n2 4 1\r\n3 4\r\n1 2 1\r\n1\r\n2 4 2\r\n2 1\r\n3 1 2\r\n1 1 1\r\n2 4 1\r\n1 4\r\n2 3 1\r\n3 3\r\n4 2 2\r\n2 1 2 2\r\n3 2 2\r\n2 2 1\r\n4 3 1\r\n2 2 1 2\r\n2 3 1\r\n1 3\r\n4 4 4\r\n3 2 2 3\r\n1 4 1\r\n1\r\n2 1 2\r\n1 1\r\n1 4 1\r\n4\r\n2 3 1\r\n3 3\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n2\r\n1\r\n1\r\n1\r\n2\r\n1\r\n1\r\n1\r\n2\r\n1\r\n1\r\n1\r\n2\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n2\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "15\r\n6 4 6\r\n2 3 2 3 4 2\r\n7 8 4\r\n5 6 2 7 7 3 3\r\n8 1 5\r\n1 1 1 1 1 1 1 1\r\n1 5 1\r\n1\r\n2 7 2\r\n6 7\r\n6 8 4\r\n8 5 4 1 6 6\r\n1 8 1\r\n2\r\n3 8 2\r\n2 3 3\r\n2 2 1\r\n1 1\r\n8 2 5\r\n2 2 1 1 1 1 1 1\r\n7 6 4\r\n2 4 1 1 2 4 3\r\n8 8 2\r\n6 5 6 1 3 1 2 8\r\n5 6 1\r\n6 1 2 6 2\r\n6 5 5\r\n1 5 2 4 4 5\r\n7 1 6\r\n1 1 1 1 1 1 1\r\n",
                "3\r\n2\r\n1\r\n1\r\n2\r\n3\r\n1\r\n1\r\n1\r\n1\r\n3\r\n2\r\n1\r\n3\r\n1\r\n"
            ],
            [
                "10\r\n6 9 4\r\n8 8 2 5 8 9\r\n5 3 4\r\n1 3 1 2 1\r\n10 5 10\r\n3 2 4 2 1 1 2 2 3 4\r\n7 7 3\r\n4 6 2 6 4 5 2\r\n9 9 6\r\n4 6 7 2 5 5 7 4 8\r\n6 5 4\r\n2 3 2 5 5 5\r\n8 3 4\r\n2 3 2 3 2 1 1 3\r\n10 6 9\r\n6 2 4 1 4 5 5 2 1 1\r\n8 7 2\r\n4 4 5 6 2 5 3 4\r\n1 9 1\r\n3\r\n",
                "3\r\n3\r\n4\r\n2\r\n4\r\n2\r\n2\r\n4\r\n1\r\n1\r\n"
            ],
            [
                "5\r\n17 10 1\r\n8 5 10 7 4 7 2 9 8 10 7 2 6 5 1 1 5\r\n22 13 5\r\n1 9 12 4 6 1 8 10 1 11 1 2 1 6 8 12 11 8 10 6 2 12\r\n13 25 7\r\n22 7 19 12 7 17 7 6 22 19 5 5 23\r\n1 6 1\r\n6\r\n1 15 1\r\n7\r\n",
                "1\r\n3\r\n5\r\n1\r\n1\r\n"
            ],
            [
                "1\r\n100 90 100\r\n8 39 60 46 68 2 42 45 7 54 89 78 16 59 21 29 5 30 20 12 64 42 34 33 13 17 55 30 54 31 23 27 38 36 2 49 45 43 47 55 4 6 55 38 60 16 34 86 67 76 55 86 39 62 12 58 74 51 10 31 38 85 50 61 48 35 69 24 64 53 4 19 15 35 28 22 88 3 25 60 9 40 67 47 26 57 58 61 65 21 76 4 15 35 37 49 62 45 81 32\r\n",
                "67\r\n"
            ],
            [
                "1\r\n100 100 100\r\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\r\n",
                "100\r\n"
            ],
            [
                "1\r\n100 50 100\r\n22 28 34 29 43 8 12 12 4 29 36 38 22 5 19 38 4 41 20 33 39 11 2 40 42 8 33 23 20 47 45 30 47 33 27 23 50 26 30 43 8 3 4 38 46 32 20 19 10 3 18 29 21 19 37 30 12 38 27 44 24 39 25 18 50 44 37 22 39 41 18 26 37 40 40 16 38 9 12 36 27 31 45 47 31 31 29 48 25 7 29 24 10 2 8 3 36 48 8 9\r\n",
                "42\r\n"
            ],
            [
                "1\r\n100 1 100\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n100 10 100\r\n9 2 2 3 5 2 2 3 4 9 5 3 6 2 1 4 4 8 6 2 3 10 4 1 5 2 8 8 3 9 2 7 2 3 4 2 2 8 9 7 10 3 7 7 4 4 8 8 9 7 1 8 10 3 6 8 1 9 4 6 5 6 9 2 9 6 7 10 5 8 7 10 6 1 9 2 10 10 10 9 6 5 6 9 2 8 1 2 2 5 6 6 3 3 7 10 10 1 6 3\r\n",
                "10\r\n"
            ],
            [
                "1\r\n100 2 100\r\n2 1 2 2 1 2 2 1 1 2 2 2 2 2 1 1 1 1 2 1 1 1 2 2 2 1 1 1 2 1 1 1 1 2 1 1 1 1 2 2 2 2 1 2 2 1 2 1 1 1 1 2 2 2 1 1 2 1 2 2 2 2 1 1 1 2 1 1 1 1 1 2 1 2 1 2 1 2 1 1 2 1 1 2 1 1 1 1 1 1 1 2 1 2 1 2 2 2 1 2\r\n",
                "2\r\n"
            ],
            [
                "1\r\n100 16 100\r\n1 11 2 2 13 8 3 15 8 11 13 1 16 16 3 5 12 10 11 16 1 14 16 8 14 3 15 8 2 8 10 1 16 14 8 4 2 10 3 8 3 5 8 10 4 12 11 8 8 15 16 5 7 6 3 9 15 7 1 14 14 2 13 4 10 6 12 13 9 8 9 2 9 3 2 12 9 3 8 11 14 9 3 3 15 10 12 10 10 16 2 12 13 7 6 7 13 1 14 15\r\n",
                "16\r\n"
            ],
            [
                "1\r\n100 100 50\r\n40 23 65 71 63 65 82 49 42 62 80 68 30 97 95 11 19 16 50 33 99 40 100 88 7 52 83 80 68 30 32 40 67 16 45 89 54 88 9 42 40 65 96 97 9 100 53 84 40 40 66 13 47 30 71 14 83 18 35 70 73 52 17 91 87 59 81 5 84 94 1 9 23 90 32 91 69 77 38 84 38 74 6 26 100 47 39 23 84 90 67 86 67 80 31 51 71 97 69 68\r\n",
                "34\r\n"
            ],
            [
                "1\r\n100 100 33\r\n78 92 82 75 58 98 94 39 38 88 89 78 2 95 53 47 74 95 14 92 49 44 8 67 31 77 90 20 16 92 19 32 26 75 81 4 79 46 21 44 5 19 64 72 13 9 74 58 84 62 70 86 77 4 39 97 1 67 98 99 89 34 29 13 24 2 69 68 30 66 77 16 26 49 1 25 89 26 28 25 96 55 51 44 10 7 36 75 12 81 31 46 52 55 48 78 82 95 39 44\r\n",
                "28\r\n"
            ],
            [
                "1\r\n100 1 1\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n100 20 1\r\n10 17 9 8 11 8 8 3 7 20 11 10 7 7 2 13 10 7 7 10 7 8 4 17 20 9 5 18 12 8 3 5 19 1 18 14 9 11 12 11 11 12 12 9 13 8 20 3 8 1 15 20 6 18 8 1 13 11 4 17 12 15 4 4 11 19 18 5 2 12 15 20 5 8 11 16 14 13 17 14 14 5 6 8 8 13 6 3 18 14 8 14 11 11 9 4 18 1 16 6\r\n",
                "1\r\n"
            ],
            [
                "1\r\n100 20 2\r\n18 1 3 1 13 1 3 15 3 2 7 14 1 8 1 10 1 1 9 18 11 6 9 12 17 5 6 7 13 14 9 4 6 14 7 14 19 6 13 10 7 2 17 3 10 11 11 7 2 4 9 12 11 6 20 20 4 16 7 10 8 4 19 18 2 4 6 5 20 2 12 6 20 20 18 7 11 20 10 2 8 5 16 4 19 17 18 9 7 9 13 10 3 12 18 2 6 12 18 10\r\n",
                "1\r\n"
            ],
            [
                "1\r\n100 100 1\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "1\r\n"
            ],
            [
                "1\r\n100 100 2\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "2\r\n"
            ],
            [
                "1\r\n100 100 10\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "10\r\n"
            ],
            [
                "1\r\n100 100 99\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "99\r\n"
            ],
            [
                "1\r\n100 100 100\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "100\r\n"
            ],
            [
                "1\r\n100 100 1\r\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n100 100 2\r\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\r\n",
                "2\r\n"
            ],
            [
                "1\r\n100 100 3\r\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\r\n",
                "3\r\n"
            ],
            [
                "1\r\n100 100 99\r\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\r\n",
                "99\r\n"
            ]
        ]
    }
]