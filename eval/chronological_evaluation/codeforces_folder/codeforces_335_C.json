[
    {
        "name": "More Reclamation",
        "description": "In a far away land, there are two cities near a river. One day, the cities\ndecide that they have too little space and would like to reclaim some of the\nriver area into land. The river area can be represented by a grid with r rows\nand exactly two columns \u2014 each cell represents a rectangular area. The rows\nare numbered 1 through r from top to bottom, while the columns are numbered 1\nand 2. Initially, all of the cells are occupied by the river. The plan is to\nturn some of those cells into land one by one, with the cities alternately\nchoosing a cell to reclaim, and continuing until no more cells can be\nreclaimed. However, the river is also used as a major trade route. The cities\nneed to make sure that ships will still be able to sail from one end of the\nriver to the other. More formally, if a cell (r, c) has been reclaimed, it is\nnot allowed to reclaim any of the cells (r - 1, 3 - c), (r, 3 - c), or (r + 1,\n3 - c). The cities are not on friendly terms, and each city wants to be the\nlast city to reclaim a cell (they don't care about how many cells they\nreclaim, just who reclaims a cell last). The cities have already reclaimed n\ncells. Your job is to determine which city will be the last to reclaim a cell,\nassuming both choose cells optimally from current moment. Input The first line\nconsists of two integers r and n (1 \u2264 r \u2264 100, 0 \u2264 n \u2264 r). Then n lines\nfollow, describing the cells that were already reclaimed. Each line consists\nof two integers: ri and ci (1 \u2264 ri \u2264 r, 1 \u2264 ci \u2264 2), which represent the cell\nlocated at row ri and column ci. All of the lines describing the cells will be\ndistinct, and the reclaimed cells will not violate the constraints above.\nOutput Output \"WIN\" if the city whose turn it is to choose a cell can\nguarantee that they will be the last to choose a cell. Otherwise print \"LOSE\".\nExamples Input 3 1 1 1 Output WIN Input 12 2 4 1 8 1 Output WIN Input 1 1 1 2\nOutput LOSE Note In the first example, there are 3 possible cells for the\nfirst city to reclaim: (2, 1), (3, 1), or (3, 2). The first two possibilities\nboth lose, as they leave exactly one cell for the other city. However,\nreclaiming the cell at (3, 2) leaves no more cells that can be reclaimed, and\ntherefore the first city wins. In the third example, there are no cells that\ncan be reclaimed.\n\n",
        "cf_contest_id": 335,
        "cf_index": "C",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "games"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 1\r\n1 1\r\n",
                "WIN\r\n"
            ],
            [
                "12 2\r\n4 1\r\n8 1\r\n",
                "WIN\r\n"
            ],
            [
                "1 1\r\n1 2\r\n",
                "LOSE\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 0\r\n",
                "LOSE\r\n"
            ],
            [
                "100 44\r\n41 1\r\n13 1\r\n52 1\r\n83 1\r\n64 2\r\n86 2\r\n12 1\r\n77 1\r\n100 2\r\n97 2\r\n58 1\r\n33 2\r\n8 1\r\n72 2\r\n2 1\r\n88 1\r\n50 2\r\n4 1\r\n18 1\r\n36 2\r\n46 2\r\n57 1\r\n29 2\r\n22 1\r\n75 2\r\n44 2\r\n80 2\r\n84 1\r\n62 1\r\n42 1\r\n94 1\r\n96 2\r\n31 2\r\n45 2\r\n10 2\r\n17 1\r\n5 1\r\n53 1\r\n98 2\r\n21 1\r\n82 1\r\n15 1\r\n68 2\r\n91 1\r\n",
                "WIN\r\n"
            ],
            [
                "18 4\r\n6 2\r\n10 2\r\n13 1\r\n12 1\r\n",
                "WIN\r\n"
            ],
            [
                "24 8\r\n3 1\r\n15 1\r\n24 2\r\n7 1\r\n13 2\r\n18 2\r\n5 1\r\n1 2\r\n",
                "LOSE\r\n"
            ],
            [
                "5 2\r\n3 2\r\n4 2\r\n",
                "WIN\r\n"
            ],
            [
                "10 2\r\n5 2\r\n7 1\r\n",
                "WIN\r\n"
            ],
            [
                "20 3\r\n18 1\r\n2 1\r\n15 2\r\n",
                "WIN\r\n"
            ],
            [
                "30 4\r\n11 2\r\n8 2\r\n21 1\r\n23 1\r\n",
                "WIN\r\n"
            ],
            [
                "40 6\r\n23 1\r\n19 1\r\n14 2\r\n28 1\r\n15 2\r\n17 1\r\n",
                "WIN\r\n"
            ],
            [
                "50 3\r\n28 1\r\n25 2\r\n23 2\r\n",
                "LOSE\r\n"
            ],
            [
                "60 3\r\n35 1\r\n29 1\r\n26 2\r\n",
                "LOSE\r\n"
            ],
            [
                "70 3\r\n36 1\r\n47 1\r\n25 2\r\n",
                "WIN\r\n"
            ],
            [
                "80 11\r\n58 1\r\n30 1\r\n20 2\r\n66 1\r\n78 2\r\n56 2\r\n28 1\r\n38 1\r\n62 1\r\n4 1\r\n41 2\r\n",
                "LOSE\r\n"
            ],
            [
                "90 10\r\n20 2\r\n17 1\r\n61 2\r\n18 1\r\n38 2\r\n28 1\r\n33 1\r\n26 2\r\n74 2\r\n72 1\r\n",
                "WIN\r\n"
            ],
            [
                "91 18\r\n27 1\r\n70 1\r\n43 2\r\n38 2\r\n72 1\r\n34 1\r\n15 1\r\n14 1\r\n25 1\r\n63 2\r\n52 1\r\n16 1\r\n49 1\r\n77 2\r\n79 1\r\n32 2\r\n73 1\r\n57 2\r\n",
                "WIN\r\n"
            ],
            [
                "92 8\r\n25 2\r\n48 1\r\n68 1\r\n42 1\r\n47 1\r\n46 1\r\n54 2\r\n39 2\r\n",
                "WIN\r\n"
            ],
            [
                "93 5\r\n40 2\r\n45 2\r\n43 2\r\n37 2\r\n56 1\r\n",
                "WIN\r\n"
            ],
            [
                "94 4\r\n62 1\r\n58 1\r\n34 1\r\n45 2\r\n",
                "LOSE\r\n"
            ],
            [
                "95 19\r\n34 2\r\n21 2\r\n40 1\r\n76 2\r\n72 2\r\n50 2\r\n65 2\r\n30 2\r\n58 1\r\n38 1\r\n29 2\r\n56 2\r\n53 2\r\n46 2\r\n54 2\r\n69 1\r\n20 2\r\n47 2\r\n39 1\r\n",
                "LOSE\r\n"
            ],
            [
                "96 16\r\n67 2\r\n33 1\r\n37 2\r\n43 2\r\n19 1\r\n53 2\r\n23 2\r\n62 1\r\n49 2\r\n85 1\r\n4 2\r\n94 2\r\n50 2\r\n91 2\r\n55 1\r\n59 1\r\n",
                "LOSE\r\n"
            ],
            [
                "97 15\r\n63 2\r\n35 2\r\n74 2\r\n20 2\r\n60 1\r\n31 2\r\n68 1\r\n21 2\r\n42 1\r\n29 1\r\n44 2\r\n79 1\r\n73 2\r\n53 1\r\n77 1\r\n",
                "WIN\r\n"
            ],
            [
                "98 12\r\n42 2\r\n57 1\r\n30 2\r\n17 1\r\n24 2\r\n83 1\r\n28 1\r\n44 2\r\n22 2\r\n69 2\r\n33 2\r\n75 1\r\n",
                "WIN\r\n"
            ],
            [
                "99 14\r\n17 2\r\n82 2\r\n85 2\r\n52 1\r\n46 1\r\n36 1\r\n58 2\r\n19 2\r\n15 2\r\n71 1\r\n61 2\r\n16 2\r\n57 2\r\n79 2\r\n",
                "WIN\r\n"
            ],
            [
                "2 0\r\n",
                "LOSE\r\n"
            ],
            [
                "9 0\r\n",
                "WIN\r\n"
            ],
            [
                "44 0\r\n",
                "LOSE\r\n"
            ],
            [
                "69 0\r\n",
                "WIN\r\n"
            ],
            [
                "100 0\r\n",
                "LOSE\r\n"
            ],
            [
                "1 0\r\n",
                "WIN\r\n"
            ],
            [
                "10 4\r\n8 2\r\n2 2\r\n5 2\r\n7 2\r\n",
                "WIN\r\n"
            ],
            [
                "45 4\r\n5 1\r\n37 1\r\n38 1\r\n25 1\r\n",
                "WIN\r\n"
            ],
            [
                "88 35\r\n40 2\r\n42 1\r\n24 1\r\n75 1\r\n4 2\r\n63 2\r\n26 2\r\n81 1\r\n61 1\r\n19 2\r\n53 1\r\n71 1\r\n84 2\r\n5 2\r\n3 2\r\n8 1\r\n58 2\r\n37 1\r\n1 1\r\n56 1\r\n13 1\r\n88 1\r\n36 1\r\n17 1\r\n70 1\r\n32 1\r\n68 2\r\n27 2\r\n33 1\r\n46 2\r\n23 1\r\n47 2\r\n78 1\r\n29 2\r\n9 1\r\n",
                "WIN\r\n"
            ],
            [
                "100 1\r\n1 1\r\n",
                "WIN\r\n"
            ],
            [
                "100 1\r\n100 2\r\n",
                "WIN\r\n"
            ],
            [
                "100 2\r\n1 2\r\n100 2\r\n",
                "LOSE\r\n"
            ],
            [
                "100 2\r\n1 1\r\n100 2\r\n",
                "WIN\r\n"
            ]
        ]
    }
]