[
    {
        "name": "Non-zero",
        "description": "Guy-Manuel and Thomas have an array \n    a\n of \n    n\n integers [\n    a_1, a_2,\n    \n    \u2026, a_n\n]. In one step they can add \n    1\n to any element of the\narray. Formally, in one step they can choose any integer index \n    i\n (\n    1\n    \n    \u2264 i \n    \u2264 n\n) and do \n    a_i := a_i + 1\n. If either the sum or the\nproduct of all elements in the array is equal to zero, Guy-Manuel and Thomas\ndo not mind to do this operation one more time. What is the minimum number of\nsteps they need to do to make both the sum and the product of all elements in\nthe array different from zero? Formally, find the minimum number of steps to\nmake \n    a_1 + a_2 +\n \n    \u2026\n \n    + a_n \n     0\n and \n    a_1 \n    \u00b7\n    a_2 \n    \u00b7\n \n    \u2026\n \n    \u00b7 a_n \n     0\n. Input Each test\ncontains multiple test cases. The first line contains the number of test cases\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^3\n). The description of the test cases\nfollows. The first line of each test case contains an integer \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 100\n) \u2014 the size of the array. The second line of each test\ncase contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    -100 \n    \u2264 a_i\n    \n    \u2264 100\n) \u2014 elements of the array . Output For each test case, output the\nminimum number of steps required to make both sum and product of all elements\nin the array different from zero. Example Input 4 3 2 -1 -1 4 -1 0 0 1 2 -1 2\n3 0 -2 1 Output 1 2 0 2 Note In the first test case, the sum is \n    0\n. If we\nadd \n    1\n to the first element, the array will be \n    [3,-1,-1]\n, the sum\nwill be equal to \n    1\n and the product will be equal to \n    3\n. In the\nsecond test case, both product and sum are \n    0\n. If we add \n    1\n to the\nsecond and the third element, the array will be \n    [-1,1,1,1]\n, the sum will\nbe equal to \n    2\n and the product will be equal to \n    -1\n. It can be shown\nthat fewer steps can't be enough. In the third test case, both sum and product\nare non-zero, we don't need to do anything. In the fourth test case, after\nadding \n    1\n twice to the first element the array will be \n    [2,-2,1]\n,\nthe sum will be \n    1\n and the product will be \n    -4\n.\n\n",
        "cf_contest_id": 1300,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3\r\n2 -1 -1\r\n4\r\n-1 0 0 1\r\n2\r\n-1 2\r\n3\r\n0 -2 1\r\n",
                "1\r\n2\r\n0\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n0\r\n",
                "1\r\n"
            ],
            [
                "1\r\n100\r\n64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64\r\n",
                "0\r\n"
            ],
            [
                "1\r\n100\r\n64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64 64 -64\r\n",
                "1\r\n"
            ],
            [
                "1\r\n84\r\n-95 -42 85 39 3 30 -80 26 -28 46 -55 -27 13 99 3 98 18 17 57 -35 8 -97 -8 13 -5 65 6 38 42 -96 55 -67 98 -39 94 25 18 -22 -57 -99 22 49 -34 -38 -8 -84 -10 16 -35 16 91 9 98 -20 31 34 86 -2 23 99 31 28 -1 -19 42 49 14 36 -33 6 97 18 -27 22 -22 46 -58 -88 -36 -98 -59 37 3 2\r\n",
                "0\r\n"
            ],
            [
                "1\r\n64\r\n2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2 2 -2\r\n",
                "1\r\n"
            ],
            [
                "1\r\n50\r\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 -98\r\n",
                "1\r\n"
            ]
        ]
    }
]