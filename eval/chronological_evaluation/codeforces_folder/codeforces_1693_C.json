[
    {
        "name": "Keshi in Search of AmShZ",
        "description": "AmShZ has traveled to Italy from Iran for the Thom Yorke concert. There are\n\n    n\n cities in Italy indexed from \n    1\n to \n    n\n and \n    m\n directed\nroads indexed from \n    1\n to \n    m\n. Initially, Keshi is located in the city\n\n    1\n and wants to go to AmShZ's house in the city \n    n\n. Since Keshi\ndoesn't know the map of Italy, AmShZ helps him to see each other as soon as\npossible. In the beginning of each day, AmShZ can send one of the following\ntwo messages to Keshi: AmShZ sends the index of one road to Keshi as a blocked\nroad. Then Keshi will understand that he should never use that road and he\nwill remain in his current city for the day. AmShZ tells Keshi to move. Then,\nKeshi will randomly choose one of the cities reachable from his current city\nand move there. (city \n    B\n is reachable from city \n    A\n if there's an\nout-going road from city \n    A\n to city \n    B\n which hasn't become blocked\nyet). If there are no such cities, Keshi will remain in his current city.Note\nthat AmShZ always knows Keshi's current location. AmShZ and Keshi want to find\nthe smallest possible integer \n    d\n for which they can make sure that they\nwill see each other after at most \n    d\n days. Help them find \n    d\n. Input\nThe first line of the input contains two integers \n    n\n and \n    m\n \n    (2\n    \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5, 1 \n    \u2264 m \n    \u2264 2 \n    \u00b7 10^5)\n \u2014 the number\nof cities and roads correspondingly. The \n    i\n-th line of the following\n\n    m\n lines contains two integers \n    v_i\n and \n    u_i\n \n    (1 \n    \u2264 v_i ,\n    u_i \n    \u2264 n,v_i \n    \u2260 u_i)\n, denoting a directed road going from city\n\n    v_i\n to city \n    u_i\n. It is guaranteed that there is at least one route\nfrom city \n    1\n to city \n    n\n. Note that there may be more than one road\nbetween a pair of cities in each direction. Output Output the smallest\npossible integer \n    d\n to make sure that AmShZ and Keshi will see each other\nafter at most \n    d\n days. Examples Input 2 1 1 2 Output 1 Input 4 4 1 2 1 4\n2 4 1 4 Output 2 Input 5 7 1 2 2 3 3 5 1 4 4 3 4 5 3 1 Output 4 Note In the\nfirst sample, it's enough for AmShZ to send the second type of message. In the\nsecond sample, on the first day, AmShZ blocks the first road. So the only\nreachable city from city \n    1\n will be city \n    4\n. Hence on the second\nday, AmShZ can tell Keshi to move and Keshi will arrive at AmShZ's house. It's\nalso possible for AmShZ to tell Keshi to move for two days.\n\n",
        "cf_contest_id": 1693,
        "cf_index": "C",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "4 4\r\n1 2\r\n1 4\r\n2 4\r\n1 4\r\n",
                "2\r\n"
            ],
            [
                "5 7\r\n1 2\r\n2 3\r\n3 5\r\n1 4\r\n4 3\r\n4 5\r\n3 1\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": []
    }
]