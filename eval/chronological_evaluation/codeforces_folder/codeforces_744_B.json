[
    {
        "name": "Hongcow's Game",
        "description": "This is an interactive problem. In the interaction section below you will see\nthe information about flushing the output. In this problem, you will be\nplaying a game with Hongcow. How lucky of you! Hongcow has a hidden n by n\nmatrix M. Let Mi, j denote the entry i-th row and j-th column of the matrix.\nThe rows and columns are labeled from 1 to n. The matrix entries are between 0\nand 10^9. In addition, Mi, i = 0 for all valid i. Your task is to find the\nminimum value along each row, excluding diagonal elements. Formally, for each\ni, you must find . To do this, you can ask Hongcow some questions. A question\nconsists of giving Hongcow a subset of distinct indices w1, w2, ..., wk,\nwith 1 \u2264 k \u2264 n. Hongcow will respond with n integers. The i-th integer will\ncontain the minimum value of min1 \u2264 j \u2264 kMi, wj. You may only ask Hongcow at\nmost 20 questions \u2014 he thinks you only need that many questions answered. When\nyou are ready to answer, print out a single integer - 1 on its own line, then\nn integers on the next line. The i-th integer should be the minimum value in\nthe i-th row of the matrix, excluding the i-th element. Do not forget to flush\nthe final answer as well. Printing the answer does not count as asking a\nquestion. You will get Wrong Answer verdict if Your question or answers are\nnot in the format described in this statement. You ask strictly more than 20\nquestions. Your question contains duplicate indices. The value of k in your\nquestion does not lie in the range from 1 to n, inclusive. Your final answer\nis not correct. You will get Idleness Limit Exceeded if you don't print\nanything or if you forget to flush the output, including for the final answer\n(more info about flushing output below). Input The first line of input will\ncontain a single integer n (2 \u2264 n \u2264 1, 000). Output To print the final answer,\nprint out the string -1 on its own line. Then, the next line should contain n\nintegers. The i-th integer should be the minimum value of the i-th row of the\nmatrix, excluding elements on the diagonal. Do not forget to flush your\nanswer! Interaction To ask a question, print out a single integer k on its own\nline, denoting the size of your subset. Then, the next line should contain k\nintegers w1, w2, ... wk. Note, you must flush your output to get a response.\nHongcow will respond by printing out a line with n integers. The i-th integer\nin this line represents the minimum value of Mi, wj where j is between 1 and\nk. You may only ask a question at most 20 times, otherwise, you will get Wrong\nAnswer. To flush you can use (just after printing an integer and end-of-line):\nfflush(stdout) in C++; System.out.flush() in Java; stdout.flush() in Python;\nflush(output) in Pascal; See the documentation for other languages. Hacking To\nhack someone, use the following format n M_1,1 M_1,2 ... M_1,n M_2,1\nM_2,2 ... M_2,n ... M_n,1 M_n,2 ... M_n,n Of course, contestant\nprograms will not be able to see this input. Examples Input 3 0 0 0 2 7 0 0 0\n4 3 0 8 0 5 4 Output 3 1 2 3 1 3 2 1 2 1 2 1 1 -1 2 5 4 Input 2 0 0 0 0 Output\n1 2 1 1 -1 0 0 Note In the first sample, Hongcow has the hidden matrix [ [0,\n3, 2], [5, 0, 7], [4, 8 ,0], ] Here is a more readable version demonstrating\nthe interaction. The column on the left represents Hongcow, while the column\non the right represents the contestant. 3 3 1 2 3 0 0 0 1 3 2 7 0 2 1 2 0 0 4\n1 2 3 0 8 1 1 0 5 4 -1 2 5 4 For the second sample, it is possible for off-\ndiagonal elements of the matrix to be zero.\n\n",
        "cf_contest_id": 744,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "divide and conquer",
            "interactive"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n0 3 2\r\n5 0 7\r\n4 8 0\r\n",
                ""
            ],
            [
                "2\r\n0 0\r\n0 0\r\n",
                ""
            ]
        ],
        "private_cases": [
            [
                "2\r\n0 238487454\r\n54154238 0\r\n",
                ""
            ],
            [
                "3\r\n0 0 0\r\n0 0 0\r\n0 0 0\r\n",
                ""
            ]
        ]
    }
]