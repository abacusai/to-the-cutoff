[
    {
        "name": "Removing Smallest Multiples",
        "description": "You are given a set \n    S\n, which contains the first \n    n\n positive\nintegers: \n    1, 2, \n    \u2026, n\n. You can perform the following operation on\n\n    S\n any number of times (possibly zero): Choose a positive integer \n    k\n\nwhere \n    1 \n    \u2264 k \n    \u2264 n\n, such that there exists a multiple of \n    k\n in\n\n    S\n. Then, delete the smallest multiple of \n    k\n from \n    S\n. This\noperation requires a cost of \n    k\n. You are given a set \n    T\n, which is a\nsubset of \n    S\n. Find the minimum possible total cost of operations such\nthat \n    S\n would be transformed into \n    T\n. We can show that such a\ntransformation is always possible. Input The first line of the input contains\na single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n     000\n) \u2014 the number of\ntest cases. The description of the test cases follows. The first line contains\na single positive integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^6\n). The second\nline of each test case contains a binary string of length \n    n\n, describing\nthe set \n    T\n. The \n    i\n-th character of the string is '1' if and only if\n\n    i\n is an element of \n    T\n, and '0' otherwise. It is guaranteed that the\nsum of \n    n\n over all test cases does not exceed \n    10^6\n. Output For each\ntest case, output one non-negative integer \u2014 the minimum possible total cost\nof operations such that \n    S\n would be transformed into \n    T\n. Example\nInput 6 6 111111 7 1101001 4 0000 4 0010 8 10010101 15 110011100101100 Output\n0 11 4 4 17 60 Note In the first test case, we shall not perform any\noperations as \n    S\n is already equal to \n    T\n, which is the set \n    1,\n    2, 3, 4, 5, 6\n. In the second test case, initially, \n    S = \n    \n    1, 2,\n    3, 4, 5, 6, 7\n, and \n    T = \n    \n    1, 2, 4, 7\n. We shall perform\nthe following operations: Choose \n    k=3\n, then delete \n    3\n from \n    S\n.\nChoose \n    k=3\n, then delete \n    6\n from \n    S\n. Choose \n    k=5\n, then\ndelete \n    5\n from \n    S\n. The total cost is \n    3+3+5 = 11\n. It can be\nshown that this is the smallest cost possible. In the third test case,\ninitially, \n    S = \n    \n    1, 2, 3, 4\n and \n    T =\n (empty\nset). We shall perform \n    4\n operations of \n    k=1\n to delete \n    1\n,\n\n    2\n, \n    3\n, and \n    4\n. In the fourth test case, initially, \n    S =\n    \n    \n    1, 2, 3, 4\n and \n    T = \n    \n    3\n. We shall perform two\noperations with \n    k=1\n to delete \n    1\n and \n    2\n, then perform one\noperation with \n    k=2\n to delete \n    4\n.\n\n",
        "cf_contest_id": 1734,
        "cf_index": "C",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n6\r\n111111\r\n7\r\n1101001\r\n4\r\n0000\r\n4\r\n0010\r\n8\r\n10010101\r\n15\r\n110011100101100\r\n",
                "0\r\n11\r\n4\r\n4\r\n17\r\n60\r\n"
            ]
        ],
        "private_cases": []
    }
]