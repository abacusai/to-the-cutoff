[
    {
        "name": "Dividing Orange",
        "description": "One day Ms Swan bought an orange in a shop. The orange consisted of n\u00b7k\nsegments, numbered with integers from 1 to n\u00b7k. There were k children waiting\nfor Ms Swan at home. The children have recently learned about the orange and\nthey decided to divide it between them. For that each child took a piece of\npaper and wrote the number of the segment that he would like to get: the i-th\n(1 \u2264 i \u2264 k) child wrote the number ai (1 \u2264 ai \u2264 n\u00b7k). All numbers ai\naccidentally turned out to be different. Now the children wonder, how to\ndivide the orange so as to meet these conditions: each child gets exactly n\norange segments; the i-th child gets the segment with number ai for sure; no\nsegment goes to two children simultaneously. Help the children, divide the\norange and fulfill the requirements, described above. Input The first line\ncontains two integers n, k (1 \u2264 n, k \u2264 30). The second line contains k space-\nseparated integers a1, a2, ..., ak (1 \u2264 ai \u2264 n\u00b7k), where ai is the number of\nthe orange segment that the i-th child would like to get. It is guaranteed\nthat all numbers ai are distinct. Output Print exactly n\u00b7k distinct integers.\nThe first n integers represent the indexes of the segments the first child\nwill get, the second n integers represent the indexes of the segments the\nsecond child will get, and so on. Separate the printed numbers with\nwhitespaces. You can print a child's segment indexes in any order. It is\nguaranteed that the answer always exists. If there are multiple correct\nanswers, print any of them. Examples Input 2 2 4 1 Output 2 4 1 3 Input 3 1 2\nOutput 3 2 1\n\n",
        "cf_contest_id": 244,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2\r\n4 1\r\n",
                "2 4\n3 1\n"
            ],
            [
                "3 1\r\n2\r\n",
                "1 3 2\n"
            ]
        ],
        "private_cases": [
            [
                "5 5\r\n25 24 23 22 21\r\n",
                "1 2 3 4 25\n5 6 7 8 24\n9 10 11 12 23\n13 14 15 16 22\n17 18 19 20 21\n"
            ],
            [
                "1 30\r\n8 22 13 25 10 30 12 27 6 4 7 2 20 16 26 14 15 17 23 3 24 9 5 11 29 1 19 28 21 18\r\n",
                "8\n22\n13\n25\n10\n30\n12\n27\n6\n4\n7\n2\n20\n16\n26\n14\n15\n17\n23\n3\n24\n9\n5\n11\n29\n1\n19\n28\n21\n18\n"
            ],
            [
                "30 1\r\n29\r\n",
                "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 30 29\n"
            ],
            [
                "1 1\r\n1\r\n",
                "1\n"
            ],
            [
                "2 1\r\n1\r\n",
                "2 1\n"
            ],
            [
                "1 2\r\n2 1\r\n",
                "2\n1\n"
            ],
            [
                "1 3\r\n2 3 1\r\n",
                "2\n3\n1\n"
            ],
            [
                "2 3\r\n3 2 1\r\n",
                "4 3\n5 2\n6 1\n"
            ],
            [
                "3 3\r\n6 7 8\r\n",
                "1 2 6\n3 4 7\n5 9 8\n"
            ],
            [
                "3 1\r\n3\r\n",
                "1 2 3\n"
            ],
            [
                "3 2\r\n5 4\r\n",
                "1 2 5\n3 6 4\n"
            ],
            [
                "27 3\r\n12 77 80\r\n",
                "1 2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 12\n28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 77\n54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 78 79 81 80\n"
            ],
            [
                "3 27\r\n77 9 32 56 7 65 58 24 64 19 49 62 47 44 28 79 76 71 21 4 18 23 51 53 12 6 20\r\n",
                "1 2 77\n3 5 9\n8 10 32\n11 13 56\n14 15 7\n16 17 65\n22 25 58\n26 27 24\n29 30 64\n31 33 19\n34 35 49\n36 37 62\n38 39 47\n40 41 44\n42 43 28\n45 46 79\n48 50 76\n52 54 71\n55 57 21\n59 60 4\n61 63 18\n66 67 23\n68 69 51\n70 72 53\n73 74 12\n75 78 6\n80 81 20\n"
            ],
            [
                "7 1\r\n5\r\n",
                "1 2 3 4 6 7 5\n"
            ],
            [
                "6 1\r\n5\r\n",
                "1 2 3 4 6 5\n"
            ]
        ]
    }
]