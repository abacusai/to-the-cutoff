[
    {
        "name": "Strange Beauty",
        "description": "Polycarp found on the street an array \n    a\n of \n    n\n elements. Polycarp\ninvented his criterion for the beauty of an array. He calls an array \n    a\n\nbeautiful if at least one of the following conditions must be met for each\ndifferent pair of indices \n    i \n     j\n: \n    a_i\n is divisible by\n\n    a_j\n; or \n    a_j\n is divisible by \n    a_i\n. For example, if: \n    n=5\n\nand \n    a=[7, 9, 3, 14, 63]\n, then the \n    a\n array is not beautiful (for\n\n    i=4\n and \n    j=2\n, none of the conditions above is met); \n    n=3\n and\n\n    a=[2, 14, 42]\n, then the \n    a\n array is beautiful; \n    n=4\n and\n\n    a=[45, 9, 3, 18]\n, then the \n    a\n array is not beautiful (for \n    i=1\n\nand \n    j=4\n none of the conditions above is met); Ugly arrays upset\nPolycarp, so he wants to remove some elements from the array \n    a\n so that\nit becomes beautiful. Help Polycarp determine the smallest number of elements\nto remove to make the array \n    a\n beautiful. Input The first line contains\none integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n) \u2014 the number of test cases.\nThen \n    t\n test cases follow. The first line of each test case contains one\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of the\narray \n    a\n. The second line of each test case contains \n    n\n numbers\n\n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 2 \n    \u00b7 10^5\n) \u2014\nelements of the array \n    a\n. Output For each test case output one integer \u2014\nthe minimum number of elements that must be removed to make the array \n    a\n\nbeautiful. Example Input 4 5 7 9 3 14 63 3 2 14 42 4 45 9 3 18 3 2 2 8 Output\n2 0 1 0 Note In the first test case, removing \n    7\n and \n    14\n will make\narray \n    a\n beautiful. In the second test case, the array \n    a\n is already\nbeautiful. In the third test case, removing one of the elements \n    45\n or\n\n    18\n will make the array \n    a\n beautiful. In the fourth test case, the\narray \n    a\n is beautiful.\n\n",
        "cf_contest_id": 1475,
        "cf_index": "G",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "math",
            "number theory",
            "sortings"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5\r\n7 9 3 14 63\r\n3\r\n2 14 42\r\n4\r\n45 9 3 18\r\n3\r\n2 2 8\r\n",
                "2\r\n0\r\n1\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n5\r\n5 4 2 4 4\r\n4\r\n3 1 2 1\r\n4\r\n1 3 4 3\r\n5\r\n5 2 3 1 5\r\n5\r\n2 1 5 5 4\r\n5\r\n4 2 4 4 5\r\n5\r\n1 3 1 2 5\r\n5\r\n5 2 3 5 1\r\n5\r\n4 2 2 1 3\r\n5\r\n2 3 1 1 1\r\n",
                "1\r\n1\r\n1\r\n2\r\n2\r\n1\r\n2\r\n2\r\n1\r\n1\r\n"
            ],
            [
                "10\r\n5\r\n1 2 1 4 5\r\n5\r\n2 4 1 4 3\r\n5\r\n4 3 3 1 4\r\n5\r\n5 5 3 2 2\r\n5\r\n1 5 5 1 3\r\n5\r\n4 3 2 5 4\r\n4\r\n4 1 4 1\r\n3\r\n3 1 3\r\n5\r\n4 3 4 5 2\r\n5\r\n1 3 4 5 4\r\n",
                "1\r\n1\r\n2\r\n3\r\n1\r\n2\r\n0\r\n0\r\n2\r\n2\r\n"
            ],
            [
                "10\r\n5\r\n4 2 5 2 1\r\n5\r\n2 3 2 5 2\r\n5\r\n4 4 3 3 4\r\n4\r\n2 1 3 1\r\n5\r\n5 3 3 4 5\r\n4\r\n1 4 1 2\r\n5\r\n2 1 1 3 5\r\n5\r\n4 5 2 4 5\r\n5\r\n3 5 2 4 3\r\n5\r\n5 4 5 2 3\r\n",
                "1\r\n2\r\n2\r\n1\r\n3\r\n0\r\n2\r\n2\r\n3\r\n3\r\n"
            ],
            [
                "10\r\n5\r\n4 3 1 5 1\r\n5\r\n1 4 1 1 3\r\n5\r\n4 1 2 1 2\r\n5\r\n5 5 5 1 4\r\n5\r\n5 2 4 5 4\r\n5\r\n3 1 2 3 4\r\n5\r\n2 3 5 4 1\r\n5\r\n5 4 5 5 4\r\n5\r\n1 2 2 3 2\r\n4\r\n2 1 3 1\r\n",
                "2\r\n1\r\n0\r\n1\r\n2\r\n2\r\n2\r\n2\r\n1\r\n1\r\n"
            ],
            [
                "10\r\n5\r\n5 4 5 3 3\r\n5\r\n2 3 4 1 3\r\n5\r\n4 3 1 5 4\r\n5\r\n1 3 5 2 3\r\n5\r\n1 5 2 5 3\r\n5\r\n3 2 3 5 3\r\n4\r\n2 3 4 2\r\n4\r\n3 2 2 2\r\n5\r\n3 5 1 4 4\r\n5\r\n2 4 5 5 2\r\n",
                "3\r\n2\r\n2\r\n2\r\n2\r\n2\r\n1\r\n1\r\n2\r\n2\r\n"
            ],
            [
                "1\r\n5\r\n1 1 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1\r\n2\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1\r\n100000\r\n1\r\n200000\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n2\r\n101 128\r\n2\r\n101 256\r\n",
                "1\r\n1\r\n"
            ],
            [
                "1\r\n2\r\n100000 200000\r\n",
                "0\r\n"
            ]
        ]
    }
]