[
    {
        "name": "Police Station",
        "description": "The Berland road network consists of n cities and of m bidirectional roads.\nThe cities are numbered from 1 to n, where the main capital city has number n,\nand the culture capital \u2014 number 1. The road network is set up so that it is\npossible to reach any city from any other one by the roads. Moving on each\nroad in any direction takes the same time. All residents of Berland are very\nlazy people, and so when they want to get from city v to city u, they always\nchoose one of the shortest paths (no matter which one). The Berland government\nwants to make this country's road network safer. For that, it is going to put\na police station in one city. The police station has a rather strange\nproperty: when a citizen of Berland is driving along the road with a police\nstation at one end of it, the citizen drives more carefully, so all such roads\nare considered safe. The roads, both ends of which differ from the city with\nthe police station, are dangerous. Now the government wonders where to put the\npolice station so that the average number of safe roads for all the shortest\npaths from the cultural capital to the main capital would take the maximum\nvalue. Input The first input line contains two integers n and m (2 \u2264 n \u2264 100,\n) \u2014 the number of cities and the number of roads in Berland, correspondingly.\nNext m lines contain pairs of integers vi, ui (1 \u2264 vi, ui \u2264 n, vi \u2260 ui) \u2014 the\nnumbers of cities that are connected by the i-th road. The numbers on a line\nare separated by a space. It is guaranteed that each pair of cities is\nconnected with no more than one road and that it is possible to get from any\ncity to any other one along Berland roads. Output Print the maximum possible\nvalue of the average number of safe roads among all shortest paths from the\nculture capital to the main one. The answer will be considered valid if its\nabsolute or relative inaccuracy does not exceed 10^-6. Examples Input 4 4 1 2\n2 4 1 3 3 4 Output 1.000000000000 Input 11 14 1 2 1 3 2 4 3 4 4 5 4 6 5 11 6\n11 1 8 8 9 9 7 11 7 1 10 10 4 Output 1.714285714286 Note In the first sample\nyou can put a police station in one of the capitals, then each path will have\nexactly one safe road. If we place the station not in the capital, then the\naverage number of safe roads will also make . In the second sample we can\nobtain the maximum sought value if we put the station in city 4, then 6 paths\nwill have 2 safe roads each, and one path will have 0 safe roads, so the\nanswer will equal .\n\n",
        "cf_contest_id": 208,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 4\r\n1 2\r\n2 4\r\n1 3\r\n3 4\r\n",
                "1.000000000\r\n"
            ],
            [
                "11 14\r\n1 2\r\n1 3\r\n2 4\r\n3 4\r\n4 5\r\n4 6\r\n5 11\r\n6 11\r\n1 8\r\n8 9\r\n9 7\r\n11 7\r\n1 10\r\n10 4\r\n",
                "1.714285714\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n2 1\r\n",
                "1.000000000\r\n"
            ],
            [
                "5 5\r\n3 2\r\n2 1\r\n4 3\r\n4 1\r\n5 3\r\n",
                "2.000000000\r\n"
            ],
            [
                "10 15\r\n1 4\r\n6 2\r\n10 7\r\n8 5\r\n2 10\r\n6 3\r\n2 9\r\n4 2\r\n8 1\r\n1 3\r\n7 6\r\n7 3\r\n9 1\r\n1 5\r\n5 4\r\n",
                "1.333333333\r\n"
            ],
            [
                "20 38\r\n1 13\r\n3 15\r\n5 1\r\n20 11\r\n16 5\r\n8 20\r\n14 9\r\n5 9\r\n7 18\r\n17 14\r\n1 6\r\n19 18\r\n19 3\r\n9 15\r\n11 17\r\n7 1\r\n17 2\r\n4 16\r\n12 19\r\n3 5\r\n4 3\r\n1 9\r\n16 19\r\n7 8\r\n1 4\r\n13 18\r\n20 10\r\n5 14\r\n19 14\r\n20 14\r\n12 6\r\n15 10\r\n10 18\r\n11 19\r\n18 17\r\n5 12\r\n6 2\r\n12 4\r\n",
                "1.333333333\r\n"
            ],
            [
                "25 53\r\n7 20\r\n19 4\r\n8 5\r\n6 25\r\n25 20\r\n17 16\r\n24 12\r\n25 9\r\n22 10\r\n1 15\r\n23 8\r\n25 23\r\n25 22\r\n18 3\r\n19 20\r\n1 19\r\n17 3\r\n8 11\r\n22 18\r\n6 14\r\n12 13\r\n13 11\r\n3 7\r\n16 22\r\n11 25\r\n23 19\r\n13 5\r\n9 19\r\n24 22\r\n19 21\r\n3 2\r\n10 24\r\n21 10\r\n12 3\r\n10 3\r\n3 8\r\n12 7\r\n11 19\r\n25 4\r\n2 24\r\n15 12\r\n25 2\r\n12 2\r\n10 5\r\n13 4\r\n22 13\r\n18 12\r\n8 21\r\n7 8\r\n2 5\r\n14 21\r\n6 15\r\n19 22\r\n",
                "1.714285714\r\n"
            ],
            [
                "13 22\r\n10 13\r\n9 13\r\n13 4\r\n2 13\r\n6 13\r\n5 1\r\n1 8\r\n9 1\r\n13 5\r\n1 7\r\n6 1\r\n1 12\r\n4 1\r\n13 8\r\n1 3\r\n10 1\r\n13 12\r\n1 11\r\n13 11\r\n1 2\r\n13 3\r\n13 7\r\n",
                "1.000000000\r\n"
            ],
            [
                "10 13\r\n1 2\r\n7 4\r\n1 3\r\n4 1\r\n5 8\r\n5 2\r\n6 8\r\n7 9\r\n10 9\r\n8 10\r\n6 3\r\n2 6\r\n3 5\r\n",
                "1.600000000\r\n"
            ],
            [
                "34 53\r\n9 6\r\n25 28\r\n27 24\r\n15 18\r\n34 33\r\n27 30\r\n1 4\r\n4 7\r\n11 9\r\n11 8\r\n30 26\r\n15 12\r\n26 23\r\n17 15\r\n29 26\r\n11 15\r\n7 10\r\n14 12\r\n5 9\r\n8 5\r\n2 1\r\n24 21\r\n3 5\r\n14 17\r\n23 20\r\n25 22\r\n32 29\r\n8 6\r\n3 6\r\n33 31\r\n5 2\r\n21 18\r\n16 19\r\n19 22\r\n17 21\r\n14 11\r\n23 27\r\n3 1\r\n34 32\r\n32 30\r\n26 24\r\n17 20\r\n18 20\r\n24 20\r\n2 6\r\n10 13\r\n27 29\r\n14 18\r\n28 31\r\n16 13\r\n9 12\r\n23 21\r\n12 8\r\n",
                "1.998048780\r\n"
            ]
        ]
    }
]