[
    {
        "name": "Reading Books (hard version)",
        "description": "Easy and hard versions are actually different problems, so read statements of\nboth problems completely and carefully. Summer vacation has started so Alice\nand Bob want to play and joy, but... Their mom doesn't think so. She says that\nthey have to read exactly \n    m\n books before all entertainments. Alice and\nBob will read each book together to end this exercise faster. There are\n\n    n\n books in the family library. The \n    i\n-th book is described by three\nintegers: \n    t_i\n \u2014 the amount of time Alice and Bob need to spend to read\nit, \n    a_i\n (equals \n    1\n if Alice likes the \n    i\n-th book and \n    0\n\nif not), and \n    b_i\n (equals \n    1\n if Bob likes the \n    i\n-th book and\n\n    0\n if not). So they need to choose exactly \n    m\n books from the given\n\n    n\n books in such a way that: Alice likes at least \n    k\n books from the\nchosen set and Bob likes at least \n    k\n books from the chosen set; the total\nreading time of these \n    m\n books is minimized (they are children and want\nto play and joy as soon a possible). The set they choose is the same for both\nAlice an Bob (it's shared between them) and they read all books together, so\nthe total reading time is the sum of \n    t_i\n over all books that are in the\nchosen set. Your task is to help them and find any suitable set of books or\ndetermine that it is impossible to find such a set. Input The first line of\nthe input contains three integers \n    n\n, \n    m\n and \n    k\n (\n    1 \n    \u2264 k\n    \n    \u2264 m \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n). The next \n    n\n lines contain\ndescriptions of books, one description per line: the \n    i\n-th line contains\nthree integers \n    t_i\n, \n    a_i\n and \n    b_i\n (\n    1 \n    \u2264 t_i \n    \u2264\n    10^4\n, \n    0 \n    \u2264 a_i, b_i \n    \u2264 1\n), where: \n    t_i\n \u2014 the amount of\ntime required for reading the \n    i\n-th book; \n    a_i\n equals \n    1\n if\nAlice likes the \n    i\n-th book and \n    0\n otherwise; \n    b_i\n equals\n\n    1\n if Bob likes the \n    i\n-th book and \n    0\n otherwise. Output If\nthere is no solution, print only one integer -1. If the solution exists, print\n\n    T\n in the first line \u2014 the minimum total reading time of the suitable set\nof books. In the second line print \n    m\n distinct integers from \n    1\n to\n\n    n\n in any order \u2014 indices of books which are in the set you found. If\nthere are several answers, print any of them. Examples Input 6 3 1 6 0 0 11 1\n0 9 0 1 21 1 1 10 1 0 8 0 1 Output 24 6 5 1 Input 6 3 2 6 0 0 11 1 0 9 0 1 21\n1 1 10 1 0 8 0 1 Output 39 4 6 5\n\n",
        "cf_contest_id": 1374,
        "cf_index": "E2",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "implementation",
            "sortings",
            "ternary search",
            "two pointers"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 3 1\r\n6 0 0\r\n11 1 0\r\n9 0 1\r\n21 1 1\r\n10 1 0\r\n8 0 1\r\n",
                "24\r\n1 6 5 "
            ],
            [
                "6 3 2\r\n6 0 0\r\n11 1 0\r\n9 0 1\r\n21 1 1\r\n10 1 0\r\n8 0 1\r\n",
                "39\r\n6 5 4 "
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n3 0 1\r\n",
                "-1\r\n"
            ],
            [
                "3 3 1\r\n27 0 0\r\n28 0 0\r\n11 0 0\r\n",
                "-1\r\n"
            ],
            [
                "9 2 2\r\n74 0 0\r\n78 1 0\r\n21 1 0\r\n47 1 0\r\n20 0 0\r\n22 0 1\r\n52 0 0\r\n78 0 0\r\n90 0 0\r\n",
                "-1\r\n"
            ],
            [
                "27 5 1\r\n232 0 1\r\n72 0 1\r\n235 0 1\r\n2 0 1\r\n158 0 0\r\n267 0 0\r\n242 0 1\r\n1 0 0\r\n64 0 0\r\n139 1 1\r\n250 0 1\r\n208 0 1\r\n127 0 1\r\n29 0 1\r\n53 0 1\r\n100 0 1\r\n52 0 1\r\n229 0 0\r\n1 0 1\r\n29 0 0\r\n17 0 1\r\n74 0 1\r\n211 0 1\r\n248 0 1\r\n15 0 0\r\n252 0 0\r\n159 0 1\r\n",
                "158\r\n8 25 19 4 10 "
            ],
            [
                "6 4 3\r\n19 0 0\r\n6 1 1\r\n57 1 0\r\n21 0 1\r\n53 1 1\r\n9 1 1\r\n",
                "87\r\n1 2 6 5 "
            ],
            [
                "8 5 1\r\n43 0 1\r\n5 0 1\r\n23 1 1\r\n55 0 1\r\n19 1 1\r\n73 1 1\r\n16 1 1\r\n42 1 1\r\n",
                "105\r\n2 7 5 3 8 "
            ],
            [
                "3 2 1\r\n3 0 1\r\n3 1 0\r\n3 0 0\r\n",
                "6\r\n1 2 "
            ],
            [
                "8 4 3\r\n1 1 1\r\n3 1 1\r\n12 1 1\r\n12 1 1\r\n4 0 0\r\n4 0 0\r\n5 1 0\r\n5 0 1\r\n",
                "14\r\n8 7 1 2 "
            ]
        ]
    }
]