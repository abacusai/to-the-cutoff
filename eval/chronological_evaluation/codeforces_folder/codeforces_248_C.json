[
    {
        "name": "Robo-Footballer",
        "description": "It's a beautiful April day and Wallace is playing football with his friends.\nBut his friends do not know that Wallace actually stayed home with Gromit and\nsent them his robotic self instead. Robo-Wallace has several advantages over\nthe other guys. For example, he can hit the ball directly to the specified\npoint. And yet, the notion of a giveaway is foreign to him. The combination of\nthese features makes the Robo-Wallace the perfect footballer \u2014 as soon as the\nball gets to him, he can just aim and hit the goal. He followed this tactics\nin the first half of the match, but he hit the goal rarely. The opposing team\nhas a very good goalkeeper who catches most of the balls that fly directly\ninto the goal. But Robo-Wallace is a quick thinker, he realized that he can\ncheat the goalkeeper. After all, they are playing in a football box with solid\nwalls. Robo-Wallace can kick the ball to the other side, then the goalkeeper\nwill not try to catch the ball. Then, if the ball bounces off the wall and\nflies into the goal, the goal will at last be scored. Your task is to help\nRobo-Wallace to detect a spot on the wall of the football box, to which the\nrobot should kick the ball, so that the ball bounces once and only once off\nthis wall and goes straight to the goal. In the first half of the match Robo-\nWallace got a ball in the head and was severely hit. As a result, some of the\nschemes have been damaged. Because of the damage, Robo-Wallace can only aim to\nhis right wall (Robo-Wallace is standing with his face to the opposing team's\ngoal). The football box is rectangular. Let's introduce a two-dimensional\ncoordinate system so that point (0, 0) lies in the lower left corner of the\nfield, if you look at the box above. Robo-Wallace is playing for the team,\nwhose goal is to the right. It is an improvised football field, so the gate of\nRobo-Wallace's rivals may be not in the middle of the left wall. In the given\ncoordinate system you are given: y1, y2 \u2014 the y-coordinates of the side\npillars of the goalposts of robo-Wallace's opponents; yw \u2014 the y-coordinate of\nthe wall to which Robo-Wallace is aiming; xb, yb \u2014 the coordinates of the\nball's position when it is hit; r \u2014 the radius of the ball. A goal is scored\nwhen the center of the ball crosses the OY axis in the given coordinate system\nbetween (0, y1) and (0, y2). The ball moves along a straight line. The ball's\nhit on the wall is perfectly elastic (the ball does not shrink from the hit),\nthe angle of incidence equals the angle of reflection. If the ball bounces off\nthe wall not to the goal, that is, if it hits the other wall or the goal post,\nthen the opposing team catches the ball and Robo-Wallace starts looking for\nmiscalculation and gets dysfunctional. Such an outcome, if possible, should be\navoided. We assume that the ball touches an object, if the distance from the\ncenter of the ball to the object is no greater than the ball radius r. Input\nThe first and the single line contains integers y1, y2, yw, xb, yb, r (1 \u2264 y1,\ny2, yw, xb, yb \u2264 10^6; y1 < y2 < yw; yb + r < yw; 2\u00b7r < y2 - y1). It is\nguaranteed that the ball is positioned correctly in the field, doesn't cross\nany wall, doesn't touch the wall that Robo-Wallace is aiming at. The goal\nposts can't be located in the field corners. Output If Robo-Wallace can't\nscore a goal in the described manner, print \"-1\" (without the quotes).\nOtherwise, print a single number xw \u2014 the abscissa of his point of aiming. If\nthere are multiple points of aiming, print the abscissa of any of them. When\nchecking the correctness of the answer, all comparisons are made with the\npermissible absolute error, equal to 10^-8. It is recommended to print as many\ncharacters after the decimal point as possible. Examples Input 4 10 13 10 3 1\nOutput 4.3750000000 Input 1 4 6 2 2 1 Output -1 Input 3 10 15 17 9 2 Output\n11.3333333333 Note Note that in the first and third samples other correct\nvalues of abscissa xw are also possible.\n\n",
        "cf_contest_id": 248,
        "cf_index": "C",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "geometry"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 10 13 10 3 1\r\n",
                "4.37500000000000000000\r\n"
            ],
            [
                "1 4 6 2 2 1\r\n",
                "-1\r\n"
            ],
            [
                "3 10 15 17 9 2\r\n",
                "11.33333333333333392545\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 9 30 3 3 1\r\n",
                "-1\r\n"
            ],
            [
                "4 9 13 2 3 1\r\n",
                "-1\r\n"
            ],
            [
                "4 9 13 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "1 9 10 6 6 3\r\n",
                "4.50000000000000000000\r\n"
            ],
            [
                "4 9 24 10 3 1\r\n",
                "4.73684210526315752077\r\n"
            ],
            [
                "4 9 20 10 3 1\r\n",
                "4.66666666666666696273\r\n"
            ],
            [
                "1 8 10 8 3 3\r\n",
                "3.42857142857142838110\r\n"
            ],
            [
                "2 9 10 4 6 3\r\n",
                "2.66666666666666651864\r\n"
            ],
            [
                "2 9 10 6 3 3\r\n",
                "-1\r\n"
            ],
            [
                "1 9 10 7 3 3\r\n",
                "3.00000000000000000000\r\n"
            ],
            [
                "1 9 10 9 5 3\r\n",
                "5.40000000000000035527\r\n"
            ],
            [
                "2 9 10 6 5 3\r\n",
                "3.00000000000000000000\r\n"
            ],
            [
                "1 9 10 5 5 3\r\n",
                "3.00000000000000000000\r\n"
            ],
            [
                "2 9 10 9 3 3\r\n",
                "3.00000000000000000000\r\n"
            ],
            [
                "1 9 10 9 5 3\r\n",
                "5.40000000000000035527\r\n"
            ],
            [
                "1 8 10 3 3 3\r\n",
                "-1\r\n"
            ],
            [
                "1 9 10 5 5 3\r\n",
                "3.00000000000000000000\r\n"
            ],
            [
                "2 9 10 5 3 3\r\n",
                "-1\r\n"
            ],
            [
                "2 9 10 8 5 3\r\n",
                "4.00000000000000000000\r\n"
            ],
            [
                "2 9 10 9 5 3\r\n",
                "4.50000000000000000000\r\n"
            ],
            [
                "1 9 10 4 5 3\r\n",
                "2.39999999999999991118\r\n"
            ],
            [
                "1 8 10 5 5 3\r\n",
                "-1\r\n"
            ],
            [
                "2 9 10 9 5 3\r\n",
                "4.50000000000000000000\r\n"
            ],
            [
                "15 30 100 8 8 5\r\n",
                "-1\r\n"
            ],
            [
                "15 30 100 58 81 5\r\n",
                "48.87640449438202239207\r\n"
            ],
            [
                "15 30 100 601 76 5\r\n",
                "479.52127659574466633785\r\n"
            ],
            [
                "15 30 100 7193 39 5\r\n",
                "4118.12977099236650246894\r\n"
            ],
            [
                "15 30 100 40766 18 5\r\n",
                "20114.80263157894660253078\r\n"
            ],
            [
                "15 30 100 243890 31 5\r\n",
                "131595.32374100718880072236\r\n"
            ],
            [
                "4 9 30 10 3 1\r\n",
                "-1\r\n"
            ],
            [
                "56 90 100 9 56 9\r\n",
                "-1\r\n"
            ],
            [
                "29 62 100 88 37 9\r\n",
                "43.58878504672897236105\r\n"
            ],
            [
                "712 950 1000 98 727 92\r\n",
                "-1\r\n"
            ],
            [
                "7788 8844 10000 70 4902 63\r\n",
                "-1\r\n"
            ],
            [
                "49 67 100 986 29 7\r\n",
                "361.20792079207922142814\r\n"
            ],
            [
                "190 212 1000 103 795 3\r\n",
                "-1\r\n"
            ],
            [
                "5234 7681 10000 985 8825 847\r\n",
                "-1\r\n"
            ],
            [
                "94603 96309 100000 728 25633 556\r\n",
                "-1\r\n"
            ],
            [
                "30 73 100 5089 24 9\r\n",
                "2223.76470588235315517522\r\n"
            ],
            [
                "330 357 1000 625 129 8\r\n",
                "-1\r\n"
            ],
            [
                "5010 6384 10000 9022 3213 187\r\n",
                "3713.04850213980034823180\r\n"
            ],
            [
                "7 17 100 56205 62 2\r\n",
                "40017.95999999999912688509\r\n"
            ],
            [
                "626 705 1000 10072 858 35\r\n",
                "7449.84914841849149524933\r\n"
            ],
            [
                "1727 5232 10000 67443 5399 62\r\n",
                "43315.96839533417369239032\r\n"
            ],
            [
                "10995 85967 100000 47813 44507 2442\r\n",
                "29321.41671040737128350884\r\n"
            ],
            [
                "845391 929573 1000000 87612 108825 1400\r\n",
                "12769.29187468317468301393\r\n"
            ],
            [
                "78 90 100 535782 61 4\r\n",
                "153080.57142857142025604844\r\n"
            ],
            [
                "2846 8620 10000 466361 3155 1292\r\n",
                "210537.36738121110829524696\r\n"
            ],
            [
                "138623 763216 1000000 366229 316563 160243\r\n",
                "-1\r\n"
            ],
            [
                "111724 287004 931554 512877 139642 23002\r\n",
                "257255.65320443679229356349\r\n"
            ],
            [
                "70276 182564 238201 222757 154128 55592\r\n",
                "-1\r\n"
            ],
            [
                "65775 300705 686095 383961 189161 72083\r\n",
                "-1\r\n"
            ],
            [
                "303226 381701 395142 301908 2696 244\r\n",
                "57074.30189194218837656081\r\n"
            ],
            [
                "451924 493579 637450 231345 530245 20087\r\n",
                "-1\r\n"
            ],
            [
                "67933 96355 131374 588846 12918 4897\r\n",
                "188927.55859239501296542585\r\n"
            ],
            [
                "149195 164613 287623 72041 223411 5390\r\n",
                "-1\r\n"
            ],
            [
                "448887 492030 560100 388288 354938 20867\r\n",
                "-1\r\n"
            ],
            [
                "435582 479389 540004 905521 413521 1624\r\n",
                "405317.72641163016669452190\r\n"
            ],
            [
                "64887 100252 122962 146510 74262 15718\r\n",
                "65461.49662031834304798394\r\n"
            ],
            [
                "246310 320553 585881 278070 443362 23788\r\n",
                "197686.65643275566981174052\r\n"
            ],
            [
                "154137 199509 247827 186170 112705 19967\r\n",
                "-1\r\n"
            ],
            [
                "652284 765064 966501 110259 224662 46292\r\n",
                "-1\r\n"
            ],
            [
                "1437 1945 9737 17190 7829 114\r\n",
                "14064.22866409892594674602\r\n"
            ],
            [
                "61880 74283 78517 551852 20330 1475\r\n",
                "107291.27294421795522794127\r\n"
            ],
            [
                "196112 214848 221935 465535 132387 3661\r\n",
                "82508.17177261754113715142\r\n"
            ],
            [
                "20296 469893 481654 239118 236770 20582\r\n",
                "155898.48329857748467475176\r\n"
            ],
            [
                "476636 647171 684372 48498 122589 5636\r\n",
                "12660.07415783186843327712\r\n"
            ],
            [
                "140 149 150 13 78 3\r\n",
                "-1\r\n"
            ],
            [
                "140 149 150 16 36 3\r\n",
                "-1\r\n"
            ],
            [
                "140 149 150 13 134 3\r\n",
                "3.05882352941176449690\r\n"
            ],
            [
                "140 149 150 11 76 3\r\n",
                "-1\r\n"
            ],
            [
                "1400 1490 1500 78 292 40\r\n",
                "-1\r\n"
            ],
            [
                "1400 1490 1500 89 829 40\r\n",
                "-1\r\n"
            ],
            [
                "1400 1490 1500 75 585 40\r\n",
                "-1\r\n"
            ],
            [
                "1400 1490 1500 67 240 40\r\n",
                "-1\r\n"
            ],
            [
                "1400 1490 1500 64 276 40\r\n",
                "-1\r\n"
            ],
            [
                "1400 1490 1500 43 926 40\r\n",
                "-1\r\n"
            ],
            [
                "1400 1490 1500 83 1362 40\r\n",
                "-1\r\n"
            ],
            [
                "140 149 150 18 80 3\r\n",
                "-1\r\n"
            ],
            [
                "4 9 25 10 3 1\r\n",
                "-1\r\n"
            ]
        ]
    }
]