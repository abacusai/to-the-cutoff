[
    {
        "name": "Toy Blocks",
        "description": "You are asked to watch your nephew who likes to play with toy blocks in a\nstrange way. He has \n    n\n boxes and the \n    i\n-th box has \n    a_i\n blocks.\nHis game consists of two steps: he chooses an arbitrary box \n    i\n; he tries\nto move all blocks from the \n    i\n-th box to other boxes. If he can make the\nsame number of blocks in each of \n    n - 1\n other boxes then he will be\nhappy, otherwise, will be sad. Note that your nephew can only move the blocks\nfrom the chosen box to the other boxes; he cannot move blocks from the other\nboxes.You don't want to make your nephew sad, so you decided to put several\nextra blocks into some boxes in such a way that no matter which box \n    i\n he\nchooses he won't be sad. What is the minimum number of extra blocks you need\nto put? Input The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 1000\n) \u2014 the number of test cases. The first line of each test case\ncontains the integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of\nboxes. The second line of each test case contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the number of blocks in\neach box. It's guaranteed that the sum of \n    n\n over test cases doesn't\nexceed \n    10^5\n. Output For each test case, print a single integer \u2014 the\nminimum number of blocks you need to put. It can be proved that the answer\nalways exists, i. e. the number of blocks is finite. Example Input 3 3 3 2 2 4\n2 2 3 2 3 0 3 0 Output 1 0 3 Note In the first test case, you can, for\nexample, put one extra block into the first box and make \n    a = [4, 2, 2]\n.\nIf your nephew chooses the box with \n    4\n blocks, then we will move two\nblocks to the second box and two blocks to the third box. If he chooses the\nbox with \n    2\n blocks then he will move these two blocks to the other box\nwith \n    2\n blocks. In the second test case, you don't need to put any extra\nblocks, since no matter which box your nephew chooses, he can always make\nother boxes equal. In the third test case, you should put \n    3\n extra\nblocks. For example, you can put \n    2\n blocks in the first box and \n    1\n\nblock in the third box. You'll get array \n    a = [2, 3, 1]\n.\n\n",
        "cf_contest_id": 1452,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n3 2 2\r\n4\r\n2 2 3 2\r\n3\r\n0 3 0\r\n",
                "1\r\n0\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n2\r\n4 6\r\n2\r\n7 9\r\n2\r\n77 88\r\n2\r\n46 89\r\n2\r\n77 99\r\n2\r\n34 45\r\n2\r\n78 9\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "4\r\n2\r\n4 6\r\n2\r\n7 9\r\n2\r\n77 88\r\n2\r\n55 61\r\n",
                "0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "1\r\n3\r\n100000002 100000002 100000001\r\n",
                "1\r\n"
            ],
            [
                "7\r\n3\r\n3 2 2\r\n3\r\n3 2 2\r\n3\r\n3 2 2\r\n3\r\n3 2 2\r\n3\r\n3 2 2\r\n3\r\n3 2 2\r\n3\r\n3 2 2\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "1\r\n3\r\n999999999 999999999 1000000000\r\n",
                "0\r\n"
            ],
            [
                "1\r\n3\r\n1 1000000000 1000000000\r\n",
                "1\r\n"
            ],
            [
                "1\r\n3\r\n3 1000000000 1000000000\r\n",
                "1\r\n"
            ],
            [
                "1\r\n2\r\n1000000000 1000000000\r\n",
                "0\r\n"
            ],
            [
                "2\r\n7\r\n5 5 5 5 5 5 5\r\n3\r\n1 1 1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "1\r\n10\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n",
                "8\r\n"
            ],
            [
                "4\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n",
                "0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "8\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "10\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "10\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "3\r\n2\r\n0 1000000000\r\n2\r\n0 1000000000\r\n2\r\n0 1000000000\r\n",
                "0\r\n0\r\n0\r\n"
            ],
            [
                "10\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "10\r\n2\r\n1000000000 1000000000\r\n2\r\n999999999 1000000000\r\n2\r\n1000000000 999999900\r\n2\r\n999999900 1000000000\r\n2\r\n999999900 999999900\r\n2\r\n1000000000 9999999\r\n2\r\n1000000000 1000000000\r\n2\r\n99999990 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 999999900\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "1\r\n7\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n",
                "2\r\n"
            ],
            [
                "1\r\n3\r\n1000 1000 1001\r\n",
                "1\r\n"
            ],
            [
                "9\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1000000000 1000000000 1000000000\r\n4\r\n1000000000 1000000000 1000000000 1000000000\r\n4\r\n1000000000 1000000000 1000000000 1000000000\r\n4\r\n1000000000 1000000000 1000000000 1000000000\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n2\r\n2\r\n2\r\n"
            ],
            [
                "20\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n2\r\n1000000000 999999999\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ]
        ]
    }
]