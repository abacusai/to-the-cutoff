[
    {
        "name": "New Year and the Tricolore Recreation",
        "description": "Alice and Bob play a game on a grid with \n    n\n rows and infinitely many\ncolumns. In each row, there are three tokens, blue, white and red one. Before\nthe game starts and after every move, the following two conditions must hold:\nAny two tokens are not in the same cell. In each row, the blue token is to the\nleft of the white token, and the red token is to the right of the white token.\nFirst, they pick a positive integer \n    f\n, whose value is valid for the\nwhole game. Second, the starting player is chosen and makes his or her first\nturn. Then players take alternating turns. The player who is unable to make a\nmove loses. During a move, a player first selects an integer \n    k\n that is\neither a prime number or a product of two (not necessarily distinct) primes.\nThe smallest possible values of \n    k\n are thus \n    2, 3, 4, 5, 6, 7, 9, 10,\n    11, 13, 14, 15, 17, 19, \n    \u2026\n. Furthermore, \n    k\n must not be equal to\nthe previously picked integer \n    f\n. Each turn, a move is performed in\nexactly one of the rows. If it is Alice's turn, she chooses a single blue\ntoken and moves it \n    k\n cells to the right. Alternatively, she may move\nboth the blue and the white token in the same row by the same amount \n    k\n\nto the right. On the other hand, Bob selects a single red token and moves it\n\n    k\n cells to the left. Similarly, he may also move the white and the red\ntoken in the corresponding row by \n    k\n to the left. Note that Alice may\nnever move a red token, while Bob may never move a blue one. Remember that\nafter a move, the two conditions on relative positions of the tokens must\nstill hold. Both players play optimally. Given the initial state of the board,\ndetermine who wins for two games: if Alice starts and if Bob starts. Input The\nfirst line contains a two integers \n    n\n and \n    f\n (\n    1 \n    \u2264 n \n    \u2264\n    10^5\n, \n    2 \n    \u2264 f \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of rows and the\nforbidden move, respectively. Each of the next \n    n\n lines contains three\nintegers \n    b_i\n, \n    w_i\n, \n    r_i\n (\n    -10^5 \n    \u2264 b_i < w_i < r_i\n    \n    \u2264 10^5\n) \u2014 the number of column in which the blue, white and red token\nlies in the \n    i\n-th row, respectively. Output Output two lines. The first\nline should contain the name of the winner when Alice starts, and the second\nline should contain the name of the winner when Bob starts. Examples Input 1 6\n0 3 9 Output Alice Bob Input 1 2 0 3 9 Output Alice Bob Input 10 133 -248 -193\n-187 97 101 202 -72 67 91 23 89 215 -129 -108 232 -223 -59 236 -99 86 242 -137\n-109 -45 -105 173 246 -44 228 243 Output Bob Alice Note The first example is\nas follows: When Alice starts, she can win by moving the blue and white token\nto right by \n    2\n cells, getting into position \n    2\u00a05\u00a09\n. Regardless of\nwhat Bob does, Alice will have one more move and then the game is over. For\ninstance, he can move both the red and white token by \n    2\n cells to the\nleft, reaching state \n    2\u00a03\u00a07\n. Alice can then move blue and white token by\n\n    2\n to move into \n    4\u00a05\u00a07\n, where no more moves are possible. If Bob\nstarts, he gains enough advantage to win. For instance, he may move the red\ntoken by \n    3\n to the left, getting into position \n    0\u00a03\u00a06\n. Alice can,\nfor example, move the blue token by \n    2\n, which is countered by Bob by\nmoving the red token by \n    2\n. The game ends in position \n    2\u00a03\u00a04\n. In the\nsecond example, it is forbidden to move by \n    2\n, but this doesn't stop\nAlice from winning! She can move the blue and white token by \n    4\n, getting\ninto position \n    4\u00a07\u00a09\n. Now Bob has no move, since moving by \n    2\n is\nforbidden.\n\n",
        "cf_contest_id": 1091,
        "cf_index": "H",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "games"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 6\r\n0 3 9\r\n",
                "Alice\r\nBob\r\n"
            ],
            [
                "1 2\r\n0 3 9\r\n",
                "Alice\r\nBob\r\n"
            ],
            [
                "10 133\r\n-248 -193 -187\r\n97 101 202\r\n-72 67 91\r\n23 89 215\r\n-129 -108 232\r\n-223 -59 236\r\n-99 86 242\r\n-137 -109 -45\r\n-105 173 246\r\n-44 228 243\r\n",
                "Bob\r\nAlice\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 790\r\n-549 -39 154\r\n-773 -270 215\r\n-847 -440 -257\r\n-252 -196 551\r\n-928 -428 -43\r\n-168 885 916\r\n-279 -3 330\r\n-166 -46 389\r\n-603 -526 -370\r\n-775 -702 -418\r\n",
                "Alice\r\nBob\r\n"
            ],
            [
                "10 9172\r\n-8696 -7100 9772\r\n-2293 2253 6613\r\n-7744 -2434 2580\r\n-2891 4759 8470\r\n2987 9575 9844\r\n-3280 -3142 -2998\r\n-7759 9248 9743\r\n-9042 -6775 5544\r\n-5898 -5473 94\r\n-1850 4681 6287\r\n",
                "Alice\r\nBob\r\n"
            ],
            [
                "10 26\r\n-681 104 714\r\n-995 -982 87\r\n-935 -102 936\r\n-981 -702 756\r\n-608 -234 995\r\n-863 -776 347\r\n-574 -338 -326\r\n-853 993 997\r\n255 348 608\r\n-825 -747 48\r\n",
                "Bob\r\nAlice\r\n"
            ],
            [
                "10 9930\r\n5199 8340 9147\r\n-5636 2440 9767\r\n-738 6074 9768\r\n-5926 -1711 8928\r\n-8330 -4899 9147\r\n-8307 -2728 8575\r\n-8961 -7946 -6380\r\n4817 6723 7197\r\n-5898 -5473 94\r\n-6498 5941 8575\r\n",
                "Bob\r\nAlice\r\n"
            ],
            [
                "9 3\r\n-3 0 2\r\n-3 0 2\r\n-3 0 2\r\n-1 0 2\r\n-3 1 3\r\n-3 2 3\r\n-3 -2 2\r\n-2 -1 2\r\n0 1 3\r\n",
                "Alice\r\nBob\r\n"
            ],
            [
                "20 42\r\n-164 39 717\r\n-940 -873 -54\r\n-291 87 804\r\n-410 487 789\r\n-998 -215 141\r\n-50 372 618\r\n106 758 790\r\n-956 -730 -34\r\n-945 -630 -473\r\n-337 -202 715\r\n-469 -268 744\r\n-902 -634 370\r\n-787 837 940\r\n-598 -378 368\r\n-633 -44 216\r\n-711 -615 844\r\n-696 303 563\r\n-148 50 121\r\n-665 -308 775\r\n-668 111 947\r\n",
                "Alice\r\nBob\r\n"
            ],
            [
                "30 649\r\n-854 -692 86\r\n-442 -286 465\r\n-533 -195 606\r\n-926 -312 442\r\n-910 291 485\r\n-618 522 841\r\n-721 -479 526\r\n-613 -77 670\r\n-608 601 958\r\n-912 -220 -54\r\n-938 -875 -444\r\n-332 564 881\r\n-881 239 817\r\n-602 -539 59\r\n854 941 1000\r\n-424 665 918\r\n-391 522 882\r\n-779 -655 318\r\n-829 -722 -411\r\n-770 247 545\r\n-773 386 829\r\n-979 -893 473\r\n-988 -593 672\r\n-967 -84 943\r\n-987 -800 -549\r\n34 850 956\r\n-872 341 618\r\n-969 -110 529\r\n-936 -385 746\r\n-805 504 576\r\n",
                "Alice\r\nBob\r\n"
            ],
            [
                "20 2473\r\n-9019 8498 9080\r\n-289 4525 7179\r\n-6207 2705 3764\r\n-9224 -7163 -5573\r\n-1450 3823 4888\r\n-5102 -2002 -1350\r\n-9121 -3473 -1178\r\n-8931 1180 5669\r\n-9416 -4866 -216\r\n-4614 2192 2238\r\n-571 141 7651\r\n2500 9519 9933\r\n-6351 -6148 2251\r\n-8438 7215 8939\r\n-7068 -1653 685\r\n1390 6227 9045\r\n-9758 -9689 -1101\r\n-9013 -42 6371\r\n263 4656 4918\r\n-7903 -7492 -4633\r\n",
                "Alice\r\nBob\r\n"
            ],
            [
                "20 245\r\n-164 39 717\r\n-940 -873 -54\r\n-837 -703 44\r\n-410 487 789\r\n-998 -215 141\r\n-479 -246 864\r\n-213 805 879\r\n-912 -860 577\r\n-81 325 596\r\n-337 -202 715\r\n-469 -268 744\r\n245 908 935\r\n-787 837 940\r\n-876 -792 -691\r\n-633 -44 216\r\n-711 -615 844\r\n-696 303 563\r\n20 743 873\r\n-665 -308 775\r\n-996 12 623\r\n",
                "Bob\r\nAlice\r\n"
            ],
            [
                "30 359\r\n-854 -692 86\r\n-250 -186 604\r\n-533 -195 606\r\n-926 -312 442\r\n96 219 638\r\n-618 522 841\r\n-721 -479 526\r\n-613 -77 670\r\n-608 601 958\r\n-595 -326 608\r\n-938 -875 -444\r\n-638 -463 785\r\n-881 239 817\r\n-602 -539 59\r\n-259 -235 695\r\n-424 665 918\r\n-391 522 882\r\n-779 -655 318\r\n-829 -722 -411\r\n-770 247 545\r\n-773 386 829\r\n-979 -893 473\r\n-988 -593 672\r\n-967 -84 943\r\n-987 -800 -549\r\n34 850 956\r\n-872 341 618\r\n-969 -110 529\r\n-523 587 873\r\n-371 -140 988\r\n",
                "Bob\r\nAlice\r\n"
            ],
            [
                "20 895\r\n-9019 8498 9080\r\n-3422 -2899 -1516\r\n-6207 2705 3764\r\n-8837 5472 8992\r\n-1450 3823 4888\r\n-5452 -4388 -3030\r\n-2609 3839 8107\r\n7120 7577 9049\r\n-9416 -4866 -216\r\n-9252 518 1592\r\n-2001 7325 9083\r\n-9888 -7108 -783\r\n-1624 8827 9592\r\n-8438 7215 8939\r\n-7068 -1653 685\r\n-4533 2023 7422\r\n-9758 -9689 -1101\r\n-9013 -42 6371\r\n263 4656 4918\r\n-7903 -7492 -4633\r\n",
                "Bob\r\nAlice\r\n"
            ],
            [
                "1 3\r\n-100000 -99999 100000\r\n",
                "Alice\r\nBob\r\n"
            ]
        ]
    }
]