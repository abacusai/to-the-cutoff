[
    {
        "name": "Shift It!",
        "description": "There is a square box 6 \u00d7 6 in size. It contains 36 chips 1 \u00d7 1 in size. Those\nchips contain 36 different characters \u2014 \"0\"-\"9\" and \"A\"-\"Z\". There is exactly\none chip with each character. You are allowed to make the following\noperations: you may choose one of 6 rows or one of 6 columns and cyclically\nshift the chips there to one position to the left or to the right (for the\nrow) or upwards or downwards (for the column). Those operations are allowed to\nperform several times. To solve the puzzle is to shift the chips using the\nabove described operations so that they were written in the increasing order\n(exactly equal to the right picture). An example of solving the puzzle is\nshown on a picture below. Write a program that finds the sequence of\noperations that solves the puzzle. That sequence should not necessarily be\nshortest, but you should not exceed the limit of 10000 operations. It is\nguaranteed that the solution always exists. Input The input data are\nrepresented by 6 lines containing 6 characters each. They are the puzzle's\ninitial position. Those lines contain each character from the string\n\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\" exactly once. Output On the first line\nprint number n, which is the number of operations. On the next n lines print\nthe sequence of operations one per line. An operation is described by a word\nconsisting of two characters. The first character shows the direction where\nthe row or the column will be shifted. The possible directions are \"L\", \"R\"\n(to the left, to the right correspondingly, we shift a row), \"U\", \"D\"\n(upwards, downwards correspondingly, we shift a column). The second character\nis the number of the row (or the column), it is an integer from \"1\" to \"6\".\nThe rows are numbered from the top to the bottom, the columns are numbered\nfrom the left to the right. The number of operations should not exceed 10^4.\nIf there are several solutions, print any of them. Examples Input 01W345\n729AB6 CD8FGH IJELMN OPKRST UVQXYZ Output 2 R2 U3\n\n",
        "cf_contest_id": 74,
        "cf_index": "E",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "01W345\r\n729AB6\r\nCD8FGH\r\nIJELMN\r\nOPKRST\r\nUVQXYZ\r\n",
                "390\r\nR2\r\nD3\r\nL2\r\nU3\r\nR1\r\nR2\r\nD4\r\nL2\r\nU4\r\nL1\r\nR2\r\nD3\r\nL2\r\nU3\r\nR2\r\nD3\r\nL2\r\nU3\r\nR2\r\nD5\r\nL2\r\nU5\r\nR1\r\nR2\r\nD6\r\nL2\r\nU6\r\nL1\r\nR2\r\nD5\r\nL2\r\nU5\r\nR2\r\nD5\r\nL2\r\nU5\r\nR2\r\nR2\r\nD2\r\nL2\r\nU2\r\nR1\r\nR2\r\nD3\r\nL2\r\nU3\r\nL1\r\nR2\r\nD2\r\nL2\r\nU2\r\nR2\r\nD2\r\nL2\r\nU2\r\nR2\r\nD4\r\nL2\r\nU4\r\nR1\r\nR2\r\nD5\r\nL2..."
            ]
        ],
        "private_cases": [
            [
                "012345\r\n6789AB\r\nCDEFGH\r\nIJKLMN\r\nOPQRST\r\nUVWXYZ\r\n",
                "0\r\n\r\n"
            ],
            [
                "102345\r\n6789AB\r\nCDEFGH\r\nIJKLMN\r\nOPQRST\r\nUVWXYZ\r\n",
                "37\r\nR1\r\nD3\r\nL1\r\nU3\r\nR6\r\nR1\r\nD4\r\nL1\r\nU4\r\nL6\r\nR1\r\nD3\r\nL1\r\nU3\r\nR1\r\nD3\r\nL1\r\nU3\r\nR1\r\nD5\r\nL1\r\nU5\r\nR6\r\nR1\r\nD6\r\nL1\r\nU6\r\nL6\r\nR1\r\nD5\r\nL1\r\nU5\r\nR1\r\nD5\r\nL1\r\nU5\r\nR1\r\n"
            ]
        ]
    }
]