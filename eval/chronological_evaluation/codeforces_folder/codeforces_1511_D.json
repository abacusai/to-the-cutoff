[
    {
        "name": "Min Cost String",
        "description": "Let's define the cost of a string \n    s\n as the number of index pairs \n    i\n\nand \n    j\n (\n    1 \n    \u2264 i < j < |s|\n) such that \n    s_i = s_j\n and\n\n    s_i+1 = s_j+1\n. You are given two positive integers \n    n\n and\n\n    k\n. Among all strings with length \n    n\n that contain only the first\n\n    k\n characters of the Latin alphabet, find a string with minimum possible\ncost. If there are multiple such strings with minimum cost \u2014 find any of them.\nInput The only line contains two integers \n    n\n and \n    k\n (\n    1 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5; 1 \n    \u2264 k \n    \u2264 26\n). Output Print the string \n    s\n\nsuch that it consists of \n    n\n characters, each its character is one of the\n\n    k\n first Latin letters, and it has the minimum possible cost among all\nthese strings. If there are multiple such strings \u2014 print any of them.\nExamples Input 9 4 Output aabacadbb Input 5 1 Output aaaaa Input 10 26 Output\ncodeforces\n\n",
        "cf_contest_id": 1511,
        "cf_index": "D",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms",
            "graphs",
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9 4\r\n",
                "aabbccdda"
            ],
            [
                "5 1\r\n",
                "aaaaa"
            ],
            [
                "10 26\r\n",
                "aabbccddee"
            ]
        ],
        "private_cases": [
            [
                "32 2\r\n",
                "aabbaabbaabbaabbaabbaabbaabbaabb"
            ],
            [
                "9 3\r\n",
                "aabbccacb"
            ],
            [
                "10 3\r\n",
                "aabbccacba"
            ],
            [
                "25 5\r\n",
                "aabbccddeeacebdadbecaedcb"
            ],
            [
                "26 5\r\n",
                "aabbccddeeacebdadbecaedcba"
            ],
            [
                "27 5\r\n",
                "aabbccddeeacebdadbecaedcbaa"
            ],
            [
                "33 4\r\n",
                "aabbccddacadbdcbaabbccddacadbdcba"
            ],
            [
                "200 1\r\n",
                "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
            ],
            [
                "200 2\r\n",
                "aabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabb"
            ],
            [
                "200 5\r\n",
                "aabbccddeeacebdadbecaedcbaabbccddeeacebdadbecaedcbaabbccddeeacebdadbecaedcbaabbccddeeacebdadbecaedcbaabbccddeeacebdadbecaedcbaabbccddeeacebdadbecaedcbaabbccddeeacebdadbecaedcbaabbccddeeacebdadbecaedcb"
            ],
            [
                "200 7\r\n",
                "aabbccddeeffggacegbdfadgcfbeaebfcgdafdbgecagfedcbaabbccddeeffggacegbdfadgcfbeaebfcgdafdbgecagfedcbaabbccddeeffggacegbdfadgcfbeaebfcgdafdbgecagfedcbaabbccddeeffggacegbdfadgcfbeaebfcgdafdbgecagfedcbaabb"
            ],
            [
                "200 10\r\n",
                "aabbccddeeffgghhiijjacegiadfhjbdgjcfibehaeicgafjdhbfagbgchcidiejeahdjfbhebifcjgdaigecajhfdbjihgfedcbaabbccddeeffgghhiijjacegiadfhjbdgjcfibehaeicgafjdhbfagbgchcidiejeahdjfbhebifcjgdaigecajhfdbjihgfedcb"
            ],
            [
                "200 11\r\n",
                "aabbccddeeffgghhiijjkkacegikbdfhjadgjbehkcfiaeibfjcgkdhafkejdichbgagbhcidjekfahdkgcjfbieaifckhebjgdajhfdbkigecakjihgfedcbaabbccddeeffgghhiijjkkacegikbdfhjadgjbehkcfiaeibfjcgkdhafkejdichbgagbhcidjekfah"
            ],
            [
                "200 15\r\n",
                "aabbccddeeffgghhiijjkkllmmnnooacegikmobdfhjlnadgjmaehknbeilocfimbfjncgkodhlafkaglbgmchmdindjoejahnekbhoflciognfmeldkcjbiaibjckdlemfngohajdmgakenhbkfoiclfalgblhcmhdnidojeokgcnjfbmieamjgdankhebnlifcoljh"
            ],
            [
                "200 18\r\n",
                "aabbccddeeffgghhiijjkkllmmnnooppqqrracegikmoqadfhjlnprbdgjmpaehknqbeilorcfimqcgkoafjnrdhlpbfkpchmrejobglqdinagmahnbhociodjpdkqekrflrgncjqfmbipelaiqgoemckajrhpfndlbjakbkclcmdmeneofogpgqhqirialdnfphrjbl"
            ],
            [
                "200 20\r\n",
                "aabbccddeeffgghhiijjkkllmmnnooppqqrrssttacegikmoqsadfhjlnprtbdgjmpsbehknqtcfiloraeimqafjnrbfkoscgkptdhlpaglqbgmrchmsdinsejotekqcioahntflrdjpbhobipcjqdkrelsfmtgnaiqemajrfnbjsgockshpdlthqfodmbktirgpencl"
            ],
            [
                "200 22\r\n",
                "aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvacegikmoqsuadfhjlnprtvbdgjmpsvcfilorubehknqtaeimqucgkosafjnrvdhlptbfkpudinsbglqvejotchmragmsciouekqahntdjpvflrbhovgnufmtelsdkrcjqbipaiqcksemugoajrdltfnvhpbj"
            ],
            [
                "200 25\r\n",
                "aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyacegikmoqsuwybdfhjlnprtvxadgjmpsvycfiloruxbehknqtwaeimquydhlptxcgkoswbfjnrvafkpuaglqvbgmrwchmsxdinsyejotyflrxekqwdjpvcioubhntahovdkrygnucjqxfmtbipwels"
            ],
            [
                "200 26\r\n",
                "aabbccddeeffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzzacegikmoqsuwyadfhjlnprtvxzbdgjmpsvybehknqtwzcfiloruxaeimquycgkoswafjnrvzdhlptxbfkpuzejotydinsxchmrwbglqvagmsyekqwciouahntzflrxdjpvbhovcjqxelszgnubip"
            ],
            [
                "1 1\r\n",
                "a"
            ],
            [
                "1 2\r\n",
                "a"
            ],
            [
                "1 13\r\n",
                "a"
            ],
            [
                "1 26\r\n",
                "a"
            ]
        ]
    }
]