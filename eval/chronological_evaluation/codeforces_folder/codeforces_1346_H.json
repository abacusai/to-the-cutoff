[
    {
        "name": "Game with Segments",
        "description": "Alice and Bob are playing a game (yet again). They have two sequences of\nsegments of the coordinate axis: a sequence of \n    n\n initial segments:\n\n    [l_1, r_1]\n, \n    [l_2, r_2]\n, ..., \n    [l_n, r_n]\n, and a sequence of\n\n    m\n terminal segments: \n    [L_1, R_1]\n, \n    [L_2, R_2]\n, ..., \n    [L_m,\n    R_m]\n. At the beginning of the game, they choose one of the initial segments\nand set it as the current segment. Alice and Bob make alternating moves: Alice\nmakes the first move, Bob makes the second move, Alice makes the third one,\nand so on. During each move, the current player must shrink the current\nsegment either by increasing its left endpoint by \n    1\n, or by decreasing\nits right endpoint by \n    1\n. So, if the current segment is \n    [c_l, c_r]\n,\nit becomes either \n    [c_l + 1, c_r]\n, or \n    [c_l, c_r - 1]\n. If at the\nbeginning of the game or after Bob's move the current segment coincides with\none of the terminal segments, Bob wins. If the current segment becomes\ndegenerate (\n    c_l = c_r\n), and Bob hasn't won yet, Alice wins. If the\ncurrent segment coincides with one of the terminal segments after Alice's\nmove, nothing happens \u2014 the game continues. Both players play optimally \u2014 if\nthey can win, they always use a strategy that leads them to victory in the\nminimum number of turns, and if they cannot win, they try to prolong the game,\nusing the strategy allowing them to make the maximum possible number of moves\nuntil their defeat. For each of the initial segments you have to determine who\nwill win the game if this segment is chosen as the current segment at the\nbeginning of the game. If Bob wins, you also have to calculate the number of\nmoves Alice will make before her defeat. Input The first line contains two\nintegers \n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the\nnumber of initial segments and terminal segments, respectively. Then \n    n\n\nlines follow, the \n    i\n-th line contains two integers \n    l_i\n and\n\n    r_i\n (\n    1 \n    \u2264 l_i < r_i \n    \u2264 10^6\n) \u2014 the endpoints of the\n\n    i\n-th initial segment. Then \n    m\n lines follow, the \n    i\n-th line\ncontains two integers \n    L_i\n and \n    R_i\n (\n    1 \n    \u2264 L_i < R_i \n    \u2264\n    10^6\n) \u2014 the endpoints of the \n    i\n-th terminal segment. Note that some of\nthe segments given in the input may coincide. Output Print \n    n\n integers,\nthe \n    i\n-th of them should describe the result of the game if the\n\n    i\n-th initial segment is chosen at the beginning of the game: if Alice\nwins, print \n    -1\n; if Bob wins, print the number of moves Alice will make\nbefore she is defeated. Examples Input 1 1 4 7 4 7 Output 0 Input 1 2 2 5 2 4\n3 5 Output -1 Input 2 1 1 5 1 4 2 3 Output -1 1\n\n",
        "cf_contest_id": 1346,
        "cf_index": "H",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "data structures",
            "games"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "1 1\r\n4 7\r\n4 7\r\n",
                "0 \n"
            ],
            [
                "1 2\r\n2 5\r\n2 4\r\n3 5\r\n",
                "-1 \n"
            ],
            [
                "2 1\r\n1 5\r\n1 4\r\n2 3\r\n",
                "-1 1 \n"
            ]
        ],
        "private_cases": []
    }
]