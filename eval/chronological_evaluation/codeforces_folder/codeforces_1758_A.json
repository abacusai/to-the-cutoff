[
    {
        "name": "SSeeeeiinngg DDoouubbllee",
        "description": "A palindrome is a string that reads the same backward as forward. For example,\nthe strings \n    \n, \n    \n, \n    \n,\nand \n    \n are palindromes, but \n    \n\nand \n    \n are not. The double of a string \n    s\n is obtained by\nwriting each character twice. For example, the double of\n\n    \n is \n    \n. Given a string\n\n    s\n, rearrange its double to form a palindrome. Output the rearranged\nstring. It can be proven that such a rearrangement always exists. Input The\nfirst line of input contains \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the\nnumber of test cases. The only line of each test case contains a single string\n\n    s\n (\n    1 \n    \u2264 |s| \n    \u2264 100\n) consisting only of lowercase English\nletters. Note that the sum of \n    |s|\n over all test cases is not bounded.\nOutput For each test case, output a palindromic string of length \n    2 \n    \u00b7\n    |s|\n that is a rearrangement of the double of \n    s\n. Example Input 4 a\nsururu errorgorn anutforajaroftuna Output aa suurruurruus rgnororerrerorongr\naannuuttffoorraajjaarrooffttuunnaa Note In the first test case, the double of\n\n    \n is \n    \n, which is already a palindrome. In\nthe second test case, the double of \n    \n is\n\n    \n. If we move the first \n    \n to the\nend, we get \n    \n, which is a palindrome. In the third\ntest case, the double of \n    \n is\n\n    \n. We can rearrange the characters to form\n\n    \n, which is a palindrome.\n\n",
        "cf_contest_id": 1758,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\na\r\nsururu\r\nerrorgorn\r\nanutforajaroftuna\r\n",
                "\r\naa\r\n\r\n\r\nururussururu\r\n\r\n\r\nnrogrorreerrorgorn\r\n\r\n\r\nanutforajaroftunaanutforajaroftuna\r\n\r\n"
            ]
        ],
        "private_cases": []
    }
]