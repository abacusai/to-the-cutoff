[
    {
        "name": "Preparing for the Contest",
        "description": "Soon there will be held the world's largest programming contest, but the\ntesting system still has m bugs. The contest organizer, a well-known\nuniversity, has no choice but to attract university students to fix all the\nbugs. The university has n students able to perform such work. The students\nrealize that they are the only hope of the organizers, so they don't want to\nwork for free: the i-th student wants to get ci 'passes' in his subjects\n(regardless of the volume of his work). Bugs, like students, are not the same:\nevery bug is characterized by complexity aj, and every student has the level\nof his abilities bi. Student i can fix a bug j only if the level of his\nabilities is not less than the complexity of the bug: bi \u2265 aj, and he does it\nin one day. Otherwise, the bug will have to be fixed by another student. Of\ncourse, no student can work on a few bugs in one day. All bugs are not\ndependent on each other, so they can be corrected in any order, and different\nstudents can work simultaneously. The university wants to fix all the bugs as\nquickly as possible, but giving the students the total of not more than s\npasses. Determine which students to use for that and come up with the schedule\nof work saying which student should fix which bug. Input The first line\ncontains three space-separated integers: n, m and s (1 \u2264 n, m \u2264 10^5, 0 \u2264 s \u2264\n10^9) \u2014 the number of students, the number of bugs in the system and the\nmaximum number of passes the university is ready to give the students. The\nnext line contains m space-separated integers a1, a2, ..., am (1 \u2264 ai \u2264 10^9)\n\u2014 the bugs' complexities. The next line contains n space-separated integers\nb1, b2, ..., bn (1 \u2264 bi \u2264 10^9) \u2014 the levels of the students' abilities. The\nnext line contains n space-separated integers c1, c2, ..., cn (0 \u2264 ci \u2264 10^9)\n\u2014 the numbers of the passes the students want to get for their help. Output If\nthe university can't correct all bugs print \"NO\". Otherwise, on the first line\nprint \"YES\", and on the next line print m space-separated integers: the i-th\nof these numbers should equal the number of the student who corrects the i-th\nbug in the optimal answer. The bugs should be corrected as quickly as possible\n(you must spend the minimum number of days), and the total given passes\nmustn't exceed s. If there are multiple optimal answers, you can output any of\nthem. Examples Input 3 4 9 1 3 1 2 2 1 3 4 3 6 Output YES 2 3 2 3 Input 3 4 10\n2 3 1 2 2 1 3 4 3 6 Output YES 1 3 1 3 Input 3 4 9 2 3 1 2 2 1 3 4 3 6 Output\nYES 3 3 2 3 Input 3 4 5 1 3 1 2 2 1 3 5 3 6 Output NO Note Consider the first\nsample. The third student (with level 3) must fix the 2nd and 4th bugs\n(complexities 3 and 2 correspondingly) and the second student (with level 1)\nmust fix the 1st and 3rd bugs (their complexity also equals 1). Fixing each\nbug takes one day for each student, so it takes 2 days to fix all bugs (the\nstudents can work in parallel). The second student wants 3 passes for his\nassistance, the third student wants 6 passes. It meets the university's\ncapabilities as it is ready to give at most 9 passes.\n\n",
        "cf_contest_id": 377,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 4 9\r\n1 3 1 2\r\n2 1 3\r\n4 3 6\r\n",
                "YES\r\n2 3 2 3 \r\n"
            ],
            [
                "3 4 10\r\n2 3 1 2\r\n2 1 3\r\n4 3 6\r\n",
                "YES\r\n1 3 1 3 \r\n"
            ],
            [
                "3 4 9\r\n2 3 1 2\r\n2 1 3\r\n4 3 6\r\n",
                "YES\r\n3 3 2 3 \r\n"
            ],
            [
                "3 4 5\r\n1 3 1 2\r\n2 1 3\r\n5 3 6\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 4 9\r\n1 3 1 1\r\n2 1 3\r\n4 3 6\r\n",
                "YES\r\n2 3 2 3 \r\n"
            ],
            [
                "5 6 10\r\n2 4 6 5 4 3\r\n4 2 5 3 6\r\n3 2 5 3 7\r\n",
                "YES\r\n1 1 5 5 5 1 \r\n"
            ],
            [
                "2 2 10\r\n1 2\r\n1 2\r\n5 5\r\n",
                "YES\r\n1 2 \r\n"
            ],
            [
                "2 2 10\r\n1 2\r\n1 2\r\n6 5\r\n",
                "YES\r\n2 2 \r\n"
            ],
            [
                "5 6 13\r\n2 4 6 5 4 3\r\n4 2 5 3 6\r\n3 2 5 3 7\r\n",
                "YES\r\n4 1 5 5 1 4 \r\n"
            ],
            [
                "5 6 12\r\n2 4 6 5 4 3\r\n4 2 5 3 6\r\n3 2 5 3 7\r\n",
                "YES\r\n1 1 5 5 5 1 \r\n"
            ],
            [
                "5 6 9\r\n2 4 6 5 4 3\r\n4 2 5 3 6\r\n3 2 5 3 7\r\n",
                "YES\r\n2 5 5 5 5 5 \r\n"
            ],
            [
                "5 6 100\r\n2 4 7 5 4 3\r\n4 2 5 3 6\r\n3 2 5 3 7\r\n",
                "NO\r\n"
            ],
            [
                "5 6 9\r\n3 4 7 5 4 3\r\n4 2 5 3 7\r\n3 2 5 3 7\r\n",
                "YES\r\n5 5 5 5 5 5 \r\n"
            ],
            [
                "1 1 10\r\n1\r\n1\r\n10\r\n",
                "YES\r\n1 \r\n"
            ],
            [
                "1 1 10\r\n2\r\n1\r\n10\r\n",
                "NO\r\n"
            ],
            [
                "1 1 9\r\n1\r\n1\r\n10\r\n",
                "NO\r\n"
            ],
            [
                "2 2 0\r\n1 2\r\n1 2\r\n0 0\r\n",
                "YES\r\n1 2 \r\n"
            ],
            [
                "2 2 10\r\n1 2\r\n1 2\r\n7 4\r\n",
                "YES\r\n2 2 \r\n"
            ],
            [
                "3 2 5\r\n1 2\r\n1 2 3\r\n7 4 0\r\n",
                "YES\r\n2 3 \r\n"
            ],
            [
                "3 2 6\r\n3 2\r\n1 2 3\r\n7 5 0\r\n",
                "YES\r\n3 2 \r\n"
            ],
            [
                "3 2 6\r\n3 1\r\n1 2 3\r\n6 7 0\r\n",
                "YES\r\n3 1 \r\n"
            ],
            [
                "4 2 11\r\n1 4\r\n1 2 3 4\r\n6 8 7 5\r\n",
                "YES\r\n1 4 \r\n"
            ],
            [
                "6 3 15\r\n1 2 6\r\n1 2 3 4 5 6\r\n2 5 3 4 5 10\r\n",
                "YES\r\n1 3 6 \r\n"
            ],
            [
                "4 4 9\r\n1 1 3 3\r\n1 2 3 4\r\n3 5 5 3\r\n",
                "YES\r\n1 1 4 4 \r\n"
            ],
            [
                "8 4 3\r\n1 1 3 8\r\n1 2 3 1 2 3 1 8\r\n2 4 3 2 1 3 4 2\r\n",
                "YES\r\n5 5 8 8 \r\n"
            ],
            [
                "4 6 10\r\n1 2 3 4 5 6\r\n2 4 5 6\r\n2 4 3 4\r\n",
                "YES\r\n1 1 3 3 4 4 \r\n"
            ],
            [
                "6 12 10\r\n2 3 3 2 6 6 3 1 5 5 4 6\r\n1 6 2 2 5 1\r\n7 7 3 3 2 3\r\n",
                "YES\r\n5 5 5 5 2 2 5 5 2 2 2 2 \r\n"
            ],
            [
                "5 10 10\r\n2 1 4 5 3 3 1 2 3 2\r\n5 1 2 4 6\r\n10 4 1 1 1\r\n",
                "YES\r\n3 2 5 5 4 4 3 3 5 4 \r\n"
            ],
            [
                "5 15 10\r\n2 5 3 2 4 4 4 3 2 3 1 6 3 1 5\r\n4 4 4 2 1\r\n11 13 13 12 15\r\n",
                "NO\r\n"
            ],
            [
                "10 15 10\r\n3 4 2 4 5 3 3 1 2 3 6 1 2 5 4\r\n6 1 2 1 6 1 4 2 6 6\r\n0 3 7 3 2 9 3 2 11 15\r\n",
                "YES\r\n7 5 8 5 1 7 5 8 7 5 1 8 7 1 1 \r\n"
            ],
            [
                "5 10 10\r\n2 5 3 6 6 2 5 6 5 2\r\n4 2 5 6 4\r\n9 3 13 13 4\r\n",
                "NO\r\n"
            ],
            [
                "5 15 10\r\n2 4 5 5 3 1 6 1 6 6 2 6 3 4 5\r\n5 1 1 5 5\r\n6 8 1 7 6\r\n",
                "NO\r\n"
            ],
            [
                "20 50 70\r\n5 4 4 3 2 5 4 10 5 2 8 3 10 9 8 9 3 8 9 6 4 8 10 10 8 5 5 8 7 10 9 7 5 3 10 3 1 2 2 1 8 9 9 5 3 7 1 8 7 5\r\n3 7 1 9 3 6 11 3 6 3 10 4 10 1 4 8 3 6 1 5\r\n10 6 4 6 2 9 10 4 5 5 0 6 8 6 4 5 4 7 5 8\r\n",
                "YES\r\n20 15 20 5 17 18 20 13 18 17 7 5 13 4 7 4 5 7 4 9 20 7 11 11 16 18 18 16 2 11 4 2 9 15 11 15 8 17 5 8 16 13 13 9 15 2 17 16 2 9 \r\n"
            ],
            [
                "20 30 50\r\n1 8 6 9 2 5 9 7 4 7 1 5 2 9 10 1 6 4 6 1 3 2 6 10 5 4 1 1 2 9\r\n5 6 5 1 1 2 9 9 8 6 4 6 10 5 11 5 1 4 10 6\r\n8 5 14 4 5 4 10 14 11 14 10 15 0 15 15 2 0 2 11 3\r\n",
                "YES\r\n4 19 2 7 6 16 7 19 18 19 4 2 6 7 13 4 20 16 20 17 18 6 20 13 2 16 17 17 18 13 \r\n"
            ],
            [
                "40 50 70\r\n4 3 5 4 6 2 4 8 7 9 9 7 10 2 3 1 10 4 7 5 4 1 1 6 2 10 8 8 1 5 8 8 7 3 5 10 5 1 9 9 8 8 4 9 3 1 2 4 5 8\r\n11 3 8 11 1 7 5 6 3 4 8 1 6 8 9 4 7 9 6 7 4 10 10 1 7 5 7 5 3 9 2 5 2 3 4 4 7 4 5 7\r\n5 6 20 16 1 14 19 17 11 14 5 17 2 18 16 7 0 4 10 4 10 14 4 10 7 2 10 2 4 15 16 3 1 17 6 9 11 15 19 8\r\n",
                "YES\r\n13 32 26 13 17 33 13 22 17 1 18 22 23 33 32 29 23 13 22 28 26 29 5 17 33 23 11 11 5 28 11 11 22 32 28 23 28 5 18 18 1 1 26 18 32 5 33 26 17 1 \r\n"
            ],
            [
                "20 50 70\r\n10 4 9 6 3 4 10 4 3 7 4 8 6 10 3 8 1 8 5 10 9 2 5 4 8 5 5 7 9 5 8 3 2 10 5 7 6 5 1 3 7 6 2 4 3 1 5 7 3 3\r\n5 11 7 5 3 11 7 5 7 10 6 9 6 11 10 11 7 7 10 5\r\n9 23 5 8 8 18 20 5 9 24 9 8 10 9 9 6 4 2 8 25\r\n",
                "YES\r\n16 4 19 17 5 3 16 3 5 18 3 12 17 16 5 12 15 12 8 16 19 15 8 3 19 8 8 18 19 8 19 5 15 16 17 18 18 17 15 4 12 18 5 3 4 15 17 12 4 4 \r\n"
            ],
            [
                "20 30 50\r\n4 3 3 2 9 4 5 5 2 2 10 3 1 3 3 8 8 2 1 4 3 5 2 4 8 8 8 4 2 9\r\n7 10 8 7 6 2 11 5 7 7 10 6 6 10 9 4 11 10 11 7\r\n0 27 16 13 25 5 23 4 22 18 11 3 2 19 8 25 22 9 23 26\r\n",
                "YES\r\n13 8 8 6 18 13 1 1 6 6 18 12 11 12 12 15 15 6 11 13 12 1 8 13 15 15 18 1 8 18 \r\n"
            ],
            [
                "40 50 70\r\n4 5 8 7 3 9 9 2 10 5 7 4 8 1 6 2 6 5 4 7 8 9 6 8 10 8 5 9 4 9 3 4 9 10 1 1 6 3 3 3 7 3 8 8 3 5 1 10 7 6\r\n2 5 3 4 1 1 4 6 8 9 11 4 3 10 5 6 10 7 4 11 9 1 3 7 8 9 9 2 1 11 9 9 10 10 3 6 11 7 1 8\r\n26 7 12 28 6 29 30 29 27 30 17 32 9 9 14 30 27 0 17 13 18 25 28 8 32 18 26 34 33 14 0 35 4 28 31 33 31 18 35 23\r\n",
                "YES\r\n20 2 14 18 13 31 31 13 33 2 18 2 14 5 24 13 24 24 2 18 14 31 24 14 33 14 24 31 2 33 13 2 33 33 5 13 18 20 20 20 18 20 31 31 20 24 13 33 14 18 \r\n"
            ],
            [
                "1 2 100\r\n5 6\r\n10\r\n10\r\n",
                "YES\r\n1 1 \r\n"
            ],
            [
                "3 3 1000000000\r\n1 1 1\r\n1 1 1\r\n1000000000 1000000000 1000000000\r\n",
                "YES\r\n3 3 3 \r\n"
            ]
        ]
    }
]