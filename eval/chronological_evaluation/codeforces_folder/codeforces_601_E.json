[
    {
        "name": "A Museum Robbery",
        "description": "There's a famous museum in the city where Kleof\u00e1\u0161 lives. In the museum, n\nexhibits (numbered 1 through n) had been displayed for a long time; the i-th\nof those exhibits has value vi and mass wi. Then, the museum was bought by a\nlarge financial group and started to vary the exhibits. At about the same\ntime, Kleof\u00e1\u0161... gained interest in the museum, so to say. You should process\nq events of three types: type 1 \u2014 the museum displays an exhibit with value v\nand mass w; the exhibit displayed in the i-th event of this type is numbered n\n+ i (see sample explanation for more details) type 2 \u2014 the museum removes the\nexhibit with number x and stores it safely in its vault type 3 \u2014 Kleof\u00e1\u0161\nvisits the museum and wonders (for no important reason at all, of course): if\nthere was a robbery and exhibits with total mass at most m were stolen, what\nwould their maximum possible total value be?For each event of type 3, let s(m)\nbe the maximum possible total value of stolen exhibits with total mass \u2264 m.\nFormally, let D be the set of numbers of all exhibits that are currently\ndisplayed (so initially D = 1, ..., n). Let P(D) be the set of all subsets\nof D and let Then, s(m) is defined as Compute s(m) for each . Note that the\noutput follows a special format. Input The first line of the input contains\ntwo space-separated integers n and k (1 \u2264 n \u2264 5000, 1 \u2264 k \u2264 1000) \u2014 the\ninitial number of exhibits in the museum and the maximum interesting mass of\nstolen exhibits. Then, n lines follow. The i-th of them contains two space-\nseparated positive integers vi and wi (1 \u2264 vi \u2264 1 000 000, 1 \u2264 wi \u2264 1000) \u2014\nthe value and mass of the i-th exhibit. The next line contains a single\ninteger q (1 \u2264 q \u2264 30 000) \u2014 the number of events. Each of the next q lines\ncontains the description of one event in the following format: 1 v w \u2014 an\nevent of type 1, a new exhibit with value v and mass w has been added (1 \u2264 v \u2264\n1 000 000, 1 \u2264 w \u2264 1000) 2 x \u2014 an event of type 2, the exhibit with number x\nhas been removed; it's guaranteed that the removed exhibit had been displayed\nat that time 3 \u2014 an event of type 3, Kleof\u00e1\u0161 visits the museum and asks his\nquestionThere will be at most 10 000 events of type 1 and at least one event\nof type 3. Output As the number of values s(m) can get large, output the\nanswers to events of type 3 in a special format. For each event of type 3,\nconsider the values s(m) computed for the question that Kleof\u00e1\u0161 asked in this\nevent; print one line containing a single number where p = 10^7 + 19 and q =\n10^9 + 7. Print the answers to events of type 3 in the order in which they\nappear in the input. Examples Input 3 10 30 4 60 6 5 1 9 3 1 42 5 1 20 3 3 2 2\n2 4 3 1 40 6 3 Output 556674384 168191145 947033915 181541912 Input 3 1000 100\n42 100 47 400 15 4 2 2 2 1 2 3 3 Output 0 Note In the first sample, the\nnumbers of displayed exhibits and values s(1), ..., s(10) for individual\nevents of type 3 are, in order: The values of individual exhibits are v1 = 30,\nv2 = 60, v3 = 5, v4 = 42, v5 = 20, v6 = 40 and their masses are w1 = 4, w2 =\n6, w3 = 1, w4 = 5, w5 = 3, w6 = 6. In the second sample, the only question is\nasked after removing all exhibits, so s(m) = 0 for any m.\n\n",
        "cf_contest_id": 601,
        "cf_index": "E",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 10\r\n30 4\r\n60 6\r\n5 1\r\n9\r\n3\r\n1 42 5\r\n1 20 3\r\n3\r\n2 2\r\n2 4\r\n3\r\n1 40 6\r\n3\r\n",
                "556674384\r\n168191145\r\n947033915\r\n181541912\r\n"
            ],
            [
                "3 1000\r\n100 42\r\n100 47\r\n400 15\r\n4\r\n2 2\r\n2 1\r\n2 3\r\n3\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 72\r\n77 5\r\n91 6\r\n17\r\n1 26 1\r\n1 51 8\r\n1 6 9\r\n3\r\n3\r\n2 2\r\n2 3\r\n1 61 2\r\n2 6\r\n2 1\r\n3\r\n2 4\r\n2 5\r\n3\r\n1 2 7\r\n3\r\n2 7\r\n",
                "650494204\r\n650494204\r\n139601437\r\n0\r\n142576201\r\n"
            ],
            [
                "6 20\r\n60 2\r\n55 4\r\n24 6\r\n65 3\r\n75 2\r\n71 2\r\n35\r\n3\r\n3\r\n2 4\r\n2 5\r\n1 20 3\r\n3\r\n3\r\n2 6\r\n3\r\n3\r\n1 18 7\r\n1 7 8\r\n1 59 2\r\n1 93 9\r\n1 50 4\r\n1 95 1\r\n1 15 7\r\n2 14\r\n2 10\r\n1 94 4\r\n1 78 8\r\n1 52 2\r\n1 87 6\r\n1 39 2\r\n2 1\r\n3\r\n1 24 8\r\n2 20\r\n3\r\n1 42 3\r\n2 2\r\n1 16 7\r\n1 96 6\r\n1 73 6\r\n3\r\n",
                "587321433\r\n587321433\r\n175743672\r\n175743672\r\n268772047\r\n268772047\r\n323760480\r\n323760480\r\n692508201\r\n"
            ],
            [
                "10 65\r\n35 9\r\n10 2\r\n68 8\r\n51 1\r\n2 5\r\n89 3\r\n70 4\r\n44 7\r\n21 7\r\n17 4\r\n20\r\n3\r\n2 2\r\n2 7\r\n3\r\n3\r\n1 3 7\r\n2 3\r\n2 6\r\n3\r\n3\r\n1 91 1\r\n3\r\n3\r\n1 80 2\r\n1 89 9\r\n2 11\r\n2 10\r\n3\r\n3\r\n3\r\n",
                "595129643\r\n244401840\r\n244401840\r\n15119001\r\n15119001\r\n286901858\r\n286901858\r\n754897446\r\n754897446\r\n754897446\r\n"
            ],
            [
                "18 5\r\n23 3\r\n66 10\r\n8 4\r\n45 10\r\n21 3\r\n16 10\r\n88 8\r\n92 6\r\n30 4\r\n74 9\r\n17 4\r\n11 3\r\n24 10\r\n80 4\r\n50 7\r\n55 8\r\n59 6\r\n11 4\r\n15\r\n3\r\n3\r\n3\r\n3\r\n2 2\r\n3\r\n2 16\r\n3\r\n2 3\r\n1 93 10\r\n3\r\n3\r\n1 45 8\r\n3\r\n3\r\n",
                "748289410\r\n748289410\r\n748289410\r\n748289410\r\n748289410\r\n748289410\r\n748289410\r\n748289410\r\n748289410\r\n748289410\r\n"
            ],
            [
                "2 58\r\n94 10\r\n25 2\r\n35\r\n2 2\r\n1 23 6\r\n2 3\r\n1 51 2\r\n2 1\r\n1 59 9\r\n2 4\r\n1 37 5\r\n2 5\r\n2 6\r\n1 31 4\r\n1 42 2\r\n2 7\r\n2 8\r\n1 98 6\r\n2 9\r\n1 48 6\r\n2 10\r\n3\r\n1 43 9\r\n2 11\r\n1 62 9\r\n2 12\r\n3\r\n1 57 5\r\n2 13\r\n1 1 7\r\n2 14\r\n3\r\n1 64 7\r\n2 15\r\n1 39 5\r\n2 16\r\n1 27 2\r\n2 17\r\n",
                "0\r\n0\r\n0\r\n"
            ],
            [
                "6 2\r\n81 3\r\n81 6\r\n95 5\r\n34 2\r\n59 3\r\n53 6\r\n13\r\n2 1\r\n1 33 2\r\n2 6\r\n2 7\r\n3\r\n3\r\n2 4\r\n2 5\r\n3\r\n3\r\n2 2\r\n2 3\r\n3\r\n",
                "340000646\r\n340000646\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "1 1\r\n1 1\r\n1\r\n3\r\n",
                "1\r\n"
            ]
        ]
    }
]