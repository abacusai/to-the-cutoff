[
    {
        "name": "Alternating Tree",
        "description": "Given a tree with \n    n\n nodes numbered from \n    1\n to \n    n\n. Each node\n\n    i\n has an associated value \n    V_i\n. If the simple path from \n    u_1\n\nto \n    u_m\n consists of \n    m\n nodes namely \n    u_1 \n    \u2192 u_2\n    \n    \u2192 u_3 \n    \u2192\n    \u2026 u_m-1\n    \u2192 u_m\n, then\nits alternating function \n    A(u_1,u_m)\n is defined as \n    A(u_1,u_m)\n    = \n    \u2211\n    _i=1^m (-1)^i+1\n    \u00b7 V_u_i\n. A path can also\nhave \n    0\n edges, i.e. \n    u_1=u_m\n. Compute the sum of alternating\nfunctions of all unique simple paths. Note that the paths are directed: two\npaths are considered different if the starting vertices differ or the ending\nvertices differ. The answer may be large so compute it modulo \n    10^9+7\n.\nInput The first line contains an integer \n    n\n \n    (2 \n    \u2264 n \n    \u2264\n    2\n    \u00b710^5 )\n \u2014 the number of vertices in the tree. The second line\ncontains \n    n\n space-separated integers \n    V_1, V_2, \n    \u2026, V_n\n\n(\n    -10^9\n    \u2264 V_i \n    \u2264 10^9\n) \u2014 values of the nodes. The next \n    n-1\n\nlines each contain two space-separated integers \n    u\n and \n    v\n\n\n    (1\n    \u2264 u, v\n    \u2264 n, u \n    \u2260 v)\n denoting an edge between vertices\n\n    u\n and \n    v\n. It is guaranteed that the given graph is a tree. Output\nPrint the total sum of alternating functions of all unique simple paths modulo\n\n    10^9+7\n. Examples Input 4 -4 1 5 -2 1 2 1 3 1 4 Output 40 Input 8 -2 6\n-4 -4 -9 -3 -7 23 8 2 2 3 1 4 6 5 7 6 4 7 5 8 Output 4 Note Consider the first\nexample. A simple path from node \n    1\n to node \n    2\n: \n    1 \n    \u2192\n    2\n has alternating function equal to \n    A(1,2) = 1 \n    \u00b7 (-4)+(-1) \n    \u00b7\n    1 = -5\n. A simple path from node \n    1\n to node \n    3\n: \n    1 \n    \u2192\n    3\n has alternating function equal to \n    A(1,3) = 1 \n    \u00b7 (-4)+(-1) \n    \u00b7\n    5 = -9\n. A simple path from node \n    2\n to node \n    4\n: \n    2 \n    \u2192\n    1 \n    \u2192 4\n has alternating function \n    A(2,4) = 1 \n    \u00b7 (1)+(-1)\n    \n    \u00b7 (-4)+1 \n    \u00b7 (-2) = 3\n. A simple path from node \n    1\n to node\n\n    1\n has a single node \n    1\n, so \n    A(1,1) = 1 \n    \u00b7 (-4) = -4\n.\nSimilarly, \n    A(2, 1) = 5\n, \n    A(3, 1) = 9\n, \n    A(4, 2) = 3\n, \n    A(1, 4)\n    = -2\n, \n    A(4, 1) = 2\n, \n    A(2, 2) = 1\n, \n    A(3, 3) = 5\n, \n    A(4, 4) =\n    -2\n, \n    A(3, 4) = 7\n, \n    A(4, 3) = 7\n, \n    A(2, 3) = 10\n, \n    A(3, 2) =\n    10\n. So the answer is \n    (-5) + (-9) + 3 + (-4) + 5 + 9 + 3 + (-2) + 2 + 1 +\n    5 + (-2) + 7 + 7 + 10 + 10 = 40\n. Similarly \n    A(1,4)=-2, A(2,2)=1,\n    A(2,1)=5, A(2,3)=10, A(3,3)=5, A(3,1)=9, A(3,2)=10, A(3,4)=7, A(4,4)=-2,\n    A(4,1)=2, A(4,2)=3 , A(4,3)=7\n which sums upto 40.\n\n",
        "cf_contest_id": 960,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dfs and similar",
            "divide and conquer",
            "dp",
            "probabilities",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n-4 1 5 -2\r\n1 2\r\n1 3\r\n1 4\r\n",
                "40"
            ],
            [
                "8\r\n-2 6 -4 -4 -9 -3 -7 23\r\n8 2\r\n2 3\r\n1 4\r\n6 5\r\n7 6\r\n4 7\r\n5 8\r\n",
                "4"
            ]
        ],
        "private_cases": [
            [
                "15\r\n-4 6 1 6 -9 -8 -10 9 -2 -9 7 2 -3 1 13\r\n11 2\r\n10 3\r\n15 4\r\n7 5\r\n2 6\r\n9 7\r\n6 8\r\n12 9\r\n4 10\r\n1 11\r\n3 12\r\n8 13\r\n5 14\r\n13 15\r\n",
                "128"
            ],
            [
                "20\r\n15 -37 -17 -23 -27 8 -12 35 23 -29 -15 -4 -21 34 -27 -16 -13 -44 -20 190\r\n7 2\r\n5 3\r\n19 4\r\n14 5\r\n16 6\r\n11 7\r\n2 8\r\n8 9\r\n6 10\r\n4 11\r\n18 12\r\n17 13\r\n9 14\r\n12 15\r\n1 16\r\n15 17\r\n20 18\r\n13 19\r\n10 20\r\n",
                "2318"
            ],
            [
                "30\r\n45 50 -45 -28 21 -38 11 -22 -19 -19 -17 -2 8 13 31 -45 -3 -39 -36 43 47 33 -10 -41 -8 37 30 -2 0 5\r\n18 2\r\n14 3\r\n21 4\r\n22 5\r\n30 6\r\n22 7\r\n13 8\r\n29 9\r\n27 10\r\n20 11\r\n14 12\r\n15 13\r\n26 14\r\n5 15\r\n30 16\r\n1 17\r\n19 18\r\n5 19\r\n4 20\r\n25 21\r\n6 22\r\n30 23\r\n10 24\r\n17 25\r\n22 26\r\n20 27\r\n7 28\r\n24 29\r\n10 30\r\n",
                "999997285"
            ],
            [
                "50\r\n25 23 0 17 47 -40 -35 -13 20 46 -16 20 5 4 43 -17 42 -11 30 -34 25 -37 17 48 -8 -49 50 47 20 45 -15 35 22 41 8 -40 -37 -25 -42 -9 48 48 33 -15 22 38 -37 14 25 -428\r\n43 2\r\n42 3\r\n34 4\r\n15 5\r\n28 6\r\n20 7\r\n29 8\r\n4 9\r\n40 10\r\n23 11\r\n3 12\r\n9 13\r\n38 14\r\n32 15\r\n26 16\r\n35 17\r\n48 18\r\n47 19\r\n44 20\r\n46 21\r\n1 22\r\n50 23\r\n2 24\r\n6 25\r\n39 26\r\n49 27\r\n14 28\r\n5 29\r\n19 30\r\n17 31\r\n27 32\r\n8 33\r\n12 34\r\n7 35\r\n41 36\r\n45 37\r\n13 38\r\n22 39\r\n30 40\r\n16 41\r\n37 42\r\n18 43\r\n24 44\r\n31 45\r\n36 46\r\n21 47\r\n11 48\r\n10 49\r\n33 50\r\n",
                "999997857"
            ],
            [
                "50\r\n-71 19 -69 -27 21 -6 69 9 -2 10 -66 -4 11 59 2 -63 28 74 -67 48 75 -27 24 65 -84 52 36 -56 21 62 83 32 4 -24 -9 43 -53 41 -42 -10 -35 -51 -24 77 -55 -57 57 41 -88 -73\r\n1 2\r\n44 3\r\n42 4\r\n26 5\r\n38 6\r\n17 7\r\n19 8\r\n32 9\r\n6 10\r\n27 11\r\n40 12\r\n33 13\r\n31 14\r\n4 15\r\n45 16\r\n32 17\r\n16 18\r\n35 19\r\n21 20\r\n47 21\r\n48 22\r\n43 23\r\n22 24\r\n31 25\r\n34 26\r\n30 27\r\n20 28\r\n13 29\r\n23 30\r\n3 31\r\n10 32\r\n28 33\r\n15 34\r\n50 35\r\n2 36\r\n18 37\r\n14 38\r\n8 39\r\n49 40\r\n9 41\r\n37 42\r\n36 43\r\n29 44\r\n7 45\r\n37 46\r\n12 47\r\n5 48\r\n39 49\r\n11 50\r\n",
                "1342"
            ],
            [
                "2\r\n461663513 -693562127\r\n1 2\r\n",
                "768101393"
            ],
            [
                "2\r\n-939812330 -324524739\r\n1 2\r\n",
                "735662945"
            ],
            [
                "2\r\n-289410670 -7364852\r\n1 2\r\n",
                "703224485"
            ]
        ]
    }
]