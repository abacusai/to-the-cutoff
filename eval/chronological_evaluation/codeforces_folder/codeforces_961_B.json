[
    {
        "name": "Lecture Sleep",
        "description": "Your friend Mishka and you attend a calculus lecture. Lecture lasts n minutes.\nLecturer tells ai theorems during the i-th minute. Mishka is really interested\nin calculus, though it is so hard to stay awake for all the time of lecture.\nYou are given an array t of Mishka's behavior. If Mishka is asleep during the\ni-th minute of the lecture then ti will be equal to 0, otherwise it will be\nequal to 1. When Mishka is awake he writes down all the theorems he is being\ntold \u2014 ai during the i-th minute. Otherwise he writes nothing. You know some\nsecret technique to keep Mishka awake for k minutes straight. However you can\nuse it only once. You can start using it at the beginning of any minute\nbetween 1 and n - k + 1. If you use it on some minute i then Mishka will be\nawake during minutes j such that and will write down all the theorems lecturer\ntells. You task is to calculate the maximum number of theorems Mishka will be\nable to write down if you use your technique only once to wake him up. Input\nThe first line of the input contains two integer numbers n and k (1 \u2264 k \u2264 n \u2264\n10^5) \u2014 the duration of the lecture in minutes and the number of minutes you\ncan keep Mishka awake. The second line of the input contains n integer numbers\na1, a2, ... an (1 \u2264 ai \u2264 10^4) \u2014 the number of theorems lecturer tells during\nthe i-th minute. The third line of the input contains n integer numbers t1,\nt2, ... tn (0 \u2264 ti \u2264 1) \u2014 type of Mishka's behavior at the i-th minute of the\nlecture. Output Print only one integer \u2014 the maximum number of theorems Mishka\nwill be able to write down if you use your technique only once to wake him up.\nExample Input 6 3 1 3 5 2 5 4 1 1 0 1 0 0 Output 16 Note In the sample case\nthe better way is to use the secret technique at the beginning of the third\nminute. Then the number of theorems Mishka will be able to write down will be\nequal to 16.\n\n",
        "cf_contest_id": 961,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "implementation",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 3\r\n1 3 5 2 5 4\r\n1 1 0 1 0 0\r\n",
                "16\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 3\r\n1 9999 10000 10000 10000\r\n0 0 0 0 0\r\n",
                "30000\r\n"
            ],
            [
                "3 3\r\n10 10 10\r\n1 1 0\r\n",
                "30\r\n"
            ],
            [
                "1 1\r\n423\r\n0\r\n",
                "423\r\n"
            ],
            [
                "6 6\r\n1 3 5 2 5 4\r\n1 1 0 1 0 0\r\n",
                "20\r\n"
            ],
            [
                "5 2\r\n1 2 3 4 20\r\n0 0 0 1 0\r\n",
                "24\r\n"
            ],
            [
                "3 1\r\n1 2 3\r\n0 0 1\r\n",
                "5\r\n"
            ],
            [
                "4 2\r\n4 5 6 8\r\n1 0 1 0\r\n",
                "18\r\n"
            ],
            [
                "6 3\r\n1 3 5 2 1 15\r\n1 1 0 1 0 0\r\n",
                "22\r\n"
            ],
            [
                "5 5\r\n1 2 3 4 5\r\n1 1 1 0 1\r\n",
                "15\r\n"
            ],
            [
                "3 3\r\n3 3 3\r\n1 0 1\r\n",
                "9\r\n"
            ],
            [
                "5 5\r\n500 44 3 4 50\r\n1 0 0 0 0\r\n",
                "601\r\n"
            ],
            [
                "2 2\r\n3 2\r\n1 0\r\n",
                "5\r\n"
            ],
            [
                "7 6\r\n4 9 1 7 1 8 4\r\n0 0 0 1 0 1 0\r\n",
                "30\r\n"
            ],
            [
                "4 3\r\n6 5 9 6\r\n1 1 0 1\r\n",
                "26\r\n"
            ],
            [
                "2 1\r\n3 2\r\n0 0\r\n",
                "3\r\n"
            ],
            [
                "1 1\r\n10\r\n0\r\n",
                "10\r\n"
            ],
            [
                "2 1\r\n3 2\r\n1 0\r\n",
                "5\r\n"
            ],
            [
                "4 2\r\n3 6 7 2\r\n0 0 1 1\r\n",
                "18\r\n"
            ],
            [
                "10 5\r\n3 5 9 2 5 9 3 8 8 1\r\n0 1 1 1 0 1 0 0 0 0\r\n",
                "49\r\n"
            ],
            [
                "10 4\r\n9 5 6 4 3 9 5 1 10 7\r\n0 0 0 0 0 0 1 0 0 1\r\n",
                "36\r\n"
            ],
            [
                "9 8\r\n3 3 7 7 1 9 10 7 1\r\n1 1 1 1 1 1 1 1 1\r\n",
                "48\r\n"
            ],
            [
                "2 1\r\n3 4\r\n0 0\r\n",
                "4\r\n"
            ],
            [
                "2 1\r\n3 2\r\n0 1\r\n",
                "5\r\n"
            ],
            [
                "10 1\r\n6 6 8 7 6 6 3 2 5 6\r\n0 0 1 0 0 1 0 1 1 1\r\n",
                "34\r\n"
            ],
            [
                "3 2\r\n10 10 6\r\n0 0 0\r\n",
                "20\r\n"
            ],
            [
                "6 3\r\n1 3 5 2 5 4\r\n1 1 1 1 1 1\r\n",
                "20\r\n"
            ],
            [
                "10 5\r\n1 1 1 1 1 1 1 1 10000 1\r\n1 1 1 1 1 1 1 1 0 1\r\n",
                "10009\r\n"
            ]
        ]
    }
]