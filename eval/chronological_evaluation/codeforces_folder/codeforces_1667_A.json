[
    {
        "name": "Make it Increasing",
        "description": "You are given an array \n    a\n consisting of \n    n\n positive integers, and an\narray \n    b\n, with length \n    n\n. Initially \n    b_i=0\n for each \n    1 \n    \u2264\n    i \n    \u2264 n\n. In one move you can choose an integer \n    i\n (\n    1 \n    \u2264 i\n    \n    \u2264 n\n), and add \n    a_i\n to \n    b_i\n or subtract \n    a_i\n from\n\n    b_i\n. What is the minimum number of moves needed to make \n    b\n\nincreasing (that is, every element is strictly greater than every element\nbefore it)? Input The first line contains a single integer \n    n\n (\n    2\n    \n    \u2264 n \n    \u2264 5000\n). The second line contains \n    n\n integers,\n\n    a_1\n, \n    a_2\n, ..., \n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the\nelements of the array \n    a\n. Output Print a single integer, the minimum\nnumber of moves to make \n    b\n increasing. Examples Input 5 1 2 3 4 5 Output\n4 Input 7 1 2 1 2 1 2 1 Output 10 Input 8 1 8 2 7 3 6 4 5 Output 16 Note\nExample \n    1\n: you can subtract \n    a_1\n from \n    b_1\n, and add \n    a_3\n,\n\n    a_4\n, and \n    a_5\n to \n    b_3\n, \n    b_4\n, and \n    b_5\n respectively.\nThe final array will be [\n    -1\n, \n    0\n, \n    3\n, \n    4\n, \n    5\n] after\n\n    4\n moves. Example \n    2\n: you can reach [\n    -3\n, \n    -2\n, \n    -1\n,\n\n    0\n, \n    1\n, \n    2\n, \n    3\n] in \n    10\n moves.\n\n",
        "cf_contest_id": 1667,
        "cf_index": "A",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2 3 4 5\r\n",
                "4\r\n"
            ],
            [
                "7\r\n1 2 1 2 1 2 1\r\n",
                "10\r\n"
            ],
            [
                "8\r\n1 8 2 7 3 6 4 5\r\n",
                "16\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n9 6 8 5 5 2 8 9 2 2\r\n",
                "20\r\n"
            ],
            [
                "100\r\n9 9 72 55 14 8 55 58 35 67 3 18 73 92 41 49 15 60 18 66 9 26 97 47 43 88 71 97 19 34 48 96 79 53 8 24 69 49 12 23 77 12 21 88 66 9 29 13 61 69 54 77 41 13 4 68 37 74 7 6 29 76 55 72 89 4 78 27 29 82 18 83 12 4 32 69 89 85 66 13 92 54 38 5 26 56 17 55 29 4 17 39 29 94 3 67 85 98 21 14\r\n",
                "3141\r\n"
            ],
            [
                "100\r\n100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1 100 1\r\n",
                "60675\r\n"
            ]
        ]
    }
]