[
    {
        "name": "Lightsabers (medium)",
        "description": "There is unrest in the Galactic Senate. Several thousand solar systems have\ndeclared their intentions to leave the Republic. Master Heidi needs to select\nthe Jedi Knights who will go on peacekeeping missions throughout the galaxy.\nIt is well-known that the success of any peacekeeping mission depends on the\ncolors of the lightsabers of the Jedi who will go on that mission. Heidi has n\nJedi Knights standing in front of her, each one with a lightsaber of one of m\npossible colors. She knows that for the mission to be the most effective, she\nneeds to select some contiguous interval of knights such that there are\nexactly k1 knights with lightsabers of the first color, k2 knights with\nlightsabers of the second color, ..., km knights with lightsabers of the m-th\ncolor. However, since the last time, she has learned that it is not always\npossible to select such an interval. Therefore, she decided to ask some Jedi\nKnights to go on an indefinite unpaid vacation leave near certain pits on\nTatooine, if you know what I mean. Help Heidi decide what is the minimum\nnumber of Jedi Knights that need to be let go before she is able to select the\ndesired interval from the subsequence of remaining knights. Input The first\nline of the input contains n (1 \u2264 n \u2264 2\u00b710^5) and m (1 \u2264 m \u2264 n). The second\nline contains n integers in the range 1, 2, ..., m representing colors of\nthe lightsabers of the subsequent Jedi Knights. The third line contains m\nintegers k1, k2, ..., km (with ) \u2013 the desired counts of Jedi Knights with\nlightsabers of each color from 1 to m. Output Output one number: the minimum\nnumber of Jedi Knights that need to be removed from the sequence so that, in\nwhat remains, there is an interval with the prescribed counts of lightsaber\ncolors. If this is not possible, output - 1. Example Input 8 3 3 3 1 2 2 1 1 3\n3 1 1 Output 1\n\n",
        "cf_contest_id": 958,
        "cf_index": "F2",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8 3\r\n3 3 1 2 2 1 1 3\r\n3 1 1\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "6 5\r\n1 2 4 2 4 3\r\n0 0 1 0 0\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "2 1\r\n1 1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "2 1\r\n1 1\r\n2\r\n",
                "0\r\n"
            ],
            [
                "2 2\r\n1 2\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "2 2\r\n2 2\r\n1 1\r\n",
                "-1\r\n"
            ],
            [
                "3 3\r\n3 3 2\r\n0 0 1\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\n4 4 4 4\r\n0 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "2 2\r\n1 1\r\n1 0\r\n",
                "0\r\n"
            ],
            [
                "3 3\r\n3 3 3\r\n0 0 1\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\n2 4 4 3\r\n0 1 0 0\r\n",
                "0\r\n"
            ],
            [
                "2 2\r\n2 1\r\n0 1\r\n",
                "0\r\n"
            ],
            [
                "3 3\r\n3 1 1\r\n1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "4 4\r\n1 3 1 4\r\n1 0 0 1\r\n",
                "0\r\n"
            ],
            [
                "2 2\r\n2 1\r\n1 0\r\n",
                "0\r\n"
            ],
            [
                "3 3\r\n3 1 1\r\n2 0 0\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\n4 4 2 2\r\n1 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "2 2\r\n1 2\r\n0 2\r\n",
                "-1\r\n"
            ],
            [
                "3 3\r\n3 2 3\r\n0 2 1\r\n",
                "-1\r\n"
            ],
            [
                "4 4\r\n1 2 4 2\r\n0 0 1 0\r\n",
                "-1\r\n"
            ],
            [
                "4 4\r\n4 2 1 2\r\n1 2 0 1\r\n",
                "0\r\n"
            ],
            [
                "5 5\r\n4 4 2 4 2\r\n0 2 0 3 0\r\n",
                "0\r\n"
            ],
            [
                "6 6\r\n4 3 5 4 5 2\r\n0 1 0 1 2 0\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\n4 3 3 2\r\n0 0 2 0\r\n",
                "0\r\n"
            ],
            [
                "5 5\r\n3 4 5 1 4\r\n1 0 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "6 6\r\n1 1 3 2 2 2\r\n1 0 0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\n4 1 1 3\r\n2 0 0 1\r\n",
                "0\r\n"
            ],
            [
                "5 5\r\n3 4 1 1 5\r\n2 0 1 1 0\r\n",
                "0\r\n"
            ],
            [
                "6 6\r\n4 3 5 6 5 5\r\n0 0 1 1 0 0\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\n1 3 4 2\r\n1 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "5 5\r\n4 1 3 3 3\r\n0 0 0 1 0\r\n",
                "0\r\n"
            ],
            [
                "6 6\r\n6 2 6 2 5 4\r\n0 1 0 0 0 1\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\n3 2 1 3\r\n0 1 0 0\r\n",
                "0\r\n"
            ],
            [
                "5 5\r\n3 4 1 4 2\r\n1 0 0 1 0\r\n",
                "0\r\n"
            ],
            [
                "6 6\r\n4 1 6 6 3 5\r\n1 0 1 1 1 2\r\n",
                "0\r\n"
            ]
        ]
    }
]