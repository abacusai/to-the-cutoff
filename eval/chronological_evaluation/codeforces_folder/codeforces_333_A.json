[
    {
        "name": "Secrets",
        "description": "Gerald has been selling state secrets at leisure. All the secrets cost the\nsame: n marks. The state which secrets Gerald is selling, has no paper money,\nonly coins. But there are coins of all positive integer denominations that are\npowers of three: 1 mark, 3 marks, 9 marks, 27 marks and so on. There are no\ncoins of other denominations. Of course, Gerald likes it when he gets money\nwithout the change. And all buyers respect him and try to give the desired sum\nwithout change, if possible. But this does not always happen. One day an\nunlucky buyer came. He did not have the desired sum without change. Then he\ntook out all his coins and tried to give Gerald a larger than necessary sum\nwith as few coins as possible. What is the maximum number of coins he could\nget? The formal explanation of the previous paragraph: we consider all the\npossible combinations of coins for which the buyer can not give Gerald the sum\nof n marks without change. For each such combination calculate the minimum\nnumber of coins that can bring the buyer at least n marks. Among all\ncombinations choose the maximum of the minimum number of coins. This is the\nnumber we want. Input The single line contains a single integer n (1 \u2264 n \u2264\n10^17). Please, do not use the \nin \u0421++. It is preferred to use the cin, cout streams or the \nOutput In a single line print an integer: the maximum number of coins the\nunlucky buyer could have paid with. Examples Input 1 Output 1 Input 4 Output 2\nNote In the first test case, if a buyer has exactly one coin of at least 3\nmarks, then, to give Gerald one mark, he will have to give this coin. In this\nsample, the customer can not have a coin of one mark, as in this case, he will\nbe able to give the money to Gerald without any change. In the second test\ncase, if the buyer had exactly three coins of 3 marks, then, to give Gerald 4\nmarks, he will have to give two of these coins. The buyer cannot give three\ncoins as he wants to minimize the number of coins that he gives.\n\n",
        "cf_contest_id": 333,
        "cf_index": "A",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n",
                "1\r\n"
            ],
            [
                "4\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n",
                "1\r\n"
            ],
            [
                "8\r\n",
                "3\r\n"
            ],
            [
                "10\r\n",
                "4\r\n"
            ],
            [
                "100000000000000000\r\n",
                "33333333333333334\r\n"
            ],
            [
                "99999999999999999\r\n",
                "3703703703703704\r\n"
            ],
            [
                "50031545098999707\r\n",
                "1\r\n"
            ],
            [
                "16677181699666569\r\n",
                "1\r\n"
            ],
            [
                "72900000000000\r\n",
                "33333333334\r\n"
            ],
            [
                "99999999999999997\r\n",
                "33333333333333333\r\n"
            ],
            [
                "58061299250691018\r\n",
                "32\r\n"
            ],
            [
                "49664023559436051\r\n",
                "128191526\r\n"
            ],
            [
                "66708726798666276\r\n",
                "2\r\n"
            ],
            [
                "29442431889534807\r\n",
                "48\r\n"
            ],
            [
                "70414767176369958\r\n",
                "13\r\n"
            ],
            [
                "93886356235159944\r\n",
                "51\r\n"
            ],
            [
                "97626528902553453\r\n",
                "551104613133\r\n"
            ],
            [
                "52013157885656046\r\n",
                "880847395988\r\n"
            ],
            [
                "37586570003500923\r\n",
                "548\r\n"
            ],
            [
                "34391854792828422\r\n",
                "582429080812\r\n"
            ],
            [
                "205891132094649\r\n",
                "1\r\n"
            ],
            [
                "243\r\n",
                "1\r\n"
            ],
            [
                "5559060566555523\r\n",
                "1\r\n"
            ],
            [
                "81\r\n",
                "1\r\n"
            ],
            [
                "108\r\n",
                "2\r\n"
            ],
            [
                "2\r\n",
                "1\r\n"
            ],
            [
                "1129718145924\r\n",
                "2\r\n"
            ]
        ]
    }
]