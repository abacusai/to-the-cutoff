[
    {
        "name": "How Many Paths?",
        "description": "You are given a directed graph \n    G\n which can contain loops (edges from a\nvertex to itself). Multi-edges are absent in \n    G\n which means that for all\nordered pairs \n    (u, v)\n exists at most one edge from \n    u\n to \n    v\n.\nVertices are numbered from \n    1\n to \n    n\n. A path from \n    u\n to \n    v\n\nis a sequence of edges such that: vertex \n    u\n is the start of the first\nedge in the path; vertex \n    v\n is the end of the last edge in the path; for\nall pairs of adjacent edges next edge starts at the vertex that the previous\nedge ends on. We will assume that the empty sequence of edges is a path from\n\n    u\n to \n    u\n. For each vertex \n    v\n output one of four values:\n\n    0\n, if there are no paths from \n    1\n to \n    v\n; \n    1\n, if there is\nonly one path from \n    1\n to \n    v\n; \n    2\n, if there is more than one path\nfrom \n    1\n to \n    v\n and the number of paths is finite; \n    -1\n, if the\nnumber of paths from \n    1\n to \n    v\n is infinite. Let's look at the example\nshown in the figure. Then: the answer for vertex \n    1\n is \n    1\n: there is\nonly one path from \n    1\n to \n    1\n (path with length \n    0\n); the answer\nfor vertex \n    2\n is \n    0\n: there are no paths from \n    1\n to \n    2\n; the\nanswer for vertex \n    3\n is \n    1\n: there is only one path from \n    1\n to\n\n    3\n (it is the edge \n    (1, 3)\n); the answer for vertex \n    4\n is\n\n    2\n: there are more than one paths from \n    1\n to \n    4\n and the number\nof paths are finite (two paths: \n    [(1, 3), (3, 4)]\n and \n    [(1, 4)]\n);\nthe answer for vertex \n    5\n is \n    -1\n: the number of paths from \n    1\n to\n\n    5\n is infinite (the loop can be used in a path many times); the answer\nfor vertex \n    6\n is \n    -1\n: the number of paths from \n    1\n to \n    6\n is\ninfinite (the loop can be used in a path many times). Input The first contains\nan integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases in\nthe input. Then \n    t\n test cases follow. Before each test case, there is an\nempty line. The first line of the test case contains two integers \n    n\n and\n\n    m\n (\n    1 \n    \u2264 n \n    \u2264 4 \n    \u00b7 10^5, 0 \n    \u2264 m \n    \u2264 4 \n    \u00b7 10^5\n)\n\u2014 numbers of vertices and edges in graph respectively. The next \n    m\n lines\ncontain edges descriptions. Each line contains two integers \n    a_i\n,\n\n    b_i\n (\n    1 \n    \u2264 a_i, b_i \n    \u2264 n\n) \u2014 the start and the end of the\n\n    i\n-th edge. The vertices of the graph are numbered from \n    1\n to\n\n    n\n. The given graph can contain loops (it is possible that \n    a_i =\n    b_i\n), but cannot contain multi-edges (it is not possible that \n    a_i =\n    a_j\n and \n    b_i = b_j\n for \n    i \n     j\n). The sum of \n    n\n over all\ntest cases does not exceed \n    4 \n    \u00b7 10^5\n. Similarly, the sum of \n    m\n\nover all test cases does not exceed \n    4 \n    \u00b7 10^5\n. Output Output\n\n    t\n lines. The \n    i\n-th line should contain an answer for the \n    i\n-th\ntest case: a sequence of \n    n\n integers from \n    -1\n to \n    2\n. Example\nInput 5 6 7 1 4 1 3 3 4 4 5 2 1 5 5 5 6 1 0 3 3 1 2 2 3 3 1 5 0 4 4 1 2 2 3 1\n4 4 3 Output 1 0 1 2 -1 -1 1 -1 -1 -1 1 0 0 0 0 1 1 2 1\n\n",
        "cf_contest_id": 1547,
        "cf_index": "G",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n\r\n6 7\r\n1 4\r\n1 3\r\n3 4\r\n4 5\r\n2 1\r\n5 5\r\n5 6\r\n\r\n1 0\r\n\r\n3 3\r\n1 2\r\n2 3\r\n3 1\r\n\r\n5 0\r\n\r\n4 4\r\n1 2\r\n2 3\r\n1 4\r\n4 3\r\n",
                "1 0 1 2 -1 -1\r\n1\r\n-1 -1 -1\r\n1 0 0 0 0\r\n1 1 2 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n\r\n6 6\r\n1 2\r\n2 3\r\n3 4\r\n3 5\r\n4 2\r\n4 6\r\n",
                "1 -1 -1 -1 -1 -1\r\n"
            ],
            [
                "1\r\n\r\n6 7\r\n1 2\r\n2 3\r\n2 4\r\n3 1\r\n4 5\r\n5 6\r\n6 4\r\n",
                "-1 -1 -1 -1 -1 -1\r\n"
            ],
            [
                "1\r\n\r\n10 19\r\n1 4\r\n2 6\r\n2 7\r\n2 9\r\n3 6\r\n3 8\r\n4 5\r\n5 10\r\n6 2\r\n6 7\r\n7 2\r\n7 3\r\n7 8\r\n8 9\r\n9 2\r\n9 6\r\n9 7\r\n10 1\r\n10 8\r\n",
                "-1 -1 -1 -1 -1 -1 -1 -1 -1 -1\r\n"
            ],
            [
                "1\r\n\r\n10 20\r\n1 6\r\n1 7\r\n1 8\r\n2 4\r\n2 6\r\n3 8\r\n4 3\r\n5 1\r\n5 2\r\n5 4\r\n6 10\r\n7 1\r\n7 3\r\n7 5\r\n8 2\r\n8 6\r\n10 1\r\n10 4\r\n10 8\r\n10 9\r\n",
                "-1 -1 -1 -1 -1 -1 -1 -1 -1 -1\r\n"
            ],
            [
                "1\r\n\r\n10 14\r\n1 4\r\n2 1\r\n2 5\r\n4 3\r\n4 9\r\n5 1\r\n5 9\r\n6 5\r\n6 10\r\n7 8\r\n8 3\r\n8 7\r\n9 2\r\n10 6\r\n",
                "-1 -1 -1 -1 -1 0 0 0 -1 0\r\n"
            ],
            [
                "1\r\n\r\n1 0\r\n",
                "1\r\n"
            ],
            [
                "1\r\n\r\n1 1\r\n1 1\r\n",
                "-1\r\n"
            ]
        ]
    }
]