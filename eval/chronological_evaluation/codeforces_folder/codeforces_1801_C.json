[
    {
        "name": "Music Festival",
        "description": "The boy Vitya loves to listen to music very much. He knows that \n    n\n albums\nare due to be released this Friday, \n    i\n-th of which contains \n    k_i\n\ntracks. Of course, Vitya has already listened to all the tracks, and knows\nthat in the \n    i\n-th album, the coolness of the \n    j\n-th track is equal to\n\n    a_i,j\n.Vitya has a friend Masha, whom he really wants to invite to the\nfestival, where his favorite bands perform. However, in order for a friend to\nagree, she must first evaluate the released novelties. Vitya knows that if\nMasha listens to a track that was cooler than all the previous ones, she will\nget 1 unit of impression. Unfortunately, albums can only be listened to in\ntheir entirety, without changing the songs in them in places. Help Vitya find\nsuch an order of albums so that Masha's impression turns out to be as much as\npossible, and she definitely went to the festival with him. Input Each test\nconsists of multiple test cases. The first line contains a single integer t\n(\n    1 \n    \u2264 t \n    \u2264 200\n     000\n) \u2014 the number of test cases. The description\nof test cases follows. The first line of each test case contains a single\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 200\n     000\n) \u2014 number of albums. The\nalbum descriptions follow. Each album description consists of two lines: The\nfirst line contains a single integer \n    k_i\n (\n    1 \n    \u2264 k_i \n    \u2264\n    200\n     000\n) \u2014 the number of tracks in the \n    i\nth album. The following\nline contains \n    k_i\n integers \n    a_i, 1,\n     a_i, 2,\n     a_i, 3,\n    \n    \u2026,\n     a_i, k_i\n (\n    1 \n    \u2264 a_i,j\n    \u2264 200\n     000\n) \u2014 the\ncoolness of the tracks in the \n    i\n album. Denote for \n    \u2211 k_i\n the\nsum of all \n    k_i\n. It is guaranteed that \n    \u2211 k_i \n    \u2264 200\n     000\n.\nOutput For each test case print the singular number \u2014 the maximum impression\nthat Masha can get. Example Input 2 4 5 4 9 4 6 8 1 7 2 8 6 1 1 4 2 3 4 2 1 8\n2 2 8 2 7 9 Output 4 4 Note In the first test example, the optimal order is\nlistening to the 4th, 2nd, 3rd and 1st albums. In this case, Masha will listen\nto the tracks in the following order: 1; 7; 8, 6; 4, 9, 4, 6, 8 and will\nreceive 4 units of impression. In the second test example, you must first\nlisten to the 1st, then the 4th, and in any order the 2nd and 3rd. In this\ncase, Masha will get the maximum impression, and for every song in the 1st and\n4th albums and nothing for the 2nd and 3rd.\n\n",
        "cf_contest_id": 1801,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n4\r\n5\r\n4 9 4 6 8\r\n1\r\n7\r\n2\r\n8 6\r\n1\r\n1\r\n4\r\n2\r\n3 4\r\n2\r\n1 8\r\n2\r\n2 8\r\n2\r\n7 9\r\n",
                "4\r\n4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n30\r\n3\r\n70 71 85\r\n3\r\n70 72 85\r\n3\r\n70 73 85\r\n3\r\n70 74 85\r\n3\r\n70 75 85\r\n3\r\n70 76 85\r\n3\r\n70 77 85\r\n3\r\n70 78 85\r\n3\r\n70 79 85\r\n3\r\n70 80 85\r\n3\r\n70 81 85\r\n3\r\n70 82 85\r\n3\r\n70 83 85\r\n3\r\n70 84 85\r\n4\r\n70 84 85 86\r\n3\r\n70 71 88\r\n3\r\n70 72 88\r\n3\r\n70 73 88\r\n3\r\n70 74 88\r\n3\r\n70 75 88\r\n3\r\n70 76 88\r\n3\r\n70 77 88\r\n3\r\n70 78 88\r\n3\r\n70 79 88\r\n3\r\n70 80 88\r\n3\r\n70 81 88\r\n3\r\n70 82 88\r\n3\r\n70 83 88\r\n3\r\n70 84 88\r\n4\r\n70 87 88 89\r\n",
                "7\r\n"
            ]
        ]
    }
]