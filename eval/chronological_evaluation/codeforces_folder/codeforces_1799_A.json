[
    {
        "name": "Recent Actions",
        "description": "On Codeforces the \"Recent Actions\" field shows the last \n    n\n posts with\nrecent actions. Initially, there are posts \n    1, 2, \n    \u2026, n\n in the\nfield (this is in order from top to down). Also there are infinitely many\nposts not in the field, numbered with integers \n    n + 1, n + 2, \n    \u2026\n.\nWhen recent action happens in the post \n    p\n: If it is in the \"Recent\nActions\" field, it moves from its position to the top position. Otherwise, it\nis added to the top position, and the post on the down position is removed\nfrom the \"Recent Actions\" field. You know, that the next \n    m\n recent\nactions will happen in the posts \n    p_1, p_2, \n    \u2026, p_m\n (\n    n + 1\n    \n    \u2264 p_i \n    \u2264 n + m\n) in the moments of time \n    1, 2, \n    \u2026, m\n.\nNote, that recent actions only happen with posts with numbers \n    \u2265 n +\n    1\n. For each post \n    i\n (\n    1 \n    \u2264 i \n    \u2264 n\n), find the first time\nit will be removed from the \"Recent Actions\" field or say, that it won't be\nremoved. Input The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^4\n) \u2014 the number of test cases. Descriptions of test cases follow.\nThe first line of each test case contains two integers \n    n\n, \n    m\n (\n    1\n    \n    \u2264 n, m \n    \u2264 5 \n    \u00b7 10^4\n) \u2014 the size of the \"Recent Actions\" field\nand the number of actions. The next line contains \n    m\n integers \n    p_1,\n    p_2, \n    \u2026, p_m\n (\n    n + 1 \n    \u2264 p_i \n    \u2264 n + m\n). It is guaranteed,\nthat the sum of \n    n\n and the sum of \n    m\n for all test cases does not\nexceed \n    5 \n    \u00b7 10^4\n. Output For each test case print \n    n\n integers\n\n    t_1, t_2, \n    \u2026, t_n\n, where \n    t_i=-1\n if the post \n    i\n won't be\nremoved or \n    t_i\n equals to the first moment of time the post \n    i\n will\nbe removed (\n    1 \n    \u2264 t_i \n    \u2264 m\n). Example Input 10 1 1 2 3 2 5 4 4 5 5\n9 9 5 7 5 5 6 7 8 9 10 3 4 4 4 4 4 4 4 5 5 6 6 3 5 4 5 5 5 4 4 20 5 5 24 24 24\n5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 5 7 7 8 7 11 7 12 10 6 7 8 11 7 8 8 8\n12 Output 1 -1 2 1 -1 5 2 1 5 4 3 2 1 -1 -1 1 -1 -1 3 1 -1 2 1 8 7 3 1 7 6 4 2\n1 -1 -1 7 3 2 1 Note In the first test case, the only post \n    1\n will be\nremoved at the moment \n    1\n and replaced by the post \n    2\n. In the second\ntest case the \"Recent Actions\" field will be (given an order from top to\ndown): Before moment \n    1\n: \n    [1, 2, 3]\n, after moment \n    1\n: \n    [5, 1,\n    2]\n. Post number \n    3\n was removed. Before moment \n    2\n: \n    [5, 1,\n    2]\n, after moment \n    2\n: \n    [4, 5, 1]\n. Post number \n    2\n was removed.\nPost number \n    1\n won't be removed. In the third test case the \"Recent\nActions\" field will be (given an order from top to down): Before moment\n\n    1\n: \n    [1, 2, 3, 4]\n, after moment \n    1\n: \n    [5, 1, 2, 3]\n. Post\nnumber \n    4\n was removed. Before moment \n    2\n: \n    [5, 1, 2, 3]\n, after\nmoment \n    2\n: \n    [9, 5, 1, 2]\n. Post number \n    3\n was removed. Before\nmoment \n    3\n: \n    [9, 5, 1, 2]\n, after moment \n    3\n: \n    [9, 5, 1, 2]\n.\nNothing was changed. Before moment \n    4\n: \n    [9, 5, 1, 2]\n, after moment\n\n    4\n: \n    [5, 9, 1, 2]\n. The order was changed. Before moment \n    5\n:\n\n    [5, 9, 1, 2]\n, after moment \n    5\n: \n    [7, 5, 9, 1]\n. Post number\n\n    2\n was removed. Post number \n    1\n won't be removed.\n\n",
        "cf_contest_id": 1799,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10\r\n1 1\r\n2\r\n3 2\r\n5 4\r\n4 5\r\n5 9 9 5 7\r\n5 5\r\n6 7 8 9 10\r\n3 4\r\n4 4 4 4\r\n4 4\r\n5 5 6 6\r\n3 5\r\n4 5 5 5 4\r\n4 20\r\n5 5 24 24 24 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20\r\n5 7\r\n7 8 7 11 7 12 10\r\n6 7\r\n8 11 7 8 8 8 12\r\n",
                "1\r\n-1 2 1\r\n-1 5 2 1\r\n5 4 3 2 1\r\n-1 -1 1\r\n-1 -1 3 1\r\n-1 2 1\r\n8 7 3 1\r\n7 6 4 2 1\r\n-1 -1 7 3 2 1\r\n"
            ]
        ],
        "private_cases": []
    }
]