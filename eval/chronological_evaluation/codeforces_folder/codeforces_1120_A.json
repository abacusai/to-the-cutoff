[
    {
        "name": "Diana and Liana",
        "description": "At the first holiday in spring, the town Shortriver traditionally conducts a\nflower festival. Townsfolk wear traditional wreaths during these festivals.\nEach wreath contains exactly \n    k\n flowers. The work material for the\nwreaths for all \n    n\n citizens of Shortriver is cut from the longest\nflowered liana that grew in the town that year. Liana is a sequence \n    a_1\n,\n\n    a_2\n, ..., \n    a_m\n, where \n    a_i\n is an integer that denotes the type\nof flower at the position \n    i\n. This year the liana is very long (\n    m\n    \n    \u2265 n \n    \u00b7 k\n), and that means every citizen will get a wreath. Very\nsoon the liana will be inserted into a special cutting machine in order to\nmake work material for wreaths. The machine works in a simple manner: it cuts\n\n    k\n flowers from the beginning of the liana, then another \n    k\n flowers\nand so on. Each such piece of \n    k\n flowers is called a workpiece. The\nmachine works until there are less than \n    k\n flowers on the liana. Diana\nhas found a weaving schematic for the most beautiful wreath imaginable. In\norder to weave it, \n    k\n flowers must contain flowers of types \n    b_1\n,\n\n    b_2\n, ..., \n    b_s\n, while other can be of any type. If a type appears\nin this sequence several times, there should be at least that many flowers of\nthat type as the number of occurrences of this flower in the sequence. The\norder of the flowers in a workpiece does not matter. Diana has a chance to\nremove some flowers from the liana before it is inserted into the cutting\nmachine. She can remove flowers from any part of the liana without breaking\nliana into pieces. If Diana removes too many flowers, it may happen so that\nsome of the citizens do not get a wreath. Could some flowers be removed from\nthe liana so that at least one workpiece would conform to the schematic and\nmachine would still be able to create at least \n    n\n workpieces? Input The\nfirst line contains four integers \n    m\n, \n    k\n, \n    n\n and \n    s\n (\n    1\n    \n    \u2264 n, k, m \n    \u2264 5 \n    \u00b7 10^5\n, \n    k \n    \u00b7 n \n    \u2264 m\n, \n    1 \n    \u2264 s\n    \n    \u2264 k\n): the number of flowers on the liana, the number of flowers in one\nwreath, the amount of citizens and the length of Diana's flower sequence\nrespectively. The second line contains \n    m\n integers \n    a_1\n, \n    a_2\n,\n..., \n    a_m\n (\n    1 \n    \u2264 a_i \n    \u2264 5 \n    \u00b7 10^5\n) \u2014 types of flowers on\nthe liana. The third line contains \n    s\n integers \n    b_1\n, \n    b_2\n, ...,\n\n    b_s\n (\n    1 \n    \u2264 b_i \n    \u2264 5 \n    \u00b7 10^5\n) \u2014 the sequence in Diana's\nschematic. Output If it's impossible to remove some of the flowers so that\nthere would be at least \n    n\n workpieces and at least one of them fullfills\nDiana's schematic requirements, output \n    -1\n. Otherwise in the first line\noutput one integer \n    d\n \u2014 the number of flowers to be removed by Diana. In\nthe next line output \n    d\n different integers \u2014 the positions of the flowers\nto be removed. If there are multiple answers, print any. Examples Input 7 3 2\n2 1 2 3 3 2 1 2 2 2 Output 1 4 Input 13 4 3 3 3 2 6 4 1 4 4 7 1 3 3 2 4 4 3 4\nOutput -1 Input 13 4 1 3 3 2 6 4 1 4 4 7 1 3 3 2 4 4 3 4 Output 9 1 2 3 4 5 9\n11 12 13 Note In the first example, if you don't remove any flowers, the\nmachine would put out two workpieces with flower types \n    [1, 2, 3]\n and\n\n    [3, 2, 1]\n. Those workpieces don't fit Diana's schematic. But if you\nremove flower on \n    4\n-th place, the machine would output workpieces \n    [1,\n    2, 3]\n and \n    [2, 1, 2]\n. The second workpiece fits Diana's schematic. In\nthe second example there is no way to remove flowers so that every citizen\ngets a wreath and Diana gets a workpiece that fits here schematic. In the\nthird example Diana is the only citizen of the town and that means she can,\nfor example, just remove all flowers except the ones she needs.\n\n",
        "cf_contest_id": 1120,
        "cf_index": "A",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 3 2 2\r\n1 2 3 3 2 1 2\r\n2 2\r\n",
                "1\r\n4 "
            ],
            [
                "13 4 3 3\r\n3 2 6 4 1 4 4 7 1 3 3 2 4\r\n4 3 4\r\n",
                "-1\r\n"
            ],
            [
                "13 4 1 3\r\n3 2 6 4 1 4 4 7 1 3 3 2 4\r\n4 3 4\r\n",
                "3\r\n2 3 5 "
            ]
        ],
        "private_cases": [
            [
                "1 1 1 1\r\n1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "1 1 1 1\r\n1\r\n2\r\n",
                "-1\r\n"
            ],
            [
                "2 1 1 1\r\n1 2\r\n2\r\n",
                "1\r\n1 "
            ],
            [
                "2 2 1 2\r\n1 2\r\n2 1\r\n",
                "0\r\n"
            ],
            [
                "10 3 3 2\r\n2 1 1 2 1 1 2 1 1 2\r\n2 2\r\n",
                "1\r\n2 "
            ],
            [
                "10 3 3 2\r\n2 2 3 2 1 3 1 3 2 3\r\n2 3\r\n",
                "1\r\n1 "
            ],
            [
                "100 15 6 10\r\n3 2 3 1 3 1 2 3 2 3 3 1 1 3 2 3 2 3 1 3 3 3 1 3 3 2 1 2 1 2 3 2 2 2 3 2 1 1 2 2 1 2 1 3 3 2 3 3 1 1 2 3 1 2 2 2 1 3 2 3 1 3 3 2 2 1 2 2 1 2 2 2 1 2 2 2 1 2 3 2 1 1 2 1 3 1 1 3 1 2 1 1 1 3 1 3 3 2 2 2\r\n1 2 3 1 1 1 2 2 1 3\r\n",
                "9\r\n1 2 3 5 7 8 10 11 14 "
            ],
            [
                "100 15 6 10\r\n6 9 1 7 6 4 1 9 3 2 4 6 2 5 3 10 9 2 9 1 6 5 6 2 3 10 7 10 7 4 5 4 4 4 4 7 1 10 8 4 8 3 10 10 7 4 4 10 6 1 8 5 4 6 2 3 10 3 2 5 7 5 6 10 10 3 4 5 4 3 3 1 7 8 10 10 10 10 8 3 7 4 2 1 8 6 5 6 5 8 7 9 2 1 5 2 4 6 10 8\r\n6 9 7 8 7 1 4 3 5 8\r\n",
                "7\r\n76 77 78 79 83 86 87 "
            ],
            [
                "2 1 1 1\r\n1 2\r\n1\r\n",
                "0\r\n"
            ],
            [
                "2 1 1 1\r\n1 2\r\n3\r\n",
                "-1\r\n"
            ],
            [
                "2 2 1 2\r\n1 2\r\n1 1\r\n",
                "-1\r\n"
            ],
            [
                "10 5 2 2\r\n2 2 2 2 2 1 1 1 1 1\r\n3 3\r\n",
                "-1\r\n"
            ],
            [
                "10 4 2 4\r\n3 2 3 3 3 1 3 3 2 3\r\n2 2 2 3\r\n",
                "-1\r\n"
            ],
            [
                "20 5 4 1\r\n3 4 1 2 6 1 4 4 1 2 5 6 2 6 3 4 2 2 5 2\r\n1\r\n",
                "0\r\n"
            ],
            [
                "20 5 4 2\r\n10 8 7 2 5 2 7 5 1 10 7 5 9 9 7 4 3 4 8 2\r\n7 8\r\n",
                "0\r\n"
            ],
            [
                "20 5 4 3\r\n1 1 3 2 2 1 2 2 3 1 3 1 3 3 1 3 3 1 2 3\r\n2 1 3\r\n",
                "0\r\n"
            ],
            [
                "4 2 1 2\r\n1 1 2 2\r\n2 2\r\n",
                "2\r\n1 2 "
            ],
            [
                "1 1 1 1\r\n500000\r\n500000\r\n",
                "0\r\n"
            ]
        ]
    }
]