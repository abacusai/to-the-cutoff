[
    {
        "name": "K Integers",
        "description": "You are given a permutation \n    p_1, p_2, \n    \u2026, p_n\n. In one move you can\nswap two adjacent values. You want to perform a minimum number of moves, such\nthat in the end there will exist a subsegment \n    1,2,\n    \u2026, k\n, in other\nwords in the end there should be an integer \n    i\n, \n    1 \n    \u2264 i \n    \u2264\n    n-k+1\n such that \n    p_i = 1, p_i+1 = 2, \n    \u2026, p_i+k-1=k\n. Let\n\n    f(k)\n be the minimum number of moves that you need to make a subsegment\nwith values \n    1,2,\n    \u2026,k\n appear in the permutation. You need to find\n\n    f(1), f(2), \n    \u2026, f(n)\n. Input The first line of input contains one\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 200\n     000\n): the number of elements\nin the permutation. The next line of input contains \n    n\n integers \n    p_1,\n    p_2, \n    \u2026, p_n\n: given permutation (\n    1 \n    \u2264 p_i \n    \u2264 n\n). Output\nPrint \n    n\n integers, the minimum number of moves that you need to make a\nsubsegment with values \n    1,2,\n    \u2026,k\n appear in the permutation, for\n\n    k=1, 2, \n    \u2026, n\n. Examples Input 5 5 4 3 2 1 Output 0 1 3 6 10 Input\n3 1 2 3 Output 0 0 0\n\n",
        "cf_contest_id": 1268,
        "cf_index": "C",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n5 4 3 2 1\r\n",
                "0 1 3 6 10 "
            ],
            [
                "3\r\n1 2 3\r\n",
                "0 0 0 "
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n",
                "0 "
            ],
            [
                "10\r\n5 1 6 2 8 3 4 10 9 7\r\n",
                "0 1 2 3 8 9 12 12 13 13 "
            ],
            [
                "100\r\n98 52 63 2 18 96 31 58 84 40 41 45 66 100 46 71 26 48 81 20 73 91 68 76 13 93 17 29 64 95 79 21 55 75 19 85 54 51 89 78 15 87 43 59 36 1 90 35 65 56 62 28 86 5 82 49 3 99 33 9 92 32 74 69 27 22 77 16 44 94 34 6 57 70 23 12 61 25 8 11 67 47 83 88 10 14 30 7 97 60 42 37 24 38 53 50 4 80 72 39\r\n",
                "0 42 52 101 101 117 146 166 166 188 194 197 249 258 294 298 345 415 445 492 522 529 540 562 569 628 628 644 684 699 765 766 768 774 791 812 828 844 863 931 996 1011 1036 1040 1105 1166 1175 1232 1237 1251 1282 1364 1377 1409 1445 1455 1461 1534 1553 1565 1572 1581 1664 1706 1715 1779 1787 1837 1841 1847 1909 1919 1973 1976 2010 2060 2063 2087 2125 2133 2192 2193 2196 2276 2305 2305 2324 2327 2352 2361 2417 2418 2467 2468 2510 2598 2599 2697 2697 2770 "
            ]
        ]
    }
]