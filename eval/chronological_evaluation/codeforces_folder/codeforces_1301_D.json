[
    {
        "name": "Time to Run",
        "description": "Bashar was practicing for the national programming contest. Because of sitting\ntoo much in front of the computer without doing physical movements and eating\na lot Bashar became much fatter. Bashar is going to quit programming after the\nnational contest and he is going to become an actor (just like his father), so\nhe should lose weight. In order to lose weight, Bashar is going to run for\n\n    k\n kilometers. Bashar is going to run in a place that looks like a grid\nof \n    n\n rows and \n    m\n columns. In this grid there are two one-way roads\nof one-kilometer length between each pair of adjacent by side cells, one road\nis going from the first cell to the second one, and the other road is going\nfrom the second cell to the first one. So, there are exactly \n    (4 n m - 2n -\n    2m)\n roads. Let's take, for example, \n    n = 3\n and \n    m = 4\n. In this\ncase, there are \n    34\n roads. It is the picture of this case (arrows\ndescribe roads): Bashar wants to run by these rules: He starts at the top-left\ncell in the grid; In one move Bashar may go up (the symbol 'U'), down (the\nsymbol 'D'), left (the symbol 'L') or right (the symbol 'R'). More formally,\nif he stands in the cell in the row \n    i\n and in the column \n    j\n, i.e. in\nthe cell \n    (i, j)\n he will move to: in the case 'U' to the cell \n    (i-1,\n    j)\n; in the case 'D' to the cell \n    (i+1, j)\n; in the case 'L' to the cell\n\n    (i, j-1)\n; in the case 'R' to the cell \n    (i, j+1)\n; He wants to run\nexactly \n    k\n kilometers, so he wants to make exactly \n    k\n moves; Bashar\ncan finish in any cell of the grid; He can't go out of the grid so at any\nmoment of the time he should be on some cell; Bashar doesn't want to get bored\nwhile running so he must not visit the same road twice. But he can visit the\nsame cell any number of times. Bashar asks you if it is possible to run by\nsuch rules. If it is possible, you should tell him how should he run. You\nshould give him \n    a\n steps to do and since Bashar can't remember too many\nsteps, \n    a\n should not exceed \n    3000\n. In every step, you should give\nhim an integer \n    f\n and a string of moves \n    s\n of length at most \n    4\n\nwhich means that he should repeat the moves in the string \n    s\n for \n    f\n\ntimes. He will perform the steps in the order you print them. For example, if\nthe steps are \n    2\n RUD, \n    3\n UUL then the moves he is going to move are\nRUD \n    +\n RUD \n    +\n UUL \n    +\n UUL \n    +\n UUL \n    =\n RUDRUDUULUULUUL.\nCan you help him and give him a correct sequence of moves such that the total\ndistance he will run is equal to \n    k\n kilometers or say, that it is\nimpossible? Input The only line contains three integers \n    n\n, \n    m\n and\n\n    k\n (\n    1 \n    \u2264 n, m \n    \u2264 500\n, \n    1 \n    \u2264 k \n    \u2264 10 ^9\n),\nwhich are the number of rows and the number of columns in the grid and the\ntotal distance Bashar wants to run. Output If there is no possible way to run\n\n    k\n kilometers, print \"NO\" (without quotes), otherwise print \"YES\"\n(without quotes) in the first line. If the answer is \"YES\", on the second line\nprint an integer \n    a\n (\n    1 \n    \u2264 a \n    \u2264 3000\n) \u2014 the number of steps,\nthen print \n    a\n lines describing the steps. To describe a step, print an\ninteger \n    f\n (\n    1 \n    \u2264 f \n    \u2264 10^9\n) and a string of moves \n    s\n\nof length at most \n    4\n. Every character in \n    s\n should be 'U', 'D', 'L'\nor 'R'. Bashar will start from the top-left cell. Make sure to move exactly\n\n    k\n moves without visiting the same road twice and without going outside\nthe grid. He can finish at any cell. We can show that if it is possible to run\nexactly \n    k\n kilometers, then it is possible to describe the path under\nsuch output constraints. Examples Input 3 3 4 Output YES 2 2 R 2 L Input 3 3\n1000000000 Output NO Input 3 3 8 Output YES 3 2 R 2 D 1 LLRR Input 4 4 9\nOutput YES 1 3 RLD Input 3 4 16 Output YES 8 3 R 3 L 1 D 3 R 1 D 1 U 3 L 1 D\nNote The moves Bashar is going to move in the first example are: \"RRLL\". It is\nnot possible to run \n    1000000000\n kilometers in the second example because\nthe total length of the roads is smaller and Bashar can't run the same road\ntwice. The moves Bashar is going to move in the third example are: \"RRDDLLRR\".\nThe moves Bashar is going to move in the fifth example are:\n\"RRRLLLDRRRDULLLD\". It is the picture of his run (the roads on this way are\nmarked with red and numbered in the order of his running):\n\n",
        "cf_contest_id": 1301,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graphs",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3 4\r\n",
                "YES\r\n2\r\n2 D\r\n2 R\r\n"
            ],
            [
                "3 3 1000000000\r\n",
                "NO\r\n"
            ],
            [
                "3 3 8\r\n",
                "YES\r\n5\r\n2 D\r\n2 R\r\n2 L\r\n1 U\r\n1 R\r\n"
            ],
            [
                "4 4 9\r\n",
                "YES\r\n3\r\n3 D\r\n3 R\r\n3 L\r\n"
            ],
            [
                "3 4 16\r\n",
                "YES\r\n7\r\n2 D\r\n3 R\r\n3 L\r\n1 U\r\n3 R\r\n3 L\r\n1 U\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 4 11\r\n",
                "YES\r\n5\r\n3 D\r\n3 R\r\n3 L\r\n1 U\r\n1 R\r\n"
            ],
            [
                "4 4 12\r\n",
                "YES\r\n5\r\n3 D\r\n3 R\r\n3 L\r\n1 U\r\n2 R\r\n"
            ],
            [
                "4 4 13\r\n",
                "YES\r\n5\r\n3 D\r\n3 R\r\n3 L\r\n1 U\r\n3 R\r\n"
            ],
            [
                "4 4 48\r\n",
                "YES\r\n20\r\n3 D\r\n3 R\r\n3 L\r\n1 U\r\n3 R\r\n3 L\r\n1 U\r\n3 R\r\n3 L\r\n1 U\r\n3 R\r\n3 D\r\n3 U\r\n1 L\r\n3 D\r\n3 U\r\n1 L\r\n3 D\r\n3 U\r\n1 L\r\n"
            ],
            [
                "4 4 49\r\n",
                "NO\r\n"
            ],
            [
                "500 500 998001\r\n",
                "NO\r\n"
            ],
            [
                "1 1 1\r\n",
                "NO\r\n"
            ],
            [
                "2 2 1\r\n",
                "YES\r\n1\r\n1 D\r\n"
            ],
            [
                "500 500 1000000000\r\n",
                "NO\r\n"
            ],
            [
                "2 1 2\r\n",
                "YES\r\n2\r\n1 D\r\n1 U\r\n"
            ],
            [
                "1 2 2\r\n",
                "YES\r\n2\r\n1 R\r\n1 L\r\n"
            ],
            [
                "2 2 8\r\n",
                "YES\r\n8\r\n1 D\r\n1 R\r\n1 L\r\n1 U\r\n1 R\r\n1 D\r\n1 U\r\n1 L\r\n"
            ],
            [
                "2 2 9\r\n",
                "NO\r\n"
            ],
            [
                "2 2 7\r\n",
                "YES\r\n7\r\n1 D\r\n1 R\r\n1 L\r\n1 U\r\n1 R\r\n1 D\r\n1 U\r\n"
            ],
            [
                "2 2 6\r\n",
                "YES\r\n6\r\n1 D\r\n1 R\r\n1 L\r\n1 U\r\n1 R\r\n1 D\r\n"
            ],
            [
                "2 2 5\r\n",
                "YES\r\n5\r\n1 D\r\n1 R\r\n1 L\r\n1 U\r\n1 R\r\n"
            ],
            [
                "2 2 4\r\n",
                "YES\r\n4\r\n1 D\r\n1 R\r\n1 L\r\n1 U\r\n"
            ],
            [
                "2 2 3\r\n",
                "YES\r\n3\r\n1 D\r\n1 R\r\n1 L\r\n"
            ],
            [
                "2 2 2\r\n",
                "YES\r\n2\r\n1 D\r\n1 R\r\n"
            ],
            [
                "3 2 14\r\n",
                "YES\r\n11\r\n2 D\r\n1 R\r\n1 L\r\n1 U\r\n1 R\r\n1 L\r\n1 U\r\n1 R\r\n2 D\r\n2 U\r\n1 L\r\n"
            ],
            [
                "2 3 14\r\n",
                "YES\r\n11\r\n1 D\r\n2 R\r\n2 L\r\n1 U\r\n2 R\r\n1 D\r\n1 U\r\n1 L\r\n1 D\r\n1 U\r\n1 L\r\n"
            ],
            [
                "161 277 177513\r\n",
                "NO\r\n"
            ],
            [
                "36 321 45511\r\n",
                "NO\r\n"
            ],
            [
                "35 337 46437\r\n",
                "NO\r\n"
            ],
            [
                "207 109 89621\r\n",
                "NO\r\n"
            ],
            [
                "472 382 719509\r\n",
                "NO\r\n"
            ]
        ]
    }
]