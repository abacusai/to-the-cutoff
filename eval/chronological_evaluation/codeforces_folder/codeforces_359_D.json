[
    {
        "name": "Pair of Numbers",
        "description": "Simon has an array a1, a2, ..., an, consisting of n positive integers. Today\nSimon asked you to find a pair of integers l, r (1 \u2264 l \u2264 r \u2264 n), such that the\nfollowing conditions hold: there is integer j (l \u2264 j \u2264 r), such that all\nintegers al, al + 1, ..., ar are divisible by aj; value r - l takes the\nmaximum value among all pairs for which condition 1 is true; Help Simon, find\nthe required pair of numbers (l, r). If there are multiple required pairs find\nall of them. Input The first line contains integer n (1 \u2264 n \u2264 3\u00b710^5). The\nsecond line contains n space-separated integers a1, a2, ..., an (1 \u2264 ai \u2264\n10^6). Output Print two integers in the first line \u2014 the number of required\npairs and the maximum value of r - l. On the following line print all l values\nfrom optimal pairs in increasing order. Examples Input 5 4 6 9 3 6 Output 1 3\n2 Input 5 1 3 5 7 9 Output 1 4 1 Input 5 2 3 5 7 11 Output 5 0 1 2 3 4 5 Note\nIn the first sample the pair of numbers is right, as numbers 6, 9, 3 are\ndivisible by 3. In the second sample all numbers are divisible by number 1. In\nthe third sample all numbers are prime, so conditions 1 and 2 are true only\nfor pairs of numbers (1, 1), (2, 2), (3, 3), (4, 4), (5, 5).\n\n",
        "cf_contest_id": 359,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "data structures",
            "math",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4 6 9 3 6\r\n",
                "1 3\r\n2\r\n"
            ],
            [
                "5\r\n1 3 5 7 9\r\n",
                "1 4\r\n1\r\n"
            ],
            [
                "5\r\n2 3 5 7 11\r\n",
                "5 0\r\n1 2 3 4 5\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1343\r\n",
                "1 0\r\n1\r\n"
            ],
            [
                "1\r\n1000000\r\n",
                "1 0\r\n1\r\n"
            ],
            [
                "1\r\n5\r\n",
                "1 0\r\n1\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1 0\r\n1\r\n"
            ],
            [
                "2\r\n1 1000000\r\n",
                "1 1\r\n1\r\n"
            ],
            [
                "2\r\n999999 1000000\r\n",
                "2 0\r\n1 2\r\n"
            ]
        ]
    }
]