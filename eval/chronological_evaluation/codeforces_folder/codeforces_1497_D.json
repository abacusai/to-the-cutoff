[
    {
        "name": "Genius",
        "description": "Please note the non-standard memory limit. There are \n    n\n problems numbered\nwith integers from \n    1\n to \n    n\n. \n    i\n-th problem has the complexity\n\n    c_i = 2^i\n, tag \n    tag_i\n and score \n    s_i\n. After solving the\nproblem \n    i\n it's allowed to solve problem \n    j\n if and only if\n\n    IQ < |c_i - c_j|\n and \n    tag_i \n    \u2260 tag_j\n. After solving it\nyour \n    IQ\n changes and becomes \n    IQ = |c_i - c_j|\n and\nyou gain \n    |s_i - s_j|\n points. Any problem can be the first. You can solve\nproblems in any order and as many times as you want. Initially your\n\n    IQ = 0\n. Find the maximum number of points that can be earned.\nInput The first line contains a single integer \n    t\n \n    (1 \n    \u2264 t \n    \u2264\n    100)\n \u2014 the number of test cases. The first line of each test case contains\nan integer \n    n\n \n    (1 \n    \u2264 n \n    \u2264 5000)\n \u2014 the number of problems. The\nsecond line of each test case contains \n    n\n integers \n    tag_1, tag_2,\n    \n    \u2026, tag_n\n \n    (1 \n    \u2264 tag_i \n    \u2264 n)\n \u2014 tags of the problems. The\nthird line of each test case contains \n    n\n integers \n    s_1, s_2, \n    \u2026,\n    s_n\n \n    (1 \n    \u2264 s_i \n    \u2264 10^9)\n \u2014 scores of the problems. It's\nguaranteed that sum of \n    n\n over all test cases does not exceed \n    5000\n.\nOutput For each test case print a single integer \u2014 the maximum number of\npoints that can be earned. Example Input 5 4 1 2 3 4 5 10 15 20 4 1 2 1 2 5 10\n15 20 4 2 2 4 1 2 8 19 1 2 1 1 6 9 1 1 666 Output 35 30 42 0 0 Note In the\nfirst test case optimal sequence of solving problems is as follows: \n    1\n    \n    \u2192 2\n, after that total score is \n    5\n and \n    IQ =\n    2\n \n    2 \n    \u2192 3\n, after that total score is \n    10\n and\n\n    IQ = 4\n \n    3 \n    \u2192 1\n, after that total score is\n\n    20\n and \n    IQ = 6\n \n    1 \n    \u2192 4\n, after that total\nscore is \n    35\n and \n    IQ = 14\n In the second test case optimal\nsequence of solving problems is as follows: \n    1 \n    \u2192 2\n, after\nthat total score is \n    5\n and \n    IQ = 2\n \n    2 \n    \u2192 3\n,\nafter that total score is \n    10\n and \n    IQ = 4\n \n    3\n    \n    \u2192 4\n, after that total score is \n    15\n and \n    IQ =\n    8\n \n    4 \n    \u2192 1\n, after that total score is \n    35\n and\n\n    IQ = 14\n In the third test case optimal sequence of solving\nproblems is as follows: \n    1 \n    \u2192 3\n, after that total score is\n\n    17\n and \n    IQ = 6\n \n    3 \n    \u2192 4\n, after that total\nscore is \n    35\n and \n    IQ = 8\n \n    4 \n    \u2192 2\n, after\nthat total score is \n    42\n and \n    IQ = 12\n\n\n",
        "cf_contest_id": 1497,
        "cf_index": "D",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dp",
            "graphs",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 32.0,
        "public_cases": [
            [
                "5\r\n4\r\n1 2 3 4\r\n5 10 15 20\r\n4\r\n1 2 1 2\r\n5 10 15 20\r\n4\r\n2 2 4 1\r\n2 8 19 1\r\n2\r\n1 1\r\n6 9\r\n1\r\n1\r\n666\r\n",
                "35\r\n30\r\n42\r\n0\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]