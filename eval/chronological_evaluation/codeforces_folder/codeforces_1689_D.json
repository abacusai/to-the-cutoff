[
    {
        "name": "Lena and Matrix",
        "description": "Lena is a beautiful girl who likes logical puzzles. As a gift for her\nbirthday, Lena got a matrix puzzle! The matrix consists of \n    n\n rows and\n\n    m\n columns, and each cell is either black or white. The coordinates\n\n    (i,j)\n denote the cell which belongs to the \n    i\n-th row and \n    j\n-th\ncolumn for every \n    1\n    \u2264 i \n    \u2264 n\n and \n    1\n    \u2264 j \n    \u2264 m\n. To\nsolve the puzzle, Lena has to choose a cell that minimizes the Manhattan\ndistance to the farthest black cell from the chosen cell. More formally, let\nthere be \n    k \n    \u2265 1\n black cells in the matrix with coordinates\n\n    (x_i,y_i)\n for every \n    1\n    \u2264 i \n    \u2264 k\n. Lena should choose a cell\n\n    (a,b)\n that minimizes \n    \n\n    max_i=1^k(|a-x_i|+|b-y_i|).\n\n    \n As\nLena has no skill, she asked you for help. Will you tell her the optimal cell\nto choose? Input There are several test cases in the input data. The first\nline contains a single integer \n    t\n (\n    1\n    \u2264 t\n    \u2264 10\n     000\n) \u2014 the\nnumber of test cases. This is followed by the test cases description. The\nfirst line of each test case contains two integers \n    n\n and \n    m\n\n(\n    2\n    \u2264 n,m \n    \u2264 1000\n) \u2014 the dimensions of the matrix. The following\n\n    n\n lines contain \n    m\n characters each, each character is either 'W' or\n'B'. The \n    j\n-th character in the \n    i\n-th of these lines is 'W' if the\ncell \n    (i,j)\n is white, and 'B' if the cell \n    (i,j)\n is black. It is\nguaranteed that at least one black cell exists. It is guaranteed that the sum\nof \n    n\n    \u00b7 m\n does not exceed \n    10^6\n. Output For each test case,\noutput the optimal cell \n    (a,b)\n to choose. If multiple answers exist,\noutput any. Example Input 5 3 2 BW WW WB 3 3 WWB WBW BWW 2 3 BBB BBB 5 5 BWBWB\nWBWBW BWBWB WBWBW BWBWB 9 9 WWWWWWWWW WWWWWWWWW BWWWWWWWW WWWWWWWWW WWWWBWWWW\nWWWWWWWWW WWWWWWWWW WWWWWWWWW WWWWWWWWB Output 2 1 2 2 1 2 3 3 6 5 Note In the\nfirst test case the two black cells have coordinates \n    (1,1)\n and\n\n    (3,2)\n. The four optimal cells are \n    (1,2)\n, \n    (2,1)\n, \n    (2,2)\n\nand \n    (3,1)\n. It can be shown that no other cell minimizes the maximum\nManhattan distance to every black cell. In the second test case it is optimal\nto choose the black cell \n    (2,2)\n with maximum Manhattan distance being\n\n    2\n.\n\n",
        "cf_contest_id": 1689,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "geometry",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3 2\r\nBW\r\nWW\r\nWB\r\n3 3\r\nWWB\r\nWBW\r\nBWW\r\n2 3\r\nBBB\r\nBBB\r\n5 5\r\nBWBWB\r\nWBWBW\r\nBWBWB\r\nWBWBW\r\nBWBWB\r\n9 9\r\nWWWWWWWWW\r\nWWWWWWWWW\r\nBWWWWWWWW\r\nWWWWWWWWW\r\nWWWWBWWWW\r\nWWWWWWWWW\r\nWWWWWWWWW\r\nWWWWWWWWW\r\nWWWWWWWWB\r\n",
                "1 2\r\n1 1\r\n1 2\r\n3 3\r\n3 8\r\n"
            ]
        ],
        "private_cases": []
    }
]