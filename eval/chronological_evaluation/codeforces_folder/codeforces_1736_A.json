[
    {
        "name": "Make A Equal to B",
        "description": "You are given two arrays \n    a\n and \n    b\n of \n    n\n elements, each element\nis either \n    0\n or \n    1\n. You can make operations of \n    2\n kinds. Pick\nan index \n    i\n and change \n    a_i\n to \n    1-a_i\n. Rearrange the array\n\n    a\n however you want. Find the minimum number of operations required to\nmake \n    a\n equal to \n    b\n. Input Each test contains multiple test cases.\nThe first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 400\n)\n\u2014 the number of test cases. Description of the test cases follows. The first\nline of each test case contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    100\n) \u2014 the length of the arrays \n    a\n and \n    b\n. The second line of\neach test case contains \n    n\n space-separated integers\n\n    a_1,a_2,\n    \u2026,a_n\n (\n    a_i\n is \n    0\n or \n    1\n), representing the\narray \n    a\n. The third line of each test case contains \n    n\n space-\nseparated integers \n    b_1,b_2,\n    \u2026,b_n\n (\n    b_i\n is \n    0\n or\n\n    1\n), representing the array \n    b\n. Output For each test case, print the\nminimum number of operations required to make \n    a\n equal to \n    b\n.\nExample Input 5 3 1 0 1 0 0 1 4 1 1 0 0 0 1 1 1 2 1 1 1 1 4 1 0 0 1 0 1 1 0 1\n0 1 Output 1 2 0 1 1 Note In the first case, we need only one operation:\nchange \n    a_1\n to \n    1-a_i\n. Now \n    a = [0, 0]\n which is equal to\n\n    b\n. In the second case, the optimal way is to rearrange \n    a\n to get\nthe array \n    [0, 1, 11\n. Now \n    a = [0, 0, 1]\n which is equal to \n    b\n.\nIn the second case, one of optimal ways would be to first change \n    a_3\n to\n\n    1 - a_3\n, then rearrange \n    a\n. In the third case, no operation is\nneeded. In the fourth case, the optimal way is to rearrange \n    a\n to get the\narray \n    [0, 1, 1, 0]\n.\n\n",
        "cf_contest_id": 1736,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3\r\n1 0 1\r\n0 0 1\r\n4\r\n1 1 0 0\r\n0 1 1 1\r\n2\r\n1 1\r\n1 1\r\n4\r\n1 0 0 1\r\n0 1 1 0\r\n1\r\n0\r\n1\r\n",
                "1\r\n2\r\n0\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": []
    }
]