[
    {
        "name": "Cross Swapping",
        "description": "You are given a square matrix \n    A\n of size \n    n \n    \u00d7 n\n whose\nelements are integers. We will denote the element on the intersection of the\n\n    i\n-th row and the \n    j\n-th column as \n    A_i,j\n. You can perform\noperations on the matrix. In each operation, you can choose an integer\n\n    k\n, then for each index \n    i\n (\n    1 \n    \u2264 i \n    \u2264 n\n), swap\n\n    A_i, k\n with \n    A_k, i\n. Note that cell \n    A_k, k\n remains\nunchanged. For example, for \n    n = 4\n and \n    k = 3\n, this matrix will be\ntransformed like this: The operation \n    k = 3\n swaps the blue row with the\ngreen column. You can perform this operation any number of times. Find the\nlexicographically smallest matrix\n    ^\n    \u2020\n you can obtain after\nperforming arbitrary number of operations. \n    ^\n    \u2020\n For two matrices\n\n    A\n and \n    B\n of size \n    n \n    \u00d7 n\n, let \n    a_(i-1) \n    \u00b7 n + j\n    = A_i,j\n and \n    b_(i-1) \n    \u00b7 n + j = B_i,j\n. Then, the matrix\n\n    A\n is lexicographically smaller than the matrix \n    B\n when there exists\nan index \n    i\n (\n    1 \n    \u2264 i \n    \u2264 n^2\n) such that \n    a_i < b_i\n and\nfor all indices \n    j\n such that \n    1 \n    \u2264 j < i\n, \n    a_j = b_j\n. Input\nThe first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^5\n) \u2014 the number of test cases. The first line of each test case contains\na single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 1000\n) \u2014 the size of the\nmatrix. The \n    i\n-th line of the next \n    n\n lines contains \n    n\n\nintegers \n    A_i, 1, A_i, 2, \n    \u2026, A_i, n\n (\n    1 \n    \u2264 A_i, j\n    \u2264 10^9\n) \u2014 description of the matrix \n    A\n. It is guaranteed that the\nsum of \n    n^2\n over all test cases does not exceed \n    10^6\n. Output For\neach test case, print \n    n\n lines with \n    n\n integers each \u2014 the\nlexicographically smallest matrix. Example Input 2 3 2 1 2 2 1 2 1 1 2 4 3 3 1\n2 1 1 3 1 3 2 3 2 2 3 3 1 Output 2 1 1 2 1 1 2 2 2 3 1 1 2 3 1 2 1 3 3 3 3 2 3\n2 1 Note Note that in every picture below the matrix is transformed in such a\nway that the blue rows are swapped with the green columns. In the first test\ncase, we can perform \n    1\n operation for \n    k = 3\n. The matrix will be\ntransformed as below: In the second test case, we can perform \n    2\n\noperations for \n    k = 1\n and \n    k = 3\n:\n\n",
        "cf_contest_id": 1713,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "2-sat",
            "data structures",
            "dsu",
            "greedy",
            "matrices"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n3\r\n2 1 2\r\n2 1 2\r\n1 1 2\r\n4\r\n3 3 1 2\r\n1 1 3 1\r\n3 2 3 2\r\n2 3 3 1\r\n",
                "2 1 1\r\n2 1 1\r\n2 2 2\r\n3 1 1 2\r\n3 1 2 1\r\n3 3 3 3\r\n2 3 2 1\r\n"
            ]
        ],
        "private_cases": []
    }
]