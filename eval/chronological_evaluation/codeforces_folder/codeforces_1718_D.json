[
    {
        "name": "Permutation for Burenka",
        "description": "We call an array \n    a\n pure if all elements in it are pairwise distinct. For\nexample, an array \n    [1, 7, 9]\n is pure, \n    [1, 3, 3, 7]\n isn't, because\n\n    3\n occurs twice in it. A pure array \n    b\n is similar to a pure array\n\n    c\n if their lengths \n    n\n are the same and for all pairs of indices\n\n    l\n, \n    r\n, such that \n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 n\n, it's true that\n\n    \n\n    argmax([b_l, b_l + 1, \n    \u2026, b_r]) =\n    \n    argmax([c_l, c_l + 1, \n    \u2026, c_r]),\n\n    \n where\n\n    argmax(x)\n is defined as the index of the largest\nelement in \n    x\n (which is unique for pure arrays). For example,\n\n    argmax([3, 4, 2]) = 2\n,\n\n    argmax([1337, 179, 57]) = 1\n. Recently, Tonya found out\nthat Burenka really likes a permutation \n    p\n of length \n    n\n. Tonya\ndecided to please her and give her an array \n    a\n similar to \n    p\n. He\nalready fixed some elements of \n    a\n, but exactly \n    k\n elements are\nmissing (in these positions temporarily \n    a_i = 0\n). It is guaranteed that\n\n    k \n    \u2265 2\n. Also, he has a set \n    S\n of \n    k - 1\n numbers. Tonya\nrealized that he was missing one number to fill the empty places of \n    a\n,\nso he decided to buy it. He has \n    q\n options to buy. Tonya thinks that the\nnumber \n    d\n suits him, if it is possible to replace all zeros in \n    a\n\nwith numbers from \n    S\n and the number \n    d\n, so that \n    a\n becomes a\npure array similar to \n    p\n. For each option of \n    d\n, output whether this\nnumber is suitable for him or not. Input The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) is the number of test cases. The\ndescription of the test cases follows. The first line of each test case\ncontains a couple of integers \n    n\n and \n    q\n (\n    1 \n    \u2264 n, q \n    \u2264 3\n    \n    \u00b7 10^5\n). The second line of each input test case contains \n    n\n\nintegers \n    p_1, p_2, \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n) \u2014 the\npermutation Burenka likes. The third line of each test case contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^6\n) \u2014\nelements of Tonya's array, where \n    0\n denotes a missing element. It is\nguaranteed that there are two indexes \n    i, j\n \n    (1 \n    \u2264 i, j \n    \u2264 n, i\n    \n     j)\n such that \n    a_i = 0, a_j = 0\n, which implies that \n    k \n    \u2265\n    2\n. The fourth line of each test case contains \n    k - 1\n distinct integers\n\n    s_1, s_2, \n    \u2026, s_k-1\n (\n    1 \n    \u2264 s_i \n    \u2264 10^6\n) \u2014 elements of\nTonya's set \n    S\n. Each of the next \n    q\n lines contains a single integer\n\n    d\n (\n    1 \n    \u2264 d \n    \u2264 10^6\n) \u2014 the number that Tonya plans to buy. It\nis guaranteed that for each given \n    d\n it's possible to fill in the gaps in\n\n    a\n with numbers from \n    S\n and the number \n    d\n to get a pure array.\nIt is guaranteed that the sum of \n    n\n and the sum of \n    q\n in all tests\ndoes not exceed \n    3 \n    \u00b7 10^5\n. Output Output \n    q\n lines. For each\nvalue \n    d\n, print \"YES\" if there is a way to fill the array \n    a\n to make\nit similar to \n    p\n, and \"NO\" otherwise. Example Input 4 4 3 1 4 3 2 5 0 7 0\n6 9 1 4 5 3 1 2 5 4 3 0 5 10 0 0 3 9 1 8 11 5 2 1 4 3 2 5 0 0 0 0 0 7 9 1 5 6\n100 4 2 4 1 3 2 0 5 3 0 2 4 6 Output YES NO NO YES YES NO YES YES NO NO Note\nIn the first test case for \n    d = 9\n, you can get \n    a = [5, 9, 7, 6]\n, it\ncan be proved that \n    a\n is similar to \n    p\n, for \n    d=1\n and \n    d=4\n\nit can be proved that there is no answer. In the second test case for \n    d =\n    1\n, you can get \n    a = [1, 5, 10, 9, 3]\n, for \n    d = 8\n, you can get\n\n    a = [3, 5, 10, 9, 8]\n, it can be proved that for \n    d = 11\n there is no\nanswer.\n\n",
        "cf_contest_id": 1718,
        "cf_index": "D",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "graph matchings",
            "greedy",
            "math",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n4 3\r\n1 4 3 2\r\n5 0 7 0\r\n6\r\n9\r\n1\r\n4\r\n5 3\r\n1 2 5 4 3\r\n0 5 10 0 0\r\n3 9\r\n1\r\n8\r\n11\r\n5 2\r\n1 4 3 2 5\r\n0 0 0 0 0\r\n7 9 1 5\r\n6\r\n100\r\n4 2\r\n4 1 3 2\r\n0 5 3 0\r\n2\r\n4\r\n6\r\n",
                "YES\r\nNO\r\nNO\r\nYES\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\nNO\r\n"
            ]
        ],
        "private_cases": []
    }
]