[
    {
        "name": "Line",
        "description": "There are \n    n\n people in a horizontal line, each looking either to the left\nor the right. Each person counts the number of people in the direction they\nare looking. The value of the line is the sum of each person's count. For\nexample, in the arrangement LRRLL, where L stands for a person looking left\nand R stands for a person looking right, the counts for each person are \n    [0,\n    3, 2, 3, 4]\n, and the value is \n    0+3+2+3+4=12\n. You are given the initial\narrangement of people in the line. For each \n    k\n from \n    1\n to \n    n\n,\ndetermine the maximum value of the line if you can change the direction of at\nmost \n    k\n people. Input The input consists of multiple test cases. The\nfirst line contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the\nnumber of test cases. The description of the test cases follows. The first\nline of each test case contains an integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    2\n    \u00b710^5\n) \u2014 the length of the line. The following line contains a\nstring consisting of \n    n\n characters, each of which is either L or R,\nrepresenting a person facing left or right, respectively \u2014 the description of\nthe line. It is guaranteed that the sum of \n    n\n over all test cases does\nnot exceed \n    2\n    \u00b710^5\n. Please note that the answer for some test cases\nwon't fit into 32-bit integer type, so you should use at least 64-bit integer\ntype in your programming language (like long long for C++). Output For each\ntest case, output \n    n\n space-separated non-negative integers \u2014 the maximum\nvalue of the line if you can change the direction of at most \n    k\n people\nfor each \n    k\n from \n    1\n to \n    n\n, inclusive. Example Input 6 3 LLR 5\nLRRLL 1 L 12 LRRRLLLRLLRL 10 LLLLLRRRRR 9 LRLRLRLRL Output 3 5 5 16 16 16 16\n16 0 86 95 98 101 102 102 102 102 102 102 102 102 29 38 45 52 57 62 65 68 69\n70 44 50 54 56 56 56 56 56 56 Note In the first test case: \n    k=1\n: change\nthe direction of \n    1\n person to make the line RLR. The total value is\n\n    2+1+0=3\n. \n    k=2\n: change the direction of \n    2\n people to make the\nline RLL. The total value is \n    2+1+2=5\n. \n    k=3\n: change the direction of\n\n    2\n people to make the line RLL. The total value is \n    2+1+2=5\n. Note\nthat you have to change the direction of at most \n    k\n people. In the second\ntest case, it is optimal to only change the direction of the first person for\nall \n    k\n from \n    1\n to \n    5\n (that is, make the line RRRLL).\n\n",
        "cf_contest_id": 1722,
        "cf_index": "D",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n3\r\nLLR\r\n5\r\nLRRLL\r\n1\r\nL\r\n12\r\nLRRRLLLRLLRL\r\n10\r\nLLLLLRRRRR\r\n9\r\nLRLRLRLRL\r\n",
                "3\r\n5\r\n5\r\n16\r\n16\r\n16\r\n16\r\n16\r\n0\r\n86\r\n95\r\n98\r\n101\r\n102\r\n102\r\n102\r\n102\r\n102\r\n102\r\n102\r\n102\r\n29\r\n38\r\n45\r\n52\r\n57\r\n62\r\n65\r\n68\r\n69\r\n70\r\n44\r\n50\r\n54\r\n56\r\n56\r\n56\r\n56\r\n56\r\n56\r\n"
            ]
        ],
        "private_cases": []
    }
]