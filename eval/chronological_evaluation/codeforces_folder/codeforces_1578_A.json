[
    {
        "name": "Anti-Tetris",
        "description": "Let us consider the game \"Sticky Tetris\". In this game, there is a field of\n\n    n \n    \u00d7 m\n squares. Tiles appear on the field and the player can move\nthe tiles. Each tile is a \n    4\n-connected set of at most \n    7\n squares.\nEach new tile appears in any position that fits inside the field, does not\nintersect any other tile, and the top cell of the tile is at the top row of\nthe field. The player can move the tile left, right, and down, and at any\nmoment the tile must still entirely fit inside the field and must not\nintersect other tiles. The player can stop the tile at any position at any\ntime. After that, it cannot be moved. Since this is \"Sticky Tetris,\" the tile\nwill not fall once stopped. You are given a final configuration of a \"Sticky\nTetris\" game. You need to restore a sequence of steps that leads to that\nconfiguration if it exists. Input The first line contains two integers \n    n\n\nand \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 50\n) \u2014 the size of the playing field. The\nnext \n    n\n lines contain a string of \n    m\n characters each. Each character\ncould be either a '.', or lowercase English letter. Connected components of\nthe same letter correspond to a single tile. Each tile consists of at most\n\n    7\n squares. Output If there is no solution, print \n    -1\n. Otherwise,\nprint \n    k\n \u2014 the number of different tiles that are placed on the field. On\nthe next \n    k\n lines print the sequence of steps for each of the tiles in\nthe order they are placed. Each line consists of a number \n    x\n followed by\na string with steps. \n    x\n (\n    1 \n    \u2264 x \n    \u2264 m\n) is the starting column\nof the leftmost square in the top row of the tile. The string consists of\ncharacters 'L' (for left), 'R' (for right), and 'D' (for down), describing the\npath of that tile, ending with a single character 'S' (for stop). The final\nposition of the tile determines which tile is being placed. The string with\nsteps can have at most \n    n \n    \u00b7 m + 1\n characters. Examples Input 3 2 aa\nab aa Output 2 2 DS 1 S Input 5 6 ....dd .ccccd .cbbdd .aab.a aabbaa Output 5\n2 DDDS 4 DDLS 6 DDDS 2 DS 5 S Input 5 3 ... aab abb aab .bb Output -1\n\n",
        "cf_contest_id": 1578,
        "cf_index": "A",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [],
        "private_cases": []
    }
]