[
    {
        "name": "Two Subtrees",
        "description": "You are given a rooted tree consisting of \n    n\n vertices. The vertex \n    1\n\nis the root. Each vertex has an integer written on it; this integer is\n\n    val_i\n for the vertex \n    i\n. You are given \n    q\n queries to the tree.\nThe \n    i\n-th query is represented by two vertices, \n    u_i\n and \n    v_i\n.\nTo answer the query, consider all vertices \n    w\n that lie in the subtree of\n\n    u_i\n or \n    v_i\n (if a vertex is in both subtrees, it is counted twice).\nFor all vertices in these two subtrees, list all integers written on them, and\nfind the integer with the maximum number of occurrences. If there are multiple\nintegers with maximum number of occurrences, the minimum among them is the\nanswer. Input The first line contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    2 \n    \u00b7 10^5\n) \u2014 the number of vertices in the tree. The second line\ncontains \n    n\n integers \n    val_1, val_2, \n    \u2026, val_n\n (\n    1 \n    \u2264 val_i\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the numbers written on the vertices. Then \n    n -\n    1\n lines follow, each containing two integers \n    x\n and \n    y\n (\n    1\n    \n    \u2264 x, y \n    \u2264 n\n) representing an edge between vertices \n    x\n and\n\n    y\n. These edges form a tree. The next line contains one integer \n    q\n\n(\n    1 \n    \u2264 q \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of queries to process.\nThen \n    q\n lines follow. The \n    i\n-th of them containing two numbers\n\n    u_i\n and \n    v_i\n (\n    1 \n    \u2264 u_i, v_i \n    \u2264 n\n) \u2014 the roots of\nsubtrees in the \n    i\n-th query. Output For each query, print one integer \u2014\nthe number that has the maximum amount of occurrences in the corresponding\npair of subtrees (if there are multiple such numbers, print the minimum one\namong them). Example Input 8 2 1 3 2 3 3 2 4 1 2 1 3 2 4 3 5 3 6 3 7 7 8 6 2 7\n3 7 2 3 1 1 5 6 1 3 Output 2 3 3 2 3 3 Note In the \n    1\n-st query, the pair\nof subtrees consists of vertices \n    [2, 4, 7, 8]\n, and the numbers written\non them are \n    1, 2, 2, 4\n. The number \n    2\n occurs twice, all\nother numbers \u2014 at most once, so the answer is \n    2\n. In the \n    2\n-nd\nquery, the pair of subtrees consists of vertices \n    [3, 5, 6, 7, 7, 8, 8]\n,\nand the numbers written on them are \n    3, 3, 3, 2, 2, 4, 4\n. The\nnumber \n    3\n has the maximum number of occurrences. In the \n    4\n-th query,\nthe pair of subtrees consists of vertices \n    [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6,\n    6, 7, 7, 8, 8]\n, and the numbers written on them are \n    2, 2, 1, 1, 3,\n    3, 2, 2, 3, 3, 3, 3, 2, 2, 4, 4\n. The numbers \n    2\n and \n    3\n are\nthe most common, the minimum of them is \n    2\n.\n\n",
        "cf_contest_id": 1767,
        "cf_index": "F",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "trees"
        ],
        "time_limit_seconds": 9.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "8\r\n2 1 3 2 3 3 2 4\r\n1 2\r\n1 3\r\n2 4\r\n3 5\r\n3 6\r\n3 7\r\n7 8\r\n6\r\n2 7\r\n3 7\r\n2 3\r\n1 1\r\n5 6\r\n1 3\r\n",
                "2\r\n3\r\n3\r\n2\r\n3\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n4541\r\n1\r\n1 1\r\n",
                "4541\r\n"
            ]
        ]
    }
]