[
    {
        "name": "Bonus Distribution ",
        "description": "For the first time, Polycarp's startup ended the year with a profit! Now he is\nabout to distribute \n    k\n burles as a bonus among \n    n\n employees. It is\nknown that the current salary of the \n    i\n-th employee is \n    a_i\n and all\nthe values of \n    a_i\n in the company are different. Polycarp wants to\ndistribute the \n    k\n burles between \n    n\n employees so this month the\n\n    i\n-th employee will be paid not \n    a_i\n, but \n    a_i+d_i\n (\n    d_i\n    \n    \u2265 0\n, \n    d_i\n is an integer), where \n    d_i\n is the bonus for the\n\n    i\n-th employee. Of course, \n    d_1+d_2+\n    \u2026+d_n=k\n. Polycarp will\nfollow two rules for choosing the values \n    d_i\n: the relative order of the\nsalaries should not be changed: the employee with originally the highest\nsalary (\n    a_i\n is the maximum) should have the highest total payment after\nreceiving their bonus (\n    a_i+d_i\n is also the maximum), the employee whose\nsalary was originally the second-largest should receive the second-largest\ntotal payment after receiving their bonus and so on. to emphasize that annual\nprofit is a group effort, Polycarp wants to minimize the maximum total payment\nto an employee (i.e minimize the maximum value of \n    a_i+d_i\n). Help\nPolycarp decide the non-negative integer bonuses \n    d_i\n such that: their\nsum is \n    k\n, for each employee, the number of those who receive strictly\nmore than them remains unchanged (that is, if you sort employees by \n    a_i\n\nand by \n    a_i+d_i\n, you get the same order of employees), all \n    a_i +\n    d_i\n are different, the maximum of the values \n    a_i+d_i\n is the minimum\npossible. Help Polycarp and print any of the possible answers \n    d_1, d_2,\n    \n    \u2026, d_n\n. Input The first line contains an integer \n    t\n (\n    1 \n    \u2264\n    t \n    \u2264 10^4\n) \u2014 the number of test cases in the input. Then \n    t\n test\ncases follow. The first line of each test case contains two integers \n    n\n\nand \n    k\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n, \n    1 \n    \u2264 k \n    \u2264 10^9\n) \u2014 the\nnumber of employees and the total bonus. The second line of each test case\ncontains \n    n\n different integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264\n    a_i \n    \u2264 10^9\n), where \n    a_i\n is the current salary of the \n    i\n-th\nemployee. It is guaranteed that the sum of all \n    n\n values in the input\ndoes not exceed \n    10^5\n. Output Print the answers to \n    t\n test cases in\nthe order they appear in the input. Print each answer as a sequence of non-\nnegative integers \n    d_1, d_2, \n    \u2026, d_n\n. If there are several answers,\nprint any of them. Example Input 5 4 1 3 1 4 2 2 3 10 2 4 1000000000 987654321\n1000000000 999999999 500000000 8 9 5 6 1 8 3 4 2 7 6 1 6 3 1 8 5 9 Output 0 0\n1 0 0 3 134259259 121913582 121913582 621913577 2 2 0 2 0 1 0 2 1 0 0 0 0 0\n\n",
        "cf_contest_id": 1297,
        "cf_index": "D",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "binary search",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4 1\r\n3 1 4 2\r\n2 3\r\n10 2\r\n4 1000000000\r\n987654321 1000000000 999999999 500000000\r\n8 9\r\n5 6 1 8 3 4 2 7\r\n6 1\r\n6 3 1 8 5 9\r\n",
                "0 0 1 0\r\n0 3\r\n134259258 121913582 121913582 621913578\r\n1 1 1 2 1 1 1 1\r\n1 0 0 0 0 0\r\n"
            ]
        ],
        "private_cases": [
            [
                "15\r\n6 1\r\n6 3 1 8 5 9\r\n6 2\r\n6 3 1 8 5 9\r\n6 3\r\n6 3 1 8 5 9\r\n6 4\r\n6 3 1 8 5 9\r\n6 5\r\n6 3 1 8 5 9\r\n6 6\r\n6 3 1 8 5 9\r\n6 7\r\n6 3 1 8 5 9\r\n6 8\r\n6 3 1 8 5 9\r\n6 9\r\n6 3 1 8 5 9\r\n6 10\r\n6 3 1 8 5 9\r\n6 11\r\n6 3 1 8 5 9\r\n6 12\r\n6 3 1 8 5 9\r\n6 13\r\n6 3 1 8 5 9\r\n6 14\r\n6 3 1 8 5 9\r\n6 15\r\n6 3 1 8 5 9\r\n",
                "1 0 0 0 0 0\r\n1 0 0 0 1 0\r\n1 1 0 0 1 0\r\n1 2 0 0 1 0\r\n1 2 1 0 1 0\r\n1 2 2 0 1 0\r\n1 2 3 0 1 0\r\n1 2 3 0 1 1\r\n1 2 3 1 1 1\r\n2 2 3 1 1 1\r\n2 2 3 1 2 1\r\n2 3 3 1 2 1\r\n2 3 4 1 2 1\r\n2 3 4 1 2 2\r\n2 3 4 2 2 2\r\n"
            ]
        ]
    }
]