[
    {
        "name": "Diameter Cuts",
        "description": "You are given an integer \n    k\n and an undirected tree, consisting of \n    n\n\nvertices. The length of a simple path (a path in which each vertex appears at\nmost once) between some pair of vertices is the number of edges in this path.\nA diameter of a tree is the maximum length of a simple path between all pairs\nof vertices of this tree. You are about to remove a set of edges from the\ntree. The tree splits into multiple smaller trees when the edges are removed.\nThe set of edges is valid if all the resulting trees have diameter less than\nor equal to \n    k\n. Two sets of edges are different if there is an edge such\nthat it appears in only one of the sets. Count the number of valid sets of\nedges modulo \n    998\n     244\n     353\n. Input The first line contains two\nintegers \n    n\n and \n    k\n (\n    2 \n    \u2264 n \n    \u2264 5000\n, \n    0 \n    \u2264 k \n    \u2264 n\n    - 1\n) \u2014 the number of vertices of the tree and the maximum allowed diameter,\nrespectively. Each of the next \n    n-1\n lines contains a description of an\nedge: two integers \n    v\n and \n    u\n (\n    1 \n    \u2264 v, u \n    \u2264 n\n, \n    v\n    \n    \u2260 u\n). The given edges form a tree. Output Print a single integer \u2014 the\nnumber of valid sets of edges modulo \n    998\n     244\n     353\n. Examples Input 4\n3 1 2 1 3 1 4 Output 8 Input 2 0 1 2 Output 1 Input 6 2 1 6 2 4 2 6 3 6 5 6\nOutput 25 Input 6 3 1 2 1 5 2 3 3 4 5 6 Output 29 Note In the first example\nthe diameter of the given tree is already less than or equal to \n    k\n. Thus,\nyou can choose any set of edges to remove and the resulting trees will have\ndiameter less than or equal to \n    k\n. There are \n    2^3\n sets, including\nthe empty one. In the second example you have to remove the only edge.\nOtherwise, the diameter will be \n    1\n, which is greater than \n    0\n. Here\nare the trees for the third and the fourth examples:\n\n",
        "cf_contest_id": 1499,
        "cf_index": "F",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dfs and similar",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3\r\n1 2\r\n1 3\r\n1 4\r\n",
                "8"
            ],
            [
                "2 0\r\n1 2\r\n",
                "1"
            ],
            [
                "6 2\r\n1 6\r\n2 4\r\n2 6\r\n3 6\r\n5 6\r\n",
                "25"
            ],
            [
                "6 3\r\n1 2\r\n1 5\r\n2 3\r\n3 4\r\n5 6\r\n",
                "29"
            ]
        ],
        "private_cases": [
            [
                "10 0\r\n10 6\r\n6 5\r\n1 3\r\n6 1\r\n7 10\r\n2 8\r\n9 7\r\n3 4\r\n3 8\r\n",
                "1"
            ],
            [
                "10 1\r\n7 9\r\n9 3\r\n4 2\r\n8 7\r\n7 10\r\n8 5\r\n4 1\r\n8 2\r\n6 8\r\n",
                "61"
            ],
            [
                "10 2\r\n7 5\r\n4 8\r\n1 10\r\n8 7\r\n5 6\r\n3 1\r\n1 5\r\n10 9\r\n4 2\r\n",
                "240"
            ],
            [
                "20 1\r\n13 3\r\n12 5\r\n19 6\r\n14 17\r\n6 3\r\n7 9\r\n4 1\r\n6 18\r\n19 20\r\n15 11\r\n9 10\r\n17 15\r\n6 10\r\n17 16\r\n15 20\r\n4 19\r\n5 7\r\n15 8\r\n2 12\r\n",
                "5455"
            ],
            [
                "20 2\r\n3 14\r\n13 1\r\n4 3\r\n13 5\r\n12 20\r\n19 12\r\n6 3\r\n12 15\r\n11 2\r\n11 17\r\n9 5\r\n19 7\r\n6 11\r\n17 5\r\n16 18\r\n16 7\r\n12 8\r\n19 11\r\n16 10\r\n",
                "122844"
            ],
            [
                "20 3\r\n10 6\r\n2 6\r\n19 4\r\n15 6\r\n20 13\r\n9 11\r\n8 1\r\n12 4\r\n7 8\r\n16 3\r\n18 17\r\n8 16\r\n12 5\r\n13 7\r\n9 4\r\n14 16\r\n8 9\r\n10 18\r\n9 17\r\n",
                "239092"
            ],
            [
                "20 4\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n11 12\r\n12 13\r\n13 14\r\n14 15\r\n15 16\r\n16 17\r\n17 18\r\n18 19\r\n19 20\r\n",
                "400096"
            ],
            [
                "2 1\r\n1 2\r\n",
                "2"
            ]
        ]
    }
]