[
    {
        "name": "Asterisk-Minor Template",
        "description": "You are given two strings \n    a\n and \n    b\n, consisting of lowercase Latin\nletters. A template \n    t\n is string, consisting of lowercase Latin letters\nand asterisks (character '*'). A template is called asterisk-minor if the\nnumber of asterisks in it is less than or equal to the number of letters in\nit. A string \n    s\n is said to be matching a template \n    t\n if you can\nreplace each asterisk in \n    t\n with a string of lowercase Latin letters\n(possibly, an empty string) so that it becomes equal to \n    s\n. Find an\nasterisk-minor template such that both \n    a\n and \n    b\n match it, or report\nthat such a template doesn't exist. If there are multiple answers, print any\nof them. Input The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^4\n) \u2014 the number of testcases. The first line of each testcase\ncontains a string \n    a\n (\n    1 \n    \u2264 |a| \n    \u2264 50\n, where \n    |a|\n is the\nlength of \n    a\n), consisting of lowercase Latin letters. The second line\ncontains a string \n    b\n (\n    1 \n    \u2264 |b| \n    \u2264 50\n), consisting of\nlowercase Latin letters. Output For each testcase, output \"NO\", if there\ndoesn't exist an asterisk-minor template that both \n    a\n and \n    b\n match.\nOtherwise, print \"YES\" in the first line and the template in the second line.\nIf there are multiple answers, print any of them. A template should consist\nonly of lowercase Latin letters and asterisks (character '*'). The number of\nasterisks should be less than or equal to the number of letters. Example Input\n6 aaab zzzb codeforces atcoder codeforces tokitlx aaaa aaaaaa abcd abcd c f\nOutput YES *b YES *co* NO YES a*a*a*a YES abcd NO Note In the first testcase,\nfor a template \"*b\", you can replace the only asterisk with \"aaa\" to get\n\"aaab\" (which is equal to \n    a\n) or with \"zzz\" to get \"zzzb\" (which is equal\nto \n    b\n). In the third testcase, a template \"*o*\" is not asterisk-minor, as\nit contains more asterisks than letters. There are no asterisk-minor templates\nthat both \n    a\n and \n    b\n match. In the fourth testcase, for a template\n\"a*a*a*a\", you can replace all asterisks with empty strings to get \"aaaa\"\n(which is equal to \n    a\n) or two of them with \"a\" and two of them with an\nempty string to get \"aaaaaa\" (which is equal to \n    b\n). In the fifth\ntestcase, there are no asterisks in a template \"abcd\", so only \"abcd\" can\nmatch it (which is coincidentally both \n    a\n and \n    b\n).\n\n",
        "cf_contest_id": 1796,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\naaab\r\nzzzb\r\ncodeforces\r\natcoder\r\ncodeforces\r\ntokitlx\r\naaaa\r\naaaaaa\r\nabcd\r\nabcd\r\nc\r\nf\r\n",
                "YES\r\n*b\r\nYES\r\n*co*\r\nNO\r\nYES\r\n*aa*\r\nYES\r\n*ab*\r\nNO\r\n"
            ]
        ],
        "private_cases": []
    }
]