[
    {
        "name": "Headquarters",
        "description": "Sensation, sensation in the two-dimensional kingdom! The police have caught a\nhighly dangerous outlaw, member of the notorious \"Pihters\" gang. The law\ndepartment states that the outlaw was driving from the gang's headquarters in\nhis car when he crashed into an ice cream stall. The stall, the car, and the\nheadquarters each occupies exactly one point on the two-dimensional kingdom.\nThe outlaw's car was equipped with a GPS transmitter. The transmitter showed\nthat the car made exactly n movements on its way from the headquarters to the\nstall. A movement can move the car from point (x, y) to one of these four\npoints: to point (x - 1, y) which we will mark by letter \"L\", to point (x + 1,\ny) \u2014 \"R\", to point (x, y - 1) \u2014 \"D\", to point (x, y + 1) \u2014 \"U\". The GPS\ntransmitter is very inaccurate and it doesn't preserve the exact sequence of\nthe car's movements. Instead, it keeps records of the car's possible\nmovements. Each record is a string of one of these types: \"UL\", \"UR\", \"DL\",\n\"DR\" or \"ULDR\". Each such string means that the car made a single movement\ncorresponding to one of the characters of the string. For example, string \"UL\"\nmeans that the car moved either \"U\", or \"L\". You've received the journal with\nthe outlaw's possible movements from the headquarters to the stall. The\njournal records are given in a chronological order. Given that the ice-cream\nstall is located at point (0, 0), your task is to print the number of\ndifferent points that can contain the gang headquarters (that is, the number\nof different possible locations of the car's origin). Input The first line\ncontains a single integer n (1 \u2264 n \u2264 2\u00b710^5) \u2014 the number of the car's\nmovements from the headquarters to the stall. Each of the following n lines\ndescribes the car's possible movements. It is guaranteed that each possible\nmovement is one of the following strings: \"UL\", \"UR\", \"DL\", \"DR\" or \"ULDR\".\nAll movements are given in chronological order. Please do not use the \nspecifier to read or write 64-bit integers in C++. It is preferred to use the\ncin and cout stream or the \nthe number of different possible locations of the gang's headquarters.\nExamples Input 3 UR UL ULDR Output 9 Input 2 DR DL Output 4 Note The figure\nbelow shows the nine possible positions of the gang headquarters from the\nfirst sample: For example, the following movements can get the car from point\n(1, 0) to point (0, 0):\n\n",
        "cf_contest_id": 183,
        "cf_index": "A",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\nUR\r\nUL\r\nULDR\r\n",
                "9\n"
            ],
            [
                "2\r\nDR\r\nDL\r\n",
                "4\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\nUL\r\nUR\r\nDR\r\nDL\r\n",
                "9\n"
            ],
            [
                "10\r\nUL\r\nUL\r\nUL\r\nUL\r\nUL\r\nUL\r\nUL\r\nUL\r\nUL\r\nUL\r\n",
                "11\n"
            ],
            [
                "6\r\nUL\r\nDL\r\nDL\r\nUL\r\nUL\r\nDL\r\n",
                "16\n"
            ],
            [
                "1\r\nUL\r\n",
                "2\n"
            ],
            [
                "1\r\nUR\r\n",
                "2\n"
            ],
            [
                "1\r\nDR\r\n",
                "2\n"
            ],
            [
                "1\r\nDL\r\n",
                "2\n"
            ],
            [
                "1\r\nULDR\r\n",
                "4\n"
            ],
            [
                "2\r\nUL\r\nULDR\r\n",
                "6\n"
            ],
            [
                "4\r\nULDR\r\nUR\r\nULDR\r\nUR\r\n",
                "15\n"
            ],
            [
                "10\r\nUR\r\nDR\r\nUL\r\nDR\r\nUL\r\nULDR\r\nUR\r\nUL\r\nULDR\r\nUL\r\n",
                "45\n"
            ],
            [
                "4\r\nUL\r\nUR\r\nDR\r\nDL\r\n",
                "9\n"
            ],
            [
                "10\r\nUL\r\nUR\r\nUR\r\nDR\r\nDR\r\nDR\r\nDL\r\nDL\r\nDL\r\nDL\r\n",
                "35\n"
            ],
            [
                "6\r\nUR\r\nDL\r\nUR\r\nDL\r\nUR\r\nDL\r\n",
                "7\n"
            ]
        ]
    }
]