[
    {
        "name": "Connecting Universities",
        "description": "Treeland is a country in which there are n towns connected by n - 1 two-way\nroad such that it's possible to get from any town to any other town. In\nTreeland there are 2k universities which are located in different towns.\nRecently, the president signed the decree to connect universities by high-\nspeed network.The Ministry of Education understood the decree in its own way\nand decided that it was enough to connect each university with another one by\nusing a cable. Formally, the decree will be done! To have the maximum sum in\nthe budget, the Ministry decided to divide universities into pairs so that the\ntotal length of the required cable will be maximum. In other words, the total\ndistance between universities in k pairs should be as large as possible. Help\nthe Ministry to find the maximum total distance. Of course, each university\nshould be present in only one pair. Consider that all roads have the same\nlength which is equal to 1. Input The first line of the input contains two\nintegers n and k (2 \u2264 n \u2264 200 000, 1 \u2264 k \u2264 n / 2) \u2014 the number of towns in\nTreeland and the number of university pairs. Consider that towns are numbered\nfrom 1 to n. The second line contains 2k distinct integers u1, u2, ..., u2k (1\n\u2264 ui \u2264 n) \u2014 indices of towns in which universities are located. The next n - 1\nline contains the description of roads. Each line contains the pair of\nintegers xj and yj (1 \u2264 xj, yj \u2264 n), which means that the j-th road connects\ntowns xj and yj. All of them are two-way roads. You can move from any town to\nany other using only these roads. Output Print the maximum possible sum of\ndistances in the division of universities into k pairs. Examples Input 7 2 1 5\n6 2 1 3 3 2 4 5 3 7 4 3 4 6 Output 6 Input 9 3 3 2 1 6 5 9 8 9 3 2 2 7 3 4 7 6\n4 5 2 1 2 8 Output 9 Note The figure below shows one of possible division into\npairs in the first test. If you connect universities number 1 and 6 (marked in\nred) and universities number 2 and 5 (marked in blue) by using the cable, the\ntotal distance will equal 6 which will be the maximum sum in this example.\n\n",
        "cf_contest_id": 700,
        "cf_index": "B",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 2\r\n1 5 6 2\r\n1 3\r\n3 2\r\n4 5\r\n3 7\r\n4 3\r\n4 6\r\n",
                "6"
            ],
            [
                "9 3\r\n3 2 1 6 5 9\r\n8 9\r\n3 2\r\n2 7\r\n3 4\r\n7 6\r\n4 5\r\n2 1\r\n2 8\r\n",
                "9"
            ]
        ],
        "private_cases": [
            [
                "41 3\r\n11 10 15 35 34 6\r\n28 2\r\n25 3\r\n9 4\r\n11 5\r\n7 6\r\n24 7\r\n19 8\r\n1 9\r\n34 10\r\n23 11\r\n17 12\r\n32 13\r\n32 14\r\n32 15\r\n33 16\r\n8 17\r\n19 18\r\n40 19\r\n15 20\r\n6 21\r\n41 22\r\n35 23\r\n13 24\r\n6 25\r\n22 26\r\n4 27\r\n31 28\r\n34 29\r\n41 30\r\n15 31\r\n4 32\r\n41 33\r\n23 34\r\n21 35\r\n13 36\r\n2 37\r\n22 38\r\n34 39\r\n29 40\r\n34 41\r\n",
                "16"
            ],
            [
                "2 1\r\n1 2\r\n1 2\r\n",
                "1"
            ],
            [
                "2 1\r\n2 1\r\n1 2\r\n",
                "1"
            ],
            [
                "3 1\r\n2 1\r\n1 2\r\n2 3\r\n",
                "1"
            ],
            [
                "4 1\r\n3 2\r\n1 2\r\n2 3\r\n2 4\r\n",
                "1"
            ],
            [
                "4 2\r\n1 3 2 4\r\n1 2\r\n4 3\r\n1 4\r\n",
                "4"
            ],
            [
                "5 1\r\n2 3\r\n1 2\r\n5 3\r\n1 4\r\n4 5\r\n",
                "4"
            ],
            [
                "5 2\r\n1 2 3 4\r\n1 2\r\n2 3\r\n2 4\r\n1 5\r\n",
                "3"
            ],
            [
                "6 1\r\n4 6\r\n5 2\r\n1 3\r\n1 4\r\n4 5\r\n3 6\r\n",
                "3"
            ],
            [
                "6 2\r\n6 5 4 1\r\n3 2\r\n1 3\r\n5 4\r\n3 5\r\n1 6\r\n",
                "6"
            ],
            [
                "6 3\r\n4 5 2 3 6 1\r\n4 2\r\n2 3\r\n1 4\r\n4 5\r\n5 6\r\n",
                "7"
            ],
            [
                "6 1\r\n4 5\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n",
                "2"
            ],
            [
                "6 2\r\n4 5 3 2\r\n1 2\r\n1 3\r\n6 4\r\n1 5\r\n1 6\r\n",
                "5"
            ],
            [
                "6 3\r\n4 5 2 6 3 1\r\n6 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n",
                "6"
            ],
            [
                "6 1\r\n4 1\r\n5 2\r\n1 3\r\n3 4\r\n4 5\r\n5 6\r\n",
                "2"
            ],
            [
                "6 2\r\n6 4 2 5\r\n3 2\r\n1 3\r\n2 4\r\n1 5\r\n5 6\r\n",
                "8"
            ],
            [
                "6 3\r\n3 4 2 6 1 5\r\n3 2\r\n6 3\r\n3 4\r\n2 5\r\n1 6\r\n",
                "7"
            ],
            [
                "30 6\r\n15 17 2 14 6 30 13 8 10 24 1 19\r\n23 2\r\n26 3\r\n22 4\r\n7 5\r\n1 6\r\n17 7\r\n29 8\r\n30 9\r\n4 10\r\n28 11\r\n13 12\r\n6 13\r\n23 14\r\n23 15\r\n5 16\r\n30 17\r\n2 18\r\n11 19\r\n19 20\r\n4 21\r\n3 22\r\n16 23\r\n11 24\r\n29 25\r\n27 26\r\n13 27\r\n5 28\r\n23 29\r\n4 30\r\n",
                "59"
            ],
            [
                "35 15\r\n6 12 32 18 11 10 29 9 30 27 31 14 8 24 28 25 19 15 21 3 4 1 33 22 23 17 16 13 7 2\r\n1 2\r\n20 3\r\n1 4\r\n20 5\r\n20 6\r\n1 7\r\n13 8\r\n4 9\r\n1 10\r\n1 11\r\n1 12\r\n1 13\r\n18 14\r\n10 15\r\n1 16\r\n16 17\r\n1 18\r\n1 19\r\n1 20\r\n20 21\r\n1 22\r\n27 23\r\n25 24\r\n1 25\r\n20 26\r\n20 27\r\n18 28\r\n4 29\r\n13 30\r\n4 31\r\n1 32\r\n20 33\r\n1 34\r\n4 35\r\n",
                "46"
            ],
            [
                "5 1\r\n1 2\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n",
                "1"
            ]
        ]
    }
]