[
    {
        "name": "Make a triangle!",
        "description": "Masha has three sticks of length \n    a\n, \n    b\n and \n    c\n centimeters\nrespectively. In one minute Masha can pick one arbitrary stick and increase\nits length by one centimeter. She is not allowed to break sticks. What is the\nminimum number of minutes she needs to spend increasing the stick's length in\norder to be able to assemble a triangle of positive area. Sticks should be\nused as triangle's sides (one stick for one side) and their endpoints should\nbe located at triangle's vertices. Input The only line contains tree integers\n\n    a\n, \n    b\n and \n    c\n (\n    1 \n    \u2264 a, b, c \n    \u2264 100\n) \u2014 the lengths\nof sticks Masha possesses. Output Print a single integer \u2014 the minimum number\nof minutes that Masha needs to spend in order to be able to make the triangle\nof positive area from her sticks. Examples Input 3 4 5 Output 0 Input 2 5 3\nOutput 1 Input 100 10 10 Output 81 Note In the first example, Masha can make a\ntriangle from the sticks without increasing the length of any of them. In the\nsecond example, Masha can't make a triangle of positive area from the sticks\nshe has at the beginning, but she can spend one minute to increase the length\n\n    2\n centimeter stick by one and after that form a triangle with sides\n\n    3\n, \n    3\n and \n    5\n centimeters. In the third example, Masha can take\n\n    33\n minutes to increase one of the \n    10\n centimeters sticks by\n\n    33\n centimeters, and after that take \n    48\n minutes to increase another\n\n    10\n centimeters stick by \n    48\n centimeters. This way she can form a\ntriangle with lengths \n    43\n, \n    58\n and \n    100\n centimeters in \n    81\n\nminutes. One can show that it is impossible to get a valid triangle faster.\n\n",
        "cf_contest_id": 1064,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "geometry",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 4 5\r\n",
                "0\r\n"
            ],
            [
                "2 5 3\r\n",
                "1\r\n"
            ],
            [
                "100 10 10\r\n",
                "81\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n",
                "0\r\n"
            ],
            [
                "100 100 100\r\n",
                "0\r\n"
            ],
            [
                "100 1 1\r\n",
                "99\r\n"
            ],
            [
                "12 34 56\r\n",
                "11\r\n"
            ],
            [
                "68 1 67\r\n",
                "1\r\n"
            ],
            [
                "100 100 1\r\n",
                "0\r\n"
            ],
            [
                "100 1 99\r\n",
                "1\r\n"
            ],
            [
                "23 56 33\r\n",
                "1\r\n"
            ],
            [
                "98 12 23\r\n",
                "64\r\n"
            ],
            [
                "88 2 6\r\n",
                "81\r\n"
            ],
            [
                "1 50 87\r\n",
                "37\r\n"
            ],
            [
                "1 50 100\r\n",
                "50\r\n"
            ],
            [
                "1 92 13\r\n",
                "79\r\n"
            ],
            [
                "56 42 87\r\n",
                "0\r\n"
            ],
            [
                "100 100 99\r\n",
                "0\r\n"
            ],
            [
                "3 1 1\r\n",
                "2\r\n"
            ],
            [
                "14 21 76\r\n",
                "42\r\n"
            ],
            [
                "1 7 35\r\n",
                "28\r\n"
            ],
            [
                "86 43 10\r\n",
                "34\r\n"
            ],
            [
                "2 10 2\r\n",
                "7\r\n"
            ],
            [
                "32 99 10\r\n",
                "58\r\n"
            ],
            [
                "2 3 6\r\n",
                "2\r\n"
            ],
            [
                "4 5 6\r\n",
                "0\r\n"
            ],
            [
                "4 2 7\r\n",
                "2\r\n"
            ],
            [
                "2 5 2\r\n",
                "2\r\n"
            ]
        ]
    }
]