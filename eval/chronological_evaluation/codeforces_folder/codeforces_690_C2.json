[
    {
        "name": "Brain Network (medium)",
        "description": "Further research on zombie thought processes yielded interesting results. As\nwe know from the previous problem, the nervous system of a zombie consists of\nn brains and m brain connectors joining some pairs of brains together. It was\nobserved that the intellectual abilities of a zombie depend mainly on the\ntopology of its nervous system. More precisely, we define the distance between\ntwo brains u and v (1 \u2264 u, v \u2264 n) as the minimum number of brain connectors\nused when transmitting a thought between these two brains. The brain latency\nof a zombie is defined to be the maximum distance between any two of its\nbrains. Researchers conjecture that the brain latency is the crucial parameter\nwhich determines how smart a given zombie is. Help them test this conjecture\nby writing a program to compute brain latencies of nervous systems. In this\nproblem you may assume that any nervous system given in the input is valid,\ni.e., it satisfies conditions (1) and (2) from the easy version. Input The\nfirst line of the input contains two space-separated integers n and m (1 \u2264 n,\nm \u2264 100000) denoting the number of brains (which are conveniently numbered\nfrom 1 to n) and the number of brain connectors in the nervous system,\nrespectively. In the next m lines, descriptions of brain connectors follow.\nEvery connector is given as a pair of brains a b it connects (1 \u2264 a, b \u2264 n and\na \u2260 b). Output Print one number \u2013 the brain latency. Examples Input 4 3 1 2 1\n3 1 4 Output 2 Input 5 4 1 2 2 3 3 4 3 5 Output 3\n\n",
        "cf_contest_id": 690,
        "cf_index": "C2",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1\r\n1 2\r\n",
                "1"
            ],
            [
                "3 2\r\n2 1\r\n3 2\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "10 9\r\n5 1\r\n1 2\r\n9 3\r\n10 5\r\n6 3\r\n8 5\r\n2 7\r\n2 3\r\n9 4\r\n",
                "6"
            ],
            [
                "4 3\r\n1 2\r\n1 3\r\n1 4\r\n",
                "2"
            ],
            [
                "5 4\r\n1 2\r\n2 3\r\n3 4\r\n3 5\r\n",
                "3"
            ]
        ]
    }
]