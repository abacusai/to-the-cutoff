[
    {
        "name": "Last Number",
        "description": "You are given a multiset \n    S\n. Initially, \n    S = \n    \n    1,2,3, \n    \u2026,\n    n\n. You will perform the following operation \n    n-1\n times. Choose\nthe largest number \n    S_\n    max\n in \n    S\n and the smallest number\n\n    S_\n    min\n in \n    S\n. Remove the two numbers from \n    S\n, and\nadd \n    S_\n    max - S_\n    min\n into \n    S\n. It's easy to show\nthat there will be exactly one number left after \n    n-1\n operations. Output\nthat number. Input Each test contains multiple test cases. The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^5\n) \u2014 the number of\ntest cases. Their description follows. For each test case, one single line\ncontains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^9\n) \u2014 the initial\nsize of the multiset \n    S\n. Output For each test case, output an integer\ndenoting the only number left after \n    n-1\n operations. Example Input 5 2 4\n7 15 177567 Output 1 2 2 4 33914 Note We show how the multiset \n    S\n changes\nfor \n    n=4\n. Operation \n    1\n: \n    S=\n    \n    1,2,3,4\n, remove \n    4\n,\n\n    1\n, add \n    3\n. Operation \n    2\n: \n    S=\n    \n    2,3,3\n, remove\n\n    3\n, \n    2\n, add \n    1\n. Operation \n    3\n: \n    S=\n    \n    1,3\n,\nremove \n    3\n, \n    1\n, add \n    2\n. Final: \n    S = \n    \n    2\n.Thus, the\nanswer for \n    n = 4\n is \n    2\n.\n\n",
        "cf_contest_id": 1810,
        "cf_index": "H",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2\r\n4\r\n7\r\n15\r\n177567\r\n",
                "1\r\n2\r\n2\r\n4\r\n33914\r\n"
            ]
        ],
        "private_cases": []
    }
]