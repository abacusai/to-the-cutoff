[
    {
        "name": "Game With Sticks",
        "description": "After winning gold and silver in IOI 2014, Akshat and Malvika want to have\nsome fun. Now they are playing a game on a grid made of n horizontal and m\nvertical sticks. An intersection point is any point on the grid which is\nformed by the intersection of one horizontal stick and one vertical stick. In\nthe grid shown below, n = 3 and m = 3. There are n + m = 6 sticks in total\n(horizontal sticks are shown in red and vertical sticks are shown in green).\nThere are n\u00b7m = 9 intersection points, numbered from 1 to 9. The rules of the\ngame are very simple. The players move in turns. Akshat won gold, so he makes\nthe first move. During his/her move, a player must choose any remaining\nintersection point and remove from the grid all sticks which pass through this\npoint. A player will lose the game if he/she cannot make a move (i.e. there\nare no intersection points remaining on the grid at his/her move). Assume that\nboth players play optimally. Who will win the game? Input The first line of\ninput contains two space-separated integers, n and m (1 \u2264 n, m \u2264 100). Output\nPrint a single line containing \"Akshat\" or \"Malvika\" (without the quotes),\ndepending on the winner of the game. Examples Input 2 2 Output Malvika Input 2\n3 Output Malvika Input 3 3 Output Akshat Note Explanation of the first sample:\nThe grid has four intersection points, numbered from 1 to 4. If Akshat chooses\nintersection point 1, then he will remove two sticks (1 - 2 and 1 - 3). The\nresulting grid will look like this. Now there is only one remaining\nintersection point (i.e. 4). Malvika must choose it and remove both remaining\nsticks. After her move the grid will be empty. In the empty grid, Akshat\ncannot make any move, hence he will lose. Since all 4 intersection points of\nthe grid are equivalent, Akshat will lose no matter which one he picks.\n\n",
        "cf_contest_id": 451,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2\r\n",
                "Malvika"
            ],
            [
                "2 3\r\n",
                "Malvika"
            ],
            [
                "3 3\r\n",
                "Akshat"
            ]
        ],
        "private_cases": [
            [
                "20 68\r\n",
                "Malvika"
            ],
            [
                "1 1\r\n",
                "Akshat"
            ],
            [
                "1 2\r\n",
                "Akshat"
            ],
            [
                "1 3\r\n",
                "Akshat"
            ],
            [
                "2 1\r\n",
                "Akshat"
            ],
            [
                "2 2\r\n",
                "Malvika"
            ],
            [
                "3 1\r\n",
                "Akshat"
            ],
            [
                "3 2\r\n",
                "Malvika"
            ],
            [
                "68 42\r\n",
                "Malvika"
            ],
            [
                "1 35\r\n",
                "Akshat"
            ],
            [
                "25 70\r\n",
                "Akshat"
            ],
            [
                "59 79\r\n",
                "Akshat"
            ],
            [
                "65 63\r\n",
                "Akshat"
            ],
            [
                "46 6\r\n",
                "Malvika"
            ],
            [
                "28 82\r\n",
                "Malvika"
            ],
            [
                "98 98\r\n",
                "Malvika"
            ],
            [
                "98 99\r\n",
                "Malvika"
            ],
            [
                "98 100\r\n",
                "Malvika"
            ],
            [
                "99 98\r\n",
                "Malvika"
            ],
            [
                "99 99\r\n",
                "Akshat"
            ],
            [
                "99 100\r\n",
                "Akshat"
            ],
            [
                "100 98\r\n",
                "Malvika"
            ],
            [
                "100 99\r\n",
                "Akshat"
            ],
            [
                "100 100\r\n",
                "Malvika"
            ],
            [
                "3 4\r\n",
                "Akshat"
            ]
        ]
    }
]