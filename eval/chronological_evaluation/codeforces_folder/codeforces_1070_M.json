[
    {
        "name": "Algoland and Berland",
        "description": "Once upon a time Algoland and Berland were a single country, but those times\nare long gone. Now they are two different countries, but their cities are\nscattered on a common territory. All cities are represented as points on the\nCartesian plane. Algoland consists of \n    a\n cities numbered from \n    1\n to\n\n    a\n. The coordinates of the \n    i\n-th Algoland city are a pair of integer\nnumbers \n    (xa_i, ya_i)\n. Similarly, Berland consists of \n    b\n cities\nnumbered from \n    1\n to \n    b\n. The coordinates of the \n    j\n-th Berland\ncity are a pair of integer numbers \n    (xb_j, yb_j)\n. No three of the\n\n    a+b\n mentioned cities lie on a single straight line. As the first step to\nunite the countries, Berland decided to build several bidirectional freeways.\nEach freeway is going to be a line segment that starts in a Berland city and\nends in an Algoland city. Freeways can't intersect with each other at any\npoint except freeway's start or end. Moreover, the freeways have to connect\nall \n    a+b\n cities. Here, connectivity means that one can get from any of\nthe specified \n    a+b\n cities to any other of the \n    a+b\n cities using\nfreeways. Note that all freeways are bidirectional, which means that one can\ndrive on each of them in both directions. Mayor of each of the \n    b\n Berland\ncities allocated a budget to build the freeways that start from this city.\nThus, you are given the numbers \n    r_1, r_2, \n    \u2026, r_b\n, where \n    r_j\n\nis the number of freeways that are going to start in the \n    j\n-th Berland\ncity. The total allocated budget is very tight and only covers building the\nminimal necessary set of freeways. In other words,\n\n    r_1+r_2+\n    \u2026+r_b=a+b-1\n. Help Berland to build the freeways so that:\neach freeway is a line segment connecting a Berland city and an Algoland city,\nno freeways intersect with each other except for the freeway's start or end,\nfreeways connect all \n    a+b\n cities (all freeways are bidirectional), there\nare \n    r_j\n freeways that start from the \n    j\n-th Berland city. Input\nInput contains one or several test cases. The first input line contains a\nsingle integer number \n    t\n (\n    1 \n    \u2264 t \n    \u2264 3000\n) \u2014 number of test\ncases. Then, \n    t\n test cases follow. Solve test cases separately, test\ncases are completely independent and do not affect each other. Each test case\nstarts with a line containing space-separated integers \n    a\n and \n    b\n\n(\n    1 \n    \u2264 a, b \n    \u2264 3000\n) \u2014 numbers of Algoland cities and number of\nBerland cities correspondingly. The next line contains \n    b\n space-separated\nintegers \n    r_1, r_2, \n    \u2026, r_b\n (\n    1 \n    \u2264 r_b \n    \u2264 a\n) where\n\n    r_j\n is the number of freeways, that should start in the \n    j\n-th\nBerland city. It is guaranteed that \n    r_1+r_2+\n    \u2026+r_b=a+b-1\n. The next\n\n    a\n lines contain coordinates of the Algoland cities \u2014 pairs of space-\nseparated integers \n    xa_i, ya_i\n (\n    -10000 \n    \u2264 xa_i, ya_i \n    \u2264\n    10000\n). The next \n    b\n lines contain coordinates of the Berland cities \u2014\npairs of space-separated integers \n    xb_i, yb_i\n (\n    -10000 \n    \u2264 xb_i, yb_i\n    \n    \u2264 10000\n). All cities are located at distinct points, no three of the\n\n    a+b\n cities lie on a single straight line. Sum of values \n    a\n across\nall test cases doesn't exceed \n    3000\n. Sum of values \n    b\n across all\ntest cases doesn't exceed \n    3000\n. Output For each of the \n    t\n test\ncases, first print \"YES\" if there is an answer or \"NO\" otherwise. If there is\nan answer, print the freeway building plan in the next \n    a+b-1\n lines. Each\nline of the plan should contain two space-separated integers \n    j\n and\n\n    i\n which means that a freeway from the \n    j\n-th Berland city to the\n\n    i\n-th Algoland city should be built. If there are multiple solutions,\nprint any. Example Input 2 2 3 1 1 2 0 0 1 1 1 2 3 2 4 0 1 1 1 0 0 0 1 Output\nYES 2 2 1 2 3 2 3 1 YES 1 1\n\n",
        "cf_contest_id": 1070,
        "cf_index": "M",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "divide and conquer",
            "geometry"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n2 3\r\n1 1 2\r\n0 0\r\n1 1\r\n1 2\r\n3 2\r\n4 0\r\n1 1\r\n1\r\n0 0\r\n0 1\r\n",
                "YES\r\n3 1\r\n3 2\r\n2 2\r\n1 1\r\nYES\r\n1 1\r\n"
            ]
        ],
        "private_cases": []
    }
]