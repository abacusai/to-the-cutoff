[
    {
        "name": "Sasha Circle",
        "description": "Berlanders like to eat cones after a hard day. Misha Square and Sasha Circle\nare local authorities of Berland. Each of them controls its points of cone\ntrade. Misha has n points, Sasha \u2014 m. Since their subordinates constantly had\nconflicts with each other, they decided to build a fence in the form of a\ncircle, so that the points of trade of one businessman are strictly inside a\ncircle, and points of the other one are strictly outside. It doesn't matter\nwhich of the two gentlemen will have his trade points inside the circle.\nDetermine whether they can build a fence or not. Input The first line contains\ntwo integers n and m (1 \u2264 n, m \u2264 10000), numbers of Misha's and Sasha's trade\npoints respectively. The next n lines contains pairs of space-separated\nintegers Mx, My ( - 10^4 \u2264 Mx, My \u2264 10^4), coordinates of Misha's trade\npoints. The next m lines contains pairs of space-separated integers Sx, Sy ( -\n10^4 \u2264 Sx, Sy \u2264 10^4), coordinates of Sasha's trade points. It is guaranteed\nthat all n + m points are distinct. Output The only output line should contain\neither word \"YES\" without quotes in case it is possible to build a such fence\nor word \"NO\" in the other case. Examples Input 2 2 -1 0 1 0 0 -1 0 1 Output NO\nInput 4 4 1 0 0 1 -1 0 0 -1 1 1 -1 1 -1 -1 1 -1 Output YES Note In the first\nsample there is no possibility to separate points, because any circle that\ncontains both points ( - 1, 0), (1, 0) also contains at least one point from\nthe set (0, - 1), (0, 1), and vice-versa: any circle that contains both points\n(0, - 1), (0, 1) also contains at least one point from the set ( - 1, 0), (1,\n0) In the second sample one of the possible solution is shown below. Misha's\npoints are marked with red colour and Sasha's are marked with blue.\n\n",
        "cf_contest_id": 549,
        "cf_index": "E",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "geometry",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2\r\n-1 0\r\n1 0\r\n0 -1\r\n0 1\r\n",
                "NO\r\n"
            ],
            [
                "4 4\r\n1 0\r\n0 1\r\n-1 0\r\n0 -1\r\n1 1\r\n-1 1\r\n-1 -1\r\n1 -1\r\n",
                "YES\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 3\r\n-1 0\r\n1 0\r\n0 -2\r\n0 0\r\n0 2\r\n",
                "NO\r\n"
            ],
            [
                "3 3\r\n-3 -4\r\n3 2\r\n1 5\r\n4 0\r\n5 2\r\n-2 -1\r\n",
                "NO\r\n"
            ],
            [
                "3 4\r\n-9998 -10000\r\n-10000 -9998\r\n-9999 -9999\r\n-9997 9996\r\n-9996 9997\r\n-9998 9995\r\n-9995 9998\r\n",
                "YES\r\n"
            ],
            [
                "1 1\r\n-1908 8645\r\n-8559 3388\r\n",
                "YES\r\n"
            ],
            [
                "1 2\r\n8961 -7819\r\n-3068 -3093\r\n-742 4108\r\n",
                "YES\r\n"
            ],
            [
                "2 1\r\n-7087 5671\r\n7159 -5255\r\n-9508 -2160\r\n",
                "YES\r\n"
            ],
            [
                "2 2\r\n3782 2631\r\n2352 -5158\r\n-1702 -700\r\n-3472 -117\r\n",
                "YES\r\n"
            ],
            [
                "2 10\r\n-1 0\r\n1 0\r\n9 9\r\n0 0\r\n1 1\r\n2 2\r\n3 3\r\n4 4\r\n5 5\r\n6 6\r\n7 7\r\n8 8\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n-9140 650\r\n-9126 669\r\n-9112 688\r\n-9084 726\r\n-9098 707\r\n-9070 745\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n8410 -3760\r\n8419 -3752\r\n8428 -3744\r\n8455 -3720\r\n8446 -3728\r\n8437 -3736\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n9551 -9949\r\n-48 50\r\n-24 25\r\n0 0\r\n9575 -9974\r\n-9599 9999\r\n",
                "YES\r\n"
            ],
            [
                "3 2\r\n9599 -9999\r\n-9599 9999\r\n0 0\r\n-9575 9974\r\n9575 -9974\r\n",
                "NO\r\n"
            ],
            [
                "10 10\r\n971 -2437\r\n-3336 3332\r\n-7503 -8713\r\n-9337 -9607\r\n-927 -9162\r\n-4375 -3790\r\n-913 -257\r\n-5916 5783\r\n5131 -7304\r\n9993 -9999\r\n-2774 8057\r\n8670 -7936\r\n8388 3302\r\n8718 -4865\r\n3329 -3334\r\n5088 -1539\r\n5050 8130\r\n4710 -2803\r\n8124 -4062\r\n-10000 9997\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n-1852 -9408\r\n-2082 -9212\r\n-1967 -9310\r\n-1737 -9506\r\n-1507 -9702\r\n-1622 -9604\r\n",
                "YES\r\n"
            ],
            [
                "2 10\r\n-1 0\r\n0 -1\r\n-9 -9\r\n0 0\r\n-1 -1\r\n-2 -2\r\n-3 -3\r\n-4 -4\r\n-5 -5\r\n-6 -6\r\n-7 -7\r\n-8 -8\r\n",
                "NO\r\n"
            ],
            [
                "2 10\r\n1 0\r\n0 1\r\n9 9\r\n0 0\r\n1 1\r\n2 2\r\n3 3\r\n4 4\r\n5 5\r\n6 6\r\n7 7\r\n8 8\r\n",
                "NO\r\n"
            ],
            [
                "2 3\r\n0 -1\r\n0 1\r\n-2 0\r\n0 0\r\n2 0\r\n",
                "NO\r\n"
            ],
            [
                "2 10\r\n-1 0\r\n1 0\r\n-9 -9\r\n0 0\r\n-1 -1\r\n-2 -2\r\n-3 -3\r\n-4 -4\r\n-5 -5\r\n-6 -6\r\n-7 -7\r\n-8 -8\r\n",
                "YES\r\n"
            ]
        ]
    }
]