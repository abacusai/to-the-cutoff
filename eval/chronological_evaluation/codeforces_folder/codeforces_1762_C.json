[
    {
        "name": "Binary Strings are Fun",
        "description": "A binary string\n    ^\n    \u2020\n \n    b\n of odd length \n    m\n is good if\n\n    b_i\n is the median\n    ^\n of \n    b[1,i]^\n for all odd\nindices \n    i\n (\n    1 \n    \u2264 i \n    \u2264 m\n). For a binary string \n    a\n of\nlength \n    k\n, a binary string \n    b\n of length \n    2k-1\n is an extension\nof \n    a\n if \n    b_2i-1=a_i\n for all \n    i\n such that \n    1 \n    \u2264 i\n    \n    \u2264 k\n. For example, 1001011 and 1101001 are extensions of the string\n1001. String \n    x=\n1011011 is not an extension of string \n    y=\n1001\nbecause \n    x_3 \n    \u2260 y_2\n. Note that there are \n    2^k-1\n different\nextensions of \n    a\n. You are given a binary string \n    s\n of length\n\n    n\n. Find the sum of the number of good extensions over all prefixes of\n\n    s\n. In other words, find \n    \u2211_i=1^n f(s[1,i])\n, where\n\n    f(x)\n gives number of good extensions of string \n    x\n. Since the answer\ncan be quite large, you only need to find it modulo \n    998\n     244\n     353\n.\n\n    ^\n    \u2020\n A binary string is a string whose elements are either\n\n    0\n or \n    1\n. \n    ^\n For a binary\nstring \n    a\n of length \n    2m-1\n, the median of \n    a\n is the (unique)\nelement that occurs at least \n    m\n times in \n    a\n. \n    ^\n\n\n    a[l,r]\n denotes the string of length \n    r-l+1\n which is formed by the\nconcatenation of \n    a_l,a_l+1,\n    \u2026,a_r\n in that order. Input Each test\ncontains multiple test cases. The first line contains the number of test cases\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n). The description of the test cases\nfollows. The first line of each test case contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n), where \n    n\n is the length of the\nbinary string \n    s\n. The second line of each test case contains the binary\nstring \n    s\n of length \n    n\n. It is guaranteed that the sum of \n    n\n\nover all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test\ncase, print the answer modulo \n    998\n     244\n     353\n. Example Input 6 1 1 1 0\n2 11 3 010 9 101101111 37 1011011111011010000011011111111011111 Output 1 1 3 3\n21 365 Note In the first and second test cases, \n    f(s[1,1])=1\n. In the\nthird test case, the answer is \n    f(s[1,1])+f(s[1,2])=1+2=3\n. In the fourth\ntest case, the answer is \n    f(s[1,1])+f(s[1,2])+f(s[1,3])=1+1+1=3\n.\n\n    f(\n    11)=2\n because two good extensions are possible: 101 and\n111. \n    f(\n    01)=1\n because only one good extension is possible:\n011.\n\n",
        "cf_contest_id": 1762,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1\r\n1\r\n1\r\n0\r\n2\r\n11\r\n3\r\n010\r\n9\r\n101101111\r\n37\r\n1011011111011010000011011111111011111\r\n",
                "1\r\n1\r\n3\r\n3\r\n21\r\n365\r\n"
            ]
        ],
        "private_cases": []
    }
]