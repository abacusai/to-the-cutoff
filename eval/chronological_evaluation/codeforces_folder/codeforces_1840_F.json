[
    {
        "name": "Railguns",
        "description": "Tema is playing a very interesting computer game. During the next mission,\nTema's character found himself on an unfamiliar planet. Unlike Earth, this\nplanet is flat and can be represented as an \n    n \n    \u00d7 m\n rectangle.\nTema's character is located at the point with coordinates \n    (0, 0)\n. In\norder to successfully complete the mission, he needs to reach the point with\ncoordinates \n    (n, m)\n alive. Let the character of the computer game be\nlocated at the coordinate \n    (i, j)\n. Every second, starting from the first,\nTema can: either use vertical hyperjump technology, after which his character\nwill end up at coordinate \n    (i + 1, j)\n at the end of the second; or use\nhorizontal hyperjump technology, after which his character will end up at\ncoordinate \n    (i, j + 1)\n at the end of the second; or Tema can choose not\nto make a hyperjump, in which case his character will not move during this\nsecond; The aliens that inhabit this planet are very dangerous and hostile.\nTherefore, they will shoot from their railguns \n    r\n times. Each shot\ncompletely penetrates one coordinate vertically or horizontally. If the\ncharacter is in the line of its impact at the time of the shot (at the end of\nthe second), he dies. Since Tema looked at the game's source code, he knows\ncomplete information about each shot \u2014 the time, the penetrated coordinate,\nand the direction of the shot. What is the minimum time for the character to\nreach the desired point? If he is doomed to die and cannot reach the point\nwith coordinates \n    (n, m)\n, output \n    -1\n. Input The first line of the\ninput contains a single integer \n    T\n (\n    1 \n    \u2264 T \n    \u2264 10^4\n) \u2014 the\nnumber of test cases. Then follow the descriptions of the test cases. The\nfirst line of each test case contains two integers \n    n\n and \n    m\n (\n    1\n    \n    \u2264 n \n    \u00b7 m \n    \u2264 10^4\n) \u2014 the size of the planet, its height and\nwidth. The second line of each test case contains a single integer \n    r\n\n(\n    1 \n    \u2264 r \n    \u2264 100\n) \u2014 the number of shots. Then follow \n    r\n lines,\neach describing one shot. A shot is described by three integers \n    t\n,\n\n    d\n, \n    coord\n. Where \n    t\n is the second at which the shot will be\nfired (\n    1 \n    \u2264 t \n    \u2264 10^9\n). \n    d\n is the direction of the shot (\n    d\n    = 1\n denotes a horizontal shot, \n    d = 2\n denotes a vertical shot).\n\n    coord\n is the size of the penetrated coordinate (\n    0 \n    \u2264 coord \n    \u2264\n    n\n for \n    d = 1\n, \n    0 \n    \u2264 coord \n    \u2264 m\n for \n    d = 2\n). The sum of\nthe products \n    n \n    \u00b7 m\n over all test cases does not exceed \n    10^4\n.\nOutput For each test case, output a single number \u2014 the minimum time for the\ncharacter to reach the coordinate \n    (n, m)\n, or \n    -1\n if he is doomed to\ndie. Example Input 5 1 3 4 1 2 0 2 2 1 3 2 2 4 1 1 3 3 6 2 1 0 2 1 1 2 1 2 2 2\n0 2 2 1 2 2 2 2 1 3 7 1 2 2 1 1 7 2 1 2 2 5 9 1 2 3 2 0 5 1 2 4 2 2 7 1 0 4 6\n7 6 1 2 12 1 3 4 1 0 17 2 3 1 2 6 16 2 6 3 2 4 Output 5 -1 3 6 10 Note In the\nfirst test case, the character can move as follows: \n    (0, 0) \n    \u2192\n    (0, 1) \n    \u2192 (0, 2) \n    \u2192 (0, 3) \n    \u2192 (0, 3)\n    \n    \u2192 (1, 3)\n. In the second test case, the character will not be\nable to leave the rectangle that will be completely penetrated by shots at the\nsecond \n    2\n.\n\n",
        "cf_contest_id": 1840,
        "cf_index": "F",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 3\r\n4\r\n1 2 0\r\n2 2 1\r\n3 2 2\r\n4 1 1\r\n3 3\r\n6\r\n2 1 0\r\n2 1 1\r\n2 1 2\r\n2 2 0\r\n2 2 1\r\n2 2 2\r\n2 1\r\n3\r\n7 1 2\r\n2 1 1\r\n7 2 1\r\n2 2\r\n5\r\n9 1 2\r\n3 2 0\r\n5 1 2\r\n4 2 2\r\n7 1 0\r\n4 6\r\n7\r\n6 1 2\r\n12 1 3\r\n4 1 0\r\n17 2 3\r\n1 2 6\r\n16 2 6\r\n3 2 4\r\n",
                "5\n-1\n3\n6\n10\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 10000\r\n1\r\n1 2 10000\r\n",
                "10001\n"
            ],
            [
                "1\r\n10000 1\r\n1\r\n100 1 10\r\n",
                "10001\n"
            ],
            [
                "1\r\n1 10000\r\n1\r\n1 1 1\r\n",
                "10001\n"
            ]
        ]
    }
]