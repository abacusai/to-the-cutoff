[
    {
        "name": "Cakes for Clones",
        "description": "You live on a number line. You are initially (at time moment \n    t = 0\n)\nlocated at point \n    x = 0\n. There are \n    n\n events of the following type:\nat time \n    t_i\n a small cake appears at coordinate \n    x_i\n. To collect\nthis cake, you have to be at this coordinate at this point, otherwise the cake\nspoils immediately. No two cakes appear at the same time and no two cakes\nappear at the same coordinate. You can move with the speed of \n    1\n length\nunit per one time unit. Also, at any moment you can create a clone of yourself\nat the same point where you are located. The clone can't move, but it will\ncollect the cakes appearing at this position for you. The clone disappears\nwhen you create another clone. If the new clone is created at time moment\n\n    t\n, the old clone can collect the cakes that appear before or at the time\nmoment \n    t\n, and the new clone can collect the cakes that appear at or\nafter time moment \n    t\n. Can you collect all the cakes (by yourself or with\nthe help of clones)? Input The first line contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 5000\n) \u2014 the number of cakes. Each of the next \n    n\n\nlines contains two integers \n    t_i\n and \n    x_i\n (\n    1 \n    \u2264 t_i \n    \u2264\n    10^9\n, \n    -10^9 \n    \u2264 x_i \n    \u2264 10^9\n) \u2014 the time and coordinate of a\ncake's appearance. All times are distinct and are given in increasing order,\nall the coordinates are distinct. Output Print \"YES\" if you can collect all\ncakes, otherwise print \"NO\". Examples Input 3 2 2 5 5 6 1 Output YES Input 3 1\n0 5 5 6 2 Output YES Input 3 2 1 5 5 6 0 Output NO Note In the first example\nyou should start moving towards \n    5\n right away, leaving a clone at\nposition \n    1\n at time moment \n    1\n, and collecting the cake at position\n\n    2\n at time moment \n    2\n. At time moment \n    5\n you are at the position\n\n    5\n and collect a cake there, your clone collects the last cake at time\nmoment \n    6\n. In the second example you have to leave a clone at position\n\n    0\n and start moving towards position \n    5\n. At time moment \n    1\n the\nclone collects a cake. At time moment \n    2\n you should create a new clone at\nthe current position \n    2\n, it will collect the last cake in future. You\nwill collect the second cake at position \n    5\n. In the third example there\nis no way to collect all cakes.\n\n",
        "cf_contest_id": 1415,
        "cf_index": "F",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2 2\r\n5 5\r\n6 1\r\n",
                "YES\r\n"
            ],
            [
                "3\r\n1 0\r\n5 5\r\n6 2\r\n",
                "YES\r\n"
            ],
            [
                "3\r\n2 1\r\n5 5\r\n6 0\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n2 1\r\n6 0\r\n7 -1\r\n8 2\r\n9 -2\r\n",
                "YES\r\n"
            ],
            [
                "10\r\n4 -27\r\n8 -29\r\n10 29\r\n13 21\r\n15 13\r\n18 1\r\n19 -17\r\n24 22\r\n25 18\r\n29 -26\r\n",
                "NO\r\n"
            ],
            [
                "10\r\n1 -8\r\n2 -19\r\n4 11\r\n5 -21\r\n6 -22\r\n7 24\r\n8 9\r\n9 -23\r\n11 2\r\n12 1\r\n",
                "NO\r\n"
            ],
            [
                "10\r\n3 30\r\n19 -27\r\n26 13\r\n35 -16\r\n36 -29\r\n37 1\r\n38 20\r\n48 2\r\n52 -21\r\n83 18\r\n",
                "NO\r\n"
            ],
            [
                "10\r\n114367879 114367879\r\n313238768 313238768\r\n577510323 577510323\r\n743416195 743416195\r\n788367444 788367444\r\n833208978 833208978\r\n930707467 930707467\r\n933574591 933574591\r\n941482410 941482410\r\n944857748 944857748\r\n",
                "YES\r\n"
            ],
            [
                "10\r\n100000000 25280705\r\n200000000 121178189\r\n300000000 219147240\r\n400000000 -570920213\r\n500000000 -829849659\r\n600000000 923854124\r\n700000000 18428128\r\n800000000 -781819137\r\n900000000 -876779400\r\n1000000000 528386329\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n16 13\r\n18 4\r\n20 3\r\n21 5\r\n",
                "NO\r\n"
            ],
            [
                "5\r\n30 10\r\n40 -10\r\n51 9\r\n52 8\r\n53 20\r\n",
                "YES\r\n"
            ],
            [
                "3\r\n999999998 999999998\r\n999999999 999999999\r\n1000000000 -1000000000\r\n",
                "NO\r\n"
            ]
        ]
    }
]