[
    {
        "name": "Tachibana Kanade's Tofu",
        "description": "Tachibana Kanade likes Mapo Tofu very much. One day, the canteen cooked all\nkinds of tofu to sell, but not all tofu is Mapo Tofu, only those spicy enough\ncan be called Mapo Tofu. Each piece of tofu in the canteen is given a m-based\nnumber, all numbers are in the range [l, r] (l and r being m-based numbers),\nand for every m-based integer in the range [l, r], there exists a piece of\ntofu with that number. To judge what tofu is Mapo Tofu, Tachibana Kanade chose\nn m-based number strings, and assigned a value to each string. If a string\nappears in the number of a tofu, the value of the string will be added to the\nvalue of that tofu. If a string appears multiple times, then the value is also\nadded that many times. Initially the value of each tofu is zero. Tachibana\nKanade considers tofu with values no more than k to be Mapo Tofu. So now\nTachibana Kanade wants to know, how many pieces of tofu are Mapo Tofu? Input\nThe first line contains three integers n, m and k (1 \u2264 n \u2264 200; 2 \u2264 m \u2264 20; 1\n\u2264 k \u2264 500). Where n denotes the number of strings, m denotes the base used,\nand k denotes the limit of the value for Mapo Tofu. The second line represents\nthe number l. The first integer in the line is len (1 \u2264 len \u2264 200), describing\nthe length (number of digits in base m) of l. Then follow len integers a1, a2,\n..., alen (0 \u2264 ai < m; a1 > 0) separated by spaces, representing the digits of\nl, with a1 being the highest digit and alen being the lowest digit. The third\nline represents the number r in the same format as l. It is guaranteed that 1\n\u2264 l \u2264 r. Then follow n lines, each line describing a number string. The i-th\nline contains the i-th number string and vi \u2014 the value of the i-th string (1\n\u2264 vi \u2264 200). All number strings are described in almost the same format as l,\nthe only difference is number strings may contain necessary leading zeros (see\nthe first example). The sum of the lengths of all number strings does not\nexceed 200. Output Output the number of pieces of Mapo Tofu modulo 1000000007\n(10^9 + 7). The answer should be a decimal integer. Examples Input 2 10 1 1 1\n3 1 0 0 1 1 1 1 0 1 Output 97 Input 2 10 12 2 5 9 6 6 3 5 4 9 7 2 0 6 1 3 6 7\n2 1 Output 635439 Input 4 2 6 6 1 0 1 1 1 0 6 1 1 0 1 0 0 1 1 2 3 0 1 0 5 4 0\n1 1 0 4 3 1 0 1 2 Output 2 Note In the first sample, 10, 11 and 100 are the\nonly three decimal numbers in [1, 100] with a value greater than 1. Here the\nvalue of 1 is 1 but not 2, since numbers cannot contain leading zeros and thus\ncannot be written as \"01\". In the second sample, no numbers in the given\ninterval have a value greater than 12. In the third sample, 110000 and 110001\nare the only two binary numbers in the given interval with a value no greater\nthan 6.\n\n",
        "cf_contest_id": 433,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2 10 1\r\n1 1\r\n3 1 0 0\r\n1 1 1\r\n1 0 1\r\n",
                "97\r\n"
            ],
            [
                "2 10 12\r\n2 5 9\r\n6 6 3 5 4 9 7\r\n2 0 6 1\r\n3 6 7 2 1\r\n",
                "635439\r\n"
            ],
            [
                "4 2 6\r\n6 1 0 1 1 1 0\r\n6 1 1 0 1 0 0\r\n1 1 2\r\n3 0 1 0 5\r\n4 0 1 1 0 4\r\n3 1 0 1 2\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 10 2\r\n2 6 4\r\n6 6 2 0 8 0 5\r\n4 9 3 7 6 1\r\n2 3 3 2\r\n4 8 8 7 9 3\r\n",
                "617793\r\n"
            ],
            [
                "5 13 7\r\n8 9 9 5 5 1 9 5 9\r\n86 3 5 11 6 4 3 6 9 2 9 11 8 9 8 7 4 7 12 11 0 8 6 2 6 0 2 4 8 8 11 3 3 2 10 4 10 3 3 4 6 12 8 11 5 0 11 6 5 9 10 3 7 11 7 9 0 4 3 5 0 1 4 5 4 11 9 10 6 8 11 4 12 10 5 2 3 12 6 2 3 3 0 9 7 3 9\r\n20 11 8 12 2 7 2 2 8 6 2 3 4 9 1 6 1 1 7 5 4 7\r\n36 9 5 4 11 12 6 2 9 5 3 9 1 1 3 12 1 8 4 4 2 9 4 7 3 2 12 12 6 6 11 4 1 9 3 9 4 22\r\n18 10 11 11 2 8 2 4 9 12 8 1 2 9 10 11 10 7 12 8\r\n2 7 5 28\r\n30 9 7 5 5 12 4 3 11 5 9 7 11 5 10 0 1 3 1 4 5 0 4 5 8 1 6 2 4 2 6 16\r\n",
                "300186376\r\n"
            ],
            [
                "11 19 10\r\n2 3 3\r\n3 1 15 1\r\n11 6 7 15 16 5 17 8 14 4 2 14 18\r\n17 12 9 6 1 6 16 6 3 0 1 17 10 13 12 11 10 7 7\r\n1 15 18\r\n8 4 13 2 8 0 14 1 6 24\r\n6 9 4 10 11 5 18 21\r\n5 12 0 16 15 17 8\r\n5 14 0 14 15 3 13\r\n1 8 17\r\n15 7 15 5 18 10 2 18 14 10 15 11 16 8 4 12 37\r\n4 11 16 18 3 30\r\n2 14 5 21\r\n",
                "471\r\n"
            ],
            [
                "13 7 64\r\n19 1 3 4 3 4 1 1 5 0 1 0 0 3 2 5 2 5 1 0\r\n70 3 5 6 6 5 1 0 4 1 3 3 1 3 3 4 2 0 3 6 2 6 2 2 5 3 3 2 6 2 1 0 2 6 0 0 0 0 2 1 4 1 0 0 1 1 4 2 2 3 3 2 2 6 3 1 5 3 4 2 5 1 4 5 1 3 2 6 5 1 3\r\n12 1 5 2 0 5 0 3 1 3 1 4 5 23\r\n7 2 2 6 0 2 1 5 8\r\n7 4 2 5 0 6 2 1 25\r\n7 5 3 0 3 4 3 1 39\r\n5 3 0 0 2 4 18\r\n1 2 27\r\n8 3 3 0 3 4 3 1 4 4\r\n10 0 6 5 1 3 4 3 1 6 6 23\r\n10 6 4 4 6 3 3 6 6 0 0 7\r\n2 3 5 32\r\n3 5 2 5 7\r\n1 6 9\r\n8 1 3 5 2 1 2 4 2 12\r\n",
                "670704996\r\n"
            ],
            [
                "4 10 67\r\n1 6\r\n24 8 7 2 2 4 9 7 1 4 2 9 1 0 7 4 3 6 2 5 5 2 8 2 2\r\n50 4 6 0 5 9 9 5 6 7 0 1 8 9 9 6 4 3 7 5 9 2 0 7 6 4 8 7 1 8 2 9 3 8 5 6 9 6 3 4 2 2 9 3 0 6 0 6 6 6 2 21\r\n9 9 8 6 8 4 1 0 5 3 3\r\n30 0 4 6 6 3 6 4 2 9 0 4 4 9 1 0 4 6 4 0 7 7 2 5 9 4 6 6 6 8 2 6\r\n33 5 6 6 2 3 0 8 1 9 1 7 8 7 8 4 0 2 9 8 8 8 1 7 9 7 9 1 5 0 2 9 2 6 30\r\n",
                "405255535\r\n"
            ],
            [
                "14 15 55\r\n1 10\r\n53 5 2 3 13 13 6 10 6 7 13 8 5 10 6 11 9 10 6 5 12 3 10 11 5 14 0 8 2 3 11 5 2 8 12 0 5 9 1 14 2 10 5 6 8 1 6 3 14 4 0 3 0 3\r\n1 9 12\r\n2 0 13 18\r\n8 4 6 5 14 9 7 13 9 31\r\n7 2 9 3 10 7 7 6 36\r\n14 13 2 7 2 0 9 8 8 13 5 0 9 8 13 13\r\n12 9 9 5 3 11 7 0 2 2 8 6 6 20\r\n9 2 6 11 9 14 12 11 1 12 7\r\n2 9 8 5\r\n9 8 1 12 10 13 13 7 14 2 30\r\n2 9 7 27\r\n4 3 12 2 3 9\r\n12 3 14 3 7 5 3 7 14 0 13 14 14 11\r\n14 9 11 3 10 14 12 11 0 6 6 5 2 0 10 13\r\n11 13 12 0 8 3 9 2 11 6 13 9 32\r\n",
                "518525133\r\n"
            ],
            [
                "1 2 1\r\n1 1\r\n1 1\r\n1 1 1\r\n",
                "1\r\n"
            ]
        ]
    }
]