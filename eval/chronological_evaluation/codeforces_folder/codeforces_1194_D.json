[
    {
        "name": "1-2-K Game",
        "description": "Alice and Bob play a game. There is a paper strip which is divided into n + 1\ncells numbered from left to right starting from 0. There is a chip placed in\nthe n-th cell (the last one). Players take turns, Alice is first. Each player\nduring his or her turn has to move the chip 1, 2 or k cells to the left (so,\nif the chip is currently in the cell i, the player can move it into cell i -\n1, i - 2 or i - k). The chip should not leave the borders of the paper strip:\nit is impossible, for example, to move it k cells to the left if the current\ncell has number i < k. The player who can't make a move loses the game. Who\nwins if both participants play optimally? Alice and Bob would like to play\nseveral games, so you should determine the winner in each game. Input The\nfirst line contains the single integer T (1 \u2264 T \u2264 100) \u2014 the number of games.\nNext T lines contain one game per line. All games are independent. Each of the\nnext T lines contains two integers n and k (0 \u2264 n \u2264 10^9, 3 \u2264 k \u2264 10^9) \u2014 the\nlength of the strip and the constant denoting the third move, respectively.\nOutput For each game, print Alice if Alice wins this game and Bob otherwise.\nExample Input 4 0 3 3 3 3 4 4 4 Output Bob Alice Bob Alice\n\n",
        "cf_contest_id": 1194,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n0 3\r\n3 3\r\n3 4\r\n4 4\r\n",
                "Bob\r\nAlice\r\nBob\r\nAlice\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n73 18\r\n",
                "Alice\r\n"
            ],
            [
                "1\r\n25 6\r\n",
                "Alice\r\n"
            ],
            [
                "24\r\n19 9\r\n20 9\r\n21 9\r\n22 9\r\n23 9\r\n24 9\r\n25 9\r\n26 9\r\n27 9\r\n28 9\r\n29 9\r\n30 9\r\n31 9\r\n32 9\r\n1000000000 999999999\r\n999999996 999999999\r\n999999997 999999999\r\n1000000000 6\r\n1000000000 3\r\n1000000000 9\r\n999999999 6\r\n999999996 6\r\n999999992 6\r\n999999999 9\r\n",
                "Alice\r\nBob\r\nAlice\r\nAlice\r\nBob\r\nAlice\r\nAlice\r\nBob\r\nAlice\r\nAlice\r\nAlice\r\nBob\r\nAlice\r\nAlice\r\nBob\r\nBob\r\nAlice\r\nAlice\r\nBob\r\nBob\r\nAlice\r\nAlice\r\nAlice\r\nAlice\r\n"
            ],
            [
                "1\r\n24 6\r\n",
                "Bob\r\n"
            ]
        ]
    }
]