[
    {
        "name": "Gifts",
        "description": "Once upon a time an old man and his wife lived by the great blue sea. One day\nthe old man went fishing and caught a real live gold fish. The fish said: \"Oh\nye, old fisherman! Pray set me free to the ocean and I will grant you with n\ngifts, any gifts you wish!\". Then the fish gave the old man a list of gifts\nand their prices. Some gifts on the list can have the same names but distinct\nprices. However, there can't be two gifts with the same names and the same\nprices. Also, there can be gifts with distinct names and the same prices. The\nold man can ask for n names of items from the list. If the fish's list has p\noccurrences of the given name, then the old man can't ask for this name of\nitem more than p times. The old man knows that if he asks for s gifts of the\nsame name, the fish will randomly (i.e. uniformly amongst all possible\nchoices) choose s gifts of distinct prices with such name from the list. The\nold man wants to please his greedy wife, so he will choose the n names in such\na way that he can get n gifts with the maximum price. Besides, he isn't the\nbrightest of fishermen, so if there are several such ways, he chooses one of\nthem uniformly. The old man wondered, what is the probability that he can get\nn most expensive gifts. As the old man isn't good at probability theory, he\nasks you to help him. Input The first line contains two space-separated\nintegers n and m (1 \u2264 n, m \u2264 1000) \u2014 the number of the old man's wishes and\nthe number of distinct names in the goldfish's list, correspondingly. Then m\nlines follow: the i-th line first contains integer ki (ki > 0) \u2014 the number of\ndistinct prices of gifts with the i-th name, then ki distinct space-separated\nintegers cij (1 \u2264 cij \u2264 10^9), the gifts' prices. It is guaranteed that the\nsum of all ki doesn't exceed 1000. It is guaranteed that n is not greater than\nthe total number of the gifts. Output On a single line print one real number \u2014\nthe probability of getting n most valuable gifts. The answer will be\nconsidered correct if its absolute or relative error does not exceed 10^-9.\nExamples Input 3 1 3 10 20 30 Output 1.000000000 Input 3 2 1 40 4 10 20 30 40\nOutput 0.166666667\n\n",
        "cf_contest_id": 229,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "math",
            "probabilities"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 1\r\n3 10 20 30\r\n",
                "1.000000000000\r\n"
            ],
            [
                "3 2\r\n1 40\r\n4 10 20 30 40\r\n",
                "0.166666666667\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 1\r\n5 1 2 3 4 5\r\n",
                "1.000000000000\r\n"
            ],
            [
                "6 2\r\n3 1 2 3\r\n3 4 5 6\r\n",
                "1.000000000000\r\n"
            ],
            [
                "6 2\r\n3 1 2 3\r\n3 1 2 3\r\n",
                "1.000000000000\r\n"
            ],
            [
                "6 2\r\n3 2 3 1\r\n3 5 4 6\r\n",
                "1.000000000000\r\n"
            ],
            [
                "6 2\r\n3 999999998 999999999 1000000000\r\n3 999999998 999999999 1000000000\r\n",
                "1.000000000000\r\n"
            ],
            [
                "2 2\r\n2 1 2\r\n2 1 2\r\n",
                "0.250000000000\r\n"
            ],
            [
                "4 6\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "1.000000000000\r\n"
            ],
            [
                "8 6\r\n5 5 4 3 2 1\r\n5 5 4 3 2 1\r\n3 5 3 1\r\n2 3 1\r\n1 3\r\n1 3\r\n",
                "0.002500000000\r\n"
            ],
            [
                "5 10\r\n1 10\r\n1 9\r\n1 8\r\n1 7\r\n1 6\r\n1 5\r\n1 4\r\n1 3\r\n1 2\r\n1 1\r\n",
                "1.000000000000\r\n"
            ],
            [
                "1 1\r\n1 1\r\n",
                "1.000000000000\r\n"
            ],
            [
                "2 1\r\n2 1 2\r\n",
                "1.000000000000\r\n"
            ],
            [
                "3 1\r\n3 1 2 3\r\n",
                "1.000000000000\r\n"
            ],
            [
                "2 3\r\n2 2 4\r\n1 2\r\n1 1\r\n",
                "0.750000000000\r\n"
            ],
            [
                "3 2\r\n3 2 3 5\r\n2 1 3\r\n",
                "0.166666666667\r\n"
            ],
            [
                "2 2\r\n4 1 3 5 6\r\n2 1 2\r\n",
                "0.166666666667\r\n"
            ],
            [
                "7 2\r\n5 1 2 3 4 6\r\n2 1 2\r\n",
                "1.000000000000\r\n"
            ],
            [
                "3 3\r\n5 1 3 4 5 6\r\n2 2 4\r\n1 1\r\n",
                "0.075000000000\r\n"
            ],
            [
                "8 3\r\n4 2 3 5 7\r\n4 1 3 5 6\r\n1 1\r\n",
                "0.625000000000\r\n"
            ],
            [
                "9 5\r\n2 1 3\r\n4 2 4 6 7\r\n1 2\r\n2 2 3\r\n1 2\r\n",
                "0.500000000000\r\n"
            ],
            [
                "1 5\r\n3 2 3 4\r\n3 1 2 3\r\n3 2 4 5\r\n1 1\r\n1 1\r\n",
                "0.333333333333\r\n"
            ],
            [
                "11 4\r\n3 2 4 6\r\n6 1 3 5 7 9 10\r\n2 1 2\r\n1 1\r\n",
                "0.555555555556\r\n"
            ],
            [
                "10 4\r\n2 2 3\r\n6 1 3 5 7 8 10\r\n4 1 2 4 5\r\n1 1\r\n",
                "0.041666666667\r\n"
            ],
            [
                "11 6\r\n1 1\r\n4 1 2 3 4\r\n2 1 2\r\n3 2 3 4\r\n2 1 2\r\n2 1 2\r\n",
                "0.143750000000\r\n"
            ],
            [
                "7 5\r\n1 1\r\n5 2 4 6 8 10\r\n6 1 3 4 5 7 8\r\n2 1 3\r\n1 2\r\n",
                "0.008333333333\r\n"
            ],
            [
                "1 5\r\n6 1 3 5 7 8 10\r\n5 1 2 4 6 7\r\n1 1\r\n3 1 2 3\r\n1 1\r\n",
                "0.166666666667\r\n"
            ],
            [
                "9 5\r\n1 2\r\n6 1 2 3 5 7 9\r\n4 2 3 5 6\r\n1 2\r\n6 2 4 6 8 9 11\r\n",
                "0.000555555556\r\n"
            ],
            [
                "20 9\r\n4 2 3 4 6\r\n4 2 4 5 6\r\n1 2\r\n3 2 4 6\r\n2 2 3\r\n2 2 3\r\n1 2\r\n2 2 4\r\n1 1\r\n",
                "1.000000000000\r\n"
            ],
            [
                "21 12\r\n7 657 7 6 5 4 2 1\r\n8 142 9 7 6 5 4 2 1\r\n8 853 9 8 7 6 4 2 1\r\n11 708 369 9 8 7 6 5 4 3 2 1\r\n8 9 8 7 6 5 4 3 2\r\n9 969 867 774 9 8 7 5 4 2\r\n9 869 575 527 9 7 5 4 3 2\r\n8 839 248 77 9 7 6 3 1\r\n9 952 9 7 6 5 4 3 2 1\r\n7 380 9 8 7 6 5 4\r\n9 511 494 203 9 8 7 6 4 1\r\n7 721 8 7 6 5 4 2\r\n",
                "0.000000000000\r\n"
            ],
            [
                "51 9\r\n7 483 459 7 6 5 2 1\r\n12 953 940 926 792 612 241 7 5 4 3 2 1\r\n14 904 633 441 361 324 286 79 8 7 6 5 4 2 1\r\n12 928 450 443 426 53 9 8 7 6 5 4 1\r\n10 643 415 202 109 106 9 7 6 4 1\r\n10 803 582 381 354 216 169 6 5 3 1\r\n12 813 701 569 467 328 179 63 8 7 5 3 1\r\n12 822 636 573 563 480 370 367 8 7 6 5 1\r\n11 910 774 463 175 80 8 7 5 4 2 1\r\n",
                "0.000000000000\r\n"
            ],
            [
                "90 50\r\n3 523 254 10\r\n2 335 10\r\n1 10\r\n3 645 293 10\r\n3 174 56 10\r\n1 10\r\n1 10\r\n1 10\r\n1 10\r\n3 384 161 10\r\n2 465 10\r\n2 582 10\r\n1 10\r\n1 10\r\n2 165 10\r\n2 673 10\r\n2 638 10\r\n4 653 535 192 10\r\n2 269 10\r\n3 427 134 10\r\n2 966 10\r\n1 10\r\n3 221 21 10\r\n2 840 10\r\n2 764 10\r\n1 10\r\n2 747 10\r\n2 67 10\r\n1 10\r\n3 951 13 10\r\n3 651 405 10\r\n1 10\r\n1 10\r\n3 729 87 10\r\n2 631 10\r\n2 376 10\r\n2 652 10\r\n1 10\r\n1 10\r\n3 923 233 10\r\n2 450 10\r\n2 830 10\r\n2 271 10\r\n3 775 391 10\r\n3 850 733 10\r\n2 598 10\r\n1 10\r\n3 797 682 10\r\n3 596 508 10\r\n1 10\r\n",
                "0.005722876012\r\n"
            ]
        ]
    }
]