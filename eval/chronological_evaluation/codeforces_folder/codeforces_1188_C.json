[
    {
        "name": "Array Beauty",
        "description": "Let's call beauty of an array \n    b_1, b_2, \n    \u2026, b_n\n (\n    n > 1\n) \u2014\n\n    min\n    _1 \n    \u2264 i < j \n    \u2264 n |b_i - b_j|\n. You're given an\narray \n    a_1, a_2, \n    \u2026 a_n\n and a number \n    k\n. Calculate the sum of\nbeauty over all subsequences of the array of length exactly \n    k\n. As this\nnumber can be very large, output it modulo \n    998244353\n. A sequence \n    a\n\nis a subsequence of an array \n    b\n if \n    a\n can be obtained from \n    b\n\nby deletion of several (possibly, zero or all) elements. Input The first line\ncontains integers \n    n, k\n (\n    2 \n    \u2264 k \n    \u2264 n \n    \u2264 1000\n). The second\nline contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i\n    \n    \u2264 10^5\n). Output Output one integer \u2014 the sum of beauty over all\nsubsequences of the array of length exactly \n    k\n. As this number can be\nvery large, output it modulo \n    998244353\n. Examples Input 4 3 1 7 3 5\nOutput 8 Input 5 5 1 10 100 1000 10000 Output 9 Note In the first example,\nthere are \n    4\n subsequences of length \n    3\n \u2014 \n    [1, 7, 3]\n, \n    [1, 3,\n    5]\n, \n    [7, 3, 5]\n, \n    [1, 7, 5]\n, each of which has beauty \n    2\n, so\nanswer is \n    8\n. In the second example, there is only one subsequence of\nlength \n    5\n \u2014 the whole array, which has the beauty equal to \n    |10-1| =\n    9\n.\n\n",
        "cf_contest_id": 1188,
        "cf_index": "C",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3\r\n1 7 3 5\r\n",
                "8"
            ],
            [
                "5 5\r\n1 10 100 1000 10000\r\n",
                "9"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n52233 12247\r\n",
                "39986"
            ],
            [
                "3 2\r\n4 4 4\r\n",
                "0"
            ],
            [
                "10 3\r\n10000 20000 30000 40000 50000 60000 70000 80000 90000 100000\r\n",
                "2000000"
            ],
            [
                "6 4\r\n36874 16401 3128 2000 1343 1260\r\n",
                "9470"
            ],
            [
                "12 7\r\n15809 57514 78998 84734 87276 90593 95915 97387 98583 99971 99991 99997\r\n",
                "451011"
            ],
            [
                "52 52\r\n19752 66708 73109 84463 95683 96876 98503 98812 99766 99778 99913 99975 99977 99997 99997 99997 99998 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\r\n",
                "0"
            ],
            [
                "5 3\r\n96497 62751 76014 23191 16861\r\n",
                "167237"
            ],
            [
                "14 12\r\n681 14683 40716 67845 32350 92400 5755 68869 24772 1955 56419 89403 87360 90186\r\n",
                "78278"
            ],
            [
                "5 3\r\n100 100 100 100 100\r\n",
                "0"
            ],
            [
                "100 51\r\n245 196 57 35 8 4 2 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "0"
            ],
            [
                "4 3\r\n1279 80972 85162 86681\r\n",
                "12937"
            ]
        ]
    }
]