[
    {
        "name": "Sea and Islands",
        "description": "A map of some object is a rectangular field consisting of n rows and n\ncolumns. Each cell is initially occupied by the sea but you can cover some\nsome cells of the map with sand so that exactly k islands appear on the map.\nWe will call a set of sand cells to be island if it is possible to get from\neach of them to each of them by moving only through sand cells and by moving\nfrom a cell only to a side-adjacent cell. The cells are called to be side-\nadjacent if they share a vertical or horizontal side. It is easy to see that\nislands do not share cells (otherwise they together form a bigger island).\nFind a way to cover some cells with sand so that exactly k islands appear on\nthe n \u00d7 n map, or determine that no such way exists. Input The single line\ncontains two positive integers n, k (1 \u2264 n \u2264 100, 0 \u2264 k \u2264 n^2) \u2014 the size of\nthe map and the number of islands you should form. Output If the answer\ndoesn't exist, print \"NO\" (without the quotes) in a single line. Otherwise,\nprint \"YES\" in the first line. In the next n lines print the description of\nthe map. Each of the lines of the description must consist only of characters\n'S' and 'L', where 'S' is a cell that is occupied by the sea and 'L' is the\ncell covered with sand. The length of each line of the description must equal\nn. If there are multiple answers, you may print any of them. You should not\nmaximize the sizes of islands. Examples Input 5 2 Output YES SSSSS LLLLL SSSSS\nLLLLL SSSSS Input 5 25 Output NO\n\n",
        "cf_contest_id": 544,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 2\r\n",
                "YES\r\nLSLSS\r\nSSSSS\r\nSSSSS\r\nSSSSS\r\nSSSSS\r\n"
            ],
            [
                "5 25\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "82 6047\r\n",
                "NO\r\n"
            ],
            [
                "6 5\r\n",
                "YES\r\nLSLSLS\r\nSLSLSS\r\nSSSSSS\r\nSSSSSS\r\nSSSSSS\r\nSSSSSS\r\n"
            ],
            [
                "10 80\r\n",
                "NO\r\n"
            ],
            [
                "48 1279\r\n",
                "NO\r\n"
            ],
            [
                "40 1092\r\n",
                "NO\r\n"
            ],
            [
                "9 12\r\n",
                "YES\r\nLSLSLSLSL\r\nSLSLSLSLS\r\nLSLSLSSSS\r\nSSSSSSSSS\r\nSSSSSSSSS\r\nSSSSSSSSS\r\nSSSSSSSSS\r\nSSSSSSSSS\r\nSSSSSSSSS\r\n"
            ],
            [
                "100 5001\r\n",
                "NO\r\n"
            ],
            [
                "99 4902\r\n",
                "NO\r\n"
            ],
            [
                "99 9801\r\n",
                "NO\r\n"
            ],
            [
                "100 10000\r\n",
                "NO\r\n"
            ],
            [
                "50 1438\r\n",
                "NO\r\n"
            ],
            [
                "50 2447\r\n",
                "NO\r\n"
            ],
            [
                "49 1719\r\n",
                "NO\r\n"
            ],
            [
                "51 1996\r\n",
                "NO\r\n"
            ],
            [
                "51 1981\r\n",
                "NO\r\n"
            ],
            [
                "34 1060\r\n",
                "NO\r\n"
            ],
            [
                "74 3901\r\n",
                "NO\r\n"
            ],
            [
                "34 621\r\n",
                "NO\r\n"
            ],
            [
                "1 0\r\n",
                "YES\r\nS\r\n"
            ],
            [
                "10 0\r\n",
                "YES\r\nSSSSSSSSSS\r\nSSSSSSSSSS\r\nSSSSSSSSSS\r\nSSSSSSSSSS\r\nSSSSSSSSSS\r\nSSSSSSSSSS\r\nSSSSSSSSSS\r\nSSSSSSSSSS\r\nSSSSSSSSSS\r\nSSSSSSSSSS\r\n"
            ],
            [
                "11 0\r\n",
                "YES\r\nSSSSSSSSSSS\r\nSSSSSSSSSSS\r\nSSSSSSSSSSS\r\nSSSSSSSSSSS\r\nSSSSSSSSSSS\r\nSSSSSSSSSSS\r\nSSSSSSSSSSS\r\nSSSSSSSSSSS\r\nSSSSSSSSSSS\r\nSSSSSSSSSSS\r\nSSSSSSSSSSS\r\n"
            ],
            [
                "1 1\r\n",
                "YES\r\nL\r\n"
            ],
            [
                "2 1\r\n",
                "YES\r\nLS\r\nSS\r\n"
            ],
            [
                "2 0\r\n",
                "YES\r\nSS\r\nSS\r\n"
            ],
            [
                "2 2\r\n",
                "YES\r\nLS\r\nSL\r\n"
            ],
            [
                "2 3\r\n",
                "NO\r\n"
            ],
            [
                "2 4\r\n",
                "NO\r\n"
            ]
        ]
    }
]