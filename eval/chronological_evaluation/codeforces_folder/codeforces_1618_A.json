[
    {
        "name": "Polycarp and Sums of Subsequences",
        "description": "Polycarp had an array \n    a\n of \n    3\n positive integers. He wrote out the\nsums of all non-empty subsequences of this array, sorted them in non-\ndecreasing order, and got an array \n    b\n of \n    7\n integers. For example,\nif \n    a = \n    \n    1, 4, 3\n, then Polycarp wrote out \n    1\n, \n    4\n,\n\n    3\n, \n    1 + 4 = 5\n, \n    1 + 3 = 4\n, \n    4 + 3 = 7\n, \n    1 + 4 + 3 =\n    8\n. After sorting, he got an array \n    b = \n    \n    1, 3, 4, 4, 5, 7, 8\n    \n    .\n\nUnfortunately, Polycarp lost the array \n    a\n. He only has the array \n    b\n\nleft. Help him to restore the array \n    a\n. Input The first line contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 5000\n) \u2014 the number of test cases. Each\ntest case consists of one line which contains \n    7\n integers \n    b_1, b_2,\n    \n    \u2026, b_7\n (\n    1 \n    \u2264 b_i \n    \u2264 10^9\n; \n    b_i \n    \u2264 b_i+1\n).\nAdditional constraint on the input: there exists at least one array \n    a\n\nwhich yields this array \n    b\n as described in the statement. Output For each\ntest case, print \n    3\n integers \u2014 \n    a_1\n, \n    a_2\n and \n    a_3\n. If\nthere can be several answers, print any of them. Example Input 5 1 3 4 4 5 7 8\n1 2 3 4 5 6 7 300000000 300000000 300000000 600000000 600000000 600000000\n900000000 1 1 2 999999998 999999999 999999999 1000000000 1 2 2 3 3 4 5 Output\n1 4 3 4 1 2 300000000 300000000 300000000 999999998 1 1 1 2 2 Note The\nsubsequence of the array \n    a\n is a sequence that can be obtained from\n\n    a\n by removing zero or more of its elements. Two subsequences are\nconsidered different if index sets of elements included in them are different.\nThat is, the values of the elements don't matter in the comparison of\nsubsequences. In particular, any array of length \n    3\n has exactly \n    7\n\ndifferent non-empty subsequences.\n\n",
        "cf_contest_id": 1618,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 3 4 4 5 7 8\r\n1 2 3 4 5 6 7\r\n300000000 300000000 300000000 600000000 600000000 600000000 900000000\r\n1 1 2 999999998 999999999 999999999 1000000000\r\n1 2 2 3 3 4 5\r\n",
                "1 3 4\r\n1 2 4\r\n300000000 300000000 300000000\r\n1 1 999999998\r\n1 2 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 1 2 69696967 69696968 69696968 69696969\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696967\r\n1 1 1\r\n"
            ],
            [
                "1\r\n69696868 69696868 69696868 139393736 139393736 139393736 209090604\r\n",
                "69696868 69696868 69696868\r\n"
            ],
            [
                "2\r\n1 1 2 69696869 69696870 69696870 69696871\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696869\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696868 69696869 69696869 69696870\r\n1 2 3 4 5 6 7\r\n",
                "1 1 69696868\r\n1 2 4\r\n"
            ],
            [
                "2\r\n1 1 2 69696870 69696871 69696871 69696872\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696870\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696871 69696872 69696872 69696873\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696871\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696872 69696873 69696873 69696874\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696872\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696873 69696874 69696874 69696875\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696873\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696874 69696875 69696875 69696876\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696874\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696875 69696876 69696876 69696877\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696875\r\n1 1 1\r\n"
            ],
            [
                "1\r\n1 2 3 69696875 69696876 69696877 69696878\r\n",
                "1 2 69696875\r\n"
            ],
            [
                "2\r\n1 1 2 69696877 69696878 69696878 69696879\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696877\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696878 69696879 69696879 69696880\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696878\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696879 69696880 69696880 69696881\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696879\r\n1 1 1\r\n"
            ],
            [
                "1\r\n1 1 2 69696880 69696881 69696881 69696882\r\n",
                "1 1 69696880\r\n"
            ],
            [
                "1\r\n1 2 3 69696887 69696888 69696889 69696890\r\n",
                "1 2 69696887\r\n"
            ],
            [
                "2\r\n1 1 2 69696881 69696882 69696882 69696883\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696881\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696887 69696888 69696888 69696889\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696887\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696886 69696887 69696887 69696888\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696886\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696885 69696886 69696886 69696887\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696885\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 69696882 69696883 69696883 69696884\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696882\r\n1 1 1\r\n"
            ],
            [
                "1\r\n1 1 2 69696883 69696884 69696884 69696885\r\n",
                "1 1 69696883\r\n"
            ],
            [
                "1\r\n1 1 2 69696884 69696885 69696885 69696886\r\n",
                "1 1 69696884\r\n"
            ],
            [
                "2\r\n1 1 2 69696889 69696890 69696890 69696891\r\n1 1 1 2 2 2 3\r\n",
                "1 1 69696889\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 696967 696968 696968 696969\r\n1 1 1 2 2 2 3\r\n",
                "1 1 696967\r\n1 1 1\r\n"
            ],
            [
                "2\r\n1 1 2 598989 598990 598990 598991\r\n1 3 4 4 5 7 8\r\n",
                "1 1 598989\r\n1 3 4\r\n"
            ]
        ]
    }
]