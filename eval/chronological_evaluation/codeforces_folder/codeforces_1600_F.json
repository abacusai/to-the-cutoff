[
    {
        "name": "Party Organization",
        "description": "On the great island of Baltia, there live \n    N\n people, numbered from\n\n    1\n to \n    N\n. There are exactly \n    M\n pairs of people that are friends\nwith each other. The people of Baltia want to organize a successful party, but\nthey have very strict rules on what a party is and when the party is\nsuccessful. On the island of Baltia, a party is a gathering of exactly \n    5\n\npeople. The party is considered to be successful if either all the people at\nthe party are friends with each other (so that they can all talk to each other\nwithout having to worry about talking to someone they are not friends with) or\nno two people at the party are friends with each other (so that everyone can\njust be on their phones without anyone else bothering them). Please help the\npeople of Baltia organize a successful party or tell them that it's impossible\nto do so. Input The first line contains two integer numbers, \n    N\n (\n    5\n    \n    \u2264 N \n    \u2264 2*10^5\n) and \n    M\n (\n    0 \n    \u2264 M \n    \u2264 2*10^5\n) \u2013 the\nnumber of people that live in Baltia, and the number of friendships. The next\n\n    M\n lines each contains two integers \n    U_i\n and \n    V_i\n (\n    1 \n    \u2264\n    U_i,V_i \n    \u2264 N\n) \u2013 meaning that person \n    U_i\n is friends with person\n\n    V_i\n. Two friends can not be in the list of friends twice (no pairs are\nrepeated) and a person can be friends with themselves (\n    U_i \n     V_i\n).\nOutput If it's possible to organize a successful party, print \n    5\n numbers\nindicating which \n    5\n people should be invited to the party. If it's not\npossible to organize a successful party, print \n    -1\n instead. If there are\nmultiple successful parties possible, print any. Examples Input 6 3 1 4 4 2 5\n4 Output 1 2 3 5 6 Input 5 4 1 2 2 3 3 4 4 5 Output -1\n\n",
        "cf_contest_id": 1600,
        "cf_index": "F",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "math",
            "probabilities"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 3\r\n1 4\r\n4 2\r\n5 4\r\n",
                "1 2 3 5 6"
            ],
            [
                "5 4\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n",
                "-1"
            ]
        ],
        "private_cases": [
            [
                "5 0\r\n",
                "1 2 3 4 5"
            ],
            [
                "6 13\r\n5 6\r\n2 5\r\n1 4\r\n6 2\r\n3 5\r\n4 5\r\n6 4\r\n3 1\r\n1 6\r\n1 5\r\n2 4\r\n6 3\r\n1 2\r\n",
                "1 2 4 5 6"
            ],
            [
                "10 8\r\n5 2\r\n1 8\r\n5 7\r\n1 9\r\n6 4\r\n2 7\r\n8 9\r\n3 10\r\n",
                "-1"
            ],
            [
                "10 8\r\n2 7\r\n2 9\r\n7 9\r\n8 10\r\n5 3\r\n1 4\r\n10 6\r\n6 8\r\n",
                "-1"
            ],
            [
                "20 57\r\n13 14\r\n12 20\r\n18 3\r\n17 20\r\n15 9\r\n18 13\r\n12 19\r\n2 4\r\n9 2\r\n12 11\r\n14 1\r\n16 11\r\n11 14\r\n16 4\r\n16 15\r\n11 19\r\n15 4\r\n10 15\r\n12 5\r\n9 3\r\n10 2\r\n10 4\r\n20 19\r\n14 7\r\n19 2\r\n5 8\r\n6 14\r\n4 17\r\n2 17\r\n17 9\r\n13 9\r\n19 9\r\n18 8\r\n12 16\r\n18 5\r\n7 1\r\n8 3\r\n11 20\r\n6 13\r\n20 5\r\n13 8\r\n17 19\r\n7 6\r\n9 11\r\n18 9\r\n13 1\r\n12 14\r\n7 3\r\n10 16\r\n20 2\r\n5 3\r\n10 17\r\n6 1\r\n8 9\r\n7 5\r\n12 15\r\n15 11\r\n",
                "-1"
            ]
        ]
    }
]