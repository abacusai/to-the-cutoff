[
    {
        "name": "Arrays Sum",
        "description": "You are given a non-decreasing array of non-negative integers \n    a_1, a_2,\n    \n    \u2026, a_n\n. Also you are given a positive integer \n    k\n. You want to\nfind \n    m\n non-decreasing arrays of non-negative integers \n    b_1, b_2,\n    \n    \u2026, b_m\n, such that: The size of \n    b_i\n is equal to \n    n\n for all\n\n    1 \n    \u2264 i \n    \u2264 m\n. For all \n    1 \n    \u2264 j \n    \u2264 n\n, \n    a_j = b_1,\n    j + b_2, j + \n    \u2026 + b_m, j\n. In the other word, array \n    a\n is\nthe sum of arrays \n    b_i\n. The number of different elements in the array\n\n    b_i\n is at most \n    k\n for all \n    1 \n    \u2264 i \n    \u2264 m\n. Find the\nminimum possible value of \n    m\n, or report that there is no possible\n\n    m\n. Input The first line contains one integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 100\n): the number of test cases. The first line of each test case\ncontains two integers \n    n\n, \n    k\n (\n    1 \n    \u2264 n \n    \u2264 100\n, \n    1\n    \n    \u2264 k \n    \u2264 n\n). The second line contains \n    n\n integers \n    a_1, a_2,\n    \n    \u2026, a_n\n (\n    0 \n    \u2264 a_1 \n    \u2264 a_2 \n    \u2264\n    \u2026\n    \u2264 a_n \n    \u2264\n    100\n, \n    a_n > 0\n). Output For each test case print a single integer: the\nminimum possible value of \n    m\n. If there is no such \n    m\n, print\n\n    -1\n. Example Input 6 4 1 0 0 0 1 3 1 3 3 3 11 3 0 1 2 2 3 3 3 4 4 4 4 5 3\n1 2 3 4 5 9 4 2 2 3 5 7 11 13 13 17 10 7 0 1 1 2 3 3 4 5 5 6 Output -1 1 2 2 2\n1 Note In the first test case, there is no possible \n    m\n, because all\nelements of all arrays should be equal to \n    0\n. But in this case, it is\nimpossible to get \n    a_4 = 1\n as the sum of zeros. In the second test case,\nwe can take \n    b_1 = [3, 3, 3]\n. \n    1\n is the smallest possible value of\n\n    m\n. In the third test case, we can take \n    b_1 = [0, 1, 1, 1, 2, 2, 2, 2,\n    2, 2, 2]\n and \n    b_2 = [0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2]\n. It's easy to\nsee, that \n    a_i = b_1, i + b_2, i\n for all \n    i\n and the number of\ndifferent elements in \n    b_1\n and in \n    b_2\n is equal to \n    3\n (so it is\nat most \n    3\n). It can be proven that \n    2\n is the smallest possible value\nof \n    m\n.\n\n",
        "cf_contest_id": 1408,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n4 1\r\n0 0 0 1\r\n3 1\r\n3 3 3\r\n11 3\r\n0 1 2 2 3 3 3 4 4 4 4\r\n5 3\r\n1 2 3 4 5\r\n9 4\r\n2 2 3 5 7 11 13 13 17\r\n10 7\r\n0 1 1 2 3 3 4 5 5 6\r\n",
                "-1\r\n1\r\n2\r\n2\r\n2\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n4 4\r\n1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n3 2\r\n2 2 2\r\n",
                "1\r\n"
            ],
            [
                "1\r\n3 3\r\n1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n2 2\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n5 5\r\n1 1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n5 3\r\n1 1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n3 3\r\n3 3 3\r\n",
                "1\r\n"
            ],
            [
                "1\r\n2 2\r\n2 2\r\n",
                "1\r\n"
            ],
            [
                "1\r\n5 5\r\n5 5 5 5 5\r\n",
                "1\r\n"
            ],
            [
                "1\r\n3 2\r\n3 3 3\r\n",
                "1\r\n"
            ],
            [
                "1\r\n4 2\r\n1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n5 2\r\n1 1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n3 1\r\n1 2 2\r\n",
                "-1\r\n"
            ],
            [
                "1\r\n3 2\r\n5 5 5\r\n",
                "1\r\n"
            ],
            [
                "1\r\n5 2\r\n5 5 5 5 5\r\n",
                "1\r\n"
            ],
            [
                "1\r\n2 2\r\n3 3\r\n",
                "1\r\n"
            ]
        ]
    }
]