[
    {
        "name": "Make Equal With Mod",
        "description": "You are given an array of \n    n\n non-negative integers \n    a_1, a_2, \n    \u2026,\n    a_n\n. You can make the following operation: choose an integer \n    x \n    \u2265\n    2\n and replace each number of the array by the remainder when dividing that\nnumber by \n    x\n, that is, for all \n    1 \n    \u2264 i \n    \u2264 n\n set \n    a_i\n to\n\n    a_i \n     x\n. Determine if it is possible to make all the elements of\nthe array equal by applying the operation zero or more times. Input The input\nconsists of multiple test cases. The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. Description\nof the test cases follows. The first line of each test case contains an\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the length of the array. The\nsecond line of each test case contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^9\n) where \n    a_i\n is the \n    i\n-th\nelement of the array. The sum of \n    n\n for all test cases is at most \n    2\n    \n    \u00b7 10^5\n. Output For each test case, print a line with YES if you can\nmake all elements of the list equal by applying the operation. Otherwise,\nprint NO. You may print each letter in any case (for example, \"YES\", \"Yes\",\n\"yes\", \"yEs\" will all be recognized as a positive answer). Example Input 4 4 2\n5 6 8 3 1 1 1 5 4 1 7 0 8 4 5 9 17 5 Output YES YES NO YES Note In the first\ntest case, one can apply the operation with \n    x = 3\n to obtain the array\n\n    [2, 2, 0, 2]\n, and then apply the operation with \n    x = 2\n to obtain\n\n    [0, 0, 0, 0]\n. In the second test case, all numbers are already equal. In\nthe fourth test case, applying the operation with \n    x = 4\n results in the\narray \n    [1, 1, 1, 1]\n.\n\n",
        "cf_contest_id": 1656,
        "cf_index": "C",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math",
            "number theory",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n4\r\n2 5 6 8\r\n3\r\n1 1 1\r\n5\r\n4 1 7 0 8\r\n4\r\n5 9 17 5\r\n",
                "YES\r\nYES\r\nNO\r\nYES\r\n"
            ]
        ],
        "private_cases": []
    }
]