[
    {
        "name": "Polycarp and String Transformation",
        "description": "Polycarp has a string \n    s\n. Polycarp performs the following actions until\nthe string \n    s\n is empty (\n    t\n is initially an empty string): he adds to\nthe right to the string \n    t\n the string \n    s\n, i.e. he does \n    t = t +\n    s\n, where \n    t + s\n is a concatenation of the strings \n    t\n and \n    s\n;\nhe selects an arbitrary letter of \n    s\n and removes from \n    s\n all its\noccurrences (the selected letter must occur in the string \n    s\n at the\nmoment of performing this action). Polycarp performs this sequence of actions\nstrictly in this order. Note that after Polycarp finishes the actions, the\nstring \n    s\n will be empty and the string \n    t\n will be equal to some\nvalue (that is undefined and depends on the order of removing). E.g. consider\n\n    s\n=\"abacaba\" so the actions may be performed as follows:\n\n    t\n=\"abacaba\", the letter 'b' is selected, then \n    s\n=\"aacaa\";\n\n    t\n=\"abacabaaacaa\", the letter 'a' is selected, then \n    s\n=\"c\";\n\n    t\n=\"abacabaaacaac\", the letter 'c' is selected, then \n    s\n=\"\" (the\nempty string). You need to restore the initial value of the string \n    s\n\nusing only the final value of \n    t\n and find the order of removing letters\nfrom \n    s\n. Input The first line contains one integer \n    T\n (\n    1 \n    \u2264 T\n    \n    \u2264 10^4\n) \u2014 the number of test cases. Then \n    T\n test cases follow.\nEach test case contains one string \n    t\n consisting of lowercase letters of\nthe Latin alphabet. The length of \n    t\n doesn't exceed \n    5 \n    \u00b7 10^5\n.\nThe sum of lengths of all strings \n    t\n in the test cases doesn't exceed\n\n    5 \n    \u00b7 10^5\n. Output For each test case output in a separate line:\n\n    -1\n, if the answer doesn't exist; two strings separated by spaces. The\nfirst one must contain a possible initial value of \n    s\n. The second one\nmust contain a sequence of letters \u2014 it's in what order one needs to remove\nletters from \n    s\n to make the string \n    t\n. E.g. if the string \"bac\" is\noutputted, then, first, all occurrences of the letter 'b' were deleted, then\nall occurrences of 'a', and then, finally, all occurrences of 'c'. If there\nare multiple solutions, print any one. Example Input 7 abacabaaacaac\nnowyouknowthat polycarppoycarppoyarppyarppyrpprppp isi\neverywherevrywhrvryhrvrhrvhv haaha qweqeewew Output abacaba bac -1 polycarp\nlcoayrp is si everywhere ewyrhv -1 -1 Note The first test case is considered\nin the statement.\n\n",
        "cf_contest_id": 1560,
        "cf_index": "E",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "implementation",
            "sortings",
            "strings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\nabacabaaacaac\r\nnowyouknowthat\r\npolycarppoycarppoyarppyarppyrpprppp\r\nisi\r\neverywherevrywhrvryhrvrhrvhv\r\nhaaha\r\nqweqeewew\r\n",
                "abacaba bac\r\n-1\r\npolycarp lcoayrp\r\nis si\r\neverywhere ewyrhv\r\n-1\r\n-1\r\n"
            ]
        ],
        "private_cases": []
    }
]