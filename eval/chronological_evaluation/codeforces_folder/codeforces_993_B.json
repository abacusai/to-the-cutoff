[
    {
        "name": "Open Communication",
        "description": "Two participants are each given a pair of distinct numbers from 1 to 9 such\nthat there's exactly one number that is present in both pairs. They want to\nfigure out the number that matches by using a communication channel you have\naccess to without revealing it to you. Both participants communicated to each\nother a set of pairs of numbers, that includes the pair given to them. Each\npair in the communicated sets comprises two different numbers. Determine if\nyou can with certainty deduce the common number, or if you can determine with\ncertainty that both participants know the number but you do not. Input The\nfirst line contains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264\n    12\n) \u2014 the number of pairs the first participant communicated to the second\nand vice versa. The second line contains \n    n\n pairs of integers, each\nbetween \n    1\n and \n    9\n, \u2014 pairs of numbers communicated from first\nparticipant to the second. The third line contains \n    m\n pairs of integers,\neach between \n    1\n and \n    9\n, \u2014 pairs of numbers communicated from the\nsecond participant to the first. All pairs within each set are distinct (in\nparticular, if there is a pair \n    (1,2)\n, there will be no pair \n    (2,1)\n\nwithin the same set), and no pair contains the same number twice. It is\nguaranteed that the two sets do not contradict the statements, in other words,\nthere is pair from the first set and a pair from the second set that share\nexactly one number. Output If you can deduce the shared number with certainty,\nprint that number. If you can with certainty deduce that both participants\nknow the shared number, but you do not know it, print \n    0\n. Otherwise print\n\n    -1\n. Examples Input 2 2 1 2 3 4 1 5 3 4 Output 1 Input 2 2 1 2 3 4 1 5 6\n4 Output 0 Input 2 3 1 2 4 5 1 2 1 3 2 3 Output -1 Note In the first example\nthe first participant communicated pairs \n    (1,2)\n and \n    (3,4)\n, and the\nsecond communicated \n    (1,5)\n, \n    (3,4)\n. Since we know that the actual\npairs they received share exactly one number, it can't be that they both have\n\n    (3,4)\n. Thus, the first participant has \n    (1,2)\n and the second has\n\n    (1,5)\n, and at this point you already know the shared number is \n    1\n.\nIn the second example either the first participant has \n    (1,2)\n and the\nsecond has \n    (1,5)\n, or the first has \n    (3,4)\n and the second has\n\n    (6,4)\n. In the first case both of them know the shared number is \n    1\n,\nin the second case both of them know the shared number is \n    4\n. You don't\nhave enough information to tell \n    1\n and \n    4\n apart. In the third case\nif the first participant was given \n    (1,2)\n, they don't know what the\nshared number is, since from their perspective the second participant might\nhave been given either \n    (1,3)\n, in which case the shared number is\n\n    1\n, or \n    (2,3)\n, in which case the shared number is \n    2\n. While the\nsecond participant does know the number with certainty, neither you nor the\nfirst participant do, so the output is \n    -1\n.\n\n",
        "cf_contest_id": 993,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2\r\n1 2 3 4\r\n1 5 3 4\r\n",
                "1\r\n"
            ],
            [
                "2 2\r\n1 2 3 4\r\n1 5 6 4\r\n",
                "0\r\n"
            ],
            [
                "2 3\r\n1 2 4 5\r\n1 2 1 3 2 3\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1 2 1 3\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "4 4\r\n1 2 3 4 5 6 7 8\r\n2 3 4 5 6 7 8 1\r\n",
                "-1\r\n"
            ],
            [
                "3 3\r\n1 2 5 6 7 8\r\n2 3 4 5 8 9\r\n",
                "0\r\n"
            ],
            [
                "4 3\r\n1 2 4 5 6 7 8 9\r\n1 2 8 9 3 1\r\n",
                "1\r\n"
            ],
            [
                "3 4\r\n2 1 8 9 3 1\r\n1 2 4 5 6 7 8 9\r\n",
                "1\r\n"
            ],
            [
                "3 8\r\n8 9 8 5 9 2\r\n8 4 8 3 2 6 4 2 4 3 3 7 3 6 1 6\r\n",
                "0\r\n"
            ],
            [
                "9 1\r\n3 4 3 2 3 7 3 5 9 4 1 9 6 4 5 2 7 6\r\n8 3\r\n",
                "3\r\n"
            ],
            [
                "5 6\r\n4 7 7 3 4 3 9 4 3 9\r\n7 5 7 8 1 7 7 2 6 2 1 2\r\n",
                "7\r\n"
            ],
            [
                "7 3\r\n2 6 6 7 6 4 6 1 9 6 7 4 1 9\r\n6 5 3 6 6 8\r\n",
                "6\r\n"
            ],
            [
                "9 2\r\n9 6 1 6 2 5 7 3 8 1 7 2 9 1 2 8 3 8\r\n6 4 4 5\r\n",
                "0\r\n"
            ],
            [
                "5 6\r\n1 7 5 6 6 9 3 6 1 9\r\n2 7 2 5 8 5 4 8 4 2 8 2\r\n",
                "0\r\n"
            ],
            [
                "3 9\r\n9 7 9 2 7 2\r\n9 8 1 9 3 9 6 3 8 6 4 6 1 3 5 4 5 3\r\n",
                "9\r\n"
            ],
            [
                "9 4\r\n2 8 8 9 8 1 9 2 5 9 3 5 3 2 5 2 9 1\r\n8 4 8 7 6 8 4 7\r\n",
                "8\r\n"
            ],
            [
                "1 12\r\n6 8\r\n8 4 8 2 5 8 9 8 8 3 8 7 8 1 1 3 1 9 4 3 7 3 5 7\r\n",
                "8\r\n"
            ],
            [
                "12 12\r\n7 6 3 8 8 4 4 7 1 9 9 5 7 5 4 9 8 6 2 7 7 3 3 6\r\n9 1 2 4 9 8 5 3 6 7 3 8 2 7 5 9 6 4 3 1 2 6 1 4\r\n",
                "-1\r\n"
            ],
            [
                "12 12\r\n1 6 2 6 8 3 6 4 4 8 7 2 7 5 9 4 2 4 9 5 8 5 3 6\r\n2 8 6 9 2 6 7 4 6 5 6 3 5 8 7 8 7 1 1 9 9 7 7 3\r\n",
                "-1\r\n"
            ],
            [
                "12 12\r\n6 7 5 4 7 8 2 9 8 5 3 5 1 6 7 3 7 9 5 7 1 8 6 8\r\n6 4 2 1 7 8 1 6 8 5 9 8 1 5 7 2 5 9 6 3 9 2 9 4\r\n",
                "-1\r\n"
            ],
            [
                "1 10\r\n3 9\r\n3 2 3 4 5 3 5 7 8 6 2 5 7 8 2 4 1 7 5 1\r\n",
                "3\r\n"
            ],
            [
                "3 10\r\n6 1 4 1 4 6\r\n7 1 8 1 8 5 3 2 9 7 9 3 5 9 5 3 5 7 7 2\r\n",
                "1\r\n"
            ],
            [
                "2 7\r\n2 7 2 5\r\n7 1 9 7 8 9 4 9 8 1 3 9 3 8\r\n",
                "7\r\n"
            ],
            [
                "12 1\r\n6 2 6 4 8 6 6 9 5 6 6 1 9 1 1 3 3 9 2 4 5 2 8 1\r\n6 7\r\n",
                "6\r\n"
            ],
            [
                "2 11\r\n6 1 3 6\r\n1 7 1 2 1 5 1 4 5 3 3 2 9 8 4 2 7 5 4 9 2 9\r\n",
                "0\r\n"
            ],
            [
                "6 9\r\n8 1 8 4 2 8 2 1 4 1 4 2\r\n8 3 8 6 7 8 5 8 6 7 5 7 9 6 5 6 5 3\r\n",
                "8\r\n"
            ],
            [
                "6 4\r\n2 7 3 2 8 3 1 5 7 4 3 5\r\n2 6 9 8 8 6 6 9\r\n",
                "0\r\n"
            ],
            [
                "3 10\r\n1 5 7 1 2 1\r\n9 5 5 6 3 5 4 7 8 3 9 6 8 4 9 8 4 6 3 4\r\n",
                "0\r\n"
            ],
            [
                "1 7\r\n8 4\r\n9 8 8 2 6 8 8 1 7 8 2 1 9 5\r\n",
                "8\r\n"
            ],
            [
                "3 6\r\n3 5 7 4 7 5\r\n3 9 3 2 8 6 6 2 8 2 6 9\r\n",
                "3\r\n"
            ],
            [
                "8 5\r\n7 9 6 7 4 7 2 1 4 9 2 9 4 2 9 6\r\n8 7 1 8 8 5 3 5 3 8\r\n",
                "0\r\n"
            ],
            [
                "8 1\r\n1 6 7 6 7 3 9 2 1 2 8 6 2 3 4 1\r\n8 3\r\n",
                "-1\r\n"
            ],
            [
                "12 5\r\n9 2 6 7 7 8 3 4 8 4 7 1 2 1 7 3 7 2 5 6 3 8 1 5\r\n3 7 7 5 7 4 5 8 4 6\r\n",
                "-1\r\n"
            ],
            [
                "11 1\r\n2 6 1 4 7 9 7 6 8 1 4 8 4 7 7 2 1 7 9 6 6 5\r\n3 1\r\n",
                "1\r\n"
            ],
            [
                "10 2\r\n4 9 2 1 5 1 6 2 6 7 2 7 5 8 1 7 5 3 9 1\r\n9 7 1 4\r\n",
                "-1\r\n"
            ],
            [
                "9 1\r\n1 8 7 6 7 2 7 9 4 1 4 3 3 8 4 6 9 6\r\n9 4\r\n",
                "-1\r\n"
            ],
            [
                "4 7\r\n9 2 4 1 2 3 2 7\r\n6 1 5 4 7 5 6 3 1 5 8 1 1 4\r\n",
                "-1\r\n"
            ],
            [
                "3 7\r\n8 2 7 9 8 1\r\n3 1 8 1 2 7 4 7 4 2 1 4 4 6\r\n",
                "-1\r\n"
            ],
            [
                "12 2\r\n3 1 8 2 6 9 2 6 5 4 4 3 4 1 4 2 6 3 9 7 9 4 3 2\r\n7 1 4 1\r\n",
                "-1\r\n"
            ],
            [
                "7 6\r\n6 2 9 2 6 5 2 4 1 2 4 5 6 7\r\n3 9 5 1 9 8 9 5 3 4 2 3\r\n",
                "-1\r\n"
            ],
            [
                "4 12\r\n2 8 3 1 2 1 9 4\r\n9 5 5 3 1 6 3 7 7 1 8 5 6 5 4 6 1 9 1 4 2 5 9 8\r\n",
                "-1\r\n"
            ],
            [
                "2 2\r\n1 2 2 3\r\n2 3 3 4\r\n",
                "0\r\n"
            ],
            [
                "2 2\r\n1 2 1 3\r\n1 2 1 3\r\n",
                "1\r\n"
            ],
            [
                "3 3\r\n1 2 1 3 2 3\r\n1 2 1 3 2 3\r\n",
                "-1\r\n"
            ],
            [
                "2 3\r\n1 2 1 3\r\n1 2 1 3 2 3\r\n",
                "-1\r\n"
            ],
            [
                "2 2\r\n1 2 2 4\r\n1 2 1 3\r\n",
                "0\r\n"
            ],
            [
                "2 1\r\n4 5 6 7\r\n4 7\r\n",
                "-1\r\n"
            ],
            [
                "3 2\r\n1 2 1 3 2 3\r\n1 2 4 5\r\n",
                "-1\r\n"
            ],
            [
                "4 4\r\n1 2 1 3 6 7 6 8\r\n1 4 1 5 6 1 6 9\r\n",
                "-1\r\n"
            ],
            [
                "4 4\r\n1 2 2 3 1 3 4 5\r\n1 3 3 2 1 2 4 6\r\n",
                "-1\r\n"
            ],
            [
                "3 2\r\n1 2 4 5 6 7\r\n4 7 1 3\r\n",
                "-1\r\n"
            ],
            [
                "2 3\r\n1 2 7 8\r\n1 3 2 4 7 9\r\n",
                "-1\r\n"
            ]
        ]
    }
]