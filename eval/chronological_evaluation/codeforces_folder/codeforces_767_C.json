[
    {
        "name": "Garland",
        "description": "Once at New Year Dima had a dream in which he was presented a fairy garland. A\ngarland is a set of lamps, some pairs of which are connected by wires. Dima\nremembered that each two lamps in the garland were connected directly or\nindirectly via some wires. Furthermore, the number of wires was exactly one\nless than the number of lamps. There was something unusual about the garland.\nEach lamp had its own brightness which depended on the temperature of the\nlamp. Temperatures could be positive, negative or zero. Dima has two friends,\nso he decided to share the garland with them. He wants to cut two different\nwires so that the garland breaks up into three parts. Each part of the garland\nshould shine equally, i. e. the sums of lamps' temperatures should be equal in\neach of the parts. Of course, each of the parts should be non-empty, i. e.\neach part should contain at least one lamp. Help Dima to find a suitable way\nto cut the garland, or determine that this is impossible. While examining the\ngarland, Dima lifted it up holding by one of the lamps. Thus, each of the\nlamps, except the one he is holding by, is now hanging on some wire. So, you\nshould print two lamp ids as the answer which denote that Dima should cut the\nwires these lamps are hanging on. Of course, the lamp Dima is holding the\ngarland by can't be included in the answer. Input The first line contains\nsingle integer n (3 \u2264 n \u2264 10^6) \u2014 the number of lamps in the garland. Then n\nlines follow. The i-th of them contain the information about the i-th lamp:\nthe number lamp ai, it is hanging on (and 0, if is there is no such lamp), and\nits temperature ti ( - 100 \u2264 ti \u2264 100). The lamps are numbered from 1 to n.\nOutput If there is no solution, print -1. Otherwise print two integers \u2014 the\nindexes of the lamps which mean Dima should cut the wires they are hanging on.\nIf there are multiple answers, print any of them. Examples Input 6 2 4 0 5 4 2\n2 1 1 1 4 2 Output 1 4 Input 6 2 4 0 6 4 2 2 1 1 1 4 2 Output -1 Note The\ngarland and cuts scheme for the first example:\n\n",
        "cf_contest_id": 767,
        "cf_index": "C",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n2 4\r\n0 5\r\n4 2\r\n2 1\r\n1 1\r\n4 2\r\n",
                "1 4"
            ],
            [
                "6\r\n2 4\r\n0 6\r\n4 2\r\n2 1\r\n1 1\r\n4 2\r\n",
                "-1"
            ]
        ],
        "private_cases": [
            [
                "6\r\n2 4\r\n0 -1\r\n4 2\r\n2 3\r\n1 2\r\n4 5\r\n",
                "6 4"
            ],
            [
                "3\r\n2 1\r\n0 1\r\n2 1\r\n",
                "1 3"
            ],
            [
                "5\r\n0 5\r\n4 1\r\n2 1\r\n1 3\r\n1 5\r\n",
                "4 5"
            ],
            [
                "10\r\n5 8\r\n5 3\r\n8 7\r\n8 1\r\n0 4\r\n5 3\r\n1 1\r\n1 1\r\n3 1\r\n1 1\r\n",
                "8 1"
            ],
            [
                "49\r\n2 1\r\n43 1\r\n31 1\r\n0 34\r\n14 1\r\n29 1\r\n40 1\r\n40 1\r\n39 1\r\n1 1\r\n28 1\r\n43 1\r\n44 1\r\n44 1\r\n43 1\r\n12 5\r\n12 5\r\n28 1\r\n7 1\r\n15 1\r\n43 1\r\n4 49\r\n15 1\r\n8 1\r\n17 9\r\n5 1\r\n43 1\r\n43 1\r\n40 1\r\n2 1\r\n7 2\r\n24 1\r\n12 1\r\n27 1\r\n2 1\r\n43 1\r\n28 1\r\n5 1\r\n27 1\r\n28 1\r\n37 1\r\n27 1\r\n4 1\r\n28 1\r\n31 1\r\n40 1\r\n21 1\r\n38 1\r\n44 1\r\n",
                "-1"
            ],
            [
                "4\r\n0 1\r\n1 -1\r\n2 1\r\n3 -1\r\n",
                "-1"
            ],
            [
                "4\r\n0 0\r\n1 0\r\n1 1\r\n1 -1\r\n",
                "-1"
            ],
            [
                "4\r\n0 0\r\n1 1\r\n1 -1\r\n1 0\r\n",
                "-1"
            ],
            [
                "3\r\n0 -1\r\n1 1\r\n1 0\r\n",
                "-1"
            ],
            [
                "4\r\n0 0\r\n1 0\r\n2 1\r\n2 -1\r\n",
                "-1"
            ],
            [
                "5\r\n0 0\r\n1 -7\r\n1 7\r\n3 -7\r\n4 7\r\n",
                "-1"
            ],
            [
                "3\r\n0 0\r\n1 1\r\n2 -1\r\n",
                "-1"
            ],
            [
                "3\r\n0 2\r\n1 -1\r\n1 -1\r\n",
                "-1"
            ],
            [
                "3\r\n0 0\r\n1 1\r\n1 2\r\n",
                "-1"
            ],
            [
                "4\r\n0 -1\r\n1 -1\r\n1 -1\r\n1 -1\r\n",
                "-1"
            ],
            [
                "3\r\n0 -6\r\n1 6\r\n1 0\r\n",
                "-1"
            ]
        ]
    }
]