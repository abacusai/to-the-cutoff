[
    {
        "name": "PawnChess",
        "description": "Galois is one of the strongest chess players of Byteforces. He has even\ninvented a new variant of chess, which he named \u00abPawnChess\u00bb. This new game is\nplayed on a board consisting of 8 rows and 8 columns. At the beginning of\nevery game some black and white pawns are placed on the board. The number of\nblack pawns placed is not necessarily equal to the number of white pawns\nplaced. Lets enumerate rows and columns with integers from 1 to 8. Rows are\nnumbered from top to bottom, while columns are numbered from left to right.\nNow we denote as (r, c) the cell located at the row r and at the column c.\nThere are always two players A and B playing the game. Player A plays with\nwhite pawns, while player B plays with black ones. The goal of player A is to\nput any of his pawns to the row 1, while player B tries to put any of his\npawns to the row 8. As soon as any of the players completes his goal the game\nfinishes immediately and the succeeded player is declared a winner. Player A\nmoves first and then they alternate turns. On his move player A must choose\nexactly one white pawn and move it one step upward and player B (at his turn)\nmust choose exactly one black pawn and move it one step down. Any move is\npossible only if the targeted cell is empty. It's guaranteed that for any\nscenario of the game there will always be at least one move available for any\nof the players. Moving upward means that the pawn located in (r, c) will go to\nthe cell (r - 1, c), while moving down means the pawn located in (r, c) will\ngo to the cell (r + 1, c). Again, the corresponding cell must be empty, i.e.\nnot occupied by any other pawn of any color. Given the initial disposition of\nthe board, determine who wins the game if both players play optimally. Note\nthat there will always be a winner due to the restriction that for any game\nscenario both players will have some moves available. Input The input consists\nof the board description given in eight lines, each line contains eight\ncharacters. Character 'B' is used to denote a black pawn, and character 'W'\nrepresents a white pawn. Empty cell is marked with '.'. It's guaranteed that\nthere will not be white pawns on the first row neither black pawns on the last\nrow. Output Print 'A' if player A wins the game on the given board, and 'B' if\nplayer B will claim the victory. Again, it's guaranteed that there will always\nbe a winner on the given board. Examples Input ........ ........ .B....B.\n....W... ........ ..W..... ........ ........ Output A Input ..B..... ..W.....\n......B. ........ .....W.. ......B. ........ ........ Output B Note In the\nfirst sample player A is able to complete his goal in 3 steps by always moving\na pawn initially located at (4, 5). Player B needs at least 5 steps for any of\nhis pawns to reach the row 8. Hence, player A will be the winner.\n\n",
        "cf_contest_id": 592,
        "cf_index": "A",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "........\r\n........\r\n.B....B.\r\n....W...\r\n........\r\n..W.....\r\n........\r\n........\r\n",
                "A"
            ],
            [
                "..B.....\r\n..W.....\r\n......B.\r\n........\r\n.....W..\r\n......B.\r\n........\r\n........\r\n",
                "B"
            ]
        ],
        "private_cases": [
            [
                "B.B.BB.B\r\nW.WWW.WW\r\n.WWWWW.W\r\nW.BB.WBW\r\n.W..BBWB\r\nBB.WWBBB\r\n.W.W.WWB\r\nWWW..WW.\r\n",
                "A"
            ],
            [
                "BBBB.BBB\r\nBBBB.B.B\r\nB.B..BBB\r\nB.BB.BWW\r\nB.BB.BBB\r\nB.BB.BBB\r\n..BW.BB.\r\nW.WWWWWW\r\n",
                "B"
            ],
            [
                "B.BBBBBB\r\nW.WWBBBW\r\nW.BB.WBB\r\nW.W.BBBW\r\nW.BWW.WB\r\nB..B..BB\r\nB.B.W.BB\r\nWWWWW.WW\r\n",
                "B"
            ]
        ]
    }
]