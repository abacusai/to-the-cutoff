[
    {
        "name": "Arkady and Rectangles",
        "description": "Arkady has got an infinite plane painted in color \n    0\n. Then he draws\n\n    n\n rectangles filled with paint with sides parallel to the Cartesian\ncoordinate axes, one after another. The color of the \n    i\n-th rectangle is\n\n    i\n (rectangles are enumerated from \n    1\n to \n    n\n in the order he\ndraws them). It is possible that new rectangles cover some of the previous\nones completely or partially. Count the number of different colors on the\nplane after Arkady draws all the rectangles. Input The first line contains a\nsingle integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n     000\n) \u2014 the number of\nrectangles. The \n    i\n-th of the next \n    n\n lines contains \n    4\n integers\n\n    x_1\n, \n    y_1\n, \n    x_2\n and \n    y_2\n (\n    -10^9 \n    \u2264 x_1 < x_2 \n    \u2264\n    10^9\n, \n    -10^9 \n    \u2264 y_1 < y_2 \n    \u2264 10^9\n) \u2014 the coordinates of corners\nof the \n    i\n-th rectangle. Output In the single line print the number of\ndifferent colors in the plane, including color \n    0\n. Examples Input 5 -1 -1\n1 1 -4 0 0 4 0 0 4 4 -4 -4 0 0 0 -4 4 0 Output 5 Input 4 0 0 4 4 -4 -4 0 0 0\n-4 4 0 -2 -4 2 4 Output 5 Note That's how the plane looks in the first sample\nThat's how the plane looks in the second sample \n    0\n = white, \n    1\n =\ncyan, \n    2\n = blue, \n    3\n = purple, \n    4\n = yellow, \n    5\n = red.\n\n",
        "cf_contest_id": 983,
        "cf_index": "D",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n-1 -1 1 1\r\n-4 0 0 4\r\n0 0 4 4\r\n-4 -4 0 0\r\n0 -4 4 0\r\n",
                "5"
            ],
            [
                "4\r\n0 0 4 4\r\n-4 -4 0 0\r\n0 -4 4 0\r\n-2 -4 2 4\r\n",
                "5"
            ]
        ],
        "private_cases": [
            [
                "5\r\n-1 0 2 4\r\n1 4 4 5\r\n2 3 5 4\r\n-5 3 1 5\r\n0 -4 2 3\r\n",
                "6"
            ],
            [
                "5\r\n-3 4 -2 5\r\n3 1 5 4\r\n-5 -3 1 2\r\n-1 4 4 5\r\n2 4 5 5\r\n",
                "6"
            ],
            [
                "5\r\n1 -2 3 1\r\n2 -4 4 5\r\n1 -5 3 -3\r\n-1 1 2 3\r\n-3 2 -2 4\r\n",
                "6"
            ],
            [
                "5\r\n-1 -3 3 5\r\n4 -4 5 -3\r\n-4 4 0 5\r\n4 2 5 3\r\n-1 0 2 2\r\n",
                "6"
            ],
            [
                "10\r\n-39 29 10 85\r\n-44 69 83 71\r\n-35 33 31 74\r\n-68 66 47 86\r\n77 -49 96 89\r\n-24 25 7 93\r\n-24 -35 47 -12\r\n85 -91 95 33\r\n-94 15 -70 29\r\n-9 28 49 54\r\n",
                "11"
            ],
            [
                "10\r\n89 -10 95 -1\r\n9 -44 47 -10\r\n24 72 73 82\r\n-66 -19 72 34\r\n0 -31 14 56\r\n29 -66 87 -11\r\n-63 -14 84 70\r\n-3 31 51 82\r\n5 28 34 77\r\n24 -30 48 28\r\n",
                "11"
            ],
            [
                "10\r\n17 -64 34 46\r\n63 27 71 32\r\n-20 16 95 38\r\n24 -96 85 46\r\n-86 -13 60 82\r\n-23 -61 88 -9\r\n98 -97 100 24\r\n-83 -47 82 54\r\n-8 -63 15 -39\r\n50 -97 53 39\r\n",
                "10"
            ],
            [
                "8\r\n2 0 3 1\r\n3 1 4 2\r\n3 2 4 3\r\n2 0 4 3\r\n0 3 6 6\r\n-1 3 7 4\r\n-1 4 7 5\r\n-1 5 7 6\r\n",
                "5"
            ],
            [
                "4\r\n0 0 3 3\r\n-1 0 4 1\r\n-1 1 4 2\r\n-1 2 4 3\r\n",
                "4"
            ],
            [
                "10\r\n1 2 3 4\r\n3 -4 5 0\r\n-1 -2 4 3\r\n2 2 5 4\r\n-2 -2 -1 -1\r\n-3 -5 5 -2\r\n-3 -5 3 -2\r\n4 -2 5 5\r\n-5 -1 2 5\r\n4 3 5 5\r\n",
                "9"
            ],
            [
                "5\r\n2 2 3 5\r\n-1 -2 5 -1\r\n-5 0 4 2\r\n-1 0 4 4\r\n-4 3 4 5\r\n",
                "5"
            ]
        ]
    }
]