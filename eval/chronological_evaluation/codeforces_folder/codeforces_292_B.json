[
    {
        "name": "Network Topology",
        "description": "This problem uses a simplified network topology model, please read the problem\nstatement carefully and use it as a formal document as you develop the\nsolution. Polycarpus continues working as a system administrator in a large\ncorporation. The computer network of this corporation consists of n computers,\nsome of them are connected by a cable. The computers are indexed by integers\nfrom 1 to n. It's known that any two computers connected by cable directly or\nthrough other computers Polycarpus decided to find out the network's topology.\nA network topology is the way of describing the network configuration, the\nscheme that shows the location and the connections of network devices.\nPolycarpus knows three main network topologies: bus, ring and star. A bus is\nthe topology that represents a shared cable with all computers connected with\nit. In the ring topology the cable connects each computer only with two other\nones. A star is the topology where all computers of a network are connected to\nthe single central node. Let's represent each of these network topologies as a\nconnected non-directed graph. A bus is a connected graph that is the only\npath, that is, the graph where all nodes are connected with two other ones\nexcept for some two nodes that are the beginning and the end of the path. A\nring is a connected graph, where all nodes are connected with two other ones.\nA star is a connected graph, where a single central node is singled out and\nconnected with all other nodes. For clarifications, see the picture. (1) \u2014\nbus, (2) \u2014 ring, (3) \u2014 star You've got a connected non-directed graph that\ncharacterizes the computer network in Polycarpus' corporation. Help him find\nout, which topology type the given network is. If that is impossible to do,\nsay that the network's topology is unknown. Input The first line contains two\nspace-separated integers n and m (4 \u2264 n \u2264 10^5; 3 \u2264 m \u2264 10^5) \u2014 the number of\nnodes and edges in the graph, correspondingly. Next m lines contain the\ndescription of the graph's edges. The i-th line contains a space-separated\npair of integers xi, yi (1 \u2264 xi, yi \u2264 n) \u2014 the numbers of nodes that are\nconnected by the i-the edge. It is guaranteed that the given graph is\nconnected. There is at most one edge between any two nodes. No edge connects a\nnode with itself. Output In a single line print the network topology name of\nthe given graph. If the answer is the bus, print \"bus topology\" (without the\nquotes), if the answer is the ring, print \"ring topology\" (without the\nquotes), if the answer is the star, print \"star topology\" (without the\nquotes). If no answer fits, print \"unknown topology\" (without the quotes).\nExamples Input 4 3 1 2 2 3 3 4 Output bus topology Input 4 4 1 2 2 3 3 4 4 1\nOutput ring topology Input 4 3 1 2 1 3 1 4 Output star topology Input 4 4 1 2\n2 3 3 1 1 4 Output unknown topology\n\n",
        "cf_contest_id": 292,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "graphs",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3\r\n1 2\r\n2 3\r\n3 4\r\n",
                "bus topology\r\n"
            ],
            [
                "4 4\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n",
                "ring topology\r\n"
            ],
            [
                "4 3\r\n1 2\r\n1 3\r\n1 4\r\n",
                "star topology\r\n"
            ],
            [
                "4 4\r\n1 2\r\n2 3\r\n3 1\r\n1 4\r\n",
                "unknown topology\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 4\r\n1 2\r\n3 5\r\n1 4\r\n5 4\r\n",
                "bus topology\r\n"
            ],
            [
                "5 5\r\n3 4\r\n5 2\r\n2 1\r\n5 4\r\n3 1\r\n",
                "ring topology\r\n"
            ],
            [
                "5 4\r\n4 2\r\n5 2\r\n1 2\r\n2 3\r\n",
                "star topology\r\n"
            ],
            [
                "5 9\r\n5 3\r\n4 5\r\n3 1\r\n3 2\r\n2 1\r\n2 5\r\n1 5\r\n1 4\r\n4 2\r\n",
                "unknown topology\r\n"
            ],
            [
                "4 3\r\n2 4\r\n1 3\r\n4 1\r\n",
                "bus topology\r\n"
            ],
            [
                "4 4\r\n2 4\r\n4 1\r\n1 3\r\n2 3\r\n",
                "ring topology\r\n"
            ],
            [
                "4 3\r\n1 2\r\n2 4\r\n3 2\r\n",
                "star topology\r\n"
            ],
            [
                "4 4\r\n3 2\r\n2 4\r\n4 1\r\n1 2\r\n",
                "unknown topology\r\n"
            ],
            [
                "10 9\r\n10 6\r\n3 4\r\n8 9\r\n8 4\r\n6 1\r\n2 9\r\n5 1\r\n7 5\r\n10 3\r\n",
                "bus topology\r\n"
            ],
            [
                "10 10\r\n1 4\r\n3 6\r\n10 7\r\n5 8\r\n2 10\r\n3 4\r\n7 5\r\n9 6\r\n8 1\r\n2 9\r\n",
                "ring topology\r\n"
            ],
            [
                "10 9\r\n1 4\r\n4 10\r\n4 9\r\n8 4\r\n4 7\r\n4 5\r\n4 2\r\n4 6\r\n4 3\r\n",
                "star topology\r\n"
            ],
            [
                "10 14\r\n3 2\r\n7 2\r\n6 4\r\n8 1\r\n3 9\r\n5 6\r\n6 3\r\n4 1\r\n2 5\r\n7 10\r\n9 5\r\n7 1\r\n8 10\r\n3 4\r\n",
                "unknown topology\r\n"
            ],
            [
                "4 4\r\n1 2\r\n2 3\r\n2 4\r\n3 4\r\n",
                "unknown topology\r\n"
            ],
            [
                "5 4\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n",
                "unknown topology\r\n"
            ],
            [
                "10 9\r\n10 1\r\n10 2\r\n10 3\r\n10 4\r\n10 5\r\n10 6\r\n10 7\r\n10 8\r\n10 9\r\n",
                "star topology\r\n"
            ],
            [
                "6 6\r\n1 2\r\n2 3\r\n3 1\r\n4 5\r\n5 6\r\n6 1\r\n",
                "unknown topology\r\n"
            ],
            [
                "6 5\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n4 6\r\n",
                "unknown topology\r\n"
            ],
            [
                "4 4\r\n1 2\r\n2 3\r\n3 4\r\n4 2\r\n",
                "unknown topology\r\n"
            ],
            [
                "4 6\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n3 4\r\n",
                "unknown topology\r\n"
            ]
        ]
    }
]