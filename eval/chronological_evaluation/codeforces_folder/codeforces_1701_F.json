[
    {
        "name": "Points",
        "description": "A triple of points \n    i\n, \n    j\n and \n    k\n on a coordinate line is called\nbeautiful if \n    i < j < k\n and \n    k - i \n    \u2264 d\n. You are given a set of\npoints on a coordinate line, initially empty. You have to process queries of\nthree types: add a point; remove a point; calculate the number of beautiful\ntriples consisting of points belonging to the set. Input The first line\ncontains two integers \n    q\n and \n    d\n (\n    1 \n    \u2264 q, d \n    \u2264 2 \n    \u00b7\n    10^5\n) \u2014 the number of queries and the parameter for defining if a triple is\nbeautiful, respectively. The second line contains \n    q\n integers \n    a_1,\n    a_2, \n    \u2026, a_q\n (\n    1 \n    \u2264 a_i \n    \u2264 2 \n    \u00b7 10^5\n) denoting the\nqueries. The integer \n    a_i\n denotes the \n    i\n-th query in the following\nway: if the point \n    a_i\n belongs to the set, remove it; otherwise, add it;\nafter adding or removing the point, print the number of beautiful triples.\nOutput For each query, print one integer \u2014 the number of beautiful triples\nafter processing the respective query. Example Input 7 5 8 5 3 2 1 5 6 Output\n0 0 1 2 5 1 5\n\n",
        "cf_contest_id": 1701,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "data structures",
            "implementation",
            "math",
            "matrices"
        ],
        "time_limit_seconds": 6.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "7 5\r\n8 5 3 2 1 5 6\r\n",
                "0\r\n0\r\n1\r\n2\r\n5\r\n1\r\n5\r\n"
            ]
        ],
        "private_cases": []
    }
]