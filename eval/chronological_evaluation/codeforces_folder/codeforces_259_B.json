[
    {
        "name": "Little Elephant and Magic Square",
        "description": "Little Elephant loves magic squares very much. A magic square is a 3 \u00d7 3\ntable, each cell contains some positive integer. At that the sums of integers\nin all rows, columns and diagonals of the table are equal. The figure below\nshows the magic square, the sum of integers in all its rows, columns and\ndiagonals equals 15. The Little Elephant remembered one magic square. He\nstarted writing this square on a piece of paper, but as he wrote, he forgot\nall three elements of the main diagonal of the magic square. Fortunately, the\nLittle Elephant clearly remembered that all elements of the magic square did\nnot exceed 10^5. Help the Little Elephant, restore the original magic square,\ngiven the Elephant's notes. Input The first three lines of the input contain\nthe Little Elephant's notes. The first line contains elements of the first row\nof the magic square. The second line contains the elements of the second row,\nthe third line is for the third row. The main diagonal elements that have been\nforgotten by the Elephant are represented by zeroes. It is guaranteed that the\nnotes contain exactly three zeroes and they are all located on the main\ndiagonal. It is guaranteed that all positive numbers in the table do not\nexceed 10^5. Output Print three lines, in each line print three integers \u2014 the\nLittle Elephant's magic square. If there are multiple magic squares, you are\nallowed to print any of them. Note that all numbers you print must be positive\nand not exceed 10^5. It is guaranteed that there exists at least one magic\nsquare that meets the conditions. Examples Input 0 1 1 1 0 1 1 1 0 Output 1 1\n1 1 1 1 1 1 1 Input 0 3 6 5 0 5 4 7 0 Output 6 3 6 5 5 5 4 7 4\n\n",
        "cf_contest_id": 259,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "0 1 1\r\n1 0 1\r\n1 1 0\r\n",
                "1 1 1\r\n1 1 1\r\n1 1 1\r\n"
            ],
            [
                "0 3 6\r\n5 0 5\r\n4 7 0\r\n",
                "6 3 6\r\n5 5 5\r\n4 7 4\r\n"
            ]
        ],
        "private_cases": [
            [
                "0 4 4\r\n4 0 4\r\n4 4 0\r\n",
                "4 4 4\r\n4 4 4\r\n4 4 4\r\n"
            ],
            [
                "0 54 48\r\n36 0 78\r\n66 60 0\r\n",
                "69 54 48\r\n36 57 78\r\n66 60 45\r\n"
            ],
            [
                "0 17 14\r\n15 0 15\r\n16 13 0\r\n",
                "14 17 14\r\n15 15 15\r\n16 13 16\r\n"
            ],
            [
                "0 97 56\r\n69 0 71\r\n84 43 0\r\n",
                "57 97 56\r\n69 70 71\r\n84 43 83\r\n"
            ],
            [
                "0 1099 1002\r\n1027 0 1049\r\n1074 977 0\r\n",
                "1013 1099 1002\r\n1027 1038 1049\r\n1074 977 1063\r\n"
            ],
            [
                "0 98721 99776\r\n99575 0 99123\r\n98922 99977 0\r\n",
                "99550 98721 99776\r\n99575 99349 99123\r\n98922 99977 99148\r\n"
            ],
            [
                "0 6361 2304\r\n1433 0 8103\r\n7232 3175 0\r\n",
                "5639 6361 2304\r\n1433 4768 8103\r\n7232 3175 3897\r\n"
            ],
            [
                "0 99626 99582\r\n99766 0 99258\r\n99442 99398 0\r\n",
                "99328 99626 99582\r\n99766 99512 99258\r\n99442 99398 99696\r\n"
            ],
            [
                "0 99978 99920\r\n99950 0 99918\r\n99948 99890 0\r\n",
                "99904 99978 99920\r\n99950 99934 99918\r\n99948 99890 99964\r\n"
            ],
            [
                "0 840 666\r\n612 0 948\r\n894 720 0\r\n",
                "834 840 666\r\n612 780 948\r\n894 720 726\r\n"
            ],
            [
                "0 28 10\r\n12 0 24\r\n26 8 0\r\n",
                "16 28 10\r\n12 18 24\r\n26 8 20\r\n"
            ],
            [
                "0 120 83\r\n98 0 90\r\n105 68 0\r\n",
                "79 120 83\r\n98 94 90\r\n105 68 109\r\n"
            ],
            [
                "0 86900 85807\r\n85836 0 86842\r\n86871 85778 0\r\n",
                "86310 86900 85807\r\n85836 86339 86842\r\n86871 85778 86368\r\n"
            ],
            [
                "0 74 78\r\n78 0 74\r\n74 78 0\r\n",
                "76 74 78\r\n78 76 74\r\n74 78 76\r\n"
            ],
            [
                "0 505 681\r\n605 0 657\r\n581 757 0\r\n",
                "707 505 681\r\n605 631 657\r\n581 757 555\r\n"
            ],
            [
                "0 662 918\r\n822 0 854\r\n758 1014 0\r\n",
                "934 662 918\r\n822 838 854\r\n758 1014 742\r\n"
            ],
            [
                "0 93 95\r\n93 0 97\r\n95 97 0\r\n",
                "97 93 95\r\n93 95 97\r\n95 97 93\r\n"
            ],
            [
                "0 709 712\r\n719 0 695\r\n702 705 0\r\n",
                "700 709 712\r\n719 707 695\r\n702 705 714\r\n"
            ],
            [
                "0 7 6\r\n9 0 1\r\n4 3 0\r\n",
                "2 7 6\r\n9 5 1\r\n4 3 8\r\n"
            ],
            [
                "0 9 2\r\n3 0 7\r\n8 1 0\r\n",
                "4 9 2\r\n3 5 7\r\n8 1 6\r\n"
            ],
            [
                "0 1 43\r\n13 0 61\r\n31 73 0\r\n",
                "67 1 43\r\n13 37 61\r\n31 73 7\r\n"
            ],
            [
                "0 100000 100000\r\n100000 0 100000\r\n100000 100000 0\r\n",
                "100000 100000 100000\r\n100000 100000 100000\r\n100000 100000 100000\r\n"
            ]
        ]
    }
]