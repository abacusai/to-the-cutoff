[
    {
        "name": "Pave the Parallelepiped",
        "description": "You are given a rectangular parallelepiped with sides of positive integer\nlengths \n    A\n, \n    B\n and \n    C\n. Find the number of different groups of\nthree integers (\n    a\n, \n    b\n, \n    c\n) such that \n    1\n    \u2264 a\n    \u2264\n    b\n    \u2264 c\n and parallelepiped \n    A\n    \u00d7 B\n    \u00d7 C\n can be paved with\nparallelepipeds \n    a\n    \u00d7 b\n    \u00d7 c\n. Note, that all small\nparallelepipeds have to be rotated in the same direction. For example,\nparallelepiped \n    1\n    \u00d7 5\n    \u00d7 6\n can be divided into parallelepipeds\n\n    1\n    \u00d7 3\n    \u00d7 5\n, but can not be divided into parallelepipeds\n\n    1\n    \u00d7 2\n    \u00d7 3\n. Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^5\n) \u2014 the number of test cases. Each of the\nnext \n    t\n lines contains three integers \n    A\n, \n    B\n and \n    C\n (\n    1\n    \n    \u2264 A, B, C \n    \u2264 10^5\n) \u2014 the sizes of the parallelepiped. Output For\neach test case, print the number of different groups of three points that\nsatisfy all given conditions. Example Input 4 1 1 1 1 6 1 2 2 2 100 100 100\nOutput 1 4 4 165 Note In the first test case, rectangular parallelepiped\n\n    (1, 1, 1)\n can be only divided into rectangular parallelepiped with sizes\n\n    (1, 1, 1)\n. In the second test case, rectangular parallelepiped \n    (1, 6,\n    1)\n can be divided into rectangular parallelepipeds with sizes \n    (1, 1,\n    1)\n, \n    (1, 1, 2)\n, \n    (1, 1, 3)\n and \n    (1, 1, 6)\n. In the third test\ncase, rectangular parallelepiped \n    (2, 2, 2)\n can be divided into\nrectangular parallelepipeds with sizes \n    (1, 1, 1)\n, \n    (1, 1, 2)\n,\n\n    (1, 2, 2)\n and \n    (2, 2, 2)\n.\n\n",
        "cf_contest_id": 1007,
        "cf_index": "B",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force",
            "combinatorics",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 1 1\r\n1 6 1\r\n2 2 2\r\n100 100 100\r\n",
                "1\r\n4\r\n4\r\n165\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "10\r\n9 6 8\r\n5 5 2\r\n8 9 2\r\n2 7 9\r\n6 4 10\r\n1 1 8\r\n2 8 1\r\n10 6 3\r\n7 5 2\r\n9 5 4\r\n",
                "41\r\n6\r\n21\r\n12\r\n39\r\n4\r\n7\r\n26\r\n8\r\n18\r\n"
            ],
            [
                "1\r\n100000 100000 100000\r\n",
                "8436\r\n"
            ]
        ]
    }
]