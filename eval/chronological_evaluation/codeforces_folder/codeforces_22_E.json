[
    {
        "name": "Scheme",
        "description": "To learn as soon as possible the latest news about their favourite\nfundamentally new operating system, BolgenOS community from Nizhni Tagil\ndecided to develop a scheme. According to this scheme a community member, who\nis the first to learn the news, calls some other member, the latter, in his\nturn, calls some third member, and so on; i.e. a person with index i got a\nperson with index fi, to whom he has to call, if he learns the news. With time\nBolgenOS community members understood that their scheme doesn't work sometimes\n\u2014 there were cases when some members didn't learn the news at all. Now they\nwant to supplement the scheme: they add into the scheme some instructions of\ntype (xi, yi), which mean that person xi has to call person yi as well. What\nis the minimum amount of instructions that they need to add so, that at the\nend everyone learns the news, no matter who is the first to learn it? Input\nThe first input line contains number n (2 \u2264 n \u2264 10^5) \u2014 amount of BolgenOS\ncommunity members. The second line contains n space-separated integer numbers\nfi (1 \u2264 fi \u2264 n, i \u2260 fi) \u2014 index of a person, to whom calls a person with index\ni. Output In the first line output one number \u2014 the minimum amount of\ninstructions to add. Then output one of the possible variants to add these\ninstructions into the scheme, one instruction in each line. If the solution is\nnot unique, output any. Examples Input 3 3 3 2 Output 1 3 1 Input 7 2 3 1 3 4\n4 1 Output 3 2 5 2 6 3 7\n\n",
        "cf_contest_id": 22,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 3 2\r\n",
                "1\r\n3 1\r\n"
            ],
            [
                "7\r\n2 3 1 3 4 4 1\r\n",
                "3\r\n1 5\r\n3 6\r\n4 7\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n2 1\r\n",
                "0\r\n"
            ],
            [
                "3\r\n2 3 1\r\n",
                "0\r\n"
            ],
            [
                "4\r\n2 4 4 3\r\n",
                "1\r\n4 1\r\n"
            ],
            [
                "5\r\n5 3 5 2 3\r\n",
                "2\r\n3 1\r\n5 4\r\n"
            ],
            [
                "9\r\n2 5 6 7 4 1 9 6 8\r\n",
                "1\r\n6 3\r\n"
            ],
            [
                "20\r\n20 10 16 14 9 20 6 20 14 19 17 13 16 13 14 8 8 8 8 19\r\n",
                "10\r\n8 1\r\n20 2\r\n19 3\r\n8 4\r\n16 5\r\n14 7\r\n20 11\r\n8 12\r\n13 15\r\n14 18\r\n"
            ],
            [
                "7\r\n3 1 2 5 6 7 4\r\n",
                "2\r\n4 1\r\n1 4\r\n"
            ]
        ]
    }
]