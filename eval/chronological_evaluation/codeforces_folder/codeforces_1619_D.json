[
    {
        "name": "New Year's Problem",
        "description": "Vlad has \n    n\n friends, for each of whom he wants to buy one gift for the\nNew Year. There are \n    m\n shops in the city, in each of which he can buy a\ngift for any of his friends. If the \n    j\n-th friend (\n    1 \n    \u2264 j \n    \u2264\n    n\n) receives a gift bought in the shop with the number \n    i\n (\n    1 \n    \u2264 i\n    \n    \u2264 m\n), then the friend receives \n    p_ij\n units of joy. The\nrectangular table \n    p_ij\n is given in the input. Vlad has time to visit\nat most \n    n-1\n shops (where \n    n\n is the number of friends). He chooses\nwhich shops he will visit and for which friends he will buy gifts in each of\nthem. Let the \n    j\n-th friend receive \n    a_j\n units of joy from Vlad's\ngift. Let's find the value \n    \u03b1=\n    min\n    \n    a_1, a_2, \n    \u2026,\n    a_n\n. Vlad's goal is to buy gifts so that the value of \n    \u03b1\n\nis as large as possible. In other words, Vlad wants to maximize the minimum of\nthe joys of his friends. For example, let \n    m = 2\n, \n    n = 2\n. Let the\njoy from the gifts that we can buy in the first shop: \n    p_11 = 1\n,\n\n    p_12=2\n, in the second shop: \n    p_21 = 3\n, \n    p_22=4\n. Then it\nis enough for Vlad to go only to the second shop and buy a gift for the first\nfriend, bringing joy \n    3\n, and for the second \u2014 bringing joy \n    4\n. In\nthis case, the value \n    \u03b1\n will be equal to \n    min\n    \n    3, 4\n    \n     =\n    3\n Help Vlad choose gifts for his friends so that the value of\n\n    \u03b1\n is as high as possible. Please note that each friend must\nreceive one gift. Vlad can visit at most \n    n-1\n shops (where \n    n\n is the\nnumber of friends). In the shop, he can buy any number of gifts. Input The\nfirst line of the input contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014 the number of test cases in the input. An empty line is written\nbefore each test case. Then there is a line containing integers \n    m\n and\n\n    n\n (\n    2 \n    \u2264 n\n, \n    2 \n    \u2264 n \n    \u00b7 m \n    \u2264 10^5\n) separated by a\nspace \u2014 the number of shops and the number of friends, where \n    n \n    \u00b7 m\n\nis the product of \n    n\n and \n    m\n. Then \n    m\n lines follow, each\ncontaining \n    n\n numbers. The number in the \n    i\n-th row of the \n    j\n-th\ncolumn \n    p_ij\n (\n    1 \n    \u2264 p_ij\n    \u2264 10^9\n) is the joy of the\nproduct intended for friend number \n    j\n in shop number \n    i\n. It is\nguaranteed that the sum of the values \n    n \n    \u00b7 m\n over all test cases in\nthe test does not exceed \n    10^5\n. Output Print \n    t\n lines, each line\nmust contain the answer to the corresponding test case \u2014 the maximum possible\nvalue of \n    \u03b1\n, where \n    \u03b1\n is the minimum of the joys from\na gift for all of Vlad's friends. Example Input 5 2 2 1 2 3 4 4 3 1 3 1 3 1 1\n1 2 2 1 1 3 2 3 5 3 4 2 5 1 4 2 7 9 8 1 9 6 10 8 2 4 6 5 2 1 7 9 7 2 Output 3\n2 4 8 2\n\n",
        "cf_contest_id": 1619,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n\r\n2 2\r\n1 2\r\n3 4\r\n\r\n4 3\r\n1 3 1\r\n3 1 1\r\n1 2 2\r\n1 1 3\r\n\r\n2 3\r\n5 3 4\r\n2 5 1\r\n\r\n4 2\r\n7 9\r\n8 1\r\n9 6\r\n10 8\r\n\r\n2 4\r\n6 5 2 1\r\n7 9 7 2\r\n",
                "3\r\n2\r\n4\r\n8\r\n2\r\n"
            ]
        ],
        "private_cases": []
    }
]