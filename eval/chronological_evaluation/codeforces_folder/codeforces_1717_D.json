[
    {
        "name": "Madoka and The Corruption Scheme",
        "description": "Madoka decided to entrust the organization of a major computer game tournament\n\"OSU\"! In this tournament, matches are held according to the \"Olympic system\".\nIn other words, there are \n    2^n\n participants in the tournament, numbered\nwith integers from \n    1\n to \n    2^n\n. There are \n    n\n rounds in total in\nthe tournament. In the \n    i\n-th round there are \n    2^n - i\n matches\nbetween two players (one of whom is right, the other is left), after which the\nwinners go further along the tournament grid, and the losing participants are\neliminated from the tournament. Herewith, the relative order in the next round\ndoes not change. And the winner of the tournament \u2014 is the last remaining\nparticipant. But the smaller the participant's number, the more he will pay\nMadoka if he wins, so Madoka wants the participant with the lowest number to\nwin. To do this, she can arrange the participants in the first round as she\nlikes, and also determine for each match who will win \u2014 the participant on the\nleft or right. But Madoka knows that tournament sponsors can change the winner\nin matches no more than \n    k\n times. (That is, if the participant on the\nleft won before the change, then the participant on the right will win after\nthe change, and if the participant on the right won, then the participant on\nthe left will win after the change). So, the first image shows the tournament\ngrid that Madoka made, where the red lines denote who should win the match.\nAnd the second one shows the tournament grid, after one change in the outcome\nof the match by sponsors (a match between \n    1\n and \n    3\n players). Print\nthe minimum possible number of the winner in the tournament, which Madoka can\nget regardless of changes in sponsors. But since the answer can be very large,\noutput it modulo \n    10^9 + 7\n. Note that we need to minimize the answer, and\nonly then take it modulo. Input The first and the only line contains two\nintegers \n    n\n and \n    k\n (\n    1 \n    \u2264 n \n    \u2264 10^5, 1 \n    \u2264 k \n    \u2264\n    min(2^n - 1, 10^9)\n) \u2014 the number of rounds in the tournament and the\nnumber of outcomes that sponsors can change. Output Print exactly one integer\n\u2014 the minimum number of the winner modulo \n    10^9 + 7\n Examples Input 1 1\nOutput 2 Input 2 1 Output 3 Input 3 2 Output 7 Note In the first example,\nthere is only one match between players \n    1\n and \n    2\n, so the sponsors\ncan always make player \n    2\n wins. The tournament grid from the second\nexample is shown in the picture in the statement.\n\n",
        "cf_contest_id": 1717,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 1\r\n",
                "2\r\n"
            ],
            [
                "2 1\r\n",
                "3\r\n"
            ],
            [
                "3 2\r\n",
                "7\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 3\r\n",
                "26\r\n"
            ],
            [
                "5 5\r\n",
                "32\r\n"
            ],
            [
                "5 31\r\n",
                "32\r\n"
            ],
            [
                "11994 11995\r\n",
                "685385528\r\n"
            ],
            [
                "99999 3123\r\n",
                "575224395\r\n"
            ],
            [
                "100000 1000000000\r\n",
                "607723520\r\n"
            ],
            [
                "100000 1\r\n",
                "100001\r\n"
            ],
            [
                "100000 13\r\n",
                "185515077\r\n"
            ],
            [
                "100000 53228\r\n",
                "871774727\r\n"
            ],
            [
                "87532 32150\r\n",
                "165162987\r\n"
            ],
            [
                "30 99999999\r\n",
                "73741817\r\n"
            ]
        ]
    }
]