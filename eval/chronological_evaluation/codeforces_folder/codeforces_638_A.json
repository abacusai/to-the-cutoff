[
    {
        "name": "Home Numbers",
        "description": "The main street of Berland is a straight line with n houses built along it (n\nis an even number). The houses are located at both sides of the street. The\nhouses with odd numbers are at one side of the street and are numbered from 1\nto n - 1 in the order from the beginning of the street to the end (in the\npicture: from left to right). The houses with even numbers are at the other\nside of the street and are numbered from 2 to n in the order from the end of\nthe street to its beginning (in the picture: from right to left). The\ncorresponding houses with even and odd numbers are strictly opposite each\nother, that is, house 1 is opposite house n, house 3 is opposite house n - 2,\nhouse 5 is opposite house n - 4 and so on. Vasya needs to get to house number\na as quickly as possible. He starts driving from the beginning of the street\nand drives his car to house a. To get from the beginning of the street to\nhouses number 1 and n, he spends exactly 1 second. He also spends exactly one\nsecond to drive the distance between two neighbouring houses. Vasya can park\nat any side of the road, so the distance between the beginning of the street\nat the houses that stand opposite one another should be considered the same.\nYour task is: find the minimum time Vasya needs to reach house a. Input The\nfirst line of the input contains two integers, n and a (1 \u2264 a \u2264 n \u2264 100 000) \u2014\nthe number of houses on the street and the number of the house that Vasya\nneeds to reach, correspondingly. It is guaranteed that number n is even.\nOutput Print a single integer \u2014 the minimum time Vasya needs to get from the\nbeginning of the street to house a. Examples Input 4 2 Output 2 Input 8 5\nOutput 3 Note In the first sample there are only four houses on the street,\ntwo houses at each side. House 2 will be the last at Vasya's right. The second\nsample corresponds to picture with n = 8. House 5 is the one before last at\nVasya's left.\n\n",
        "cf_contest_id": 638,
        "cf_index": "A",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2\r\n",
                "2\r\n"
            ],
            [
                "8 5\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n",
                "1\r\n"
            ],
            [
                "2 2\r\n",
                "1\r\n"
            ],
            [
                "10 1\r\n",
                "1\r\n"
            ],
            [
                "10 10\r\n",
                "1\r\n"
            ],
            [
                "100000 100000\r\n",
                "1\r\n"
            ],
            [
                "100000 2\r\n",
                "50000\r\n"
            ],
            [
                "100000 3\r\n",
                "2\r\n"
            ],
            [
                "100000 99999\r\n",
                "50000\r\n"
            ],
            [
                "100 100\r\n",
                "1\r\n"
            ],
            [
                "3000 34\r\n",
                "1484\r\n"
            ],
            [
                "2000 1\r\n",
                "1\r\n"
            ],
            [
                "100000 1\r\n",
                "1\r\n"
            ],
            [
                "24842 1038\r\n",
                "11903\r\n"
            ],
            [
                "1628 274\r\n",
                "678\r\n"
            ],
            [
                "16186 337\r\n",
                "169\r\n"
            ],
            [
                "24562 2009\r\n",
                "1005\r\n"
            ],
            [
                "9456 3443\r\n",
                "1722\r\n"
            ],
            [
                "5610 332\r\n",
                "2640\r\n"
            ],
            [
                "1764 1288\r\n",
                "239\r\n"
            ],
            [
                "28588 13902\r\n",
                "7344\r\n"
            ],
            [
                "92480 43074\r\n",
                "24704\r\n"
            ],
            [
                "40022 26492\r\n",
                "6766\r\n"
            ],
            [
                "85766 64050\r\n",
                "10859\r\n"
            ],
            [
                "67808 61809\r\n",
                "30905\r\n"
            ],
            [
                "80124 68695\r\n",
                "34348\r\n"
            ],
            [
                "95522 91716\r\n",
                "1904\r\n"
            ],
            [
                "7752 2915\r\n",
                "1458\r\n"
            ],
            [
                "5094 5058\r\n",
                "19\r\n"
            ],
            [
                "6144 4792\r\n",
                "677\r\n"
            ],
            [
                "34334 20793\r\n",
                "10397\r\n"
            ],
            [
                "23538 10243\r\n",
                "5122\r\n"
            ],
            [
                "9328 7933\r\n",
                "3967\r\n"
            ],
            [
                "11110 9885\r\n",
                "4943\r\n"
            ],
            [
                "26096 2778\r\n",
                "11660\r\n"
            ],
            [
                "75062 5323\r\n",
                "2662\r\n"
            ],
            [
                "94790 7722\r\n",
                "43535\r\n"
            ],
            [
                "90616 32240\r\n",
                "29189\r\n"
            ],
            [
                "96998 8992\r\n",
                "44004\r\n"
            ],
            [
                "95130 19219\r\n",
                "9610\r\n"
            ],
            [
                "92586 8812\r\n",
                "41888\r\n"
            ],
            [
                "3266 3044\r\n",
                "112\r\n"
            ],
            [
                "5026 4697\r\n",
                "2349\r\n"
            ],
            [
                "3044 2904\r\n",
                "71\r\n"
            ],
            [
                "6022 5396\r\n",
                "314\r\n"
            ],
            [
                "31270 25522\r\n",
                "2875\r\n"
            ],
            [
                "82156 75519\r\n",
                "37760\r\n"
            ],
            [
                "34614 27913\r\n",
                "13957\r\n"
            ],
            [
                "88024 61143\r\n",
                "30572\r\n"
            ],
            [
                "91870 55672\r\n",
                "18100\r\n"
            ],
            [
                "95718 4868\r\n",
                "45426\r\n"
            ],
            [
                "99564 358\r\n",
                "49604\r\n"
            ],
            [
                "89266 13047\r\n",
                "6524\r\n"
            ],
            [
                "90904 16455\r\n",
                "8228\r\n"
            ],
            [
                "94750 13761\r\n",
                "6881\r\n"
            ],
            [
                "100000 23458\r\n",
                "38272\r\n"
            ],
            [
                "100000 23457\r\n",
                "11729\r\n"
            ],
            [
                "59140 24272\r\n",
                "17435\r\n"
            ],
            [
                "9860 8516\r\n",
                "673\r\n"
            ],
            [
                "25988 2733\r\n",
                "1367\r\n"
            ],
            [
                "9412 5309\r\n",
                "2655\r\n"
            ],
            [
                "25540 23601\r\n",
                "11801\r\n"
            ],
            [
                "76260 6050\r\n",
                "35106\r\n"
            ],
            [
                "92388 39118\r\n",
                "26636\r\n"
            ],
            [
                "8516 5495\r\n",
                "2748\r\n"
            ],
            [
                "91940 37847\r\n",
                "18924\r\n"
            ],
            [
                "30518 286\r\n",
                "15117\r\n"
            ],
            [
                "46646 19345\r\n",
                "9673\r\n"
            ]
        ]
    }
]