[
    {
        "name": "Petya and Square",
        "description": "Little Petya loves playing with squares. Mum bought him a square 2n \u00d7 2n in\nsize. Petya marked a cell inside the square and now he is solving the\nfollowing task. The task is to draw a broken line that would go along the grid\nlines and that would cut the square into two equal parts. The cutting line\nshould not have any common points with the marked cell and the resulting two\nparts should be equal up to rotation. Petya wants to determine whether it is\npossible to cut the square in the required manner given the sizes of the\nsquare side and the coordinates of the marked cell. Help him. Input The first\nline contains three space-separated integers 2n, x and y (2 \u2264 2n \u2264 100, 1 \u2264 x,\ny \u2264 2n), representing the length of a square's side and the coordinates of the\nmarked cell. It is guaranteed that 2n is even. The coordinates of the marked\ncell are represented by a pair of numbers x y, where x represents the number\nof the row and y represents the number of the column. The rows and columns are\nnumbered by consecutive integers from 1 to 2n. The rows are numbered from top\nto bottom and the columns are numbered from the left to the right. Output If\nthe square is possible to cut, print \"YES\", otherwise print \"NO\" (without the\nquotes). Examples Input 4 1 1 Output YES Input 2 2 2 Output NO Note A sample\ntest from the statement and one of the possible ways of cutting the square are\nshown in the picture:\n\n",
        "cf_contest_id": 112,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 1 1\r\n",
                "YES\r\n"
            ],
            [
                "2 2 2\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "8 2 5\r\n",
                "YES\r\n"
            ],
            [
                "6 1 6\r\n",
                "YES\r\n"
            ],
            [
                "2 1 1\r\n",
                "NO\r\n"
            ],
            [
                "2 1 2\r\n",
                "NO\r\n"
            ],
            [
                "2 2 1\r\n",
                "NO\r\n"
            ],
            [
                "4 2 2\r\n",
                "NO\r\n"
            ],
            [
                "4 2 3\r\n",
                "NO\r\n"
            ],
            [
                "4 2 4\r\n",
                "YES\r\n"
            ],
            [
                "60 30 30\r\n",
                "NO\r\n"
            ],
            [
                "60 34 30\r\n",
                "YES\r\n"
            ],
            [
                "60 31 29\r\n",
                "YES\r\n"
            ],
            [
                "100 61 30\r\n",
                "YES\r\n"
            ],
            [
                "100 52 50\r\n",
                "YES\r\n"
            ],
            [
                "100 51 51\r\n",
                "NO\r\n"
            ],
            [
                "100 1 2\r\n",
                "YES\r\n"
            ],
            [
                "100 1 8\r\n",
                "YES\r\n"
            ],
            [
                "100 19 99\r\n",
                "YES\r\n"
            ],
            [
                "100 18 82\r\n",
                "YES\r\n"
            ],
            [
                "100 100 50\r\n",
                "YES\r\n"
            ],
            [
                "100 51 100\r\n",
                "YES\r\n"
            ],
            [
                "100 100 100\r\n",
                "YES\r\n"
            ],
            [
                "6 3 3\r\n",
                "NO\r\n"
            ],
            [
                "6 4 4\r\n",
                "NO\r\n"
            ],
            [
                "6 3 1\r\n",
                "YES\r\n"
            ],
            [
                "6 3 5\r\n",
                "YES\r\n"
            ],
            [
                "8 4 4\r\n",
                "NO\r\n"
            ],
            [
                "6 3 2\r\n",
                "YES\r\n"
            ],
            [
                "4 3 3\r\n",
                "NO\r\n"
            ],
            [
                "20 10 1\r\n",
                "YES\r\n"
            ],
            [
                "8 4 1\r\n",
                "YES\r\n"
            ],
            [
                "100 50 50\r\n",
                "NO\r\n"
            ]
        ]
    }
]