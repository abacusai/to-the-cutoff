[
    {
        "name": "Flowers",
        "description": "We saw the little game Marmot made for Mole's lunch. Now it's Marmot's dinner\ntime and, as we all know, Marmot eats flowers. At every dinner he eats some\nred and white flowers. Therefore a dinner can be represented as a sequence of\nseveral flowers, some of them white and some of them red. But, for a dinner to\nbe tasty, there is a rule: Marmot wants to eat white flowers only in groups of\nsize k. Now Marmot wonders in how many ways he can eat between a and b\nflowers. As the number of ways could be very large, print it modulo 1000000007\n(10^9 + 7). Input Input contains several test cases. The first line contains\ntwo integers t and k (1 \u2264 t, k \u2264 10^5), where t represents the number of test\ncases. The next t lines contain two integers ai and bi (1 \u2264 ai \u2264 bi \u2264 10^5),\ndescribing the i-th test. Output Print t lines to the standard output. The\ni-th line should contain the number of ways in which Marmot can eat between ai\nand bi flowers at dinner modulo 1000000007 (10^9 + 7). Examples Input 3 2 1 3\n2 3 4 4 Output 6 5 5 Note For K = 2 and length 1 Marmot can eat (R). For K = 2\nand length 2 Marmot can eat (RR) and (WW). For K = 2 and length 3 Marmot can\neat (RRR), (RWW) and (WWR). For K = 2 and length 4 Marmot can eat, for\nexample, (WWWW) or (RWWR), but for example he can't eat (WWWR).\n\n",
        "cf_contest_id": 474,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n1 3\r\n2 3\r\n4 4\r\n",
                "6\r\n5\r\n5\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1 3\r\n",
                "14\r\n"
            ],
            [
                "1 2\r\n64329 79425\r\n",
                "0\r\n"
            ]
        ]
    }
]