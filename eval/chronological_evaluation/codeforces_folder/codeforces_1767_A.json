[
    {
        "name": "Cut the Triangle",
        "description": "You are given a non-degenerate triangle (a non-degenerate triangle is a\ntriangle with positive area). The vertices of the triangle have coordinates\n\n    (x_1, y_1)\n, \n    (x_2, y_2)\n and \n    (x_3, y_3)\n. You want to draw a\nstraight line to cut the triangle into two non-degenerate triangles.\nFurthermore, the line you draw should be either horizontal or vertical. Can\nyou draw the line to meet all the constraints? Here are some suitable ways to\ndraw the line: However, these ways to draw the line are not suitable (the\nfirst line cuts the triangle into a triangle and a quadrangle; the second line\ndoesn't cut the triangle at all; the third line is neither horizontal nor\nvertical): Input The first line contains one integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^4\n) \u2014 the number of test cases. Each test case consists of four\nlines. The first of them is empty. The \n    i\n-th of the next three lines\ncontains two integers \n    x_i\n and \n    y_i\n (\n    1 \n    \u2264 x_i, y_i \n    \u2264\n    10^8\n) \u2014 the coordinates of the \n    i\n-th vertex of the triangle.\nAdditional constraint on the input: in each test case, the triangle formed by\nthree vertices has positive area (i. e. it is non-degenerate). Output For each\ntest case, print YES if it is possible to cut the triangle according to the\nstatement, or NO otherwise. You may print each letter in any case (YES, yes,\nYes will all be recognized as positive answer, NO, no and nO will all be\nrecognized as negative answer). Example Input 4 4 7 6 8 3 5 4 5 4 7 6 8 5 8 1\n8 2 5 3 6 6 6 6 3 Output YES YES YES NO\n\n",
        "cf_contest_id": 1767,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n\r\n4 7\r\n6 8\r\n3 5\r\n\r\n4 5\r\n4 7\r\n6 8\r\n\r\n5 8\r\n1 8\r\n2 5\r\n\r\n3 6\r\n6 6\r\n6 3\r\n",
                "YES\r\nYES\r\nYES\r\nNO \r\n"
            ]
        ],
        "private_cases": [
            [
                "20\r\n\r\n4 7\r\n6 8\r\n3 5\r\n\r\n4 5\r\n4 7\r\n6 8\r\n\r\n5 8\r\n1 8\r\n2 5\r\n\r\n3 6\r\n6 6\r\n6 3\r\n\r\n4 7\r\n6 8\r\n3 5\r\n\r\n4 5\r\n4 7\r\n6 8\r\n\r\n5 8\r\n1 8\r\n2 5\r\n\r\n3 6\r\n6 6\r\n6 3\r\n\r\n4 7\r\n6 8\r\n3 5\r\n\r\n4 5\r\n4 7\r\n6 8\r\n\r\n5 8\r\n1 8\r\n2 5\r\n\r\n3 6\r\n6 6\r\n6 3\r\n\r\n4 7\r\n6 8\r\n3 5\r\n\r\n4 5\r\n4 7\r\n6 8\r\n\r\n5 8\r\n1 8\r\n2 5\r\n\r\n3 6\r\n6 6\r\n6 3\r\n\r\n4 7\r\n6 8\r\n3 5\r\n\r\n4 5\r\n4 7\r\n6 8\r\n\r\n5 8\r\n1 8\r\n2 5\r\n\r\n3 6\r\n6 6\r\n6 3\r\n",
                "YES\r\nYES\r\nYES\r\nNO \r\nYES\r\nYES\r\nYES\r\nNO \r\nYES\r\nYES\r\nYES\r\nNO \r\nYES\r\nYES\r\nYES\r\nNO \r\nYES\r\nYES\r\nYES\r\nNO \r\n"
            ],
            [
                "20\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n\r\n1 1\r\n1 2\r\n2 3\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ]
        ]
    }
]