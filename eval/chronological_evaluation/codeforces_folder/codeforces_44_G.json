[
    {
        "name": "Shooting Gallery",
        "description": "Berland amusement park shooting gallery is rightly acknowledged as one of the\nbest in the world. Every day the country's best shooters master their skills\nthere and the many visitors compete in clay pigeon shooting to win decent\nprizes. And the head of the park has recently decided to make an online\nversion of the shooting gallery. During the elaboration process it turned out\nthat the program that imitates the process of shooting effectively, is needed.\nTo formulate the requirements to the program, the shooting gallery was\nformally described. A 3D Cartesian system of coordinates was introduced, where\nthe X axis ran across the gallery floor along the line, along which the\nshooters are located, the Y axis ran vertically along the gallery wall and the\npositive direction of the Z axis matched the shooting direction. Let's call\nthe XOY plane a shooting plane and let's assume that all the bullets are out\nof the muzzles at the points of this area and fly parallel to the Z axis.\nEvery clay pigeon can be represented as a rectangle whose sides are parallel\nto X and Y axes, and it has a positive z-coordinate. The distance between a\nclay pigeon and the shooting plane is always different for every target. The\nbullet hits the target if it goes through the inner area or border of the\nrectangle corresponding to it. When the bullet hits the target, the target\nfalls down vertically into the crawl-space of the shooting gallery and cannot\nbe shot at any more. The targets are tough enough, that's why a bullet can not\npierce a target all the way through and if a bullet hits a target it can't fly\non. In input the simulator program is given the arrangement of all the targets\nand also of all the shots in the order of their appearance. The program should\ndetermine which target was hit by which shot. If you haven't guessed it yet,\nyou are the one who is to write such a program. Input The first line contains\nan integer n (1 \u2264 n \u2264 10^5) \u2014 the number of targets. Each of the subsequent n\nlines contains the description of a target. The target is described by five\nintegers xl, xr, yl, yr, z, that determine it's location in space (0 \u2264 xl < xr\n\u2264 10^7, 0 \u2264 yl < yr \u2264 10^7, 0 < z \u2264 10^7). The next line contains an integer m\n(1 \u2264 m \u2264 10^5), determining the number of shots. Then in m lines shots are\ndescribed. Every shot is determined by the coordinates of a bullet on the\nshooting plane (x, y) (0 \u2264 x, y \u2264 10^7, the coordinates of bullets are\nintegers). The shots are given in the order of their firing. The intervals\nbetween shots are large enough, and a target falls very quickly, that's why\nassume that a falling target can not be an obstruction for all the shots\nfollowing the one that hit it. Output For every shot in the single line print\nthe number of the target which the shot has hit, or 0, if the bullet did not\nhit any target. The targets are numbered starting from 1 in the order in which\nthey were given in the input data. Examples Input 2 1 4 1 4 1 2 5 2 6 2 4 0 0\n3 3 4 5 3 5 Output 0 1 2 0\n\n",
        "cf_contest_id": 44,
        "cf_index": "G",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1 4 1 4 1\r\n2 5 2 6 2\r\n4\r\n0 0\r\n3 3\r\n4 5\r\n3 5\r\n",
                "0\r\n1\r\n2\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 3 1 3 1\r\n4\r\n0 0\r\n1 1\r\n2 2\r\n3 3\r\n",
                "0\r\n1\r\n0\r\n0\r\n"
            ],
            [
                "4\r\n1 5 2 4 3\r\n2 4 3 6 2\r\n1 3 1 2 1\r\n1 5 1 5 4\r\n6\r\n2 2\r\n3 3\r\n2 2\r\n1 4\r\n1 4\r\n4 4\r\n",
                "3\r\n2\r\n1\r\n4\r\n0\r\n0\r\n"
            ],
            [
                "5\r\n1 5 1 5 5\r\n1 5 1 5 4\r\n1 5 1 5 3\r\n1 5 1 5 2\r\n1 5 1 5 1\r\n6\r\n3 3\r\n3 3\r\n3 3\r\n3 3\r\n3 3\r\n3 3\r\n",
                "5\r\n4\r\n3\r\n2\r\n1\r\n0\r\n"
            ],
            [
                "2\r\n0 1 0 1 2\r\n1 2 1 2 1\r\n2\r\n1 1\r\n1 1\r\n",
                "2\r\n1\r\n"
            ],
            [
                "5\r\n0 3 2 7 2\r\n0 5 2 10 12\r\n2 5 2 9 30\r\n1 8 1 8 11\r\n2 4 2 7 17\r\n5\r\n8 3\r\n0 8\r\n8 0\r\n8 2\r\n0 2\r\n",
                "4\r\n2\r\n0\r\n0\r\n1\r\n"
            ],
            [
                "5\r\n2 5 1 2 13\r\n0 6 0 6 25\r\n1 6 2 8 28\r\n0 5 1 4 2\r\n0 5 2 8 32\r\n5\r\n5 9\r\n10 0\r\n3 1\r\n9 2\r\n2 3\r\n",
                "0\r\n0\r\n4\r\n0\r\n2\r\n"
            ],
            [
                "5\r\n1 4 1 7 24\r\n0 8 2 6 39\r\n0 8 1 5 28\r\n0 2 2 9 43\r\n1 9 2 8 48\r\n5\r\n3 3\r\n0 4\r\n1 2\r\n0 4\r\n3 3\r\n",
                "1\r\n3\r\n2\r\n4\r\n5\r\n"
            ],
            [
                "5\r\n0 3 1 4 35\r\n0 2 0 2 2\r\n1 3 0 3 28\r\n0 8 2 5 34\r\n2 4 1 8 13\r\n5\r\n1 9\r\n2 7\r\n8 1\r\n1 4\r\n3 2\r\n",
                "0\r\n5\r\n0\r\n4\r\n3\r\n"
            ],
            [
                "5\r\n1 7 1 2 34\r\n2 9 2 6 13\r\n0 3 0 4 20\r\n1 5 2 6 40\r\n2 7 1 6 43\r\n5\r\n0 6\r\n4 8\r\n10 7\r\n10 1\r\n6 0\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "10\r\n1 8 1 2 41\r\n0 5 2 3 33\r\n0 1 0 2 90\r\n1 3 1 6 50\r\n2 9 0 7 87\r\n2 9 1 3 8\r\n1 8 1 8 49\r\n2 4 2 9 91\r\n1 5 1 7 22\r\n1 8 0 3 75\r\n10\r\n3 6\r\n3 9\r\n7 8\r\n9 7\r\n1 3\r\n2 1\r\n7 9\r\n1 8\r\n7 3\r\n1 1\r\n",
                "9\r\n8\r\n7\r\n5\r\n2\r\n6\r\n0\r\n0\r\n10\r\n1\r\n"
            ],
            [
                "10\r\n0 8 1 2 83\r\n1 9 1 5 62\r\n1 9 2 8 50\r\n2 7 0 5 31\r\n1 8 2 5 13\r\n2 4 1 4 21\r\n2 3 2 4 2\r\n1 9 0 4 63\r\n0 7 0 1 40\r\n1 7 2 6 32\r\n10\r\n1 7\r\n6 0\r\n9 1\r\n1 7\r\n2 5\r\n8 7\r\n4 9\r\n8 3\r\n5 4\r\n9 10\r\n",
                "3\r\n4\r\n2\r\n0\r\n5\r\n0\r\n0\r\n8\r\n10\r\n0\r\n"
            ],
            [
                "5\r\n2 8 2 7 27\r\n1 5 0 6 23\r\n1 3 1 8 46\r\n1 2 1 2 9\r\n2 6 1 3 26\r\n10\r\n4 0\r\n9 4\r\n4 7\r\n9 5\r\n2 4\r\n6 3\r\n1 3\r\n1 5\r\n10 6\r\n9 6\r\n",
                "2\r\n0\r\n1\r\n0\r\n3\r\n5\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "10\r\n1 3 1 4 55\r\n0 5 1 2 29\r\n0 8 0 6 89\r\n0 2 1 5 17\r\n1 4 2 10 20\r\n1 9 2 10 11\r\n1 3 1 7 93\r\n2 7 1 5 68\r\n0 7 2 4 28\r\n1 4 2 7 42\r\n20\r\n3 10\r\n3 3\r\n6 9\r\n3 4\r\n5 6\r\n2 7\r\n8 3\r\n2 0\r\n6 1\r\n4 7\r\n3 9\r\n9 3\r\n10 4\r\n1 2\r\n5 2\r\n10 8\r\n2 4\r\n3 1\r\n2 5\r\n6 7\r\n",
                "6\r\n5\r\n0\r\n9\r\n3\r\n10\r\n0\r\n0\r\n8\r\n0\r\n0\r\n0\r\n0\r\n4\r\n2\r\n0\r\n1\r\n7\r\n0\r\n0\r\n"
            ],
            [
                "20\r\n1 8 0 5 43\r\n1 8 0 2 27\r\n0 4 0 8 192\r\n2 6 0 6 156\r\n0 3 2 4 174\r\n2 3 0 3 13\r\n0 3 0 2 198\r\n1 3 0 1 31\r\n0 7 1 9 186\r\n1 9 0 2 95\r\n1 6 1 9 133\r\n2 10 2 3 22\r\n0 2 1 2 167\r\n1 3 2 3 79\r\n0 4 1 8 194\r\n0 8 0 7 14\r\n2 5 0 1 158\r\n2 6 2 9 185\r\n2 6 1 9 140\r\n1 2 2 8 45\r\n15\r\n5 6\r\n6 1\r\n5 8\r\n7 9\r\n0 7\r\n10 4\r\n9 10\r\n10 5\r\n2 1\r\n8 9\r\n7 8\r\n2 1\r\n5 2\r\n7 5\r\n9 2\r\n",
                "16\r\n2\r\n11\r\n9\r\n3\r\n0\r\n0\r\n0\r\n6\r\n0\r\n0\r\n8\r\n12\r\n1\r\n10\r\n"
            ],
            [
                "8\r\n2 4 0 1 65\r\n0 2 1 5 30\r\n0 2 1 3 33\r\n2 6 1 5 3\r\n2 6 1 3 68\r\n0 3 1 7 27\r\n1 7 0 1 48\r\n0 4 2 6 35\r\n5\r\n2 1\r\n7 5\r\n7 5\r\n0 0\r\n0 7\r\n",
                "4\r\n0\r\n0\r\n0\r\n6\r\n"
            ],
            [
                "8\r\n1 2 1 4 75\r\n0 4 1 3 26\r\n2 4 2 4 3\r\n0 6 1 3 33\r\n1 2 0 5 40\r\n1 6 2 7 36\r\n1 4 0 2 56\r\n1 4 1 7 55\r\n5\r\n4 3\r\n1 5\r\n6 7\r\n1 2\r\n3 4\r\n",
                "3\r\n6\r\n0\r\n2\r\n8\r\n"
            ],
            [
                "8\r\n0 2 1 2 37\r\n0 6 0 2 70\r\n0 1 2 6 4\r\n2 8 2 5 31\r\n0 5 0 5 11\r\n2 8 2 6 13\r\n0 3 1 3 64\r\n2 5 0 4 28\r\n5\r\n6 3\r\n6 5\r\n4 8\r\n1 2\r\n7 1\r\n",
                "6\r\n4\r\n0\r\n3\r\n0\r\n"
            ],
            [
                "8\r\n1 4 2 5 48\r\n2 8 2 8 66\r\n0 1 0 4 54\r\n0 1 2 3 61\r\n0 1 1 3 63\r\n0 6 0 5 22\r\n2 5 1 4 40\r\n0 2 1 4 49\r\n5\r\n8 4\r\n0 2\r\n1 1\r\n2 3\r\n0 7\r\n",
                "2\r\n6\r\n8\r\n7\r\n0\r\n"
            ],
            [
                "8\r\n1 5 1 5 54\r\n1 7 2 4 66\r\n0 1 1 7 2\r\n2 4 0 5 64\r\n2 5 1 5 44\r\n0 3 2 3 61\r\n2 6 1 2 52\r\n2 6 1 2 59\r\n5\r\n0 6\r\n6 5\r\n1 1\r\n3 3\r\n8 8\r\n",
                "3\r\n0\r\n1\r\n5\r\n0\r\n"
            ],
            [
                "8\r\n0 3 1 4 67\r\n1 4 0 6 70\r\n0 2 2 3 12\r\n2 7 2 4 28\r\n2 3 0 4 22\r\n1 2 1 6 41\r\n0 3 1 4 60\r\n2 6 0 5 77\r\n5\r\n0 0\r\n6 6\r\n7 8\r\n3 8\r\n2 5\r\n",
                "0\r\n0\r\n0\r\n0\r\n6\r\n"
            ],
            [
                "8\r\n0 6 1 2 80\r\n2 8 0 1 74\r\n1 5 0 4 22\r\n2 3 1 4 72\r\n0 5 0 1 48\r\n1 4 2 5 68\r\n0 5 2 8 67\r\n0 6 2 7 19\r\n5\r\n4 0\r\n4 5\r\n8 7\r\n7 6\r\n2 0\r\n",
                "3\r\n8\r\n0\r\n0\r\n5\r\n"
            ],
            [
                "8\r\n2 7 2 8 12\r\n0 4 0 5 30\r\n2 6 1 6 32\r\n1 5 0 6 35\r\n1 5 2 3 26\r\n0 1 1 6 48\r\n1 7 0 2 73\r\n0 2 1 6 41\r\n5\r\n0 6\r\n4 5\r\n1 4\r\n0 4\r\n1 4\r\n",
                "8\r\n1\r\n2\r\n6\r\n4\r\n"
            ],
            [
                "8\r\n1 3 2 3 25\r\n1 2 0 3 34\r\n0 5 1 7 42\r\n1 7 1 4 47\r\n1 3 1 4 4\r\n1 6 1 4 27\r\n2 4 0 1 80\r\n0 6 1 7 14\r\n5\r\n3 6\r\n2 3\r\n2 1\r\n2 0\r\n8 1\r\n",
                "8\r\n5\r\n6\r\n2\r\n0\r\n"
            ],
            [
                "8\r\n1 3 2 7 37\r\n2 8 1 3 69\r\n1 2 0 4 52\r\n0 3 0 6 11\r\n1 3 0 4 30\r\n1 4 0 1 6\r\n0 4 1 4 1\r\n1 6 2 4 73\r\n5\r\n6 3\r\n4 3\r\n0 3\r\n7 7\r\n5 4\r\n",
                "2\r\n7\r\n4\r\n0\r\n8\r\n"
            ]
        ]
    }
]