[
    {
        "name": "Quasi Binary",
        "description": "A number is called quasibinary if its decimal representation contains only\ndigits 0 or 1. For example, numbers 0, 1, 101, 110011 \u2014 are quasibinary and\nnumbers 2, 12, 900 are not. You are given a positive integer n. Represent it\nas a sum of minimum number of quasibinary numbers. Input The first line\ncontains a single integer n (1 \u2264 n \u2264 10^6). Output In the first line print a\nsingle integer k \u2014 the minimum number of numbers in the representation of\nnumber n as a sum of quasibinary numbers. In the second line print k numbers \u2014\nthe elements of the sum. All these numbers should be quasibinary according to\nthe definition above, their sum should equal n. Do not have to print the\nleading zeroes in the numbers. The order of numbers doesn't matter. If there\nare multiple possible representations, you are allowed to print any of them.\nExamples Input 9 Output 9 1 1 1 1 1 1 1 1 1 Input 32 Output 3 10 11 11\n\n",
        "cf_contest_id": 538,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dp",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9\r\n",
                "9\r\n1 1 1 1 1 1 1 1 1"
            ],
            [
                "32\r\n",
                "3\r\n11 11 10"
            ]
        ],
        "private_cases": [
            [
                "1\r\n",
                "1\r\n1"
            ],
            [
                "415\r\n",
                "5\r\n111 101 101 101 1"
            ],
            [
                "10011\r\n",
                "1\r\n10011"
            ],
            [
                "10201\r\n",
                "2\r\n10101 100"
            ],
            [
                "314159\r\n",
                "9\r\n111111 101011 101011 1011 11 1 1 1 1"
            ],
            [
                "999999\r\n",
                "9\r\n111111 111111 111111 111111 111111 111111 111111 111111 111111"
            ],
            [
                "2\r\n",
                "2\r\n1 1"
            ],
            [
                "10\r\n",
                "1\r\n10"
            ],
            [
                "21\r\n",
                "2\r\n11 10"
            ],
            [
                "98\r\n",
                "9\r\n11 11 11 11 11 11 11 11 10"
            ],
            [
                "102030\r\n",
                "3\r\n101010 1010 10"
            ],
            [
                "909090\r\n",
                "9\r\n101010 101010 101010 101010 101010 101010 101010 101010 101010"
            ],
            [
                "909823\r\n",
                "9\r\n101111 101111 101101 101100 101100 101100 101100 101100 101000"
            ],
            [
                "1000000\r\n",
                "1\r\n1000000"
            ],
            [
                "111111\r\n",
                "1\r\n111111"
            ],
            [
                "123456\r\n",
                "6\r\n111111 11111 1111 111 11 1"
            ],
            [
                "987654\r\n",
                "9\r\n111111 111111 111111 111111 111110 111100 111000 110000 100000"
            ],
            [
                "908172\r\n",
                "9\r\n101111 101011 101010 101010 101010 101010 101010 101000 100000"
            ],
            [
                "8\r\n",
                "8\r\n1 1 1 1 1 1 1 1"
            ],
            [
                "100009\r\n",
                "9\r\n100001 1 1 1 1 1 1 1 1"
            ],
            [
                "900000\r\n",
                "9\r\n100000 100000 100000 100000 100000 100000 100000 100000 100000"
            ],
            [
                "1435\r\n",
                "5\r\n1111 111 111 101 1"
            ],
            [
                "1453\r\n",
                "5\r\n1111 111 111 110 10"
            ]
        ]
    }
]