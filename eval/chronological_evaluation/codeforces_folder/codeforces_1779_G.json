[
    {
        "name": "The Game of the Century",
        "description": "The time has finally come, MKnez and Baltic are to host The Game of the\nCentury. For that purpose, they built a village to lodge its participants. The\nvillage has the shape of an equilateral triangle delimited by three roads of\nlength \n    n\n. It is cut into \n    n^2\n smaller equilateral triangles, of\nside length \n    1\n, by \n    3n-3\n additional roads which run parallel to the\nsides. See the figure for \n    n=3\n. Each of the \n    3n\n roads is made of\nmultiple (possibly \n    1\n) road segments of length \n    1\n which connect\nadjacent intersections. The direction has already been chosen for each of the\n\n    3n\n roads (so, for each road, the same direction is assigned to all its\nroad segments). Traffic can only go in the specified directions (i. e. the\nroads are monodirectional). You are tasked with making adjustments to the\ntraffic plan so that from each intersection it is possible to reach every\nother intersection. Specifically, you can invert the traffic direction of any\nnumber of road segments of length \n    1\n. What is the minimal number of road\nsegments for which you need to invert the traffic direction? Input Each test\ncontains multiple test cases. The first line contains the number of test cases\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n     000\n). The description of the test cases\nfollows. The first line of each test case contains a positive integer \n    n\n\n(\n    1\n    \u2264 n\n    \u2264 10^5\n) \u2014 the size of the triangular village's sides.\nThree lines follow, each containing a binary string of length \n    n\n which\ndescribes the traffic directions of the roads. The \n    i\n-th of the following\nthree lines contains a binary string \n    s_i\n of length \n    n\n representing\nthe direction of each road parallel to the road segment denoted by \n    i\n in\nthe picture above. In particular, the \n    j\n-th character of \n    s_i\n is \"1\"\nif the \n    j\n-th shortest road (parallel to the road segment denoted by\n\n    i\n in the picture) has the same direction of the road segment denoted by\n\n    i\n in the picture, while it is \"0\" if it has the opposite direction. So\nthe first character of \n    s_i\n describes the direction of the road\ncontaining only \n    1\n road segment, while the last character describes the\ndirection of the road containing \n    n\n road segments. It is guaranteed that\nthe sum of \n    n\n over all test cases does not exceed \n    10^5\n. Output For\neach test case, print the minimum number of road segments for which you need\nto invert the traffic direction. Example Input 3 3 001 001 010 1 0 0 0 3 111\n011 100 Output 2 0 3 Note The first example corresponds to the picture in the\nstatement. There exist multiple solutions that invert the traffic direction of\nexactly \n    2\n road segments, but inverting only \n    1\n road segment never\nmakes it possible to reach every intersection from any other. One of the\npossible solutions is shown in the picture below in which the inverted road\nsegments are highlighted in blue. In the second example, the answer is \n    0\n\nsince it is already possible to reach every intersection from any other.\n\n",
        "cf_contest_id": 1779,
        "cf_index": "G",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n001\r\n001\r\n010\r\n1\r\n0\r\n0\r\n0\r\n3\r\n111\r\n011\r\n100\r\n",
                "2\r\n0\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]