[
    {
        "name": "Shashlik Cooking",
        "description": "Long story short, shashlik is Miroslav's favorite food. Shashlik is prepared\non several skewers simultaneously. There are two states for each skewer:\ninitial and turned over. This time Miroslav laid out \n    n\n skewers parallel\nto each other, and enumerated them with consecutive integers from \n    1\n to\n\n    n\n in order from left to right. For better cooking, he puts them quite\nclose to each other, so when he turns skewer number \n    i\n, it leads to\nturning \n    k\n closest skewers from each side of the skewer \n    i\n, that is,\nskewers number \n    i - k\n, \n    i - k + 1\n, ..., \n    i - 1\n, \n    i + 1\n,\n..., \n    i + k - 1\n, \n    i + k\n (if they exist). For example, let \n    n =\n    6\n and \n    k = 1\n. When Miroslav turns skewer number \n    3\n, then skewers\nwith numbers \n    2\n, \n    3\n, and \n    4\n will come up turned over. If after\nthat he turns skewer number \n    1\n, then skewers number \n    1\n, \n    3\n, and\n\n    4\n will be turned over, while skewer number \n    2\n will be in the\ninitial position (because it is turned again). As we said before, the art of\ncooking requires perfect timing, so Miroslav wants to turn over all \n    n\n\nskewers with the minimal possible number of actions. For example, for the\nabove example \n    n = 6\n and \n    k = 1\n, two turnings are sufficient: he can\nturn over skewers number \n    2\n and \n    5\n. Help Miroslav turn over all\n\n    n\n skewers. Input The first line contains two integers \n    n\n and\n\n    k\n (\n    1 \n    \u2264 n \n    \u2264 1000\n, \n    0 \n    \u2264 k \n    \u2264 1000\n) \u2014 the\nnumber of skewers and the number of skewers from each side that are turned in\none step. Output The first line should contain integer \n    l\n \u2014 the minimum\nnumber of actions needed by Miroslav to turn over all \n    n\n skewers. After\nthan print \n    l\n integers from \n    1\n to \n    n\n denoting the number of the\nskewer that is to be turned over at the corresponding step. Examples Input 7 2\nOutput 2 1 6 Input 5 1 Output 2 1 4 Note In the first example the first\noperation turns over skewers \n    1\n, \n    2\n and \n    3\n, the second\noperation turns over skewers \n    4\n, \n    5\n, \n    6\n and \n    7\n. In the\nsecond example it is also correct to turn over skewers \n    2\n and \n    5\n,\nbut turning skewers \n    2\n and \n    4\n, or \n    1\n and \n    5\n are incorrect\nsolutions because the skewer \n    3\n is in the initial state after these\noperations.\n\n",
        "cf_contest_id": 1040,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "7 2\r\n",
                "2 7 2\n"
            ],
            [
                "5 1\r\n",
                "2 5 2\n"
            ]
        ],
        "private_cases": [
            [
                "10 0\r\n",
                "10 10 9 8 7 6 5 4 3 2 1\n"
            ],
            [
                "10 1\r\n",
                "4 10 7 4 1\n"
            ],
            [
                "10 10\r\n",
                "1 10\n"
            ],
            [
                "11 10\r\n",
                "1 11\n"
            ],
            [
                "100 2\r\n",
                "20 98 93 88 83 78 73 68 63 58 53 48 43 38 33 28 23 18 13 8 3\n"
            ],
            [
                "100 200\r\n",
                "1 100\n"
            ],
            [
                "1000 1000\r\n",
                "1 1000\n"
            ],
            [
                "1000 31\r\n",
                "16 969 906 843 780 717 654 591 528 465 402 339 276 213 150 87 24\n"
            ],
            [
                "1 0\r\n",
                "1 1\n"
            ],
            [
                "2 0\r\n",
                "2 2 1\n"
            ],
            [
                "3 0\r\n",
                "3 3 2 1\n"
            ],
            [
                "4 0\r\n",
                "4 4 3 2 1\n"
            ],
            [
                "5 0\r\n",
                "5 5 4 3 2 1\n"
            ],
            [
                "15 0\r\n",
                "15 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\n"
            ],
            [
                "153 0\r\n",
                "153 153 152 151 150 149 148 147 146 145 144 143 142 141 140 139 138 137 136 135 134 133 132 131 130 129 128 127 126 125 124 123 122 121 120 119 118 117 116 115 114 113 112 111 110 109 108 107 106 105 104 103 102 101 100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\n"
            ],
            [
                "1 1\r\n",
                "1 1\n"
            ],
            [
                "2 1\r\n",
                "1 2\n"
            ],
            [
                "3 1\r\n",
                "1 2\n"
            ],
            [
                "4 1\r\n",
                "2 4 1\n"
            ],
            [
                "5 1\r\n",
                "2 5 2\n"
            ],
            [
                "15 1\r\n",
                "5 14 11 8 5 2\n"
            ],
            [
                "153 1\r\n",
                "51 152 149 146 143 140 137 134 131 128 125 122 119 116 113 110 107 104 101 98 95 92 89 86 83 80 77 74 71 68 65 62 59 56 53 50 47 44 41 38 35 32 29 26 23 20 17 14 11 8 5 2\n"
            ],
            [
                "1 2\r\n",
                "1 1\n"
            ],
            [
                "2 2\r\n",
                "1 2\n"
            ],
            [
                "3 2\r\n",
                "1 3\n"
            ],
            [
                "4 2\r\n",
                "1 2\n"
            ],
            [
                "5 2\r\n",
                "1 3\n"
            ],
            [
                "15 2\r\n",
                "3 13 8 3\n"
            ],
            [
                "153 2\r\n",
                "31 153 148 143 138 133 128 123 118 113 108 103 98 93 88 83 78 73 68 63 58 53 48 43 38 33 28 23 18 13 8 3\n"
            ],
            [
                "1 3\r\n",
                "1 1\n"
            ],
            [
                "2 3\r\n",
                "1 2\n"
            ],
            [
                "3 3\r\n",
                "1 3\n"
            ],
            [
                "4 3\r\n",
                "1 4\n"
            ],
            [
                "5 3\r\n",
                "1 2\n"
            ],
            [
                "15 3\r\n",
                "3 15 8 1\n"
            ],
            [
                "153 3\r\n",
                "22 150 143 136 129 122 115 108 101 94 87 80 73 66 59 52 45 38 31 24 17 10 3\n"
            ],
            [
                "1 4\r\n",
                "1 1\n"
            ],
            [
                "2 4\r\n",
                "1 2\n"
            ],
            [
                "3 4\r\n",
                "1 3\n"
            ],
            [
                "4 4\r\n",
                "1 4\n"
            ],
            [
                "5 4\r\n",
                "1 5\n"
            ],
            [
                "15 4\r\n",
                "2 11 2\n"
            ],
            [
                "153 4\r\n",
                "17 149 140 131 122 113 104 95 86 77 68 59 50 41 32 23 14 5\n"
            ],
            [
                "1000 4\r\n",
                "112 1000 991 982 973 964 955 946 937 928 919 910 901 892 883 874 865 856 847 838 829 820 811 802 793 784 775 766 757 748 739 730 721 712 703 694 685 676 667 658 649 640 631 622 613 604 595 586 577 568 559 550 541 532 523 514 505 496 487 478 469 460 451 442 433 424 415 406 397 388 379 370 361 352 343 334 325 316 307 298 289 280 271 262 253 244 235 226 217 208 199 190 181 172 163 154 145 136 127 118 109 100 91 82 73 64 55 46 37 28 19 10 1\n"
            ],
            [
                "1 5\r\n",
                "1 1\n"
            ],
            [
                "2 5\r\n",
                "1 2\n"
            ],
            [
                "3 5\r\n",
                "1 3\n"
            ],
            [
                "4 5\r\n",
                "1 4\n"
            ],
            [
                "5 5\r\n",
                "1 5\n"
            ],
            [
                "15 5\r\n",
                "2 15 4\n"
            ],
            [
                "153 5\r\n",
                "14 148 137 126 115 104 93 82 71 60 49 38 27 16 5\n"
            ],
            [
                "1000 5\r\n",
                "91 995 984 973 962 951 940 929 918 907 896 885 874 863 852 841 830 819 808 797 786 775 764 753 742 731 720 709 698 687 676 665 654 643 632 621 610 599 588 577 566 555 544 533 522 511 500 489 478 467 456 445 434 423 412 401 390 379 368 357 346 335 324 313 302 291 280 269 258 247 236 225 214 203 192 181 170 159 148 137 126 115 104 93 82 71 60 49 38 27 16 5\n"
            ],
            [
                "3 1\r\n",
                "1 2\n"
            ],
            [
                "5 2\r\n",
                "1 3\n"
            ],
            [
                "1 4\r\n",
                "1 1\n"
            ],
            [
                "1 1\r\n",
                "1 1\n"
            ],
            [
                "1 6\r\n",
                "1 1\n"
            ],
            [
                "8 3\r\n",
                "2 8 1\n"
            ],
            [
                "1 2\r\n",
                "1 1\n"
            ],
            [
                "5 3\r\n",
                "1 2\n"
            ],
            [
                "7 3\r\n",
                "1 4\n"
            ],
            [
                "39 4\r\n",
                "5 39 30 21 12 3\n"
            ],
            [
                "4 2\r\n",
                "1 2\n"
            ],
            [
                "20 4\r\n",
                "3 20 11 2\n"
            ],
            [
                "6 4\r\n",
                "1 2\n"
            ],
            [
                "1 3\r\n",
                "1 1\n"
            ],
            [
                "1 0\r\n",
                "1 1\n"
            ],
            [
                "11 2\r\n",
                "3 11 6 1\n"
            ]
        ]
    }
]