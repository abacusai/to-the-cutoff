[
    {
        "name": "Polycarp's Pockets",
        "description": "Polycarp has \n    n\n coins, the value of the \n    i\n-th coin is \n    a_i\n.\nPolycarp wants to distribute all the coins between his pockets, but he cannot\nput two coins with the same value into the same pocket. For example, if\nPolycarp has got six coins represented as an array \n    a = [1, 2, 4, 3, 3,\n    2]\n, he can distribute the coins into two pockets as follows: \n    [1, 2, 3],\n    [2, 3, 4]\n. Polycarp wants to distribute all the coins with the minimum\nnumber of used pockets. Help him to do that. Input The first line of the input\ncontains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n) \u2014 the number of\ncoins. The second line of the input contains \n    n\n integers \n    a_1, a_2,\n    \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 100\n) \u2014 values of coins. Output Print\nonly one integer \u2014 the minimum number of pockets Polycarp needs to distribute\nall the coins so no two coins with the same value are put into the same\npocket. Examples Input 6 1 2 4 3 3 2 Output 2 Input 1 100 Output 1\n\n",
        "cf_contest_id": 1003,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1 2 4 3 3 2\r\n",
                "2\r\n"
            ],
            [
                "1\r\n100\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "100\r\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\r\n",
                "100\r\n"
            ],
            [
                "100\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "100\r\n"
            ],
            [
                "100\r\n59 47 39 47 47 71 47 28 58 47 35 79 58 47 38 47 47 47 47 27 47 43 29 95 47 49 46 71 47 74 79 47 47 32 45 67 47 47 30 37 47 47 16 67 22 76 47 86 84 10 5 47 47 47 47 47 1 51 47 54 47 8 47 47 9 47 47 47 47 28 47 47 26 47 47 47 47 47 47 92 47 47 77 47 47 24 45 47 10 47 47 89 47 27 47 89 47 67 24 71\r\n",
                "51\r\n"
            ],
            [
                "100\r\n45 99 10 27 16 85 39 38 17 32 15 23 67 48 50 97 42 70 62 30 44 81 64 73 34 22 46 5 83 52 58 60 33 74 47 88 18 61 78 53 25 95 94 31 3 75 1 57 20 54 59 9 68 7 77 43 21 87 86 24 4 80 11 49 2 72 36 84 71 8 65 55 79 100 41 14 35 89 66 69 93 37 56 82 90 91 51 19 26 92 6 96 13 98 12 28 76 40 63 29\r\n",
                "1\r\n"
            ],
            [
                "100\r\n45 29 5 2 6 50 22 36 14 15 9 48 46 20 8 37 7 47 12 50 21 38 18 27 33 19 40 10 5 49 38 42 34 37 27 30 35 24 10 3 40 49 41 3 4 44 13 25 28 31 46 36 23 1 1 23 7 22 35 26 21 16 48 42 32 8 11 16 34 11 39 32 47 28 43 41 39 4 14 19 26 45 13 18 15 25 2 44 17 29 17 33 43 6 12 30 9 20 31 24\r\n",
                "2\r\n"
            ],
            [
                "50\r\n7 7 3 3 7 4 5 6 4 3 7 5 6 4 5 4 4 5 6 7 7 7 4 5 5 5 3 7 6 3 4 6 3 6 4 4 5 4 6 6 3 5 6 3 5 3 3 7 7 6\r\n",
                "10\r\n"
            ],
            [
                "100\r\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 99 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\r\n",
                "99\r\n"
            ],
            [
                "7\r\n1 2 3 3 3 1 2\r\n",
                "3\r\n"
            ],
            [
                "5\r\n1 2 3 4 5\r\n",
                "1\r\n"
            ],
            [
                "7\r\n1 2 3 4 5 6 7\r\n",
                "1\r\n"
            ],
            [
                "8\r\n1 2 3 4 5 6 7 8\r\n",
                "1\r\n"
            ],
            [
                "9\r\n1 2 3 4 5 6 7 8 9\r\n",
                "1\r\n"
            ],
            [
                "10\r\n1 2 3 4 5 6 7 8 9 10\r\n",
                "1\r\n"
            ],
            [
                "3\r\n2 1 1\r\n",
                "2\r\n"
            ],
            [
                "11\r\n1 2 3 4 5 6 7 8 9 1 1\r\n",
                "3\r\n"
            ],
            [
                "12\r\n1 2 1 1 1 1 1 1 1 1 1 1\r\n",
                "11\r\n"
            ],
            [
                "13\r\n1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "13\r\n"
            ],
            [
                "14\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "14\r\n"
            ],
            [
                "15\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "15\r\n"
            ],
            [
                "16\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "16\r\n"
            ],
            [
                "3\r\n1 1 1\r\n",
                "3\r\n"
            ],
            [
                "3\r\n1 2 3\r\n",
                "1\r\n"
            ],
            [
                "10\r\n1 1 1 1 2 2 1 1 9 10\r\n",
                "6\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "2\r\n"
            ],
            [
                "56\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "56\r\n"
            ],
            [
                "99\r\n35 96 73 72 70 83 22 93 98 75 45 32 81 82 45 54 25 7 53 72 29 2 94 19 21 98 34 28 39 99 55 85 44 23 6 47 98 2 33 34 19 57 49 35 67 4 60 4 4 23 55 6 57 66 16 68 34 45 84 79 48 63 4 9 46 88 98 13 19 27 83 12 4 63 57 22 44 77 44 62 28 52 44 64 9 24 55 22 48 4 2 9 80 76 45 1 56 22 92\r\n",
                "6\r\n"
            ],
            [
                "10\r\n1 2 2 3 3 3 4 4 4 4\r\n",
                "4\r\n"
            ],
            [
                "99\r\n97 44 33 56 42 10 61 85 64 26 40 39 82 34 75 9 51 51 39 73 58 38 74 31 13 99 58 1 28 89 76 19 52 7 40 56 12 27 72 72 67 75 62 46 22 55 35 16 18 39 60 63 92 42 85 69 34 61 73 50 57 95 30 4 45 63 76 58 32 35 48 81 10 78 95 79 55 97 21 21 22 94 30 17 78 57 89 93 100 44 16 89 68 55 19 46 42 73 21\r\n",
                "3\r\n"
            ],
            [
                "5\r\n5 5 5 5 1\r\n",
                "4\r\n"
            ],
            [
                "6\r\n2 3 2 5 2 6\r\n",
                "3\r\n"
            ],
            [
                "3\r\n58 59 58\r\n",
                "2\r\n"
            ],
            [
                "9\r\n1 2 3 4 5 6 7 8 8\r\n",
                "2\r\n"
            ],
            [
                "97\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "97\r\n"
            ],
            [
                "3\r\n95 95 4\r\n",
                "2\r\n"
            ],
            [
                "3\r\n2 2 5\r\n",
                "2\r\n"
            ]
        ]
    }
]