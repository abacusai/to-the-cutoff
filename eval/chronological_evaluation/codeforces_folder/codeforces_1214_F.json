[
    {
        "name": "Employment",
        "description": "Two large companies \"Cecsi\" and \"Poca Pola\" are fighting against each other\nfor a long time. In order to overcome their competitor, \"Poca Pola\" started a\nsuper secret project, for which it has total \n    n\n vacancies in all of their\noffices. After many tests and interviews \n    n\n candidates were selected and\nthe only thing left was their employment. Because all candidates have the same\nskills, it doesn't matter where each of them will work. That is why the\ncompany decided to distribute candidates between workplaces so that the total\ndistance between home and workplace over all candidates is minimal. It is well\nknown that Earth is round, so it can be described as a circle, and all \n    m\n\ncities on Earth can be described as points on this circle. All cities are\nenumerated from \n    1\n to \n    m\n so that for each \n    i\n (\n    1 \n    \u2264 i\n    \n    \u2264 m - 1\n) cities with indexes \n    i\n and \n    i + 1\n are neighbors and\ncities with indexes \n    1\n and \n    m\n are neighbors as well. People can move\nonly along the circle. The distance between any two cities equals to minimal\nnumber of transitions between neighboring cities you have to perform to get\nfrom one city to another. In particular, the distance between the city and\nitself equals \n    0\n. The \"Poca Pola\" vacancies are located at offices in\ncities \n    a_1, a_2, \n    \u2026, a_n\n. The candidates live in cities \n    b_1,\n    b_2, \n    \u2026, b_n\n. It is possible that some vacancies are located in the\nsame cities and some candidates live in the same cities. The \"Poca Pola\"\nmanagers are too busy with super secret project, so you were asked to help\n\"Poca Pola\" to distribute candidates between workplaces, so that the sum of\nthe distance between home and workplace over all candidates is minimum\npossible. Input The first line contains two integers \n    m\n and \n    n\n (\n    1\n    \n    \u2264 m \n    \u2264 10^9\n, \n    1 \n    \u2264 n \n    \u2264 200\n     000\n) \u2014 the number of\ncities on Earth and the number of vacancies. The second line contains \n    n\n\nintegers \n    a_1, a_2, a_3, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 m\n) \u2014 the\ncities where vacancies are located. The third line contains \n    n\n integers\n\n    b_1, b_2, b_3, \n    \u2026, b_n\n (\n    1 \n    \u2264 b_i \n    \u2264 m\n) \u2014 the cities\nwhere the candidates live. Output The first line should contain the minimum\ntotal distance between home and workplace over all candidates. The second line\nshould contain \n    n\n different integers from \n    1\n to \n    n\n. The\n\n    i\n-th of them should be the index of candidate that should work at\n\n    i\n-th workplace. Examples Input 10 3 1 5 5 10 4 6 Output 3 1 2 3 Input 10\n3 1 4 8 8 3 6 Output 4 2 3 1 Note In the first example, the distance between\neach candidate and his workplace equals to \n    1\n (from \n    1\n to \n    10\n,\nfrom \n    4\n to \n    5\n and from \n    6\n to \n    5\n). In the second example:\nThe second candidate works at first workplace, the distance between cities\n\n    3\n and \n    1\n equals to \n    2\n. The third candidate works at second\nworkplace, the distance between cities \n    6\n and \n    4\n equals to \n    2\n.\nThe first candidate works at third workplace, the distance between cities\n\n    8\n and \n    8\n equals to \n    0\n.\n\n",
        "cf_contest_id": 1214,
        "cf_index": "F",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "10 3\r\n1 5 5\r\n10 4 6\r\n",
                "3\r\n1 2 3 "
            ],
            [
                "10 3\r\n1 4 8\r\n8 3 6\r\n",
                "4\r\n2 3 1 "
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n1\r\n",
                "0\r\n1 "
            ],
            [
                "1000000000 10\r\n442563005 340856122 976401485 384819624 276461577 596575002 761915448 610658126 805104914 265406505\r\n952332071 564042045 267524644 699393024 887146753 665314425 58009995 639179665 907097342 449702701\r\n",
                "1102348979\r\n2 3 9 10 7 8 4 6 5 1 "
            ],
            [
                "999999999 10\r\n433909917 930573834 609974788 810203302 972827026 992731322 612088589 660485878 825750454 588716318\r\n94635967 838248415 372083876 839747635 808387054 606496343 586984342 789304949 486278842 697830816\r\n",
                "595762354\r\n3 2 7 8 4 1 6 10 5 9 "
            ],
            [
                "1000000000 10\r\n776725965 776725965 776725965 776725965 776725965 776725965 776725965 776725965 776725965 776725965\r\n276725965 276725965 276725965 276725965 276725965 276725965 276725965 276725965 276725965 276725965\r\n",
                "5000000000\r\n1 2 3 4 5 6 7 8 9 10 "
            ],
            [
                "1000000000 10\r\n929670249 929670513 929670442 929669467 929669308 929670509 929670526 929669734 929669377 929669379\r\n429669334 429669765 429670690 429670355 429669444 429669945 429669879 429669747 429670622 429670742\r\n",
                "4999990841\r\n1 2 5 3 6 8 7 10 4 9 "
            ],
            [
                "999999999 10\r\n755392992 755393158 755393745 755393457 755393456 755393484 755393728 755393755 755393384 755393448\r\n270490754 270490556 270490653 270490606 270490612 270490798 270490682 270490741 270490605 270490656\r\n",
                "4849027944\r\n2 9 1 10 3 7 8 6 4 5 "
            ],
            [
                "1000000000 10\r\n114185534 712085064 884225787 114185537 884225769 712085077 712085079 712085082 114185536 712085071\r\n262635359 172101772 262635362 233477323 233477314 233477287 172101719 262635367 262635357 262635361\r\n",
                "3180875819\r\n6 9 2 4 7 10 3 8 5 1 "
            ],
            [
                "1000000000 10\r\n675942275 407986991 407986991 675942275 675942275 397032216 826309090 826309090 42492790 42492790\r\n407986991 675942275 42492790 407986991 42492790 397032216 42492790 397032216 397032216 826309090\r\n",
                "774003818\r\n1 8 9 4 2 6 10 3 5 7 "
            ],
            [
                "999999999 10\r\n778667984 135179916 135192646 563110503 153625822 563158283 778647083 778675818 562770450 135206724\r\n316162391 316194600 595750166 560755012 316166438 316245914 12881210 595360021 595472381 595506688\r\n",
                "1372406893\r\n3 1 5 8 6 9 10 7 4 2 "
            ],
            [
                "1000000000 10\r\n155947442 750468947 750468940 155947430 155947432 277497171 750468943 155947413 750468922 155947396\r\n277497203 277497232 750468931 666554554 277497194 277497195 750468928 155947395 666554573 277497240\r\n",
                "654027943\r\n2 3 9 6 1 10 7 5 4 8 "
            ],
            [
                "1000000000 10\r\n556395003 556395003 556395003 556395003 556395003 556395003 556395003 556395003 556395003 556395003\r\n545614959 545614959 545614959 545614959 545614959 545614959 545614959 545614959 545614959 545614959\r\n",
                "107800440\r\n1 2 3 4 5 6 7 8 9 10 "
            ],
            [
                "1000000000 10\r\n387030020 387034917 387020122 387030887 387021480 387030335 387021902 387034157 387022215 387032654\r\n5722833 987067865 357213201 820865677 989160158 681496670 55456145 665538324 452097470 133219289\r\n",
                "2866172109\r\n10 4 2 9 5 3 1 6 7 8 "
            ],
            [
                "1000000000 10\r\n410070578 742117238 69192610 738299161 364828402 728457328 652154997 482123530 318146105 993087171\r\n804122778 804122701 804122680 804122658 804122743 804122764 804122723 804122683 804122758 804122817\r\n",
                "2450818557\r\n8 6 10 9 3 5 7 2 4 1 "
            ],
            [
                "999999999 10\r\n807434053 807434054 807434055 807434056 807434057 807434058 807434059 807434060 807434061 807434062\r\n510376463 510376464 510376465 510376466 510376467 510376468 510376469 510376470 510376471 510376472\r\n",
                "2970575900\r\n1 2 3 4 5 6 7 8 9 10 "
            ],
            [
                "1000000000 10\r\n966993300 966993642 966994225 966993367 966992648 966992652 966993002 966992754 966992595 966993697\r\n632632154 632632155 632632156 632632157 632632158 632632159 632632160 632632161 632632162 632632163\r\n",
                "3343610297\r\n6 8 10 7 2 3 5 4 1 9 "
            ],
            [
                "1000000000 10\r\n860608072 991155640 981407918 898368953 747406378 977733384 950681368 910113196 986974478 905079119\r\n345146374 443544770 404992411 455881647 456971721 473860750 445766290 391680626 450822517 274335932\r\n",
                "4010020118\r\n9 2 8 4 7 1 10 6 3 5 "
            ],
            [
                "999999999 10\r\n608212197 820428659 820428659 820428659 820428659 520714358 820428659 520714358 608212197 820428659\r\n147222994 638346987 638346987 147222994 638346987 147222994 638346987 147222994 441829482 638346987\r\n",
                "1928127765\r\n3 7 10 1 4 9 6 2 5 8 "
            ],
            [
                "999999999 10\r\n718206725 718206724 718206721 718206726 718206724 718206724 718206725 718206725 718206722 718206725\r\n218206722 218206722 218206722 218206725 218206723 218206724 218206724 218206721 218206721 218206722\r\n",
                "4999999965\r\n2 8 7 6 9 1 3 10 4 5 "
            ],
            [
                "1000000000 10\r\n380814984 380814985 380814986 380814987 380814988 380814989 380814990 380814991 380814992 380814993\r\n784342008 784342004 784342019 784342000 784342013 784342001 784342002 784342002 784342017 784342004\r\n",
                "4035270185\r\n4 6 7 8 2 10 1 5 9 3 "
            ],
            [
                "10 100\r\n7 4 8 10 4 4 4 9 4 8 5 5 3 5 2 2 6 5 1 3 6 10 8 3 1 7 6 8 7 8 4 8 9 2 7 2 9 2 8 10 4 7 5 9 7 3 1 9 9 9 4 6 10 4 8 7 8 1 8 8 8 7 1 8 10 7 4 2 1 8 4 9 9 2 2 10 3 1 10 4 7 5 10 6 1 10 10 4 6 6 9 10 7 3 9 5 1 7 2 1\r\n7 8 4 6 9 10 7 2 4 1 2 1 2 7 6 6 4 6 6 10 5 2 7 8 5 8 1 4 1 7 6 2 9 7 7 7 3 5 8 6 2 6 7 10 6 6 9 9 6 6 4 3 8 7 3 1 7 9 7 1 10 10 2 10 8 10 5 3 8 5 5 8 10 1 7 10 9 8 6 10 7 3 4 6 6 9 10 9 9 4 10 6 7 10 2 2 5 4 1 6\r\n",
                "28\r\n84 9 43 6 17 28 51 72 83 54 97 4 37 15 8 11 40 16 91 52 42 20 57 55 94 85 45 59 92 75 90 81 78 13 100 22 5 32 93 44 98 1 18 33 7 68 10 47 48 58 21 46 61 25 2 14 24 12 26 39 53 23 27 65 62 30 38 41 29 69 67 77 86 63 95 64 82 56 66 70 34 19 73 49 60 76 80 71 50 79 88 87 35 3 89 31 74 36 96 99 "
            ],
            [
                "10 100\r\n6 2 6 2 2 6 2 2 2 6 6 6 6 6 2 2 6 2 6 6 2 6 6 6 6 2 6 2 6 2 2 2 2 6 6 6 6 2 2 2 6 6 2 2 2 2 6 2 2 2 2 2 2 2 6 2 2 2 2 6 6 2 2 6 2 2 6 2 2 6 6 2 6 6 2 2 2 2 2 6 6 2 2 6 2 2 6 2 2 2 6 2 6 2 6 6 2 2 6 6\r\n5 5 6 6 3 6 6 6 6 5 4 4 4 5 4 5 5 3 5 3 5 6 3 5 6 4 5 5 6 3 6 5 5 3 6 6 5 6 6 5 5 6 5 6 4 4 4 5 3 6 4 4 5 5 4 6 5 6 5 3 3 5 6 5 3 4 5 4 5 3 6 3 6 6 4 6 3 5 4 4 6 6 5 5 3 3 4 5 6 5 4 5 5 3 3 5 6 5 6 4\r\n",
                "132\r\n59 5 62 18 20 64 23 30 34 67 69 78 83 84 49 60 88 61 90 92 65 93 96 98 3 70 4 72 6 77 85 86 94 7 8 9 22 95 11 12 25 29 13 15 26 45 31 46 47 51 52 55 66 68 35 75 79 80 87 36 38 91 100 39 1 2 42 10 14 44 50 16 56 58 17 19 21 24 27 63 71 28 32 73 33 37 74 40 41 43 76 48 81 53 82 89 54 57 97 99 "
            ],
            [
                "10 20\r\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 5\r\n10 10 10 10 10 4 4 4 4 4 4 4 4 4 4 4 5 4 4 4\r\n",
                "38\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 20 17 "
            ]
        ]
    }
]