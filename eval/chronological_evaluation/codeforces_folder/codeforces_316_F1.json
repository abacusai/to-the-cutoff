[
    {
        "name": "Suns and Rays",
        "description": "Smart Beaver became interested in drawing. He draws suns. However, at some\npoint, Smart Beaver realized that simply drawing suns is boring. So he decided\nto design a program that will process his drawings. You are given a picture\ndrawn by the beaver. It will have two colors: one for the background and one\nfor the suns in the image. Your task will be to count the number of suns in\nthe image and for each of them to count the number of rays. Sun is arbitrarily\nrotated ellipse with rays. Ray is a segment which connects point on boundary\nof the ellipse with some point outside ellipse. An image where all suns are\ncircles. An image where all suns are ellipses, their axes are parallel to the\ncoordinate axes. An image where all suns are rotated ellipses. It is\nguaranteed that: No two suns have common points. The rays\u2019 width is 3 pixels.\nThe lengths of the ellipsis suns\u2019 axes will lie between 40 and 200 pixels. No\ntwo rays intersect. The lengths of all rays will lie between 10 and 30 pixels.\nInput The first line contains two integers h and w \u2014 the height and width of\nthe image (1 \u2264 h, w \u2264 1600). Next h lines will contain w space-separated\nintegers each. They describe Smart Beaver\u2019s picture. Each number equals either\na 0 (the image background), or a 1 (the sun color). The input limits for\nscoring 30 points are (subproblem F1): All suns on the image are circles. The\ninput limits for scoring 70 points are (subproblems F1+F2): All suns on the\nimage are ellipses with axes parallel to the coordinate axes. The input limits\nfor scoring 100 points are (subproblems F1+F2+F3): All suns on the image are\nellipses, they can be arbitrarily rotated. Output The first line must contain\na single number k \u2014 the number of suns on the beaver\u2019s image. The second line\nmust contain exactly k space-separated integers, corresponding to the number\nof rays on each sun. The numbers of the second line must be sorted in the\nincreasing order. Examples Note For each complexity level you are suggested a\nsample in the initial data. You can download the samples at\nhttp://www.abbyy.ru/sun.zip.\n\n",
        "cf_contest_id": 316,
        "cf_index": "F1",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "implementation"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]