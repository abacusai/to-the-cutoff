[
    {
        "name": "Dima and Horses",
        "description": "Dima came to the horse land. There are n horses living in the land. Each horse\nin the horse land has several enemies (enmity is a symmetric relationship).\nThe horse land isn't very hostile, so the number of enemies of each horse is\nat most 3. Right now the horse land is going through an election campaign. So\nthe horses trusted Dima to split them into two parts. At that the horses want\nthe following condition to hold: a horse shouldn't have more than one enemy in\nits party. Help Dima split the horses into parties. Note that one of the\nparties can turn out to be empty. Input The first line contains two integers\nn, m \u2014 the number of horses in the horse land and the number of enemy pairs.\nNext m lines define the enemy pairs. The i-th line contains integers ai, bi (1\n\u2264 ai, bi \u2264 n; ai \u2260 bi), which mean that horse ai is the enemy of horse bi.\nConsider the horses indexed in some way from 1 to n. It is guaranteed that\neach horse has at most three enemies. No pair of enemies occurs more than once\nin the input. Output Print a line, consisting of n characters: the i-th\ncharacter of the line must equal \"0\", if the horse number i needs to go to the\nfirst party, otherwise this character should equal \"1\". If there isn't a way\nto divide the horses as required, print -1. Examples Input 3 3 1 2 3 2 3 1\nOutput 100 Input 2 1 2 1 Output 00 Input 10 6 1 2 1 3 1 4 2 3 2 4 3 4 Output\n0110000000\n\n",
        "cf_contest_id": 272,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "constructive algorithms",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n1 2\r\n3 2\r\n3 1\r\n",
                "100\r\n"
            ],
            [
                "2 1\r\n2 1\r\n",
                "00\r\n"
            ],
            [
                "10 6\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n3 4\r\n",
                "1100000000\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 0\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n",
                "1010\r\n"
            ],
            [
                "10 6\r\n9 1\r\n3 7\r\n1 6\r\n8 6\r\n5 7\r\n9 7\r\n",
                "1000001000\r\n"
            ],
            [
                "10 11\r\n7 1\r\n3 9\r\n9 4\r\n1 4\r\n7 3\r\n2 5\r\n9 5\r\n3 1\r\n5 8\r\n10 6\r\n7 6\r\n",
                "1010110000\r\n"
            ],
            [
                "10 4\r\n5 1\r\n1 8\r\n10 2\r\n6 2\r\n",
                "1100000000\r\n"
            ],
            [
                "10 3\r\n9 3\r\n1 5\r\n1 9\r\n",
                "1000000000\r\n"
            ],
            [
                "10 9\r\n6 3\r\n1 5\r\n1 9\r\n3 5\r\n1 7\r\n7 5\r\n2 7\r\n2 9\r\n6 10\r\n",
                "1110000000\r\n"
            ],
            [
                "10 4\r\n3 1\r\n5 1\r\n9 3\r\n4 5\r\n",
                "1000000000\r\n"
            ],
            [
                "10 11\r\n7 1\r\n7 6\r\n9 3\r\n9 1\r\n3 1\r\n8 9\r\n2 4\r\n3 6\r\n8 6\r\n8 7\r\n4 5\r\n",
                "1001010100\r\n"
            ],
            [
                "10 9\r\n5 9\r\n8 6\r\n1 3\r\n1 2\r\n8 1\r\n9 7\r\n6 7\r\n8 10\r\n3 5\r\n",
                "1000110000\r\n"
            ],
            [
                "10 12\r\n1 4\r\n2 6\r\n3 6\r\n9 7\r\n5 9\r\n2 4\r\n6 1\r\n3 4\r\n9 1\r\n7 10\r\n5 7\r\n10 5\r\n",
                "1110101000\r\n"
            ],
            [
                "10 10\r\n9 6\r\n3 7\r\n7 8\r\n1 3\r\n6 1\r\n3 9\r\n9 10\r\n1 5\r\n7 10\r\n4 6\r\n",
                "1000001010\r\n"
            ],
            [
                "10 12\r\n10 1\r\n3 8\r\n9 1\r\n6 9\r\n7 1\r\n3 5\r\n10 7\r\n7 3\r\n8 5\r\n5 9\r\n10 4\r\n8 6\r\n",
                "1010110001\r\n"
            ],
            [
                "10 13\r\n3 5\r\n10 9\r\n10 3\r\n9 5\r\n8 7\r\n2 1\r\n6 3\r\n5 6\r\n6 4\r\n4 9\r\n7 2\r\n7 1\r\n8 4\r\n",
                "1011101000\r\n"
            ],
            [
                "10 10\r\n6 3\r\n7 9\r\n1 7\r\n8 3\r\n5 9\r\n10 7\r\n3 1\r\n6 9\r\n10 1\r\n8 4\r\n",
                "1010000010\r\n"
            ],
            [
                "10 14\r\n3 1\r\n9 1\r\n3 7\r\n1 6\r\n9 6\r\n5 8\r\n5 7\r\n4 10\r\n8 4\r\n9 5\r\n7 4\r\n2 3\r\n6 10\r\n8 10\r\n",
                "0011110000\r\n"
            ],
            [
                "10 14\r\n6 5\r\n10 7\r\n1 9\r\n3 5\r\n1 5\r\n6 4\r\n3 6\r\n1 2\r\n8 9\r\n7 9\r\n4 3\r\n7 4\r\n10 2\r\n8 10\r\n",
                "1010011100\r\n"
            ],
            [
                "10 11\r\n3 7\r\n7 5\r\n8 7\r\n5 6\r\n1 6\r\n5 2\r\n6 9\r\n1 3\r\n9 1\r\n9 10\r\n3 10\r\n",
                "0010100010\r\n"
            ],
            [
                "10 14\r\n3 7\r\n4 2\r\n1 5\r\n1 6\r\n10 7\r\n7 5\r\n6 5\r\n9 3\r\n3 6\r\n1 10\r\n9 2\r\n9 10\r\n2 8\r\n4 8\r\n",
                "0110100001\r\n"
            ],
            [
                "1 0\r\n",
                "0\r\n"
            ]
        ]
    }
]