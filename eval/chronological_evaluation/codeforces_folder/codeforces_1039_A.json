[
    {
        "name": "Timetable",
        "description": "There are two bus stops denoted A and B, and there \n    n\n buses that go from\nA to B every day. The shortest path from A to B takes \n    t\n units of time\nbut some buses might take longer paths. Moreover, buses are allowed to\novertake each other during the route. At each station one can find a sorted\nlist of moments of time when a bus is at this station. We denote this list as\n\n    a_1 < a_2 < \n    \u2026 < a_n\n for stop A and as \n    b_1 < b_2 < \n    \u2026 <\n    b_n\n for stop B. The buses always depart from A and arrive to B according to\nthe timetable, but the order in which the buses arrive may differ. Let's call\nan order of arrivals valid if each bus arrives at least \n    t\n units of time\nlater than departs. It is known that for an order to be valid the latest\npossible arrival for the bus that departs at \n    a_i\n is \n    b_x_i\n, i.e.\n\n    x_i\n-th in the timetable. In other words, for each \n    i\n there exists\nsuch a valid order of arrivals that the bus departed \n    i\n-th arrives\n\n    x_i\n-th (and all other buses can arrive arbitrary), but there is no valid\norder of arrivals in which the \n    i\n-th departed bus arrives \n    (x_i +\n    1)\n-th. Formally, let's call a permutation \n    p_1, p_2, \n    \u2026, p_n\n\nvalid, if \n    b_p_i\n    \u2265 a_i + t\n for all \n    i\n. Then \n    x_i\n is the\nmaximum value of \n    p_i\n among all valid permutations. You are given the\nsequences \n    a_1, a_2, \n    \u2026, a_n\n and \n    x_1, x_2, \n    \u2026, x_n\n, but\nnot the arrival timetable. Find out any suitable timetable for stop B \n    b_1,\n    b_2, \n    \u2026, b_n\n or determine that there is no such timetable. Input The\nfirst line of the input contains two integers \n    n\n and \n    t\n (\n    1 \n    \u2264\n    n \n    \u2264 200\n     000\n, \n    1 \n    \u2264 t \n    \u2264 10^18\n) \u2014 the number of buses\nin timetable for and the minimum possible travel time from stop A to stop B.\nThe second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1\n    \n    \u2264 a_1 < a_2 < \n    \u2026 < a_n \n    \u2264 10^18\n), defining the moments of\ntime when the buses leave stop A. The third line contains \n    n\n integers\n\n    x_1, x_2, \n    \u2026, x_n\n (\n    1 \n    \u2264 x_i \n    \u2264 n\n), the \n    i\n-th of\nthem stands for the maximum possible timetable position, at which the\n\n    i\n-th bus leaving stop A can arrive at stop B. Output If a solution\nexists, print \"Yes\" (without quotes) in the first line of the output. In the\nsecond line print \n    n\n integers \n    b_1, b_2, \n    \u2026, b_n\n (\n    1 \n    \u2264\n    b_1 < b_2 < \n    \u2026 < b_n \n    \u2264 3 \n    \u00b7 10^18\n). We can show that if\nthere exists any solution, there exists a solution that satisfies such\nconstraints on \n    b_i\n. If there are multiple valid answers you can print\nany of them. If there is no valid timetable, print \"No\" (without quotes) in\nthe only line of the output. Examples Input 3 10 4 6 8 2 2 3 Output Yes 16 17\n21 Input 2 1 1 2 2 1 Output No Note Consider the first example and the\ntimetable \n    b_1, b_2, \n    \u2026, b_n\n from the output. To get \n    x_1 = 2\n\nthe buses can arrive in the order \n    (2, 1, 3)\n. To get \n    x_2 = 2\n and\n\n    x_3 = 3\n the buses can arrive in the order \n    (1, 2, 3)\n. \n    x_1\n is\nnot \n    3\n, because the permutations \n    (3, 1, 2)\n and \n    (3, 2, 1)\n (all\nin which the \n    1\n-st bus arrives \n    3\n-rd) are not valid (sube buses\narrive too early), \n    x_2\n is not \n    3\n because of similar reasons.\n\n",
        "cf_contest_id": 1039,
        "cf_index": "A",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 10\r\n4 6 8\r\n2 2 3\r\n",
                "Yes\r\n16 17 1000018 "
            ],
            [
                "2 1\r\n1 2\r\n2 1\r\n",
                "No"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n4 5\r\n1 2\r\n",
                "Yes\r\n6 1000007 "
            ],
            [
                "2 10\r\n4 5\r\n2 2\r\n",
                "Yes\r\n15 1000015 "
            ],
            [
                "2 1000000000\r\n99999999 1000000000\r\n1 1\r\n",
                "No"
            ],
            [
                "2 1000000000\r\n999999999 1000000000\r\n1 2\r\n",
                "Yes\r\n1999999999 2001000000 "
            ],
            [
                "2 1000000000\r\n1 1000000000\r\n2 2\r\n",
                "Yes\r\n2000000000 2001000000 "
            ]
        ]
    }
]