[
    {
        "name": "AquaMoon and Wrong Coordinate",
        "description": "Cirno gives AquaMoon a problem. There are \n    m\n people numbered from \n    0\n\nto \n    m - 1\n. They are standing on a coordinate axis in points with positive\ninteger coordinates. They are facing right (i.e. in the direction of the\ncoordinate increase). At this moment everyone will start running with the\nconstant speed in the direction of coordinate increasing. The initial\ncoordinate of the \n    i\n-th person on the line is \n    x_i\n, and the speed of\nthe \n    i\n-th person is \n    v_i\n. So the coordinate of the \n    i\n-th person\nat the moment \n    t\n will be \n    x_i + t \n    \u00b7 v_i\n. Cirno captured the\ncoordinates of \n    m\n people in \n    k\n consecutive integer moments from\n\n    0\n to \n    k - 1\n. In every moment, the coordinates of \n    m\n people\nwere recorded in arbitrary order. To make the problem more funny, Cirno\nmodified one coordinate at the moment \n    y\n (\n    0 < y < k-1\n) to a\ndifferent integer. AquaMoon wants to find the moment \n    y\n and the original\ncoordinate \n    p\n before the modification. Actually, she is not a programmer\nat all. So she wasn't able to solve it. Can you help her? Input This problem\nis made as interactive. It means, that your solution will read the input,\ngiven by the interactor. But the interactor will give you the full input at\nthe beginning and after that, you should print the answer. So you should solve\nthe problem, like as you solve the usual, non-interactive problem because you\nwon't have any interaction process. The only thing you should not forget is to\nflush the output buffer, after printing the answer. Otherwise, you can get an\n\"Idleness limit exceeded\" verdict. Refer to the interactive problems guide for\nthe detailed information about flushing the output buffer. The first line\ncontains two integers \n    m\n and \n    k\n (\n    5 \n    \u2264 m \n    \u2264 1000\n, \n    7\n    \n    \u2264 k \n    \u2264 1000\n) \u2014 the number of people and the number of recorded\nmoments. The next \n    k\n lines contain captured positions. \n    i\n-th of\nthese lines contains \n    m\n integers between \n    1\n and \n    10^6\n\n(inclusive), representing positions captured by Cirno at the moment \n    i-1\n.\nThe input is guaranteed to be valid (i.e. only one integer was modified to a\ndifferent value according to the problem statement). Also, it is guaranteed,\nthat \n    1 \n    \u2264 v_i \n    \u2264 1000\n for all \n    1 \n    \u2264 i \n    \u2264 m\n. Hack\nformat: The first line should contain two integers \n    m\n and \n    k\n (\n    5\n    \n    \u2264 m \n    \u2264 1000\n, \n    7 \n    \u2264 k \n    \u2264 1000\n) \u2014 the number of people\nand the number of moments. In the second line, there should be \n    m\n\nintegers \n    x_0, x_1, \n    \u2026,x_m - 1\n (\n    1 \n    \u2264 x_i \n    \u2264 10^6\n),\nwhere \n    x_i\n is the initial coordinate of the \n    i\n-th person. In the\nthird line, there should be \n    m\n integers \n    v_0, v_1, \n    \u2026,v_m - 1\n\n(\n    1 \n    \u2264 v_i \n    \u2264 1000\n), where \n    v_i\n is the speed of the \n    i\n-th\nperson. It should be true that \n    x_i + (k-1) v_i \n    \u2264 10^6\n for each \n    0\n    \n    \u2264 i < m\n. In the next \n    k\n lines, each line should contain \n    m\n\nintegers. \n    i\n-th line should contain \n    m\n distinct integers \n    p_0,\n    p_1, \n    \u2026, p_m-1\n (\n    0 \n    \u2264 p_j < m\n). The meaning of these\nnumbers: \n    j\n-th integer in the input in the \n    i\n-th moment is the\ncoordinate of the \n    p_j\n-th person. In the last line, there should be\nthree integers \n    y\n, \n    i\n, \n    c\n. Cirno modified the coordinate of the\n\n    i\n-th person at the moment \n    y\n to \n    c\n (\n    1 \n    \u2264 y \n    \u2264\n    k-2\n, \n    0 \n    \u2264 i \n    \u2264 m - 1\n, \n    1 \n    \u2264 c \n    \u2264 10^6\n, \n    c\n    \n    \u2260 x_i + y \n    \u00b7 v_i\n). Output Print a single line with two integers\n\n    y\n, \n    p\n \u2014 the moment that contains the modified coordinate and the\noriginal coordinate. Example Input 5 7 6 9 9 6 9 10 7 10 8 10 11 11 11 10 8 12\n12 12 12 9 14 13 12 10 13 11 14 16 14 14 12 15 18 15 15 Output 4 13 Note In\nthe first test the initial coordinates of people are \n    9\n, \n    6\n,\n\n    6\n, \n    9\n, \n    9\n and their speeds are \n    1\n, \n    2\n, \n    1\n,\n\n    1\n, \n    1\n. So, it's easy to see, that at the moment \n    4\n one\ncoordinate was modified from \n    13\n to \n    12\n. This is the first test in\nthe hack format: 5 7 9 6 6 9 9 1 2 1 1 1 2 3 4 1 0 0 2 3 1 4 4 3 0 1 2 1 3 4 0\n2 1 4 0 2 3 2 4 1 3 0 2 4 1 3 0 4 0 12\n\n",
        "cf_contest_id": 1545,
        "cf_index": "D",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "interactive",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 7\r\n9 6 6 9 9\r\n1 2 1 1 1\r\n2 3 4 1 0\r\n0 2 3 1 4\r\n4 3 0 1 2\r\n1 3 4 0 2\r\n1 4 0 2 3\r\n2 4 1 3 0\r\n2 4 1 3 0\r\n4 0 12\r\n",
                "4 13\r\n"
            ]
        ],
        "private_cases": []
    }
]