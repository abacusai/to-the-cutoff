[
    {
        "name": "Island Puzzle",
        "description": "A remote island chain contains n islands, with some bidirectional bridges\nbetween them. The current bridge network forms a tree. In other words, a total\nof n - 1 bridges connect pairs of islands in a way that it's possible to reach\nany island from any other island using the bridge network. The center of each\nisland contains an identical pedestal, and all but one of the islands has a\nfragile, uniquely colored statue currently held on the pedestal. The remaining\nisland holds only an empty pedestal. The islanders want to rearrange the\nstatues in a new order. To do this, they repeat the following process: first,\nthey choose an island directly adjacent to the island containing an empty\npedestal. Then, they painstakingly carry the statue on this island across the\nadjoining bridge and place it on the empty pedestal. It is often impossible to\nrearrange statues in the desired order using only the operation described\nabove. The islanders would like to build one additional bridge in order to\nmake this achievable in the fewest number of movements possible. Find the\nbridge to construct and the minimum number of statue movements necessary to\narrange the statues in the desired position. Input The first line contains a\nsingle integer n (2 \u2264 n \u2264 200 000) \u2014 the total number of islands. The second\nline contains n space-separated integers ai (0 \u2264 ai \u2264 n - 1) \u2014 the statue\ncurrently located on the i-th island. If ai = 0, then the island has no\nstatue. It is guaranteed that the ai are distinct. The third line contains n\nspace-separated integers bi (0 \u2264 bi \u2264 n - 1) \u2014 the desired statues of the i-th\nisland. Once again, bi = 0 indicates the island desires no statue. It is\nguaranteed that the bi are distinct. The next n - 1 lines each contain two\ndistinct space-separated integers ui and vi (1 \u2264 ui, vi \u2264 n) \u2014 the endpoints\nof the i-th bridge. Bridges form a tree, and it is guaranteed that no bridge\nis listed twice in the input. Output Print a single line of integers: If the\nrearrangement can be done in the existing network, output 0 t, where t is the\nnumber of moves necessary to perform the rearrangement. Otherwise, print u, v,\nand t (1 \u2264 u < v \u2264 n) \u2014 the two endpoints of the new bridge, and the minimum\nnumber of statue movements needed to perform the rearrangement. If the\nrearrangement cannot be done no matter how the new bridge is built, print a\nsingle line containing - 1. Examples Input 3 1 0 2 2 0 1 1 2 2 3 Output 1 3 3\nInput 2 1 0 0 1 1 2 Output 0 1 Input 4 0 1 2 3 0 2 3 1 1 2 1 3 1 4 Output -1\nNote In the first sample, the islanders can build a bridge connecting islands\n1 and 3 and then make the following sequence of moves: first move statue 1\nfrom island 1 to island 2, then move statue 2 from island 3 to island 1, and\nfinally move statue 1 from island 2 to island 3 for a total of 3 moves. In the\nsecond sample, the islanders can simply move statue 1 from island 1 to island\n2. No new bridges need to be built and only 1 move needs to be made. In the\nthird sample, no added bridge and subsequent movements result in the desired\nposition.\n\n",
        "cf_contest_id": 627,
        "cf_index": "F",
        "cf_rating": 3400,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 0 2\r\n2 0 1\r\n1 2\r\n2 3\r\n",
                "1 3 3\r\n"
            ],
            [
                "2\r\n1 0\r\n0 1\r\n1 2\r\n",
                "0 1\r\n"
            ],
            [
                "4\r\n0 1 2 3\r\n0 2 3 1\r\n1 2\r\n1 3\r\n1 4\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "12\r\n0 1 2 3 4 5 6 7 8 9 10 11\r\n1 2 9 8 6 4 5 10 3 7 0 11\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n4 6\r\n6 7\r\n3 8\r\n8 9\r\n9 10\r\n8 11\r\n11 12\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n3 6 0 5 4 7 1 8 9 2\r\n1 6 9 4 0 7 2 5 8 3\r\n8 9\r\n6 1\r\n1 10\r\n4 5\r\n4 8\r\n3 9\r\n5 2\r\n1 8\r\n7 10\r\n",
                "7 8 8\r\n"
            ],
            [
                "10\r\n3 2 8 4 6 5 7 9 0 1\r\n2 9 8 4 6 5 1 0 7 3\r\n1 3\r\n10 4\r\n7 9\r\n10 7\r\n1 10\r\n1 2\r\n2 8\r\n10 6\r\n1 5\r\n",
                "0 5\r\n"
            ],
            [
                "10\r\n2 7 4 6 0 3 9 1 8 5\r\n2 7 4 6 5 3 9 0 8 1\r\n10 5\r\n8 4\r\n1 10\r\n8 10\r\n10 9\r\n2 7\r\n2 1\r\n10 6\r\n3 1\r\n",
                "0 2\r\n"
            ],
            [
                "10\r\n1 4 9 8 5 6 7 3 2 0\r\n1 4 2 8 9 6 7 3 5 0\r\n1 10\r\n2 3\r\n10 5\r\n4 8\r\n3 6\r\n7 2\r\n5 4\r\n9 5\r\n3 10\r\n",
                "3 9 4\r\n"
            ],
            [
                "10\r\n0 2 6 9 1 8 4 5 3 7\r\n6 3 0 9 1 8 4 5 2 7\r\n7 9\r\n9 4\r\n2 3\r\n6 7\r\n9 3\r\n8 5\r\n1 3\r\n9 10\r\n8 2\r\n",
                "2 9 4\r\n"
            ],
            [
                "10\r\n3 8 6 0 1 2 5 9 4 7\r\n4 1 5 7 9 3 8 0 6 2\r\n1 8\r\n3 4\r\n8 7\r\n10 1\r\n9 3\r\n1 5\r\n6 1\r\n3 1\r\n9 2\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n8 0 4 5 6 2 1 7 9 3\r\n7 6 2 9 4 3 5 1 0 8\r\n3 10\r\n1 9\r\n1 10\r\n5 8\r\n7 8\r\n2 4\r\n2 1\r\n1 6\r\n8 1\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n0 9 4 5 7 2 1 6 3 8\r\n7 0 9 8 3 4 1 2 6 5\r\n4 1\r\n1 7\r\n2 1\r\n1 8\r\n7 9\r\n10 8\r\n1 3\r\n8 6\r\n1 5\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n4 1 9 7 0 2 6 3 5 8\r\n6 4 2 9 1 8 5 3 0 7\r\n1 4\r\n1 7\r\n9 5\r\n6 1\r\n1 2\r\n1 9\r\n3 1\r\n10 1\r\n8 4\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n9 8 2 3 4 0 7 1 5 6\r\n4 8 2 0 9 3 5 7 1 6\r\n9 10\r\n1 9\r\n3 2\r\n2 8\r\n4 7\r\n4 6\r\n4 8\r\n9 5\r\n3 9\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n4 2 8 6 3 9 1 5 7 0\r\n2 8 3 0 1 6 9 5 4 7\r\n7 6\r\n5 8\r\n8 9\r\n9 4\r\n9 6\r\n10 7\r\n1 8\r\n3 2\r\n9 2\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n1 0 9 5 3 2 7 4 6 8\r\n5 3 4 0 1 6 7 8 9 2\r\n9 3\r\n3 5\r\n10 3\r\n1 7\r\n4 5\r\n2 8\r\n4 7\r\n3 2\r\n6 9\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n4 3 8 7 0 6 1 2 5 9\r\n6 7 5 4 0 8 3 9 2 1\r\n5 9\r\n6 3\r\n6 4\r\n10 8\r\n1 2\r\n9 4\r\n1 6\r\n4 8\r\n7 9\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n5 4 8 6 9 3 7 1 2 0\r\n7 8 0 5 9 6 4 3 1 2\r\n1 10\r\n9 1\r\n1 6\r\n4 2\r\n8 6\r\n6 2\r\n5 3\r\n3 10\r\n7 1\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n0 2 4 5 6 7 3 8 9 1\r\n2 6 8 4 3 1 0 9 5 7\r\n1 7\r\n3 4\r\n8 7\r\n2 10\r\n4 1\r\n7 6\r\n9 2\r\n1 2\r\n2 5\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n2 7 6 0 9 8 3 5 4 1\r\n5 2 9 3 4 7 6 1 8 0\r\n3 5\r\n2 1\r\n8 4\r\n5 1\r\n2 7\r\n1 9\r\n2 6\r\n8 10\r\n8 1\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n5 8 2 9 3 7 0 1 6 4\r\n1 3 8 6 7 9 4 0 2 5\r\n9 2\r\n3 6\r\n8 2\r\n6 5\r\n4 10\r\n1 5\r\n5 8\r\n7 5\r\n6 4\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n1 4 9 5 7 6 2 0 3 8\r\n2 5 9 7 0 6 8 1 4 3\r\n3 10\r\n2 7\r\n5 2\r\n7 9\r\n10 9\r\n7 6\r\n1 6\r\n4 10\r\n7 8\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n6 3 5 7 9 1 8 4 0 2\r\n5 6 3 0 8 9 7 1 4 2\r\n2 6\r\n4 3\r\n4 6\r\n9 3\r\n9 1\r\n5 6\r\n8 7\r\n3 10\r\n9 7\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n6 9 4 0 8 2 7 1 5 3\r\n8 1 3 7 5 0 4 6 2 9\r\n2 1\r\n10 9\r\n5 1\r\n3 1\r\n2 6\r\n7 3\r\n4 6\r\n9 7\r\n8 1\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n4 0 2 6 8 7 3 9 5 1\r\n8 2 3 9 6 4 0 1 5 7\r\n1 7\r\n4 9\r\n9 5\r\n3 9\r\n9 1\r\n6 4\r\n1 2\r\n8 1\r\n7 10\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n4 2 0 9 5 3 6 8 7 1\r\n9 7 6 0 3 4 2 1 5 8\r\n8 4\r\n9 1\r\n4 10\r\n5 4\r\n4 1\r\n1 3\r\n6 1\r\n7 1\r\n2 1\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n6 8 5 0 1 2 9 3 4 7\r\n7 3 4 8 1 2 5 9 0 6\r\n1 4\r\n1 5\r\n9 6\r\n1 9\r\n7 4\r\n8 10\r\n1 3\r\n9 2\r\n1 10\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n1 6 3 8 7 4 0 5 2 9\r\n0 9 3 2 4 6 1 7 8 5\r\n3 9\r\n8 7\r\n3 8\r\n2 6\r\n2 9\r\n10 8\r\n3 5\r\n5 4\r\n8 1\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n3 2 4 5 6 7 0 9 8 1\r\n8 3 9 6 7 0 1 2 4 5\r\n10 9\r\n4 8\r\n10 8\r\n4 1\r\n5 2\r\n9 3\r\n5 9\r\n6 10\r\n10 7\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n8 7 2 6 0 4 9 1 3 5\r\n9 3 5 8 1 4 2 0 6 7\r\n5 6\r\n5 4\r\n8 9\r\n3 6\r\n7 10\r\n8 5\r\n1 2\r\n2 8\r\n7 8\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n1 4 9 6 2 5 8 3 0 7\r\n3 5 8 4 0 1 7 6 2 9\r\n5 2\r\n8 5\r\n1 5\r\n8 7\r\n5 3\r\n1 6\r\n4 9\r\n1 4\r\n10 3\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n1 5 2 9 8 4 0 6 7 3\r\n1 8 5 0 3 6 2 9 7 4\r\n8 3\r\n7 1\r\n5 4\r\n8 5\r\n2 6\r\n6 8\r\n1 8\r\n8 9\r\n10 7\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n9 7 3 0 8 2 6 4 5 1\r\n7 6 8 0 5 4 3 2 1 9\r\n9 1\r\n5 4\r\n1 2\r\n1 8\r\n3 1\r\n1 6\r\n1 7\r\n10 4\r\n1 10\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n2 1 4 7 8 3 9 5 0 6\r\n6 3 5 9 1 8 2 0 4 7\r\n1 4\r\n6 1\r\n1 2\r\n10 1\r\n5 8\r\n9 8\r\n1 7\r\n10 3\r\n8 1\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n1 5 9 7 0 8 3 4 2 6\r\n5 7 2 4 0 8 1 9 6 3\r\n5 10\r\n9 1\r\n2 4\r\n4 6\r\n6 10\r\n8 4\r\n9 7\r\n4 3\r\n3 7\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n4 3 2 1 9 0 6 8 7 5\r\n3 4 1 2 6 7 9 8 5 0\r\n4 10\r\n10 2\r\n1 10\r\n5 9\r\n8 2\r\n6 9\r\n3 6\r\n6 8\r\n6 7\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n2 6 3 8 5 4 7 9 0 1\r\n6 5 1 8 3 9 4 2 0 7\r\n10 3\r\n3 8\r\n7 8\r\n6 10\r\n5 2\r\n9 10\r\n4 2\r\n5 6\r\n2 1\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n2 0 4 1 9 7 5 8 6 3\r\n9 3 4 5 0 7 6 8 1 2\r\n8 3\r\n9 6\r\n8 1\r\n5 2\r\n4 6\r\n10 8\r\n9 7\r\n8 5\r\n1 9\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n1 5 7 0 4 6 9 3 2 8\r\n1 4 5 9 6 2 0 3 7 8\r\n1 6\r\n1 3\r\n1 5\r\n10 6\r\n8 1\r\n1 2\r\n7 4\r\n9 2\r\n2 7\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n6 2 7 8 0 9 3 4 1 5\r\n5 8 4 6 3 7 2 0 9 1\r\n4 3\r\n7 3\r\n9 1\r\n1 6\r\n1 5\r\n10 6\r\n3 6\r\n1 2\r\n8 1\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n0 7 4 1 6 3 5 8 9 2\r\n4 7 1 2 3 9 5 6 0 8\r\n5 9\r\n4 1\r\n1 7\r\n10 1\r\n1 6\r\n8 4\r\n1 5\r\n2 1\r\n3 1\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n1 6 7 2 3 5 8 0 9 4\r\n3 1 8 7 4 0 2 5 9 6\r\n3 4\r\n5 10\r\n7 6\r\n8 4\r\n1 5\r\n10 6\r\n8 10\r\n2 4\r\n9 6\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n5 7 1 3 2 0 8 4 6 9\r\n9 1 8 7 2 4 5 3 6 0\r\n2 5\r\n10 7\r\n10 2\r\n8 1\r\n2 6\r\n1 3\r\n10 9\r\n4 8\r\n4 2\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n6 3 2 1 7 5 8 4 0 9\r\n8 1 6 7 5 9 0 2 4 3\r\n2 9\r\n6 9\r\n8 4\r\n1 6\r\n10 4\r\n8 3\r\n5 10\r\n2 7\r\n9 5\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n1 2 3 4 0\r\n1 2 3 4 0\r\n2 1\r\n1 4\r\n1 5\r\n1 3\r\n",
                "0 0\r\n"
            ],
            [
                "5\r\n3 2 4 1 0\r\n3 2 4 1 0\r\n4 2\r\n2 5\r\n2 3\r\n1 4\r\n",
                "0 0\r\n"
            ]
        ]
    }
]