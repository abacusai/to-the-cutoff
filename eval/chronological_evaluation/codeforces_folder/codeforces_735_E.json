[
    {
        "name": "Ostap and Tree",
        "description": "Ostap already settled down in Rio de Janiero suburb and started to grow a tree\nin his garden. Recall that a tree is a connected undirected acyclic graph.\nOstap's tree now has n vertices. He wants to paint some vertices of the tree\nblack such that from any vertex u there is at least one black vertex v at\ndistance no more than k. Distance between two vertices of the tree is the\nminimum possible number of edges of the path between them. As this number of\nways to paint the tree can be large, Ostap wants you to compute it modulo 10^9\n+ 7. Two ways to paint the tree are considered different if there exists a\nvertex that is painted black in one way and is not painted in the other one.\nInput The first line of the input contains two integers n and k (1 \u2264 n \u2264 100,\n0 \u2264 k \u2264 min(20, n - 1)) \u2014 the number of vertices in Ostap's tree and the\nmaximum allowed distance to the nearest black vertex. Don't miss the unusual\nconstraint for k. Each of the next n - 1 lines contain two integers ui and vi\n(1 \u2264 ui, vi \u2264 n) \u2014 indices of vertices, connected by the i-th edge. It's\nguaranteed that given graph is a tree. Output Print one integer \u2014 the\nremainder of division of the number of ways to paint the tree by 1 000 000 007\n(10^9 + 7). Examples Input 2 0 1 2 Output 1 Input 2 1 1 2 Output 3 Input 4 1 1\n2 2 3 3 4 Output 9 Input 7 2 1 2 2 3 1 4 4 5 1 6 6 7 Output 91 Note In the\nfirst sample, Ostap has to paint both vertices black. In the second sample, it\nis enough to paint only one of two vertices, thus the answer is 3: Ostap can\npaint only vertex 1, only vertex 2, vertices 1 and 2 both. In the third\nsample, the valid ways to paint vertices are: 1, 3, 1, 4, 2, 3, 2, 4,\n1, 2, 3, 1, 2, 4, 1, 3, 4, 2, 3, 4, 1, 2, 3, 4.\n\n",
        "cf_contest_id": 735,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 0\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "2 1\r\n1 2\r\n",
                "3\r\n"
            ],
            [
                "4 1\r\n1 2\r\n2 3\r\n3 4\r\n",
                "9\r\n"
            ],
            [
                "7 2\r\n1 2\r\n2 3\r\n1 4\r\n4 5\r\n1 6\r\n6 7\r\n",
                "91\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 0\r\n",
                "1\r\n"
            ],
            [
                "10 0\r\n5 6\r\n4 3\r\n8 5\r\n3 7\r\n10 4\r\n1 2\r\n2 8\r\n10 1\r\n7 9\r\n",
                "1\r\n"
            ],
            [
                "10 1\r\n6 8\r\n1 9\r\n1 5\r\n6 10\r\n3 9\r\n9 4\r\n10 9\r\n2 4\r\n7 4\r\n",
                "255\r\n"
            ],
            [
                "10 2\r\n7 10\r\n2 1\r\n6 5\r\n10 6\r\n3 1\r\n10 4\r\n3 4\r\n9 3\r\n8 4\r\n",
                "705\r\n"
            ],
            [
                "10 4\r\n4 6\r\n3 5\r\n7 3\r\n4 9\r\n10 2\r\n1 9\r\n4 8\r\n10 3\r\n8 7\r\n",
                "993\r\n"
            ],
            [
                "10 3\r\n2 5\r\n4 8\r\n4 5\r\n6 8\r\n4 1\r\n5 10\r\n7 9\r\n4 7\r\n3 9\r\n",
                "945\r\n"
            ],
            [
                "10 4\r\n9 6\r\n10 8\r\n9 2\r\n7 10\r\n3 7\r\n7 9\r\n10 4\r\n1 7\r\n9 5\r\n",
                "1023\r\n"
            ],
            [
                "10 5\r\n6 4\r\n4 1\r\n7 5\r\n8 7\r\n2 6\r\n3 6\r\n8 6\r\n10 3\r\n4 9\r\n",
                "1023\r\n"
            ],
            [
                "10 0\r\n9 10\r\n5 1\r\n10 5\r\n8 6\r\n8 2\r\n7 8\r\n8 1\r\n8 3\r\n4 3\r\n",
                "1\r\n"
            ],
            [
                "10 1\r\n6 3\r\n1 5\r\n10 7\r\n4 10\r\n2 4\r\n5 9\r\n8 1\r\n1 3\r\n7 3\r\n",
                "279\r\n"
            ],
            [
                "10 2\r\n1 4\r\n10 9\r\n1 5\r\n3 10\r\n2 10\r\n5 8\r\n6 1\r\n2 7\r\n6 10\r\n",
                "743\r\n"
            ],
            [
                "10 9\r\n1 2\r\n3 1\r\n6 10\r\n6 1\r\n10 9\r\n4 5\r\n7 1\r\n5 6\r\n8 5\r\n",
                "1023\r\n"
            ],
            [
                "5 1\r\n1 2\r\n4 3\r\n5 3\r\n2 3\r\n",
                "15\r\n"
            ],
            [
                "63 5\r\n2 31\r\n5 41\r\n15 20\r\n38 12\r\n54 7\r\n31 54\r\n24 47\r\n13 19\r\n54 39\r\n57 50\r\n25 18\r\n59 11\r\n47 30\r\n60 49\r\n13 24\r\n7 11\r\n16 4\r\n28 59\r\n43 36\r\n3 33\r\n10 32\r\n40 48\r\n63 35\r\n49 56\r\n29 20\r\n44 18\r\n7 24\r\n49 18\r\n36 11\r\n9 13\r\n58 23\r\n34 47\r\n3 51\r\n5 61\r\n1 16\r\n26 6\r\n37 57\r\n26 8\r\n48 52\r\n25 43\r\n26 28\r\n22 39\r\n14 31\r\n44 21\r\n5 17\r\n33 23\r\n48 41\r\n42 44\r\n12 51\r\n59 50\r\n12 62\r\n25 41\r\n53 23\r\n16 28\r\n51 32\r\n63 27\r\n55 57\r\n33 20\r\n45 39\r\n32 46\r\n50 63\r\n3 43\r\n",
                "560665636\r\n"
            ],
            [
                "64 3\r\n13 10\r\n60 54\r\n23 35\r\n4 41\r\n59 18\r\n41 36\r\n48 13\r\n64 8\r\n30 19\r\n53 3\r\n34 11\r\n24 27\r\n21 25\r\n5 55\r\n51 11\r\n3 45\r\n24 57\r\n47 38\r\n55 26\r\n8 20\r\n29 42\r\n44 3\r\n7 15\r\n9 1\r\n17 4\r\n41 9\r\n15 29\r\n60 13\r\n31 36\r\n53 52\r\n59 14\r\n12 52\r\n24 31\r\n47 28\r\n29 23\r\n2 49\r\n30 44\r\n28 31\r\n25 22\r\n9 58\r\n64 11\r\n45 35\r\n59 44\r\n62 8\r\n49 53\r\n32 48\r\n36 45\r\n4 56\r\n25 42\r\n42 33\r\n23 10\r\n48 39\r\n37 28\r\n10 64\r\n6 7\r\n30 63\r\n33 50\r\n40 7\r\n33 16\r\n49 46\r\n60 61\r\n52 43\r\n15 55\r\n",
                "257869945\r\n"
            ]
        ]
    }
]