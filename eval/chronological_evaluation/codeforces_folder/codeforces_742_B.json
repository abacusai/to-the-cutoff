[
    {
        "name": "Arpa\u2019s obvious problem and Mehrdad\u2019s terrible solution",
        "description": "There are some beautiful girls in Arpa\u2019s land as mentioned before. Once Arpa\ncame up with an obvious problem: Given an array and a number x, count the\nnumber of pairs of indices i, j (1 \u2264 i < j \u2264 n) such that , where is bitwise\nxor operation (see notes for explanation). Immediately, Mehrdad discovered a\nterrible solution that nobody trusted. Now Arpa needs your help to implement\nthe solution to that problem. Input First line contains two integers n and x\n(1 \u2264 n \u2264 10^5, 0 \u2264 x \u2264 10^5) \u2014 the number of elements in the array and the\ninteger x. Second line contains n integers a1, a2, ..., an (1 \u2264 ai \u2264 10^5) \u2014\nthe elements of the array. Output Print a single integer: the answer to the\nproblem. Examples Input 2 3 1 2 Output 1 Input 6 1 5 1 2 3 4 1 Output 2 Note\nIn the first sample there is only one pair of i = 1 and j = 2. so the answer\nis 1. In the second sample the only two pairs are i = 3, j = 4 (since ) and i\n= 1, j = 5 (since ). A bitwise xor takes two bit integers of equal length and\nperforms the logical xor operation on each pair of corresponding bits. The\nresult in each position is 1 if only the first bit is 1 or only the second bit\nis 1, but will be 0 if both are 0 or both are 1. You can read more about\nbitwise xor operation here:\nhttps://en.wikipedia.org/wiki/Bitwise_operation#XOR.\n\n",
        "cf_contest_id": 742,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 3\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "6 1\r\n5 1 2 3 4 1\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "38 101\r\n395 5 339 366 409 150 400 180 348 200 409 20 182 409 208 74 176 401 459 158 282 207 241 406 33 484 65 245 363 337 204 197 445 445 72 435 126 423\r\n",
                "0\r\n"
            ],
            [
                "47 117\r\n77 57 535 240 250 321 51 29 42 582 390 525 149 195 119 465 198 494 456 313 497 205 115 256 513 413 15 423 568 135 519 174 147 201 564 182 359 41 465 162 125 378 342 144 549 363 309\r\n",
                "1\r\n"
            ],
            [
                "27 41\r\n156 148 86 161 113 80 185 15 204 185 205 95 147 146 133 187 114 8 11 120 117 167 100 171 140 102 174\r\n",
                "1\r\n"
            ],
            [
                "10 208\r\n399 912 747 631 510 622 234 707 483 496\r\n",
                "0\r\n"
            ],
            [
                "64 43\r\n78 90 211 205 198 4 172 43 163 21 58 145 28 66 210 68 79 90 155 123 9 119 188 151 180 157 44 163 20 71 28 120 163 141 170 206 31 34 21 195 72 194 83 163 140 40 182 208 127 128 110 72 184 157 128 189 146 35 51 206 62 8 117 61\r\n",
                "8\r\n"
            ],
            [
                "69 25\r\n68 26 8 121 96 101 106 87 103 14 86 26 76 85 70 50 4 4 97 89 44 98 33 65 76 64 98 95 30 5 93 121 97 85 47 50 66 2 46 79 46 22 68 59 75 94 104 105 91 97 121 6 32 94 101 125 32 91 76 57 110 31 27 97 91 49 45 37 92\r\n",
                "21\r\n"
            ],
            [
                "64 118\r\n361 547 410 294 448 377 482 490 13 116 346 50 251 330 443 128 543 580 370 489 337 509 414 291 228 71 245 308 319 314 154 39 317 288 145 248 547 152 262 278 89 108 522 238 128 575 112 469 86 230 310 492 127 270 475 25 179 72 345 444 17 332 544 338\r\n",
                "3\r\n"
            ],
            [
                "52 231\r\n229 492 1005 498 786 274 773 573 316 774 977 110 709 49 131 81 1146 1028 451 451 776 470 996 363 581 484 1023 858 1115 273 1105 4 445 509 428 125 432 131 360 404 280 808 649 4 499 1097 831 512 208 996 430 1010\r\n",
                "0\r\n"
            ],
            [
                "4 0\r\n1 2 3 4\r\n",
                "0\r\n"
            ],
            [
                "3 0\r\n2 2 2\r\n",
                "3\r\n"
            ],
            [
                "5 0\r\n1 1 1 1 1\r\n",
                "10\r\n"
            ],
            [
                "3 0\r\n1 1 1\r\n",
                "3\r\n"
            ],
            [
                "4 0\r\n2 2 2 2\r\n",
                "6\r\n"
            ],
            [
                "3 0\r\n10 10 10\r\n",
                "3\r\n"
            ],
            [
                "3 0\r\n3 3 3\r\n",
                "3\r\n"
            ],
            [
                "4 0\r\n1 1 1 1\r\n",
                "6\r\n"
            ],
            [
                "3 0\r\n4 4 4\r\n",
                "3\r\n"
            ],
            [
                "2 0\r\n2 2\r\n",
                "1\r\n"
            ],
            [
                "2 0\r\n2 3\r\n",
                "0\r\n"
            ],
            [
                "2 0\r\n1 2\r\n",
                "0\r\n"
            ],
            [
                "5 0\r\n5 5 5 5 5\r\n",
                "10\r\n"
            ],
            [
                "6 0\r\n1 1 1 1 1 1\r\n",
                "15\r\n"
            ],
            [
                "2 0\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "4 0\r\n1 1 3 3\r\n",
                "2\r\n"
            ],
            [
                "2 0\r\n10 10\r\n",
                "1\r\n"
            ],
            [
                "4 0\r\n3 3 3 3\r\n",
                "6\r\n"
            ],
            [
                "5 0\r\n1 1 1 2 2\r\n",
                "4\r\n"
            ],
            [
                "5 0\r\n1 1 2 2 3\r\n",
                "2\r\n"
            ],
            [
                "10 0\r\n1 1 1 1 1 1 1 1 1 1\r\n",
                "45\r\n"
            ],
            [
                "2 0\r\n3 3\r\n",
                "1\r\n"
            ]
        ]
    }
]