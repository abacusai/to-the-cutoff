[
    {
        "name": "Cartesian Tree ",
        "description": "Ildar is the algorithm teacher of William and Harris. Today, Ildar is teaching\nCartesian Tree. However, Harris is sick, so Ildar is only teaching William. A\ncartesian tree is a rooted tree, that can be constructed from a sequence of\ndistinct integers. We build the cartesian tree as follows: If the sequence is\nempty, return an empty tree; Let the position of the maximum element be\n\n    x\n; Remove element on the position \n    x\n from the sequence and break it\ninto the left part and the right part (which might be empty) (not actually\nremoving it, just taking it away temporarily); Build cartesian tree for each\npart; Create a new vertex for the element, that was on the position \n    x\n\nwhich will serve as the root of the new tree. Then, for the root of the left\npart and right part, if exists, will become the children for this vertex;\nReturn the tree we have gotten.For example, this is the cartesian tree for the\nsequence \n    4, 2, 7, 3, 5, 6, 1\n: After teaching what the cartesian tree is,\nIldar has assigned homework. He starts with an empty sequence \n    a\n. In the\n\n    i\n-th round, he inserts an element with value \n    i\n somewhere in\n\n    a\n. Then, he asks a question: what is the sum of the sizes of the\nsubtrees for every node in the cartesian tree for the current sequence\n\n    a\n? Node \n    v\n is in the node \n    u\n subtree if and only if \n    v =\n    u\n or \n    v\n is in the subtree of one of the vertex \n    u\n children. The\nsize of the subtree of node \n    u\n is the number of nodes \n    v\n such that\n\n    v\n is in the subtree of \n    u\n. Ildar will do \n    n\n rounds in total.\nThe homework is the sequence of answers to the \n    n\n questions. The next\nday, Ildar told Harris that he has to complete the homework as well. Harris\nobtained the final state of the sequence \n    a\n from William. However, he has\nno idea how to find the answers to the \n    n\n questions. Help Harris! Input\nThe first line contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    150000\n). The second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n). It is guarenteed that each integer from\n\n    1\n to \n    n\n appears in the sequence exactly once. Output Print \n    n\n\nlines, \n    i\n-th line should contain a single integer \u2014 the answer to the\n\n    i\n-th question. Examples Input 5 2 4 1 5 3 Output 1 3 6 8 11 Input 6 1 2\n4 5 6 3 Output 1 3 6 8 12 17 Note After the first round, the sequence is\n\n    1\n. The tree is The answer is \n    1\n. After the second round, the\nsequence is \n    2, 1\n. The tree is The answer is \n    2+1=3\n. After the third\nround, the sequence is \n    2, 1, 3\n. The tree is The answer is \n    2+1+3=6\n.\nAfter the fourth round, the sequence is \n    2, 4, 1, 3\n. The tree is The\nanswer is \n    1+4+1+2=8\n. After the fifth round, the sequence is \n    2, 4, 1,\n    5, 3\n. The tree is The answer is \n    1+3+1+5+1=11\n.\n\n",
        "cf_contest_id": 1290,
        "cf_index": "E",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 4 1 5 3\r\n",
                "1\r\n3\r\n6\r\n8\r\n11\r\n"
            ],
            [
                "6\r\n1 2 4 5 6 3\r\n",
                "1\r\n3\r\n6\r\n8\r\n12\r\n17\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n8 10 9 3 7 5 4 6 2 1\r\n",
                "1\r\n3\r\n6\r\n8\r\n12\r\n14\r\n19\r\n27\r\n29\r\n38\r\n"
            ],
            [
                "15\r\n1 7 12 14 15 9 8 10 11 2 5 4 3 13 6\r\n",
                "1\r\n3\r\n6\r\n8\r\n11\r\n17\r\n21\r\n24\r\n31\r\n31\r\n37\r\n43\r\n50\r\n53\r\n58\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "1\r\n3\r\n"
            ]
        ]
    }
]