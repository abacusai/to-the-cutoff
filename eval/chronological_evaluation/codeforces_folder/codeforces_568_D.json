[
    {
        "name": "Sign Posts",
        "description": "One Khanate had a lot of roads and very little wood. Riding along the roads\nwas inconvenient, because the roads did not have road signs indicating the\ndirection to important cities. The Han decided that it's time to fix the\nissue, and ordered to put signs on every road. The Minister of Transport has\nto do that, but he has only k signs. Help the minister to solve his problem,\notherwise the poor guy can lose not only his position, but also his head. More\nformally, every road in the Khanate is a line on the Oxy plane, given by an\nequation of the form Ax + By + C = 0 (A and B are not equal to 0 at the same\ntime). You are required to determine whether you can put signs in at most k\npoints so that each road had at least one sign installed. Input The input\nstarts with two positive integers n, k (1 \u2264 n \u2264 10^5, 1 \u2264 k \u2264 5) Next n lines\ncontain three integers each, Ai, Bi, Ci, the coefficients of the equation that\ndetermines the road (|Ai|, |Bi|, |Ci| \u2264 10^5, Ai^2 + Bi^2 \u2260 0). It is\nguaranteed that no two roads coincide. Output If there is no solution, print\n\"NO\" in the single line (without the quotes). Otherwise, print in the first\nline \"YES\" (without the quotes). In the second line print a single number m (m\n\u2264 k) \u2014 the number of used signs. In the next m lines print the descriptions of\ntheir locations. Description of a location of one sign is two integers v, u.\nIf u and v are two distinct integers between 1 and n, we assume that sign is\nat the point of intersection of roads number v and u. If u = - 1, and v is an\ninteger between 1 and n, then the sign is on the road number v in the point\nnot lying on any other road. In any other case the description of a sign will\nbe assumed invalid and your answer will be considered incorrect. In case if v\n= u, or if v and u are the numbers of two non-intersecting roads, your answer\nwill also be considered incorrect. The roads are numbered starting from 1 in\nthe order in which they follow in the input. Examples Input 3 1 1 0 0 0 -1 0 7\n-93 0 Output YES 1 1 2 Input 3 1 1 0 0 0 1 0 1 1 3 Output NO Input 2 3 3 4 5 5\n6 7 Output YES 2 1 -1 2 -1 Note Note that you do not have to minimize m, but\nit shouldn't be more than k. In the first test all three roads intersect at\npoint (0,0). In the second test all three roads form a triangle and there is\nno way to place one sign so that it would stand on all three roads at once.\n\n",
        "cf_contest_id": 568,
        "cf_index": "D",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "geometry",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 1\r\n1 0 0\r\n0 -1 0\r\n7 -93 0\r\n",
                "YES\r\n1\r\n1 2\r\n"
            ],
            [
                "3 1\r\n1 0 0\r\n0 1 0\r\n1 1 3\r\n",
                "NO\r\n"
            ],
            [
                "2 3\r\n3 4 5\r\n5 6 7\r\n",
                "YES\r\n1\r\n1 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n2 -1 0\r\n1 1 3\r\n",
                "YES\r\n1\r\n1 2\r\n"
            ],
            [
                "1 1\r\n-163 -160 -5168\r\n",
                "YES\r\n1\r\n1 -1\r\n"
            ],
            [
                "10 1\r\n53 104 -14918\r\n121 -65 2234\r\n40 173 -22600\r\n123 128 -21018\r\n207 -199 14358\r\n-99 -97 16194\r\n-4 -1 304\r\n37 134 -17782\r\n-30 37 -3060\r\n8 35 -4568\r\n",
                "YES\r\n1\r\n1 2\r\n"
            ],
            [
                "10 5\r\n-75 52 14554\r\n185 171 42023\r\n-12 -13 -422\r\n-89 200 10426\r\n124 45 15427\r\n-18 -59 -1815\r\n10 -153 -20491\r\n-188 -209 11585\r\n18 217 30330\r\n-97 147 27343\r\n",
                "YES\r\n5\r\n1 2\r\n3 4\r\n5 6\r\n7 8\r\n9 10\r\n"
            ],
            [
                "3 1\r\n1 0 0\r\n0 1 0\r\n100000 100000 -1\r\n",
                "NO\r\n"
            ],
            [
                "3 1\r\n1 2 9\r\n2 4 1\r\n3 6 2\r\n",
                "NO\r\n"
            ]
        ]
    }
]