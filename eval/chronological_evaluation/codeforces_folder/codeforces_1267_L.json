[
    {
        "name": "Lexicography",
        "description": "Lucy likes letters. She studied the definition of the lexicographical order at\nschool and plays with it. At first, she tried to construct the\nlexicographically smallest word out of given letters. It was so easy! Then she\ntried to build multiple words and minimize one of them. This was much harder!\nFormally, Lucy wants to make \n    n\n words of length \n    l\n each out of the\ngiven \n    n \n    \u00b7 l\n letters, so that the \n    k\n-th of them in the\nlexicographic order is lexicographically as small as possible. Input The first\nline contains three integers \n    n\n, \n    l\n, and \n    k\n (\n    1\n    \u2264 k \n    \u2264\n    n \n    \u2264 1\n     000\n; \n    1 \n    \u2264 l \n    \u2264 1\n     000\n) \u2014 the total number of\nwords, the length of each word, and the index of the word Lucy wants to\nminimize. The next line contains a string of \n    n \n    \u00b7 l\n lowercase\nletters of the English alphabet. Output Output \n    n\n words of \n    l\n\nletters each, one per line, using the letters from the input. Words must be\nsorted in the lexicographic order, and the \n    k\n-th of them must be\nlexicographically as small as possible. If there are multiple answers with the\nsmallest \n    k\n-th word, output any of them. Examples Input 3 2 2 abcdef\nOutput af bc ed Input 2 3 1 abcabc Output aab bcc\n\n",
        "cf_contest_id": 1267,
        "cf_index": "L",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "strings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 2 2\r\nabcdef\r\n",
                "ad\r\nbc\r\nef\r\n"
            ],
            [
                "2 3 1\r\nabcabc\r\n",
                "aab\r\nbcc\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\nd\r\n",
                "d\r\n"
            ],
            [
                "2 1 2\r\nxx\r\n",
                "x\r\nx\r\n"
            ],
            [
                "10 1 4\r\nmmmmmmmmmm\r\n",
                "m\r\nm\r\nm\r\nm\r\nm\r\nm\r\nm\r\nm\r\nm\r\nm\r\n"
            ],
            [
                "2 3 2\r\nbbcadc\r\n",
                "acd\r\nbbc\r\n"
            ],
            [
                "5 5 5\r\nuuuuuyyyyybbbbbqqqqqkkkkk\r\n",
                "bkquy\r\nbkquy\r\nbkquy\r\nbkquy\r\nbkquy\r\n"
            ],
            [
                "1 1 1\r\nz\r\n",
                "z\r\n"
            ],
            [
                "1 1 1\r\nv\r\n",
                "v\r\n"
            ],
            [
                "1 1 1\r\nb\r\n",
                "b\r\n"
            ],
            [
                "1 1 1\r\nn\r\n",
                "n\r\n"
            ],
            [
                "1 9 1\r\nddddddddd\r\n",
                "ddddddddd\r\n"
            ],
            [
                "1 9 1\r\notoeuhojt\r\n",
                "ehjooottu\r\n"
            ],
            [
                "1 9 1\r\nwmdjwkpwf\r\n",
                "dfjkmpwww\r\n"
            ],
            [
                "1 10 1\r\nlduuukmwxx\r\n",
                "dklmuuuwxx\r\n"
            ],
            [
                "1 97 1\r\neeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\r\n",
                "eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\r\n"
            ],
            [
                "1 98 1\r\nddzzdzzddzzzzzzdzdzzdzzzzddddzzdzddddddzzddddzdzzzdzdzddzddzdzdzdzzzzdzdzddzzzzdzzzzddzzdzzdzdddzz\r\n",
                "dddddddddddddddddddddddddddddddddddddddddddddzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\r\n"
            ],
            [
                "1 91 1\r\nyvphaxbrxwquqqstaislmlxjcshnhigbrbooagoirplbflfaiwkptchamaoxgvemqbprdbbzupgiivvssuuynqqtltf\r\n",
                "aaaaaabbbbbbbccdefffgggghhhhiiiiiijklllllmmmnnoooopppppqqqqqqrrrrsssssttttuuuuvvvvwwxxxxyyz\r\n"
            ],
            [
                "1 95 1\r\ntnyebggqacotqgitzqfhysnhlyuguqjdxnvttaeswgkfspvdftmqvaipklqqnttyqloqyeyzhvoiigiubceckggiidyhwuo\r\n",
                "aaabbcccdddeeeefffgggggggghhhhiiiiiiijkkklllmnnnnooooppqqqqqqqqqsssttttttttuuuuvvvvwwxyyyyyyyzz\r\n"
            ],
            [
                "9 1 9\r\neeeeeeeee\r\n",
                "e\r\ne\r\ne\r\ne\r\ne\r\ne\r\ne\r\ne\r\ne\r\n"
            ],
            [
                "10 1 3\r\navdtkzddkk\r\n",
                "a\r\nd\r\nd\r\nd\r\nk\r\nk\r\nk\r\nt\r\nv\r\nz\r\n"
            ],
            [
                "9 1 9\r\nkvmjkblhz\r\n",
                "b\r\nh\r\nj\r\nk\r\nk\r\nl\r\nm\r\nv\r\nz\r\n"
            ],
            [
                "10 1 10\r\nuucmshkhlo\r\n",
                "c\r\nh\r\nh\r\nk\r\nl\r\nm\r\no\r\ns\r\nu\r\nu\r\n"
            ],
            [
                "9 10 9\r\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\r\n",
                "bbbbbbbbbb\r\nbbbbbbbbbb\r\nbbbbbbbbbb\r\nbbbbbbbbbb\r\nbbbbbbbbbb\r\nbbbbbbbbbb\r\nbbbbbbbbbb\r\nbbbbbbbbbb\r\nbbbbbbbbbb\r\n"
            ],
            [
                "9 10 5\r\nafdfhplzplgrnrgzpzplbdhnulrxplafgpgbzlablzhxuhblczlpgbczrbxcnrfgfxcbflrpdnlgfruzrczgzrgpbc\r\n",
                "afffffgggg\r\naggggghhhh\r\nalllllllll\r\nbbbbcccddl\r\nbbbbcccdff\r\nlnnnnppppp\r\npppprrrrrr\r\nrrruuuxxxx\r\nzzzzzzzzzz\r\n"
            ],
            [
                "10 9 2\r\nskpjgpwrqajrdnynybnsmybttmhkboiqlndqtghvqyorholdzwasytnvteawhahjfhjknhfobiifrtfrlbjkqyxgnc\r\n",
                "aabbbffff\r\naabbcddde\r\nggghhhhhh\r\nhiiijjjjj\r\nkkkklllmm\r\nnnnnnnnoo\r\nooppqqqqq\r\nrrrrrssst\r\ntttttvvww\r\nwxyyyyyyz\r\n"
            ],
            [
                "10 10 10\r\nhckmixocxnktmrsaiopejoifwiwskqktgljlgobztnpvlzfuxotiaquusgdbpzufrkxdejcznsjfyctfucwzkbzluyyelrohoacz\r\n",
                "aghhiiiiij\r\najjjkkkkkk\r\nalllllmmnn\r\nbnooooooop\r\nbppqqrrrss\r\nbsstttttuu\r\nccuuuuvwww\r\nccxxxxyyyz\r\ncdeezzzzzz\r\ncdefffffgg\r\n"
            ],
            [
                "92 1 71\r\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n",
                "x\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\n"
            ],
            [
                "94 1 27\r\nrxzjinajagadtnzsvnptwolcrfovnafwrrlxidrsppkgwfmwwwapjmvkddfobpwvtnvzgxmzkbhfxhjnjoisdxcrzdslkb\r\n",
                "a\r\na\r\na\r\na\r\na\r\nb\r\nb\r\nb\r\nc\r\nc\r\nd\r\nd\r\nd\r\nd\r\nd\r\nd\r\nf\r\nf\r\nf\r\nf\r\nf\r\ng\r\ng\r\ng\r\nh\r\nh\r\ni\r\ni\r\ni\r\nj\r\nj\r\nj\r\nj\r\nj\r\nk\r\nk\r\nk\r\nk\r\nl\r\nl\r\nl\r\nm\r\nm\r\nm\r\nn\r\nn\r\nn\r\nn\r\nn\r\nn\r\no\r\no\r\no\r\no\r\np\r\np\r\np\r\np\r\np\r\nr\r\nr\r\nr\r\nr\r\nr\r\nr\r\ns\r\ns\r\ns\r\ns\r\nt\r\nt\r\nt\r\nv\r\nv\r\nv\r\nv\r\nv\r\nw\r\nw\r\nw\r\nw\r\nw\r\nw\r\nw\r\nx\r\nx\r\nx\r\nx\r\nx\r\nz\r\nz\r\nz\r\nz\r\nz\r\n"
            ],
            [
                "97 1 24\r\neilqimmlqrvapwdtsqgpyfeapibnathmuwqajnwrlhzyiqetpcaqrlnjublrttucshnoldszvvmofrbetieobjeejqaygzgjr\r\n",
                "a\r\na\r\na\r\na\r\na\r\na\r\nb\r\nb\r\nb\r\nb\r\nc\r\nc\r\nd\r\nd\r\ne\r\ne\r\ne\r\ne\r\ne\r\ne\r\ne\r\nf\r\nf\r\ng\r\ng\r\ng\r\nh\r\nh\r\nh\r\ni\r\ni\r\ni\r\ni\r\ni\r\nj\r\nj\r\nj\r\nj\r\nj\r\nl\r\nl\r\nl\r\nl\r\nl\r\nl\r\nm\r\nm\r\nm\r\nm\r\nn\r\nn\r\nn\r\nn\r\no\r\no\r\no\r\np\r\np\r\np\r\np\r\nq\r\nq\r\nq\r\nq\r\nq\r\nq\r\nq\r\nr\r\nr\r\nr\r\nr\r\nr\r\nr\r\ns\r\ns\r\ns\r\nt\r\nt\r\nt\r\nt\r\nt\r\nt\r\nu\r\nu\r\nu\r\nv\r\nv\r\nv\r\nw\r\nw\r\nw\r\ny\r\ny\r\ny\r\nz\r\nz\r\nz\r\n"
            ],
            [
                "100 1 92\r\nxwcbimztwcyuckyappbkrddnxgnxqvmobveinzvvnseqxooecwrrdeuwzfzxvfkvguqrsofbbnhfcscxggpxzmruycgqfmnnoovd\r\n",
                "a\r\nb\r\nb\r\nb\r\nb\r\nb\r\nc\r\nc\r\nc\r\nc\r\nc\r\nc\r\nc\r\nd\r\nd\r\nd\r\nd\r\ne\r\ne\r\ne\r\ne\r\nf\r\nf\r\nf\r\nf\r\nf\r\ng\r\ng\r\ng\r\ng\r\ng\r\nh\r\ni\r\ni\r\nk\r\nk\r\nk\r\nm\r\nm\r\nm\r\nm\r\nn\r\nn\r\nn\r\nn\r\nn\r\nn\r\nn\r\no\r\no\r\no\r\no\r\no\r\no\r\np\r\np\r\np\r\nq\r\nq\r\nq\r\nq\r\nr\r\nr\r\nr\r\nr\r\nr\r\ns\r\ns\r\ns\r\nt\r\nu\r\nu\r\nu\r\nu\r\nv\r\nv\r\nv\r\nv\r\nv\r\nv\r\nv\r\nw\r\nw\r\nw\r\nw\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\nx\r\ny\r\ny\r\ny\r\nz\r\nz\r\nz\r\nz\r\nz\r\n"
            ]
        ]
    }
]