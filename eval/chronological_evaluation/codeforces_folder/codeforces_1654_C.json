[
    {
        "name": "Alice and the Cake",
        "description": "Alice has a cake, and she is going to cut it. She will perform the following\noperation \n    n-1\n times: choose a piece of the cake (initially, the cake is\nall one piece) with weight \n    w\n    \u2265 2\n and cut it into two smaller pieces\nof weight \n    \u230a\n    w/2\n    \u230b\n and\n\n    \u2308\n    w/2\n    \u2309\n (\n    \u230a x \n    \u230b\n and\n\n    \u2308 x \n    \u2309\n denote floor and ceiling functions, respectively).\nAfter cutting the cake in \n    n\n pieces, she will line up these \n    n\n\npieces on a table in an arbitrary order. Let \n    a_i\n be the weight of the\n\n    i\n-th piece in the line. You are given the array \n    a\n. Determine\nwhether there exists an initial weight and sequence of operations which\nresults in \n    a\n. Input The first line contains a single integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The first line of\neach test case contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n). The second line of each test case contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n). It is guaranteed that\nthe sum of \n    n\n for all test cases does not exceed \n    2 \n    \u00b7 10^5\n.\nOutput For each test case, print a single line: print YES if the array \n    a\n\ncould have resulted from Alice's operations, otherwise print NO. You may print\neach letter in any case (for example, YES, Yes, yes, yEs will all be\nrecognized as positive answer). Example Input 14 1 327 2 869 541 2 985214736\n985214737 3 2 3 1 3 2 3 3 6 1 1 1 1 1 1 6 100 100 100 100 100 100 8 100 100\n100 100 100 100 100 100 8 2 16 1 8 64 1 4 32 10 1 2 4 7 1 1 1 1 7 2 10 7 1 1 1\n3 1 3 3 2 3 10 1 4 4 1 1 1 3 3 3 1 10 2 3 2 2 1 2 2 2 2 2 4 999999999\n999999999 999999999 999999999 Output YES NO YES YES NO YES NO YES YES YES YES\nNO NO YES Note In the first test case, it's possible to get the array \n    a\n\nby performing \n    0\n operations on a cake with weight \n    327\n. In the\nsecond test case, it's not possible to get the array \n    a\n. In the third\ntest case, it's possible to get the array \n    a\n by performing \n    1\n\noperation on a cake with weight \n    1\n     970\n     429\n     473\n: Cut it in half,\nso that the weights are \n    [985\n     214\n     736, 985\n     214\n     737]\n. Note\nthat the starting weight can be greater than \n    10^9\n.In the fourth test\ncase, it's possible to get the array \n    a\n by performing \n    2\n operations\non a cake with weight \n    6\n: Cut it in half, so that the weights are\n\n    [3,3]\n. Cut one of the two pieces with weight \n    3\n, so that the new\nweights are \n    [1, 2, 3]\n which is equivalent to \n    [2, 3, 1]\n up to\nreordering.\n\n",
        "cf_contest_id": 1654,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "14\r\n1\r\n327\r\n2\r\n869 541\r\n2\r\n985214736 985214737\r\n3\r\n2 3 1\r\n3\r\n2 3 3\r\n6\r\n1 1 1 1 1 1\r\n6\r\n100 100 100 100 100 100\r\n8\r\n100 100 100 100 100 100 100 100\r\n8\r\n2 16 1 8 64 1 4 32\r\n10\r\n1 2 4 7 1 1 1 1 7 2\r\n10\r\n7 1 1 1 3 1 3 3 2 3\r\n10\r\n1 4 4 1 1 1 3 3 3 1\r\n10\r\n2 3 2 2 1 2 2 2 2 2\r\n4\r\n999999999 999999999 999999999 999999999\r\n",
                "YES\r\nNO \r\nYES\r\nYES\r\nNO \r\nYES\r\nNO \r\nYES\r\nYES\r\nYES\r\nYES\r\nNO \r\nNO \r\nYES\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n37\r\n1 1 1 6 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 2097152 4194304 8388608 16777216 33554432 67108864 134217728 268435456 536870912 536870912 536870912 536870912 536870912 536870912 536870912\r\n",
                "NO \r\n"
            ]
        ]
    }
]