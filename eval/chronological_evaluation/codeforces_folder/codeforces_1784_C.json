[
    {
        "name": "Monsters (hard version)",
        "description": "This is the hard version of the problem. In this version, you need to find the\nanswer for every prefix of the monster array. In a computer game, you are\nfighting against \n    n\n monsters. Monster number \n    i\n has \n    a_i\n health\npoints, all \n    a_i\n are integers. A monster is alive while it has at least\n\n    1\n health point. You can cast spells of two types: Deal \n    1\n damage to\nany single alive monster of your choice. Deal \n    1\n damage to all alive\nmonsters. If at least one monster dies (ends up with \n    0\n health points) as\na result of this action, then repeat it (and keep repeating while at least one\nmonster dies every time). Dealing \n    1\n damage to a monster reduces its\nhealth by \n    1\n. Spells of type 1 can be cast any number of times, while a\nspell of type 2 can be cast at most once during the game. For every \n    k = 1,\n    2, \n    \u2026, n\n, answer the following question. Suppose that only the first\n\n    k\n monsters, with numbers \n    1, 2, \n    \u2026, k\n, are present in the\ngame. What is the smallest number of times you need to cast spells of type 1\nto kill all \n    k\n monsters? Input Each test contains multiple test cases.\nThe first line contains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n). The description of the test cases follows. Each test case consists\nof two lines. The first line contains a single integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of monsters. The second line contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014\nmonsters' health points. It is guaranteed that the sum of \n    n\n over all\ntest cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test case,\nprint \n    n\n integers. The \n    k\n-th of these integers must be equal to the\nsmallest number of times you need to cast spells of type 1 to kill all \n    k\n\nmonsters, if only monsters with numbers \n    1, 2, \n    \u2026, k\n are present in\nthe game. Example Input 2 3 3 1 2 6 4 1 5 4 1 1 Output 2 1 0 3 2 4 4 4 4 Note\nIn the first test case, for \n    k = n\n, the initial health points of the\nmonsters are \n    [3, 1, 2]\n. It is enough to cast a spell of type 2:\nMonsters' health points change to \n    [2, 0, 1]\n. Since monster number\n\n    2\n dies, the spell is repeated. Monsters' health points change to \n    [1,\n    0, 0]\n. Since monster number \n    3\n dies, the spell is repeated. Monsters'\nhealth points change to \n    [0, 0, 0]\n. Since monster number \n    1\n dies,\nthe spell is repeated. Monsters' health points change to \n    [0, 0, 0]\n.\nSince it is possible to use no spells of type 1 at all, the answer is \n    0\n.\nIn the second test case, for \n    k = n\n, the initial health points of the\nmonsters are \n    [4, 1, 5, 4, 1, 1]\n. Here is one of the optimal action\nsequences: Using a spell of type 1, deal \n    1\n damage to monster number\n\n    1\n. Monsters' health points change to \n    [3, 1, 5, 4, 1, 1]\n. Using a\nspell of type 1, deal \n    1\n damage to monster number \n    4\n. Monsters'\nhealth points change to \n    [3, 1, 5, 3, 1, 1]\n. Using a spell of type 1,\ndeal \n    1\n damage to monster number \n    4\n again. Monsters' health points\nchange to \n    [3, 1, 5, 2, 1, 1]\n. Use a spell of type 2: Monsters' health\npoints change to \n    [2, 0, 4, 1, 0, 0]\n. Since monsters number \n    2\n,\n\n    5\n, and \n    6\n die, the spell is repeated. Monsters' health points\nchange to \n    [1, 0, 3, 0, 0, 0]\n. Since monster number \n    4\n dies, the\nspell is repeated. Monsters' health points change to \n    [0, 0, 2, 0, 0, 0]\n.\nSince monster number \n    1\n dies, the spell is repeated. Monsters' health\npoints change to \n    [0, 0, 1, 0, 0, 0]\n. Using a spell of type 1, deal\n\n    1\n damage to monster number \n    3\n. Monsters' health points change to\n\n    [0, 0, 0, 0, 0, 0]\n. Spells of type 1 are cast \n    4\n times in total. It\ncan be shown that this is the smallest possible number.\n\n",
        "cf_contest_id": 1784,
        "cf_index": "C",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n3\r\n3 1 2\r\n6\r\n4 1 5 4 1 1\r\n",
                "2 1 0 \r\n3 2 4 4 4 4 \r\n"
            ]
        ],
        "private_cases": []
    }
]