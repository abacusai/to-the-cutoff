[
    {
        "name": "Helping the Nature",
        "description": "Little Leon lives in the forest. He has recently noticed that some trees near\nhis favourite path are withering, while the other ones are overhydrated so he\ndecided to learn how to control the level of the soil moisture to save the\ntrees. There are \n    n\n trees growing near the path, the current levels of\nmoisture of each tree are denoted by the array \n    a_1, a_2, \n    \u2026, a_n\n.\nLeon has learned three abilities which will help him to dry and water the\nsoil. Choose a position \n    i\n and decrease the level of moisture of the\ntrees \n    1, 2, \n    \u2026, i\n by \n    1\n. Choose a position \n    i\n and\ndecrease the level of moisture of the trees \n    i, i + 1, \n    \u2026, n\n by\n\n    1\n. Increase the level of moisture of all trees by \n    1\n. Leon wants to\nknow the minimum number of actions he needs to perform to make the moisture of\neach tree equal to \n    0\n. Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 2 \n    \u00b7 10^4\n) \u2014 the number of test cases. The\ndescription of \n    t\n test cases follows. The first line of each test case\ncontains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 200\n     000\n). The\nsecond line of each test case contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    -10^9 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the initial levels of trees\nmoisture. It is guaranteed that the sum of \n    n\n over all test cases doesn't\nexceed \n    200\n     000\n. Output For each test case output a single integer \u2014\nthe minimum number of actions. It can be shown that the answer exists. Example\nInput 4 3 -2 -2 -2 3 10 4 7 4 4 -4 4 -4 5 1 -2 3 -4 5 Output 2 13 36 33 Note\nIn the first test case it's enough to apply the operation of adding \n    1\n to\nthe whole array \n    2\n times. In the second test case you can apply the\noperation of decreasing \n    4\n times on the prefix of length \n    3\n and get\nan array \n    6, 0, 3\n. After that apply the operation of decreasing \n    6\n\ntimes on the prefix of length \n    1\n and \n    3\n times on the suffix of\nlength \n    1\n. In total, the number of actions will be \n    4 + 6 + 3 = 13\n.\nIt can be shown that it's impossible to perform less actions to get the\nrequired array, so the answer is \n    13\n.\n\n",
        "cf_contest_id": 1700,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3\r\n-2 -2 -2\r\n3\r\n10 4 7\r\n4\r\n4 -4 4 -4\r\n5\r\n1 -2 3 -4 5\r\n",
                "2\r\n13\r\n36\r\n33\r\n"
            ]
        ],
        "private_cases": []
    }
]