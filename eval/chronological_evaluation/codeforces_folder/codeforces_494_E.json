[
    {
        "name": "Sharti",
        "description": "During the last 24 hours Hamed and Malek spent all their time playing\n\"Sharti\". Now they are too exhausted to finish the last round. So they asked\nyou for help to determine the winner of this round. \"Sharti\" is played on a n\n\u00d7 n board with some of cells colored white and others colored black. The rows\nof the board are numbered from top to bottom using number 1 to n. Also the\ncolumns of the board are numbered from left to right using numbers 1 to n. The\ncell located at the intersection of i-th row and j-th column is denoted by (i,\nj). The players alternatively take turns. In each turn the player must choose\na square with side-length at most k with its lower-right cell painted white.\nThen the colors of all the cells in this square are inversed (white cells\nbecome black and vice-versa). The player who cannot perform a move in his turn\nloses. You know Hamed and Malek are very clever and they would have played\ntheir best moves at each turn. Knowing this and the fact that Hamed takes the\nfirst turn, given the initial board as described in the input, you must\ndetermine which one of them will be the winner. Input In this problem the\ninitial board is specified as a set of m rectangles. All cells that lie inside\nat least one of these rectangles are colored white and the rest are colored\nblack. In the first line of input three space-spereated integers n, m, k (1 \u2264\nk \u2264 n \u2264 10^9, 1 \u2264 m \u2264 5\u00b710^4) follow, denoting size of the board, number of\nrectangles and maximum size of the turn square during the game, respectively.\nIn i-th line of the next m lines four space-seperated integers ai, bi, ci, di\n(1 \u2264 ai \u2264 ci \u2264 n, 1 \u2264 bi \u2264 di \u2264 n) are given meaning that i-th rectangle\ndetermining the initial board is a rectangle with upper-left cell at (ai, bi)\nand lower-right cell at (ci, di). Output If Hamed wins, print \"Hamed\",\notherwise print \"Malek\" (without the quotes). Examples Input 5 2 1 1 1 3 3 2 2\n4 4 Output Malek Input 12 5 7 3 4 5 6 1 2 1 2 4 5 9 9 8 6 12 10 12 4 12 4\nOutput Hamed\n\n",
        "cf_contest_id": 494,
        "cf_index": "E",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "games"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 2 1\r\n1 1 3 3\r\n2 2 4 4\r\n",
                "Malek\r\n"
            ],
            [
                "12 5 7\r\n3 4 5 6\r\n1 2 1 2\r\n4 5 9 9\r\n8 6 12 10\r\n12 4 12 4\r\n",
                "Hamed\r\n"
            ]
        ],
        "private_cases": [
            [
                "17 5 4\r\n13 6 14 6\r\n9 5 12 14\r\n2 2 10 5\r\n9 3 15 8\r\n10 5 14 6\r\n",
                "Hamed\r\n"
            ],
            [
                "53 12 1\r\n9 3 48 41\r\n36 26 47 30\r\n36 36 43 45\r\n5 17 38 29\r\n17 1 19 16\r\n37 36 46 36\r\n2 23 29 41\r\n19 1 37 3\r\n10 24 53 26\r\n12 3 29 20\r\n28 47 45 51\r\n11 29 47 45\r\n",
                "Malek\r\n"
            ],
            [
                "64 13 64\r\n5 2 33 49\r\n2 21 38 36\r\n34 15 42 55\r\n24 43 39 45\r\n21 6 22 48\r\n23 23 59 48\r\n64 22 64 22\r\n64 32 64 32\r\n19 53 57 54\r\n29 10 63 34\r\n64 52 64 52\r\n17 11 22 56\r\n22 12 62 20\r\n",
                "Malek\r\n"
            ],
            [
                "64 13 63\r\n64 14 64 14\r\n21 11 60 53\r\n29 21 55 57\r\n18 13 26 61\r\n17 18 22 34\r\n39 13 63 61\r\n19 19 54 53\r\n64 56 64 56\r\n27 2 28 20\r\n64 32 64 32\r\n29 35 62 37\r\n47 33 61 48\r\n5 48 49 63\r\n",
                "Malek\r\n"
            ],
            [
                "370 28 40\r\n350 284 369 345\r\n74 7 199 242\r\n166 26 316 322\r\n37 242 131 284\r\n17 271 320 362\r\n23 89 203 136\r\n69 124 287 158\r\n187 152 215 279\r\n195 177 320 245\r\n240 130 256 340\r\n41 73 287 286\r\n29 211 139 255\r\n165 72 242 324\r\n193 257 328 356\r\n98 140 285 320\r\n120 103 348 183\r\n292 130 327 338\r\n47 168 157 266\r\n217 315 251 353\r\n129 40 268 133\r\n162 76 271 168\r\n7 91 234 193\r\n29 122 335 233\r\n135 194 154 310\r\n11 186 309 209\r\n123 6 273 154\r\n89 5 279 345\r\n110 66 118 197\r\n",
                "Hamed\r\n"
            ],
            [
                "100 2 8\r\n81 47 91 90\r\n40 65 70 90\r\n",
                "Malek\r\n"
            ],
            [
                "1000000000 1 1000000000\r\n71309616 221001596 715856134 318091713\r\n",
                "Hamed\r\n"
            ],
            [
                "1 1 1\r\n1 1 1 1\r\n",
                "Hamed\r\n"
            ],
            [
                "2 1 1\r\n1 1 2 1\r\n",
                "Malek\r\n"
            ],
            [
                "2 2 1\r\n1 2 2 2\r\n1 1 2 1\r\n",
                "Malek\r\n"
            ],
            [
                "2 2 2\r\n1 1 2 2\r\n1 1 1 1\r\n",
                "Hamed\r\n"
            ],
            [
                "2 1 2\r\n1 1 1 2\r\n",
                "Malek\r\n"
            ],
            [
                "1000000000 1 1000000000\r\n1 1 1000000000 1000000000\r\n",
                "Hamed\r\n"
            ],
            [
                "1000000000 1 1\r\n1 1 1000000000 1000000000\r\n",
                "Malek\r\n"
            ],
            [
                "1000000000 1 3\r\n1 1 1000000000 1000000000\r\n",
                "Malek\r\n"
            ]
        ]
    }
]