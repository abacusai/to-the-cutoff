[
    {
        "name": "Decinc Dividing",
        "description": "Let's call an array \n    a\n of \n    m\n integers \n    a_1, a_2, \n    \u2026, a_m\n\nDecinc if \n    a\n can be made increasing by removing a decreasing subsequence\n(possibly empty) from it. For example, if \n    a = [3, 2, 4, 1, 5]\n, we can\nremove the decreasing subsequence \n    [a_1, a_4]\n from \n    a\n and obtain\n\n    a = [2, 4, 5]\n, which is increasing.You are given a permutation \n    p\n\nof numbers from \n    1\n to \n    n\n. Find the number of pairs of integers\n\n    (l, r)\n with \n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 n\n such that \n    p[l \n    \u2026\n    r]\n (the subarray of \n    p\n from \n    l\n to \n    r\n) is a Decinc array.\nInput The first line contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the size of \n    p\n. The second line contains \n    n\n\nintegers \n    p_1, p_2, \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n, all\n\n    p_i\n are distinct) \u2014 elements of the permutation. Output Output the\nnumber of pairs of integers \n    (l, r)\n such that \n    p[l \n    \u2026 r]\n (the\nsubarray of \n    p\n from \n    l\n to \n    r\n) is a Decinc array. \n    (1 \n    \u2264 l\n    \n    \u2264 r \n    \u2264 n)\n Examples Input 3 2 3 1 Output 6 Input 6 4 5 2 6 1 3 Output\n19 Input 10 7 10 1 8 3 9 2 4 6 5 Output 39 Note In the first sample, all\nsubarrays are Decinc. In the second sample, all subarrays except \n    p[1\n    \n    \u2026 6]\n and \n    p[2 \n    \u2026 6]\n are Decinc.\n\n",
        "cf_contest_id": 1693,
        "cf_index": "D",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2 3 1\r\n",
                "6\r\n"
            ],
            [
                "6\r\n4 5 2 6 1 3\r\n",
                "19\r\n"
            ],
            [
                "10\r\n7 10 1 8 3 9 2 4 6 5\r\n",
                "39\r\n"
            ]
        ],
        "private_cases": [
            [
                "20\r\n2 1 13 10 12 18 15 19 5 14 16 9 3 8 17 11 7 20 6 4\r\n",
                "90\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n"
            ]
        ]
    }
]