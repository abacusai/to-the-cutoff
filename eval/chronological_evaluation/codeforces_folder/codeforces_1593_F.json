[
    {
        "name": "Red-Black Number",
        "description": "It is given a non-negative integer \n    x\n, the decimal representation of\nwhich contains \n    n\n digits. You need to color each its digit in red or\nblack, so that the number formed by the red digits is divisible by \n    A\n,\nand the number formed by the black digits is divisible by \n    B\n. At least\none digit must be colored in each of two colors. Consider, the count of digits\ncolored in red is \n    r\n and the count of digits colored in black is \n    b\n.\nAmong all possible colorings of the given number \n    x\n, you need to output\nany such that the value of \n    |r - b|\n is the minimum possible. Note that\nthe number \n    x\n and the numbers formed by digits of each color, may contain\nleading zeros. Example of painting a number for \n    A = 3\n and \n    B = 13\n\nThe figure above shows an example of painting the number \n    x = 02165\n of\n\n    n = 5\n digits for \n    A = 3\n and \n    B = 13\n. The red digits form the\nnumber \n    015\n, which is divisible by \n    3\n, and the black ones \u2014\n\n    26\n, which is divisible by \n    13\n. Note that the absolute value of the\ndifference between the counts of red and black digits is \n    1\n, it is\nimpossible to achieve a smaller value. Input The first line contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n) \u2014 the number of test cases. Then\n\n    t\n test cases follow. Each test case consists of two lines. The first\nline contains three integers \n    n\n, \n    A\n, \n    B\n (\n    2 \n    \u2264 n \n    \u2264\n    40\n, \n    1 \n    \u2264 A, B \n    \u2264 40\n). The second line contains a non-negative\ninteger \n    x\n containing exactly \n    n\n digits and probably containing\nleading zeroes. Output For each test case, output in a separate line: -1 if\nthe desired coloring does not exist; a string \n    s\n of \n    n\n characters,\neach of them is a letter 'R' or 'B'. If the \n    i\n-th digit of the number\n\n    x\n is colored in red, then the \n    i\n-th character of the string \n    s\n\nmust be the letter 'R', otherwise the letter 'B'. The number formed by digits\ncolored red should divisible by \n    A\n. The number formed by digits colored\nblack should divisible by \n    B\n. The value \n    |r-b|\n should be minimal,\nwhere \n    r\n is the count of red digits, \n    b\n is the count of black\ndigits. If there are many possible answers, print any of them. Example Input 4\n5 3 13 02165 4 2 1 1357 8 1 1 12345678 2 7 9 90 Output RBRBR -1 BBRRRRBB BR\nNote The first test case is considered in the statement. In the second test\ncase, there are no even digits, so it is impossible to form a number from its\ndigits that is divisible by \n    2\n. In the third test case, each coloring\ncontaining at least one red and one black digit is possible, so you can color\n\n    4\n digits in red and \n    4\n in black (\n    |4 - 4| = 0\n, it is\nimpossible to improve the result). In the fourth test case, there is a single\ndesired coloring.\n\n",
        "cf_contest_id": 1593,
        "cf_index": "F",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "implementation",
            "math",
            "meet-in-the-middle"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5 3 13\r\n02165\r\n4 2 1\r\n1357\r\n8 1 1\r\n12345678\r\n2 7 9\r\n90\r\n",
                "RRRBB\r\n-1\r\nRRRRBBBB\r\nBR\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n23 16 9\r\n28505567023795506270800\r\n3 20 6\r\n060\r\n28 10 6\r\n1611122802317480162756072780\r\n27 17 31\r\n128704957388558586635733234\r\n25 13 11\r\n1284326696960955811491101\r\n19 38 12\r\n4224528103090486440\r\n3 22 14\r\n353\r\n34 7 29\r\n1922182253225019226935253880035627\r\n9 34 32\r\n583402664\r\n22 20 3\r\n5008763398788016887600\r\n",
                "RRRRRRRRRBBRBBBBBRBRBBB\r\nRBR\r\nRRRRRRRRRRRRRBBRBBBBBBBBBBBB\r\nRRRRRRRRRRRBBBRBBRBRBBBBBBB\r\nRRRRRRRRRRRBRBBBBBBBBBBBB\r\nRRRRRRRBRBBRBBBRBBB\r\n-1\r\nRRRRRRRRRRRRRRRRBBBBBBBBBRBBBBBBBB\r\nRBBRRBRBB\r\nRRRRRRRRBRBRBRBBBBBBBB\r\n"
            ],
            [
                "10\r\n28 5 22\r\n4789175427296044790441148783\r\n17 4 28\r\n94236874888274502\r\n13 8 40\r\n7333524847860\r\n21 3 29\r\n554438726534290969542\r\n36 3 34\r\n596319660970817925629470813538369148\r\n10 3 36\r\n2789190681\r\n31 4 31\r\n6968946429684003818665841795869\r\n38 9 28\r\n74640984144004126150782466330029266163\r\n33 4 37\r\n157875322200262801458143793053552\r\n11 2 31\r\n39204082398\r\n",
                "-1\r\nRRRRRRRRBBBBBBBRB\r\nRRRRRRBBBBRBB\r\nRRRRRRRRBRRBBBBBBBRBB\r\nRRRRRRRRRRRRRRRRBRBBBBBBBBBRBBBBBBBB\r\nRRRBBBBRBR\r\nRRRRRRRRRRRRRRBBBBBRBBRBBBBBBBB\r\nRRRRRRRRRRRRRRRRBBBRBBBBBBBBBBRBBBBBBR\r\nRRRRRRRRRRRRRRRBBBBBBBRBBBBRBBBBB\r\nRRRRRRBBBBB\r\n"
            ],
            [
                "10\r\n16 34 2\r\n3080145287905638\r\n13 40 7\r\n0089837507600\r\n12 26 4\r\n504900136228\r\n10 33 5\r\n3367519030\r\n18 33 8\r\n368440784618366859\r\n15 28 2\r\n564320723043088\r\n20 25 10\r\n90881365659241634705\r\n21 33 10\r\n193543011872023368951\r\n32 23 2\r\n49599211201333016667808972646646\r\n25 27 4\r\n7004564619865593675698769\r\n",
                "RRRRRRRBBBBRBBBB\r\nRRRRRBBBRBBRB\r\nRRRBRBBRRBBB\r\nRRRBBBRBRB\r\nRRRRBBBRBBBRBRBBRR\r\nRRRRRRBBBBRBRBB\r\nRRRRRRRRBBBRBBBBBBBR\r\nRRBBBBBBBBRBBRRRRRRRR\r\nRRRRRRRRRRRRRRRBRBBBBBBBBBBBBBBB\r\nRRRRRRRRRRBRBBBBRBBBBBBBR\r\n"
            ],
            [
                "10\r\n34 27 29\r\n4680423923885689351268221050910162\r\n18 20 28\r\n632717223190122475\r\n36 30 39\r\n205693033266128118108490357454096540\r\n32 30 26\r\n14493910058890165567787384171420\r\n15 35 23\r\n749516121407610\r\n7 21 37\r\n5581718\r\n36 31 35\r\n538812786399709272241989826944138635\r\n13 24 26\r\n9771271729268\r\n16 38 39\r\n7473527007106806\r\n36 34 20\r\n620857178824909691876428215709989000\r\n",
                "RRRRRRRRRRRRRRBRBBBBBBRRBBBBBBBBBB\r\n-1\r\n-1\r\nRRRRRRRRRRRRRBBBRBBBBBBRBBBBBBBR\r\nRRRRRBRBBBRBBBR\r\nRBRRRBB\r\nRRRRRRRRRRRRRRRRBBBBBBBBBBRBBBBBBBRB\r\nRRRRRBRBBBBRB\r\nRRRRBRRRBBBBBBRB\r\nRRRRRRRRRRRRRRRRBRBBBBBBBBBBRBBBBBBB\r\n"
            ],
            [
                "10\r\n37 12 2\r\n2103968358384347339235846328637916480\r\n27 11 14\r\n734756013677116009036170024\r\n21 6 12\r\n878679682872005429809\r\n34 10 9\r\n6061231753685405463692368879547700\r\n30 30 33\r\n152804125317251272661156387280\r\n20 10 20\r\n68601552849978162020\r\n20 30 39\r\n01755512860125996207\r\n24 10 22\r\n901556944001676570261128\r\n40 20 3\r\n4500214320199565808754905001321393166577\r\n29 27 39\r\n32319098730151116487543015224\r\n",
                "RRRRRRRRRRRRRRRRRBBRBBRBBBBBBBBBBBBBB\r\nRRRRRRRRRRRRBBBBBBBBBBBBBBR\r\n-1\r\nRRRRRRRRRRRRRRRBBBBBRBBBBBBBBBBBRB\r\nRRRRRRRRRRRRRBBBRBBBBBBBBBBBBR\r\nRRRRRRRRRBBBBBBBBRBB\r\nRRRRRRBRRRBBBBBBBBRB\r\nRRRRRRRRRRBBBBBBRRBBBBBB\r\nRRRRRRRRRRRRRRRRRRRBBBBRBBBBBBBBBBBBBBBB\r\nRRRRRRRRRRRRRBBBBBBRBBBBBRBBB\r\n"
            ],
            [
                "10\r\n33 2 28\r\n169213088040707342793090633222504\r\n27 10 22\r\n888927592103007610020569202\r\n33 5 40\r\n518443821047450923485925400796000\r\n39 10 25\r\n186172004705305353062299647726429771130\r\n40 7 31\r\n9156685366138270556999738488497938139749\r\n34 3 36\r\n6166794691256477106674580604172295\r\n21 5 28\r\n982751152794268851322\r\n21 1 28\r\n519452772809065080888\r\n36 7 31\r\n344756541505849474925227718493331488\r\n31 9 32\r\n5470576741984509505708932270480\r\n",
                "RRRRRRRRRRRRRRRBRBBBBBBRBBBBBBBBB\r\nRRRRRRRRRRRRBBBRBRBBBBBBBBB\r\nRRRRRRRRRRRRRRRRBBBBRBBBBBBBBBBBB\r\nBBBBBBBBBBBBBBBBBRBRRRRRRRRRRRRRRRRRRRR\r\nRRRRRRRRRRRRRRRRRBRBBBBBRBBBBBBBRBBBBBBB\r\nRRRRRRRRRRRRBRBBBBBBBBRBBBBBBBRBRR\r\n-1\r\nRRRRRRRRRBRBBBBBBBBBB\r\nRRRRRRRRRRRRRRRRBBRBBBBBBBBRBBBBBBBB\r\nRRRRRRRRRRRRRRBBBBBBBBBBRBRBBBB\r\n"
            ],
            [
                "10\r\n20 38 1\r\n52840171718569421124\r\n29 32 3\r\n42977586284261635787571805171\r\n29 31 1\r\n12293716706279327043511470084\r\n40 36 7\r\n6495545933096764630367459855021490972321\r\n22 34 5\r\n9929193613324169130605\r\n33 23 4\r\n788521044374101726435044200002201\r\n29 36 3\r\n84612912768600500603826802257\r\n24 24 10\r\n287093114008407495143000\r\n22 32 9\r\n4211835696256605191261\r\n28 25 5\r\n8751058483897901460560405300\r\n",
                "RRRRRRRRBRBBRBBBBBBB\r\nRRRRRRRRRRBRRBRBBBRBBBBRBBBBB\r\nRRRRRRRRRRRRRBBBRBBBBRBBBBBBB\r\nRRRRRRRRRRRRRRRRRBRBBBBBBRBBRBBBBBBBBBBB\r\nRRRRRRRRBRBBRBRBBBBBBB\r\nRRRRRRRRRRRRRRBBBBBRBBBBRBBBBBBBR\r\nRRRRRRRRRRRRBBRBBBBBRBBRBBBBB\r\nRRRRRRRRRRBBRRBBBBBBBBBB\r\nRRRRRRBRBRBBBBBBRBRRBB\r\nRRRRRRRRRRRRRBBBBBBRBBBBBBBB\r\n"
            ],
            [
                "10\r\n20 23 37\r\n53338626771167108665\r\n24 30 20\r\n062000839610793831896085\r\n27 33 21\r\n237879777352014303857932941\r\n36 31 22\r\n854757185729403880906436469032745042\r\n38 20 40\r\n90403079818944788784116427663735460200\r\n24 38 30\r\n220150973648981596028250\r\n31 37 29\r\n3643885530661367813670897477608\r\n40 36 22\r\n7671687074691665262958727085122301114670\r\n34 38 30\r\n9835434006582298156498107463302140\r\n30 29 24\r\n654379440849551459150046586805\r\n",
                "RRRRRBRRBBBBRBRBBBBR\r\n-1\r\nRRRRRRRRRRRRBBBBBBRBBBBBBBB\r\nRRRRRRRRRRRRRRRRBBBBBBBBRBBBBBBBRBBB\r\nRRRRRRRRRRRRRRRRRBRBBBBBBBBBBBBBBBRBBB\r\nRRRRRRRRRRBRBRBBBBBBBBBB\r\nRRRRRRRRRRRRBBBRBBBBRBRBBBRBBBB\r\nRRRRRRRRRRRRRRRRRBBRBBBBBBBBBRBBRBBBBBBB\r\nRRRRRRRRRRRRRRRBBBBBRBBBBBRBBBBBBB\r\nRRRRRRRRRRRBBBRBBRBRBBBBBBBBBR\r\n"
            ],
            [
                "10\r\n35 22 25\r\n54243024195949394186884792490775682\r\n35 22 16\r\n79903123608424125494412646799626662\r\n31 17 8\r\n3008730037142323886751823570944\r\n37 37 25\r\n6205497967665502291545261459136811539\r\n40 20 7\r\n6525030579914169364078654633992521274903\r\n32 29 23\r\n46803672854921210544504530164107\r\n30 22 6\r\n726700514711769768769080260382\r\n30 30 6\r\n186335941220658900351115806600\r\n34 27 9\r\n1920265555175645811064925350600485\r\n32 7 6\r\n64784706166199890866200633588165\r\n",
                "RRRRRRRRRRRRRRBBBBBRBBBBBBBBBBBBRRR\r\nRRRRRRRRRRRBBBBBRBBBBBBBBBRBBRBRRRR\r\nRRRRRRRRRRRRRRBBRBBBRBBBBBBBBBB\r\nRRRRBRBBRBBBBBBBBBBBBBBRRRBRRRRRRRRRR\r\nRRRRRRRRRRRRRRRRRRBBBBRBBBBBBBBBBBBBBBRB\r\nRRRRRRRRRRRRBBRBBBRBBRBBRBBBBBBB\r\nRRRRRRRRRRRRBRBBBRBBBBRBBBBBBB\r\nRRRRRRRRRRRRRBBBBBBBRBBBBRBBBB\r\nRRRRRRRRRRRRRRRBBBBRBBRBBBBBBBBBBB\r\nRRRRRRRRRRRRRBRBBBBBBBBBBBRBBBBR\r\n"
            ],
            [
                "10\r\n36 28 27\r\n380272145768482886549948756343874361\r\n33 23 29\r\n254795943194456053080674694350512\r\n35 21 20\r\n43216378563199263983951316698205101\r\n40 37 22\r\n3991651073671036829280487577668079761643\r\n30 29 32\r\n954016388348821172318496880229\r\n40 26 23\r\n6296637704737650558583877677647480434649\r\n33 34 26\r\n918972770260073214041199354396690\r\n37 28 28\r\n4955455758827127951614790280394202240\r\n38 21 37\r\n60751712291176730242657701851162627416\r\n36 28 32\r\n005652314972686159478169614768470008\r\n",
                "RRRRRRRRRRRRRRRRBBRBBBBBBBBBBBBBBBRB\r\nRRRRRRRRRRRRRRBRBBRBBRBBBBBBBBBBB\r\nRRRRRRRRRRRRRRBBBBBBBBRBBBBBBBBRRBR\r\nRRRRRRRRRRRRRRRRRBBRBBBBBBRBBBBBBBBBBBBR\r\nRRRRRRRRRBBBBBBBRBBBRBRBBBBRRR\r\nRRRRRRRRRRRRRRRRRRBBBBRBBRBBBBBBBBBBBBBB\r\nRRRRRRRRRRRRRRRBBBBRBBBBBBRBBBBBB\r\nRRRRRRRRRRRRRRRRRBBRBBBBBBBBBBBBRBBBB\r\nRRRRRRRRRRRRRRRRBBBBBBBBBRBRRBBBBBBBBB\r\nRRRRRRRRRRRRRRRBBBRBRBBBBBBBBBBBRBBB\r\n"
            ]
        ]
    }
]