[
    {
        "name": "Comparison String",
        "description": "You are given a string \n    s\n of length \n    n\n, where each character is\neither < or >. An array \n    a\n consisting of \n    n+1\n elements is compatible\nwith the string \n    s\n if, for every \n    i\n from \n    1\n to \n    n\n, the\ncharacter \n    s_i\n represents the result of comparing \n    a_i\n and\n\n    a_i+1\n, i. e.: \n    s_i\n is < if and only if \n    a_i < a_i+1\n;\n\n    s_i\n is > if and only if \n    a_i > a_i+1\n. For example, the array\n\n    [1, 2, 5, 4, 2]\n is compatible with the string <<>>. There are other\narrays with are compatible with that string, for example, \n    [13, 37, 42, 37,\n    13]\n. The cost of the array is the number of different elements in it. For\nexample, the cost of \n    [1, 2, 5, 4, 2]\n is \n    4\n; the cost of \n    [13, 37,\n    42, 37, 13]\n is \n    3\n. You have to calculate the minimum cost among all\narrays which are compatible with the given string \n    s\n. Input The first\nline contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 500\n) \u2014 the number of\ntest cases. Each test case consists of two lines: the first line contains one\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n); the second line contains the\nstring \n    s\n, consisting of \n    n\n characters. Each character of \n    s\n is\neither < or >. Output For each test case, print one integer \u2014 the minimum cost\namong all arrays which are compatible with the given string \n    s\n. Example\nInput 4 4 <<>> 4 >><< 5 >>>>> 7 <><><>< Output 3 3 6 2 Note In the first test\ncase of the example, the array can be \n    [13, 37, 42, 37, 13]\n. In the\nsecond test case of the example, the array can be \n    [42, 37, 13, 37, 42]\n.\n\n",
        "cf_contest_id": 1837,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n4\r\n<<>>\r\n4\r\n>><<\r\n5\r\n>>>>>\r\n7\r\n<><><><\r\n",
                "3\r\n3\r\n6\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "43\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n1\r\n>\r\n",
                "2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n"
            ]
        ]
    }
]