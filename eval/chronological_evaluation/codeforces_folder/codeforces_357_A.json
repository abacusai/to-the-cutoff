[
    {
        "name": "Group of Students",
        "description": "At the beginning of the school year Berland State University starts two city\nschool programming groups, for beginners and for intermediate coders. The\nchildren were tested in order to sort them into groups. According to the\nresults, each student got some score from 1 to m points. We know that c1\nschoolchildren got 1 point, c2 children got 2 points, ..., cm children got m\npoints. Now you need to set the passing rate k (integer from 1 to m): all\nschoolchildren who got less than k points go to the beginner group and those\nwho get at strictly least k points go to the intermediate group. We know that\nif the size of a group is more than y, then the university won't find a room\nfor them. We also know that if a group has less than x schoolchildren, then it\nis too small and there's no point in having classes with it. So, you need to\nsplit all schoolchildren into two groups so that the size of each group was\nfrom x to y, inclusive. Help the university pick the passing rate in a way\nthat meets these requirements. Input The first line contains integer m (2 \u2264 m\n\u2264 100). The second line contains m integers c1, c2, ..., cm, separated by\nsingle spaces (0 \u2264 ci \u2264 100). The third line contains two space-separated\nintegers x and y (1 \u2264 x \u2264 y \u2264 10000). At least one ci is greater than 0.\nOutput If it is impossible to pick a passing rate in a way that makes the size\nof each resulting groups at least x and at most y, print 0. Otherwise, print\nan integer from 1 to m \u2014 the passing rate you'd like to suggest. If there are\nmultiple possible answers, print any of them. Examples Input 5 3 4 3 2 1 6 8\nOutput 3 Input 5 0 3 3 4 2 3 10 Output 4 Input 2 2 5 3 6 Output 0 Note In the\nfirst sample the beginner group has 7 students, the intermediate group has 6\nof them. In the second sample another correct answer is 3.\n\n",
        "cf_contest_id": 357,
        "cf_index": "A",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3 4 3 2 1\r\n6 8\r\n",
                "3\r\n"
            ],
            [
                "5\r\n0 3 3 4 2\r\n3 10\r\n",
                "4\r\n"
            ],
            [
                "2\r\n2 5\r\n3 6\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n0 1 0\r\n2 10\r\n",
                "0\r\n"
            ],
            [
                "5\r\n2 2 2 2 2\r\n5 5\r\n",
                "0\r\n"
            ],
            [
                "10\r\n1 1 1 1 1 1 1 1 1 1\r\n1 10\r\n",
                "10\r\n"
            ],
            [
                "10\r\n1 1 1 1 1 1 1 1 1 1\r\n5 5\r\n",
                "6\r\n"
            ],
            [
                "6\r\n0 0 1 1 0 0\r\n1 6\r\n",
                "4\r\n"
            ],
            [
                "7\r\n3 2 3 3 2 1 1\r\n5 10\r\n",
                "4\r\n"
            ],
            [
                "4\r\n1 0 0 100\r\n1 100\r\n",
                "4\r\n"
            ],
            [
                "100\r\n46 6 71 27 94 59 99 82 5 41 18 89 86 2 31 35 52 18 1 14 54 11 28 83 42 15 13 77 22 70 87 65 79 35 44 71 79 9 95 57 5 59 42 62 66 26 33 66 67 45 39 17 97 28 36 100 52 23 68 29 83 6 61 85 71 2 85 98 85 65 95 53 35 96 29 28 82 80 52 60 61 46 46 80 11 3 35 6 12 10 64 7 7 7 65 93 58 85 20 12\r\n2422 2429\r\n",
                "52\r\n"
            ],
            [
                "10\r\n3 6 1 5 3 7 0 1 0 8\r\n16 18\r\n",
                "6\r\n"
            ],
            [
                "10\r\n3 3 0 4 0 5 2 10 7 0\r\n10 24\r\n",
                "8\r\n"
            ],
            [
                "10\r\n9 4 7 7 1 3 7 3 8 5\r\n23 31\r\n",
                "7\r\n"
            ],
            [
                "10\r\n9 6 9 5 5 4 3 3 9 10\r\n9 54\r\n",
                "10\r\n"
            ],
            [
                "10\r\n2 4 8 5 2 2 2 5 6 2\r\n14 24\r\n",
                "7\r\n"
            ],
            [
                "10\r\n10 58 86 17 61 12 75 93 37 30\r\n10 469\r\n",
                "10\r\n"
            ],
            [
                "10\r\n56 36 0 28 68 54 34 48 28 92\r\n92 352\r\n",
                "10\r\n"
            ],
            [
                "10\r\n2 81 94 40 74 62 39 70 87 86\r\n217 418\r\n",
                "8\r\n"
            ],
            [
                "10\r\n48 93 9 96 70 14 100 93 44 79\r\n150 496\r\n",
                "8\r\n"
            ],
            [
                "10\r\n94 85 4 9 30 45 90 76 0 65\r\n183 315\r\n",
                "7\r\n"
            ],
            [
                "100\r\n1 0 7 9 0 4 3 10 9 4 9 7 4 4 7 7 6 1 3 3 8 1 4 3 5 8 0 0 6 2 3 5 0 1 5 8 6 3 2 4 9 5 8 6 0 2 5 1 9 5 9 0 6 0 4 5 9 7 1 4 7 5 4 5 6 8 2 3 3 2 8 2 9 5 9 2 4 7 7 8 10 1 3 0 8 0 9 1 1 7 7 8 9 3 5 9 9 8 0 8\r\n200 279\r\n",
                "63\r\n"
            ],
            [
                "100\r\n5 4 9 7 8 10 7 8 10 0 10 9 7 1 0 7 8 5 5 8 7 7 7 2 5 8 0 7 5 7 1 7 6 5 4 10 6 1 4 4 8 7 0 3 2 10 8 6 1 3 2 6 8 1 9 3 9 5 2 0 3 6 7 5 10 0 2 8 3 10 1 3 8 8 0 2 10 3 4 4 0 7 4 0 9 7 10 2 7 10 9 9 6 6 8 1 10 1 2 0\r\n52 477\r\n",
                "91\r\n"
            ],
            [
                "100\r\n5 1 6 6 5 4 5 8 0 2 10 1 10 0 6 6 0 1 5 7 10 5 8 4 4 5 10 4 10 3 0 10 10 1 2 6 2 6 3 9 4 4 5 5 7 7 7 4 3 2 1 4 5 0 2 1 8 5 4 5 10 7 0 3 5 4 10 4 10 7 10 1 8 3 9 8 6 9 5 7 3 4 7 8 4 0 3 4 4 1 6 6 2 0 1 5 3 3 9 10\r\n22 470\r\n",
                "98\r\n"
            ],
            [
                "100\r\n73 75 17 93 35 7 71 88 11 58 78 33 7 38 14 83 30 25 75 23 60 10 100 7 90 51 82 0 78 54 61 32 20 90 54 45 100 62 40 99 43 86 87 64 10 41 29 51 38 22 5 63 10 64 90 20 100 33 95 72 40 82 92 30 38 3 71 85 99 66 4 26 33 41 85 14 26 61 21 96 29 40 25 14 48 4 30 44 6 41 71 71 4 66 13 50 30 78 64 36\r\n2069 2800\r\n",
                "57\r\n"
            ],
            [
                "100\r\n86 19 100 37 9 49 97 9 70 51 14 31 47 53 76 65 10 40 4 92 2 79 22 70 85 58 73 96 89 91 41 88 70 31 53 33 22 51 10 56 90 39 70 38 86 15 94 63 82 19 7 65 22 83 83 71 53 6 95 89 53 41 95 11 32 0 7 84 39 11 37 73 20 46 18 28 72 23 17 78 37 49 43 62 60 45 30 69 38 41 71 43 47 80 64 40 77 99 36 63\r\n1348 3780\r\n",
                "74\r\n"
            ],
            [
                "100\r\n65 64 26 48 16 90 68 32 95 11 27 29 87 46 61 35 24 99 34 17 79 79 11 66 14 75 31 47 43 61 100 32 75 5 76 11 46 74 81 81 1 25 87 45 16 57 24 76 58 37 42 0 46 23 75 66 75 11 50 5 10 11 43 26 38 42 88 15 70 57 2 74 7 72 52 8 72 19 37 38 66 24 51 42 40 98 19 25 37 7 4 92 47 72 26 76 66 88 53 79\r\n1687 2986\r\n",
                "65\r\n"
            ],
            [
                "100\r\n78 43 41 93 12 76 62 54 85 5 42 61 93 37 22 6 50 80 63 53 66 47 0 60 43 93 90 8 97 64 80 22 23 47 30 100 80 75 84 95 35 69 36 20 58 99 78 88 1 100 10 69 57 77 68 61 62 85 4 45 24 4 24 74 65 73 91 47 100 35 25 53 27 66 62 55 38 83 56 20 62 10 71 90 41 5 75 83 36 75 15 97 79 52 88 32 55 42 59 39\r\n873 4637\r\n",
                "85\r\n"
            ],
            [
                "100\r\n12 25 47 84 72 40 85 37 8 92 85 90 12 7 45 14 98 62 31 62 10 89 37 65 77 29 5 3 21 21 10 98 44 37 37 37 50 15 69 27 19 99 98 91 63 42 32 68 77 88 78 35 13 44 4 82 42 76 28 50 65 64 88 46 94 37 40 7 10 58 21 31 17 91 75 86 3 9 9 14 72 20 40 57 11 75 91 48 79 66 53 24 93 16 58 4 10 89 75 51\r\n666 4149\r\n",
                "88\r\n"
            ],
            [
                "10\r\n8 0 2 2 5 1 3 5 2 2\r\n13 17\r\n",
                "6\r\n"
            ],
            [
                "10\r\n10 4 4 6 2 2 0 5 3 7\r\n19 24\r\n",
                "5\r\n"
            ],
            [
                "10\r\n96 19 75 32 94 16 81 2 93 58\r\n250 316\r\n",
                "6\r\n"
            ],
            [
                "10\r\n75 65 68 43 89 57 7 58 51 85\r\n258 340\r\n",
                "6\r\n"
            ],
            [
                "100\r\n59 51 86 38 90 10 36 3 97 35 32 20 25 96 49 39 66 44 64 50 97 68 50 79 3 33 72 96 32 74 67 9 17 77 67 15 1 100 99 81 18 1 15 36 7 34 30 78 10 97 7 19 87 47 62 61 40 29 1 34 6 77 76 21 66 11 65 96 82 54 49 65 56 90 29 75 48 77 48 53 91 21 98 26 80 44 57 97 11 78 98 45 40 88 27 27 47 5 26 6\r\n2479 2517\r\n",
                "53\r\n"
            ],
            [
                "100\r\n5 11 92 53 49 42 15 86 31 10 30 49 21 66 14 13 80 25 21 25 86 20 86 83 36 81 21 23 0 30 64 85 15 33 74 96 83 51 84 4 35 65 10 7 11 11 41 80 51 51 74 52 43 83 88 38 77 20 14 40 37 25 27 93 27 77 48 56 93 65 79 33 91 14 9 95 13 36 24 2 66 31 56 28 49 58 74 17 88 36 46 73 54 18 63 22 2 41 8 50\r\n2229 2279\r\n",
                "52\r\n"
            ],
            [
                "2\r\n0 1\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "4\r\n1 0 0 4\r\n1 3\r\n",
                "0\r\n"
            ],
            [
                "4\r\n1 0 0 0\r\n1 10\r\n",
                "0\r\n"
            ],
            [
                "3\r\n2 1 4\r\n3 3\r\n",
                "0\r\n"
            ],
            [
                "5\r\n2 0 2 0 0\r\n2 2\r\n",
                "3\r\n"
            ],
            [
                "4\r\n1 2 3 4\r\n1 7\r\n",
                "4\r\n"
            ],
            [
                "2\r\n7 1\r\n1 6\r\n",
                "0\r\n"
            ],
            [
                "5\r\n1 3 7 8 9\r\n4 6\r\n",
                "0\r\n"
            ],
            [
                "2\r\n5 2\r\n5 6\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 0\r\n1 2\r\n",
                "0\r\n"
            ],
            [
                "4\r\n2 3 9 10\r\n5 14\r\n",
                "4\r\n"
            ],
            [
                "3\r\n1 2 1\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "4\r\n2 3 9 50\r\n5 30\r\n",
                "0\r\n"
            ],
            [
                "3\r\n7 1 1\r\n6 8\r\n",
                "0\r\n"
            ],
            [
                "6\r\n1 1 2 3 4 5\r\n3 9\r\n",
                "5\r\n"
            ],
            [
                "3\r\n4 5 5\r\n4 9\r\n",
                "3\r\n"
            ],
            [
                "6\r\n1 2 3 4 5 6\r\n1 3\r\n",
                "0\r\n"
            ],
            [
                "5\r\n3 4 3 2 10\r\n6 8\r\n",
                "0\r\n"
            ],
            [
                "5\r\n1 1 3 4 6\r\n2 2\r\n",
                "0\r\n"
            ],
            [
                "5\r\n5 3 5 8 10\r\n2 20\r\n",
                "4\r\n"
            ],
            [
                "4\r\n0 0 5 0\r\n3 6\r\n",
                "0\r\n"
            ],
            [
                "8\r\n1 1 1 1 2 2 2 1\r\n3 7\r\n",
                "6\r\n"
            ],
            [
                "3\r\n1 100 100\r\n101 200\r\n",
                "0\r\n"
            ]
        ]
    }
]