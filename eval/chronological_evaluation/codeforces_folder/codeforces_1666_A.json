[
    {
        "name": "Admissible Map",
        "description": "A map is a matrix consisting of symbols from the set of 'U', 'L', 'D', and\n'R'. A map graph of a map matrix \n    a\n is a directed graph with \n    n \n    \u00b7\n    m\n vertices numbered as \n    (i, j)\n (\n    1 \n    \u2264 i \n    \u2264 n; 1 \n    \u2264 j \n    \u2264\n    m\n), where \n    n\n is the number of rows in the matrix, \n    m\n is the\nnumber of columns in the matrix. The graph has \n    n \n    \u00b7 m\n directed\nedges \n    (i, j) \n    \u2192 (i + di_a_i, j, j + dj_a_i, j)\n, where\n\n    (di_U, dj_U) = (-1, 0)\n; \n    (di_L, dj_L) = (0, -1)\n; \n    (di_D, dj_D) =\n    (1, 0)\n; \n    (di_R, dj_R) = (0, 1)\n. A map graph is valid when all edges\npoint to valid vertices in the graph. An admissible map is a map such that its\nmap graph is valid and consists of a set of cycles. A description of a map\n\n    a\n is a concatenation of all rows of the map \u2014 a string \n    a_1,1\n    a_1,2\n    \u2026 a_1, m a_2, 1\n    \u2026 a_n, m\n. You are given a\nstring \n    s\n. Your task is to find how many substrings of this string can\nconstitute a description of some admissible map. A substring of a string\n\n    s_1s_2 \n    \u2026 s_l\n of length \n    l\n is defined by a pair of indices\n\n    p\n and \n    q\n (\n    1 \n    \u2264 p \n    \u2264 q \n    \u2264 l\n) and is equal to\n\n    s_ps_p+1\n    \u2026 s_q\n. Two substrings of \n    s\n are considered\ndifferent when the pair of their indices \n    (p, q)\n differs, even if they\nrepresent the same resulting string. Input In the only input line, there is a\nstring \n    s\n, consisting of at least one and at most \n    20\n     000\n symbols\n'U', 'L', 'D', or 'R'. Output Output one integer \u2014 the number of substrings of\n\n    s\n that constitute a description of some admissible map. Examples Input\nRDUL Output 2 Input RDRU Output 0 Input RLRLRL Output 6 Note In the first\nexample, there are two substrings that can constitute a description of an\nadmissible map \u2014 \"RDUL\" as a matrix of size \n    2 \n    \u00d7 2\n (pic. 1) and\n\"DU\" as a matrix of size \n    2 \n    \u00d7 1\n (pic. 2). In the second example,\nno substring can constitute a description of an admissible map. E. g. if we\ntry to look at the string \"RDRU\" as a matrix of size \n    2 \n    \u00d7 2\n, we\ncan find out that the resulting graph is not a set of cycles (pic. 3). In the\nthird example, three substrings \"RL\", two substrings \"RLRL\" and one substring\n\"RLRLRL\" can constitute an admissible map, some of them in multiple ways. E.\ng. here are two illustrations of substring \"RLRLRL\" as matrices of size \n    3\n    \n    \u00d7 2\n (pic. 4) and \n    1 \n    \u00d7 6\n (pic. 5).\n\n",
        "cf_contest_id": 1666,
        "cf_index": "A",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "RDUL\r\n",
                "2\r\n"
            ],
            [
                "RDRU\r\n",
                "0\r\n"
            ],
            [
                "RLRLRL\r\n",
                "6\r\n"
            ]
        ],
        "private_cases": [
            [
                "D\r\n",
                "0\r\n"
            ],
            [
                "DL\r\n",
                "0\r\n"
            ],
            [
                "RL\r\n",
                "1\r\n"
            ],
            [
                "DU\r\n",
                "1\r\n"
            ],
            [
                "RDULU\r\n",
                "2\r\n"
            ],
            [
                "RDDUULRDDD\r\n",
                "2\r\n"
            ],
            [
                "RLRLRLRLRL\r\n",
                "15\r\n"
            ],
            [
                "DUDUDUDUDU\r\n",
                "15\r\n"
            ],
            [
                "RDRDULULRR\r\n",
                "3\r\n"
            ],
            [
                "UUURDRDRDLRULLRLULUDRURDRULLRU\r\n",
                "2\r\n"
            ],
            [
                "RLRLRLRLRLRLRLRLRLRLRLRLRLRLRL\r\n",
                "120\r\n"
            ],
            [
                "DUDUDUDUDUDUDUDUDUDUDUDUDUDUDU\r\n",
                "120\r\n"
            ],
            [
                "RDRDRDRDRDRDRDULULULULULULULDL\r\n",
                "8\r\n"
            ],
            [
                "DLURRURRLDDUUDRDURDDLRLULLULDUULDDRDUURLLDDLRRLUDURLLRRRLLRLUDULDULUUDLLDLRLULDDURDDDLLUURRDRRDDRULU\r\n",
                "18\r\n"
            ],
            [
                "RLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRL\r\n",
                "1275\r\n"
            ],
            [
                "DUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDU\r\n",
                "1275\r\n"
            ],
            [
                "RDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDULULULULULULULULULULULULULULULULULULULULULULULULUL\r\n",
                "26\r\n"
            ],
            [
                "LRULLRUURRDUULDRULLLRLUDLDRUUURRDDRDLLDDRLUDLRLRRLRRUDUUULDDLUDUDRURUDLLRLDRLLDULRRURLDLDDDLUUUDRRUDRDURRRDLLDRDRRDULULRLLULULDLDLUURRRLRRUUUUDUUUULLURLUUDLURDUDDUDDURDDURRRLURDLUDDDDLRLDULRRRULLDDDDLLLDDLUDURDURLDDUDDRDLLULRRUDRRDRRRLUUULRLDDDDDDURRDULUDDDLDLLUDDUUDDDLLRDDRLRRLRDLDUDUDRULURRRULRLRD\r\n",
                "43\r\n"
            ],
            [
                "RLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRL\r\n",
                "11325\r\n"
            ],
            [
                "DUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDU\r\n",
                "11325\r\n"
            ],
            [
                "RDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDRDULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULULUL\r\n",
                "76\r\n"
            ]
        ]
    }
]