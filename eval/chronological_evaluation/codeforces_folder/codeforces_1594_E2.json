[
    {
        "name": "Rubik's Cube Coloring (hard version)",
        "description": "It is the hard version of the problem. The difference is that in this version,\nthere are nodes with already chosen colors. Theofanis is starving, and he\nwants to eat his favorite food, sheftalia. However, he should first finish his\nhomework. Can you help him with this problem? You have a perfect binary tree\nof \n    2^k - 1\n nodes \u2014 a binary tree where all vertices \n    i\n from \n    1\n\nto \n    2^k - 1 - 1\n have exactly two children: vertices \n    2i\n and \n    2i\n    + 1\n. Vertices from \n    2^k - 1\n to \n    2^k - 1\n don't have any\nchildren. You want to color its vertices with the \n    6\n Rubik's cube colors\n(White, Green, Red, Blue, Orange and Yellow). Let's call a coloring good when\nall edges connect nodes with colors that are neighboring sides in the Rubik's\ncube. A picture of Rubik's cube and its 2D map. More formally: a white node\ncan not be neighboring with white and yellow nodes; a yellow node can not be\nneighboring with white and yellow nodes; a green node can not be neighboring\nwith green and blue nodes; a blue node can not be neighboring with green and\nblue nodes; a red node can not be neighboring with red and orange nodes; an\norange node can not be neighboring with red and orange nodes; However, there\nare \n    n\n special nodes in the tree, colors of which are already chosen. You\nwant to calculate the number of the good colorings of the binary tree. Two\ncolorings are considered different if at least one node is colored with a\ndifferent color. The answer may be too large, so output the answer modulo\n\n    10^9+7\n. Input The first line contains the integers \n    k\n (\n    1 \n    \u2264 k\n    \n    \u2264 60\n) \u2014 the number of levels in the perfect binary tree you need to\ncolor. The second line contains the integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    min(2^k - 1, 2000)\n) \u2014 the number of nodes, colors of which are already\nchosen. The next \n    n\n lines contains integer \n    v\n (\n    1 \n    \u2264 v \n    \u2264\n    2^k - 1\n) and string \n    s\n \u2014 the index of the node and the color of the\nnode (\n    s\n is one of the white, yellow, green, blue, red and orange). It is\nguaranteed that each node \n    v\n appears in the input at most once. Output\nPrint one integer \u2014 the number of the different colorings modulo \n    10^9+7\n.\nExamples Input 3 2 5 orange 2 white Output 1024 Input 2 2 1 white 2 white\nOutput 0 Input 10 3 1 blue 4 red 5 orange Output 328925088 Note In the picture\nbelow, you can see one of the correct colorings of the first test example.\n\n",
        "cf_contest_id": 1594,
        "cf_index": "E2",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2\r\n5 orange\r\n2 white\r\n",
                "1024\r\n"
            ],
            [
                "2\r\n2\r\n1 white\r\n2 white\r\n",
                "0\r\n"
            ],
            [
                "10\r\n3\r\n1 blue\r\n4 red\r\n5 orange\r\n",
                "328925088\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n1 white\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1\r\n7 yellow\r\n",
                "4096\r\n"
            ],
            [
                "1\r\n1\r\n1 yellow\r\n",
                "1\r\n"
            ],
            [
                "2\r\n2\r\n1 green\r\n3 red\r\n",
                "4\r\n"
            ],
            [
                "5\r\n9\r\n31 yellow\r\n30 green\r\n26 yellow\r\n13 red\r\n2 red\r\n22 white\r\n12 red\r\n6 orange\r\n29 blue\r\n",
                "0\r\n"
            ]
        ]
    }
]