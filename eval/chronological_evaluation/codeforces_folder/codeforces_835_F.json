[
    {
        "name": "Roads in the Kingdom",
        "description": "In the Kingdom K., there are n towns numbered with integers from 1 to n. The\ntowns are connected by n bi-directional roads numbered with integers from 1 to\nn. The i-th road connects the towns ui and vi and its length is li. There is\nno more than one road between two towns. Also, there are no roads that connect\nthe towns with itself. Let's call the inconvenience of the roads the maximum\nof the shortest distances between all pairs of towns. Because of lack of\nmoney, it was decided to close down one of the roads so that after its removal\nit is still possible to reach any town from any other. You have to find the\nminimum possible inconvenience of the roads after closing down one of the\nroads. Input The first line contains the integer n (3 \u2264 n \u2264 2\u00b710^5) \u2014 the\nnumber of towns and roads. The next n lines contain the roads description. The\ni-th from these lines contains three integers ui, vi, li (1 \u2264 ui, vi \u2264 n, 1 \u2264\nli \u2264 10^9) \u2014 the numbers of towns connected by the i-th road and the length of\nthe i-th road. No road connects a town to itself, no two roads connect the\nsame towns. It's guaranteed that it's always possible to close down one of the\nroads so that all the towns are still reachable from each other. Output Print\na single integer \u2014 the minimum possible inconvenience of the roads after the\nrefusal from one of the roads. Examples Input 3 1 2 4 2 3 5 1 3 1 Output 5\nInput 5 2 3 7 3 1 9 4 1 8 3 5 4 4 5 5 Output 18\n\n",
        "cf_contest_id": 835,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 4\r\n2 3 5\r\n1 3 1\r\n",
                "5"
            ],
            [
                "5\r\n2 3 7\r\n3 1 9\r\n4 1 8\r\n3 5 4\r\n4 5 5\r\n",
                "18"
            ]
        ],
        "private_cases": [
            [
                "50\r\n50 22 1\r\n19 50 1\r\n50 35 1\r\n50 9 1\r\n22 33 1\r\n22 16 1\r\n6 22 1\r\n22 21 1\r\n45 33 1\r\n49 33 1\r\n33 40 1\r\n12 33 1\r\n47 45 1\r\n36 45 1\r\n24 45 1\r\n45 30 1\r\n1 19 1\r\n19 5 1\r\n19 20 1\r\n15 19 1\r\n19 43 1\r\n47 11 1\r\n36 38 1\r\n36 2 1\r\n31 36 1\r\n49 29 1\r\n14 49 1\r\n16 17 1\r\n32 16 1\r\n20 7 1\r\n41 15 1\r\n34 41 1\r\n41 42 1\r\n41 18 1\r\n41 8 1\r\n37 41 1\r\n29 10 1\r\n17 23 1\r\n34 13 1\r\n46 32 1\r\n6 26 1\r\n42 28 1\r\n48 35 1\r\n39 23 1\r\n3 30 1\r\n30 27 1\r\n4 8 1\r\n25 4 1\r\n4 44 1\r\n13 47 1\r\n",
                "11"
            ],
            [
                "10\r\n5 9 5\r\n2 9 7\r\n1 9 7\r\n5 6 5\r\n8 2 4\r\n2 3 1\r\n1 7 3\r\n4 1 2\r\n4 10 2\r\n9 3 6\r\n",
                "22"
            ],
            [
                "3\r\n1 2 100\r\n2 3 1\r\n1 3 1\r\n",
                "2"
            ],
            [
                "3\r\n1 2 1\r\n2 3 100\r\n1 3 1\r\n",
                "2"
            ],
            [
                "3\r\n1 2 1\r\n2 3 1\r\n1 3 100\r\n",
                "2"
            ],
            [
                "20\r\n11 17 411400597\r\n20 17 206843639\r\n20 11 348936448\r\n11 18 66521115\r\n18 1 947892512\r\n18 15 997613373\r\n3 15 301119325\r\n4 3 870020024\r\n7 4 306516051\r\n9 18 10401163\r\n8 9 881697660\r\n19 9 69137441\r\n16 8 392123322\r\n12 8 97808879\r\n2 16 571629008\r\n2 14 213796342\r\n10 17 453948856\r\n10 6 485476287\r\n5 10 171549963\r\n13 20 921856441\r\n",
                "4544916268"
            ]
        ]
    }
]