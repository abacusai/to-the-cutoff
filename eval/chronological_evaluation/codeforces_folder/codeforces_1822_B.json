[
    {
        "name": "Karina and Array",
        "description": "Karina has an array of \n    n\n integers \n    a_1, a_2, a_3, \n    \u2026, a_n\n. She\nloves multiplying numbers, so she decided that the beauty of a pair of numbers\nis their product. And the beauty of an array is the maximum beauty of a pair\nof adjacent elements in the array. For example, for \n    n = 4\n, \n    a=[3, 5,\n    7, 4]\n, the beauty of the array is \n    max\n(\n    3 \n    \u00b7 5\n, \n    5\n    \n    \u00b7 7\n, \n    7 \n    \u00b7 4\n) = \n    max\n(\n    15\n, \n    35\n, \n    28\n)\n= \n    35\n. Karina wants her array to be as beautiful as possible. In order to\nachieve her goal, she can remove some elements (possibly zero) from the array.\nAfter Karina removes all elements she wants to, the array must contain at\nleast two elements. Unfortunately, Karina doesn't have enough time to do all\nher tasks, so she asks you to calculate the maximum beauty of the array that\nshe can get by removing any number of elements (possibly zero). Input The\nfirst line of the input contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of a test case contains an integer \n    n\n (\n    2 \n    \u2264\n    n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of the array \n    a\n. The second line\nof a test case contains \n    n\n integers \n    a_1, a_2, a_3, \n    \u2026, a_n\n\n(\n    -10^9 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the elements of the array \n    a\n. The\nsum of all values of \n    n\n across all test cases does not exceed \n    2\n    \n    \u00b7 10^5\n. Output Output \n    t\n integers, each of which is the answer\nto the corresponding test case \u2014 the maximum beauty of the array that Karina\ncan get. Example Input 7 4 5 0 2 1 3 -1 1 0 5 2 0 -1 -4 0 6 -8 4 3 7 1 -9 6 0\n3 -2 5 -4 -4 2 1000000000 910000000 7 -1 -7 -2 -5 -4 -6 -3 Output 10 0 4 72 16\n910000000000000000 42 Note In the first test case of the example, to get the\nmaximum beauty, you need to remove the \n    2\n-nd element. In the second and\nthird test cases of the example, there is no need to remove any elements to\nachieve maximum beauty. In the fourth test case of the example, you need to\nleave only the first and last elements.\n\n",
        "cf_contest_id": 1822,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n4\r\n5 0 2 1\r\n3\r\n-1 1 0\r\n5\r\n2 0 -1 -4 0\r\n6\r\n-8 4 3 7 1 -9\r\n6\r\n0 3 -2 5 -4 -4\r\n2\r\n1000000000 910000000\r\n7\r\n-1 -7 -2 -5 -4 -6 -3\r\n",
                "10\r\n0\r\n4\r\n72\r\n16\r\n910000000000000000\r\n42\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2\r\n-1000000000 1000000000\r\n",
                "-1000000000000000000\r\n"
            ]
        ]
    }
]