[
    {
        "name": "Greedy Subsequences",
        "description": "For some array \n    c\n, let's denote a greedy subsequence as a sequence of\nindices \n    p_1\n, \n    p_2\n, ..., \n    p_l\n such that \n    1 \n    \u2264 p_1 < p_2 <\n    \n    \u2026 < p_l \n    \u2264 |c|\n, and for each \n    i \n    \u2208 [1, l - 1]\n, \n    p_i +\n    1\n is the minimum number such that \n    p_i + 1 > p_i\n and \n    c[p_i +\n    1] > c[p_i]\n. You are given an array \n    a_1, a_2, \n    \u2026, a_n\n. For each\nits subsegment of length \n    k\n, calculate the length of its longest greedy\nsubsequence. Input The first line contains two integers \n    n\n and \n    k\n\n(\n    1 \n    \u2264 k \n    \u2264 n \n    \u2264 10^6\n) \u2014 the length of array \n    a\n and the\nlength of subsegments. The second line contains \n    n\n integers \n    a_1, a_2,\n    \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014 array \n    a\n. Output Print \n    n\n    - k + 1\n integers \u2014 the maximum lengths of greedy subsequences of each\nsubsegment having length \n    k\n. The first number should correspond to\nsubsegment \n    a[1..k]\n, the second \u2014 to subsegment \n    a[2..k + 1]\n, and so\non. Examples Input 6 4 1 5 2 5 3 6 Output 2 2 3 Input 7 6 4 5 2 5 3 6 6 Output\n3 3 Note In the first example: \n    [1, 5, 2, 5]\n \u2014 the longest greedy\nsubsequences are \n    1, 2\n (\n    [c_1, c_2] = [1, 5]\n) or \n    3, 4\n\n(\n    [c_3, c_4] = [2, 5]\n). \n    [5, 2, 5, 3]\n \u2014 the sequence is \n    2, 3\n\n(\n    [c_2, c_3] = [2, 5]\n). \n    [2, 5, 3, 6]\n \u2014 the sequence is \n    1, 2,\n    4\n (\n    [c_1, c_2, c_4] = [2, 5, 6]\n). In the second example: \n    [4, 5, 2,\n    5, 3, 6]\n \u2014 the longest greedy subsequences are \n    1, 2, 6\n (\n    [c_1, c_2,\n    c_6] = [4, 5, 6]\n) or \n    3, 4, 6\n (\n    [c_3, c_4, c_6] = [2, 5, 6]\n).\n\n    [5, 2, 5, 3, 6, 6]\n \u2014 the subsequence is \n    2, 3, 5\n (\n    [c_2, c_3,\n    c_5] = [2, 5, 6]\n).\n\n",
        "cf_contest_id": 1132,
        "cf_index": "G",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 4\r\n1 5 2 5 3 6\r\n",
                "2 2 3 "
            ],
            [
                "7 6\r\n4 5 2 5 3 6 6\r\n",
                "3 3 "
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n",
                "1 "
            ]
        ]
    }
]