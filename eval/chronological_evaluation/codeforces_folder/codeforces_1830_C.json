[
    {
        "name": "Hyperregular Bracket Strings",
        "description": "You are given an integer \n    n\n and \n    k\n intervals. The \n    i\n-th\ninterval is \n    [l_i,r_i]\n where \n    1 \n    \u2264 l_i \n    \u2264 r_i \n    \u2264 n\n. Let\nus call a regular bracket sequence\n    ^\n    \u2020,\n of length\n\n    n\n hyperregular if for each \n    i\n such that \n    1 \n    \u2264 i \n    \u2264 k\n,\nthe substring \n    s_l_i s_l_i+1\n    \u2026 s_r_i\n is also\na regular bracket sequence. Your task is to count the number of hyperregular\nbracket sequences. Since this number can be really large, you are only\nrequired to find it modulo \n    998\n     244\n     353\n. \n    ^\n    \u2020\n A bracket\nsequence is a string containing only the characters \"(\" and \")\".\n\n    ^\n A bracket sequence is called regular if one can turn it into\na valid math expression by adding characters + and 1. For example, sequences\n(())(), (), (()(())) and the empty string are regular, while )(, ((), and\n(()))( are not. Input Each test contains multiple test cases. The first line\nof input contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^5\n) \u2014 the\nnumber of test cases. The description of test cases follows. The first line of\neach test case contains two integers \n    n\n and \n    k\n (\n    1 \n    \u2264 n \n    \u2264 3\n    \n    \u00b7 10^5\n, \n    0 \n    \u2264 k \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the length of the\nhyperregular bracket sequences and the number of intervals respectively. The\nfollowing \n    k\n lines of each test case contains two integers \n    l_i\n and\n\n    r_i\n (\n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 n\n). It is guaranteed that the sum of\n\n    n\n across all test cases does not exceed \n    3 \n    \u00b7 10^5\n and the sum\nof \n    k\n across all test cases does not exceed \n    3 \n    \u00b7 10^5\n. Output\nFor each test case, output the number of hyperregular bracket sequences modulo\n\n    998\n     244\n     353\n. Example Input 7 6 0 5 0 8 1 1 3 10 2 3 4 6 9 1000 3\n100 701 200 801 300 901 28 5 1 12 3 20 11 14 4 9 18 19 4 3 1 4 1 4 1 4 Output\n5 0 0 4 839415253 140 2 Note For the first testcase, the \n    5\n hyperregular\nbracket strings of length \n    6\n are: ((())), (()()), (())(), ()(()) and\n()()(). For the second testcase, there are no regular bracket strings of\nlength \n    5\n, and consequently, there are no hyperregular bracket strings of\nlength \n    5\n. For the third testcase, there are no hyperregular bracket\nstrings of length \n    8\n for which the substring \n    [1 \n    \u2026 3]\n is a\nregular bracket string. For the fourth testcase, there \n    4\n hyperregular\nbracket strings are: ((())(())), ((())()()), ()()((())) and ()()(()())\n\n",
        "cf_contest_id": 1830,
        "cf_index": "C",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "greedy",
            "hashing",
            "math",
            "number theory",
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n6 0\r\n5 0\r\n8 1\r\n1 3\r\n10 2\r\n3 4\r\n6 9\r\n1000 3\r\n100 701\r\n200 801\r\n300 901\r\n28 5\r\n1 12\r\n3 20\r\n11 14\r\n4 9\r\n18 19\r\n4 3\r\n1 4\r\n1 4\r\n1 4\r\n",
                "5\n0\n0\n4\n839415253\n140\n2\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n6 30\r\n2 3\r\n2 3\r\n1 6\r\n1 6\r\n4 5\r\n2 3\r\n4 5\r\n4 5\r\n4 5\r\n1 6\r\n4 5\r\n2 3\r\n4 5\r\n4 5\r\n1 6\r\n1 6\r\n4 5\r\n4 5\r\n1 6\r\n2 3\r\n1 6\r\n1 6\r\n1 6\r\n1 6\r\n1 6\r\n1 6\r\n1 6\r\n1 6\r\n1 6\r\n1 6\r\n",
                "1\n"
            ],
            [
                "1\r\n300000 0\r\n",
                "482670839\n"
            ]
        ]
    }
]