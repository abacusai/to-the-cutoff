[
    {
        "name": "The Robot",
        "description": "There is a robot on a checkered field that is endless in all directions.\nInitially, the robot is located in the cell with coordinates \n    (0, 0)\n. He\nwill execute commands which are described by a string of capital Latin letters\n'L', 'R', 'D', 'U'. When a command is executed, the robot simply moves in the\ncorresponding direction: 'L': one cell to the left (the \n    x\n-coordinate of\nthe current cell decreases by \n    1\n); 'R': one cell to the right (the\n\n    x\n-coordinate of the current cell is increased by \n    1\n); 'D': one cell\ndown (the \n    y\n-coordinate of the current cell decreases by \n    1\n); 'U':\none cell up (the \n    y\n-coordinate of the current cell is increased by\n\n    1\n). Your task is to put an obstacle in one cell of the field so that\nafter executing the commands, the robot will return to the original cell of\nits path \n    (0, 0)\n. Of course, an obstacle cannot be placed in the starting\ncell \n    (0, 0)\n. It is guaranteed that if the obstacle is not placed, then\nthe robot will not return to the starting cell. An obstacle affects the\nmovement of the robot in the following way: if it tries to go in a certain\ndirection, and there is an obstacle, then it simply remains in place (the\nobstacle also remains, that is, it does not disappear). Find any such cell of\nthe field (other than \n    (0, 0)\n) that if you put an obstacle there, the\nrobot will return to the cell \n    (0, 0)\n after the execution of all\ncommands. If there is no solution, then report it. Input The first line\ncontains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 500\n) \u2014 the number of test\ncases. Each test case consists of a single line containing \n    s\n \u2014 the\nsequence of commands, which are uppercase Latin letters 'L', 'R', 'D', 'U'\nonly. The length of \n    s\n is between \n    1\n and \n    5000\n, inclusive.\nAdditional constraint on \n    s\n: executing this sequence of commands leads\nthe robot to some cell other than \n    (0, 0)\n, if there are no obstacles. The\nsum of lengths of all \n    s\n in a test doesn't exceed \n    5000\n. Output For\neach test case print a single line: if there is a solution, print two integers\n\n    x\n and \n    y\n (\n    -10^9 \n    \u2264 x,y \n    \u2264 10^9\n) such that an obstacle\nin \n    (x, y)\n will force the robot to return back to the cell \n    (0, 0)\n;\notherwise, print two zeroes (i. e. 0 0). If there are multiple answers, you\ncan print any of them. Example Input 4 L RUUDL LLUU DDDUUUUU Output -1 0 1 2 0\n0 0 1\n\n",
        "cf_contest_id": 1468,
        "cf_index": "K",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\nL\r\nRUUDL\r\nLLUU\r\nDDDUUUUU\r\n",
                "-1 0\r\n1 2\r\n0 0\r\n0 1\r\n"
            ]
        ],
        "private_cases": []
    }
]