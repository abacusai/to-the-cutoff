[
    {
        "name": "Display The Number",
        "description": "You have a large electronic screen which can display up to \n    998244353\n\ndecimal digits. The digits are displayed in the same way as on different\nelectronic alarm clocks: each place for a digit consists of \n    7\n segments\nwhich can be turned on and off to compose different digits. The following\npicture describes how you can display all \n    10\n decimal digits: As you can\nsee, different digits may require different number of segments to be turned\non. For example, if you want to display \n    1\n, you have to turn on \n    2\n\nsegments of the screen, and if you want to display \n    8\n, all \n    7\n\nsegments of some place to display a digit should be turned on. You want to\ndisplay a really large integer on the screen. Unfortunately, the screen is\nbugged: no more than \n    n\n segments can be turned on simultaneously. So now\nyou wonder what is the greatest integer that can be displayed by turning on no\nmore than \n    n\n segments. Your program should be able to process \n    t\n\ndifferent test cases. Input The first line contains one integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases in the input. Then the test\ncases follow, each of them is represented by a separate line containing one\ninteger \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the maximum number of segments\nthat can be turned on in the corresponding testcase. It is guaranteed that the\nsum of \n    n\n over all test cases in the input does not exceed \n    10^5\n.\nOutput For each test case, print the greatest integer that can be displayed by\nturning on no more than \n    n\n segments of the screen. Note that the answer\nmay not fit in the standard \n    32\n-bit or \n    64\n-bit integral data type.\nExample Input 2 3 4 Output 7 11\n\n",
        "cf_contest_id": 1295,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n3\r\n4\r\n",
                "7\r\n11\r\n"
            ]
        ],
        "private_cases": []
    }
]