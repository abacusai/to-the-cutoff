[
    {
        "name": "Dinner with Emma",
        "description": "Jack decides to invite Emma out for a dinner. Jack is a modest student, he\ndoesn't want to go to an expensive restaurant. Emma is a girl with high taste,\nshe prefers elite places. Munhattan consists of n streets and m avenues. There\nis exactly one restaurant on the intersection of each street and avenue. The\nstreets are numbered with integers from 1 to n and the avenues are numbered\nwith integers from 1 to m. The cost of dinner in the restaurant at the\nintersection of the i-th street and the j-th avenue is cij. Jack and Emma\ndecide to choose the restaurant in the following way. Firstly Emma chooses the\nstreet to dinner and then Jack chooses the avenue. Emma and Jack makes their\nchoice optimally: Emma wants to maximize the cost of the dinner, Jack wants to\nminimize it. Emma takes into account that Jack wants to minimize the cost of\nthe dinner. Find the cost of the dinner for the couple in love. Input The\nfirst line contains two integers n, m (1 \u2264 n, m \u2264 100) \u2014 the number of streets\nand avenues in Munhattan. Each of the next n lines contains m integers cij (1\n\u2264 cij \u2264 10^9) \u2014 the cost of the dinner in the restaurant on the intersection\nof the i-th street and the j-th avenue. Output Print the only integer a \u2014 the\ncost of the dinner for Jack and Emma. Examples Input 3 4 4 1 3 5 2 2 2 2 5 4 5\n1 Output 2 Input 3 3 1 2 3 2 3 1 3 1 2 Output 1 Note In the first example if\nEmma chooses the first or the third streets Jack can choose an avenue with the\ncost of the dinner 1. So she chooses the second street and Jack chooses any\navenue. The cost of the dinner is 2. In the second example regardless of\nEmma's choice Jack can choose a restaurant with the cost of the dinner 1.\n\n",
        "cf_contest_id": 616,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 4\r\n4 1 3 5\r\n2 2 2 2\r\n5 4 5 1\r\n",
                "2\r\n"
            ],
            [
                "3 3\r\n1 2 3\r\n2 3 1\r\n3 1 2\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1 10\r\n74 35 82 39 1 84 29 41 70 12\r\n",
                "1\r\n"
            ],
            [
                "10 1\r\n44\r\n23\r\n65\r\n17\r\n48\r\n29\r\n49\r\n88\r\n91\r\n85\r\n",
                "91\r\n"
            ],
            [
                "10 10\r\n256 72 455 45 912 506 235 68 951 92\r\n246 305 45 212 788 621 449 876 459 899\r\n732 107 230 357 370 610 997 669 61 192\r\n131 93 481 527 983 920 825 540 435 54\r\n777 682 984 20 337 480 264 137 249 502\r\n51 467 479 228 923 752 714 436 199 973\r\n3 91 612 571 631 212 751 84 886 948\r\n252 130 583 23 194 985 234 978 709 16\r\n636 991 203 469 719 540 184 902 503 652\r\n826 680 150 284 37 987 360 183 447 51\r\n",
                "184\r\n"
            ],
            [
                "1 1\r\n1000000000\r\n",
                "1000000000\r\n"
            ],
            [
                "2 1\r\n999999999\r\n1000000000\r\n",
                "1000000000\r\n"
            ]
        ]
    }
]