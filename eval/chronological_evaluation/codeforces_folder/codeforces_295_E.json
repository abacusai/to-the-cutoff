[
    {
        "name": "Yaroslav and Points",
        "description": "Yaroslav has n points that lie on the Ox axis. The coordinate of the first\npoint is x1, the coordinate of the second point is x2, ..., the coordinate of\nthe n-th point is \u2014 xn. Now Yaroslav wants to execute m queries, each of them\nis of one of the two following types: Move the pj-th point from position xpj\nto position xpj + dj. At that, it is guaranteed that after executing such\nquery all coordinates of the points will be distinct. Count the sum of\ndistances between all pairs of points that lie on the segment [lj, rj] (lj \u2264\nrj). In other words, you should count the sum of: . Help Yaroslav. Input The\nfirst line contains integer n \u2014 the number of points (1 \u2264 n \u2264 10^5). The\nsecond line contains distinct integers x1, x2, ..., xn \u2014 the coordinates of\npoints (|xi| \u2264 10^9). The third line contains integer m \u2014 the number of\nqueries (1 \u2264 m \u2264 10^5). The next m lines contain the queries. The j-th line\nfirst contains integer tj (1 \u2264 tj \u2264 2) \u2014 the query type. If tj = 1, then it is\nfollowed by two integers pj and dj (1 \u2264 pj \u2264 n, |dj| \u2264 1000). If tj = 2, then\nit is followed by two integers lj and rj ( - 10^9 \u2264 lj \u2264 rj \u2264 10^9). It is\nguaranteed that at any moment all the points have distinct coordinates. Output\nFor each type 2 query print the answer on a single line. Print the answers in\nthe order, in which the queries follow in the input. Please, do not use the\n\nthe cin, cout streams of the \n-60 -95 -48 20 2 -61 29 1 5 -53 1 1 429 1 5 130 2 -101 -71 2 -69 53 1 1 404 1\n5 518 2 -101 53 2 50 872 1 1 -207 2 -99 -40 1 7 -389 1 6 -171 1 2 464 1 7 -707\n1 1 -730 1 1 560 2 635 644 1 7 -677 Output 176 20 406 1046 1638 156 0\n\n",
        "cf_contest_id": 295,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8\r\n36 50 28 -75 40 -60 -95 -48\r\n20\r\n2 -61 29\r\n1 5 -53\r\n1 1 429\r\n1 5 130\r\n2 -101 -71\r\n2 -69 53\r\n1 1 404\r\n1 5 518\r\n2 -101 53\r\n2 50 872\r\n1 1 -207\r\n2 -99 -40\r\n1 7 -389\r\n1 6 -171\r\n1 2 464\r\n1 7 -707\r\n1 1 -730\r\n1 1 560\r\n2 635 644\r\n1 7 -677\r\n",
                "176\r\n20\r\n406\r\n1046\r\n1638\r\n156\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]