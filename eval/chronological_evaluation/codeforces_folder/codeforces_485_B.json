[
    {
        "name": "Valuable Resources",
        "description": "Many computer strategy games require building cities, recruiting army,\nconquering tribes, collecting resources. Sometimes it leads to interesting\nproblems. Let's suppose that your task is to build a square city. The world\nmap uses the Cartesian coordinates. The sides of the city should be parallel\nto coordinate axes. The map contains mines with valuable resources, located at\nsome points with integer coordinates. The sizes of mines are relatively small,\ni.e. they can be treated as points. The city should be built in such a way\nthat all the mines are inside or on the border of the city square. Building a\ncity takes large amount of money depending on the size of the city, so you\nhave to build the city with the minimum area. Given the positions of the mines\nfind the minimum possible area of the city. Input The first line of the input\ncontains number n \u2014 the number of mines on the map (2 \u2264 n \u2264 1000). Each of the\nnext n lines contains a pair of integers xi and yi \u2014 the coordinates of the\ncorresponding mine ( - 10^9 \u2264 xi, yi \u2264 10^9). All points are pairwise\ndistinct. Output Print the minimum area of the city that can cover all the\nmines with valuable resources. Examples Input 2 0 0 2 2 Output 4 Input 2 0 0 0\n3 Output 9\n\n",
        "cf_contest_id": 485,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n0 0\r\n2 2\r\n",
                "4\r\n"
            ],
            [
                "2\r\n0 0\r\n0 3\r\n",
                "9\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n0 1\r\n1 0\r\n",
                "1\r\n"
            ],
            [
                "3\r\n2 2\r\n1 1\r\n3 3\r\n",
                "4\r\n"
            ],
            [
                "3\r\n3 1\r\n1 3\r\n2 2\r\n",
                "4\r\n"
            ],
            [
                "3\r\n0 1\r\n1 0\r\n2 2\r\n",
                "4\r\n"
            ],
            [
                "2\r\n-1000000000 -1000000000\r\n1000000000 1000000000\r\n",
                "4000000000000000000\r\n"
            ],
            [
                "2\r\n1000000000 -1000000000\r\n-1000000000 1000000000\r\n",
                "4000000000000000000\r\n"
            ],
            [
                "5\r\n-851545463 -208880322\r\n-154983867 -781305244\r\n293363100 785256340\r\n833468900 -593065920\r\n-920692803 -637662144\r\n",
                "3077083280271860209\r\n"
            ],
            [
                "10\r\n-260530833 169589238\r\n-681955770 -35391010\r\n223450511 24504262\r\n479795061 -26191863\r\n-291344265 21153856\r\n714700263 -328447419\r\n-858655942 161086142\r\n-270884153 462537328\r\n-501424901 977460517\r\n115284904 -151626824\r\n",
                "2475449747812002025\r\n"
            ],
            [
                "10\r\n917139470 819990899\r\n-69828590 691215072\r\n-846815289 112372447\r\n560780737 -890423729\r\n243241705 284240970\r\n-47397355 -263709479\r\n759162072 709456353\r\n-330469400 -597545533\r\n436509256 728506920\r\n133368867 668789238\r\n",
                "3111536391798748081\r\n"
            ],
            [
                "10\r\n-200157522 -824574736\r\n299208799 -287211553\r\n-160170880 148363130\r\n103709327 245344406\r\n482860382 547328085\r\n895537733 -545816336\r\n671947380 910981768\r\n-43209851 585461399\r\n-573679087 427675821\r\n151452830 27262384\r\n",
                "3012156378576702016\r\n"
            ],
            [
                "2\r\n-2 -2\r\n-3 -3\r\n",
                "1\r\n"
            ],
            [
                "2\r\n-1000 -1000\r\n-1100 -1100\r\n",
                "10000\r\n"
            ],
            [
                "2\r\n-5 -5\r\n-4 -4\r\n",
                "1\r\n"
            ],
            [
                "2\r\n-10 0\r\n-9 0\r\n",
                "1\r\n"
            ],
            [
                "2\r\n-10 -10\r\n-20 -20\r\n",
                "100\r\n"
            ],
            [
                "2\r\n-1000000 -1000000\r\n-100 -100\r\n",
                "999800010000\r\n"
            ],
            [
                "2\r\n100000000 100000000\r\n200000000 200000000\r\n",
                "10000000000000000\r\n"
            ],
            [
                "2\r\n-10 10\r\n-2 3\r\n",
                "64\r\n"
            ],
            [
                "2\r\n-999999999 -999999999\r\n-999999991 -999999991\r\n",
                "64\r\n"
            ],
            [
                "2\r\n-1000 -1000\r\n-999 -999\r\n",
                "1\r\n"
            ],
            [
                "2\r\n-3 0\r\n-5 0\r\n",
                "4\r\n"
            ],
            [
                "2\r\n999999999 999999999\r\n999999991 999999991\r\n",
                "64\r\n"
            ],
            [
                "2\r\n100000012 100000012\r\n100000012 100000013\r\n",
                "1\r\n"
            ]
        ]
    }
]