[
    {
        "name": "The Doctor Meets Vader (Medium)",
        "description": "Thanks to the Doctor's help, the rebels managed to steal enough gold to launch\na full-scale attack on the Empire! However, Darth Vader is looking for revenge\nand wants to take back his gold. The rebels have hidden the gold in various\nbases throughout the galaxy. Darth Vader and the Empire are looking to send\nout their spaceships to attack these bases. The galaxy can be represented as\nan undirected graph with \n    n\n planets (nodes) and \n    m\n wormholes\n(edges), each connecting two planets. A total of \n    s\n empire spaceships and\n\n    b\n rebel bases are located at different planets in the galaxy. Each\nspaceship is given a location \n    x\n, denoting the index of the planet on\nwhich it is located, an attacking strength \n    a\n, and a certain amount of\nfuel \n    f\n. Each base is given a location \n    x\n, and a defensive strength\n\n    d\n. A spaceship can attack a base if both of these conditions hold: the\nspaceship's attacking strength is greater or equal than the defensive strength\nof the base the spaceship's fuel is greater or equal to the shortest distance,\ncomputed as the number of wormholes, between the spaceship's planet and the\nbase's planet Vader is very particular about his attacking formations. He\nrequires that each spaceship is to attack at most one base and that each base\nis to be attacked by at most one spaceship. Vader knows that the rebels have\nhidden \n    k\n gold in each base, so he will assign the spaceships to attack\nbases in such a way that maximizes the number of bases attacked. Therefore,\nfor each base that is attacked, the rebels lose \n    k\n gold. However, the\nrebels have the ability to create any number of dummy bases. With the Doctor's\nhelp, these bases would exist beyond space and time, so all spaceship can\nreach them and attack them. Moreover, a dummy base is designed to seem\nirresistible: that is, it will always be attacked by some spaceship. Of\ncourse, dummy bases do not contain any gold, but creating such a dummy base\ncosts \n    h\n gold. What is the minimum gold the rebels can lose if they\ncreate an optimal number of dummy bases? Input The first line contains two\nintegers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 100\n, \n    0 \n    \u2264 m\n    \n    \u2264 10000\n), the number of nodes and the number of edges, respectively.\nThe next \n    m\n lines contain two integers \n    u\n and \n    v\n (\n    1 \n    \u2264\n    u\n, \n    v \n    \u2264 n\n) denoting an undirected edge between the two nodes. The\nnext line contains four integers \n    s\n, \n    b\n, \n    k\n and \n    h\n (\n    1\n    \n    \u2264 s\n, \n    b \n    \u2264 1000\n, \n    0 \n    \u2264 k\n, \n    h \n    \u2264 10^9\n), the\nnumber of spaceships, the number of bases, the cost of having a base attacked,\nand the cost of creating a dummy base, respectively. The next \n    s\n lines\ncontain three integers \n    x\n, \n    a\n, \n    f\n (\n    1 \n    \u2264 x \n    \u2264 n\n,\n\n    0 \n    \u2264 a\n, \n    f \n    \u2264 10^9\n), denoting the location, attack, and\nfuel of the spaceship. The next \n    b\n lines contain two integers \n    x\n,\n\n    d\n (\n    1 \n    \u2264 x \n    \u2264 n\n, \n    0 \n    \u2264 d \n    \u2264 10^9\n), denoting\nthe location and defence of the base. Output Print a single integer, the\nminimum cost in terms of gold. Example Input 6 7 1 2 2 3 3 4 4 6 6 5 4 4 3 6 4\n2 7 3 1 10 2 3 8 2 5 1 0 6 5 4 3 7 5 2 Output 12 Note One way to minimize the\ncost is to build \n    4\n dummy bases, for a total cost of \n    4 \n    \u00d7 3 =\n    12\n. One empire spaceship will be assigned to attack each of these dummy\nbases, resulting in zero actual bases attacked.\n\n",
        "cf_contest_id": 1184,
        "cf_index": "B2",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "flows",
            "graph matchings",
            "graphs",
            "shortest paths",
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 7\r\n1 2\r\n2 3\r\n3 4\r\n4 6\r\n6 5\r\n4 4\r\n3 6\r\n4 2 7 3\r\n1 10 2\r\n3 8 2\r\n5 1 0\r\n6 5 4\r\n3 7\r\n5 2\r\n",
                "12\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1 1\r\n1 2 498328473 730315543\r\n1 267535146 337021959\r\n1 340728578\r\n1 82073826\r\n",
                "498328473\r\n"
            ],
            [
                "1 1\r\n1 1\r\n2 1 709189476 658667824\r\n1 511405192 843598992\r\n1 638564514 680433292\r\n1 584582554\r\n",
                "709189476\r\n"
            ],
            [
                "1 1\r\n1 1\r\n2 2 551454259 292052813\r\n1 755275238 645143315\r\n1 936400451 457379982\r\n1 873148501\r\n1 181471857\r\n",
                "584105626\r\n"
            ],
            [
                "1 0\r\n1 1 760669141 361439344\r\n1 515372386 379329282\r\n1 446687639\r\n",
                "361439344\r\n"
            ],
            [
                "1 0\r\n1 1 154608701 257538154\r\n1 148757376 932599775\r\n1 953264671\r\n",
                "0\r\n"
            ],
            [
                "1 0\r\n1 1 179952043 785040744\r\n1 77109657 780837560\r\n1 754808995\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n1 1\r\n2 1 657705832 300429230\r\n1 435788130 187757098\r\n1 464180683 238039721\r\n1 101041215\r\n",
                "600858460\r\n"
            ],
            [
                "1 1\r\n1 1\r\n2 2 205003324 933814220\r\n1 974625469 989301423\r\n1 762016619 720019121\r\n1 389607162\r\n1 162417396\r\n",
                "410006648\r\n"
            ],
            [
                "1 0\r\n1 1 288141798 31112026\r\n1 862166501 30583621\r\n1 790845747\r\n",
                "31112026\r\n"
            ],
            [
                "1 0\r\n1 1 682081360 558614617\r\n1 790518782 878821407\r\n1 297422778\r\n",
                "558614617\r\n"
            ]
        ]
    }
]