[
    {
        "name": "Driving Test",
        "description": "Polycarp has just attempted to pass the driving test. He ran over the straight\nroad with the signs of four types. speed limit: this sign comes with a\npositive integer number \u2014 maximal speed of the car after the sign (cancel the\naction of the previous sign of this type); overtake is allowed: this sign\nmeans that after some car meets it, it can overtake any other car; no speed\nlimit: this sign cancels speed limit if any (car can move with arbitrary speed\nafter this sign); no overtake allowed: some car can't overtake any other car\nafter this sign. Polycarp goes past the signs consequentially, each new sign\ncancels the action of all the previous signs of it's kind (speed\nlimit/overtake). It is possible that two or more \"no overtake allowed\" signs\ngo one after another with zero \"overtake is allowed\" signs between them. It\nworks with \"no speed limit\" and \"overtake is allowed\" signs as well. In the\nbeginning of the ride overtake is allowed and there is no speed limit. You are\ngiven the sequence of events in chronological order \u2014 events which happened to\nPolycarp during the ride. There are events of following types: Polycarp\nchanges the speed of his car to specified (this event comes with a positive\ninteger number); Polycarp's car overtakes the other car; Polycarp's car goes\npast the \"speed limit\" sign (this sign comes with a positive integer);\nPolycarp's car goes past the \"overtake is allowed\" sign; Polycarp's car goes\npast the \"no speed limit\"; Polycarp's car goes past the \"no overtake allowed\";\nIt is guaranteed that the first event in chronological order is the event of\ntype 1 (Polycarp changed the speed of his car to specified). After the exam\nPolycarp can justify his rule violations by telling the driving instructor\nthat he just didn't notice some of the signs. What is the minimal number of\nsigns Polycarp should say he didn't notice, so that he would make no rule\nviolations from his point of view? Input The first line contains one integer\nnumber n (1 \u2264 n \u2264 2\u00b710^5) \u2014 number of events. Each of the next n lines starts\nwith integer t (1 \u2264 t \u2264 6) \u2014 the type of the event. An integer s (1 \u2264 s \u2264 300)\nfollows in the query of the first and the third type (if it is the query of\nfirst type, then it's new speed of Polycarp's car, if it is the query of third\ntype, then it's new speed limit). It is guaranteed that the first event in\nchronological order is the event of type 1 (Polycarp changed the speed of his\ncar to specified). Output Print the minimal number of road signs Polycarp\nshould say he didn't notice, so that he would make no rule violations from his\npoint of view. Examples Input 11 1 100 3 70 4 2 3 120 5 3 120 6 1 150 4 3 300\nOutput 2 Input 5 1 100 3 200 2 4 5 Output 0 Input 7 1 20 2 6 4 6 6 2 Output 2\nNote In the first example Polycarp should say he didn't notice the \"speed\nlimit\" sign with the limit of 70 and the second \"speed limit\" sign with the\nlimit of 120. In the second example Polycarp didn't make any rule violation.\nIn the third example Polycarp should say he didn't notice both \"no overtake\nallowed\" that came after \"overtake is allowed\" sign.\n\n",
        "cf_contest_id": 845,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "11\r\n1 100\r\n3 70\r\n4\r\n2\r\n3 120\r\n5\r\n3 120\r\n6\r\n1 150\r\n4\r\n3 300\r\n",
                "2\r\n"
            ],
            [
                "5\r\n1 100\r\n3 200\r\n2\r\n4\r\n5\r\n",
                "0\r\n"
            ],
            [
                "7\r\n1 20\r\n2\r\n6\r\n4\r\n6\r\n6\r\n2\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 100\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 100\r\n2\r\n",
                "0\r\n"
            ],
            [
                "10\r\n1 37\r\n6\r\n5\r\n2\r\n5\r\n6\r\n5\r\n2\r\n4\r\n2\r\n",
                "2\r\n"
            ],
            [
                "10\r\n1 5\r\n4\r\n5\r\n4\r\n1 21\r\n6\r\n1 10\r\n1 1\r\n2\r\n3 1\r\n",
                "1\r\n"
            ]
        ]
    }
]