[
    {
        "name": "Cup Trick",
        "description": "The employees of the F company have lots of ways to entertain themselves.\nToday they invited a famous magician who shows a trick with plastic cups and a\nmarble. The point is to trick the spectator's attention. Initially, the\nspectator stands in front of a line of n plastic cups. Then the magician\nplaces a small marble under one cup and shuffles the cups. Then the spectator\nshould guess which cup hides the marble. But the head coder of the F company\nisn't easy to trick. When he saw the performance, he noticed several important\nfacts: each cup contains a mark \u2014 a number from 1 to n; all marks on the cups\nare distinct; the magician shuffles the cups in m operations, each operation\nlooks like that: take a cup marked xi, sitting at position yi in the row of\ncups (the positions are numbered from left to right, starting from 1) and\nshift it to the very beginning of the cup row (on the first position). When\nthe head coder came home after work he wanted to re-do the trick.\nUnfortunately, he didn't remember the starting or the final position of the\ncups. He only remembered which operations the magician performed. Help the\ncoder: given the operations in the order they were made find at least one\ninitial permutation of the cups that can go through the described operations\nin the given order. Otherwise, state that such permutation doesn't exist.\nInput The first line contains integers n and m (1 \u2264 n, m \u2264 10^6). Each of the\nnext m lines contains a couple of integers. The i-th line contains integers\nxi, yi (1 \u2264 xi, yi \u2264 n) \u2014 the description of the i-th operation of the\nmagician. Note that the operations are given in the order in which the\nmagician made them and the coder wants to make them in the same order. Output\nIf the described permutation doesn't exist (the programmer remembered wrong\noperations), print -1. Otherwise, print n distinct integers, each from 1 to n:\nthe i-th number should represent the mark on the cup that initially is in the\nrow in position i. If there are multiple correct answers, you should print the\nlexicographically minimum one. Examples Input 2 1 2 1 Output 2 1 Input 3 2 1 2\n1 1 Output 2 1 3 Input 3 3 1 3 2 3 1 3 Output -1\n\n",
        "cf_contest_id": 420,
        "cf_index": "D",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1\r\n2 1\r\n",
                "2 1 \r\n"
            ],
            [
                "3 2\r\n1 2\r\n1 1\r\n",
                "2 1 3 \r\n"
            ],
            [
                "3 3\r\n1 3\r\n2 3\r\n1 3\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 2\r\n1 1\r\n3 2\r\n",
                "1 3 2 \r\n"
            ],
            [
                "5 2\r\n3 3\r\n3 1\r\n",
                "1 2 3 4 5 \r\n"
            ],
            [
                "5 3\r\n3 1\r\n4 3\r\n5 4\r\n",
                "3 1 4 5 2 \r\n"
            ],
            [
                "7 3\r\n4 4\r\n5 4\r\n2 4\r\n",
                "1 2 5 4 3 6 7 \r\n"
            ],
            [
                "10 3\r\n7 10\r\n8 7\r\n5 5\r\n",
                "1 2 5 3 4 8 6 9 10 7 \r\n"
            ],
            [
                "100 50\r\n11 28\r\n11 1\r\n98 58\r\n38 27\r\n24 27\r\n67 37\r\n90 48\r\n91 14\r\n43 29\r\n3 64\r\n24 6\r\n53 19\r\n97 65\r\n13 27\r\n75 53\r\n37 82\r\n69 75\r\n94 99\r\n1 26\r\n95 60\r\n45 27\r\n100 82\r\n71 49\r\n86 99\r\n74 58\r\n88 68\r\n39 63\r\n38 23\r\n22 39\r\n29 58\r\n62 83\r\n62 1\r\n61 58\r\n2 30\r\n41 48\r\n83 90\r\n1 17\r\n73 81\r\n23 53\r\n71 16\r\n43 29\r\n27 78\r\n54 48\r\n6 89\r\n75 27\r\n16 93\r\n81 81\r\n97 31\r\n53 32\r\n15 96\r\n",
                "2 4 5 7 8 9 10 91 12 45 53 1 14 17 18 19 20 13 22 54 21 25 43 24 38 26 28 11 41 30 31 23 32 33 34 67 35 36 71 40 42 61 44 29 46 47 90 74 48 75 49 50 39 95 51 52 55 98 56 57 88 58 59 3 97 60 63 64 65 27 81 66 68 69 73 70 72 76 62 100 77 37 78 79 80 6 82 83 84 85 16 87 89 15 92 93 96 86 94 99 \r\n"
            ],
            [
                "1 1\r\n1 1\r\n",
                "1 \r\n"
            ],
            [
                "2 1\r\n1 1\r\n",
                "1 2 \r\n"
            ],
            [
                "2 1\r\n1 2\r\n",
                "2 1 \r\n"
            ],
            [
                "2 1\r\n2 1\r\n",
                "2 1 \r\n"
            ],
            [
                "2 1\r\n2 2\r\n",
                "1 2 \r\n"
            ],
            [
                "2 2\r\n1 1\r\n2 1\r\n",
                "-1\r\n"
            ],
            [
                "2 2\r\n1 2\r\n2 2\r\n",
                "2 1 \r\n"
            ],
            [
                "5 3\r\n2 4\r\n3 5\r\n5 2\r\n",
                "-1\r\n"
            ],
            [
                "10 10\r\n9 1\r\n6 7\r\n4 2\r\n8 7\r\n3 1\r\n10 10\r\n3 5\r\n6 7\r\n10 1\r\n6 6\r\n",
                "-1\r\n"
            ]
        ]
    }
]