[
    {
        "name": "Longest Array Deconstruction",
        "description": "Mr. Chanek gives you a sequence \n    a\n indexed from \n    1\n to \n    n\n.\nDefine \n    f(a)\n as the number of indices where \n    a_i = i\n. You can pick\nan element from the current sequence and remove it, then concatenate the\nremaining elements together. For example, if you remove the \n    3\n-rd element\nfrom the sequence \n    [4, 2, 3, 1]\n, the resulting sequence will be \n    [4, 2,\n    1]\n. You want to remove some elements from \n    a\n in order to maximize\n\n    f(a)\n, using zero or more operations. Find the largest possible\n\n    f(a)\n. Input The first line contains one integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the initial length of the sequence. The second\nline contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the initial sequence \n    a\n. Output Output an\ninteger denoting the largest \n    f(a)\n that can be obtained by doing zero or\nmore operations. Examples Input 7 2 1 4 2 5 3 7 Output 3 Input 4 4 2 3 1\nOutput 2 Note In the first example, \n    f(A) = 3\n by doing the following\noperations. \n    [2,1,\n    4,2,5,3,7] \n    \u2192\n    [\n    2,1,2,5,3,7] \n    \u2192 [1,2,5,3,\n    7] \n    \u2192\n    [1,2,\n    5,3] \n    \u2192 [1,2,3]\n In the second example, \n    f(A) =\n    2\n and no additional operation is needed.\n\n",
        "cf_contest_id": 1575,
        "cf_index": "L",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "divide and conquer",
            "dp",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "7\r\n2 1 4 2 5 3 7\r\n",
                "3"
            ],
            [
                "4\r\n4 2 3 1\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n",
                "1"
            ],
            [
                "1\r\n200000\r\n",
                "0"
            ]
        ]
    }
]