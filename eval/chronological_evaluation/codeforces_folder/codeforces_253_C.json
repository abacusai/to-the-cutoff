[
    {
        "name": "Text Editor",
        "description": "Vasya is pressing the keys on the keyboard reluctantly, squeezing out his\nideas on the classical epos depicted in Homer's Odysseus... How can he explain\nto his literature teacher that he isn't going to become a writer? In fact, he\nis going to become a programmer. So, he would take great pleasure in writing a\nprogram, but none \u2014 in writing a composition. As Vasya was fishing for a\nsentence in the dark pond of his imagination, he suddenly wondered: what is\nthe least number of times he should push a key to shift the cursor from one\nposition to another one? Let's describe his question more formally: to type a\ntext, Vasya is using the text editor. He has already written n lines, the i-th\nline contains ai characters (including spaces). If some line contains k\ncharacters, then this line overall contains (k + 1) positions where the cursor\ncan stand: before some character or after all characters (at the end of the\nline). Thus, the cursor's position is determined by a pair of integers (r, c),\nwhere r is the number of the line and c is the cursor's position in the line\n(the positions are indexed starting from one from the beginning of the line).\nVasya doesn't use the mouse to move the cursor. He uses keys \"Up\", \"Down\",\n\"Right\" and \"Left\". When he pushes each of these keys, the cursor shifts in\nthe needed direction. Let's assume that before the corresponding key is\npressed, the cursor was located in the position (r, c), then Vasya pushed key:\n\"Up\": if the cursor was located in the first line (r = 1), then it does not\nmove. Otherwise, it moves to the previous line (with number r - 1), to the\nsame position. At that, if the previous line was short, that is, the cursor\ncouldn't occupy position c there, the cursor moves to the last position of the\nline with number r - 1; \"Down\": if the cursor was located in the last line (r\n= n), then it does not move. Otherwise, it moves to the next line (with number\nr + 1), to the same position. At that, if the next line was short, that is,\nthe cursor couldn't occupy position c there, the cursor moves to the last\nposition of the line with number r + 1; \"Right\": if the cursor can move to the\nright in this line (c < ar + 1), then it moves to the right (to position c +\n1). Otherwise, it is located at the end of the line and doesn't move anywhere\nwhen Vasya presses the \"Right\" key; \"Left\": if the cursor can move to the left\nin this line (c > 1), then it moves to the left (to position c - 1).\nOtherwise, it is located at the beginning of the line and doesn't move\nanywhere when Vasya presses the \"Left\" key.You've got the number of lines in\nthe text file and the number of characters, written in each line of this file.\nFind the least number of times Vasya should push the keys, described above, to\nshift the cursor from position (r1, c1) to position (r2, c2). Input The first\nline of the input contains an integer n (1 \u2264 n \u2264 100) \u2014 the number of lines in\nthe file. The second line contains n integers a1, a2, ..., an (0 \u2264 ai \u2264 10^5),\nseparated by single spaces. The third line contains four integers r1, c1, r2,\nc2 (1 \u2264 r1, r2 \u2264 n, 1 \u2264 c1 \u2264 ar1 + 1, 1 \u2264 c2 \u2264 ar2 + 1). Output Print a single\ninteger \u2014 the minimum number of times Vasya should push a key to move the\ncursor from position (r1, c1) to position (r2, c2). Examples Input 4 2 1 6 4 3\n4 4 2 Output 3 Input 4 10 5 6 4 1 11 4 2 Output 6 Input 3 10 1 10 1 10 1 1\nOutput 3 Note In the first sample the editor contains four lines. Let's\nrepresent the cursor's possible positions in the line as numbers. Letter s\nrepresents the cursor's initial position, letter t represents the last one.\nThen all possible positions of the cursor in the text editor are described by\nthe following table. 123 12 123s567 1t345 One of the possible answers in the\ngiven sample is: \"Left\", \"Down\", \"Left\".\n\n",
        "cf_contest_id": 253,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2 1 6 4\r\n3 4 4 2\r\n",
                "3\r\n"
            ],
            [
                "4\r\n10 5 6 4\r\n1 11 4 2\r\n",
                "6\r\n"
            ],
            [
                "3\r\n10 1 10\r\n1 10 1 1\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n2 1 6 4\r\n4 2 3 5\r\n",
                "4\r\n"
            ],
            [
                "3\r\n20 3 20\r\n1 20 1 1\r\n",
                "5\r\n"
            ],
            [
                "2\r\n10 1\r\n1 3 2 1\r\n",
                "2\r\n"
            ],
            [
                "20\r\n3 1 9 9 6 1 3 4 5 6 7 3 1 9 9 1 9 1 5 7\r\n17 7 19 5\r\n",
                "5\r\n"
            ],
            [
                "20\r\n81 90 11 68 23 18 78 75 45 86 58 37 21 15 98 40 53 100 10 70\r\n11 55 8 19\r\n",
                "7\r\n"
            ],
            [
                "25\r\n55 47 5 63 55 11 8 32 0 62 41 7 17 70 33 6 41 68 37 82 33 64 28 33 12\r\n6 11 14 12\r\n",
                "19\r\n"
            ],
            [
                "30\r\n77 38 82 87 88 1 90 3 79 69 64 36 85 12 1 19 80 89 75 56 49 28 10 31 37 65 27 84 10 72\r\n26 65 19 3\r\n",
                "15\r\n"
            ],
            [
                "100\r\n119 384 220 357 394 123 371 57 6 221 219 79 305 292 71 113 428 326 166 235 120 404 77 223 2 171 81 1 119 307 200 323 89 294 178 421 125 197 89 154 335 46 210 311 216 182 246 262 195 99 175 153 310 302 417 167 222 349 63 325 175 345 6 78 9 147 126 308 229 295 175 368 230 116 95 254 443 15 299 265 322 171 179 184 435 115 384 324 213 359 414 159 322 49 209 296 376 173 369 302\r\n8 47 23 65\r\n",
                "73\r\n"
            ],
            [
                "100\r\n120 336 161 474 285 126 321 63 82 303 421 110 143 279 505 231 40 413 20 421 271 30 465 186 495 156 225 445 530 156 516 305 360 261 123 5 50 377 124 8 115 529 395 408 271 166 121 240 336 348 352 359 487 471 171 379 381 182 109 425 252 434 131 430 461 386 33 189 481 461 163 89 374 505 525 526 132 468 80 88 90 538 280 281 552 415 194 41 333 296 297 205 40 79 22 219 108 213 158 410\r\n58 119 82 196\r\n",
                "186\r\n"
            ],
            [
                "100\r\n9 8 5 2 10 6 10 10 1 9 8 5 0 9 1 6 6 2 3 9 9 3 2 7 2 7 8 10 6 6 2 8 5 0 0 8 7 3 0 4 7 5 9 0 3 6 9 6 5 0 4 9 4 7 7 1 5 8 2 4 10 3 9 8 10 6 10 7 4 9 0 1 3 6 6 2 1 1 5 7 0 9 6 0 4 6 8 4 7 6 1 9 4 3 10 9 7 0 0 7\r\n72 2 87 2\r\n",
                "16\r\n"
            ],
            [
                "100\r\n9 72 46 37 26 94 80 1 43 85 26 53 58 18 24 19 67 2 100 52 61 81 48 15 73 41 97 93 45 1 73 54 75 51 28 79 0 14 41 42 24 50 70 18 96 100 67 1 68 48 44 39 63 77 78 18 10 51 32 53 26 60 1 13 66 39 55 27 23 71 75 0 27 88 73 31 16 95 87 84 86 71 37 40 66 70 65 83 19 4 81 99 26 51 67 63 80 54 23 44\r\n6 76 89 15\r\n",
                "97\r\n"
            ],
            [
                "100\r\n176 194 157 24 27 153 31 159 196 85 127 114 142 39 133 4 44 36 141 96 80 40 120 16 88 29 157 136 158 98 145 152 19 40 106 116 19 195 184 70 72 95 78 146 199 1 103 3 120 71 52 77 160 148 24 156 108 64 86 124 103 97 108 66 107 126 29 172 23 106 29 69 64 90 9 171 59 85 1 63 79 50 136 21 115 164 30 115 86 26 25 6 128 48 122 14 198 88 182 117\r\n71 4 85 80\r\n",
                "92\r\n"
            ],
            [
                "100\r\n1622 320 1261 282 1604 57 1427 1382 904 911 1719 1682 984 1727 1301 1799 1110 1057 248 764 1642 1325 1172 1677 182 32 665 397 1146 73 412 554 973 874 774 1948 1676 1959 518 280 1467 568 613 760 594 252 224 1359 876 253 760 1566 929 1614 940 1079 288 245 1432 1647 1534 1768 1947 733 225 495 1239 644 124 522 1859 1856 1464 485 1962 131 1693 1622 242 1119 1290 538 998 1342 791 711 809 1407 1369 414 124 758 1104 1142 355 324 665 1155 551 1611\r\n36 1383 51 21\r\n",
                "47\r\n"
            ],
            [
                "50\r\n966 151 777 841 507 884 487 813 29 230 966 819 390 482 137 365 391 693 56 756 327 500 895 22 361 619 8 516 21 770 572 53 497 682 162 32 308 309 110 470 699 318 947 658 720 679 435 645 481 42\r\n45 510 25 48\r\n",
                "59\r\n"
            ],
            [
                "50\r\n4143 2907 2028 539 3037 1198 6597 3658 972 9809 854 4931 642 3170 9777 2992 7121 8094 6634 684 5580 4684 3397 7909 3908 3822 2137 8299 8146 2105 7578 4338 7363 8237 530 301 4566 1153 4795 5342 3257 6953 4401 8311 9977 9260 7019 7705 5416 6754\r\n21 3413 23 218\r\n",
                "112\r\n"
            ],
            [
                "50\r\n8974 13208 81051 72024 84908 49874 22875 64935 27340 38682 28512 43441 78752 83458 63344 5723 83425 54009 61980 7824 59956 43184 49274 3896 44079 67313 68565 9138 55087 68458 43009 3685 22879 85032 84273 93643 64957 73428 57016 33405 85961 47708 90325 1352 1551 20935 76821 75406 59309 40757\r\n14 45232 2 6810\r\n",
                "1102\r\n"
            ],
            [
                "100\r\n34 80 42 99 7 49 109 61 20 7 92 2 62 96 65 77 70 5 16 83 99 39 88 66 106 1 80 68 71 74 28 75 19 97 38 100 30 1 55 86 3 13 61 82 72 50 68 18 77 89 96 27 26 35 46 13 83 77 40 31 85 108 15 5 40 80 1 108 44 18 66 26 46 7 36 80 34 76 17 9 23 57 109 90 88 1 54 66 71 94 6 89 50 22 93 82 32 74 41 74\r\n91 7 56 3\r\n",
                "36\r\n"
            ],
            [
                "100\r\n156 150 75 72 205 133 139 99 212 82 58 104 133 88 46 157 49 179 32 72 159 188 42 47 36 58 127 215 125 115 209 118 109 11 62 159 110 151 92 202 203 25 44 209 153 8 199 168 126 34 21 106 31 40 48 212 106 0 131 166 2 126 13 126 103 44 2 66 33 25 194 41 37 198 199 6 22 1 161 16 95 11 198 198 166 145 214 159 143 2 181 130 159 118 176 165 192 178 42 168\r\n49 12 66 23\r\n",
                "39\r\n"
            ],
            [
                "100\r\n289 16 321 129 0 121 61 86 93 5 63 276 259 144 275 236 309 257 244 138 107 18 158 14 295 162 7 113 58 101 142 196 181 329 115 109 62 237 110 87 19 205 68 257 252 0 166 45 310 244 140 251 262 315 213 206 290 128 287 230 198 83 135 40 8 273 319 295 288 274 34 260 288 252 172 129 201 110 294 111 95 180 34 98 16 188 170 40 274 153 11 159 245 51 328 290 112 11 105 182\r\n99 53 21 77\r\n",
                "154\r\n"
            ],
            [
                "10\r\n11284 10942 14160 10062 1858 6457 1336 13842 5498 4236\r\n1 7123 5 664\r\n",
                "681\r\n"
            ],
            [
                "53\r\n29496 9630 10781 25744 28508 15670 8252 14284 25995 20215 24251 14240 1370 15724 28268 30377 4839 16791 33515 23776 24252 1045 15245 12839 17531 28591 13091 27339 23361 10997 30438 26977 26789 18402 32938 2106 26599 10733 29549 9760 31507 33572 16934 7273 26477 15040 23704 19905 1941 3861 5950 1265 34\r\n11 6571 1 3145\r\n",
                "1788\r\n"
            ],
            [
                "31\r\n14324 29226 58374 19956 61695 71586 13261 11436 58443 34879 12689 62786 68194 34303 99201 67616 51364 67539 56799 60130 22021 64546 28331 75746 45036 43950 2150 61718 33030 37781 34319\r\n24 57393 7 6152\r\n",
                "4024\r\n"
            ],
            [
                "23\r\n5397 13279 11741 20182 18311 20961 16720 11864 2486 14081 15637 16216 3736 437 16346 12449 20205 10949 14237 2213 15281 15271 19138\r\n5 11479 13 68\r\n",
                "380\r\n"
            ],
            [
                "40\r\n41997 20736 34699 73866 45509 41964 36050 16673 10454 21166 28306 69335 6172 65943 78569 16794 10439 68061 40392 52510 78248 63851 45294 49929 22580 5574 40993 18334 73897 59148 47727 76645 4280 23651 58772 64500 13704 60366 37099 20336\r\n14 29991 16 11904\r\n",
                "1468\r\n"
            ],
            [
                "16\r\n922 7593 4748 4103 7672 6001 1573 3973 8524 8265 4747 3202 4796 2637 889 9359\r\n12 2165 12 1654\r\n",
                "90\r\n"
            ],
            [
                "18\r\n22746 9084 3942 1120 25391 25307 7409 1189 23473 26175 10964 13584 5541 500 24338 12272 15824 27656\r\n3 1395 12 90\r\n",
                "424\r\n"
            ],
            [
                "45\r\n2286 4425 14666 34959 10792 3723 30132 34266 18100 22813 28627 23310 33911 27285 1211 993 15526 4751 13611 21400 25712 24437 27435 34808 33950 18373 33685 23487 5444 10249 21415 16368 35398 7889 30918 19940 1552 12164 34292 13922 10011 31377 24102 34539 11992\r\n20 21252 28 2058\r\n",
                "531\r\n"
            ],
            [
                "29\r\n56328 80183 27682 79083 60680 12286 34299 8015 51808 50756 82133 45930 43695 65863 25178 70825 2288 15111 39667 39637 11453 62821 81484 84216 54524 53749 8396 67712 76146\r\n13 10739 9 3622\r\n",
                "1345\r\n"
            ],
            [
                "46\r\n67864 68218 3593 30646 66413 65542 65322 26801 28984 61330 15247 16522 39142 14013 49272 41585 56739 6881 44227 7101 57657 21121 51857 39351 13500 71528 8488 66118 14756 43923 21284 20018 49049 60198 6181 62460 44141 55828 42636 14623 59758 68321 12192 29978 24745 16467\r\n27 5545 4 3766\r\n",
                "197\r\n"
            ],
            [
                "70\r\n53691 15034 17444 13375 23285 29211 24567 21643 45514 10290 70111 24541 25072 5365 12162 34564 27535 48253 39581 13468 33718 35105 30468 50214 53365 74800 16749 33935 36346 54230 73796 26826 27866 41887 67566 40813 32267 58821 56828 26439 23708 32335 69515 33825 6092 20510 50174 11129 4592 74116 21498 77951 48056 28554 43904 21885 5967 40253 4990 70029 34374 41201 25399 6101 10354 61833 43646 20534 371 11111\r\n21 3911 45 1755\r\n",
                "1455\r\n"
            ],
            [
                "10\r\n8121 10681 10179 10221 9410 5214 19040 17893 7862 4611\r\n7 7780 7 3369\r\n",
                "1249\r\n"
            ],
            [
                "2\r\n1 2\r\n1 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "3\r\n1 10 20\r\n2 10 3 1\r\n",
                "4\r\n"
            ]
        ]
    }
]