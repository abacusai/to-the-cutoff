[
    {
        "name": "Relay Race",
        "description": "Furik and Rubik take part in a relay race. The race will be set up on a large\nsquare with the side of n meters. The given square is split into n \u00d7 n cells\n(represented as unit squares), each cell has some number. At the beginning of\nthe race Furik stands in a cell with coordinates (1, 1), and Rubik stands in a\ncell with coordinates (n, n). Right after the start Furik runs towards Rubik,\nbesides, if Furik stands at a cell with coordinates (i, j), then he can move\nto cell (i + 1, j) or (i, j + 1). After Furik reaches Rubik, Rubik starts\nrunning from cell with coordinates (n, n) to cell with coordinates (1, 1). If\nRubik stands in cell (i, j), then he can move to cell (i - 1, j) or (i, j -\n1). Neither Furik, nor Rubik are allowed to go beyond the boundaries of the\nfield; if a player goes beyond the boundaries, he will be disqualified. To win\nthe race, Furik and Rubik must earn as many points as possible. The number of\npoints is the sum of numbers from the cells Furik and Rubik visited. Each cell\ncounts only once in the sum. Print the maximum number of points Furik and\nRubik can earn on the relay race. Input The first line contains a single\ninteger (1 \u2264 n \u2264 300). The next n lines contain n integers each: the j-th\nnumber on the i-th line ai, j ( - 1000 \u2264 ai, j \u2264 1000) is the number written\nin the cell with coordinates (i, j). Output On a single line print a single\nnumber \u2014 the answer to the problem. Examples Input 1 5 Output 5 Input 2 11 14\n16 12 Output 53 Input 3 25 16 25 12 18 19 11 13 8 Output 136 Note Comments to\nthe second sample: The profitable path for Furik is: (1, 1), (1, 2), (2, 2),\nand for Rubik: (2, 2), (2, 1), (1, 1). Comments to the third sample: The\noptimal path for Furik is: (1, 1), (1, 2), (1, 3), (2, 3), (3, 3), and for\nRubik: (3, 3), (3, 2), (2, 2), (2, 1), (1, 1). The figure to the sample:\nFurik's path is marked with yellow, and Rubik's path is marked with pink.\n\n",
        "cf_contest_id": 213,
        "cf_index": "C",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n5\r\n",
                "5\r\n"
            ],
            [
                "2\r\n11 14\r\n16 12\r\n",
                "53\r\n"
            ],
            [
                "3\r\n25 16 25\r\n12 18 19\r\n11 13 8\r\n",
                "136\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n35 2 38 10\r\n15 19 31 32\r\n21 19 22 15\r\n37 33 2 13\r\n",
                "274\r\n"
            ],
            [
                "5\r\n4 32 1 18 41\r\n47 38 7 43 43\r\n48 23 39 40 23\r\n26 39 33 5 36\r\n31 29 7 26 47\r\n",
                "508\r\n"
            ],
            [
                "6\r\n45 31 6 24 28 15\r\n11 46 44 27 12 34\r\n8 1 19 37 8 36\r\n13 37 23 56 54 40\r\n26 21 36 26 54 41\r\n5 3 58 40 39 40\r\n",
                "740\r\n"
            ],
            [
                "7\r\n11 14 25 9 52 22 42\r\n25 22 39 2 30 44 69\r\n67 7 45 14 44 11 69\r\n45 40 17 29 32 33 17\r\n43 11 23 7 47 45 22\r\n9 54 13 66 25 46 57\r\n0 6 43 58 47 6 68\r\n",
                "922\r\n"
            ],
            [
                "8\r\n78 70 37 40 78 4 48 36\r\n59 1 3 35 22 78 9 28\r\n23 38 9 55 25 70 33 73\r\n5 17 55 45 45 69 21 40\r\n41 73 7 73 46 6 74 22\r\n25 0 53 67 10 51 57 67\r\n23 21 14 31 46 44 1 13\r\n66 29 0 11 54 45 21 56\r\n",
                "1404\r\n"
            ],
            [
                "9\r\n66 25 86 38 22 68 51 35 53\r\n80 51 57 20 80 85 61 40 40\r\n76 88 62 10 26 69 73 37 35\r\n60 79 22 52 28 79 86 62 52\r\n65 59 45 47 86 20 57 35 38\r\n55 54 42 1 42 27 64 59 25\r\n26 34 55 67 38 79 12 9 26\r\n8 51 31 53 49 51 3 58 87\r\n58 28 38 19 80 12 33 8 39\r\n",
                "1861\r\n"
            ],
            [
                "10\r\n98 89 26 80 53 70 44 10 9 91\r\n35 71 46 99 84 14 90 86 3 16\r\n50 61 16 12 77 84 86 80 41 56\r\n13 40 3 6 98 69 37 45 42 72\r\n5 86 36 97 1 85 23 1 76 35\r\n94 72 74 17 33 52 48 5 33 19\r\n17 1 17 79 46 22 87 34 94 92\r\n60 70 59 3 78 16 50 62 5 57\r\n69 23 99 93 26 61 67 53 86 58\r\n75 73 96 31 55 39 21 20 22 18\r\n",
                "2367\r\n"
            ],
            [
                "2\r\n-1 -1\r\n-1 -1\r\n",
                "-3\r\n"
            ],
            [
                "4\r\n1 1 1 1\r\n-100 -100 1 1\r\n-100 -100 -100 1\r\n-100 -100 -100 1\r\n",
                "8\r\n"
            ]
        ]
    }
]