[
    {
        "name": "New Palindrome",
        "description": "A palindrome is a string that reads the same from left to right as from right\nto left. For example, abacaba, aaaa, abba, racecar are palindromes. You are\ngiven a string \n    s\n consisting of lowercase Latin letters. The string\n\n    s\n is a palindrome. You have to check whether it is possible to rearrange\nthe letters in it to get another palindrome (not equal to the given string\n\n    s\n). Input The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 1000\n) \u2014 the number of test cases. The only line of each test case\ncontains a string \n    s\n (\n    2 \n    \u2264 |s| \n    \u2264 50\n) consisting of lowercase\nLatin letters. This string is a palindrome. Output For each test case, print\nYES if it is possible to rearrange the letters in the given string to get\nanother palindrome. Otherwise, print NO. You may print each letter in any case\n(YES, yes, Yes will all be recognized as positive answer, NO, no and nO will\nall be recognized as negative answer). Example Input 3 codedoc gg aabaa Output\nYES NO NO Note In the first test case, it is possible to rearrange the letters\nin the palindrome codedoc to obtain the string ocdedco, which is different\nfrom the given string, but also a palindrome.\n\n",
        "cf_contest_id": 1832,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\ncodedoc\r\ngg\r\naabaa\r\n",
                "YES\r\nNO\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\naba\r\naba\r\naba\r\naba\r\naba\r\n",
                "NO\r\nNO\r\nNO\r\nNO\r\nNO\r\n"
            ],
            [
                "69\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nabcba\r\nabcba\r\nabcba\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "1\r\nzzbabzz\r\n",
                "YES\r\n"
            ],
            [
                "71\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nabcba\r\nabcba\r\nabcba\r\nabcba\r\nabcba\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "72\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nabcba\r\nabcba\r\nabcba\r\nabcba\r\nabcba\r\nabcba\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "68\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nabcba\r\nabcba\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "67\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nacbca\r\nabcba\r\nabcba\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "1\r\nzzabazz\r\n",
                "YES\r\n"
            ]
        ]
    }
]