[
    {
        "name": "x-prime Substrings",
        "description": "You are given an integer value \n    x\n and a string \n    s\n consisting of\ndigits from \n    1\n to \n    9\n inclusive. A substring of a string is a\ncontiguous subsequence of that string. Let \n    f(l, r)\n be the sum of digits\nof a substring \n    s[l..r]\n. Let's call substring \n    s[l_1..r_1]\n\n\n    x\n-prime if \n    f(l_1, r_1) = x\n; there are no values \n    l_2, r_2\n\nsuch that \n    l_1 \n    \u2264 l_2 \n    \u2264 r_2 \n    \u2264 r_1\n; \n    f(l_2, r_2) \n    \u2260 x\n;\n\n    x\n is divisible by \n    f(l_2, r_2)\n. You are allowed to erase some\ncharacters from the string. If you erase a character, the two resulting parts\nof the string are concatenated without changing their order. What is the\nminimum number of characters you should erase from the string so that there\nare no \n    x\n-prime substrings in it? If there are no \n    x\n-prime\nsubstrings in the given string \n    s\n, then print \n    0\n. Input The first\nline contains a string \n    s\n (\n    1 \n    \u2264 |s| \n    \u2264 1000\n). \n    s\n\ncontains only digits from \n    1\n to \n    9\n inclusive. The second line\ncontains an integer \n    x\n (\n    1 \n    \u2264 x \n    \u2264 20\n). Output Print a single\ninteger \u2014 the minimum number of characters you should erase from the string so\nthat there are no \n    x\n-prime substrings in it. If there are no\n\n    x\n-prime substrings in the given string \n    s\n, then print \n    0\n.\nExamples Input 116285317 8 Output 2 Input 314159265359 1 Output 2 Input 13 13\nOutput 0 Input 3434343434 7 Output 5 Note In the first example there are two\n\n    8\n-prime substrings \"8\" and \"53\". You can erase these characters to get\nrid of both: \"116285317\". The resulting string \"1162317\" contains no\n\n    8\n-prime substrings. Removing these characters is also a valid answer:\n\"116285317\". In the second example you just have to erase both ones. In the\nthird example there are no \n    13\n-prime substrings. There are no substrings\nwith the sum of digits equal to \n    13\n at all. In the fourth example you can\nhave neither \"34\", nor \"43\" in a string. Thus, you have to erase either all\nthrees or all fours. There are \n    5\n of each of them, so it doesn't matter\nwhich.\n\n",
        "cf_contest_id": 1400,
        "cf_index": "F",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "string suffix structures",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "116285317\r\n8\r\n",
                "2\r\n"
            ],
            [
                "314159265359\r\n1\r\n",
                "2\r\n"
            ],
            [
                "13\r\n13\r\n",
                "0\r\n"
            ],
            [
                "3434343434\r\n7\r\n",
                "5\r\n"
            ]
        ],
        "private_cases": [
            [
                "4959628661\r\n6\r\n",
                "3\r\n"
            ],
            [
                "65179246828267243344\r\n10\r\n",
                "2\r\n"
            ],
            [
                "812198549934671375557139481874\r\n1\r\n",
                "5\r\n"
            ],
            [
                "9499163752731361764644926534638316941533484532515617457566428924341745191848214573884631511384862557\r\n20\r\n",
                "1\r\n"
            ],
            [
                "37259411\r\n12\r\n",
                "0\r\n"
            ],
            [
                "6542811896453\r\n6\r\n",
                "2\r\n"
            ],
            [
                "11676285991\r\n8\r\n",
                "1\r\n"
            ],
            [
                "81\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n"
            ]
        ]
    }
]