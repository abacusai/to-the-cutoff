[
    {
        "name": "Alarm Clocks Everywhere",
        "description": "Ivan is going to sleep now and wants to set his alarm clock. There will be\nmany necessary events tomorrow, the \n    i\n-th of them will start during the\n\n    x_i\n-th minute. Ivan doesn't want to skip any of the events, so he has to\nset his alarm clock in such a way that it rings during minutes \n    x_1, x_2,\n    \n    \u2026, x_n\n, so he will be awake during each of these minutes (note that\nit does not matter if his alarm clock will ring during any other minute). Ivan\ncan choose two properties for the alarm clock \u2014 the first minute it will ring\n(let's denote it as \n    y\n) and the interval between two consecutive signals\n(let's denote it by \n    p\n). After the clock is set, it will ring during\nminutes \n    y, y + p, y + 2p, y + 3p\n and so on. Ivan can choose any minute\nas the first one, but he cannot choose any arbitrary value of \n    p\n. He has\nto pick it among the given values \n    p_1, p_2, \n    \u2026, p_m\n (his phone does\nnot support any other options for this setting). So Ivan has to choose the\nfirst minute \n    y\n when the alarm clock should start ringing and the\ninterval between two consecutive signals \n    p_j\n in such a way that it will\nring during all given minutes \n    x_1, x_2, \n    \u2026, x_n\n (and it does not\nmatter if his alarm clock will ring in any other minutes). Your task is to\ntell the first minute \n    y\n and the index \n    j\n such that if Ivan sets his\nalarm clock with properties \n    y\n and \n    p_j\n it will ring during all\ngiven minutes \n    x_1, x_2, \n    \u2026, x_n\n or say that it is impossible to\nchoose such values of the given properties. If there are multiple answers, you\ncan print any. Input The first line of the input contains two integers \n    n\n\nand \n    m\n (\n    2 \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5, 1 \n    \u2264 m \n    \u2264 3 \n    \u00b7\n    10^5\n) \u2014 the number of events and the number of possible settings for the\ninterval between signals. The second line of the input contains \n    n\n\nintegers \n    x_1, x_2, \n    \u2026, x_n\n (\n    1 \n    \u2264 x_i \n    \u2264 10^18\n), where\n\n    x_i\n is the minute when \n    i\n-th event starts. It is guaranteed that\nall \n    x_i\n are given in increasing order (i. e. the condition \n    x_1 < x_2\n    < \n    \u2026 < x_n\n holds). The third line of the input contains \n    m\n\nintegers \n    p_1, p_2, \n    \u2026, p_m\n (\n    1 \n    \u2264 p_j \n    \u2264 10^18\n), where\n\n    p_j\n is the \n    j\n-th option for the interval between two consecutive\nsignals. Output If it's impossible to choose such values \n    y\n and \n    j\n\nso all constraints are satisfied, print \"NO\" in the first line. Otherwise\nprint \"YES\" in the first line. Then print two integers \n    y\n (\n    1 \n    \u2264 y\n    \n    \u2264 10^18\n) and \n    j\n (\n    1 \n    \u2264 j \n    \u2264 m\n) in the second line,\nwhere \n    y\n is the first minute Ivan's alarm clock should start ringing and\n\n    j\n is the index of the option for the interval between two consecutive\nsignals (options are numbered from \n    1\n to \n    m\n in the order they are\ngiven input). These values should be chosen in such a way that the alarm clock\nwill ring during all given minutes \n    x_1, x_2, \n    \u2026, x_n\n. If there are\nmultiple answers, you can print any. Examples Input 3 5 3 12 18 2 6 5 3 3\nOutput YES 3 4 Input 4 2 1 5 17 19 4 5 Output NO Input 4 2 1 5 17 19 2 1\nOutput YES 1 1\n\n",
        "cf_contest_id": 1155,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "number theory"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 5\r\n3 12 18\r\n2 6 5 3 3\r\n",
                "YES\r\n3 4"
            ],
            [
                "4 2\r\n1 5 17 19\r\n4 5\r\n",
                "NO"
            ],
            [
                "4 2\r\n1 5 17 19\r\n2 1\r\n",
                "YES\r\n1 1"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n2 8\r\n1\r\n",
                "YES\r\n2 1"
            ],
            [
                "2 1\r\n1 999999998000000002\r\n999999999\r\n",
                "YES\r\n1 1"
            ],
            [
                "2 1\r\n500000000000000000 1000000000000000000\r\n567567\r\n",
                "NO"
            ],
            [
                "2 1\r\n10000000000 20000000000\r\n10000000000\r\n",
                "YES\r\n10000000000 1"
            ],
            [
                "2 1\r\n1 1000000000000000000\r\n100000000000000007\r\n",
                "NO"
            ],
            [
                "2 1\r\n1 1000000000000000000\r\n5\r\n",
                "NO"
            ],
            [
                "3 1\r\n7 21 105\r\n84\r\n",
                "NO"
            ],
            [
                "2 1\r\n10 20\r\n5\r\n",
                "YES\r\n10 1"
            ],
            [
                "2 1\r\n6 16\r\n2\r\n",
                "YES\r\n6 1"
            ],
            [
                "2 1\r\n10 15\r\n9\r\n",
                "NO"
            ],
            [
                "2 1\r\n1 7\r\n2\r\n",
                "YES\r\n1 1"
            ],
            [
                "2 1\r\n5 11\r\n4\r\n",
                "NO"
            ],
            [
                "3 4\r\n4 25 53\r\n7 4 7 4\r\n",
                "YES\r\n4 1"
            ],
            [
                "4 3\r\n6 8 88 91\r\n10 5 2\r\n",
                "NO"
            ],
            [
                "4 4\r\n8 260 323 327\r\n9 7 4 1\r\n",
                "YES\r\n8 4"
            ],
            [
                "2 1\r\n7 8\r\n1\r\n",
                "YES\r\n7 1"
            ],
            [
                "5 3\r\n10 15 135 140 146\r\n5 6 8\r\n",
                "NO"
            ],
            [
                "2 1\r\n9 14\r\n3\r\n",
                "NO"
            ],
            [
                "3 4\r\n8 28 91\r\n2 7 9 4\r\n",
                "NO"
            ],
            [
                "5 1\r\n1 43 50 106 113\r\n7\r\n",
                "YES\r\n1 1"
            ],
            [
                "5 3\r\n6 24 25 31 121\r\n6 5 9\r\n",
                "NO"
            ],
            [
                "2 1\r\n2147483648 2147483650\r\n2\r\n",
                "YES\r\n2147483648 1"
            ],
            [
                "4 3\r\n8 32 74 242\r\n6 7 8\r\n",
                "YES\r\n8 1"
            ],
            [
                "4 1\r\n1 3 7 12\r\n2\r\n",
                "NO"
            ],
            [
                "5 3\r\n7 151 163 167 169\r\n2 2 9\r\n",
                "YES\r\n7 1"
            ],
            [
                "5 3\r\n10 73 433 1063 1073\r\n7 9 10\r\n",
                "NO"
            ],
            [
                "4 1\r\n4 5 7 9\r\n2\r\n",
                "NO"
            ],
            [
                "2 1\r\n2 5\r\n1\r\n",
                "YES\r\n2 1"
            ],
            [
                "2 2\r\n1 1000000000000000000\r\n1000000000000000000 1000000000000000000\r\n",
                "NO"
            ],
            [
                "2 1\r\n500000000000000000 1000000000000000000\r\n700000000\r\n",
                "NO"
            ],
            [
                "2 1\r\n1 1000000000000000000\r\n700000000\r\n",
                "NO"
            ],
            [
                "2 1\r\n1 1000000000000000000\r\n2\r\n",
                "NO"
            ],
            [
                "4 1\r\n4 6 7 8\r\n2\r\n",
                "NO"
            ]
        ]
    }
]