[
    {
        "name": "Domino for Young",
        "description": "You are given a Young diagram. Given diagram is a histogram with \n    n\n\ncolumns of lengths \n    a_1, a_2, \n    \u2026, a_n\n (\n    a_1 \n    \u2265 a_2 \n    \u2265\n    \u2026\n    \u2265 a_n \n    \u2265 1\n). Young diagram for \n    a=[3,2,2,2,1]\n. Your\ngoal is to find the largest number of non-overlapping dominos that you can\ndraw inside of this histogram, a domino is a \n    1 \n    \u00d7 2\n or \n    2\n    \n    \u00d7 1\n rectangle. Input The first line of input contain one integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 300\n     000\n): the number of columns in the\ngiven histogram. The next line of input contains \n    n\n integers \n    a_1, a_2,\n    \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 300\n     000, a_i \n    \u2265 a_i+1\n):\nthe lengths of columns. Output Output one integer: the largest number of non-\noverlapping dominos that you can draw inside of the given Young diagram.\nExample Input 5 3 2 2 2 1 Output 4 Note Some of the possible solutions for the\nexample:\n\n",
        "cf_contest_id": 1268,
        "cf_index": "B",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3 2 2 2 1\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n1 1 1 1 1\r\n",
                "2\r\n"
            ],
            [
                "3\r\n3 3 3\r\n",
                "4\r\n"
            ],
            [
                "1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "10\r\n9 8 7 7 6 4 3 2 1 1\r\n",
                "23\r\n"
            ],
            [
                "10\r\n99 83 62 53 47 33 24 15 10 9\r\n",
                "216\r\n"
            ],
            [
                "100\r\n100 100 99 98 97 92 92 92 92 91 89 87 87 87 86 85 84 82 82 81 81 80 79 78 78 77 77 76 76 74 72 71 71 70 69 66 64 63 63 62 60 59 59 59 55 54 53 52 52 51 49 49 49 47 47 46 46 45 44 43 42 41 41 41 40 39 38 37 37 36 31 29 25 23 22 22 21 21 20 17 17 16 15 15 14 14 13 12 12 10 9 9 8 8 8 7 4 3 3 3\r\n",
                "2545\r\n"
            ],
            [
                "100\r\n494 493 483 483 482 479 469 455 452 448 446 437 436 430 426 426 423 418 417 413 409 403 402 398 388 386 384 379 373 372 366 354 353 347 344 338 325 323 323 322 310 306 303 302 299 296 291 290 288 285 281 274 258 254 253 250 248 248 247 243 236 235 233 227 227 223 208 204 200 196 192 191 185 184 183 174 167 167 165 163 158 139 138 132 123 122 111 91 89 88 83 62 60 58 45 39 38 34 26 3\r\n",
                "13710\r\n"
            ],
            [
                "100\r\n1980 1932 1906 1898 1892 1883 1877 1858 1842 1833 1777 1710 1689 1678 1660 1653 1648 1647 1644 1639 1635 1635 1593 1571 1534 1470 1440 1435 1389 1272 1269 1268 1263 1255 1249 1237 1174 1174 1128 1069 1067 981 979 979 951 915 911 906 863 826 810 810 802 785 764 752 743 710 705 696 676 661 639 619 616 572 568 549 501 464 455 444 443 434 430 427 399 386 345 339 324 324 309 300 257 255 228 195 184 182 177 148 129 112 91 65 31 31 22 3\r\n",
                "46496\r\n"
            ],
            [
                "1\r\n300000\r\n",
                "150000\r\n"
            ]
        ]
    }
]