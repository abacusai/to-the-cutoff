[
    {
        "name": "Arson In Berland Forest",
        "description": "The Berland Forest can be represented as an infinite cell plane. Every cell\ncontains a tree. That is, contained before the recent events. A destructive\nfire raged through the Forest, and several trees were damaged by it. Precisely\nspeaking, you have a \n    n \n    \u00d7 m\n rectangle map which represents the\ndamaged part of the Forest. The damaged trees were marked as \"X\" while the\nremaining ones were marked as \".\". You are sure that all burnt trees are shown\non the map. All the trees outside the map are undamaged. The firemen quickly\nextinguished the fire, and now they are investigating the cause of it. The\nmain version is that there was an arson: at some moment of time (let's\nconsider it as \n    0\n) some trees were set on fire. At the beginning of\nminute \n    0\n, only the trees that were set on fire initially were burning.\nAt the end of each minute, the fire spread from every burning tree to each of\n\n    8\n neighboring trees. At the beginning of minute \n    T\n, the fire was\nextinguished. The firemen want to find the arsonists as quickly as possible.\nThe problem is, they know neither the value of \n    T\n (how long the fire has\nbeen raging) nor the coordinates of the trees that were initially set on fire.\nThey want you to find the maximum value of \n    T\n (to know how far could the\narsonists escape) and a possible set of trees that could be initially set on\nfire. Note that you'd like to maximize value \n    T\n but the set of trees can\nbe arbitrary. Input The first line contains two integer \n    n\n and \n    m\n\n(\n    1 \n    \u2264 n, m \n    \u2264 10^6\n, \n    1 \n    \u2264 n \n    \u00b7 m \n    \u2264 10^6\n) \u2014 the\nsizes of the map. Next \n    n\n lines contain the map. The \n    i\n-th line\ncorresponds to the \n    i\n-th row of the map and contains \n    m\n-character\nstring. The \n    j\n-th character of the \n    i\n-th string is \"X\" if the\ncorresponding tree is burnt and \".\" otherwise. It's guaranteed that the map\ncontains at least one \"X\". Output In the first line print the single integer\n\n    T\n \u2014 the maximum time the Forest was on fire. In the next \n    n\n lines\nprint the certificate: the map (\n    n \n    \u00d7 m\n rectangle) where the trees\nthat were set on fire are marked as \"X\" and all other trees are marked as \".\".\nExamples Input 3 6 XXXXXX XXXXXX XXXXXX Output 1 ...... .X.XX. ...... Input 10\n10 .XXXXXX... .XXXXXX... .XXXXXX... .XXXXXX... .XXXXXXXX. ...XXXXXX.\n...XXXXXX. ...XXXXXX. ...XXXXXX. .......... Output 2 .......... ..........\n...XX..... .......... .......... .......... .....XX... .......... ..........\n.......... Input 4 5 X.... ..XXX ..XXX ..XXX Output 0 X.... ..XXX ..XXX ..XXX\n\n",
        "cf_contest_id": 1227,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "graphs",
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 6\r\nXXXXXX\r\nXXXXXX\r\nXXXXXX\r\n",
                "1\r\n......\r\n.XXXX.\r\n......\r\n"
            ],
            [
                "10 10\r\n.XXXXXX...\r\n.XXXXXX...\r\n.XXXXXX...\r\n.XXXXXX...\r\n.XXXXXXXX.\r\n...XXXXXX.\r\n...XXXXXX.\r\n...XXXXXX.\r\n...XXXXXX.\r\n..........\r\n",
                "2\r\n..........\r\n..........\r\n...XX.....\r\n..........\r\n..........\r\n..........\r\n.....XX...\r\n..........\r\n..........\r\n..........\r\n"
            ],
            [
                "4 5\r\nX....\r\n..XXX\r\n..XXX\r\n..XXX\r\n",
                "0\r\nX....\r\n..XXX\r\n..XXX\r\n..XXX\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\nX\r\n",
                "0\r\nX\r\n"
            ],
            [
                "7 5\r\n..XXX\r\n..XXX\r\n..XXX\r\n.XXX.\r\nXXX..\r\nXXX..\r\nXXX..\r\n",
                "0\r\n..XXX\r\n..XXX\r\n..XXX\r\n.XXX.\r\nXXX..\r\nXXX..\r\nXXX..\r\n"
            ],
            [
                "3 8\r\nXXX..XXX\r\nXXXXXXXX\r\nXXXXXXXX\r\n",
                "0\r\nXXX..XXX\r\nXXXXXXXX\r\nXXXXXXXX\r\n"
            ],
            [
                "7 11\r\nXXX.XXX.XXX\r\nXXX.XXX.XXX\r\nXXX.XXX.XXX\r\n.XXXXXXXXX.\r\n..XXX.XXX..\r\n..XXX.XXX..\r\n..XXX.XXX..\r\n",
                "0\r\nXXX.XXX.XXX\r\nXXX.XXX.XXX\r\nXXX.XXX.XXX\r\n.XXXXXXXXX.\r\n..XXX.XXX..\r\n..XXX.XXX..\r\n..XXX.XXX..\r\n"
            ],
            [
                "5 5\r\n..XXX\r\n..XXX\r\nXXXXX\r\nXXXX.\r\nXXX..\r\n",
                "0\r\n..XXX\r\n..XXX\r\nXXXXX\r\nXXXX.\r\nXXX..\r\n"
            ]
        ]
    }
]