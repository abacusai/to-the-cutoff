[
    {
        "name": "Second price auction",
        "description": "Nowadays, most of the internet advertisements are not statically linked to a\nweb page. Instead, what will be shown to the person opening a web page is\ndetermined within 100 milliseconds after the web page is opened. Usually,\nmultiple companies compete for each ad slot on the web page in an auction.\nEach of them receives a request with details about the user, web page and ad\nslot and they have to respond within those 100 milliseconds with a bid they\nwould pay for putting an advertisement on that ad slot. The company that\nsuggests the highest bid wins the auction and gets to place its advertisement.\nIf there are several companies tied for the highest bid, the winner gets\npicked at random. However, the company that won the auction does not have to\npay the exact amount of its bid. In most of the cases, a second-price auction\nis used. This means that the amount paid by the company is equal to the\nmaximum of all the other bids placed for this ad slot. Let's consider one such\nbidding. There are n companies competing for placing an ad. The i-th of these\ncompanies will bid an integer number of microdollars equiprobably randomly\nchosen from the range between Li and Ri, inclusive. In the other words, the\nvalue of the i-th company bid can be any integer from the range [Li, Ri] with\nthe same probability. Determine the expected value that the winner will have\nto pay in a second-price auction. Input The first line of input contains an\ninteger number n (2 \u2264 n \u2264 5). n lines follow, the i-th of them containing two\nnumbers Li and Ri (1 \u2264 Li \u2264 Ri \u2264 10000) describing the i-th company's bid\npreferences. This problem doesn't have subproblems. You will get 8 points for\nthe correct submission. Output Output the answer with absolute or relative\nerror no more than 1e - 9. Examples Input 3 4 7 8 10 5 5 Output 5.7500000000\nInput 3 2 5 3 4 1 6 Output 3.5000000000 Note Consider the first example. The\nfirst company bids a random integer number of microdollars in range [4, 7];\nthe second company bids between 8 and 10, and the third company bids 5\nmicrodollars. The second company will win regardless of the exact value it\nbids, however the price it will pay depends on the value of first company's\nbid. With probability 0.5 the first company will bid at most 5 microdollars,\nand the second-highest price of the whole auction will be 5. With probability\n0.25 it will bid 6 microdollars, and with probability 0.25 it will bid 7\nmicrodollars. Thus, the expected value the second company will have to pay is\n0.5\u00b75 + 0.25\u00b76 + 0.25\u00b77 = 5.75.\n\n",
        "cf_contest_id": 513,
        "cf_index": "C",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "probabilities"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4 7\r\n8 10\r\n5 5\r\n",
                "5.75\r\n"
            ],
            [
                "3\r\n2 5\r\n3 4\r\n1 6\r\n",
                "3.5\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n1 10000\r\n1 10000\r\n1 10000\r\n1 10000\r\n1 10000\r\n",
                "6667.166666666691\r\n"
            ],
            [
                "2\r\n1 2\r\n1 2\r\n",
                "1.25\r\n"
            ],
            [
                "2\r\n1 3\r\n1 3\r\n",
                "1.5555555555555558\r\n"
            ],
            [
                "5\r\n1 7\r\n2 5\r\n3 9\r\n4 8\r\n5 6\r\n",
                "5.953061224489797\r\n"
            ],
            [
                "5\r\n17 9999\r\n19 9992\r\n1 10000\r\n6 9\r\n34 99\r\n",
                "5004.672756714459\r\n"
            ],
            [
                "5\r\n3778 9170\r\n2657 6649\r\n4038 9722\r\n3392 7255\r\n4890 8961\r\n",
                "6938.46272417274\r\n"
            ],
            [
                "5\r\n2194 6947\r\n2062 8247\r\n4481 8430\r\n3864 9409\r\n3784 5996\r\n",
                "6373.539094073018\r\n"
            ],
            [
                "5\r\n2906 6249\r\n659 9082\r\n2628 8663\r\n4199 5799\r\n2678 9558\r\n",
                "6062.183955164048\r\n"
            ],
            [
                "5\r\n659 8346\r\n2428 8690\r\n2357 5783\r\n3528 8580\r\n2425 7918\r\n",
                "6077.317876681528\r\n"
            ],
            [
                "5\r\n4075 6754\r\n1024 8762\r\n504 9491\r\n1159 6496\r\n375 9191\r\n",
                "5919.621927382158\r\n"
            ],
            [
                "5\r\n4787 9531\r\n3133 9597\r\n1754 9725\r\n4335 7124\r\n4269 7752\r\n",
                "7046.240483191895\r\n"
            ],
            [
                "5\r\n1851 8833\r\n1730 6325\r\n4901 9327\r\n4671 9278\r\n3163 9789\r\n",
                "7182.444906409036\r\n"
            ],
            [
                "5\r\n2563 8898\r\n2487 7923\r\n3048 5323\r\n142 7194\r\n4760 6061\r\n",
                "5657.238804524116\r\n"
            ],
            [
                "5\r\n979 6674\r\n1084 8758\r\n2003 5556\r\n478 7822\r\n3654 9623\r\n",
                "5721.932786256776\r\n"
            ],
            [
                "5\r\n4395 5976\r\n489 5355\r\n149 5158\r\n4462 5738\r\n2548 6658\r\n",
                "5102.037782765977\r\n"
            ],
            [
                "5\r\n3755 7859\r\n1245 7085\r\n592 5392\r\n1285 7892\r\n1442 7931\r\n",
                "5545.539181882945\r\n"
            ],
            [
                "5\r\n2171 7161\r\n4842 8682\r\n4547 9100\r\n269 9283\r\n3039 6492\r\n",
                "6641.501730946245\r\n"
            ],
            [
                "5\r\n1 1\r\n1 1\r\n2 2\r\n3 3\r\n4 4\r\n",
                "3.0\r\n"
            ],
            [
                "2\r\n1 1\r\n1 1\r\n",
                "1.0\r\n"
            ],
            [
                "2\r\n1 10000\r\n1 9999\r\n",
                "3333.666666666664\r\n"
            ]
        ]
    }
]