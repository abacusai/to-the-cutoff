[
    {
        "name": "Boring Queries",
        "description": "Yura owns a quite ordinary and boring array \n    a\n of length \n    n\n. You\nthink there is nothing more boring than that, but Vladik doesn't agree! In\norder to make Yura's array even more boring, Vladik makes \n    q\n boring\nqueries. Each query consists of two integers \n    x\n and \n    y\n. Before\nanswering a query, the bounds \n    l\n and \n    r\n for this query are\ncalculated: \n    l = (last + x) \n     n + 1\n, \n    r = (last + y) \n     n +\n    1\n, where \n    last\n is the answer on the previous query (zero initially),\nand \n    \n is the remainder operation. Whenever \n    l > r\n, they are\nswapped. After Vladik computes \n    l\n and \n    r\n for a query, he is to\ncompute the least common multiple (LCM) on the segment \n    [l; r]\n of the\ninitial array \n    a\n modulo \n    10^9 + 7\n. LCM of a multiset of integers is\nthe smallest positive integer that is divisible by all the elements of the\nmultiset. The obtained LCM is the answer for this query. Help Vladik and\ncompute the answer for each query! Input The first line contains a single\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the length of the array. The\nsecond line contains \n    n\n integers \n    a_i\n (\n    1 \n    \u2264 a_i \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the elements of the array. The third line contains a single\ninteger \n    q\n (\n    1 \n    \u2264 q \n    \u2264 10^5\n) \u2014 the number of queries. The next\n\n    q\n lines contain two integers \n    x\n and \n    y\n each (\n    1 \n    \u2264 x, y\n    \n    \u2264 n\n) \u2014 the description of the corresponding query. Output Print \n    q\n\nintegers \u2014 the answers for the queries. Example Input 3 2 3 5 4 1 3 3 3 2 3 2\n3 Output 6 2 15 30 Note Consider the example: boundaries for first query are\n\n    (0 + 1) \n     3 + 1 = 2\n and \n    (0 + 3) \n     3 + 1 = 1\n. LCM for\nsegment \n    [1, 2]\n is equal to \n    6\n; boundaries for second query are\n\n    (6 + 3) \n     3 + 1 = 1\n and \n    (6 + 3) \n     3 + 1 = 1\n. LCM for\nsegment \n    [1, 1]\n is equal to \n    2\n; boundaries for third query are \n    (2\n    + 2) \n     3 + 1 = 2\n and \n    (2 + 3) \n     3 + 1 = 3\n. LCM for segment\n\n    [2, 3]\n is equal to \n    15\n; boundaries for fourth query are \n    (15 + 2)\n    \n     3 + 1 = 3\n and \n    (15 + 3) \n     3 + 1 = 1\n. LCM for segment\n\n    [1, 3]\n is equal to \n    30\n.\n\n",
        "cf_contest_id": 1422,
        "cf_index": "F",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n2 3 5\r\n4\r\n1 3\r\n3 3\r\n2 3\r\n2 3\r\n",
                "6\r\n2\r\n15\r\n30\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n7\r\n1\r\n1 1\r\n",
                "7\r\n"
            ],
            [
                "10\r\n10 2 8 8 8 8 8 10 2 3\r\n10\r\n1 2\r\n6 1\r\n4 10\r\n1 9\r\n9 1\r\n6 10\r\n3 3\r\n8 1\r\n4 10\r\n6 7\r\n",
                "8\r\n120\r\n40\r\n120\r\n120\r\n40\r\n8\r\n120\r\n40\r\n40\r\n"
            ]
        ]
    }
]