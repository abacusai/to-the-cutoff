[
    {
        "name": "Memory and Casinos",
        "description": "There are n casinos lined in a row. If Memory plays at casino i, he has\nprobability pi to win and move to the casino on the right (i + 1) or exit the\nrow (if i = n), and a probability 1 - pi to lose and move to the casino on the\nleft (i - 1) or also exit the row (if i = 1). We say that Memory dominates on\nthe interval i... j if he completes a walk such that, He starts on casino i.\nHe never looses in casino i. He finishes his walk by winning in casino j. Note\nthat Memory can still walk left of the 1-st casino and right of the casino n\nand that always finishes the process. Now Memory has some requests, in one of\nthe following forms: 1 i a b: Set . 2 l r: Print the probability that Memory\nwill dominate on the interval l... r, i.e. compute the probability that Memory\nwill first leave the segment l... r after winning at casino r, if she starts\nin casino l. It is guaranteed that at any moment of time p is a non-decreasing\nsequence, i.e. pi \u2264 pi + 1 for all i from 1 to n - 1. Please help Memory by\nanswering all his requests! Input The first line of the input contains two\nintegers n and q(1 \u2264 n, q \u2264 100 000), \u2014 number of casinos and number of\nrequests respectively. The next n lines each contain integers ai and bi (1 \u2264\nai < bi \u2264 10^9) \u2014 is the probability pi of winning in casino i. The next q\nlines each contain queries of one of the types specified above (1 \u2264 a < b \u2264\n10^9, 1 \u2264 i \u2264 n, 1 \u2264 l \u2264 r \u2264 n). It's guaranteed that there will be at least\none query of type 2, i.e. the output will be non-empty. Additionally, it is\nguaranteed that p forms a non-decreasing sequence at all times. Output Print a\nreal number for every request of type 2 \u2014 the probability that boy will\n\"dominate\" on that interval. Your answer will be considered correct if its\nabsolute error does not exceed 10^-4. Namely: let's assume that one of your\nanswers is a, and the corresponding answer of the jury is b. The checker\nprogram will consider your answer correct if |a - b| \u2264 10^-4. Example Input 3\n13 1 3 1 2 2 3 2 1 1 2 1 2 2 1 3 2 2 2 2 2 3 2 3 3 1 2 2 3 2 1 1 2 1 2 2 1 3 2\n2 2 2 2 3 2 3 3 Output 0.3333333333 0.2000000000 0.1666666667 0.5000000000\n0.4000000000 0.6666666667 0.3333333333 0.2500000000 0.2222222222 0.6666666667\n0.5714285714 0.6666666667\n\n",
        "cf_contest_id": 712,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "math",
            "probabilities"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 13\r\n1 3\r\n1 2\r\n2 3\r\n2 1 1\r\n2 1 2\r\n2 1 3\r\n2 2 2\r\n2 2 3\r\n2 3 3\r\n1 2 2 3\r\n2 1 1\r\n2 1 2\r\n2 1 3\r\n2 2 2\r\n2 2 3\r\n2 3 3\r\n",
                "0.333333333\r\n0.200000000\r\n0.166666667\r\n0.500000000\r\n0.400000000\r\n0.666666667\r\n0.333333333\r\n0.250000000\r\n0.222222222\r\n0.666666667\r\n0.571428571\r\n0.666666667\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 10\r\n1 85\r\n1 8\r\n20 74\r\n32 80\r\n32 80\r\n11 25\r\n3 6\r\n3 6\r\n1 2\r\n33 44\r\n1 10 36 60\r\n2 4 7\r\n1 10 33 44\r\n1 1 1 85\r\n1 3 32 80\r\n2 8 10\r\n2 3 7\r\n1 3 6 25\r\n1 7 3 6\r\n2 6 7\r\n",
                "0.095444685\r\n0.300000000\r\n0.059823249\r\n0.282051282\r\n"
            ],
            [
                "5 5\r\n15223863 596256824\r\n69850702 213293594\r\n217671208 490034787\r\n551809037 727132431\r\n810145317 815650218\r\n2 3 5\r\n1 5 995227374 1000000000\r\n2 4 5\r\n1 4 919396486 1000000000\r\n2 4 4\r\n",
                "0.377142239\r\n0.758007355\r\n0.919396486\r\n"
            ],
            [
                "5 5\r\n203159550 941213649\r\n242341145 603612530\r\n454933956 768677137\r\n890472452 994511982\r\n968574194 989697019\r\n1 1 254170126 1000000000\r\n1 1 388507478 1000000000\r\n1 3 859416919 1000000000\r\n2 5 5\r\n1 2 840240008 1000000000\r\n",
                "0.978657281\r\n"
            ],
            [
                "5 5\r\n101576910 988055931\r\n511224780 958107426\r\n605200721 861313176\r\n511475333 652613651\r\n750636421 923714814\r\n2 4 4\r\n2 5 5\r\n1 2 660225166 1000000000\r\n1 3 782621949 1000000000\r\n1 2 614632254 1000000000\r\n",
                "0.783733733\r\n0.812627891\r\n"
            ],
            [
                "5 5\r\n221711948 855542720\r\n186069744 429793474\r\n226822536 423707333\r\n675702632 988854054\r\n522856643 763743641\r\n2 4 4\r\n2 3 4\r\n2 4 5\r\n1 1 79419874 1000000000\r\n2 1 1\r\n",
                "0.683318867\r\n0.440472539\r\n0.596316731\r\n0.079419874\r\n"
            ],
            [
                "5 5\r\n364471481 955291668\r\n329120933 462852086\r\n685690447 781091631\r\n884077552 990362775\r\n367089595 383116916\r\n1 3 888120177 1000000000\r\n1 1 492151775 1000000000\r\n2 1 4\r\n1 3 884572517 1000000000\r\n2 3 4\r\n",
                "0.398350780\r\n0.872465421\r\n"
            ],
            [
                "5 5\r\n59851679 391197128\r\n203779408 551397233\r\n472568405 868976438\r\n427611254 628812201\r\n746845696 882663270\r\n2 2 3\r\n1 1 76134344 1000000000\r\n2 5 5\r\n1 3 647473316 1000000000\r\n2 1 5\r\n",
                "0.241733487\r\n0.846127534\r\n0.019465688\r\n"
            ],
            [
                "5 5\r\n78198955 715657989\r\n135383712 809195832\r\n302070785 824401976\r\n284963918 366534177\r\n394664781 406987241\r\n2 2 4\r\n1 5 971368487 1000000000\r\n2 1 3\r\n2 2 5\r\n2 2 5\r\n",
                "0.058662334\r\n0.008341753\r\n0.058413514\r\n0.058413514\r\n"
            ],
            [
                "5 5\r\n1 1000000000\r\n1 1000000000\r\n1 1000000000\r\n1 1000000000\r\n1 1000000000\r\n2 1 3\r\n2 1 2\r\n2 2 2\r\n2 3 5\r\n2 3 4\r\n",
                "0.000000000\r\n0.000000000\r\n0.000000001\r\n0.000000000\r\n0.000000000\r\n"
            ]
        ]
    }
]