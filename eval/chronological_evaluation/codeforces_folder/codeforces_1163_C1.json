[
    {
        "name": "Power Transmission (Easy Edition)",
        "description": "This problem is same as the next one, but has smaller constraints. It was a\nSunday morning when the three friends Selena, Shiro and Katie decided to have\na trip to the nearby power station (do not try this at home). After arriving\nat the power station, the cats got impressed with a large power transmission\nsystem consisting of many chimneys, electric poles, and wires. Since they are\ncats, they found those things gigantic. At the entrance of the station, there\nis a map describing the complicated wiring system. Selena is the best at math\namong three friends. He decided to draw the map on the Cartesian plane. Each\npole is now a point at some coordinates \n    (x_i, y_i)\n. Since every pole is\ndifferent, all of the points representing these poles are distinct. Also,\nevery two poles are connected with each other by wires. A wire is a straight\nline on the plane infinite in both directions. If there are more than two\npoles lying on the same line, they are connected by a single common wire.\nSelena thinks, that whenever two different electric wires intersect, they may\ninterfere with each other and cause damage. So he wonders, how many pairs are\nintersecting? Could you help him with this problem? Input The first line\ncontains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 50\n) \u2014 the number of\nelectric poles. Each of the following \n    n\n lines contains two integers\n\n    x_i\n, \n    y_i\n (\n    -10^4 \n    \u2264 x_i, y_i \n    \u2264 10^4\n) \u2014 the coordinates\nof the poles. It is guaranteed that all of these \n    n\n points are distinct.\nOutput Print a single integer \u2014 the number of pairs of wires that are\nintersecting. Examples Input 4 0 0 1 1 0 3 1 2 Output 14 Input 4 0 0 0 2 0 4 2\n0 Output 6 Input 3 -1 -1 1 0 3 1 Output 0 Note In the first example: In the\nsecond example: Note that the three poles \n    (0, 0)\n, \n    (0, 2)\n and\n\n    (0, 4)\n are connected by a single wire. In the third example:\n\n",
        "cf_contest_id": 1163,
        "cf_index": "C1",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "geometry"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n0 0\r\n1 1\r\n0 3\r\n1 2\r\n",
                "14"
            ],
            [
                "4\r\n0 0\r\n0 2\r\n0 4\r\n2 0\r\n",
                "6"
            ],
            [
                "3\r\n-1 -1\r\n1 0\r\n3 1\r\n",
                "0"
            ]
        ],
        "private_cases": [
            [
                "4\r\n-10000 -10000\r\n-10000 10000\r\n10000 -10000\r\n10000 10000\r\n",
                "13"
            ],
            [
                "4\r\n-10000 -10000\r\n-10000 -9999\r\n10000 10000\r\n9999 10000\r\n",
                "14"
            ],
            [
                "16\r\n0 0\r\n0 2\r\n0 4\r\n0 6\r\n2 0\r\n2 2\r\n2 4\r\n2 6\r\n4 0\r\n4 2\r\n4 4\r\n4 6\r\n6 0\r\n6 2\r\n6 4\r\n6 6\r\n",
                "1783"
            ],
            [
                "25\r\n-10000 -10000\r\n-10000 -5000\r\n-10000 0\r\n-10000 5000\r\n-10000 10000\r\n-5000 -10000\r\n-5000 -5000\r\n-5000 0\r\n-5000 5000\r\n-5000 10000\r\n0 -10000\r\n0 -5000\r\n0 0\r\n0 5000\r\n0 10000\r\n5000 -10000\r\n5000 -5000\r\n5000 0\r\n5000 5000\r\n5000 10000\r\n10000 -10000\r\n10000 -5000\r\n10000 0\r\n10000 5000\r\n10000 10000\r\n",
                "9324"
            ],
            [
                "2\r\n10000 10000\r\n-10000 -10000\r\n",
                "0"
            ],
            [
                "20\r\n-5118 -9140\r\n-5118 -7807\r\n-5118 -5328\r\n-5118 -3139\r\n-5118 -1442\r\n-5118 -1169\r\n-5118 -733\r\n-5118 3460\r\n-5118 8555\r\n-5118 9702\r\n-3971 -9140\r\n-3971 -7807\r\n-3971 -5328\r\n-3971 -3139\r\n-3971 -1442\r\n-3971 -1169\r\n-3971 -733\r\n-3971 3460\r\n-3971 8555\r\n-3971 9702\r\n",
                "5105"
            ],
            [
                "21\r\n-8207 -8742\r\n-8207 2162\r\n-8207 3741\r\n-6190 -8742\r\n-6190 2162\r\n-6190 3741\r\n-2214 -8742\r\n-2214 2162\r\n-2214 3741\r\n-1839 -8742\r\n-1839 2162\r\n-1839 3741\r\n207 -8742\r\n207 2162\r\n207 3741\r\n3032 -8742\r\n3032 2162\r\n3032 3741\r\n8740 -8742\r\n8740 2162\r\n8740 3741\r\n",
                "9156"
            ],
            [
                "20\r\n-7068 -9088\r\n-7068 -7174\r\n-7068 -6012\r\n-7068 -3037\r\n-7068 3299\r\n532 -9088\r\n532 -7174\r\n532 -6012\r\n532 -3037\r\n532 3299\r\n6883 -9088\r\n6883 -7174\r\n6883 -6012\r\n6883 -3037\r\n6883 3299\r\n8251 -9088\r\n8251 -7174\r\n8251 -6012\r\n8251 -3037\r\n8251 3299\r\n",
                "8240"
            ],
            [
                "25\r\n1964 -4517\r\n5939 -4080\r\n9503 -7541\r\n-5037 -6950\r\n-9914 5015\r\n-435 7555\r\n-9321 -2202\r\n-5036 4224\r\n4946 -6785\r\n-6824 -9830\r\n-9124 9117\r\n-8396 -2748\r\n9284 556\r\n-1672 -6681\r\n-8782 9912\r\n-8164 4679\r\n1804 -6201\r\n-1155 2405\r\n-858 4105\r\n419 -7325\r\n-8034 -3084\r\n-7823 -5829\r\n-5784 5391\r\n9515 5259\r\n-8078 752\r\n",
                "44850"
            ],
            [
                "25\r\n5061 -2382\r\n-4080 9503\r\n-4081 9503\r\n5061 -2381\r\n-6549 9641\r\n-8510 6047\r\n-8110 8720\r\n6829 -8424\r\n-1413 -5926\r\n2446 -3190\r\n5405 8413\r\n8272 6829\r\n3034 -3978\r\n-3403 3036\r\n1383 4041\r\n829 327\r\n-4079 9504\r\n9293 -5091\r\n486 -5050\r\n6384 3727\r\n4787 6634\r\n4492 1126\r\n-1288 -4938\r\n4345 8056\r\n-3402 3035\r\n",
                "43365"
            ],
            [
                "16\r\n297 3286\r\n-9374 4754\r\n7891 -4091\r\n6087 -1252\r\n3371 -858\r\n789 -9370\r\n7241 2950\r\n-7390 355\r\n-5536 -3119\r\n2413 -5560\r\n4673 7622\r\n5344 -9455\r\n1918 -8370\r\n-6034 -4144\r\n9018 -996\r\n-7542 -9138\r\n",
                "7140"
            ],
            [
                "16\r\n-7073 -2432\r\n4754 7891\r\n4753 7890\r\n4755 7892\r\n1033 -7465\r\n4487 -9951\r\n-4613 3633\r\n-6753 9089\r\n5853 -1919\r\n-236 5170\r\n4754 7889\r\n-9989 -3488\r\n-1390 5520\r\n3139 8543\r\n4754 7890\r\n7576 5150\r\n",
                "6670"
            ],
            [
                "12\r\n1804 -7018\r\n-3551 1915\r\n-8148 5497\r\n-3430 -2988\r\n377 -1656\r\n-3799 6338\r\n-4248 -8428\r\n7371 -5005\r\n1216 406\r\n-294 5589\r\n-6477 -8889\r\n-8919 3676\r\n",
                "2145"
            ],
            [
                "12\r\n-9440 -8967\r\n1915 -8148\r\n-7216 8361\r\n6338 -4248\r\n-1425 -2251\r\n1216 406\r\n-2676 8355\r\n-8889 -8919\r\n-1163 -4185\r\n5018 -7302\r\n-2724 3986\r\n-7890 1900\r\n",
                "2016"
            ],
            [
                "10\r\n3986 -4462\r\n-5492 -8077\r\n-5005 4012\r\n8092 5848\r\n5159 9077\r\n-9814 5652\r\n-2848 -6707\r\n-1528 8298\r\n9444 -4143\r\n-7928 1163\r\n",
                "990"
            ],
            [
                "10\r\n-5475 1753\r\n-8077 -5005\r\n7903 -131\r\n5159 9077\r\n5159 9076\r\n-6761 4557\r\n-9188 -9329\r\n-4591 617\r\n-9686 -6410\r\n648 -1608\r\n",
                "990"
            ],
            [
                "2\r\n6757 4799\r\n-1343 -7745\r\n",
                "0"
            ],
            [
                "2\r\n8303 2432\r\n-7745 -4751\r\n",
                "0"
            ],
            [
                "6\r\n-9129 -8491\r\n-9129 -1754\r\n-9129 -1316\r\n1679 -8491\r\n1679 -1754\r\n1679 -1316\r\n",
                "51"
            ],
            [
                "3\r\n-4928 7147\r\n3808 3567\r\n2434 8649\r\n",
                "3"
            ],
            [
                "3\r\n-1547 4830\r\n3567 2434\r\n1522 -4418\r\n",
                "3"
            ],
            [
                "9\r\n-8172 -8016\r\n-8172 -63\r\n-8172 9586\r\n-1609 -8016\r\n-1609 -63\r\n-1609 9586\r\n2972 -8016\r\n2972 -63\r\n2972 9586\r\n",
                "270"
            ],
            [
                "4\r\n5648 -804\r\n1518 -2267\r\n7358 -6618\r\n-4504 2047\r\n",
                "15"
            ],
            [
                "4\r\n-3955 7228\r\n-2267 7358\r\n-5256 -1266\r\n9674 -3048\r\n",
                "15"
            ],
            [
                "12\r\n796 -415\r\n796 169\r\n796 2695\r\n1979 -415\r\n1979 169\r\n1979 2695\r\n5371 -415\r\n5371 169\r\n5371 2695\r\n8366 -415\r\n8366 169\r\n8366 2695\r\n",
                "894"
            ],
            [
                "5\r\n-8893 8986\r\n-3629 9045\r\n-7719 -6470\r\n-258 4491\r\n-6902 -6866\r\n",
                "45"
            ],
            [
                "5\r\n8456 -2932\r\n9045 -7719\r\n-10000 6748\r\n9044 -7720\r\n-1125 -914\r\n",
                "45"
            ],
            [
                "15\r\n-7871 -4833\r\n-7871 -1936\r\n-7871 425\r\n-4790 -4833\r\n-4790 -1936\r\n-4790 425\r\n912 -4833\r\n912 -1936\r\n912 425\r\n4236 -4833\r\n4236 -1936\r\n4236 425\r\n8382 -4833\r\n8382 -1936\r\n8382 425\r\n",
                "2265"
            ],
            [
                "42\r\n-5391 -2932\r\n-5391 -2868\r\n-5391 1744\r\n-5391 2236\r\n-5391 4148\r\n-5391 5217\r\n-5391 6188\r\n-3584 -2932\r\n-3584 -2868\r\n-3584 1744\r\n-3584 2236\r\n-3584 4148\r\n-3584 5217\r\n-3584 6188\r\n-1657 -2932\r\n-1657 -2868\r\n-1657 1744\r\n-1657 2236\r\n-1657 4148\r\n-1657 5217\r\n-1657 6188\r\n3218 -2932\r\n3218 -2868\r\n3218 1744\r\n3218 2236\r\n3218 4148\r\n3218 5217\r\n3218 6188\r\n7582 -2932\r\n7582 -2868\r\n7582 1744\r\n7582 2236\r\n7582 4148\r\n7582 5217\r\n7582 6188\r\n8131 -2932\r\n8131 -2868\r\n8131 1744\r\n8131 2236\r\n8131 4148\r\n8131 5217\r\n8131 6188\r\n",
                "206367"
            ]
        ]
    }
]