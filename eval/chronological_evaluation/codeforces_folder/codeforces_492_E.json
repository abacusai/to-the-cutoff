[
    {
        "name": "Vanya and Field",
        "description": "Vanya decided to walk in the field of size n \u00d7 n cells. The field contains m\napple trees, the i-th apple tree is at the cell with coordinates (xi, yi).\nVanya moves towards vector (dx, dy). That means that if Vanya is now at the\ncell (x, y), then in a second he will be at cell . The following condition is\nsatisfied for the vector: , where is the largest integer that divides both a\nand b. Vanya ends his path when he reaches the square he has already visited.\nVanya wonders, from what square of the field he should start his path to see\nas many apple trees as possible. Input The first line contains integers n, m,\ndx, dy(1 \u2264 n \u2264 10^6, 1 \u2264 m \u2264 10^5, 1 \u2264 dx, dy \u2264 n) \u2014 the size of the field,\nthe number of apple trees and the vector of Vanya's movement. Next m lines\ncontain integers xi, yi (0 \u2264 xi, yi \u2264 n - 1) \u2014 the coordinates of apples. One\ncell may contain multiple apple trees. Output Print two space-separated\nnumbers \u2014 the coordinates of the cell from which you should start your path.\nIf there are several answers you are allowed to print any of them. Examples\nInput 5 5 2 3 0 0 1 2 1 3 2 4 3 1 Output 1 3 Input 2 3 1 1 0 0 0 1 1 1 Output\n0 0 Note In the first sample Vanya's path will look like: (1, 3) - (3, 1) -\n(0, 4) - (2, 2) - (4, 0) - (1, 3) In the second sample: (0, 0) - (1, 1) - (0,\n0)\n\n",
        "cf_contest_id": 492,
        "cf_index": "E",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 5 2 3\r\n0 0\r\n1 2\r\n1 3\r\n2 4\r\n3 1\r\n",
                "0 4\r\n"
            ],
            [
                "2 3 1 1\r\n0 0\r\n0 1\r\n1 1\r\n",
                "0 0\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 5 2 4\r\n0 0\r\n1 2\r\n1 3\r\n2 4\r\n3 1\r\n",
                "0 0\r\n"
            ],
            [
                "6 6 5 5\r\n0 0\r\n0 1\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n",
                "0 0\r\n"
            ],
            [
                "6 6 1 1\r\n0 0\r\n1 1\r\n2 1\r\n0 1\r\n1 2\r\n3 4\r\n",
                "0 1\r\n"
            ],
            [
                "1 1 1 1\r\n0 0\r\n",
                "0 0\r\n"
            ],
            [
                "10 10 7 3\r\n9 0\r\n0 0\r\n7 6\r\n6 5\r\n4 8\r\n0 3\r\n2 1\r\n9 2\r\n7 1\r\n8 6\r\n",
                "0 3\r\n"
            ],
            [
                "10 10 3 9\r\n0 0\r\n3 9\r\n6 8\r\n0 1\r\n3 0\r\n6 9\r\n0 2\r\n3 1\r\n6 0\r\n0 0\r\n",
                "0 0\r\n"
            ],
            [
                "4 1 3 3\r\n0 0\r\n",
                "0 0\r\n"
            ],
            [
                "4 1 3 3\r\n3 3\r\n",
                "0 0\r\n"
            ],
            [
                "4 1 1 3\r\n0 2\r\n",
                "0 2\r\n"
            ],
            [
                "4 1 1 3\r\n0 3\r\n",
                "0 3\r\n"
            ],
            [
                "4 3 3 3\r\n0 1\r\n0 3\r\n3 0\r\n",
                "0 1\r\n"
            ],
            [
                "4 3 3 3\r\n0 2\r\n0 3\r\n3 0\r\n",
                "0 1\r\n"
            ],
            [
                "4 3 3 3\r\n0 0\r\n0 0\r\n0 1\r\n",
                "0 0\r\n"
            ],
            [
                "4 3 1 3\r\n0 0\r\n0 3\r\n0 3\r\n",
                "0 3\r\n"
            ],
            [
                "2 2 1 1\r\n0 0\r\n1 1\r\n",
                "0 0\r\n"
            ],
            [
                "2 2 1 1\r\n0 0\r\n0 1\r\n",
                "0 0\r\n"
            ],
            [
                "2 15 1 1\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n",
                "0 0\r\n"
            ],
            [
                "2 15 1 1\r\n0 0\r\n0 1\r\n0 0\r\n0 1\r\n0 0\r\n0 1\r\n0 0\r\n0 1\r\n0 0\r\n0 1\r\n0 0\r\n0 1\r\n0 0\r\n0 1\r\n0 0\r\n",
                "0 0\r\n"
            ],
            [
                "2 15 1 1\r\n0 0\r\n0 1\r\n0 0\r\n0 1\r\n0 0\r\n0 1\r\n1 0\r\n0 1\r\n0 0\r\n0 1\r\n0 0\r\n0 1\r\n0 0\r\n0 1\r\n0 0\r\n",
                "0 1\r\n"
            ]
        ]
    }
]