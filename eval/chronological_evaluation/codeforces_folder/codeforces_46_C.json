[
    {
        "name": "Hamsters and Tigers",
        "description": "Today there is going to be an unusual performance at the circus \u2014 hamsters and\ntigers will perform together! All of them stand in circle along the arena edge\nand now the trainer faces a difficult task: he wants to swap the animals'\npositions so that all the hamsters stood together and all the tigers also\nstood together. The trainer swaps the animals in pairs not to create a mess.\nHe orders two animals to step out of the circle and swap places. As hamsters\nfeel highly uncomfortable when tigers are nearby as well as tigers get nervous\nwhen there's so much potential prey around (consisting not only of hamsters\nbut also of yummier spectators), the trainer wants to spend as little time as\npossible moving the animals, i.e. he wants to achieve it with the minimal\nnumber of swaps. Your task is to help him. Input The first line contains\nnumber n (2 \u2264 n \u2264 1000) which indicates the total number of animals in the\narena. The second line contains the description of the animals' positions. The\nline consists of n symbols \"H\" and \"T\". The \"H\"s correspond to hamsters and\nthe \"T\"s correspond to tigers. It is guaranteed that at least one hamster and\none tiger are present on the arena. The animals are given in the order in\nwhich they are located circle-wise, in addition, the last animal stands near\nthe first one. Output Print the single number which is the minimal number of\nswaps that let the trainer to achieve his goal. Examples Input 3 HTH Output 0\nInput 9 HTHTHTHHT Output 2 Note In the first example we shouldn't move anybody\nbecause the animals of each species already stand apart from the other\nspecies. In the second example you may swap, for example, the tiger in\nposition 2 with the hamster in position 5 and then \u2014 the tiger in position 9\nwith the hamster in position 7.\n\n",
        "cf_contest_id": 46,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\nHTH\r\n",
                "0\r\n"
            ],
            [
                "9\r\nHTHTHTHHT\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\nTH\r\n",
                "0\r\n"
            ],
            [
                "4\r\nHTTH\r\n",
                "0\r\n"
            ],
            [
                "4\r\nHTHT\r\n",
                "1\r\n"
            ],
            [
                "7\r\nTTTHTTT\r\n",
                "0\r\n"
            ],
            [
                "8\r\nHHTHHTHH\r\n",
                "1\r\n"
            ],
            [
                "13\r\nHTTTHHHTTTTHH\r\n",
                "3\r\n"
            ],
            [
                "20\r\nTTHTHTHHTHTTHHTTTHHH\r\n",
                "4\r\n"
            ],
            [
                "35\r\nTTTTTTHTTHTTTTTHTTTTTTTTTTTHTHTTTTT\r\n",
                "3\r\n"
            ],
            [
                "120\r\nTTTTTTTHTHTHTTTTTHTHTTTTHTTTTTTTTTTTTTTTTTTTTHTTHTTTTHTTHTTTTTTTTTTTTTTTHTTTTTTHTHTTHTTTTTTHTTTTTTTTTHTTHTTTTHTTTHTTTTTH\r\n",
                "14\r\n"
            ],
            [
                "19\r\nHHHHHHHHHHHHHTTTHHH\r\n",
                "0\r\n"
            ],
            [
                "87\r\nHTHHTTHHHHTHHHHHTTTHHTHHHHTTTTHHHTTHHTHTHTHHTTHTHHTHTHTTHHHTTTTTHTTHHHHHHTHHTHHTHTTHTHH\r\n",
                "17\r\n"
            ],
            [
                "178\r\nTHHHTHTTTHTTHTTHHHHHTTTHTTHHTHTTTHTHTTTTTHHHTHTHHHTHHHTTTTTTTTHHHHTTHHTHHHHTHTTTHHHHHHTHHTHTTHTHTTTTTTTTTHHTTHHTHTTHHTHHHHHTTHHTTHHTTHHHTTHHTTTTHTHHHTHTTHTHTTTHHHHTHHTHHHTHTTTTTT\r\n",
                "40\r\n"
            ]
        ]
    }
]