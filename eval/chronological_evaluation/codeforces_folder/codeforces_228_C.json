[
    {
        "name": "Fractal Detector",
        "description": "Little Vasya likes painting fractals very much. He does it like this. First\nthe boy cuts out a 2 \u00d7 2-cell square out of squared paper. Then he paints some\ncells black. The boy calls the cut out square a fractal pattern. Then he takes\na clean square sheet of paper and paints a fractal by the following algorithm:\nHe divides the sheet into four identical squares. A part of them is painted\nblack according to the fractal pattern. Each square that remained white, is\nsplit into 4 lesser white squares, some of them are painted according to the\nfractal pattern. Each square that remained black, is split into 4 lesser black\nsquares. In each of the following steps step 2 repeats. To draw a fractal, the\nboy can make an arbitrary positive number of steps of the algorithm. But he\nneed to make at least two steps. In other words step 2 of the algorithm must\nbe done at least once. The resulting picture (the square with painted cells)\nwill be a fractal. The figure below shows drawing a fractal (here boy made\nthree steps of the algorithm). One evening Vasya got very tired, so he didn't\npaint the fractal, he just took a sheet of paper, painted a n \u00d7 m-cell field.\nThen Vasya paint some cells black. Now he wonders, how many squares are on the\nfield, such that there is a fractal, which can be obtained as described above,\nand which is equal to that square. Square is considered equal to some fractal\nif they consist of the same amount of elementary not divided cells and for\neach elementary cell of the square corresponding elementary cell of the\nfractal have the same color. Input The first line contains two space-separated\nintegers n, m (2 \u2264 n, m \u2264 500) \u2014 the number of rows and columns of the field,\ncorrespondingly. Next n lines contain m characters each \u2014 the description of\nthe field, painted by Vasya. Character \".\" represents a white cell, character\n\"*\" represents a black cell. It is guaranteed that the field description\ndoesn't contain other characters than \".\" and \"*\". Output On a single line\nprint a single integer \u2014 the number of squares on the field, such that these\nsquares contain a drawn fractal, which can be obtained as described above.\nExamples Input 6 11 ......*.*** *.*.*....** .***....*.* ..***.*....\n.*.*.....** ......*.*.. Output 3 Input 4 4 ..** ..** .... .... Output 0 Note\nThe answer for the first sample is shown on the picture below. Fractals are\noutlined by red, blue and green squares. The answer for the second sample is\n0. There is no fractal, equal to the given picture.\n\n",
        "cf_contest_id": 228,
        "cf_index": "C",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "hashing"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 11\r\n......*.***\r\n*.*.*....**\r\n.***....*.*\r\n..***.*....\r\n.*.*.....**\r\n......*.*..\r\n",
                "3"
            ],
            [
                "4 4\r\n..**\r\n..**\r\n....\r\n....\r\n",
                "0"
            ]
        ],
        "private_cases": [
            [
                "10 10\r\n**.***.***\r\n****.***.*\r\n.******..*\r\n*********.\r\n*.*.***.**\r\n*******..*\r\n******..*.\r\n***.******\r\n..*..*.***\r\n.****.**.*\r\n",
                "0"
            ],
            [
                "2 2\r\n*.\r\n*.\r\n",
                "0"
            ],
            [
                "2 2\r\n*.\r\n.*\r\n",
                "0"
            ],
            [
                "2 2\r\n*.\r\n..\r\n",
                "0"
            ],
            [
                "2 2\r\n**\r\n*.\r\n",
                "0"
            ],
            [
                "2 2\r\n**\r\n.*\r\n",
                "0"
            ],
            [
                "2 2\r\n**\r\n*.\r\n",
                "0"
            ],
            [
                "2 2\r\n**\r\n.*\r\n",
                "0"
            ],
            [
                "2 2\r\n..\r\n*.\r\n",
                "0"
            ],
            [
                "10 5\r\n*****\r\n.***.\r\n.**..\r\n*****\r\n**.*.\r\n*****\r\n..**.\r\n*****\r\n**.*.\r\n**.**\r\n",
                "0"
            ],
            [
                "5 10\r\n*..*.*.***\r\n*..**.****\r\n*****.*.**\r\n*..*****..\r\n*.**.*.***\r\n",
                "0"
            ],
            [
                "10 10\r\n.*******.*\r\n**.*******\r\n..********\r\n**..******\r\n*.*.*..*.*\r\n.*.**..***\r\n*******.**\r\n***.*****.\r\n****.****.\r\n.*.*..****\r\n",
                "3"
            ],
            [
                "4 4\r\n***.\r\n***.\r\n***.\r\n***.\r\n",
                "1"
            ],
            [
                "4 4\r\n.***\r\n*.**\r\n**.*\r\n***.\r\n",
                "1"
            ],
            [
                "4 4\r\n****\r\n****\r\n****\r\n***.\r\n",
                "1"
            ],
            [
                "4 4\r\n***.\r\n**.*\r\n*.**\r\n.***\r\n",
                "1"
            ],
            [
                "4 4\r\n.***\r\n.***\r\n.***\r\n.***\r\n",
                "1"
            ],
            [
                "4 4\r\n****\r\n****\r\n****\r\n.***\r\n",
                "1"
            ],
            [
                "4 4\r\n***.\r\n****\r\n****\r\n****\r\n",
                "1"
            ],
            [
                "4 4\r\n.***\r\n****\r\n****\r\n****\r\n",
                "1"
            ],
            [
                "4 4\r\n****\r\n****\r\n****\r\n****\r\n",
                "1"
            ],
            [
                "8 8\r\n*******.\r\n*******.\r\n*******.\r\n*******.\r\n*******.\r\n*******.\r\n*******.\r\n*******.\r\n",
                "26"
            ],
            [
                "8 8\r\n.*******\r\n*.******\r\n**.*****\r\n***.****\r\n****.***\r\n*****.**\r\n******.*\r\n*******.\r\n",
                "12"
            ],
            [
                "8 8\r\n********\r\n********\r\n********\r\n********\r\n********\r\n********\r\n********\r\n*******.\r\n",
                "26"
            ],
            [
                "8 8\r\n*******.\r\n******.*\r\n*****.**\r\n****.***\r\n***.****\r\n**.*****\r\n*.******\r\n.*******\r\n",
                "12"
            ],
            [
                "8 8\r\n.*******\r\n.*******\r\n.*******\r\n.*******\r\n.*******\r\n.*******\r\n.*******\r\n.*******\r\n",
                "26"
            ],
            [
                "8 8\r\n********\r\n********\r\n********\r\n********\r\n********\r\n********\r\n********\r\n.*******\r\n",
                "26"
            ],
            [
                "8 8\r\n*******.\r\n********\r\n********\r\n********\r\n********\r\n********\r\n********\r\n********\r\n",
                "26"
            ],
            [
                "8 8\r\n.*******\r\n********\r\n********\r\n********\r\n********\r\n********\r\n********\r\n********\r\n",
                "26"
            ],
            [
                "8 8\r\n********\r\n********\r\n********\r\n********\r\n********\r\n********\r\n********\r\n********\r\n",
                "26"
            ]
        ]
    }
]