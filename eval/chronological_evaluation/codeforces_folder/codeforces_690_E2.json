[
    {
        "name": "Photographs (II)",
        "description": "Zombies seem to have become much more intelligent lately \u2013 a few have somehow\nwandered into the base through the automatic gate. Heidi has had to beef up\nsecurity, and a new gate has been installed. Unfortunately, now the questions\nbeing asked are more complicated, and even humans have trouble answering them.\nCan you still program the robot army to do this reliably? The new questions\nare of the following form: a grayscale photograph has been divided into\nseveral horizontal pieces, which have been arbitrarily rearranged. The task is\nto assemble the original image back from these pieces (somewhat like in a\njigsaw puzzle). To further delay the zombies, significant Gaussian-distributed\nnoise has been added to the image. Input The input format is the same as in\nthe previous version, except that the first line of every question now\ncontains three space-separated numbers h, w and k (1 \u2264 h, w \u2264 600, 2 \u2264 k \u2264 16)\n\u2013 the height (number of rows) and width (number of columns) of the photograph\nand the number of pieces, respectively. The number of pieces evenly divides\nthe height, and each piece is of the same height h / k. Again, there is only\none input file to be processed, and the same resources are provided to you as\nin the previous version (except that now you are given all input images in\n.bmp format, rather than the first 50). Output Your program should print q\nlines. The i-th line should contain your answer for the i-th question: a\nspace-separated sequence of k numbers \u03c01, \u03c02, ..., \u03c0k such that: \u03c0 is a\npermutation of 1, 2, ..., k, that is, each number from 1 to k appears\nexactly once in \u03c0, for each j = 1, ..., k, \u03c0j is the position (index), in the\noriginal image, of the piece which is at position j in the input image. (See\nthe illustration below for clarity.) The second image from the test set. If\nthe three pieces in the original image are numbered 1, 2, 3 from top to\nbottom, then the numbering in the image on the right should be 2, 3, 1. The\ncorrect answer for this image is thus 2 3 1. Again, your answers will be\naccepted if they conform to this format and if at least 75\ncorrect. Again, you may process the input locally and submit just your\nprecomputed answers (i.e., a program which just prints your output for the\ninput file all.in). Note The link to download all the necessary materials is\nhttp://assets.codeforces.com/files/690/medium_contestant_package.zip\n\n",
        "cf_contest_id": 690,
        "cf_index": "E2",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 15.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]