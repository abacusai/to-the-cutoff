[
    {
        "name": "Little Elephant and Function",
        "description": "The Little Elephant enjoys recursive functions. This time he enjoys the\nsorting function. Let a is a permutation of an integers from 1 to n,\ninclusive, and ai denotes the i-th element of the permutation. The Little\nElephant's recursive function f(x), that sorts the first x permutation's\nelements, works as follows: If x = 1, exit the function. Otherwise, call f(x -\n1), and then make swap(ax - 1, ax) (swap the x-th and (x - 1)-th elements of\na). The Little Elephant's teacher believes that this function does not work\ncorrectly. But that-be do not get an F, the Little Elephant wants to show the\nperformance of its function. Help him, find a permutation of numbers from 1 to\nn, such that after performing the Little Elephant's function (that is call\nf(n)), the permutation will be sorted in ascending order. Input A single line\ncontains integer n (1 \u2264 n \u2264 1000) \u2014 the size of permutation. Output In a\nsingle line print n distinct integers from 1 to n \u2014 the required permutation.\nNumbers in a line should be separated by spaces. It is guaranteed that the\nanswer exists. Examples Input 1 Output 1 Input 2 Output 2 1\n\n",
        "cf_contest_id": 221,
        "cf_index": "A",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n",
                "1"
            ],
            [
                "2\r\n",
                "2 1"
            ]
        ],
        "private_cases": [
            [
                "3\r\n",
                "3 1 2"
            ],
            [
                "4\r\n",
                "4 1 2 3"
            ],
            [
                "5\r\n",
                "5 1 2 3 4"
            ],
            [
                "6\r\n",
                "6 1 2 3 4 5"
            ],
            [
                "7\r\n",
                "7 1 2 3 4 5 6"
            ],
            [
                "3\r\n",
                "3 1 2"
            ],
            [
                "67\r\n",
                "67 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66"
            ],
            [
                "3\r\n",
                "3 1 2"
            ],
            [
                "21\r\n",
                "21 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20"
            ],
            [
                "22\r\n",
                "22 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21"
            ],
            [
                "23\r\n",
                "23 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22"
            ],
            [
                "24\r\n",
                "24 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23"
            ],
            [
                "25\r\n",
                "25 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24"
            ]
        ]
    }
]