[
    {
        "name": "Almost Triple Deletions",
        "description": "You are given an integer \n    n\n and an array \n    a_1,a_2,\n    \u2026,a_n\n. In\none operation, you can choose an index \n    i\n (\n    1 \n    \u2264 i \n     n\n) for\nwhich \n    a_i \n    \u2260 a_i+1\n and delete both \n    a_i\n and \n    a_i+1\n\nfrom the array. After deleting \n    a_i\n and \n    a_i+1\n, the remaining\nparts of the array are concatenated. For example, if \n    a=[1,4,3,3,6,2]\n,\nthen after performing an operation with \n    i=2\n, the resulting array will be\n\n    [1,3,6,2]\n. What is the maximum possible length of an array of equal\nelements obtainable from \n    a\n by performing several (perhaps none) of the\naforementioned operations? Input Each test contains multiple test cases. The\nfirst line of input contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n)\n\u2014 the number of test cases. The following lines contain the descriptions of\nthe test cases. The first line of each test case contains a single integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 5000\n) \u2014 the length of array \n    a\n. The second\nline of each test case contains \n    n\n integers \n    a_1,a_2,\n    \u2026,a_n\n\n(\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014 the elements of array \n    a\n. It is guaranteed\nthat the sum of \n    n\n across all test cases does not exceed \n    10\n     000\n.\nOutput For each testcase, print a single integer, the maximum possible length\nof an array of equal elements obtainable from \n    a\n by performing a sequence\nof operations. Example Input 5 7 1 2 3 2 1 3 3 1 1 6 1 1 1 2 2 2 8 1 1 2 2 3 3\n1 1 12 1 5 2 3 3 3 4 4 4 4 3 3 Output 3 1 0 4 2 Note For the first testcase,\nan optimal sequence of operations would be: \n    [1,2,3,2,1,3,3] \n    \u2192\n    [3,2,1,3,3] \n    \u2192 [3,3,3]\n. For the second testcase, all elements in\nthe array are already equal. For the third testcase, the only possible\nsequence of operations is: \n    [1,1,1,2,2,2] \n    \u2192 [1,1,2,2]\n    \n    \u2192 [1,2] \n    \u2192 []\n. Note that, according to the\nstatement, the elements deleted at each step must be different. For the fourth\ntestcase, the optimal sequence of operations is: \n    [1,1,2,2,3,3,1,1]\n    \n    \u2192 [1,1,2,3,1,1] \n    \u2192 [1,1,1,1]\n. For the fifth\ntestcase, one possible reachable array of two equal elements is \n    [4,4]\n.\n\n",
        "cf_contest_id": 1699,
        "cf_index": "D",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n7\r\n1 2 3 2 1 3 3\r\n1\r\n1\r\n6\r\n1 1 1 2 2 2\r\n8\r\n1 1 2 2 3 3 1 1\r\n12\r\n1 5 2 3 3 3 4 4 4 4 3 3\r\n",
                "3\r\n1\r\n0\r\n4\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n20\r\n4 4 4 4 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4\r\n",
                "8\r\n"
            ],
            [
                "1\r\n26\r\n1 2 1 2 1 2 1 2 3 4 4 4 4 4 4 4 3 3 3 3 3 3 3 3 3 3\r\n",
                "10\r\n"
            ],
            [
                "1\r\n42\r\n1 2 1 2 1 2 1 2 3 4 4 4 4 4 4 4 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 3 2 1 2 1 2 1 2 1\r\n",
                "10\r\n"
            ]
        ]
    }
]