[
    {
        "name": "Alex and Julian",
        "description": "Boy Dima gave Julian a birthday present \u2014 set \n    B\n consisting of positive\nintegers. However, he didn't know, that Julian hates sets, but enjoys\nbipartite graphs more than anything else! Julian was almost upset, but her\nfriend Alex said, that he can build an undirected graph using this set in such\na way: let all integer numbers be vertices, then connect any two \n    i\n and\n\n    j\n with an edge if \n    |i - j|\n belongs to \n    B\n. Unfortunately,\nJulian doesn't like the graph, that was built using \n    B\n. Alex decided to\nrectify the situation, so he wants to erase some numbers from \n    B\n, so that\ngraph built using the new set is bipartite. The difficulty of this task is\nthat the graph, Alex has to work with, has an infinite number of vertices and\nedges! It is impossible to solve this task alone, so Alex asks you for help.\nWrite a program that erases a subset of minimum size from \n    B\n so that\ngraph constructed on the new set is bipartite. Recall, that graph is bipartite\nif all its vertices can be divided into two disjoint sets such that every edge\nconnects a vertex from different sets. Input First line contains an integer\n\n    n \u00a0 (1 \n    \u2a7d n \n    \u2a7d 200\n     000)\n \u2014 size of \n    B\n Second\nline contains \n    n\n integers \n    b_1, b_2, \n    \u2026, b_n \u00a0 (1 \n    \u2a7d b_i\n    \n    \u2a7d 10^18)\n \u2014 numbers of \n    B\n, all \n    b_i\n are unique Output\nIn the first line print single integer \n    k\n \u2013 the number of erased\nelements. In the second line print \n    k\n integers \u2014 values of erased\nelements. If there are multiple answers, print any of them. Examples Input 3 1\n2 3 Output 1 2 Input 2 2 6 Output 0\n\n",
        "cf_contest_id": 1220,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 3\r\n",
                "1\n2\n"
            ],
            [
                "2\r\n2 6\r\n",
                "0\n\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n71 36 100 39 27 41 58 74 4 85\r\n",
                "5\n36 100 58 74 4\n"
            ],
            [
                "10\r\n849301699267836160 67229601484054264 784845291827189290 183826569640257406 460280890246109263 872157111020252352 67769527483940854 637993450461522066 967701547330585333 32506720713898043\r\n",
                "6\n849301699267836160 67229601484054264 460280890246109263 872157111020252352 967701547330585333 32506720713898043\n"
            ],
            [
                "1\r\n930163663730051416\r\n",
                "0\n\n"
            ],
            [
                "1\r\n144115188075855872\r\n",
                "0\n\n"
            ],
            [
                "1\r\n129338991123760547\r\n",
                "0\n\n"
            ],
            [
                "10\r\n15 44 84 89 18 86 23 20 62 81\r\n",
                "6\n44 84 18 86 20 62\n"
            ],
            [
                "10\r\n100 68 37 10 6 74 39 56 8 42\r\n",
                "6\n100 68 37 39 56 8\n"
            ],
            [
                "10\r\n29709 386918 207259 554633 397723 410736 152700 825806 76191 433807\r\n",
                "4\n386918 410736 152700 825806\n"
            ],
            [
                "10\r\n738621 979243 759989 946567 876527 856745 63285 366596 353778 855669\r\n",
                "2\n366596 353778\n"
            ],
            [
                "10\r\n320637 922609 638074 751226 462707 334446 992655 885051 894195 949658\r\n",
                "4\n638074 751226 334446 949658\n"
            ],
            [
                "10\r\n206669655 324818663 223575704 199485303 527238537 395073023 207818728 205138355 323956540 794523071\r\n",
                "3\n223575704 207818728 323956540\n"
            ],
            [
                "10\r\n776756781 133785587 165389821 936441639 339001848 383221779 372645858 898367507 125735204 158081602\r\n",
                "4\n339001848 372645858 125735204 158081602\n"
            ],
            [
                "10\r\n914528255 213606513 764093668 471916351 811437814 561305203 966426411 151364682 137430855 323672113\r\n",
                "3\n764093668 811437814 151364682\n"
            ],
            [
                "10\r\n221998069488770316 954736809508793543 598658276983441394 74222410330038206 823279423814526176 807704234927978303 752441720796406299 872983354198335776 826110873403601011 45690579225458516\r\n",
                "6\n221998069488770316 598658276983441394 74222410330038206 823279423814526176 872983354198335776 45690579225458516\n"
            ],
            [
                "10\r\n861713560096830359 594694435414737175 618871976383789719 873809593081451904 733823402758362859 760553922527068481 355057179072327404 843087067243047084 771010979226791561 631100272499775066\r\n",
                "4\n873809593081451904 355057179072327404 843087067243047084 631100272499775066\n"
            ],
            [
                "1\r\n763092179705604834\r\n",
                "0\n\n"
            ],
            [
                "1\r\n634233330641203980\r\n",
                "0\n\n"
            ],
            [
                "1\r\n125754474524648144\r\n",
                "0\n\n"
            ],
            [
                "1\r\n137811154706257248\r\n",
                "0\n\n"
            ],
            [
                "1\r\n936748722493063168\r\n",
                "0\n\n"
            ],
            [
                "1\r\n288230376151711744\r\n",
                "0\n\n"
            ],
            [
                "1\r\n576460752303423488\r\n",
                "0\n\n"
            ],
            [
                "3\r\n72057594037927936 18014398509481984 36028797018963968\r\n",
                "2\n72057594037927936 36028797018963968\n"
            ]
        ]
    }
]