[
    {
        "name": "Eleventh Birthday",
        "description": "It is Borya's eleventh birthday, and he has got a great present: n cards with\nnumbers. The i-th card has the number ai written on it. Borya wants to put his\ncards in a row to get one greater number. For example, if Borya has cards with\nnumbers 1, 31, and 12, and he puts them in a row in this order, he would get a\nnumber 13112. He is only 11, but he already knows that there are n! ways to\nput his cards in a row. But today is a special day, so he is only interested\nin such ways that the resulting big number is divisible by eleven. So, the way\nfrom the previous paragraph is good, because 13112 = 1192 \u00d7 11, but if he puts\nthe cards in the following order: 31, 1, 12, he would get a number 31112, it\nis not divisible by 11, so this way is not good for Borya. Help Borya to find\nout how many good ways to put the cards are there. Borya considers all cards\ndifferent, even if some of them contain the same number. For example, if Borya\nhas two cards with 1 on it, there are two good ways. Help Borya, find the\nnumber of good ways to put the cards. This number can be large, so output it\nmodulo 998244353. Input Input data contains multiple test cases. The first\nline of the input data contains an integer t \u2014 the number of test cases (1 \u2264 t\n\u2264 100). The descriptions of test cases follow. Each test is described by two\nlines. The first line contains an integer n (1 \u2264 n \u2264 2000) \u2014 the number of\ncards in Borya's present. The second line contains n integers ai (1 \u2264 ai \u2264\n10^9) \u2014 numbers written on the cards. It is guaranteed that the total number\nof cards in all tests of one input data doesn't exceed 2000. Output For each\ntest case output one line: the number of ways to put the cards to the table so\nthat the resulting big number was divisible by 11, print the number modulo\n998244353. Example Input 4 2 1 1 3 1 31 12 3 12345 67 84 9 1 2 3 4 5 6 7 8 9\nOutput 2 2 2 31680\n\n",
        "cf_contest_id": 856,
        "cf_index": "C",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n2\r\n1 1\r\n3\r\n1 31 12\r\n3\r\n12345 67 84\r\n9\r\n1 2 3 4 5 6 7 8 9\r\n",
                "2\r\n2\r\n2\r\n31680\r\n"
            ]
        ],
        "private_cases": []
    }
]