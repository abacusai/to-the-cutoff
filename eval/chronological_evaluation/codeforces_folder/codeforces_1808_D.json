[
    {
        "name": "Petya, Petya, Petr, and Palindromes",
        "description": "Petya and his friend, the robot Petya++, have a common friend \u2014 the cyborg\nPetr#. Sometimes Petr# comes to the friends for a cup of tea and tells them\ninteresting problems. Today, Petr# told them the following problem. A\npalindrome is a sequence that reads the same from left to right as from right\nto left. For example, \n    [38, 12, 8, 12, 38]\n, \n    [1]\n, and \n    [3, 8, 8,\n    3]\n are palindromes. Let's call the palindromicity of a sequence \n    a_1,\n    a_2, \n    \u2026, a_n\n the minimum count of elements that need to be replaced to\nmake this sequence a palindrome. For example, the palindromicity of the\nsequence \n    [38, 12, 8, 38, 38]\n is \n    1\n since it is sufficient to\nreplace the number \n    38\n at the fourth position with the number \n    12\n.\nAnd the palindromicity of the sequence \n    [3, 3, 5, 5, 5]\n is two since you\ncan replace the first two threes with fives, and the resulting sequence \n    [5,\n    5, 5, 5, 5]\n is a palindrome. Given a sequence \n    a\n of length \n    n\n,\nand an odd integer \n    k\n, you need to find the sum of palindromicity of all\nsubarrays of length \n    k\n, i. e., the sum of the palindromicity values for\nthe sequences \n    a_i, a_i+1, \n    \u2026, a_i+k-1\n for all \n    i\n from\n\n    1\n to \n    n-k+1\n. The students quickly solved the problem. Can you do it\ntoo? Input The first line of the input contains two integers \n    n\n and\n\n    k\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    1 \n    \u2264 k \n    \u2264 n\n,\n\n    k\n is odd) \u2014 the length of the sequence and the length of subarrays for\nwhich it is necessary to determine whether they are palindromes. The second\nline of the input contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n\n(\n    1 \n    \u2264 a_i \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the sequence itself. Output Output\na single integer \u2014 the total palindromicity of all subarrays of length\n\n    k\n. Examples Input 8 5 1 2 8 2 5 2 8 6 Output 4 Input 9 9 1 2 3 4 5 4 3 2\n1 Output 0 Note In the first example, the palindromicity of the subarray\n\n    [1, 2, 8, 2, 5]\n is \n    1\n, the palindromicity of the string \n    [2, 8,\n    2, 5, 2]\n is also \n    1\n, the palindromicity of the string \n    [8, 2, 5, 2,\n    8]\n is \n    0\n, and the palindromicity of the string \n    [2, 5, 2, 8, 6]\n\nis \n    2\n. The total palindromicity is \n    1+1+0+2 = 4\n. In the second\nexample, the only substring of length \n    9\n coincides with the entire\nstring, and its palindromicity is \n    0\n, so the answer is also \n    0\n.\n\n",
        "cf_contest_id": 1808,
        "cf_index": "D",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "data structures",
            "two pointers"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8 5\r\n1 2 8 2 5 2 8 6\r\n",
                "4\r\n"
            ],
            [
                "9 9\r\n1 2 3 4 5 4 3 2 1\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "20 5\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\r\n",
                "32\r\n"
            ],
            [
                "20 5\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "100 1\r\n1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10\r\n",
                "0\r\n"
            ],
            [
                "100 77\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "48\r\n"
            ],
            [
                "3 3\r\n5 5 5\r\n",
                "0\r\n"
            ]
        ]
    }
]