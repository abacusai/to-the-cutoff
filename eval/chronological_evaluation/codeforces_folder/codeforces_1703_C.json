[
    {
        "name": "Cypher",
        "description": "Luca has a cypher made up of a sequence of \n    n\n wheels, each with a digit\n\n    a_i\n written on it. On the \n    i\n-th wheel, he made \n    b_i\n moves.\nEach move is one of two types: up move (denoted by \n    \n): it\nincreases the \n    i\n-th digit by \n    1\n. After applying the up move on\n\n    9\n, it becomes \n    0\n. down move (denoted by \n    \n): it\ndecreases the \n    i\n-th digit by \n    1\n. After applying the down move on\n\n    0\n, it becomes \n    9\n. Example for \n    n=4\n. The current sequence is 0\n0 0 0. Luca knows the final sequence of wheels and the moves for each wheel.\nHelp him find the original sequence and crack the cypher. Input The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number\nof test cases. The first line of each test case contains a single integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n) \u2014 the number of wheels. The second line\ncontains \n    n\n integers \n    a_i\n (\n    0 \n    \u2264 a_i \n    \u2264 9\n) \u2014 the digit\nshown on the \n    i\n-th wheel after all moves have been performed. Then\n\n    n\n lines follow, the \n    i\n-th of which contains the integer \n    b_i\n\n(\n    1 \n    \u2264 b_i \n    \u2264 10\n) and \n    b_i\n characters that are either\n\n    \n or \n    \n \u2014 the number of moves performed on\nthe \n    i\n-th wheel, and the moves performed. \n    \n and\n\n    \n represent an up move and a down move respectively. Output\nFor each test case, output \n    n\n space-separated digits \u2014 the initial\nsequence of the cypher. Example Input 3 3 9 3 1 3 DDD 4 UDUU 2 DU 2 0 9 9\nDDDDDDDDD 9 UUUUUUUUU 5 0 5 9 8 3 10 UUUUUUUUUU 3 UUD 8 UUDUUDDD 10 UUDUUDUDDU\n4 UUUU Output 2 1 1 9 0 0 4 9 6 9 Note In the first test case, we can prove\nthat initial sequence was \n    [2,1,1]\n. In that case, the following moves\nwere performed: On the first wheel: \n    2 \n     1\n    \n     0 \n     9\n. On the\nsecond wheel: \n    1 \n     2\n    \n     1 \n     2\n    \n     3\n. On the third wheel: \n    1\n    \n     0 \n     1\n. The\nfinal sequence was \n    [9,3,1]\n, which matches the input.\n\n",
        "cf_contest_id": 1703,
        "cf_index": "C",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n9 3 1\r\n3 DDD\r\n4 UDUU\r\n2 DU\r\n2\r\n0 9\r\n9 DDDDDDDDD\r\n9 UUUUUUUUU\r\n5\r\n0 5 9 8 3\r\n10 UUUUUUUUUU\r\n3 UUD\r\n8 UUDUUDDD\r\n10 UUDUUDUDDU\r\n4 UUUU\r\n",
                "2 1 1\r\n9 0\r\n0 4 9 6 9\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n45\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n1 D\r\n",
                "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\r\n"
            ]
        ]
    }
]