[
    {
        "name": "Coloring Edges",
        "description": "You are given a directed graph with \n    n\n vertices and \n    m\n directed\nedges without self-loops or multiple edges. Let's denote the \n    k\n-coloring\nof a digraph as following: you color each edge in one of \n    k\n colors. The\n\n    k\n-coloring is good if and only if there no cycle formed by edges of same\ncolor. Find a good \n    k\n-coloring of given digraph with minimum possible\n\n    k\n. Input The first line contains two integers \n    n\n and \n    m\n (\n    2\n    \n    \u2264 n \n    \u2264 5000\n, \n    1 \n    \u2264 m \n    \u2264 5000\n) \u2014 the number of vertices\nand edges in the digraph, respectively. Next \n    m\n lines contain description\nof edges \u2014 one per line. Each edge is a pair of integers \n    u\n and \n    v\n\n(\n    1 \n    \u2264 u, v \n    \u2264 n\n, \n    u \n     v\n) \u2014 there is directed edge from\n\n    u\n to \n    v\n in the graph. It is guaranteed that each ordered pair\n\n    (u, v)\n appears in the list of edges at most once. Output In the first\nline print single integer \n    k\n \u2014 the number of used colors in a good\n\n    k\n-coloring of given graph. In the second line print \n    m\n integers\n\n    c_1, c_2, \n    \u2026, c_m\n (\n    1 \n    \u2264 c_i \n    \u2264 k\n), where \n    c_i\n is a\ncolor of the \n    i\n-th edge (in order as they are given in the input). If\nthere are multiple answers print any of them (you still have to minimize\n\n    k\n). Examples Input 4 5 1 2 1 3 3 4 2 4 1 4 Output 1 1 1 1 1 1 Input 3 3\n1 2 2 3 3 1 Output 2 1 1 2\n\n",
        "cf_contest_id": 1217,
        "cf_index": "D",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 5\r\n1 2\r\n1 3\r\n3 4\r\n2 4\r\n1 4\r\n",
                "1\r\n1 1 1 1 1 "
            ],
            [
                "3 3\r\n1 2\r\n2 3\r\n3 1\r\n",
                "2\r\n2 2 1 "
            ]
        ],
        "private_cases": [
            [
                "6 8\r\n1 2\r\n2 3\r\n3 1\r\n4 3\r\n5 4\r\n6 5\r\n1 6\r\n6 2\r\n",
                "2\r\n2 2 1 1 1 1 2 1 "
            ],
            [
                "3 4\r\n1 2\r\n2 3\r\n3 2\r\n3 1\r\n",
                "2\r\n2 2 1 1 "
            ],
            [
                "3 6\r\n1 2\r\n2 3\r\n3 1\r\n2 1\r\n1 3\r\n3 2\r\n",
                "2\r\n2 2 1 1 2 1 "
            ],
            [
                "3 6\r\n1 2\r\n2 3\r\n3 1\r\n2 1\r\n3 2\r\n1 3\r\n",
                "2\r\n2 2 1 1 1 2 "
            ],
            [
                "10 2\r\n8 7\r\n10 5\r\n",
                "1\r\n1 1 "
            ],
            [
                "12 7\r\n11 8\r\n4 2\r\n7 5\r\n2 9\r\n7 2\r\n5 4\r\n10 8\r\n",
                "1\r\n1 1 1 1 1 1 1 "
            ],
            [
                "2 1\r\n2 1\r\n",
                "1\r\n1 "
            ],
            [
                "2 2\r\n2 1\r\n1 2\r\n",
                "2\r\n1 2 "
            ],
            [
                "7 10\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 1\r\n1 3\r\n3 5\r\n5 7\r\n",
                "2\r\n2 2 2 2 2 2 1 2 2 2 "
            ],
            [
                "14 50\r\n8 10\r\n5 11\r\n3 6\r\n14 6\r\n4 11\r\n6 8\r\n9 8\r\n3 7\r\n4 9\r\n4 8\r\n5 10\r\n13 5\r\n8 3\r\n13 12\r\n5 8\r\n4 5\r\n12 1\r\n14 10\r\n10 13\r\n6 13\r\n2 5\r\n6 4\r\n14 4\r\n11 12\r\n5 7\r\n1 13\r\n9 1\r\n5 12\r\n9 7\r\n7 10\r\n3 13\r\n3 10\r\n5 4\r\n13 3\r\n11 2\r\n10 3\r\n7 11\r\n7 3\r\n13 14\r\n6 2\r\n7 1\r\n14 11\r\n10 9\r\n4 3\r\n11 5\r\n12 2\r\n8 12\r\n13 10\r\n12 11\r\n2 10\r\n",
                "2\r\n2 2 2 1 2 2 1 2 2 2 2 1 1 1 2 2 1 1 2 2 2 1 1 2 2 2 1 2 1 2 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 2 1 1 2 "
            ],
            [
                "19 27\r\n6 13\r\n15 5\r\n12 15\r\n16 18\r\n9 18\r\n9 17\r\n1 16\r\n3 14\r\n8 7\r\n19 7\r\n14 6\r\n16 13\r\n15 12\r\n14 12\r\n13 5\r\n2 3\r\n13 11\r\n6 8\r\n7 14\r\n3 17\r\n8 2\r\n9 12\r\n18 14\r\n11 16\r\n17 3\r\n13 18\r\n1 3\r\n",
                "2\r\n2 1 2 2 2 2 2 2 1 1 1 1 1 1 1 2 1 2 2 2 1 2 1 2 1 2 2 "
            ],
            [
                "8 6\r\n3 5\r\n8 3\r\n3 6\r\n8 5\r\n4 6\r\n2 5\r\n",
                "1\r\n1 1 1 1 1 1 "
            ],
            [
                "3 4\r\n3 1\r\n1 3\r\n2 3\r\n3 2\r\n",
                "2\r\n1 2 2 1 "
            ],
            [
                "5 12\r\n4 1\r\n4 5\r\n5 3\r\n5 4\r\n2 4\r\n5 1\r\n1 5\r\n1 4\r\n3 4\r\n3 5\r\n2 1\r\n4 2\r\n",
                "2\r\n1 2 1 1 2 1 2 2 2 2 1 1 "
            ],
            [
                "3 5\r\n1 3\r\n1 2\r\n3 2\r\n3 1\r\n2 3\r\n",
                "2\r\n2 2 1 1 2 "
            ],
            [
                "16 21\r\n7 9\r\n5 1\r\n3 9\r\n4 7\r\n15 5\r\n12 13\r\n12 7\r\n7 5\r\n1 4\r\n9 3\r\n13 16\r\n13 15\r\n9 15\r\n7 15\r\n16 3\r\n13 5\r\n3 7\r\n1 7\r\n5 13\r\n1 2\r\n2 9\r\n",
                "2\r\n2 1 2 2 1 2 1 1 2 1 2 2 2 2 1 1 2 2 2 2 2 "
            ],
            [
                "18 74\r\n12 17\r\n6 3\r\n7 5\r\n11 13\r\n13 12\r\n16 2\r\n15 3\r\n10 6\r\n18 1\r\n6 1\r\n10 18\r\n3 16\r\n16 5\r\n14 12\r\n12 1\r\n9 6\r\n13 11\r\n11 17\r\n13 1\r\n1 7\r\n18 12\r\n6 8\r\n11 15\r\n2 9\r\n9 12\r\n7 4\r\n8 15\r\n6 9\r\n11 9\r\n11 18\r\n3 6\r\n5 7\r\n1 16\r\n2 6\r\n17 11\r\n4 8\r\n14 1\r\n7 13\r\n18 14\r\n7 16\r\n15 5\r\n11 2\r\n18 17\r\n9 16\r\n4 13\r\n17 5\r\n8 6\r\n18 6\r\n6 4\r\n17 10\r\n10 7\r\n5 9\r\n7 6\r\n17 1\r\n9 13\r\n7 11\r\n9 5\r\n4 17\r\n18 15\r\n12 4\r\n8 3\r\n9 2\r\n7 2\r\n8 4\r\n8 11\r\n16 10\r\n13 18\r\n16 12\r\n3 10\r\n18 10\r\n12 3\r\n12 14\r\n9 14\r\n3 11\r\n",
                "2\r\n2 1 1 2 1 1 1 1 1 1 2 2 1 1 1 1 1 2 1 2 1 2 2 2 2 1 2 2 1 2 2 2 2 2 1 2 1 2 1 2 1 1 1 2 2 1 1 1 1 1 1 2 1 1 2 2 1 2 1 1 1 1 1 1 2 1 2 1 2 1 1 2 2 2 "
            ],
            [
                "14 23\r\n8 5\r\n6 3\r\n5 9\r\n3 1\r\n6 1\r\n13 11\r\n11 2\r\n14 4\r\n14 5\r\n4 2\r\n10 3\r\n14 6\r\n4 1\r\n8 2\r\n11 1\r\n14 1\r\n5 13\r\n1 4\r\n9 5\r\n8 13\r\n1 2\r\n4 8\r\n2 6\r\n",
                "2\r\n1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 2 2 2 2 "
            ],
            [
                "4 4\r\n4 2\r\n3 1\r\n2 3\r\n4 1\r\n",
                "1\r\n1 1 1 1 "
            ],
            [
                "10 44\r\n9 2\r\n3 9\r\n3 10\r\n6 8\r\n10 9\r\n2 1\r\n5 9\r\n10 1\r\n4 2\r\n3 1\r\n3 6\r\n3 7\r\n1 9\r\n1 4\r\n1 8\r\n9 7\r\n7 3\r\n1 6\r\n4 9\r\n7 5\r\n1 2\r\n4 3\r\n10 7\r\n8 1\r\n8 10\r\n9 8\r\n6 10\r\n6 5\r\n2 9\r\n9 1\r\n3 4\r\n5 7\r\n6 3\r\n2 8\r\n7 6\r\n4 5\r\n8 6\r\n2 10\r\n10 2\r\n5 8\r\n2 7\r\n8 7\r\n3 5\r\n9 6\r\n",
                "2\r\n1 2 2 2 1 1 2 1 1 1 2 2 2 2 2 1 1 2 2 1 2 1 1 1 2 1 2 1 2 1 2 2 1 2 1 2 1 2 1 2 2 1 2 1 "
            ]
        ]
    }
]