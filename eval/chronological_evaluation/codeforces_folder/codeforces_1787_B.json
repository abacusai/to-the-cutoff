[
    {
        "name": "Number Factorization",
        "description": "Given an integer \n    n\n. Consider all pairs of integer arrays \n    a\n and\n\n    p\n of the same length such that \n    n = \n    \u220f a_i^p_i\n (i.e.\n\n    a_1^p_1\n    \u00b7 a_2^p_2\n    \u00b7\n    \u2026\n) (\n    a_i>1;p_i>0\n) and\n\n    a_i\n is the product of some (possibly one) distinct prime numbers. For\nexample, for \n    n = 28 = 2^2\n    \u00b7 7^1 = 4^1 \n    \u00b7 7^1\n the array pair\n\n    a = [2, 7]\n, \n    p = [2, 1]\n is correct, but the pair of arrays \n    a =\n    [4, 7]\n, \n    p = [1, 1]\n is not, because \n    4=2^2\n is a product of non-\ndistinct prime numbers. Your task is to find the maximum value of \n    \u2211\n    a_i \n    \u00b7 p_i\n (i.e. \n    a_1\n    \u00b7 p_1 + a_2\n    \u00b7 p_2 + \n    \u2026\n)\nover all possible pairs of arrays \n    a\n and \n    p\n. Note that you do not\nneed to minimize or maximize the length of the arrays. Input Each test\ncontains multiple test cases. The first line contains an integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. Each test case contains\nonly one integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^9\n). Output For each test\ncase, print the maximum value of \n    \u2211 a_i \n    \u00b7 p_i\n. Example Input 7\n100 10 864 130056192 1000000000 2 999999018 Output 20 10 22 118 90 2 333333009\nNote In the first test case, \n    100 = 10^2\n so that \n    a = [10]\n, \n    p =\n    [2]\n when \n    \u2211 a_i \n    \u00b7 p_i\n hits the maximum value \n    10\n    \u00b7 2\n    = 20\n. Also, \n    a = [100]\n, \n    p = [1]\n does not work since \n    100\n is\nnot made of distinct prime factors. In the second test case, we can consider\n\n    10\n as \n    10^1\n, so \n    a = [10]\n, \n    p = [1]\n. Notice that when\n\n    10 = 2^1\n    \u00b7 5^1\n, \n    \u2211 a_i \n    \u00b7 p_i = 7\n.\n\n",
        "cf_contest_id": 1787,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n100\r\n10\r\n864\r\n130056192\r\n1000000000\r\n2\r\n999999018\r\n",
                "20\r\n10\r\n22\r\n118\r\n90\r\n2\r\n333333009\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n4194304\r\n",
                "44\r\n"
            ]
        ]
    }
]