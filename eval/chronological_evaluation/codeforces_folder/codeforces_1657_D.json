[
    {
        "name": "For Gamers. By Gamers.",
        "description": "Monocarp is playing a strategy game. In the game, he recruits a squad to fight\nmonsters. Before each battle, Monocarp has \n    C\n coins to spend on his\nsquad. Before each battle starts, his squad is empty. Monocarp chooses one\ntype of units and recruits no more units of that type than he can recruit with\n\n    C\n coins. There are \n    n\n types of units. Every unit type has three\nparameters: \n    c_i\n \u2014 the cost of recruiting one unit of the \n    i\n-th\ntype; \n    d_i\n \u2014 the damage that one unit of the \n    i\n-th type deals in a\nsecond; \n    h_i\n \u2014 the amount of health of one unit of the \n    i\n-th type.\nMonocarp has to face \n    m\n monsters. Every monster has two parameters:\n\n    D_j\n \u2014 the damage that the \n    j\n-th monster deals in a second;\n\n    H_j\n \u2014 the amount of health the \n    j\n-th monster has. Monocarp has to\nfight only the \n    j\n-th monster during the \n    j\n-th battle. He wants all\nhis recruited units to stay alive. Both Monocarp's squad and the monster\nattack continuously (not once per second) and at the same time. Thus, Monocarp\nwins the battle if and only if his squad kills the monster strictly faster\nthan the monster kills one of his units. The time is compared with no\nrounding. For each monster, Monocarp wants to know the minimum amount of coins\nhe has to spend to kill that monster. If this amount is greater than \n    C\n,\nthen report that it's impossible to kill that monster. Input The first line\ncontains two integers \n    n\n and \n    C\n (\n    1 \n    \u2264 n \n    \u2264 3 \n    \u00b7\n    10^5\n; \n    1 \n    \u2264 C \n    \u2264 10^6\n) \u2014 the number of types of units and the\namount of coins Monocarp has before each battle. The \n    i\n-th of the next\n\n    n\n lines contains three integers \n    c_i, d_i\n and \n    h_i\n (\n    1 \n    \u2264\n    c_i \n    \u2264 C\n; \n    1 \n    \u2264 d_i, h_i \n    \u2264 10^6\n). The next line contains a\nsingle integer \n    m\n (\n    1 \n    \u2264 m \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the number of\nmonsters that Monocarp has to face. The \n    j\n-th of the next \n    m\n lines\ncontains two integers \n    D_j\n and \n    H_j\n (\n    1 \n    \u2264 D_j \n    \u2264 10^6\n;\n\n    1 \n    \u2264 H_j \n    \u2264 10^12\n). Output Print \n    m\n integers. For each\nmonster, print the minimum amount of coins Monocarp has to spend to kill that\nmonster. If this amount is greater than \n    C\n, then print \n    -1\n. Examples\nInput 3 10 3 4 6 5 5 5 10 3 4 3 8 3 5 4 10 15 Output 5 3 -1 Input 5 15 14 10 3\n9 2 2 10 4 3 7 3 5 4 3 1 6 11 2 1 1 4 7 2 1 1 14 3 3 Output 14 4 14 4 7 7\nInput 5 13 13 1 9 6 4 5 12 18 4 9 13 2 5 4 5 2 16 3 6 2 Output 12 5 Note\nConsider the first monster of the first example. Monocarp can't recruit one\nunit of the first type, because it will take both him and the monster\n\n    0.75\n seconds to kill each other. He can recruit two units for the cost\nof \n    6\n coins and kill the monster in \n    0.375\n second. Monocarp can\nrecruit one unit of the second type, because he kills the monster in \n    0.6\n\nseconds, and the monster kills him in \n    0.625\n seconds. The unit is faster.\nThus, \n    5\n coins is enough. Monocarp will need at least three units of the\nthird type to kill the first monster, that will cost \n    30\n coins. Monocarp\nwill spend the least coins if he chooses the second type of units and recruits\none unit of that type.\n\n",
        "cf_contest_id": 1657,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "greedy",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 10\r\n3 4 6\r\n5 5 5\r\n10 3 4\r\n3\r\n8 3\r\n5 4\r\n10 15\r\n",
                "5 3 -1 "
            ],
            [
                "5 15\r\n14 10 3\r\n9 2 2\r\n10 4 3\r\n7 3 5\r\n4 3 1\r\n6\r\n11 2\r\n1 1\r\n4 7\r\n2 1\r\n1 14\r\n3 3\r\n",
                "14 4 14 4 7 7 "
            ],
            [
                "5 13\r\n13 1 9\r\n6 4 5\r\n12 18 4\r\n9 13 2\r\n5 4 5\r\n2\r\n16 3\r\n6 2\r\n",
                "12 5 "
            ]
        ],
        "private_cases": [
            [
                "10 30\r\n4 7 28\r\n20 20 15\r\n24 23 3\r\n21 2 18\r\n29 20 1\r\n11 22 20\r\n22 28 19\r\n11 19 9\r\n11 18 24\r\n8 29 10\r\n10\r\n16 20\r\n23 30\r\n28 6\r\n16 20\r\n1 11\r\n15 28\r\n13 4\r\n18 20\r\n6 9\r\n10 24\r\n",
                "8 16 4 8 4 11 4 8 4 8 "
            ],
            [
                "1 1\r\n1 1 1\r\n1\r\n1 1\r\n",
                "-1 "
            ],
            [
                "1 1\r\n1 1 2\r\n1\r\n1 1\r\n",
                "1 "
            ],
            [
                "1 1000000\r\n1 1000000 1000000\r\n1\r\n1000000 999999999999\r\n",
                "1000000 "
            ],
            [
                "1 1000000\r\n1000000 1000000 1000000\r\n1\r\n999999 1000001\r\n",
                "1000000 "
            ],
            [
                "2 10\r\n2 1 50\r\n1 1 25\r\n1\r\n1 74\r\n",
                "3 "
            ],
            [
                "2 8\r\n4 7 1\r\n2 3 1\r\n1\r\n8 1\r\n",
                "6 "
            ],
            [
                "3 5\r\n3 4 6\r\n5 5 5\r\n1 3 4\r\n3\r\n8 3\r\n5 4\r\n10 15\r\n",
                "3 2 -1 "
            ],
            [
                "2 95\r\n93 975 376\r\n53 435 940\r\n1\r\n45 27\r\n",
                "53 "
            ],
            [
                "2 10\r\n3 4 10\r\n6 10 10\r\n1\r\n119 1\r\n",
                "9 "
            ],
            [
                "2 10\r\n3 1 4\r\n1 1 1\r\n1\r\n1 4\r\n",
                "5 "
            ],
            [
                "1 12345\r\n1926 1000 1000\r\n1\r\n1 1\r\n",
                "1926 "
            ],
            [
                "1 1000000\r\n1000000 4 6\r\n1\r\n1000000 1000000000000\r\n",
                "-1 "
            ],
            [
                "2 100\r\n3 1 18\r\n2 1 13\r\n1\r\n1 52\r\n",
                "9 "
            ],
            [
                "1 1000000\r\n1 1 1\r\n1\r\n1000000 1000000000000\r\n",
                "-1 "
            ]
        ]
    }
]