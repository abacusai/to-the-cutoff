[
    {
        "name": "Woodcutters",
        "description": "Little Susie listens to fairy tales before bed every day. Today's fairy tale\nwas about wood cutters and the little girl immediately started imagining the\nchoppers cutting wood. She imagined the situation that is described below.\nThere are n trees located along the road at points with coordinates x1, x2,\n..., xn. Each tree has its height hi. Woodcutters can cut down a tree and fell\nit to the left or to the right. After that it occupies one of the segments [xi\n- hi, xi] or [xi;xi + hi]. The tree that is not cut down occupies a single\npoint with coordinate xi. Woodcutters can fell a tree if the segment to be\noccupied by the fallen tree doesn't contain any occupied point. The\nwoodcutters want to process as many trees as possible, so Susie wonders, what\nis the maximum number of trees to fell. Input The first line contains integer\nn (1 \u2264 n \u2264 10^5) \u2014 the number of trees. Next n lines contain pairs of integers\nxi, hi (1 \u2264 xi, hi \u2264 10^9) \u2014 the coordinate and the height of the \u0456-th tree.\nThe pairs are given in the order of ascending xi. No two trees are located at\nthe point with the same coordinate. Output Print a single number \u2014 the maximum\nnumber of trees that you can cut down by the given rules. Examples Input 5 1 2\n2 1 5 10 10 9 19 1 Output 3 Input 5 1 2 2 1 5 10 10 9 20 1 Output 4 Note In\nthe first sample you can fell the trees like that: fell the 1-st tree to the\nleft \u2014 now it occupies segment [ - 1;1] fell the 2-nd tree to the right \u2014 now\nit occupies segment [2;3] leave the 3-rd tree \u2014 it occupies point 5 leave the\n4-th tree \u2014 it occupies point 10 fell the 5-th tree to the right \u2014 now it\noccupies segment [19;20] In the second sample you can also fell 4-th tree to\nthe right, after that it will occupy segment [10;19].\n\n",
        "cf_contest_id": 545,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2\r\n2 1\r\n5 10\r\n10 9\r\n19 1\r\n",
                "3"
            ],
            [
                "5\r\n1 2\r\n2 1\r\n5 10\r\n10 9\r\n20 1\r\n",
                "4"
            ]
        ],
        "private_cases": [
            [
                "4\r\n10 4\r\n15 1\r\n19 3\r\n20 1\r\n",
                "4"
            ],
            [
                "35\r\n1 7\r\n3 11\r\n6 12\r\n7 6\r\n8 5\r\n9 11\r\n15 3\r\n16 10\r\n22 2\r\n23 3\r\n25 7\r\n27 3\r\n34 5\r\n35 10\r\n37 3\r\n39 4\r\n40 5\r\n41 1\r\n44 1\r\n47 7\r\n48 11\r\n50 6\r\n52 5\r\n57 2\r\n58 7\r\n60 4\r\n62 1\r\n67 3\r\n68 12\r\n69 8\r\n70 1\r\n71 5\r\n72 5\r\n73 6\r\n74 4\r\n",
                "10"
            ],
            [
                "40\r\n1 1\r\n2 1\r\n3 1\r\n4 1\r\n5 1\r\n6 1\r\n7 1\r\n8 1\r\n9 1\r\n10 1\r\n11 1\r\n12 1\r\n13 1\r\n14 1\r\n15 1\r\n16 1\r\n17 1\r\n18 1\r\n19 1\r\n20 1\r\n21 1\r\n22 1\r\n23 1\r\n24 1\r\n25 1\r\n26 1\r\n27 1\r\n28 1\r\n29 1\r\n30 1\r\n31 1\r\n32 1\r\n33 1\r\n34 1\r\n35 1\r\n36 1\r\n37 1\r\n38 1\r\n39 1\r\n40 1\r\n",
                "2"
            ],
            [
                "67\r\n1 1\r\n3 8\r\n4 10\r\n7 8\r\n9 2\r\n10 1\r\n11 5\r\n12 8\r\n13 4\r\n16 6\r\n18 3\r\n19 3\r\n22 5\r\n24 6\r\n27 5\r\n28 3\r\n29 3\r\n30 5\r\n32 5\r\n33 10\r\n34 7\r\n35 8\r\n36 5\r\n41 3\r\n42 2\r\n43 5\r\n46 4\r\n48 4\r\n49 9\r\n52 4\r\n53 9\r\n55 1\r\n56 4\r\n59 7\r\n68 7\r\n69 4\r\n71 9\r\n72 10\r\n74 5\r\n76 4\r\n77 9\r\n80 7\r\n81 9\r\n82 5\r\n83 5\r\n84 9\r\n85 7\r\n86 9\r\n87 4\r\n88 7\r\n89 10\r\n90 3\r\n91 5\r\n92 10\r\n93 5\r\n94 8\r\n95 4\r\n96 2\r\n97 10\r\n98 1\r\n99 3\r\n100 1\r\n101 5\r\n102 4\r\n103 8\r\n104 8\r\n105 8\r\n",
                "5"
            ],
            [
                "1\r\n1000000000 1000000000\r\n",
                "1"
            ],
            [
                "10\r\n7 12\r\n10 2\r\n12 2\r\n15 1\r\n19 2\r\n20 1\r\n53 25\r\n63 10\r\n75 12\r\n87 1\r\n",
                "9"
            ],
            [
                "3\r\n1 1\r\n1000 1000\r\n1000000000 1000000000\r\n",
                "3"
            ],
            [
                "2\r\n1 999999999\r\n1000000000 1000000000\r\n",
                "2"
            ],
            [
                "10\r\n999999900 1000000000\r\n999999901 1000000000\r\n999999902 1000000000\r\n999999903 1000000000\r\n999999904 1000000000\r\n999999905 1000000000\r\n999999906 1000000000\r\n999999907 1000000000\r\n999999908 1000000000\r\n999999909 1000000000\r\n",
                "2"
            ],
            [
                "2\r\n100000000 1000000000\r\n1000000000 1000000000\r\n",
                "2"
            ]
        ]
    }
]