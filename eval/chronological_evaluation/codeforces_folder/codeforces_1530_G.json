[
    {
        "name": "What a Reversal",
        "description": "You have two strings \n    a\n and \n    b\n of equal length \n    n\n consisting of\ncharacters 0 and 1, and an integer \n    k\n. You need to make strings \n    a\n\nand \n    b\n equal. In one step, you can choose any substring of \n    a\n\ncontaining exactly \n    k\n characters 1 (and arbitrary number of characters 0)\nand reverse it. Formally, if \n    a = a_1 a_2 \n    \u2026 a_n\n, you can choose\nany integers \n    l\n and \n    r\n (\n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 n\n) such that\nthere are exactly \n    k\n ones among characters \n    a_l, a_l+1, \n    \u2026,\n    a_r\n, and set \n    a\n to \n    a_1 a_2 \n    \u2026 a_l-1 a_r a_r-1\n    \u2026\n    a_l a_r+1 a_r+2\n    \u2026 a_n\n. Find a way to make \n    a\n equal to\n\n    b\n using at most \n    4n\n reversals of the above kind, or determine that\nsuch a way doesn't exist. The number of reversals doesn't have to be\nminimized. Input Each test contains multiple test cases. The first line\ncontains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2000\n).\nDescription of the test cases follows. Each test case consists of three lines.\nThe first line of each test case contains two integers \n    n\n and \n    k\n\n(\n    1 \n    \u2264 n \n    \u2264 2000\n; \n    0 \n    \u2264 k \n    \u2264 n\n). The second line\ncontains string \n    a\n of length \n    n\n. The third line contains string\n\n    b\n of the same length. Both strings consist of characters 0 and 1. It is\nguaranteed that the sum of \n    n\n over all test cases does not exceed\n\n    2000\n. Output For each test case, if it's impossible to make \n    a\n\nequal to \n    b\n in at most \n    4n\n reversals, print a single integer\n\n    -1\n. Otherwise, print an integer \n    m\n (\n    0 \n    \u2264 m \n    \u2264 4n\n),\ndenoting the number of reversals in your sequence of steps, followed by\n\n    m\n pairs of integers \n    l_i, r_i\n (\n    1 \n    \u2264 l_i \n    \u2264 r_i \n    \u2264\n    n\n), denoting the boundaries of the substrings of \n    a\n to be reversed, in\nchronological order. Each substring must contain exactly \n    k\n ones at the\nmoment of reversal. Note that \n    m\n doesn't have to be minimized. If there\nare multiple answers, print any. Example Input 6 6 1 101010 010101 6 3 101010\n010101 6 0 101010 010101 6 6 101010 010101 4 2 0000 1111 9 2 011100101\n101001011 Output 3 1 2 3 4 5 6 1 1 6 -1 -1 -1 5 4 8 8 9 3 6 1 4 3 6 Note In\nthe first test case, after the first reversal \n    a =\n 011010, after the\nsecond reversal \n    a =\n 010110, after the third reversal \n    a =\n 010101.\n\n",
        "cf_contest_id": 1530,
        "cf_index": "G",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "6\r\n6 1\r\n101010\r\n010101\r\n6 3\r\n101010\r\n010101\r\n6 0\r\n101010\r\n010101\r\n6 6\r\n101010\r\n010101\r\n4 2\r\n0000\r\n1111\r\n9 2\r\n011100101\r\n101001011\r\n",
                "8\r\n5 6\r\n3 5\r\n1 4\r\n5 5\r\n5 5\r\n2 4\r\n4 5\r\n6 6\r\n2\r\n1 6\r\n2 6\r\n-1\r\n-1\r\n-1\r\n12\r\n7 9\r\n4 8\r\n3 7\r\n2 6\r\n3 6\r\n4 7\r\n4 7\r\n3 6\r\n1 6\r\n3 7\r\n6 8\r\n8 9\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n8 5\r\n11111110\r\n11111101\r\n7 5\r\n1111110\r\n1111101\r\n9 7\r\n111111110\r\n111111101\r\n10 8\r\n1110111111\r\n1111111011\r\n",
                "24\r\n3 8\r\n2 7\r\n1 6\r\n3 7\r\n2 6\r\n3 7\r\n2 6\r\n3 7\r\n2 6\r\n3 7\r\n2 6\r\n3 7\r\n3 7\r\n2 6\r\n3 7\r\n1 6\r\n2 7\r\n1 6\r\n2 7\r\n1 6\r\n3 7\r\n1 6\r\n2 7\r\n3 8\r\n22\r\n2 7\r\n1 6\r\n2 7\r\n1 6\r\n2 7\r\n1 6\r\n3 7\r\n2 6\r\n3 7\r\n2 6\r\n3 7\r\n3 7\r\n1 6\r\n2 7\r\n1 6\r\n2 7\r\n1 6\r\n3 7\r\n1 6\r\n2 7\r\n1 6\r\n2 7\r\n30\r\n2 9\r\n1 8\r\n2 9\r\n1 8\r\n2 9\r\n1 8\r\n2 9\r\n1 8\r\n3 9\r\n2 8\r\n3 9\r\n2 8\r\n3 9\r\n2 8\r\n3 9\r\n3 9\r\n1 8\r\n2 9\r\n1 8\r\n2 9\r\n1 8\r\n2 9\r\n1 8\r\n3 9\r\n1 8\r\n2 9\r\n1 8\r\n2 9\r\n1 8\r\n2 9\r\n20\r\n2 10\r\n1 9\r\n1 9\r\n2 10\r\n1 9\r\n2 10\r\n1 9\r\n2 10\r\n1 9\r\n2 10\r\n2 9\r\n1 8\r\n2 9\r\n1 8\r\n2 10\r\n1 9\r\n2 10\r\n1 9\r\n1 9\r\n2 10\r\n"
            ]
        ]
    }
]