[
    {
        "name": "The Smallest String Concatenation",
        "description": "You're given a list of n strings a1, a2, ..., an. You'd like to concatenate\nthem together in some order such that the resulting string would be\nlexicographically smallest. Given the list of strings, output the\nlexicographically smallest concatenation. Input The first line contains\ninteger n \u2014 the number of strings (1 \u2264 n \u2264 5\u00b710^4). Each of the next n lines\ncontains one string ai (1 \u2264 |ai| \u2264 50) consisting of only lowercase English\nletters. The sum of string lengths will not exceed 5\u00b710^4. Output Print the\nonly string a \u2014 the lexicographically smallest string concatenation. Examples\nInput 4 abba abacaba bcd er Output abacabaabbabcder Input 5 x xx xxa xxaa\nxxaaa Output xxaaaxxaaxxaxxx Input 3 c cb cba Output cbacbc\n\n",
        "cf_contest_id": 632,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "sortings",
            "strings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\nabba\r\nabacaba\r\nbcd\r\ner\r\n",
                "abacabaabbabcder\r\n"
            ],
            [
                "5\r\nx\r\nxx\r\nxxa\r\nxxaa\r\nxxaaa\r\n",
                "xxaaaxxaaxxaxxx\r\n"
            ],
            [
                "3\r\nc\r\ncb\r\ncba\r\n",
                "cbacbc\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\naba\r\nabaaca\r\naba\r\nacaaaabbac\r\nabaacac\r\nb\r\ncabbcccaab\r\nbaacbb\r\nbcab\r\ncc\r\n",
                "abaabaabaacaabaacacacaaaabbacbaacbbbbcabcabbcccaabcc\r\n"
            ],
            [
                "13\r\nclgknjjojyuvdtv\r\nclgknjjojyuvdtvzxz\r\nclgknjjojyuvdtvzxzxradqhm\r\ngvzpnckalbaubfviyhijosiixvxaydxagvymq\r\nclgknjjojyuvdtvjgcwarwvgilcctdiytmvmvfxxkezymt\r\nbvwzpuut\r\nclgknjjojyuvdtvjgcwarwvgilcctdiytmvmvfxxkezymth\r\nclgknjjojyuvdtvjgcwarwvgilcctdiytmvmvfxxkezymtlkdl\r\nrbwvaayhhunlvmwexvkmqbquypsnjbdkkeytthekttywypud\r\nqlvkfkshkxyrfefigtngifxsuhpjgkb\r\nlhxtkfjrrwcvzuamizotupjqckaq\r\nenngvhxvpaoiyhctddyscasyqtilvbvgfphayykjeoylcvmjz\r\nxkazwk\r\n",
                "bvwzpuutclgknjjojyuvdtvclgknjjojyuvdtvjgcwarwvgilcctdiytmvmvfxxkezymtclgknjjojyuvdtvjgcwarwvgilcctdiytmvmvfxxkezymthclgknjjojyuvdtvjgcwarwvgilcctdiytmvmvfxxkezymtlkdlclgknjjojyuvdtvzxzclgknjjojyuvdtvzxzxradqhmenngvhxvpaoiyhctddyscasyqtilvbvgfphayykjeoylcvmjzgvzpnckalbaubfviyhijosiixvxaydxagvymqlhxtkfjrrwcvzuamizotupjqckaqqlvkfkshkxyrfefigtngifxsuhpjgkbrbwvaayhhunlvmwexvkmqbquypsnjbdkkeytthekttywypudxkazwk\r\n"
            ]
        ]
    }
]