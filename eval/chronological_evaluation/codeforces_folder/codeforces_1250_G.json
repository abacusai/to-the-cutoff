[
    {
        "name": "Discarding Game",
        "description": "Eulampius has created a game with the following rules: there are two players\nin the game: a human and a computer; the game lasts for no more than \n    n\n\nrounds. Initially both players have \n    0\n points. In the \n    j\n-th round\nthe human gains \n    a_j\n points, and the computer gains \n    b_j\n points. The\npoints are gained simultaneously; the game ends when one of the players gets\n\n    k\n or more points. This player loses the game. If both players get\n\n    k\n or more points simultaneously, both lose; if both players have less\nthan \n    k\n points after \n    n\n rounds, the game ends in a tie; after each\nround the human can push the \"Reset\" button. If the human had \n    x\n points,\nand the computer had \n    y\n points before the button is pushed (of course,\n\n    x < k\n and \n    y < k\n), then after the button is pushed the human will\nhave \n    x' = max(0, \n      x - y)\n points, and the computer will have \n    y' =\n    max(0, \n      y - x)\n points. E. g. the push of \"Reset\" button transforms the\nstate \n    (x=3, \n      y=5)\n into the state \n    (x'=0, \n      y'=2)\n, and the\nstate \n    (x=8, \n      y=2)\n into the state \n    (x'=6, \n      y'=0)\n.Eulampius\nasked his friend Polycarpus to test the game. Polycarpus has quickly revealed\nthat amounts of points gained by the human and the computer in each of \n    n\n\nrounds are generated before the game and stored in a file. In other words, the\npushes of the \"Reset\" button do not influence the values \n    a_j\n and\n\n    b_j\n, so sequences \n    a\n and \n    b\n are fixed and known in advance.\nPolycarpus wants to make a plan for the game. He would like to win the game\npushing the \"Reset\" button as few times as possible. Your task is to determine\nthis minimal number of pushes or determine that Polycarpus cannot win. Input\nThe first line of the input contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10000\n) \u2014 the number of test cases. Then the test cases follow. The first\nline of each test case contains two integers \n    n\n and \n    k\n (\n    1 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n, \n    2 \n    \u2264 k \n    \u2264 10^9\n) \u2014 the maximum possible\nnumber of rounds in the game and the number of points, after reaching which a\nplayer loses, respectively. The second line of each test case contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_j < k)\n, where \n    a_j\n\nis the amount of points the human gains in the \n    j\n-th round. The third\nline of each test case contains \n    n\n integers \n    b_1, b_2, \n    \u2026, b_n\n\n(\n    1 \n    \u2264 b_j < k\n), where \n    b_j\n is the amount of points the computer\ngains in the \n    j\n-th round. The sum of \n    n\n over all test cases in the\ninput does not exceed \n    2 \n    \u00b7 10^5\n. Output Print the answers for all\ntest cases in the order they appear in the input. If Polycarpus cannot win the\ngame, then simply print one line \"-1\" (without quotes). In this case, you\nshould not output anything else for that test case. Otherwise, the first line\nof the test case answer should contain one integer \n    d\n \u2014 the minimum\npossible number of \"Reset\" button pushes, required to win the game. The next\nline should contain \n    d\n distinct integers \n    r_1, r_2, \n    \u2026, r_d\n\n(\n    1 \n    \u2264 r_i < n\n) \u2014 the numbers of rounds, at the end of which\nPolycarpus has to press the \"Reset\" button, in arbitrary order. If \n    d=0\n\nthen either leave the second line of the test case answer empty, or do not\nprint the second line at all. If there are several possible solutions, print\nany of them. Example Input 3 4 17 1 3 5 7 3 5 7 9 11 17 5 2 8 2 4 6 1 2 7 2 5\n4 6 3 3 5 1 7 4 2 5 3 6 17 6 1 2 7 2 5 1 7 4 2 5 3 Output 0 2 2 4 -1 Note In\nthe second test case, if the human pushes the \"Reset\" button after the second\nand the fourth rounds, the game goes as follows: after the first round the\nhuman has \n    5\n points, the computer \u2014 \n    4\n points; after the second\nround the human has \n    7\n points, the computer \u2014 \n    10\n points; the human\npushes the \"Reset\" button and now he has \n    0\n points and the computer \u2014\n\n    3\n points; after the third round the human has \n    8\n points, the\ncomputer \u2014 \n    6\n points; after the fourth round the human has \n    10\n\npoints, the computer \u2014 \n    9\n points; the human pushes \"Reset\" button again,\nafter it he has \n    1\n point, the computer \u2014 \n    0\n points; after the fifth\nround the human has \n    5\n points, the computer \u2014 \n    5\n points; after the\nsixth round the human has \n    11\n points, the computer \u2014 \n    6\n points;\nafter the seventh round the human has \n    12\n points, the computer \u2014 \n    13\n\npoints; after the eighth round the human has \n    14\n points, the computer \u2014\n\n    17\n points; the human wins, as the computer has \n    k\n or more points\nand the human \u2014 strictly less than \n    k\n points.\n\n",
        "cf_contest_id": 1250,
        "cf_index": "G",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [],
        "private_cases": []
    }
]