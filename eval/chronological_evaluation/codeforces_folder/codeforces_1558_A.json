[
    {
        "name": "Charmed by the Game",
        "description": "Alice and Borys are playing tennis. A tennis match consists of games. In each\ngame, one of the players is serving and the other one is receiving. Players\nserve in turns: after a game where Alice is serving follows a game where Borys\nis serving, and vice versa. Each game ends with a victory of one of the\nplayers. If a game is won by the serving player, it's said that this player\nholds serve. If a game is won by the receiving player, it's said that this\nplayer breaks serve. It is known that Alice won \n    a\n games and Borys won\n\n    b\n games during the match. It is unknown who served first and who won\nwhich games. Find all values of \n    k\n such that exactly \n    k\n breaks could\nhappen during the match between Alice and Borys in total. Input Each test\ncontains multiple test cases. The first line contains the number of test cases\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^3\n). Description of the test cases follows.\nEach of the next \n    t\n lines describes one test case and contains two\nintegers \n    a\n and \n    b\n (\n    0 \n    \u2264 a, b \n    \u2264 10^5\n; \n    a + b > 0\n)\n\u2014 the number of games won by Alice and Borys, respectively. It is guaranteed\nthat the sum of \n    a + b\n over all test cases does not exceed \n    2 \n    \u00b7\n    10^5\n. Output For each test case print two lines. In the first line, print a\nsingle integer \n    m\n (\n    1 \n    \u2264 m \n    \u2264 a + b + 1\n) \u2014 the number of\nvalues of \n    k\n such that exactly \n    k\n breaks could happen during the\nmatch. In the second line, print \n    m\n distinct integers \n    k_1, k_2,\n    \n    \u2026, k_m\n (\n    0 \n    \u2264 k_1 < k_2 < \n    \u2026 < k_m \n    \u2264 a + b\n) \u2014 the\nsought values of \n    k\n in increasing order. Example Input 3 2 1 1 1 0 5\nOutput 4 0 1 2 3 2 0 2 2 2 3 Note In the first test case, any number of breaks\nbetween \n    0\n and \n    3\n could happen during the match: Alice holds serve,\nBorys holds serve, Alice holds serve: \n    0\n breaks; Borys holds serve, Alice\nholds serve, Alice breaks serve: \n    1\n break; Borys breaks serve, Alice\nbreaks serve, Alice holds serve: \n    2\n breaks; Alice breaks serve, Borys\nbreaks serve, Alice breaks serve: \n    3\n breaks. In the second test case, the\nplayers could either both hold serves (\n    0\n breaks) or both break serves\n(\n    2\n breaks). In the third test case, either \n    2\n or \n    3\n breaks\ncould happen: Borys holds serve, Borys breaks serve, Borys holds serve, Borys\nbreaks serve, Borys holds serve: \n    2\n breaks; Borys breaks serve, Borys\nholds serve, Borys breaks serve, Borys holds serve, Borys breaks serve:\n\n    3\n breaks.\n\n",
        "cf_contest_id": 1558,
        "cf_index": "A",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n2 1\r\n1 1\r\n0 5\r\n",
                "4 0 1 2 3\r\n2 0 2\r\n2 2 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n0 100000\r\n100000 0\r\n",
                "1 50000\r\n1 50000\r\n"
            ],
            [
                "2\r\n99999 0\r\n0 99999\r\n",
                "2 49999 50000\r\n2 49999 50000\r\n"
            ],
            [
                "2\r\n99999 1\r\n1 99999\r\n",
                "2 49999 50001\r\n2 49999 50001\r\n"
            ],
            [
                "2\r\n99998 1\r\n1 99998\r\n",
                "4 49998 49999 50000 50001\r\n4 49998 49999 50000 50001\r\n"
            ]
        ]
    }
]