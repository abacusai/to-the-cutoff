[
    {
        "name": "Three States",
        "description": "The famous global economic crisis is approaching rapidly, so the states of\nBerman, Berance and Bertaly formed an alliance and allowed the residents of\nall member states to freely pass through the territory of any of them. In\naddition, it was decided that a road between the states should be built to\nguarantee so that one could any point of any country can be reached from any\npoint of any other State. Since roads are always expensive, the governments of\nthe states of the newly formed alliance asked you to help them assess the\ncosts. To do this, you have been issued a map that can be represented as a\nrectangle table consisting of n rows and m columns. Any cell of the map either\nbelongs to one of three states, or is an area where it is allowed to build a\nroad, or is an area where the construction of the road is not allowed. A cell\nis called passable, if it belongs to one of the states, or the road was built\nin this cell. From any passable cells you can move up, down, right and left,\nif the cell that corresponds to the movement exists and is passable. Your task\nis to construct a road inside a minimum number of cells, so that it would be\npossible to get from any cell of any state to any cell of any other state\nusing only passable cells. It is guaranteed that initially it is possible to\nreach any cell of any state from any cell of this state, moving only along its\ncells. It is also guaranteed that for any state there is at least one cell\nthat belongs to it. Input The first line of the input contains the dimensions\nof the map n and m (1 \u2264 n, m \u2264 1000) \u2014 the number of rows and columns\nrespectively. Each of the next n lines contain m characters, describing the\nrows of the map. Digits from 1 to 3 represent the accessory to the\ncorresponding state. The character '.' corresponds to the cell where it is\nallowed to build a road and the character '#' means no construction is allowed\nin this cell. Output Print a single integer \u2014 the minimum number of cells you\nneed to build a road inside in order to connect all the cells of all states.\nIf such a goal is unachievable, print -1. Examples Input 4 5 11..2 #..22 #.323\n.#333 Output 2 Input 1 5 1#2#3 Output -1\n\n",
        "cf_contest_id": 590,
        "cf_index": "C",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4 5\r\n11..2\r\n#..22\r\n#.323\r\n.#333\r\n",
                "2\r\n"
            ],
            [
                "1 5\r\n1#2#3\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 3\r\n..#\r\n.3.\r\n..2\r\n..1\r\n",
                "1\r\n"
            ],
            [
                "1 3\r\n231\r\n",
                "0\r\n"
            ],
            [
                "3 1\r\n3\r\n1\r\n2\r\n",
                "0\r\n"
            ],
            [
                "1 4\r\n12#3\r\n",
                "-1\r\n"
            ],
            [
                "4 4\r\n3###\r\n.222\r\n.#.2\r\n1222\r\n",
                "1\r\n"
            ],
            [
                "3 3\r\n##3\r\n1..\r\n222\r\n",
                "1\r\n"
            ],
            [
                "1 9\r\n111222333\r\n",
                "0\r\n"
            ],
            [
                "1 10\r\n111222333.\r\n",
                "0\r\n"
            ],
            [
                "1 15\r\n111112222233333\r\n",
                "0\r\n"
            ],
            [
                "10 1\r\n1\r\n.\r\n2\r\n2\r\n2\r\n2\r\n2\r\n.\r\n3\r\n.\r\n",
                "2\r\n"
            ],
            [
                "3 3\r\n#2#\r\n1.3\r\n1.#\r\n",
                "1\r\n"
            ],
            [
                "1 9\r\n1.22222.3\r\n",
                "2\r\n"
            ],
            [
                "3 3\r\n1.2\r\n1.2\r\n333\r\n",
                "0\r\n"
            ]
        ]
    }
]