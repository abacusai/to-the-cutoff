[
    {
        "name": "Triskaidekaphobia",
        "description": "Triskaidekaphobia is a fear of number 13. Ordinary people who suffer from this\nphobia feel uncomfortable around numbers 13, 130, 513 etc, but you, being a\nprogrammer, take this fear one step further. For example, consider number 7.\nIt's ok when written in decimal, but written in base 4 it becomes 13, the\ndreadful number! The more you think about it, the worse it looks. Number 100\nhas as many as 13 notations which contain 13! And there are numbers which have\n13 in infinite number of their notations! Luckily, you can do any math in\nbinary, which is completely safe from the nasty number. But still, you want to\nbe able to estimate the level of nastiness of any number. Your task is: given\nan integer n, find the number of different integer bases b (b \u2265 2) for which\nn, written in base b, contains at least one 13. Assume that \"digits\" of the\nnumber in bases larger than 10 are written not as letters but as decimal\nnumbers; thus, 30 in base 16 is not 1E but (1)(14) or simply 114. Please note,\nthat 13 must be present as a substring of notation, not a subsequence (123\ndoesn't contain 13). Input The only line of the input contains a single\ninteger n (1 \u2264 n \u2264 10^5). Output Output a single integer \u2014 the number of\ndifferent integer bases b (b \u2265 2) for which n, written in base b, contains at\nleast one 13. If there are infinitely many such bases, output -1. Examples\nInput 7 Output 1 Input 100 Output 13 Input 13 Output -1\n\n",
        "cf_contest_id": 345,
        "cf_index": "B",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "*special"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n",
                "          1\r\n"
            ],
            [
                "100\r\n",
                "         13\r\n"
            ],
            [
                "13\r\n",
                "         -1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n",
                "          0\r\n"
            ],
            [
                "6\r\n",
                "          0\r\n"
            ],
            [
                "100000\r\n",
                "      16843\r\n"
            ],
            [
                "2138\r\n",
                "         -1\r\n"
            ],
            [
                "61635\r\n",
                "       6248\r\n"
            ],
            [
                "31170\r\n",
                "       3291\r\n"
            ],
            [
                "68665\r\n",
                "      10348\r\n"
            ],
            [
                "72180\r\n",
                "      11740\r\n"
            ],
            [
                "41715\r\n",
                "       4314\r\n"
            ],
            [
                "79210\r\n",
                "      15453\r\n"
            ],
            [
                "48745\r\n",
                "       4846\r\n"
            ],
            [
                "20227\r\n",
                "       2010\r\n"
            ],
            [
                "89755\r\n",
                "      16760\r\n"
            ],
            [
                "27257\r\n",
                "       3033\r\n"
            ],
            [
                "64292\r\n",
                "       7400\r\n"
            ],
            [
                "33827\r\n",
                "       3527\r\n"
            ],
            [
                "5309\r\n",
                "        454\r\n"
            ],
            [
                "74837\r\n",
                "      13666\r\n"
            ],
            [
                "44372\r\n",
                "       4335\r\n"
            ],
            [
                "81867\r\n",
                "      16321\r\n"
            ],
            [
                "85382\r\n",
                "      16279\r\n"
            ],
            [
                "22884\r\n",
                "       2097\r\n"
            ],
            [
                "92412\r\n",
                "      16492\r\n"
            ],
            [
                "29914\r\n",
                "       3264\r\n"
            ],
            [
                "91313\r\n",
                "         -1\r\n"
            ],
            [
                "99999\r\n",
                "      17258\r\n"
            ],
            [
                "10\r\n",
                "          1\r\n"
            ],
            [
                "1000\r\n",
                "        154\r\n"
            ],
            [
                "1001\r\n",
                "        162\r\n"
            ],
            [
                "1002\r\n",
                "        155\r\n"
            ],
            [
                "1003\r\n",
                "        170\r\n"
            ],
            [
                "1004\r\n",
                "        151\r\n"
            ],
            [
                "1005\r\n",
                "        161\r\n"
            ]
        ]
    }
]