[
    {
        "name": "Non-alternating Deck (easy version)",
        "description": "This is an easy version of the problem. In this version, all cards have the\nsame color. Alice has \n    n\n cards, each card is white, and the cards are\nstacked in a deck. Alice deals the cards to herself and to Bob, dealing at\nonce several cards from the top of the deck in the following order: one card\nto herself, two cards to Bob, three cards to Bob, four cards to herself, five\ncards to herself, six cards to Bob, seven cards to Bob, eight cards to\nherself, and so on. In other words, on the \n    i\n-th step, Alice deals\n\n    i\n top cards from the deck to one of the players; on the first step, she\ndeals the cards to herself and then alternates the players every two steps.\nWhen there aren't enough cards at some step, Alice deals all the remaining\ncards to the current player, and the process stops. First Alice's steps in a\ndeck of many cards. How many cards will Alice and Bob have at the end? Input\nEach test contains multiple test cases. The first line contains the number of\ntest cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 200\n). The description of the test\ncases follows The only line of each test case contains a single integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^6\n) \u2014 the number of cards. Output For each\ntest case print two integers \u2014 the number of cards in the end for each player\n\u2014 in this order: cards Alice has, cards Bob has. Example Input 5 10 6 17 8\n1000000 Output 5 5 1 5 10 7 3 5 500202 499798\n\n",
        "cf_contest_id": 1786,
        "cf_index": "A1",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n10\r\n6\r\n17\r\n8\r\n1000000\r\n",
                "5 5\r\n1 5\r\n10 7\r\n3 5\r\n500202 499798\r\n"
            ]
        ],
        "private_cases": []
    }
]