[
    {
        "name": "Permutation Weight (Hard Version)",
        "description": "This is a hard version of the problem. The difference between the easy and\nhard versions is that in this version, you have to output the\nlexicographically smallest permutation with the smallest weight. You are given\na permutation \n    p_1, p_2, \n    \u2026, p_n\n of integers from \n    1\n to\n\n    n\n. Let's define the weight of the permutation \n    q_1, q_2, \n    \u2026,\n    q_n\n of integers from \n    1\n to \n    n\n as \n    \n\n    |q_1 - p_q_2| + |q_2 -\n    p_q_3| + \n    \u2026 + |q_n-1 - p_q_n| + |q_n - p_q_1|\n\n    \n You\nwant your permutation to be as lightweight as possible. Among the permutations\n\n    q\n with the smallest possible weight, find the lexicographically\nsmallest. Permutation \n    a_1, a_2, \n    \u2026, a_n\n is lexicographically\nsmaller than permutation \n    b_1, b_2, \n    \u2026, b_n\n, if there exists some\n\n    1 \n    \u2264 i \n    \u2264 n\n such that \n    a_j = b_j\n for all \n    1 \n    \u2264 j < i\n\nand \n    a_i<b_i\n. Input The first line of the input contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases. The\ndescription of the test cases follows. The first line of each test case\ncontains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 200\n) \u2014 the size of\nthe permutation. The second line of each test case contains \n    n\n integers\n\n    p_1, p_2, \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n, all \n    p_i\n are\ndistinct) \u2014 the elements of the permutation. The sum of \n    n\n over all test\ncases doesn't exceed \n    400\n. Output For each test case, output \n    n\n\nintegers \n    q_1, q_2, \n    \u2026, q_n\n (\n    1 \n    \u2264 q_i \n    \u2264 n\n, all\n\n    q_i\n are distinct) \u2014 the lexicographically smallest permutation with the\nsmallest weight. Example Input 3 2 2 1 4 2 3 1 4 5 5 4 3 2 1 Output 1 2 1 3 4\n2 1 3 4 2 5 Note In the first test case, there are two permutations of length\n\n    2\n: \n    (1, 2)\n and \n    (2, 1)\n. Permutation \n    (1, 2)\n has weight\n\n    |1 - p_2| + |2 - p_1| = 0\n, and the permutation \n    (2, 1)\n has the same\nweight: \n    |2 - p_1| + |1 - p_2| = 0\n. In this version, you have to output\nthe lexicographically smaller of them \u2014 \n    (1, 2)\n. In the second test case,\nthe weight of the permutation \n    (1, 3, 4, 2)\n is \n    |1 - p_3| + |3 - p_4| +\n    |4 - p_2| + |2 - p_1| = |1 - 1| + |3 - 4| + |4 - 3| + |2 - 2| = 2\n. There\nare no permutations with smaller weights. In the third test case, the weight\nof the permutation \n    (1, 3, 4, 2, 5)\n is \n    |1 - p_3| + |3 - p_4| + |4 -\n    p_2| + |2 - p_5| + |5 - p_1| = |1 - 3| + |3 - 2| + |4 - 4| + |2 - 1| + |5 - 5|\n    = 4\n. There are no permutations with smaller weights.\n\n",
        "cf_contest_id": 1685,
        "cf_index": "D2",
        "cf_rating": 3500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2\r\n2 1\r\n4\r\n2 3 1 4\r\n5\r\n5 4 3 2 1\r\n",
                "1 2 \r\n1 3 4 2 \r\n1 3 4 2 5 \r\n"
            ]
        ],
        "private_cases": []
    }
]