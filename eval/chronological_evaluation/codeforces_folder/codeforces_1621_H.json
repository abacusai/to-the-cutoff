[
    {
        "name": "Trains and Airplanes",
        "description": "Railway network of one city consists of \n    n\n stations connected by\n\n    n-1\n roads. These stations and roads forms a tree. Station \n    1\n is a\ncity center. For each road you know the time trains spend to pass this road.\nYou can assume that trains don't spend time on stops. Let's define\n\n    dist(v)\n as the time that trains spend to get from the station \n    v\n to\nthe station \n    1\n. This railway network is splitted into zones named by\nfirst \n    k\n capital latin letters. The zone of the \n    i\n-th station is\n\n    z_i\n. City center is in the zone A. For all other stations it is\nguaranteed that the first station on the road from this station to the city\ncenter is either in the same zone or in the zone with lexicographically\nsmaller name. Any road is completely owned by the zone of the most distant end\nfrom the city center. Tourist will arrive at the airport soon and then he will\ngo to the city center. Here's how the trip from station \n    v\n to station\n\n    1\n happends: At the moment \n    0\n, tourist enters the train that follows\ndirectly from the station \n    v\n to the station \n    1\n. The trip will last\nfor \n    dist(v)\n minutes. Tourist can buy tickets for any subset of zones at\nany moment. Ticket for zone \n    i\n costs \n    pass_i\n euro. Every \n    T\n\nminutes since the start of the trip (that is, at the moments \n    T, 2T,\n    \n    \u2026\n) the control system will scan tourist. If at the moment of scan\ntourist is in the zone \n    i\n without zone \n    i\n ticket, he should pay\n\n    fine_i\n euro. Formally, the zone of tourist is determined in the\nfollowing way: If tourist is at the station \n    1\n, then he already at the\ncity center so he shouldn't pay fine. If tourist is at the station \n    u \n    \u2260\n    1\n, then he is in the zone \n    z_u\n. If tourist is moving from the station\n\n    x\n to the station \n    y\n that are directly connected by road, then he is\nin the zone \n    z_x\n. Note, that tourist can pay fine multiple times in the\nsame zone. Tourist always selects such way to buy tickets and pay fines that\nminimizes the total cost of trip. Let \n    f(v)\n be such cost for station\n\n    v\n. Unfortunately, tourist doesn't know the current values of\n\n    pass_i\n and \n    fine_i\n for different zones and he has forgot the\nlocation of the airport. He will ask you queries of \n    3\n types: \n    1\n\n\n    i\n \n    c\n \u2014 the cost of ticket in zone \n    i\n has changed. Now\n\n    pass_i\n is \n    c\n. \n    2\n \n    i\n \n    c\n \u2014 the cost of fine in zone\n\n    i\n has changed. Now \n    fine_i\n is \n    c\n. \n    3\n \n    u\n \u2014 solve the\nfollowing problem for current values of \n    pass\n and \n    fine\n: You are\ngiven the station \n    u\n. Consider all the stations \n    v\n that satisfy the\nfollowing conditions: \n    z_v = z_u\n The station \n    u\n is on the path from\nthe station \n    v\n to the station \n    1\n. Find the value of\n\n    min(f(v))\n over all such stations \n    v\n with the following\nassumption: tourist has the ticket for the zone of station \n    z_u\n. Input\nThe first line contains the single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the number of stations. Each of the next \n    n - 1\n lines\ncontains three integers \n    v_i\n, \n    u_i\n, \n    t_i\n (\n    1 \n    \u2264 v_i, u_i\n    \n    \u2264 n, 1 \n    \u2264 t_i \n    \u2264 10^9\n) \u2014 the ends of the \n    i\n-th road and\nthe time it takes a train to pass this road. It is guaranteed that this roads\nforms a tree. The next line contains the single integer \n    k\n (\n    1 \n    \u2264 k\n    \n    \u2264 26\n) \u2014 the number of zones. The next line contains \n    n\n symbols\n\n    z_1z_2 \n    \u2026 z_n\n \u2014 \n    z_i\n is the name of the zone of the\n\n    i\n-th station. It is guaranteed that the conditions from the second\nparagraph are satisfied. The next line contains \n    k\n integers \n    pass_1\n,\n\n    pass_2\n, \n    \u2026\n, \n    pass_k\n (\n    1 \n    \u2264 pass_i \n    \u2264 10^9\n)\n\u2014 initial costs of tickets. The next line contains \n    k\n integers\n\n    fine_1\n, \n    fine_2\n, \n    \u2026\n, \n    fine_k\n (\n    1 \n    \u2264 fine_i\n    \n    \u2264 10^9\n) \u2014 initial fines. The next line contains the single integer\n\n    T\n (\n    1 \n    \u2264 T \n    \u2264 10^9\n) \u2014 the time gap between scans of control\nsystem. The next line contains the single integer \n    q\n (\n    1 \n    \u2264 q\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of queries. Next \n    q\n lines contains\nqueries as described in the statement. It is guaranteed that in the queries of\nthe first and the second type \n    i\n is a correct name of the zone (one of\nthe first \n    k\n capital latin letters) and \n    1 \n    \u2264 c \n    \u2264 10^9\n, and\nin the queries of the third type \n    1 \n    \u2264 u \n    \u2264 n\n. Output For each\nquery of the third type print the answer to it. Example Input 8 1 2 7 2 3 4 2\n4 3 4 5 1 5 6 6 4 7 10 6 8 6 4 AABABBDB 11 12 10 42 16 15 15 30 4 6 3 2 1 A 10\n3 3 2 A 3 3 7 3 6 Output 0 10 6 6 Note Note, that the fine can be cheaper than\nthe pass. The railway network from the example. Green color is used for\nstations and roads of zone A, blue color is used for zone B and red color is\nused for zone D. The integer near each road is time that trains spend to pass\nit. In the first query, the airport can be located near the station \n    2\n or\nnear the station \n    4\n. During the trip, tourist will always stay in the\nzone A. He already has the pass for this zone so the answer is \n    0\n. After\nthe second query, the cost of the pass in the zone A has become \n    10\n. In\nthe third query, the airport can be located only near the station \n    3\n.\nOptimal solution will be to buy the pass for zone A. During the first \n    3\n\nseconds of trip tourist will be in the zone B. Then he will move to the zone A\nand will be scanned there on the \n    4\n-th and the \n    8\n-th second of his\nride. Since he have a pass for this zone, he won't pay fines. After the forth\nquery, the fine in the zone A has become \n    3\n. In the fifth query, the\nairport can be located only near the station \n    7\n and \n    f(7) = 6\n. In\nthe sixth query, the airport can be located near the station \n    6\n or near\nthe station \n    8\n. Since \n    f(6)=9\n and \n    f(8)=6\n the answer is\n\n    6\n.\n\n",
        "cf_contest_id": 1621,
        "cf_index": "H",
        "cf_rating": 3500,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs",
            "shortest paths",
            "trees"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "8\r\n1 2 7\r\n2 3 4\r\n2 4 3\r\n4 5 1\r\n5 6 6\r\n4 7 10\r\n6 8 6\r\n4\r\nAABABBDB\r\n11 12 10 42\r\n16 15 15 30\r\n4\r\n6\r\n3 2\r\n1 A 10\r\n3 3\r\n2 A 3\r\n3 7\r\n3 6\r\n",
                "0\r\n10\r\n6\r\n6\r\n"
            ]
        ],
        "private_cases": [
            [
                "15\r\n8 14 85\r\n10 11 5\r\n1 10 4\r\n2 3 1\r\n3 15 74\r\n6 12 70\r\n13 11 72\r\n6 10 8\r\n4 3 1\r\n4 5 1\r\n7 4 12\r\n5 9 6\r\n1 8 15\r\n5 1 2\r\n5\r\nACCCBCCACBBEEAC\r\n4 6 12 6 4\r\n6 1 4 1 6\r\n3\r\n15\r\n3 1\r\n3 2\r\n3 3\r\n3 4\r\n3 5\r\n3 6\r\n3 7\r\n3 8\r\n3 9\r\n3 10\r\n3 11\r\n3 12\r\n3 13\r\n3 14\r\n3 15\r\n",
                "0\r\n1\r\n0\r\n0\r\n0\r\n1\r\n0\r\n0\r\n1\r\n0\r\n0\r\n10\r\n3\r\n0\r\n0\r\n"
            ],
            [
                "15\r\n8 14 85\r\n10 11 5\r\n1 10 4\r\n2 3 1\r\n3 15 74\r\n6 12 70\r\n13 11 72\r\n6 10 8\r\n4 3 1\r\n4 5 1\r\n7 4 12\r\n5 9 6\r\n1 8 15\r\n5 1 2\r\n5\r\nACCCBCCACBBEEAC\r\n4 6 12 6 4\r\n6 1 4 1 6\r\n2\r\n15\r\n3 1\r\n3 2\r\n3 3\r\n3 4\r\n3 5\r\n3 6\r\n3 7\r\n3 8\r\n3 9\r\n3 10\r\n3 11\r\n3 12\r\n3 13\r\n3 14\r\n3 15\r\n",
                "0\r\n1\r\n1\r\n1\r\n0\r\n2\r\n1\r\n0\r\n1\r\n0\r\n0\r\n14\r\n5\r\n0\r\n1\r\n"
            ],
            [
                "15\r\n8 14 85\r\n10 11 5\r\n1 10 4\r\n2 3 1\r\n3 15 74\r\n6 12 70\r\n13 11 72\r\n6 10 8\r\n4 3 1\r\n4 5 1\r\n7 4 12\r\n5 9 6\r\n1 8 15\r\n5 1 2\r\n5\r\nACCCBCCACBBEEAC\r\n4 6 12 6 4\r\n6 1 4 1 6\r\n1\r\n15\r\n3 1\r\n3 2\r\n3 3\r\n3 4\r\n3 5\r\n3 6\r\n3 7\r\n3 8\r\n3 9\r\n3 10\r\n3 11\r\n3 12\r\n3 13\r\n3 14\r\n3 15\r\n",
                "0\r\n2\r\n2\r\n2\r\n0\r\n4\r\n2\r\n0\r\n2\r\n0\r\n0\r\n16\r\n6\r\n0\r\n2\r\n"
            ]
        ]
    }
]