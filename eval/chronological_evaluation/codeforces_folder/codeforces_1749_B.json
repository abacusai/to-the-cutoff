[
    {
        "name": "Death's Blessing",
        "description": "You are playing a computer game. To pass the current level, you have to kill a\nbig horde of monsters. In this horde, there are \n    n\n monsters standing in\nthe row, numbered from \n    1\n to \n    n\n. The \n    i\n-th monster has\n\n    a_i\n health and a special \"Death's Blessing\" spell of strength \n    b_i\n\nattached to it. You are going to kill all of them one by one. It takes exactly\n\n    h\n seconds to kill a monster with health \n    h\n. When the \n    i\n-th\nmonster dies, it casts its spell that increases the health of its neighbors by\n\n    b_i\n (the neighbors of the \n    j\n-th monster in the row are the monsters\non places \n    j - 1\n and \n    j + 1\n. The first and the last monsters have\nonly one neighbor each). After each monster is killed, the row shrinks, so its\nformer neighbors become adjacent to each other (so if one of them dies, the\nother one is affected by its spell). For example, imagine a situation with\n\n    4\n monsters with health \n    a = [2, 6, 7, 3]\n and spells \n    b = [3, 6,\n    0, 5]\n. One of the ways to get rid of the monsters is shown below:\n\n    2\n\n    6\n\n    7\n\n    3\n\n    \n\n    8\n\n    13\n\n    3\n\n    \n\n    8\n\n    3\n\n    \n\n    6\n\n    \n\n    \n\n    3\n\n    6\n\n    0\n\n    5\n\n    3\n\n    0\n\n    5\n\n    3\n\n    5\n\n    5\n\nThe first row represents the health of each monster, the second one \u2014 the\npower of the spells. As a result, we can kill all monsters in \n    6 + 13 + 8 +\n    6\n \n    =\n \n    33\n seconds. Note that it's only an example and may not be\nthe fastest way to get rid of the monsters. What is the minimum time required\nto kill all monsters in the row? Input The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The\nfirst line of each test case contains a single integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of monsters in the row. The second line\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^9\n) \u2014 the initial health of corresponding monsters. The third line\ncontains \n    n\n integers \n    b_1, b_2, \n    \u2026, b_n\n (\n    0 \n    \u2264 b_i \n    \u2264\n    10^9\n), where \n    b_i\n is the strength of the spell for the \n    i\n-th\nmonster. It's guaranteed that the sum of \n    n\n doesn't exceed \n    2 \n    \u00b7\n    10^5\n. Output For each test case, print one integer \u2014 the minimum possible\ntotal time to kill all monsters. Example Input 4 1 10 0 3 100 1 100 1 100 1 4\n2 6 7 3 3 6 0 5 2 1000000000 1000000000 1000000000 1000000000 Output 10 203 26\n3000000000 Note In the first test case, there is only one monster that will be\nkilled in \n    10\n seconds. In the second test case, it's optimal to kill the\nfirst monster, the last monster and then the middle one. It will take \n    100 +\n    100 + (1 + 1 + 1)\n \n    =\n \n    203\n seconds. In the third test case, it's\noptimal to kill the first monster, then the third one, then the fourth one and\nfinally the second one. It will take \n    2 + 7 + (3 + 0) + (3 + 6 + 5)\n\n\n    =\n \n    26\n seconds.\n\n",
        "cf_contest_id": 1749,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1\r\n10\r\n0\r\n3\r\n100 1 100\r\n1 100 1\r\n4\r\n2 6 7 3\r\n3 6 0 5\r\n2\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n",
                "10\r\n203\r\n26\r\n3000000000\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n303\r\n2004\r\n",
                "303\r\n"
            ],
            [
                "1\r\n3\r\n1 1 3857620\r\n1 1 1\r\n",
                "3857624\r\n"
            ]
        ]
    }
]