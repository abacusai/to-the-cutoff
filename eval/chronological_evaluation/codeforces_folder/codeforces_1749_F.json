[
    {
        "name": "Distance to the Path",
        "description": "You are given a tree consisting of \n    n\n vertices. Initially, each vertex\nhas a value \n    0\n. You need to perform \n    m\n queries of two types: You are\ngiven a vertex index \n    v\n. Print the value of the vertex \n    v\n. You are\ngiven two vertex indices \n    u\n and \n    v\n and values \n    k\n and \n    d\n\n(\n    d \n    \u2264 20\n). You need to add \n    k\n to the value of each vertex such\nthat the distance from that vertex to the path from \n    u\n to \n    v\n is less\nthan or equal to \n    d\n. The distance between two vertices \n    x\n and\n\n    y\n is equal to the number of edges on the path from \n    x\n to \n    y\n.\nFor example, the distance from \n    x\n to \n    x\n itself is equal to \n    0\n.\nThe distance from the vertex \n    v\n to some path from \n    x\n to \n    y\n is\nequal to the minimum among distances from \n    v\n to any vertex on the path\nfrom \n    x\n to \n    y\n. Input The first line contains a single integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of vertices in the\ntree. Next \n    n - 1\n lines contain the edges of the tree \u2014 one per line.\nEach line contains two integers \n    u\n and \n    v\n (\n    1 \n    \u2264 u, v \n    \u2264\n    n\n; \n    u \n    \u2260 v\n) representing one edge of the tree. It's guaranteed\nthat the given edges form a tree. The next line contains a single integer\n\n    m\n (\n    1 \n    \u2264 m \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of queries. Next\n\n    m\n lines contain the queries \u2014 one per line. Each query has one of the\nfollowing two types: \n    1\n \n    v\n (\n    1 \n    \u2264 v \n    \u2264 n\n) \u2014 the query of\nthe first type; \n    2\n \n    u\n \n    v\n \n    k\n \n    d\n (\n    1 \n    \u2264 u, v \n    \u2264\n    n\n; \n    1 \n    \u2264 k \n    \u2264 1000\n; \n    0 \n    \u2264 d \n    \u2264 20\n) \u2014 the query of the\nsecond type. Additional constraint on the input: there is at least one query\nof the first type. Output For each query of the first type, print the value of\nthe corresponding vertex. Example Input 6 1 2 1 3 4 2 5 2 3 6 14 2 4 5 10 2 1\n3 1 6 2 1 1 10 20 2 6 6 10 20 1 3 2 3 2 10 0 2 5 2 10 1 1 1 1 2 1 3 1 4 1 5 1\n6 Output 10 0 30 50 50 40 40 40 20 Note The tree from the first example: Some\nquery explanations: \"\n    2\n \n    4\n \n    5\n \n    10\n \n    2\n\": affected\nvertices are \n    4, 2, 5, 1, 3\n; \"\n    2\n \n    1\n \n    1\n \n    10\n\n\n    20\n\" and \"\n    2\n \n    6\n \n    6\n \n    10\n \n    20\n\": all vertices are\naffected, since distance to \n    1\n (\n    6\n) is less that \n    20\n for any\nvertex; \"\n    2\n \n    3\n \n    2\n \n    10\n \n    0\n\": affected vertices are\n\n    3, 1, 2\n; \"\n    2\n \n    5\n \n    2\n \n    10\n \n    1\n\": affected\nvertices are \n    5, 2, 4, 1\n.\n\n",
        "cf_contest_id": 1749,
        "cf_index": "F",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "6\r\n1 2\r\n1 3\r\n4 2\r\n5 2\r\n3 6\r\n14\r\n2 4 5 10 2\r\n1 3\r\n1 6\r\n2 1 1 10 20\r\n2 6 6 10 20\r\n1 3\r\n2 3 2 10 0\r\n2 5 2 10 1\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n",
                "10\r\n0\r\n30\r\n50\r\n50\r\n40\r\n40\r\n40\r\n20\r\n"
            ]
        ],
        "private_cases": []
    }
]