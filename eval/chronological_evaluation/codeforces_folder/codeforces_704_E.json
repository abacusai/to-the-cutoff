[
    {
        "name": "Iron Man",
        "description": "Tony Stark is playing a game with his suits (they have auto-pilot now). He\nlives in Malibu. Malibu has n junctions numbered from 1 to n, connected with n\n- 1 roads. One can get from a junction to any other junction using these roads\n(graph of Malibu forms a tree). Tony has m suits. There's a special plan for\neach suit. The i-th suit will appear at the moment of time ti in the junction\nvi, and will move to junction ui using the shortest path between vi and ui\nwith the speed ci roads per second (passing a junctions takes no time), and\nvanishing immediately when arriving at ui (if it reaches ui in time q, it's\navailable there at moment q, but not in further moments). Also, suits move\ncontinuously (for example if vi \u2260 ui, at time it's in the middle of a road.\nPlease note that if vi = ui it means the suit will be at junction number vi\nonly at moment ti and then it vanishes. An explosion happens if at any moment\nof time two suits share the same exact location (it may be in a junction or\nsomewhere on a road; while appearing, vanishing or moving). Your task is to\ntell Tony the moment of the the first explosion (if there will be any). Input\nThe first line of the input contains two integers n and m (1 \u2264 n, m \u2264 100 000)\n\u2014 the number of junctions and the number of suits respectively. The next n - 1\nlines contain the roads descriptions. Each line contains two integers ai and\nbi \u2014 endpoints of the i-th road (1 \u2264 ai, bi \u2264 n, ai \u2260 bi). The next m lines\ncontain the suit descriptions. The i-th of them contains four integers ti, ci,\nvi and ui (0 \u2264 ti \u2264 10 000, 1 \u2264 ci \u2264 10 000, 1 \u2264 vi, ui \u2264 n), meaning the i-th\nsuit will appear at moment of time ti at the junction vi and will move to the\njunction ui with a speed ci roads per second. Output If there would be no\nexplosions at all, print -1 in the first and only line of output. Otherwise\nprint the moment of the first explosion. Your answer will be considered\ncorrect if its relative or absolute error doesn't exceed 10^-6. Examples Input\n6 4 2 5 6 5 3 6 4 6 4 1 27 6 1 3 9 5 1 6 27 4 3 4 11 29 2 6 Output 27.3 Input\n6 4 3 1 4 5 6 4 6 1 2 6 16 4 4 5 13 20 6 2 3 16 4 5 28 5 3 5 Output -1\n\n",
        "cf_contest_id": 704,
        "cf_index": "E",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "geometry",
            "trees"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 4\r\n2 5\r\n6 5\r\n3 6\r\n4 6\r\n4 1\r\n27 6 1 3\r\n9 5 1 6\r\n27 4 3 4\r\n11 29 2 6\r\n",
                "27.3000000000"
            ],
            [
                "6 4\r\n3 1\r\n4 5\r\n6 4\r\n6 1\r\n2 6\r\n16 4 4 5\r\n13 20 6 2\r\n3 16 4 5\r\n28 5 3 5\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n193 763 1 1\r\n",
                "-1\r\n"
            ],
            [
                "10 10\r\n9 4\r\n10 1\r\n3 10\r\n1 7\r\n9 7\r\n6 2\r\n10 6\r\n10 8\r\n5 4\r\n5023 14 9 10\r\n5018 3 3 5\r\n3145 54 9 4\r\n2981 8340 9 4\r\n4726 259 9 3\r\n5787 26 9 6\r\n8712 57 10 5\r\n2365 19 9 6\r\n7829 8859 6 5\r\n5787 13 8 6\r\n",
                "5787.1538461538"
            ],
            [
                "10 20\r\n6 9\r\n5 2\r\n9 8\r\n5 8\r\n1 6\r\n3 6\r\n8 10\r\n7 1\r\n7 4\r\n8089 77 1 10\r\n3604 7771 10 4\r\n3585 3 9 2\r\n3604 7771 5 1\r\n628 11 9 4\r\n8089 77 3 10\r\n8251 5 1 2\r\n608 7 1 4\r\n3585 50 6 5\r\n608 28 8 7\r\n6351 9532 2 1\r\n1144 5 3 7\r\n8252 10 2 1\r\n597 23 9 4\r\n6351 2383 9 1\r\n57 601 6 10\r\n597 23 3 7\r\n1144 49 2 3\r\n57 367 5 10\r\n628 11 3 7\r\n",
                "57.0042735043"
            ],
            [
                "2 2\r\n2 1\r\n9955 3 2 1\r\n9088 38 2 2\r\n",
                "-1\r\n"
            ],
            [
                "3 3\r\n3 2\r\n1 2\r\n3974 381 3 2\r\n9473 36 2 1\r\n9473 72 3 1\r\n",
                "9473.0277777778"
            ],
            [
                "10 2\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10000 2 1 10\r\n10000 5 10 1\r\n",
                "10001.2857142857"
            ],
            [
                "10 2\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10000 2 1 10\r\n10000 2 10 1\r\n",
                "10002.2500000000"
            ],
            [
                "10 2\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10000 5 1 10\r\n10000 2 3 8\r\n",
                "10000.6666666667"
            ],
            [
                "1 1\r\n6600 9252 1 1\r\n",
                "-1\r\n"
            ],
            [
                "2 2\r\n1 2\r\n7376 3468 1 2\r\n7376 3468 2 2\r\n",
                "-1\r\n"
            ],
            [
                "10 10\r\n9 4\r\n1 3\r\n2 7\r\n9 7\r\n10 6\r\n10 1\r\n6 8\r\n2 5\r\n5 8\r\n2042 2657 5 4\r\n2042 2657 1 4\r\n2042 2657 6 4\r\n2042 2657 2 4\r\n2042 2657 8 4\r\n2042 2657 3 4\r\n2042 2657 4 4\r\n2042 2657 10 4\r\n2042 2657 9 4\r\n2042 2657 7 4\r\n",
                "-1\r\n"
            ],
            [
                "8 2\r\n1 3\r\n8 3\r\n4 2\r\n3 5\r\n7 4\r\n6 1\r\n7 3\r\n7198 85 5 4\r\n7198 85 8 4\r\n",
                "7198.0117647059"
            ]
        ]
    }
]