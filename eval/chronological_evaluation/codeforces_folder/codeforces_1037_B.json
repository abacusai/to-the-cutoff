[
    {
        "name": "Reach Median",
        "description": "You are given an array \n    a\n of \n    n\n integers and an integer \n    s\n. It\nis guaranteed that \n    n\n is odd. In one operation you can either increase or\ndecrease any single element by one. Calculate the minimum number of operations\nrequired to make the median of the array being equal to \n    s\n. The median of\nthe array with odd length is the value of the element which is located on the\nmiddle position after the array is sorted. For example, the median of the\narray \n    6, 5, 8\n is equal to \n    6\n, since if we sort this array we will\nget \n    5, 6, 8\n, and \n    6\n is located on the middle position. Input The\nfirst line contains two integers \n    n\n and \n    s\n (\n    1\n    \u2264 n\n    \u2264\n    2\n    \u00b7 10^5-1\n, \n    1\n    \u2264 s\n    \u2264 10^9\n) \u2014 the length of the array and\nthe required value of median. The second line contains \n    n\n integers\n\n    a_1, a_2, \n    \u2026, a_n\n (\n    1\n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the elements of\nthe array \n    a\n. It is guaranteed that \n    n\n is odd. Output In a single\nline output the minimum number of operations to make the median being equal to\n\n    s\n. Examples Input 3 8 6 5 8 Output 2 Input 7 20 21 15 12 11 20 19 12\nOutput 6 Note In the first sample, \n    6\n can be increased twice. The array\nwill transform to \n    8, 5, 8\n, which becomes \n    5, 8, 8\n after sorting,\nhence the median is equal to \n    8\n. In the second sample, \n    19\n can be\nincreased once and \n    15\n can be increased five times. The array will become\nequal to \n    21, 20, 12, 11, 20, 20, 12\n. If we sort this array we get \n    11,\n    12, 12, 20, 20, 20, 21\n, this way the median is \n    20\n.\n\n",
        "cf_contest_id": 1037,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 8\r\n6 5 8\r\n",
                "2\r\n"
            ],
            [
                "7 20\r\n21 15 12 11 20 19 12\r\n",
                "6\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 1\r\n1 2 5\r\n",
                "1\r\n"
            ],
            [
                "1 100\r\n105\r\n",
                "5\r\n"
            ],
            [
                "5 1\r\n2 2 4 6 1\r\n",
                "2\r\n"
            ],
            [
                "1 100\r\n88\r\n",
                "12\r\n"
            ],
            [
                "1 1\r\n100000\r\n",
                "99999\r\n"
            ],
            [
                "3 4\r\n1 2 5\r\n",
                "2\r\n"
            ],
            [
                "1 1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "3 10\r\n5 5 10\r\n",
                "5\r\n"
            ]
        ]
    }
]