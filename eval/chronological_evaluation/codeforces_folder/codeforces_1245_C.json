[
    {
        "name": "Constanze's Machine",
        "description": "Constanze is the smartest girl in her village but she has bad eyesight. One\nday, she was able to invent an incredible machine! When you pronounce letters,\nthe machine will inscribe them onto a piece of paper. For example, if you\npronounce 'c', 'o', 'd', and 'e' in that order, then the machine will inscribe\n\"code\" onto the paper. Thanks to this machine, she can finally write messages\nwithout using her glasses. However, her dumb friend Akko decided to play a\nprank on her. Akko tinkered with the machine so that if you pronounce 'w', it\nwill inscribe \"uu\" instead of \"w\", and if you pronounce 'm', it will inscribe\n\"nn\" instead of \"m\"! Since Constanze had bad eyesight, she was not able to\nrealize what Akko did. The rest of the letters behave the same as before: if\nyou pronounce any letter besides 'w' and 'm', the machine will just inscribe\nit onto a piece of paper. The next day, I received a letter in my mailbox. I\ncan't understand it so I think it's either just some gibberish from Akko, or\nConstanze made it using her machine. But since I know what Akko did, I can\njust list down all possible strings that Constanze's machine would have turned\ninto the message I got and see if anything makes sense. But I need to know how\nmuch paper I will need, and that's why I'm asking you for help. Tell me the\nnumber of strings that Constanze's machine would've turned into the message I\ngot. But since this number can be quite large, tell me instead its remainder\nwhen divided by \n    10^9+7\n. If there are no strings that Constanze's machine\nwould've turned into the message I got, then print \n    0\n. Input Input\nconsists of a single line containing a string \n    s\n (\n    1 \n    \u2264 |s| \n    \u2264\n    10^5\n) \u2014 the received message. \n    s\n contains only lowercase Latin\nletters. Output Print a single integer \u2014 the number of strings that\nConstanze's machine would've turned into the message \n    s\n, modulo\n\n    10^9+7\n. Examples Input ouuokarinn Output 4 Input banana Output 1 Input\nnnn Output 3 Input amanda Output 0 Note For the first example, the candidate\nstrings are the following: \"ouuokarinn\", \"ouuokarim\", \"owokarim\", and\n\"owokarinn\". For the second example, there is only one: \"banana\". For the\nthird example, the candidate strings are the following: \"nm\", \"mn\" and \"nnn\".\nFor the last example, there are no candidate strings that the machine can turn\ninto \"amanda\", since the machine won't inscribe 'm'.\n\n",
        "cf_contest_id": 1245,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "ouuokarinn\r\n",
                "4\r\n"
            ],
            [
                "banana\r\n",
                "1\r\n"
            ],
            [
                "nnn\r\n",
                "3\r\n"
            ],
            [
                "amanda\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "a\r\n",
                "1\r\n"
            ],
            [
                "uuunnnuuunnn\r\n",
                "81\r\n"
            ],
            [
                "nunununu\r\n",
                "1\r\n"
            ],
            [
                "mandaluyong\r\n",
                "0\r\n"
            ],
            [
                "ivoulebsbi\r\n",
                "1\r\n"
            ],
            [
                "qmwknxcyrykskllhwnxlvlmckdhfpkuizzkeixxdvxlqyrspdtuccnbvpcvktzgmgvvebmdfdjsoyfhzigwvxrklbiunhzxjnayk\r\n",
                "0\r\n"
            ],
            [
                "rvqvupnfgn\r\n",
                "1\r\n"
            ],
            [
                "fjyakzltbxkzfnbpcofxoqelqfvzogkadeecvxiqextvhctrzzdrbjyyrfxfjarhyodqddpznxnvfrnoaavhldjvqvzhktzjyyvi\r\n",
                "1\r\n"
            ],
            [
                "uuuuuuunnn\r\n",
                "63\r\n"
            ],
            [
                "nnnnnnnnnnnnnnnnnnnnnuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuunnnnnnnnnnnnnnnnnnnnnuuuuuuuuuunnunnu\r\n",
                "281595619\r\n"
            ],
            [
                "w\r\n",
                "0\r\n"
            ]
        ]
    }
]