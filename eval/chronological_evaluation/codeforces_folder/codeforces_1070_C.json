[
    {
        "name": "Cloud Computing",
        "description": "Buber is a Berland technology company that specializes in waste of investor's\nmoney. Recently Buber decided to transfer its infrastructure to a cloud. The\ncompany decided to rent CPU cores in the cloud for \n    n\n consecutive days,\nwhich are numbered from \n    1\n to \n    n\n. Buber requires \n    k\n CPU cores\neach day. The cloud provider offers \n    m\n tariff plans, the \n    i\n-th\ntariff plan is characterized by the following parameters: \n    l_i\n and\n\n    r_i\n \u2014 the \n    i\n-th tariff plan is available only on days from\n\n    l_i\n to \n    r_i\n, inclusive, \n    c_i\n \u2014 the number of cores per day\navailable for rent on the \n    i\n-th tariff plan, \n    p_i\n \u2014 the price of\nrenting one core per day on the \n    i\n-th tariff plan. Buber can arbitrarily\nshare its computing core needs between the tariff plans. Every day Buber can\nrent an arbitrary number of cores (from 0 to \n    c_i\n) on each of the\navailable plans. The number of rented cores on a tariff plan can vary\narbitrarily from day to day. Find the minimum amount of money that Buber will\npay for its work for \n    n\n days from \n    1\n to \n    n\n. If on a day the\ntotal number of cores for all available tariff plans is strictly less than\n\n    k\n, then this day Buber will have to work on fewer cores (and it rents\nall the available cores), otherwise Buber rents exactly \n    k\n cores this\nday. Input The first line of the input contains three integers \n    n\n,\n\n    k\n and \n    m\n (\n    1 \n    \u2264 n,k \n    \u2264 10^6, 1 \n    \u2264 m \n    \u2264\n    2\n    \u00b710^5\n) \u2014 the number of days to analyze, the desired daily number of\ncores, the number of tariff plans. The following \n    m\n lines contain\ndescriptions of tariff plans, one description per line. Each line contains\nfour integers \n    l_i\n, \n    r_i\n, \n    c_i\n, \n    p_i\n (\n    1 \n    \u2264 l_i \n    \u2264\n    r_i \n    \u2264 n\n, \n    1 \n    \u2264 c_i, p_i \n    \u2264 10^6\n), where \n    l_i\n and\n\n    r_i\n are starting and finishing days of the \n    i\n-th tariff plan,\n\n    c_i\n \u2014 number of cores, \n    p_i\n \u2014 price of a single core for daily rent\non the \n    i\n-th tariff plan. Output Print a single integer number \u2014 the\nminimal amount of money that Buber will pay. Examples Input 5 7 3 1 4 5 3 1 3\n5 2 2 5 10 1 Output 44 Input 7 13 5 2 3 10 7 3 5 10 10 1 2 10 6 4 5 10 9 3 4\n10 8 Output 462 Input 4 100 3 3 3 2 5 1 1 3 2 2 4 4 4 Output 64\n\n",
        "cf_contest_id": 1070,
        "cf_index": "C",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 7 3\r\n1 4 5 3\r\n1 3 5 2\r\n2 5 10 1\r\n",
                "44\r\n"
            ],
            [
                "7 13 5\r\n2 3 10 7\r\n3 5 10 10\r\n1 2 10 6\r\n4 5 10 9\r\n3 4 10 8\r\n",
                "462\r\n"
            ],
            [
                "4 100 3\r\n3 3 2 5\r\n1 1 3 2\r\n2 4 4 4\r\n",
                "64\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1 1 2\r\n1 1 2 2\r\n1 1 1 2\r\n",
                "2\r\n"
            ],
            [
                "1 1 5\r\n1 1 1 5\r\n1 1 2 2\r\n1 1 1 1\r\n1 1 2 1\r\n1 1 1 5\r\n",
                "1\r\n"
            ],
            [
                "1 2 1\r\n1 1 3 1\r\n",
                "2\r\n"
            ],
            [
                "1 2 2\r\n1 1 1 1\r\n1 1 1 1\r\n",
                "2\r\n"
            ],
            [
                "1 2 5\r\n1 1 3 1\r\n1 1 2 4\r\n1 1 2 4\r\n1 1 1 3\r\n1 1 3 4\r\n",
                "2\r\n"
            ],
            [
                "1 5 1\r\n1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1 5 2\r\n1 1 2 2\r\n1 1 3 1\r\n",
                "7\r\n"
            ],
            [
                "1 5 5\r\n1 1 6 1\r\n1 1 4 4\r\n1 1 2 1\r\n1 1 5 2\r\n1 1 5 1\r\n",
                "5\r\n"
            ],
            [
                "2 1 1\r\n1 2 1 1\r\n",
                "2\r\n"
            ],
            [
                "2 1 2\r\n2 2 1 2\r\n2 2 1 2\r\n",
                "2\r\n"
            ],
            [
                "2 1 5\r\n1 1 1 4\r\n2 2 1 1\r\n1 2 1 1\r\n1 2 1 3\r\n2 2 1 2\r\n",
                "2\r\n"
            ],
            [
                "2 2 1\r\n2 2 1 1\r\n",
                "1\r\n"
            ],
            [
                "2 2 2\r\n2 2 2 2\r\n1 2 1 2\r\n",
                "6\r\n"
            ],
            [
                "2 2 5\r\n1 1 1 5\r\n1 2 1 2\r\n1 2 1 4\r\n2 2 2 5\r\n1 2 1 1\r\n",
                "6\r\n"
            ],
            [
                "2 5 1\r\n1 2 3 1\r\n",
                "6\r\n"
            ],
            [
                "2 5 2\r\n1 2 4 1\r\n1 2 4 2\r\n",
                "12\r\n"
            ],
            [
                "2 5 5\r\n1 2 1 5\r\n1 1 1 2\r\n1 1 2 2\r\n1 2 1 4\r\n1 2 5 2\r\n",
                "20\r\n"
            ],
            [
                "5 1 1\r\n1 5 1 1\r\n",
                "5\r\n"
            ],
            [
                "5 1 2\r\n1 4 1 1\r\n2 5 1 1\r\n",
                "5\r\n"
            ],
            [
                "5 1 5\r\n1 5 1 3\r\n3 5 1 2\r\n2 2 2 5\r\n1 4 2 1\r\n4 5 1 2\r\n",
                "6\r\n"
            ],
            [
                "5 2 1\r\n3 4 3 1\r\n",
                "4\r\n"
            ],
            [
                "5 2 2\r\n5 5 1 2\r\n2 4 1 2\r\n",
                "8\r\n"
            ],
            [
                "5 2 5\r\n3 5 2 1\r\n2 3 1 4\r\n1 4 3 1\r\n2 3 1 2\r\n2 3 1 5\r\n",
                "10\r\n"
            ],
            [
                "5 5 1\r\n4 5 4 1\r\n",
                "8\r\n"
            ],
            [
                "5 5 2\r\n4 5 3 1\r\n1 3 2 2\r\n",
                "18\r\n"
            ],
            [
                "5 5 5\r\n1 2 3 1\r\n3 3 2 4\r\n2 5 6 5\r\n1 3 4 1\r\n2 4 4 1\r\n",
                "49\r\n"
            ]
        ]
    }
]