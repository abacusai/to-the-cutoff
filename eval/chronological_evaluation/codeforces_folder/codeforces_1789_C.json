[
    {
        "name": "Serval and Toxel's Arrays",
        "description": "Toxel likes arrays. Before traveling to the Paldea region, Serval gave him an\narray \n    a\n as a gift. This array has \n    n\n pairwise distinct elements. In\norder to get more arrays, Toxel performed \n    m\n operations with the initial\narray. In the \n    i\n-th operation, he modified the \n    p_i\n-th element of\nthe \n    (i-1)\n-th array to \n    v_i\n, resulting in the \n    i\n-th array\n(the initial array \n    a\n is numbered as \n    0\n). During modifications,\nToxel guaranteed that the elements of each array are still pairwise distinct\nafter each operation. Finally, Toxel got \n    m+1\n arrays and denoted them as\n\n    A_0=a, A_1,\n    \u2026,A_m\n. For each pair \n    (i,j)\n (\n    0\n    \u2264\n    i<j\n    \u2264 m\n), Toxel defines its value as the number of distinct elements of\nthe concatenation of \n    A_i\n and \n    A_j\n. Now Toxel wonders, what is\nthe sum of the values of all pairs? Please help him to calculate the answer.\nInput Each test contains multiple test cases. The first line contains the\nnumber of test cases \n    t\n (\n    1\n    \u2264 t\n    \u226410^4\n). The description of\nthe test cases follows. The first line of each test case contains two integers\n\n    n\n and \n    m\n (\n    1\n    \u2264 n,m\n    \u22642\n    \u00b710^5\n) \u2014 the length of the\narray and the number of operations. The second line of each test case contains\n\n    n\n integers \n    a_1,a_2,\n    \u2026,a_n\n (\n    1\n    \u2264 a_i\n    \u2264\n    n+m\n). It is guaranteed that all \n    a_i\n are pairwise distinct. Each of\nthe next \n    m\n lines of each test case contains two integers \n    p_i\n and\n\n    v_i\n (\n    1\n    \u2264 p_i\n    \u2264 n\n, \n    1\n    \u2264 v_i\n    \u2264 n+m\n) \u2014 the\nposition of the modified element and its new value. It is guaranteed that the\nelements of each array are still pairwise distinct after each modification. It\nis guaranteed that the sum of \n    n\n and the sum of \n    m\n over all test\ncases do not exceed \n    2\n    \u00b710^5\n. Output For each test case, print a\nsingle integer \u2014 the sum of the values of all pairs of arrays. Example Input 3\n3 2 1 2 3 1 4 2 5 1 1 1 1 1 10 10 4 6 9 12 16 20 2 10 19 7 1 3 5 4 2 17 2 18 6\n11 7 1 8 17 5 5 5 5 2 2 Output 13 1 705 Note In the first test case, the\narrays change as follows:\n\n    [1,2,3]\n    \u2192[\n    4,2,3]\n    \u2192[4,\n    5,3]\n. The\nconcatenation of the \n    0\n-th array and the \n    1\n-st array is\n\n    cancel[1,2,3,4,\n    2,\n    3]\n. There are \n    4\n\ndistinct elements. The concatenation of the \n    0\n-th array and the\n\n    2\n-nd array is \n    cancel[1,2,3,4,5,\n    3]\n. There\nare \n    5\n distinct elements. The concatenation of the \n    1\n-st array and\nthe \n    2\n-nd array is\n\n    cancel[4,2,3,\n    4,5,\n    3]\n. There are \n    4\n\ndistinct elements. Strikethrough elements are duplicates in the array.\nTherefore, the answer is \n    4+5+4=13\n. In the second test case, note that\nthe array may remain unchanged after operations.\n\n",
        "cf_contest_id": 1789,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 2\r\n1 2 3\r\n1 4\r\n2 5\r\n1 1\r\n1\r\n1 1\r\n10 10\r\n4 6 9 12 16 20 2 10 19 7\r\n1 3\r\n5 4\r\n2 17\r\n2 18\r\n6 11\r\n7 1\r\n8 17\r\n5 5\r\n5 5\r\n2 2\r\n",
                "13\r\n1\r\n705\r\n"
            ]
        ],
        "private_cases": []
    }
]