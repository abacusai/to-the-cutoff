[
    {
        "name": "Chores",
        "description": "Petya and Vasya are brothers. Today is a special day for them as their parents\nleft them home alone and commissioned them to do n chores. Each chore is\ncharacterized by a single parameter \u2014 its complexity. The complexity of the\ni-th chore equals hi. As Petya is older, he wants to take the chores with\ncomplexity larger than some value x (hi > x) to leave to Vasya the chores with\ncomplexity less than or equal to x (hi \u2264 x). The brothers have already decided\nthat Petya will do exactly a chores and Vasya will do exactly b chores (a + b\n= n). In how many ways can they choose an integer x so that Petya got exactly\na chores and Vasya got exactly b chores? Input The first input line contains\nthree integers n, a and b (2 \u2264 n \u2264 2000; a, b \u2265 1; a + b = n) \u2014 the total\nnumber of chores, the number of Petya's chores and the number of Vasya's\nchores. The next line contains a sequence of integers h1, h2, ..., hn (1 \u2264 hi\n\u2264 10^9), hi is the complexity of the i-th chore. The numbers in the given\nsequence are not necessarily different. All numbers on the lines are separated\nby single spaces. Output Print the required number of ways to choose an\ninteger value of x. If there are no such ways, print 0. Examples Input 5 2 3 6\n2 3 100 1 Output 3 Input 7 3 4 1 1 9 1 1 1 1 Output 0 Note In the first sample\nthe possible values of x are 3, 4 or 5. In the second sample it is impossible\nto find such x, that Petya got 3 chores and Vasya got 4.\n\n",
        "cf_contest_id": 169,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 2 3\r\n6 2 3 100 1\r\n",
                "3\n"
            ],
            [
                "7 3 4\r\n1 1 9 1 1 1 1\r\n",
                "0\n"
            ]
        ],
        "private_cases": [
            [
                "2 1 1\r\n10 2\r\n",
                "8\n"
            ],
            [
                "2 1 1\r\n7 7\r\n",
                "0\n"
            ],
            [
                "2 1 1\r\n1 1000000000\r\n",
                "999999999\n"
            ],
            [
                "3 1 2\r\n6 5 5\r\n",
                "1\n"
            ],
            [
                "3 2 1\r\n10 10 8\r\n",
                "2\n"
            ],
            [
                "8 3 5\r\n42 55 61 72 83 10 22 33\r\n",
                "6\n"
            ],
            [
                "10 5 5\r\n1 2 3 4 5 999999999 999999998 999999997 999999996 999999995\r\n",
                "999999990\n"
            ],
            [
                "4 1 3\r\n10 8 7 3\r\n",
                "2\n"
            ],
            [
                "4 2 2\r\n402 10 10 402\r\n",
                "392\n"
            ],
            [
                "4 1 3\r\n10 402 402 10\r\n",
                "0\n"
            ],
            [
                "4 3 1\r\n100 100 200 200\r\n",
                "0\n"
            ],
            [
                "102 101 1\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "0\n"
            ]
        ]
    }
]