[
    {
        "name": "Physical Education Lessons",
        "description": "This year Alex has finished school, and now he is a first-year student of\nBerland State University. For him it was a total surprise that even though he\nstudies programming, he still has to attend physical education lessons. The\nend of the term is very soon, but, unfortunately, Alex still hasn't attended a\nsingle lesson! Since Alex doesn't want to get expelled, he wants to know the\nnumber of working days left until the end of the term, so he can attend\nphysical education lessons during these days. But in BSU calculating the\nnumber of working days is a complicated matter: There are n days left before\nthe end of the term (numbered from 1 to n), and initially all of them are\nworking days. Then the university staff sequentially publishes q orders, one\nafter another. Each order is characterised by three numbers l, r and k: If k =\n1, then all days from l to r (inclusive) become non-working days. If some of\nthese days are made working days by some previous order, then these days still\nbecome non-working days; If k = 2, then all days from l to r (inclusive)\nbecome working days. If some of these days are made non-working days by some\nprevious order, then these days still become working days. Help Alex to\ndetermine the number of working days left after each order! Input The first\nline contains one integer n, and the second line \u2014 one integer q (1 \u2264 n \u2264\n10^9, 1 \u2264 q \u2264 3\u00b710^5) \u2014 the number of days left before the end of the term,\nand the number of orders, respectively. Then q lines follow, i-th line\ncontaining three integers li, ri and ki representing i-th order (1 \u2264 li \u2264 ri \u2264\nn, 1 \u2264 ki \u2264 2). Output Print q integers. i-th of them must be equal to the\nnumber of working days left until the end of the term after the first i orders\nare published. Example Input 4 6 1 2 1 3 4 1 2 3 2 1 3 2 2 4 1 1 4 2 Output 2\n0 2 3 1 4\n\n",
        "cf_contest_id": 915,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n6\r\n1 2 1\r\n3 4 1\r\n2 3 2\r\n1 3 2\r\n2 4 1\r\n1 4 2\r\n",
                "2\r\n0\r\n2\r\n3\r\n1\r\n4\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n8\r\n2 2 1\r\n3 3 2\r\n1 1 1\r\n1 3 2\r\n2 3 2\r\n3 3 1\r\n1 2 1\r\n2 2 2\r\n",
                "2\r\n2\r\n1\r\n3\r\n3\r\n2\r\n0\r\n1\r\n"
            ],
            [
                "7\r\n10\r\n5 7 1\r\n5 6 2\r\n7 7 2\r\n6 7 2\r\n5 5 1\r\n3 6 2\r\n1 3 2\r\n5 6 1\r\n1 3 1\r\n6 7 1\r\n",
                "4\r\n6\r\n7\r\n7\r\n6\r\n7\r\n7\r\n5\r\n2\r\n1\r\n"
            ]
        ]
    }
]