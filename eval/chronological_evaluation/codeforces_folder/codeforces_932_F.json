[
    {
        "name": "Escape Through Leaf",
        "description": "You are given a tree with n nodes (numbered from 1 to n) rooted at node 1.\nAlso, each node has two values associated with it. The values for i-th node\nare ai and bi. You can jump from a node to any node in its subtree. The cost\nof one jump from node x to node y is the product of ax and by. The total cost\nof a path formed by one or more jumps is sum of costs of individual jumps. For\nevery node, calculate the minimum total cost to reach any leaf from that node.\nPay attention, that root can never be leaf, even if it has degree 1. Note that\nyou cannot jump from a node to itself. Input The first line of input contains\nan integer n (2 \u2264 n \u2264 10^5) \u2014 the number of nodes in the tree. The second line\ncontains n space-separated integers a1, a2, ..., an( - 10^5 \u2264 ai \u2264 10^5). The\nthird line contains n space-separated integers b1, b2, ..., bn( - 10^5 \u2264 bi \u2264\n10^5). Next n - 1 lines contains two space-separated integers ui and vi (1 \u2264\nui, vi \u2264 n) describing edge between nodes ui and vi in the tree. Output Output\nn space-separated integers, i-th of which denotes the minimum cost of a path\nfrom node i to reach any leaf. Examples Input 3 2 10 -1 7 -7 5 2 3 2 1 Output\n10 50 0 Input 4 5 -10 5 7 -8 -80 -3 -10 2 1 2 4 1 3 Output -300 100 0 0 Note\nIn the first example, node 3 is already a leaf, so the cost is 0. For node 2,\njump to node 3 with cost a2 \u00d7 b3 = 50. For node 1, jump directly to node 3\nwith cost a1 \u00d7 b3 = 10. In the second example, node 3 and node 4 are leaves,\nso the cost is 0. For node 2, jump to node 4 with cost a2 \u00d7 b4 = 100. For node\n1, jump to node 2 with cost a1 \u00d7 b2 = - 400 followed by a jump from 2 to 4\nwith cost a2 \u00d7 b4 = 100.\n\n",
        "cf_contest_id": 932,
        "cf_index": "F",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "geometry"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2 10 -1\r\n7 -7 5\r\n2 3\r\n2 1\r\n",
                "10 50 0 "
            ],
            [
                "4\r\n5 -10 5 7\r\n-8 -80 -3 -10\r\n2 1\r\n2 4\r\n1 3\r\n",
                "-300 100 0 0 "
            ]
        ],
        "private_cases": [
            [
                "5\r\n7 -8 -8 -3 -10\r\n6 1 -6 7 5\r\n3 1\r\n2 5\r\n1 4\r\n4 5\r\n",
                "-42 0 0 -25 -10 "
            ],
            [
                "6\r\n4 -8 9 -1 -2 -7\r\n8 -7 -6 1 1 0\r\n6 1\r\n5 1\r\n2 1\r\n4 1\r\n3 6\r\n",
                "-28 0 0 0 0 42 "
            ],
            [
                "2\r\n4 5\r\n-10 6\r\n2 1\r\n",
                "24 0 "
            ]
        ]
    }
]