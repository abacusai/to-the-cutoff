[
    {
        "name": "The Values You Can Make",
        "description": "Pari wants to buy an expensive chocolate from Arya. She has n coins, the value\nof the i-th coin is ci. The price of the chocolate is k, so Pari will take a\nsubset of her coins with sum equal to k and give it to Arya. Looking at her\ncoins, a question came to her mind: after giving the coins to Arya, what\nvalues does Arya can make with them? She is jealous and she doesn't want Arya\nto make a lot of values. So she wants to know all the values x, such that Arya\nwill be able to make x using some subset of coins with the sum k. Formally,\nPari wants to know the values x such that there exists a subset of coins with\nthe sum k such that some subset of this subset has the sum x, i.e. there is\nexists some way to pay for the chocolate, such that Arya will be able to make\nthe sum x using these coins. Input The first line contains two integers n and\nk (1 \u2264 n, k \u2264 500) \u2014 the number of coins and the price of the chocolate,\nrespectively. Next line will contain n integers c1, c2, ..., cn (1 \u2264 ci \u2264 500)\n\u2014 the values of Pari's coins. It's guaranteed that one can make value k using\nthese coins. Output First line of the output must contain a single integer q\u2014\nthe number of suitable values x. Then print q integers in ascending order \u2014\nthe values that Arya can make for some subset of coins of Pari that pays for\nthe chocolate. Examples Input 6 18 5 6 1 10 12 2 Output 16 0 1 2 3 5 6 7 8 10\n11 12 13 15 16 17 18 Input 3 50 25 25 50 Output 3 0 25 50\n\n",
        "cf_contest_id": 687,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 18\r\n5 6 1 10 12 2\r\n",
                "16\r\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 "
            ],
            [
                "3 50\r\n25 25 50\r\n",
                "3\r\n0 25 50 "
            ]
        ],
        "private_cases": [
            [
                "1 79\r\n79\r\n",
                "2\r\n0 79 "
            ],
            [
                "1 114\r\n114\r\n",
                "2\r\n0 114 "
            ],
            [
                "5 1\r\n1 500 205 6 355\r\n",
                "2\r\n0 1 "
            ],
            [
                "8 42\r\n7 24 22 25 31 12 17 26\r\n",
                "4\r\n0 17 25 42 "
            ],
            [
                "8 91\r\n74 25 66 50 62 30 50 50\r\n",
                "4\r\n0 25 66 91 "
            ],
            [
                "8 15\r\n13 3 5 5 6 14 5 5\r\n",
                "4\r\n0 5 10 15 "
            ],
            [
                "8 39\r\n38 17 25 33 7 29 15 22\r\n",
                "8\r\n0 7 15 17 22 24 32 39 "
            ],
            [
                "15 185\r\n69 61 185 127 169 42 140 93 12 115 36 46 19 80 123\r\n",
                "34\r\n0 12 19 31 36 42 46 55 58 61 69 73 78 80 82 88 92 93 97 103 105 107 112 116 124 127 130 139 143 149 154 166 173 185 "
            ],
            [
                "15 109\r\n92 60 14 9 22 99 17 22 82 28 105 98 109 20 32\r\n",
                "28\r\n0 17 20 22 28 32 37 39 42 44 45 48 49 50 59 60 61 64 65 67 70 72 77 81 87 89 92 109 "
            ],
            [
                "10 147\r\n15 76 48 111 39 111 145 16 34 68\r\n",
                "16\r\n0 15 16 31 48 63 64 68 79 83 84 99 116 131 132 147 "
            ],
            [
                "10 67\r\n58 39 56 7 51 47 20 26 24 54\r\n",
                "4\r\n0 20 47 67 "
            ],
            [
                "10 195\r\n157 4 183 125 63 121 113 3 145 103\r\n",
                "16\r\n0 3 4 7 63 66 67 70 125 128 129 132 188 191 192 195 "
            ],
            [
                "14 176\r\n66 109 148 141 65 52 147 65 171 11 157 60 151 19\r\n",
                "4\r\n0 19 157 176 "
            ],
            [
                "14 54\r\n54 39 2 16 17 18 41 22 25 30 54 4 27 2\r\n",
                "23\r\n0 2 4 6 8 16 18 20 22 24 25 27 29 30 32 34 36 38 46 48 50 52 54 "
            ],
            [
                "14 24\r\n18 16 15 24 18 19 19 8 8 2 4 9 18 9\r\n",
                "14\r\n0 2 4 6 8 9 11 13 15 16 18 20 22 24 "
            ],
            [
                "5 182\r\n134 18 48 91 25\r\n",
                "15\r\n0 18 25 43 48 66 73 91 109 116 134 139 157 164 182 "
            ],
            [
                "15 182\r\n63 17 134 113 18 48 112 175 91 25 176 55 78 177 175\r\n",
                "15\r\n0 18 25 43 48 66 73 91 109 116 134 139 157 164 182 "
            ],
            [
                "5 6\r\n2 71 7 27 6\r\n",
                "2\r\n0 6 "
            ],
            [
                "5 34\r\n28 32 91 6 70\r\n",
                "4\r\n0 6 28 34 "
            ],
            [
                "10 58\r\n57 2 18 35 3 35 38 7 38 3\r\n",
                "16\r\n0 2 3 5 18 20 21 23 35 37 38 40 53 55 56 58 "
            ],
            [
                "10 10\r\n7 4 6 2 9 6 8 8 10 10\r\n",
                "6\r\n0 2 4 6 8 10 "
            ],
            [
                "10 38\r\n16 21 7 12 20 37 34 7 6 20\r\n",
                "8\r\n0 6 12 18 20 26 32 38 "
            ],
            [
                "10 58\r\n30 51 7 29 25 2 44 28 49 45\r\n",
                "10\r\n0 2 7 9 28 30 49 51 56 58 "
            ],
            [
                "10 86\r\n64 5 30 53 65 24 32 36 23 23\r\n",
                "8\r\n0 24 30 32 54 56 62 86 "
            ],
            [
                "10 10\r\n5 10 10 10 2 3 4 7 3 5\r\n",
                "9\r\n0 2 3 4 5 6 7 8 10 "
            ],
            [
                "10 34\r\n1 28 14 4 11 24 4 11 7 28\r\n",
                "24\r\n0 1 4 5 7 8 9 11 12 14 15 16 18 19 20 22 23 25 26 27 29 30 33 34 "
            ],
            [
                "10 58\r\n20 25 11 37 4 48 20 54 2 26\r\n",
                "18\r\n0 2 4 11 13 20 22 25 27 31 33 36 38 45 47 54 56 58 "
            ],
            [
                "10 1\r\n1 1 1 1 1 1 1 1 1 1\r\n",
                "2\r\n0 1 "
            ],
            [
                "9 457\r\n1 2 4 8 16 32 64 128 256\r\n",
                "32\r\n0 1 8 9 64 65 72 73 128 129 136 137 192 193 200 201 256 257 264 265 320 321 328 329 384 385 392 393 448 449 456 457 "
            ],
            [
                "9 436\r\n1 2 4 8 16 32 64 128 256\r\n",
                "32\r\n0 4 16 20 32 36 48 52 128 132 144 148 160 164 176 180 256 260 272 276 288 292 304 308 384 388 400 404 416 420 432 436 "
            ],
            [
                "9 474\r\n1 2 4 8 16 32 64 128 256\r\n",
                "64\r\n0 2 8 10 16 18 24 26 64 66 72 74 80 82 88 90 128 130 136 138 144 146 152 154 192 194 200 202 208 210 216 218 256 258 264 266 272 274 280 282 320 322 328 330 336 338 344 346 384 386 392 394 400 402 408 410 448 450 456 458 464 466 472 474 "
            ],
            [
                "9 442\r\n1 2 4 8 16 32 64 128 256\r\n",
                "64\r\n0 2 8 10 16 18 24 26 32 34 40 42 48 50 56 58 128 130 136 138 144 146 152 154 160 162 168 170 176 178 184 186 256 258 264 266 272 274 280 282 288 290 296 298 304 306 312 314 384 386 392 394 400 402 408 410 416 418 424 426 432 434 440 442 "
            ],
            [
                "15 388\r\n33 232 106 369 266 135 22 169 367 37 14 181 232 25 154\r\n",
                "59\r\n0 14 22 25 33 37 39 47 51 58 59 62 70 72 84 135 149 157 160 168 169 172 174 181 182 183 186 191 193 194 195 197 202 205 206 207 214 216 219 220 228 231 239 253 304 316 318 326 329 330 337 341 349 351 355 363 366 374 388 "
            ],
            [
                "10 9\r\n5 2 5 2 5 1 4 1 3 1\r\n",
                "10\r\n0 1 2 3 4 5 6 7 8 9 "
            ]
        ]
    }
]