[
    {
        "name": "Entertaining Geodetics",
        "description": "The maps in the game are divided into square cells called Geo Panels. Some of\nthese panels are painted. We shall assume that the Geo Panels without color\nare painted the transparent color. Besides, the map has so-called Geo Symbols.\nThey look like pyramids of different colors (including Geo Symbols of the\ntransparent color). Each Geo Symbol is located on one Geo Panel, and each Geo\nPanel may contain no more than one Geo Symbol. Geo Symbols can be eliminated.\nTo understand better what happens when a Geo Symbol is eliminated, let us\nintroduce some queue to which we will put the recently eliminated Geo Symbols.\nLet's put at the head of the queue a Geo Symbol that was eliminated just now.\nNext, we will repeat the following operation: Extract the Geo Symbol from the\nqueue. Look at the color of the panel containing the given Geo Symbol. If it\ndiffers from transparent and differs from the color of the Geo Symbol, then\nall Geo Panels of this color are repainted in the color of the given Geo\nSymbol (transparent Geo Symbols repaint the Geo Panels transparent).\nRepainting is executed in an infinite spiral strictly in the following order\nstarting from the panel, which contained the Geo Symbol: In other words, we\nselect all the panels that need to be repainted and find their numbers in the\ninfinite spiral whose center is placed in the position of the given Geo\nSymbol. After that, we repaint them in the order of the number's increasing.\nIf a panel contains another Geo Symbol and this panel is being repainted, then\nthe Geo Symbol is removed from the field and placed at the tail of the queue.\nAfter repainting the Geo Symbol is completely eliminated and the next Geo\nSymbol is taken from the head of the queue (if there is any) and the process\nrepeats. The process ends if the queue is empty. See the sample analysis for\nbetter understanding. You know the colors of all the Geo Panels and the\nlocation of all the Geo Symbols. Determine the number of repaintings, which\nwill occur if you destroy one of the Geo Symbols. Input The first line\ncontains two integers n and m (1 \u2264 n, m \u2264 300) \u2014 the height and the width of\nthe map (in cells). Then follow n line; each of them contains m numbers \u2014 the\nGeo Panels' colors. Then follow n more lines; each of them contains m numbers\n\u2014 the Geo Symbols' description. -1 means that the given position contains no\nGeo Symbol. Otherwise, the number represents the color of the Geo Symbol in\nthe given position. All colors are integers from 0 to 10^9. 0 represents the\ntransparent color. The last line contains two integers x and y (1 \u2264 x \u2264 n, 1 \u2264\ny \u2264 m) \u2014 the row and the column where the Geo Symbol is placed that needs to\nbe eliminated. The rows are numbered from top to bottom, the columns are\nnumbered from left to right. Coordinates are 1-based. It is guaranteed that\nthe position with coordinates (x, y) contains a Geo Symbol. Output Print the\nsingle number \u2014 the total number of repaintings after the Geo Symbol is\neliminated. Please, do not use the \nintegers in C++. It is preferred to use the cout stream (you may also use the\n\n0 0 1 2 0 3 -1 1 -1 3 -1 -1 -1 -1 0 -1 -1 -1 -1 -1 -1 -1 2 3 -1 -1 -1 -1 -1 -1\n2 4 2 Output 35 Note All actions of the sample you can see on the following\npicture: If your browser does not support APNG and you see just static image,\nyou can see GIF version of this image by the following\nlink:http://assets.codeforces.com/images/geo_slow.gif\n\n",
        "cf_contest_id": 105,
        "cf_index": "D",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dsu",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 5\r\n9 0 1 1 0\r\n0 0 3 2 0\r\n1 1 1 3 0\r\n1 1 1 3 0\r\n0 1 2 0 3\r\n-1 1 -1 3 -1\r\n-1 -1 -1 0 -1\r\n-1 -1 -1 -1 -1\r\n-1 2 3 -1 -1\r\n-1 -1 -1 -1 2\r\n4 2\r\n",
                "35\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 5\r\n3 0 0 1 0\r\n3 0 2 2 1\r\n0 0 2 3 1\r\n-1 -1 -1 3 -1\r\n0 -1 -1 2 -1\r\n-1 -1 1 -1 -1\r\n3 3\r\n",
                "15\r\n"
            ],
            [
                "3 5\r\n3 0 0 1 4\r\n4 4 2 2 1\r\n5 4 2 3 1\r\n-1 -1 -1 3 5\r\n7 -1 -1 2 -1\r\n-1 -1 1 -1 -1\r\n3 3\r\n",
                "15\r\n"
            ],
            [
                "3 3\r\n0 2 0\r\n0 2 2\r\n2 2 0\r\n1 1 1\r\n1 1 3\r\n1 1 1\r\n3 1\r\n",
                "10\r\n"
            ],
            [
                "1 1\r\n1\r\n2\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n0\r\n2\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n1\r\n0\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n0\r\n0\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "5 5\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 2 3 4 5\r\n6 7 8 9 10\r\n11 12 13 14 15\r\n16 17 18 19 20\r\n21 22 23 24 25\r\n3 4\r\n",
                "625\r\n"
            ],
            [
                "4 4\r\n1 1 2 3\r\n4 5 6 7\r\n8 9 10 11\r\n12 13 14 15\r\n2 3 4 5\r\n6 7 8 9\r\n10 11 12 13\r\n14 15 16 17\r\n1 1\r\n",
                "151\r\n"
            ]
        ]
    }
]