[
    {
        "name": "Wallpaper",
        "description": "Having bought his own apartment, Boris decided to paper the walls in every\nroom. Boris's flat has n rooms, each of which has the form of a rectangular\nparallelepiped. For every room we known its length, width and height of the\nwalls in meters (different rooms can have different dimensions, including\nheight). Boris chose m types of wallpaper to paper the walls of the rooms with\n(but it is not necessary to use all the types). Each type of wallpaper is sold\nin rolls of a fixed length and width (the length, naturally, shows how long\nthe unfolded roll will be). In addition, for each type we know the price of\none roll of this type. The wallpaper of each type contains strips running\nalong the length of the roll. When gluing the strips must be located strictly\nvertically (so the roll cannot be rotated, even if the length is less than the\nwidth). Besides, a roll can be cut in an arbitrary manner, but the joints of\nglued pieces should also be vertical. In addition, each room should be papered\nby only one type of wallpaper. And pieces of the same roll cannot be used to\npaper different rooms. That is, for each room the rolls are purchased\nseparately. Also, some rolls can be used not completely. After buying an\napartment Boris is short of cash, so he wants to spend the minimum money on\nwallpaper. Help him. Input The first line contains a positive integer n (1 \u2264 n\n\u2264 500) \u2014 the number of rooms in Boris's apartment. Each of the next n lines\ncontains three space-separated positive integers \u2014 the length, width and\nheight of the walls in a given room in meters, respectively. The next line\ncontains a positive integer m (1 \u2264 m \u2264 500) \u2014 the number of available\nwallpaper types. Each of the following m lines contains three space-separated\npositive integers \u2014 the length and width in meters of a given wallpaper and\nthe price of one roll, respectively. All numbers in the input data do not\nexceed 500. It is guaranteed that each room can be papered using these types\nof wallpaper. Output Print a single number \u2014 the minimum total cost of the\nrolls. Examples Input 1 5 5 3 3 10 1 100 15 2 320 3 19 500 Output 640 Note\nNote to the sample: The total length of the walls (the perimeter) of the room\nis 20 m. One roll of the first type can be cut into pieces to get three\nvertical 1 meter wide strips, ergo you need 7 rolls of this type, the price\nequals 700. A roll of the second type can be cut into pieces to get five 2\nmeter wide strips, we need 2 rolls, the price is 640. One roll of the third\ntype can immediately paper 19 meters out of 20, but we cannot use other types\nand we have to buy a second roll, the price is 1000.\n\n",
        "cf_contest_id": 139,
        "cf_index": "B",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n5 5 3\r\n3\r\n10 1 100\r\n15 2 320\r\n3 19 500\r\n",
                "640\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n9 10 7\r\n1\r\n7 1 3\r\n",
                "114\r\n"
            ],
            [
                "1\r\n6 9 5\r\n3\r\n8 5 10\r\n8 5 2\r\n6 3 7\r\n",
                "12\r\n"
            ],
            [
                "1\r\n3 3 10\r\n3\r\n5 5 1\r\n9 9 2\r\n10 1 500\r\n",
                "6000\r\n"
            ],
            [
                "3\r\n29 30 29\r\n30 15 28\r\n27 30 23\r\n3\r\n30 27 21\r\n11 24 30\r\n25 20 12\r\n",
                "261\r\n"
            ],
            [
                "5\r\n4 4 1\r\n3 1 4\r\n4 1 3\r\n5 1 1\r\n1 1 1\r\n5\r\n5 3 3\r\n4 3 4\r\n5 2 3\r\n2 1 5\r\n3 1 3\r\n",
                "33\r\n"
            ],
            [
                "10\r\n57 66 71\r\n14 30 28\r\n100 56 45\r\n22 24 76\r\n64 7 65\r\n26 80 9\r\n15 62 23\r\n63 46 34\r\n86 20 58\r\n10 33 2\r\n1\r\n86 9 99\r\n",
                "13959\r\n"
            ],
            [
                "5\r\n98 97 79\r\n88 82 82\r\n93 90 86\r\n70 76 75\r\n72 88 89\r\n10\r\n13 10 97\r\n100 8 77\r\n39 5 87\r\n50 10 71\r\n17 9 74\r\n65 8 100\r\n74 8 94\r\n60 6 70\r\n67 6 90\r\n97 7 71\r\n",
                "16555\r\n"
            ],
            [
                "10\r\n10 10 10\r\n10 10 10\r\n10 10 10\r\n10 10 10\r\n10 10 10\r\n10 10 10\r\n10 10 10\r\n10 10 10\r\n10 10 10\r\n10 10 10\r\n10\r\n4 10 10\r\n10 10 10\r\n7 10 10\r\n6 10 10\r\n7 10 10\r\n4 10 10\r\n4 10 10\r\n2 10 10\r\n7 10 10\r\n7 10 10\r\n",
                "400\r\n"
            ],
            [
                "1\r\n95 83 81\r\n10\r\n41 85 94\r\n95 97 95\r\n84 89 99\r\n23 85 86\r\n93 90 98\r\n55 84 82\r\n80 88 94\r\n32 83 98\r\n5 85 85\r\n48 98 100\r\n",
                "380\r\n"
            ],
            [
                "20\r\n110 466 472\r\n112 153 152\r\n424 492 490\r\n348 366 113\r\n208 337 415\r\n491 448 139\r\n287 457 403\r\n444 382 160\r\n325 486 284\r\n447 454 136\r\n216 412 418\r\n217 208 228\r\n109 436 291\r\n293 382 421\r\n483 339 174\r\n213 327 183\r\n278 268 147\r\n181 424 457\r\n388 289 430\r\n174 269 305\r\n20\r\n221 4 334\r\n257 4 331\r\n444 3 127\r\n492 3 391\r\n154 4 389\r\n362 4 346\r\n264 3 448\r\n347 5 296\r\n416 5 496\r\n407 3 400\r\n133 3 140\r\n189 3 111\r\n272 3 262\r\n115 5 274\r\n128 3 230\r\n488 5 214\r\n458 3 428\r\n54 4 440\r\n191 5 160\r\n228 5 139\r\n",
                "959915\r\n"
            ],
            [
                "1\r\n500 500 500\r\n1\r\n500 500 500\r\n",
                "2000\r\n"
            ],
            [
                "1\r\n1 1 1\r\n1\r\n1 1 1\r\n",
                "4\r\n"
            ],
            [
                "1\r\n500 500 1\r\n1\r\n1 1 500\r\n",
                "1000000\r\n"
            ]
        ]
    }
]