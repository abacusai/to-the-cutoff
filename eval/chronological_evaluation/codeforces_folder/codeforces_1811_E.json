[
    {
        "name": "Living Sequence",
        "description": "In Japan, the number \n    4\n reads like death, so Bob decided to build a live\nsequence. Living sequence \n    a\n contains all natural numbers that do not\ncontain the digit \n    4\n. \n    a = [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15,\n    16, \n    \u2026]\n. For example, the number \n    1235\n is part of the sequence\n\n    a\n, but the numbers \n    4321\n, \n    443\n are not part of the sequence\n\n    a\n. Bob realized that he does not know how to quickly search for a\nparticular number by the position \n    k\n in the sequence, so he asks for your\nhelp. For example, if Bob wants to find the number at position \n    k = 4\n\n(indexing from \n    1\n), you need to answer \n    a_k = 5\n. Input The first\nline of input data contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014 the number of test cases. In the only line of each test case, there\nis a single integer \n    k\n (\n    1 \n    \u2264 k \n    \u2264 10^12\n) \u2014 the position Bob\nis interested in. Output For each test case, print on a separate line the\nnumber \n    a_k\n in indexing with \n    1\n. Example Input 7 3 5 22 10 100 12345\n827264634912 Output 3 6 25 11 121 18937 2932285320890\n\n",
        "cf_contest_id": 1811,
        "cf_index": "E",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "dp",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n3\r\n5\r\n22\r\n10\r\n100\r\n12345\r\n827264634912\r\n",
                "3\r\n6\r\n25\r\n11\r\n121\r\n18937\r\n2932285320890\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n15417\r\n",
                "23130\r\n"
            ],
            [
                "1\r\n125524238435\r\n",
                "399999999999\r\n"
            ],
            [
                "1\r\n13947137603\r\n",
                "39999999999\r\n"
            ]
        ]
    }
]