[
    {
        "name": "Turtles",
        "description": "You've got a table of size n \u00d7 m. We'll consider the table rows numbered from\ntop to bottom 1 through n, and the columns numbered from left to right 1\nthrough m. Then we'll denote the cell in row x and column y as (x, y).\nInitially cell (1, 1) contains two similar turtles. Both turtles want to get\nto cell (n, m). Some cells of the table have obstacles but it is guaranteed\nthat there aren't any obstacles in the upper left and lower right corner. A\nturtle (one or the other) can go from cell (x, y) to one of two cells (x + 1,\ny) and (x, y + 1), as long as the required cell doesn't contain an obstacle.\nThe turtles have had an argument so they don't want to have any chance of\nmeeting each other along the way. Help them find the number of ways in which\nthey can go from cell (1, 1) to cell (n, m). More formally, find the number of\npairs of non-intersecting ways from cell (1, 1) to cell (n, m) modulo\n1000000007 (10^9 + 7). Two ways are called non-intersecting if they have\nexactly two common points \u2014 the starting point and the final point. Input The\nfirst line contains two integers n, m (2 \u2264 n, m \u2264 3000). Each of the following\nn lines contains m characters describing the table. The empty cells are marked\nby characters \".\", the cells with obstacles are marked by \"#\". It is\nguaranteed that the upper left and the lower right cells are empty. Output In\na single line print a single integer \u2014 the number of pairs of non-intersecting\npaths from cell (1, 1) to cell (n, m) modulo 1000000007 (10^9 + 7). Examples\nInput 4 5 ..... .###. .###. ..... Output 1 Input 2 3 ... ... Output 1\n\n",
        "cf_contest_id": 348,
        "cf_index": "D",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "matrices"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 5\r\n.....\r\n.###.\r\n.###.\r\n.....\r\n",
                "1"
            ],
            [
                "2 3\r\n...\r\n...\r\n",
                "1"
            ]
        ],
        "private_cases": [
            [
                "10 8\r\n.#######\r\n########\r\n########\r\n########\r\n########\r\n########\r\n########\r\n########\r\n########\r\n#######.\r\n",
                "0"
            ]
        ]
    }
]