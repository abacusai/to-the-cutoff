[
    {
        "name": "Multiset of Strings",
        "description": "You are given three integers \n    n\n, \n    k\n and \n    f\n. Consider all binary\nstrings (i. e. all strings consisting of characters \n    0\n and/or \n    1\n) of\nlength from \n    1\n to \n    n\n. For every such string \n    s\n, you need to\nchoose an integer \n    c_s\n from \n    0\n to \n    k\n. A multiset of binary\nstrings of length exactly \n    n\n is considered beautiful if for every binary\nstring \n    s\n with length from \n    1\n to \n    n\n, the number of strings in\nthe multiset such that \n    s\n is their prefix is not exceeding \n    c_s\n. For\nexample, let \n    n = 2\n, \n    c_0 = 3\n, \n    c_00 = 1\n, \n    c_01 = 2\n,\n\n    c_1 = 1\n, \n    c_10 = 2\n, and \n    c_11 = 3\n. The multiset of\nstrings \n    11, 01, 00, 01\n is beautiful, since: for the string\n\n    0\n, there are \n    3\n strings in the multiset such that \n    0\n is their\nprefix, and \n    3 \n    \u2264 c_0\n; for the string \n    00\n, there is one string in\nthe multiset such that \n    00\n is its prefix, and \n    1 \n    \u2264 c_00\n; for\nthe string \n    01\n, there are \n    2\n strings in the multiset such that\n\n    01\n is their prefix, and \n    2 \n    \u2264 c_01\n; for the string \n    1\n,\nthere is one string in the multiset such that \n    1\n is its prefix, and \n    1\n    \n    \u2264 c_1\n; for the string \n    10\n, there are \n    0\n strings in the\nmultiset such that \n    10\n is their prefix, and \n    0 \n    \u2264 c_10\n; for the\nstring \n    11\n, there is one string in the multiset such that \n    11\n is its\nprefix, and \n    1 \n    \u2264 c_11\n. Now, for the problem itself. You have to\ncalculate the number of ways to choose the integer \n    c_s\n for every binary\nstring \n    s\n of length from \n    1\n to \n    n\n in such a way that the\nmaximum possible size of a beautiful multiset is exactly \n    f\n. Input The\nonly line of input contains three integers \n    n\n, \n    k\n and \n    f\n (\n    1\n    \n    \u2264 n \n    \u2264 15\n; \n    1 \n    \u2264 k, f \n    \u2264 2 \n    \u00b7 10^5\n). Output Print\none integer \u2014 the number of ways to choose the integer \n    c_s\n for every\nbinary string \n    s\n of length from \n    1\n to \n    n\n in such a way that the\nmaximum possible size of a beautiful multiset is exactly \n    f\n. Since it can\nbe huge, print it modulo \n    998244353\n. Examples Input 1 42 2 Output 3 Input\n2 37 13 Output 36871576 Input 4 1252 325 Output 861735572 Input 6 153 23699\nOutput 0 Input 15 200000 198756 Output 612404746 Note In the first example,\nthe three ways to choose the integers \n    c_s\n are: \n    c_0 = 0\n, \n    c_1 =\n    2\n, then the maximum beautiful multiset is \n    1, 1\n; \n    c_0 =\n    1\n, \n    c_1 = 1\n, then the maximum beautiful multiset is \n    0,\n    1\n; \n    c_0 = 2\n, \n    c_1 = 0\n, then the maximum beautiful multiset\nis \n    0, 0\n.\n\n",
        "cf_contest_id": 1709,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force",
            "dp",
            "fft",
            "flows",
            "graphs",
            "math",
            "meet-in-the-middle",
            "trees"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "1 42 2\r\n",
                "3\r\n"
            ],
            [
                "2 37 13\r\n",
                "36871576\r\n"
            ],
            [
                "4 1252 325\r\n",
                "861735572\r\n"
            ],
            [
                "6 153 23699\r\n",
                "0\r\n"
            ],
            [
                "15 200000 198756\r\n",
                "612404746\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n",
                "2\r\n"
            ],
            [
                "1 1 100000\r\n",
                "0\r\n"
            ],
            [
                "1 1 200000\r\n",
                "0\r\n"
            ],
            [
                "1 100000 1\r\n",
                "2\r\n"
            ],
            [
                "1 100000 100000\r\n",
                "100001\r\n"
            ],
            [
                "1 100000 200000\r\n",
                "1\r\n"
            ],
            [
                "1 200000 1\r\n",
                "2\r\n"
            ],
            [
                "1 200000 100000\r\n",
                "100001\r\n"
            ],
            [
                "1 200000 200000\r\n",
                "200001\r\n"
            ],
            [
                "7 1 1\r\n",
                "10802803\r\n"
            ],
            [
                "7 1 100000\r\n",
                "0\r\n"
            ],
            [
                "7 1 200000\r\n",
                "0\r\n"
            ],
            [
                "7 100000 1\r\n",
                "477825325\r\n"
            ],
            [
                "7 100000 100000\r\n",
                "569581672\r\n"
            ],
            [
                "7 100000 200000\r\n",
                "136436465\r\n"
            ],
            [
                "7 200000 1\r\n",
                "90602327\r\n"
            ],
            [
                "7 200000 100000\r\n",
                "331190498\r\n"
            ],
            [
                "7 200000 200000\r\n",
                "343099201\r\n"
            ],
            [
                "15 1 1\r\n",
                "240127335\r\n"
            ],
            [
                "15 1 100000\r\n",
                "0\r\n"
            ],
            [
                "15 1 200000\r\n",
                "0\r\n"
            ],
            [
                "15 100000 1\r\n",
                "737847906\r\n"
            ],
            [
                "15 100000 100000\r\n",
                "607648863\r\n"
            ],
            [
                "15 100000 200000\r\n",
                "816613688\r\n"
            ],
            [
                "15 200000 1\r\n",
                "836547474\r\n"
            ],
            [
                "15 200000 100000\r\n",
                "63705590\r\n"
            ],
            [
                "15 200000 200000\r\n",
                "894782321\r\n"
            ],
            [
                "15 199999 200000\r\n",
                "437780341\r\n"
            ]
        ]
    }
]