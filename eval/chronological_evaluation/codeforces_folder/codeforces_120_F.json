[
    {
        "name": "Spiders",
        "description": "One day mum asked Petya to sort his toys and get rid of some of them. Petya\nfound a whole box of toy spiders. They were quite dear to him and the boy\ndidn't want to throw them away. Petya conjured a cunning plan: he will glue\nall the spiders together and attach them to the ceiling. Besides, Petya knows\nthat the lower the spiders will hang, the more mum is going to like it and\nthen she won't throw his favourite toys away. Help Petya carry out the plan. A\nspider consists of k beads tied together by k - 1 threads. Each thread\nconnects two different beads, at that any pair of beads that make up a spider\nis either directly connected by a thread, or is connected via some chain of\nthreads and beads. Petya may glue spiders together directly gluing their\nbeads. The length of each thread equals 1. The sizes of the beads can be\nneglected. That's why we can consider that gluing spiders happens by\nidentifying some of the beads (see the picture). Besides, the construction\nresulting from the gluing process should also represent a spider, that is, it\nshould have the given features. After Petya glues all spiders together, he\nmeasures the length of the resulting toy. The distance between a pair of beads\nis identified as the total length of the threads that connect these two beads.\nThe length of the resulting construction is the largest distance between all\npairs of beads. Petya wants to make the spider whose length is as much as\npossible. The picture two shows two spiders from the second sample. We can\nglue to the bead number 2 of the first spider the bead number 1 of the second\nspider. The threads in the spiders that form the sequence of threads of\nmaximum lengths are highlighted on the picture. Input The first input file\nline contains one integer n (1 \u2264 n \u2264 100) \u2014 the number of spiders. Next n\nlines contain the descriptions of each spider: integer ni (2 \u2264 ni \u2264 100) \u2014 the\nnumber of beads, then ni - 1 pairs of numbers denoting the numbers of the\nbeads connected by threads. The beads that make up each spider are numbered\nfrom 1 to ni. Output Print a single number \u2014 the length of the required\nconstruction. Examples Input 1 3 1 2 2 3 Output 2 Input 2 3 1 2 1 3 4 1 2 2 3\n2 4 Output 4 Input 2 5 1 2 2 3 3 4 3 5 7 3 4 1 2 2 4 4 6 2 7 6 5 Output 7\n\n",
        "cf_contest_id": 120,
        "cf_index": "F",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n3 1 2 2 3\r\n",
                "2\r\n"
            ],
            [
                "2\r\n3 1 2 1 3\r\n4 1 2 2 3 2 4\r\n",
                "4\r\n"
            ],
            [
                "2\r\n5 1 2 2 3 3 4 3 5\r\n7 3 4 1 2 2 4 4 6 2 7 6 5\r\n",
                "7\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n3 3 2 3 1\r\n5 3 5 4 1 4 3 3 2\r\n9 7 6 8 3 4 9 2 5 4 1 4 2 7 4 9 8\r\n",
                "10\r\n"
            ],
            [
                "7\r\n2 1 2\r\n4 4 3 4 2 1 4\r\n3 3 2 1 3\r\n5 5 4 5 2 5 3 4 1\r\n6 4 3 6 2 6 5 6 4 6 1\r\n7 2 3 1 6 5 4 1 2 2 5 6 7\r\n10 2 10 2 5 7 6 9 8 3 2 3 7 1 9 3 1 3 4\r\n",
                "21\r\n"
            ],
            [
                "10\r\n3 2 1 2 3\r\n3 3 1 1 2\r\n7 5 4 3 1 1 6 5 2 2 3 4 7\r\n2 2 1\r\n4 2 3 2 1 2 4\r\n3 3 1 3 2\r\n5 2 5 2 4 1 2 1 3\r\n6 6 3 6 2 6 5 6 4 5 1\r\n7 4 5 1 6 5 7 1 3 6 2 4 1\r\n10 5 7 9 3 6 10 2 6 8 1 1 4 1 9 5 2 1 5\r\n",
                "32\r\n"
            ],
            [
                "7\r\n4 3 4 3 1 2 3\r\n4 1 3 3 2 2 4\r\n3 3 1 1 2\r\n5 2 5 4 3 2 1 2 4\r\n6 1 4 4 5 1 6 4 3 4 2\r\n7 5 2 3 6 3 4 5 1 3 5 7 3\r\n10 6 2 1 8 8 3 7 1 9 5 7 9 7 4 7 10 7 6\r\n",
                "21\r\n"
            ],
            [
                "7\r\n2 1 2\r\n4 2 4 3 1 3 2\r\n3 2 3 1 2\r\n5 3 4 3 1 3 2 1 5\r\n6 4 1 4 6 4 5 5 3 4 2\r\n8 7 8 8 4 7 2 5 1 5 3 7 5 2 6\r\n10 7 5 7 9 7 4 4 6 4 2 4 3 2 1 6 10 4 8\r\n",
                "20\r\n"
            ],
            [
                "3\r\n4 3 4 4 2 4 1\r\n4 4 1 3 4 3 2\r\n4 2 1 2 3 4 2\r\n",
                "7\r\n"
            ],
            [
                "3\r\n10 4 10 2 6 6 1 9 7 4 9 4 5 7 3 4 8 4 2\r\n12 6 3 6 11 3 10 6 8 7 2 5 9 6 5 4 12 11 7 9 1 6 4\r\n13 10 7 4 11 1 13 11 10 3 9 3 4 4 12 8 2 11 5 7 6 7 8 4 1\r\n",
                "19\r\n"
            ],
            [
                "4\r\n5 2 1 4 5 3 2 3 4\r\n6 3 5 6 3 3 4 3 1 3 2\r\n7 1 7 5 2 7 5 7 3 4 6 4 1\r\n8 2 3 1 2 8 6 2 5 7 1 5 4 7 8\r\n",
                "17\r\n"
            ],
            [
                "2\r\n10 2 3 3 10 1 9 7 8 6 2 6 1 3 4 7 5 10 7\r\n10 8 5 7 10 4 6 8 7 9 8 4 9 8 2 5 3 10 1\r\n",
                "13\r\n"
            ],
            [
                "6\r\n3 3 1 1 2\r\n3 3 1 3 2\r\n5 3 4 1 3 2 1 1 5\r\n4 2 4 2 1 1 3\r\n5 4 2 3 4 1 3 1 5\r\n5 5 2 1 4 1 5 4 3\r\n",
                "18\r\n"
            ],
            [
                "4\r\n10 3 4 9 8 4 10 2 7 10 6 10 5 3 9 10 1 2 3\r\n10 5 4 8 3 8 5 5 6 3 1 8 7 5 10 6 9 3 2\r\n10 5 8 5 3 8 1 5 7 3 6 7 9 3 10 5 4 4 2\r\n10 4 2 6 5 4 8 2 9 7 10 2 7 4 6 4 1 8 3\r\n",
                "19\r\n"
            ]
        ]
    }
]