[
    {
        "name": "Set Theory",
        "description": "Masha and Grisha like studying sets of positive integers. One day Grisha has\nwritten a set A containing n different integers ai on a blackboard. Now he\nasks Masha to create a set B containing n different integers bj such that all\nn^2 integers that can be obtained by summing up ai and bj for all possible\npairs of i and j are different. Both Masha and Grisha don't like big numbers,\nso all numbers in A are from 1 to 10^6, and all numbers in B must also be in\nthe same range. Help Masha to create the set B that satisfies Grisha's\nrequirement. Input Input data contains multiple test cases. The first line\ncontains an integer t \u2014 the number of test cases (1 \u2264 t \u2264 100). Each test case\nis described in the following way: the first line of the description contains\none integer n \u2014 the number of elements in A (1 \u2264 n \u2264 100). The second line\ncontains n integers ai \u2014 the elements of A (1 \u2264 ai \u2264 10^6). Output For each\ntest first print the answer: NO, if Masha's task is impossible to solve, there\nis no way to create the required set B. YES, if there is the way to create the\nrequired set. In this case the second line must contain n different positive\nintegers bj \u2014 elements of B (1 \u2264 bj \u2264 10^6). If there are several possible\nsets, output any of them. Example Input 3 3 1 10 100 1 1 2 2 4 Output YES 1 2\n3 YES 1 YES 1 2\n\n",
        "cf_contest_id": 856,
        "cf_index": "A",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n1 10 100\r\n1\r\n1\r\n2\r\n2 4\r\n",
                "YES\r\n1 2 3\r\nYES\r\n1\r\nYES\r\n1 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n100\r\n74 14 24 45 22 9 49 78 79 20 60 1 31 91 32 39 90 5 42 57 30 58 64 68 12 11 86 8 3 38 76 17 98 26 85 92 56 65 89 66 36 87 23 67 13 48 15 47 81 73 63 50 34 93 82 44 77 69 96 100 41 19 35 16 88 27 99 40 62 95 70 18 46 21 53 59 37 6 61 71 2 4 52 28 97 25 29 51 7 33 80 83 72 10 75 94 43 84 54 55\r\n",
                "YES\r\n1 101 201 301 401 501 601 701 801 901 1001 1101 1201 1301 1401 1501 1601 1701 1801 1901 2001 2101 2201 2301 2401 2501 2601 2701 2801 2901 3001 3101 3201 3301 3401 3501 3601 3701 3801 3901 4001 4101 4201 4301 4401 4501 4601 4701 4801 4901 5001 5101 5201 5301 5401 5501 5601 5701 5801 5901 6001 6101 6201 6301 6401 6501 6601 6701 6801 6901 7001 7101 7201 7301 7401 7501 7601 7701 7801 7901 8001 8101 8201 8301 8401 8501 8601 8701 8801 8901 9001 9101 9201 9301 9401 9501 9601 9701 9801 9901\r\n"
            ]
        ]
    }
]