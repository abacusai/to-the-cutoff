[
    {
        "name": "Amr and Chemistry",
        "description": "Amr loves Chemistry, and specially doing experiments. He is preparing for a\nnew interesting experiment. Amr has n different types of chemicals. Each\nchemical i has an initial volume of ai liters. For this experiment, Amr has to\nmix all the chemicals together, but all the chemicals volumes must be equal\nfirst. So his task is to make all the chemicals volumes equal. To do this, Amr\ncan do two different kind of operations. Choose some chemical i and double its\ncurrent volume so the new volume will be 2ai Choose some chemical i and divide\nits volume by two (integer division) so the new volume will be Suppose that\neach chemical is contained in a vessel of infinite volume. Now Amr wonders\nwhat is the minimum number of operations required to make all the chemicals\nvolumes equal? Input The first line contains one number n (1 \u2264 n \u2264 10^5), the\nnumber of chemicals. The second line contains n space separated integers ai (1\n\u2264 ai \u2264 10^5), representing the initial volume of the i-th chemical in liters.\nOutput Output one integer the minimum number of operations required to make\nall the chemicals volumes equal. Examples Input 3 4 8 2 Output 2 Input 3 3 5 6\nOutput 5 Note In the first sample test, the optimal solution is to divide the\nsecond chemical volume by two, and multiply the third chemical volume by two\nto make all the volumes equal 4. In the second sample test, the optimal\nsolution is to divide the first chemical volume by two, and divide the second\nand the third chemical volumes by two twice to make all the volumes equal 1.\n\n",
        "cf_contest_id": 558,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "graphs",
            "greedy",
            "math",
            "shortest paths"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4 8 2\r\n",
                "2"
            ],
            [
                "3\r\n3 5 6\r\n",
                "5"
            ]
        ],
        "private_cases": [
            [
                "2\r\n50000 100000\r\n",
                "1"
            ],
            [
                "2\r\n99999 99998\r\n",
                "2"
            ],
            [
                "17\r\n1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536\r\n",
                "72"
            ],
            [
                "19\r\n1 2 3 4 6 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536\r\n",
                "90"
            ],
            [
                "20\r\n1 2 3 4 6 8 16 20 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536\r\n",
                "99"
            ],
            [
                "20\r\n1 2 3 4 6 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 100000\r\n",
                "113"
            ],
            [
                "7\r\n7 4096 8192 16384 32768 65536 100000\r\n",
                "51"
            ],
            [
                "9\r\n7 4096 8192 16384 32768 65536 100000 100000 100000\r\n",
                "108"
            ],
            [
                "10\r\n7 4096 8192 16384 32768 65536 100000 100000 100000 100000\r\n",
                "136"
            ],
            [
                "7\r\n99994 99995 99996 99997 99998 99999 100000\r\n",
                "37"
            ],
            [
                "16\r\n100000 50000 25000 12500 6250 3125 1562 781 390 195 97 48 24 12 6 3\r\n",
                "76"
            ],
            [
                "17\r\n100000 99999 49999 24999 12499 6249 3124 1562 781 390 195 97 48 24 12 6 3\r\n",
                "87"
            ],
            [
                "2\r\n99999 100000\r\n",
                "12"
            ],
            [
                "1\r\n100000\r\n",
                "0"
            ]
        ]
    }
]