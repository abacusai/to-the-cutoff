[
    {
        "name": "Avoid Rainbow Cycles",
        "description": "You are given \n    m\n sets of integers \n    A_1, A_2, \n    \u2026, A_m\n; elements\nof these sets are integers between \n    1\n and \n    n\n, inclusive. There are\ntwo arrays of positive integers \n    a_1, a_2, \n    \u2026, a_m\n and \n    b_1, b_2,\n    \n    \u2026, b_n\n. In one operation you can delete an element \n    j\n from the\nset \n    A_i\n and pay \n    a_i + b_j\n coins for that. You can make several\n(maybe none) operations (some sets can become empty). After that, you will\nmake an edge-colored undirected graph consisting of \n    n\n vertices. For each\nset \n    A_i\n you will add an edge \n    (x, y)\n with color \n    i\n for all\n\n    x, y \n    \u2208 A_i\n and \n    x < y\n. Some pairs of vertices can be connected\nwith more than one edge, but such edges have different colors. You call a\ncycle \n    i_1 \n    \u2192 e_1 \n    \u2192 i_2 \n    \u2192 e_2 \n    \u2192\n    \u2026\n    \u2192 i_k \n    \u2192 e_k\n    \n    \u2192 i_1\n (\n    e_j\n is some edge connecting vertices \n    i_j\n and\n\n    i_j+1\n in this graph) rainbow if all edges on it have different colors.\nFind the minimum number of coins you should pay to get a graph without rainbow\ncycles. Input The first line contains two integers \n    m\n and \n    n\n (\n    1\n    \n    \u2264 m, n \n    \u2264 10^5\n), the number of sets and the number of vertices in\nthe graph. The second line contains \n    m\n integers \n    a_1, a_2, \n    \u2026,\n    a_m\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n). The third line contains \n    n\n\nintegers \n    b_1, b_2, \n    \u2026, b_n\n (\n    1 \n    \u2264 b_i \n    \u2264 10^9\n). In\nthe each of the next of \n    m\n lines there are descriptions of sets. In the\n\n    i\n-th line the first integer \n    s_i\n (\n    1 \n    \u2264 s_i \n    \u2264 n\n) is\nequal to the size of \n    A_i\n. Then \n    s_i\n integers follow: the elements\nof the set \n    A_i\n. These integers are from \n    1\n to \n    n\n and distinct.\nIt is guaranteed that the sum of \n    s_i\n for all \n    1 \n    \u2264 i \n    \u2264 m\n\ndoes not exceed \n    2 \n    \u00b7 10^5\n. Output Print one integer: the minimum\nnumber of coins you should pay for operations to avoid rainbow cycles in the\nobtained graph. Examples Input 3 2 1 2 3 4 5 2 1 2 2 1 2 2 1 2 Output 11 Input\n7 8 3 6 7 9 10 7 239 8 1 9 7 10 2 6 239 3 2 1 3 2 4 1 3 1 3 7 2 4 3 5 3 4 5 6\n7 2 5 7 1 8 Output 66 Note In the first test, you can make such operations:\nDelete element \n    1\n from set \n    1\n. You should pay \n    a_1 + b_1 = 5\n\ncoins for that. Delete element \n    1\n from set \n    2\n. You should pay \n    a_2\n    + b_1 = 6\n coins for that. You pay \n    11\n coins in total. After these\noperations, the first and the second sets will be equal to \n    2\n\nand the third set will be equal to \n    1, 2\n. So, the graph will\nconsist of one edge \n    (1, 2)\n of color \n    3\n. In the second test, you can\nmake such operations: Delete element \n    1\n from set \n    1\n. You should pay\n\n    a_1 + b_1 = 11\n coins for that. Delete element \n    4\n from set \n    2\n.\nYou should pay \n    a_2 + b_4 = 13\n coins for that. Delete element \n    7\n\nfrom set \n    3\n. You should pay \n    a_3 + b_7 = 13\n coins for that. Delete\nelement \n    4\n from set \n    4\n. You should pay \n    a_4 + b_4 = 16\n coins\nfor that. Delete element \n    7\n from set \n    6\n. You should pay \n    a_6 + b_7\n    = 13\n coins for that. You pay \n    66\n coins in total. After these\noperations, the sets will be: \n    2, 3\n; \n    1\n;\n\n    1, 3\n; \n    3\n; \n    3, 4, 5, 6, 7\n;\n\n    5\n; \n    8\n. We will get the graph: There are no\nrainbow cycles in it.\n\n",
        "cf_contest_id": 1408,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dsu",
            "graphs",
            "greedy",
            "sortings",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n1 2 3\r\n4 5\r\n2 1 2\r\n2 1 2\r\n2 1 2\r\n",
                "11"
            ],
            [
                "7 8\r\n3 6 7 9 10 7 239\r\n8 1 9 7 10 2 6 239\r\n3 2 1 3\r\n2 4 1\r\n3 1 3 7\r\n2 4 3\r\n5 3 4 5 6 7\r\n2 5 7\r\n1 8\r\n",
                "66"
            ]
        ],
        "private_cases": []
    }
]