[
    {
        "name": "Mahmoud and Ehab and the binary string",
        "description": "Mahmoud and Ehab are in the fourth stage now. Dr. Evil has a hidden binary\nstring of length n. He guarantees that there is at least one '0' symbol and at\nleast one '1' symbol in it. Now he wants Mahmoud and Ehab to find a position\nof any '0' symbol and any '1' symbol. In order to do this, Mahmoud and Ehab\ncan ask Dr. Evil up to 15 questions. They tell Dr. Evil some binary string of\nlength n, and Dr. Evil tells the Hamming distance between these two strings.\nHamming distance between 2 binary strings of the same length is the number of\npositions in which they have different symbols. You can find the definition of\nHamming distance in the notes section below. Help Mahmoud and Ehab find these\ntwo positions. You will get Wrong Answer verdict if Your queries doesn't\nsatisfy interaction protocol described below. You ask strictly more than 15\nquestions and your program terminated after exceeding queries limit. Please\nnote, that you can do up to 15 ask queries and one answer query. Your final\nanswer is not correct. You will get Idleness Limit Exceeded if you don't print\nanything or if you forget to flush the output, including for the final answer\n(more info about flushing output below).If you exceed the maximum number of\nqueries, You should terminate with 0, In this case you'll get Wrong Answer, If\nyou don't terminate you may receive any verdict because you'll be reading from\na closed stream . Input The first line of input will contain a single integer\nn (2 \u2264 n \u2264 1000) \u2014 the length of the hidden binary string. Output To print the\nfinal answer, print \"! pos0 pos1\" (without quotes), where pos0 and pos1 are\npositions of some '0' and some '1' in the string (the string is 1-indexed).\nDon't forget to flush the output after printing the answer! Interaction To ask\na question use the format \"? s\" (without quotes), where s is a query string.\nDon't forget to flush the output after printing a query! After each query you\ncan read a single integer from standard input \u2014 the Hamming distance between\nthe hidden string and the query string. To flush the output you can use:-\nfflush(stdout) in C++; System.out.flush() in Java; stdout.flush() in Python;\nflush(output) in Pascal; See the documentation for other languages . Hacking.\nTo hack someone just print one binary string with length up to 1000,\ncontaining at least one '0' and at least one '1'. Example Input 3 2 1 3 2 1 0\nOutput ? 000 ? 001 ? 010 ? 011 ? 100 ? 101 ! 2 1 Note Hamming distance\ndefinition: https://en.wikipedia.org/wiki/Hamming_distance In the first test\ncase the hidden binary string is 101, The first query is 000, so the Hamming\ndistance is 2. In the second query the hidden string is still 101 and query is\n001, so the Hamming distance is 1. After some queries you find that symbol at\nposition 2 is '0' and symbol at position 1 is '1', so you print \"! 2 1\".\n\n",
        "cf_contest_id": 862,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "divide and conquer",
            "interactive"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "101\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "0011001100\r\n",
                "5\r\n"
            ],
            [
                "01\r\n",
                "2\r\n"
            ],
            [
                "0010100101101100001101110001110011000010011011001110010011101010011010100101101001111010111001000100\r\n",
                "8\r\n"
            ],
            [
                "0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\r\n",
                "8\r\n"
            ],
            [
                "110010011001010100101010001101110010010111001110111110011011111111000110010001010100011101101101110\r\n",
                "8\r\n"
            ],
            [
                "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010\r\n",
                "8\r\n"
            ],
            [
                "1101111111\r\n",
                "5\r\n"
            ],
            [
                "100010\r\n",
                "4\r\n"
            ],
            [
                "101001011\r\n",
                "4\r\n"
            ],
            [
                "11111111111111110000000000000000\r\n",
                "6\r\n"
            ],
            [
                "11111111111111111000000000000000\r\n",
                "6\r\n"
            ],
            [
                "11111111111111100000000000000000\r\n",
                "6\r\n"
            ],
            [
                "1111111111111111111111111111101010101010101010101010\r\n",
                "7\r\n"
            ],
            [
                "001\r\n",
                "3\r\n"
            ],
            [
                "010\r\n",
                "3\r\n"
            ],
            [
                "011\r\n",
                "3\r\n"
            ],
            [
                "100\r\n",
                "3\r\n"
            ],
            [
                "110\r\n",
                "3\r\n"
            ],
            [
                "0001\r\n",
                "3\r\n"
            ],
            [
                "0010\r\n",
                "3\r\n"
            ],
            [
                "0011\r\n",
                "3\r\n"
            ],
            [
                "0100\r\n",
                "3\r\n"
            ],
            [
                "0101\r\n",
                "3\r\n"
            ],
            [
                "0110\r\n",
                "3\r\n"
            ],
            [
                "0111\r\n",
                "3\r\n"
            ],
            [
                "1000\r\n",
                "3\r\n"
            ],
            [
                "1001\r\n",
                "3\r\n"
            ],
            [
                "1010\r\n",
                "3\r\n"
            ],
            [
                "1011\r\n",
                "3\r\n"
            ],
            [
                "1100\r\n",
                "3\r\n"
            ],
            [
                "1101\r\n",
                "3\r\n"
            ],
            [
                "1110\r\n",
                "3\r\n"
            ],
            [
                "00001\r\n",
                "4\r\n"
            ],
            [
                "00010\r\n",
                "4\r\n"
            ],
            [
                "00011\r\n",
                "4\r\n"
            ],
            [
                "00100\r\n",
                "4\r\n"
            ],
            [
                "00101\r\n",
                "4\r\n"
            ],
            [
                "00110\r\n",
                "4\r\n"
            ],
            [
                "00111\r\n",
                "4\r\n"
            ],
            [
                "01000\r\n",
                "3\r\n"
            ],
            [
                "01001\r\n",
                "3\r\n"
            ],
            [
                "01010\r\n",
                "3\r\n"
            ],
            [
                "01011\r\n",
                "3\r\n"
            ],
            [
                "01100\r\n",
                "3\r\n"
            ],
            [
                "01101\r\n",
                "3\r\n"
            ],
            [
                "01110\r\n",
                "3\r\n"
            ],
            [
                "01111\r\n",
                "3\r\n"
            ],
            [
                "10000\r\n",
                "3\r\n"
            ],
            [
                "10001\r\n",
                "3\r\n"
            ],
            [
                "10010\r\n",
                "3\r\n"
            ],
            [
                "10011\r\n",
                "3\r\n"
            ],
            [
                "10100\r\n",
                "3\r\n"
            ],
            [
                "10101\r\n",
                "3\r\n"
            ],
            [
                "10110\r\n",
                "3\r\n"
            ],
            [
                "10111\r\n",
                "3\r\n"
            ],
            [
                "11000\r\n",
                "4\r\n"
            ],
            [
                "11001\r\n",
                "4\r\n"
            ],
            [
                "11010\r\n",
                "4\r\n"
            ],
            [
                "11011\r\n",
                "4\r\n"
            ],
            [
                "11100\r\n",
                "4\r\n"
            ],
            [
                "11101\r\n",
                "4\r\n"
            ],
            [
                "11110\r\n",
                "4\r\n"
            ],
            [
                "01111111\r\n",
                "4\r\n"
            ],
            [
                "0110110111101010100\r\n",
                "5\r\n"
            ],
            [
                "10101101000011000001100010111100101101010010010100001001100110100101000110011\r\n",
                "7\r\n"
            ],
            [
                "100011010001110101001101101010010100101001110000110110010011000100111101101010010010001001001100010\r\n",
                "8\r\n"
            ],
            [
                "101100000010000100100100000010000101100110101001010111000101100010010010110100100110100000011011100011101010011111110000010\r\n",
                "8\r\n"
            ],
            [
                "010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101\r\n",
                "10\r\n"
            ],
            [
                "00000010\r\n",
                "4\r\n"
            ],
            [
                "0000000000000000100\r\n",
                "6\r\n"
            ],
            [
                "00000000000000000000000000000000000000000000000000000000000000000000000000010\r\n",
                "8\r\n"
            ],
            [
                "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000\r\n",
                "8\r\n"
            ],
            [
                "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000\r\n",
                "8\r\n"
            ],
            [
                "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\r\n",
                "10\r\n"
            ],
            [
                "10\r\n",
                "2\r\n"
            ]
        ]
    }
]