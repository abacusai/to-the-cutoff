[
    {
        "name": "Multi-Subject Competition",
        "description": "A multi-subject competition is coming! The competition has \n    m\n different\nsubjects participants can choose from. That's why Alex (the coach) should form\na competition delegation among his students. He has \n    n\n candidates. For\nthe \n    i\n-th person he knows subject \n    s_i\n the candidate specializes in\nand \n    r_i\n \u2014 a skill level in his specialization (this level can be\nnegative!). The rules of the competition require each delegation to choose\nsome subset of subjects they will participate in. The only restriction is that\nthe number of students from the team participating in each of the chosen\nsubjects should be the same. Alex decided that each candidate would\nparticipate only in the subject he specializes in. Now Alex wonders whom he\nhas to choose to maximize the total sum of skill levels of all delegates, or\njust skip the competition this year if every valid non-empty delegation has\nnegative sum. (Of course, Alex doesn't have any spare money so each delegate\nhe chooses must participate in the competition). Input The first line contains\ntwo integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n, \n    1 \n    \u2264 m\n    \n    \u2264 10^5\n) \u2014 the number of candidates and the number of subjects. The next\n\n    n\n lines contains two integers per line: \n    s_i\n and \n    r_i\n (\n    1\n    \n    \u2264 s_i \n    \u2264 m\n, \n    -10^4 \n    \u2264 r_i \n    \u2264 10^4\n) \u2014 the subject of\nspecialization and the skill level of the \n    i\n-th candidate. Output Print\nthe single integer \u2014 the maximum total sum of skills of delegates who form a\nvalid delegation (according to rules above) or \n    0\n if every valid non-\nempty delegation has negative sum. Examples Input 6 3 2 6 3 6 2 5 3 5 1 9 3 1\nOutput 22 Input 5 3 2 6 3 6 2 5 3 5 1 11 Output 23 Input 5 2 1 -1 1 -5 2 -1 2\n-1 1 -10 Output 0 Note In the first example it's optimal to choose candidates\n\n    1\n, \n    2\n, \n    3\n, \n    4\n, so two of them specialize in the\n\n    2\n-nd subject and other two in the \n    3\n-rd. The total sum is \n    6 + 6\n    + 5 + 5 = 22\n. In the second example it's optimal to choose candidates\n\n    1\n, \n    2\n and \n    5\n. One person in each subject and the total sum is\n\n    6 + 6 + 11 = 23\n. In the third example it's impossible to obtain a non-\nnegative sum.\n\n",
        "cf_contest_id": 1082,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 3\r\n2 6\r\n3 6\r\n2 5\r\n3 5\r\n1 9\r\n3 1\r\n",
                "22\r\n"
            ],
            [
                "5 3\r\n2 6\r\n3 6\r\n2 5\r\n3 5\r\n1 11\r\n",
                "23\r\n"
            ],
            [
                "5 2\r\n1 -1\r\n1 -5\r\n2 -1\r\n2 -1\r\n1 -10\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "6 2\r\n1 6\r\n1 -5\r\n2 6\r\n2 6\r\n1 -7\r\n2 -7\r\n",
                "13\r\n"
            ],
            [
                "1 100000\r\n100000 10000\r\n",
                "10000\r\n"
            ],
            [
                "1 1\r\n1 -1\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\n1 10\r\n1 2\r\n2 -1\r\n2 1\r\n",
                "12\r\n"
            ],
            [
                "6 3\r\n1 10\r\n1 20\r\n2 10\r\n2 20\r\n3 4\r\n3 -10\r\n",
                "60\r\n"
            ],
            [
                "6 3\r\n1 3\r\n1 -4\r\n2 200\r\n2 200\r\n3 300\r\n3 300\r\n",
                "1000\r\n"
            ],
            [
                "8 2\r\n1 5\r\n1 5\r\n1 5\r\n1 5\r\n2 -5\r\n2 -5\r\n2 -5\r\n2 -5\r\n",
                "20\r\n"
            ],
            [
                "6 3\r\n1 6\r\n2 -5\r\n2 8\r\n1 6\r\n3 -1\r\n3 0\r\n",
                "15\r\n"
            ],
            [
                "9 4\r\n4 2\r\n4 4\r\n1 2\r\n4 2\r\n4 1\r\n3 0\r\n3 0\r\n1 4\r\n4 4\r\n",
                "14\r\n"
            ],
            [
                "8 4\r\n2 0\r\n3 9\r\n3 5\r\n1 0\r\n2 8\r\n1 -2\r\n2 4\r\n4 -1\r\n",
                "26\r\n"
            ],
            [
                "18 9\r\n7 7\r\n5 1\r\n1 2\r\n7 7\r\n8 8\r\n8 7\r\n4 7\r\n8 3\r\n9 5\r\n4 8\r\n6 -2\r\n6 -2\r\n8 0\r\n9 0\r\n4 7\r\n7 8\r\n3 -1\r\n4 4\r\n",
                "62\r\n"
            ],
            [
                "2 6\r\n5 3\r\n5 3\r\n",
                "6\r\n"
            ],
            [
                "15 9\r\n9 0\r\n5 3\r\n2 -1\r\n2 -1\r\n6 -1\r\n9 -2\r\n6 0\r\n6 2\r\n1 -2\r\n1 2\r\n2 -1\r\n7 -2\r\n1 1\r\n6 -2\r\n2 -2\r\n",
                "7\r\n"
            ],
            [
                "19 2\r\n1 2\r\n1 -3\r\n1 -1\r\n1 -2\r\n2 0\r\n1 -2\r\n1 -3\r\n2 -2\r\n2 -4\r\n2 -3\r\n2 0\r\n1 2\r\n1 -1\r\n1 -2\r\n1 -3\r\n1 -4\r\n2 2\r\n1 1\r\n1 -4\r\n",
                "7\r\n"
            ],
            [
                "15 4\r\n3 8\r\n1 8\r\n3 8\r\n1 6\r\n1 8\r\n3 7\r\n3 7\r\n4 7\r\n1 6\r\n4 7\r\n2 7\r\n4 6\r\n4 6\r\n3 7\r\n1 7\r\n",
                "85\r\n"
            ],
            [
                "13 8\r\n5 0\r\n6 1\r\n5 2\r\n4 -1\r\n5 -1\r\n1 1\r\n8 1\r\n6 1\r\n2 2\r\n2 0\r\n1 -1\r\n2 2\r\n5 1\r\n",
                "9\r\n"
            ],
            [
                "6 10\r\n6 5\r\n6 7\r\n10 8\r\n3 5\r\n3 8\r\n8 7\r\n",
                "30\r\n"
            ],
            [
                "18 6\r\n5 2\r\n3 1\r\n3 -4\r\n2 -1\r\n5 3\r\n4 -3\r\n5 4\r\n3 4\r\n4 -2\r\n1 4\r\n5 -4\r\n5 -1\r\n1 -2\r\n1 4\r\n6 -3\r\n4 -1\r\n5 4\r\n5 -1\r\n",
                "21\r\n"
            ]
        ]
    }
]