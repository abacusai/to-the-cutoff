[
    {
        "name": "Royal Questions",
        "description": "In a medieval kingdom, the economic crisis is raging. Milk drops fall,\nEconomic indicators are deteriorating every day, money from the treasury\ndisappear. To remedy the situation, King Charles Sunnyface decided make his n\nsons-princes marry the brides with as big dowry as possible. In search of\ncandidates, the king asked neighboring kingdoms, and after a while several\ndelegations arrived with m unmarried princesses. Receiving guests, Karl\nlearned that the dowry of the i th princess is wi of golden coins. Although\nthe action takes place in the Middle Ages, progressive ideas are widespread in\nsociety, according to which no one can force a princess to marry a prince whom\nshe does not like. Therefore, each princess has an opportunity to choose two\nprinces, for each of which she is ready to become a wife. The princes were\nless fortunate, they will obey the will of their father in the matter of\nchoosing a bride. Knowing the value of the dowry and the preferences of each\nprincess, Charles wants to play weddings in such a way that the total dowry of\nthe brides of all his sons would be as great as possible. At the same time to\nmarry all the princes or princesses is not necessary. Each prince can marry no\nmore than one princess, and vice versa, each princess can marry no more than\none prince. Help the king to organize the marriage of his sons in the most\nprofitable way for the treasury. Input The first line contains two integers n,\nm (2 \u2264 n \u2264 200 000, 1 \u2264 m \u2264 200 000) \u2014 number of princes and princesses\nrespectively. Each of following m lines contains three integers ai, bi, wi (1\n\u2264 ai, bi \u2264 n, ai \u2260 bi, 1 \u2264 wi \u2264 10 000) \u2014 number of princes, which i-th\nprincess is ready to marry and the value of her dowry. Output Print the only\ninteger \u2014 the maximum number of gold coins that a king can get by playing the\nright weddings. Examples Input 2 3 1 2 5 1 2 1 2 1 10 Output 15 Input 3 2 1 2\n10 3 2 20 Output 30\n\n",
        "cf_contest_id": 875,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dsu",
            "graphs",
            "greedy"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2 3\r\n1 2 5\r\n1 2 1\r\n2 1 10\r\n",
                "15\r\n"
            ],
            [
                "3 2\r\n1 2 10\r\n3 2 20\r\n",
                "30\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n1 2 1\r\n1 2 2\r\n",
                "3\r\n"
            ],
            [
                "3 3\r\n1 3 4\r\n1 3 2\r\n1 3 8\r\n",
                "12\r\n"
            ],
            [
                "2 1\r\n1 2 6\r\n",
                "6\r\n"
            ],
            [
                "4 3\r\n1 2 1\r\n2 3 2\r\n3 4 1\r\n",
                "4\r\n"
            ],
            [
                "4 2\r\n1 2 4\r\n1 2 5\r\n",
                "9\r\n"
            ],
            [
                "4 2\r\n1 2 3\r\n1 3 4\r\n",
                "7\r\n"
            ],
            [
                "4 4\r\n1 2 6971\r\n1 2 4379\r\n3 4 1092\r\n3 2 9449\r\n",
                "21891\r\n"
            ],
            [
                "7 6\r\n3 5 4229\r\n2 7 7116\r\n3 4 2492\r\n7 3 3742\r\n7 3 2996\r\n3 4 8359\r\n",
                "26442\r\n"
            ],
            [
                "7 15\r\n5 4 9125\r\n3 6 2173\r\n2 1 2908\r\n7 3 9796\r\n5 3 9402\r\n6 2 9802\r\n7 6 8455\r\n6 1 9821\r\n1 2 9799\r\n7 2 8280\r\n1 4 1845\r\n3 5 6506\r\n2 1 2821\r\n6 7 4858\r\n1 3 9568\r\n",
                "67313\r\n"
            ],
            [
                "10 50\r\n2 8 7070\r\n10 5 1352\r\n1 5 760\r\n4 8 6903\r\n4 1 6374\r\n5 4 2255\r\n2 7 1351\r\n8 3 7621\r\n8 5 5733\r\n7 6 7104\r\n7 2 594\r\n2 4 7972\r\n3 10 6868\r\n4 8 1694\r\n3 5 93\r\n8 9 5825\r\n8 10 510\r\n9 6 2703\r\n9 2 8798\r\n8 7 7146\r\n3 4 4939\r\n2 6 9369\r\n6 8 3402\r\n5 4 6563\r\n8 7 5404\r\n4 7 7863\r\n8 5 4330\r\n9 5 9133\r\n5 10 3601\r\n9 5 7030\r\n8 6 7647\r\n4 9 8909\r\n1 6 4289\r\n10 1 1326\r\n4 9 7531\r\n3 10 8884\r\n9 4 2286\r\n6 2 2643\r\n10 2 2100\r\n7 3 8342\r\n3 7 9225\r\n5 4 653\r\n1 10 3427\r\n3 6 3328\r\n8 2 5568\r\n4 10 4697\r\n8 4 4305\r\n8 3 5660\r\n9 4 8040\r\n4 6 5439\r\n",
                "84721\r\n"
            ],
            [
                "10 9\r\n9 7 9297\r\n5 1 2172\r\n4 10 9919\r\n10 9 9478\r\n6 2 6941\r\n1 6 2934\r\n2 8 1499\r\n3 4 7388\r\n8 3 4845\r\n",
                "54473\r\n"
            ],
            [
                "10 10\r\n1 9 4597\r\n6 2 3894\r\n7 8 2691\r\n3 10 8150\r\n5 3 1567\r\n6 1 560\r\n6 3 9273\r\n7 6 5282\r\n2 9 434\r\n9 1 2511\r\n",
                "38525\r\n"
            ],
            [
                "2 2\r\n2 1 1473\r\n1 2 5870\r\n",
                "7343\r\n"
            ],
            [
                "4 4\r\n4 2 1646\r\n2 4 3586\r\n3 1 3468\r\n1 3 6363\r\n",
                "15063\r\n"
            ],
            [
                "8 8\r\n3 8 4455\r\n1 2 5674\r\n2 1 4563\r\n4 5 5728\r\n5 4 2115\r\n8 3 5634\r\n6 7 8260\r\n7 6 1492\r\n",
                "37921\r\n"
            ],
            [
                "2 1\r\n1 2 792\r\n",
                "792\r\n"
            ],
            [
                "5 4\r\n1 4 6895\r\n3 5 2890\r\n4 2 2089\r\n2 3 8673\r\n",
                "20547\r\n"
            ],
            [
                "2 2\r\n1 2 10000\r\n2 1 10000\r\n",
                "20000\r\n"
            ]
        ]
    }
]