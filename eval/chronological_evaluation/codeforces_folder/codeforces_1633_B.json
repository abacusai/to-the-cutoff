[
    {
        "name": "Minority",
        "description": "You are given a string \n    s\n, consisting only of characters '0' and '1'. You\nhave to choose a contiguous substring of \n    s\n and remove all occurrences of\nthe character, which is a strict minority in it, from the substring. That is,\nif the amount of '0's in the substring is strictly smaller than the amount of\n'1's, remove all occurrences of '0' from the substring. If the amount of '1's\nis strictly smaller than the amount of '0's, remove all occurrences of '1'. If\nthe amounts are the same, do nothing. You have to apply the operation exactly\nonce. What is the maximum amount of characters that can be removed? Input The\nfirst line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014\nthe number of testcases. The only line of each testcase contains a non-empty\nstring \n    s\n, consisting only of characters '0' and '1'. The length of\n\n    s\n doesn't exceed \n    2 \n    \u00b7 10^5\n. The total length of strings\n\n    s\n over all testcases doesn't exceed \n    2 \n    \u00b7 10^5\n. Output For\neach testcase, print a single integer \u2014 the maximum amount of characters that\ncan be removed after applying the operation exactly once. Example Input 4 01\n1010101010111 00110001000 1 Output 0 5 3 0 Note In the first testcase, you can\nchoose substrings \"0\", \"1\" or \"01\". In \"0\" the amount of '0' is \n    1\n, the\namount of '1' is \n    0\n. '1' is a strict minority, thus all occurrences of it\nare removed from the substring. However, since there were \n    0\n of them,\nnothing changes. Same for \"1\". And in \"01\" neither of '0' or '1' is a strict\nminority. Thus, nothing changes. So there is no way to remove any characters.\nIn the second testcase, you can choose substring \"10101010101\". It contains\n\n    5\n characters '0' and \n    6\n characters '1'. '0' is a strict minority.\nThus, you can remove all its occurrences. There exist other substrings that\nproduce the same answer. In the third testcase, you can choose substring\n\"011000100\". It contains \n    6\n characters '0' and \n    3\n characters '1'.\n'1' is a strict minority. Thus, you can remove all its occurrences.\n\n",
        "cf_contest_id": 1633,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n01\r\n1010101010111\r\n00110001000\r\n1\r\n",
                "0\r\n5\r\n3\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n00000000000000000011111111111111111111\r\n",
                "18\r\n"
            ],
            [
                "1\r\n00000000000000\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1101010101111010110101010101001010111010\r\n",
                "17\r\n"
            ],
            [
                "1\r\n101010101010101010101010101010010101010101010101010101010101010101010100000\r\n",
                "35\r\n"
            ],
            [
                "1\r\n10101010101010101010101010101001010101010101010101010101010101010101010000\r\n",
                "35\r\n"
            ]
        ]
    }
]