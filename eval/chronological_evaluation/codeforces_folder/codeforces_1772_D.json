[
    {
        "name": "Absolute Sorting",
        "description": "You are given an array \n    a\n consisting of \n    n\n integers. The array is\nsorted if \n    a_1 \n    \u2264 a_2 \n    \u2264\n    \u2026\n    \u2264 a_n\n. You want to make the\narray \n    a\n sorted by applying the following operation exactly once: choose\nan integer \n    x\n, then for every \n    i \n    \u2208 [1, n]\n, replace \n    a_i\n by\n\n    |a_i - x|\n. Find any value of \n    x\n that will make the array sorted, or\nreport that there is no such value. Input The first line contains one integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 2 \n    \u00b7 10^4\n) \u2014 the number of test cases.\nEach test case consists of two lines. The first line contains one integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n). The second line contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^8\n).\nAdditional constraint on the input: the sum of \n    n\n over all test cases\ndoes not exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, print any\ninteger \n    x\n (\n    0 \n    \u2264 x \n    \u2264 10^9\n) that makes the array sorted. It\ncan be shown that if such an integer \n    x\n exists, there is at least one\nsuch integer between \n    0\n and \n    10^9\n. If there is no such integer, then\nprint \n    -1\n. If there are multiple suitable values of \n    x\n, print any of\nthem. Example Input 8 5 5 3 3 3 5 4 5 3 4 5 8 1 2 3 4 5 6 7 8 6 10 5 4 3 2 1 3\n3 3 1 3 42 43 42 2 100000000 99999999 6 29613295 52036613 75100585 78027446\n81409090 73215 Output 4 -1 0 42 2 -1 100000000 40741153 Note In the first test\ncase, after using \n    x = 4\n, the array becomes \n    [1, 1, 1, 1, 1]\n. In the\nthird test case, after using \n    x = 0\n, the array becomes \n    [1, 2, 3, 4, 5,\n    6, 7, 8]\n. In the fourth test case, after using \n    x = 42\n, the array\nbecomes \n    [32, 37, 38, 39, 40, 41]\n.\n\n",
        "cf_contest_id": 1772,
        "cf_index": "D",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "8\r\n5\r\n5 3 3 3 5\r\n4\r\n5 3 4 5\r\n8\r\n1 2 3 4 5 6 7 8\r\n6\r\n10 5 4 3 2 1\r\n3\r\n3 3 1\r\n3\r\n42 43 42\r\n2\r\n100000000 99999999\r\n6\r\n29613295 52036613 75100585 78027446 81409090 73215\r\n",
                "4\r\n-1\r\n0\r\n8\r\n2\r\n-1\r\n100000000\r\n40741153\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n2\r\n1 2\r\n2\r\n1 2\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n3\r\n1 2 3\r\n3\r\n1 2 3\r\n",
                "0\r\n0\r\n"
            ]
        ]
    }
]