[
    {
        "name": "New task",
        "description": "On the 228-th international Uzhlyandian Wars strategic game tournament teams\nfrom each country are called. The teams should consist of 5 participants. The\nteam of Uzhlyandia will consist of soldiers, because there are no gamers.\nMasha is a new minister of defense and gaming. The prime duty of the minister\nis to calculate the efficiency of the Uzhlandian army. The army consists of n\nsoldiers standing in a row, enumerated from 1 to n. For each soldier we know\nhis skill in Uzhlyandian Wars: the i-th soldier's skill is ai. It was decided\nthat the team will consist of three players and two assistants. The skills of\nplayers should be same, and the assistants' skills should not be greater than\nthe players' skill. Moreover, it is important for Masha that one of the\nassistants should stand in the row to the left of the players, and the other\none should stand in the row to the right of the players. Formally, a team is\nfive soldiers with indexes i, j, k, l, p, such that 1 \u2264 i < j < k < l < p \u2264 n\nand ai \u2264 aj = ak = al \u2265 ap. The efficiency of the army is the number of\ndifferent teams Masha can choose. Two teams are considered different if there\nis such i such that the i-th soldier is a member of one team, but not a member\nof the other team. Initially, all players are able to be players. For some\nreasons, sometimes some soldiers become unable to be players. Sometimes some\nsoldiers, that were unable to be players, become able to be players. At any\ntime any soldier is able to be an assistant. Masha wants to control the\nefficiency of the army, so she asked you to tell her the number of different\npossible teams modulo 1000000007 (10^9 + 7) after each change. Input The first\nline contains single integer n (1 \u2264 n \u2264 10^5) \u2014 the number of soldiers in\nUzhlyandia. The second line contains n integers a1, a2, ..., an (1 \u2264 ai \u2264\n10^9) \u2014 the soldiers' skills. The third line contains single integer m (1 \u2264 m\n\u2264 10^5) \u2014 the number of changes. The next m lines contain the changes, each\nchange is described with two integers t and x (1 \u2264 t \u2264 2, 1 \u2264 x \u2264 n) on a\nseparate line. If t = 1, then the x-th soldier is unable to be a player after\nthis change. If t = 2, then the x-th soldier is able to be a player after this\nchange. It is guaranteed that before each query of the first type the soldier\nis able to be a player, and before each query of the second type the soldier\nis unable to be a player. Output Print m integers \u2014 the number of distinct\nteams after each change. Print the answers modulo 1000000007 (10^9 + 7).\nExamples Input 6 1 1 1 1 1 1 2 1 3 2 3 Output 1 6 Input 8 3 4 4 2 4 5 4 1 3 1\n5 2 5 1 2 Output 1 6 2 Note In the first example, after the first change the\nonly team consists of soldiers [1, 2, 4, 5, 6]. After the second change any\nfive soldiers can form a team. In the first example after the first change the\nonly team is soldiers [1, 2, 3, 7, 8]. After the second change the possible\nteams are: [1, 2, 3, 5, 7], [1, 2, 3, 5, 8], [1, 2, 3, 7, 8], [1, 2, 5, 7, 8],\n[1, 3, 5, 7, 8], [2, 3, 5, 7, 8]. After the third change the possible teams\nare: [1, 3, 5, 7, 8], [2, 3, 5, 7, 8].\n\n",
        "cf_contest_id": 788,
        "cf_index": "E",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1 1 1 1 1 1\r\n2\r\n1 3\r\n2 3\r\n",
                "1\r\n6\r\n"
            ],
            [
                "8\r\n3 4 4 2 4 5 4 1\r\n3\r\n1 5\r\n2 5\r\n1 2\r\n",
                "1\r\n6\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "12\r\n6 3 3 6 7 7 10 9 9 3 4 8\r\n5\r\n1 12\r\n1 1\r\n2 12\r\n1 10\r\n1 2\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "10\r\n5 5 5 3 6 5 5 7 3 5\r\n3\r\n1 3\r\n2 3\r\n1 7\r\n",
                "2\r\n11\r\n3\r\n"
            ],
            [
                "10\r\n37 37 69 46 37 37 69 46 46 46\r\n9\r\n1 5\r\n1 6\r\n1 8\r\n1 4\r\n1 2\r\n1 9\r\n2 5\r\n2 9\r\n1 7\r\n",
                "2\r\n2\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "14\r\n90 90 90 12 90 90 4 48 11 48 11 90 11 11\r\n9\r\n1 12\r\n1 6\r\n1 7\r\n1 3\r\n1 5\r\n1 11\r\n2 6\r\n1 2\r\n2 11\r\n",
                "42\r\n10\r\n10\r\n1\r\n1\r\n0\r\n0\r\n0\r\n1\r\n"
            ],
            [
                "10\r\n53 53 52 52 53 52 53 52 52 53\r\n10\r\n1 5\r\n1 2\r\n1 3\r\n2 2\r\n1 9\r\n2 5\r\n1 1\r\n1 6\r\n2 3\r\n2 1\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n4\r\n4\r\n3\r\n3\r\n3\r\n"
            ],
            [
                "12\r\n6 7 7 7 6 7 6 7 6 6 10 7\r\n10\r\n1 5\r\n1 10\r\n1 6\r\n1 4\r\n1 3\r\n1 7\r\n2 6\r\n2 5\r\n1 12\r\n1 1\r\n",
                "57\r\n57\r\n19\r\n3\r\n0\r\n0\r\n3\r\n3\r\n3\r\n3\r\n"
            ],
            [
                "14\r\n82 90 59 53 90 90 82 90 90 82 90 53 42 82\r\n7\r\n1 5\r\n1 6\r\n1 8\r\n1 4\r\n1 11\r\n2 6\r\n1 13\r\n",
                "101\r\n32\r\n3\r\n3\r\n0\r\n5\r\n5\r\n"
            ],
            [
                "30\r\n93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652 93652\r\n10\r\n1 20\r\n1 19\r\n1 12\r\n1 25\r\n1 29\r\n1 2\r\n1 28\r\n2 28\r\n2 20\r\n1 16\r\n",
                "122841\r\n104820\r\n88100\r\n78645\r\n76498\r\n74079\r\n70385\r\n74079\r\n87955\r\n72623\r\n"
            ],
            [
                "30\r\n98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398 98398\r\n10\r\n1 17\r\n1 2\r\n1 30\r\n1 4\r\n1 28\r\n1 29\r\n1 22\r\n1 18\r\n1 14\r\n1 26\r\n",
                "121290\r\n118274\r\n118274\r\n110552\r\n105115\r\n102562\r\n88348\r\n73441\r\n59818\r\n53855\r\n"
            ],
            [
                "30\r\n78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952 78952\r\n10\r\n1 14\r\n1 7\r\n1 10\r\n1 21\r\n1 18\r\n1 3\r\n1 9\r\n1 29\r\n2 7\r\n1 28\r\n",
                "121290\r\n107945\r\n92837\r\n78251\r\n64353\r\n60654\r\n51240\r\n49286\r\n57025\r\n53463\r\n"
            ],
            [
                "30\r\n24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913 24913\r\n10\r\n1 11\r\n1 19\r\n1 20\r\n1 8\r\n1 16\r\n2 8\r\n1 3\r\n2 19\r\n1 30\r\n1 8\r\n",
                "122841\r\n104295\r\n88570\r\n76495\r\n62707\r\n73410\r\n69107\r\n82976\r\n82976\r\n71685\r\n"
            ],
            [
                "30\r\n169 628 628 628 169 628 169 17 740 628 169 17 628 740 628 740 17 169 169 628 628 17 17 17 628 628 628 169 628 740\r\n10\r\n1 10\r\n1 25\r\n1 6\r\n1 16\r\n1 13\r\n1 1\r\n1 27\r\n1 14\r\n1 9\r\n1 7\r\n",
                "3362\r\n2477\r\n1718\r\n1606\r\n878\r\n878\r\n652\r\n652\r\n652\r\n609\r\n"
            ],
            [
                "30\r\n324 986 324 763 620 620 620 620 620 986 620 620 324 620 620 620 620 986 620 620 620 763 620 986 763 620 763 763 986 324\r\n10\r\n1 12\r\n1 15\r\n1 1\r\n1 17\r\n1 26\r\n1 14\r\n1 18\r\n1 5\r\n1 8\r\n2 26\r\n",
                "8768\r\n6500\r\n6500\r\n4821\r\n4423\r\n3106\r\n3007\r\n2477\r\n1693\r\n1952\r\n"
            ],
            [
                "50\r\n157 157 7052 7052 9128 9128 9128 7052 7052 7052 7052 9128 7052 8990 7052 9128 9128 8990 8990 9128 157 9128 7052 8990 9128 157 9128 7052 7052 157 7052 9128 9128 8990 157 8990 8990 9128 9128 157 7052 157 8990 7052 157 9128 8990 9128 8990 157\r\n10\r\n1 26\r\n1 40\r\n1 38\r\n1 19\r\n1 8\r\n1 24\r\n1 42\r\n1 12\r\n1 33\r\n2 12\r\n",
                "88505\r\n88430\r\n75312\r\n72843\r\n70405\r\n68623\r\n68589\r\n56327\r\n44715\r\n55226\r\n"
            ],
            [
                "50\r\n6332 6332 6332 9682 6332 6332 6332 6306 9682 3146 6332 6332 9682 6332 6306 6332 6332 6332 9682 6306 6332 6332 9682 6332 6306 6332 6306 6306 9682 6306 6306 9682 9682 6332 9682 9682 6306 9682 9682 9682 9682 6332 6332 6306 9682 3146 9682 9682 6306 9682\r\n10\r\n1 16\r\n1 19\r\n1 46\r\n1 8\r\n1 3\r\n1 28\r\n1 38\r\n1 18\r\n1 13\r\n1 45\r\n",
                "118660\r\n102664\r\n102664\r\n102664\r\n99954\r\n99566\r\n82181\r\n74804\r\n66505\r\n58987\r\n"
            ],
            [
                "1\r\n48534236\r\n1\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "20\r\n756932061 749136655 102258711 102258711 784803353 784803353 784803353 784803353 749136655 749136655 784803353 102258711 749136655 784803353 784803353 784803353 784803353 102258711 756932061 102258711\r\n14\r\n1 6\r\n1 11\r\n2 11\r\n1 7\r\n1 19\r\n1 12\r\n1 18\r\n1 10\r\n1 14\r\n2 10\r\n1 20\r\n2 6\r\n1 17\r\n1 13\r\n",
                "1505\r\n853\r\n1505\r\n947\r\n947\r\n946\r\n946\r\n940\r\n468\r\n474\r\n474\r\n821\r\n536\r\n530\r\n"
            ]
        ]
    }
]