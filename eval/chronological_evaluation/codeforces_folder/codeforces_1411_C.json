[
    {
        "name": "Peaceful Rooks",
        "description": "You are given a \n    n \n    \u00d7 n\n chessboard. Rows and columns of the board\nare numbered from \n    1\n to \n    n\n. Cell \n    (x, y)\n lies on the\nintersection of column number \n    x\n and row number \n    y\n. Rook is a chess\npiece, that can in one turn move any number of cells vertically or\nhorizontally. There are \n    m\n rooks (\n    m < n\n) placed on the chessboard\nin such a way that no pair of rooks attack each other. I.e. there are no pair\nof rooks that share a row or a column. In one turn you can move one of the\nrooks any number of cells vertically or horizontally. Additionally, it\nshouldn't be attacked by any other rook after movement. What is the minimum\nnumber of moves required to place all the rooks on the main diagonal? The main\ndiagonal of the chessboard is all the cells \n    (i, i)\n, where \n    1 \n    \u2264 i\n    \n    \u2264 n\n. Input The first line contains the number of test cases \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 10^3\n). Description of the \n    t\n test cases follows.\nThe first line of each test case contains two integers \n    n\n and \n    m\n \u2014\nsize of the chessboard and the number of rooks (\n    2 \n    \u2264 n \n    \u2264 10^5\n,\n\n    1 \n    \u2264 m < n\n). Each of the next \n    m\n lines contains two integers\n\n    x_i\n and \n    y_i\n \u2014 positions of rooks, \n    i\n-th rook is placed in the\ncell \n    (x_i, y_i)\n (\n    1 \n    \u2264 x_i, y_i \n    \u2264 n\n). It's guaranteed that\nno two rooks attack each other in the initial placement. The sum of \n    n\n\nover all test cases does not exceed \n    10^5\n. Output For each of \n    t\n\ntest cases print a single integer \u2014 the minimum number of moves required to\nplace all the rooks on the main diagonal. It can be proved that this is always\npossible. Example Input 4 3 1 2 3 3 2 2 1 1 2 5 3 2 3 3 1 1 2 5 4 4 5 5 1 2 2\n3 3 Output 1 3 4 2 Note Possible moves for the first three test cases: \n    (2,\n    3) \n    \u2192 (2, 2)\n \n    (2, 1) \n    \u2192 (2, 3)\n, \n    (1, 2) \n    \u2192 (1, 1)\n,\n\n    (2, 3) \n    \u2192 (2, 2)\n \n    (2, 3) \n    \u2192 (2, 4)\n, \n    (2, 4) \n    \u2192 (4,\n    4)\n, \n    (3, 1) \n    \u2192 (3, 3)\n, \n    (1, 2) \n    \u2192 (1, 1)\n\n\n",
        "cf_contest_id": 1411,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3 1\r\n2 3\r\n3 2\r\n2 1\r\n1 2\r\n5 3\r\n2 3\r\n3 1\r\n1 2\r\n5 4\r\n4 5\r\n5 1\r\n2 2\r\n3 3\r\n",
                "1\r\n3\r\n4\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n3 1\r\n2 3\r\n3 2\r\n2 1\r\n1 2\r\n5 3\r\n2 3\r\n3 1\r\n1 2\r\n5 4\r\n4 5\r\n5 1\r\n1 3\r\n3 4\r\n",
                "1\r\n3\r\n4\r\n5\r\n"
            ],
            [
                "1\r\n3 2\r\n3 1\r\n1 3\r\n",
                "3\r\n"
            ]
        ]
    }
]