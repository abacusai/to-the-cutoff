[
    {
        "name": "Gasoline prices",
        "description": "Berland \u2014 is a huge country consisting of \n    n\n cities. The road network of\nBerland can be represented as a root tree, that is, there is only \n    n - 1\n\nroad in the country, and you can get from any city to any other exactly one\nway, if you do not visit any city twice. For the convenience of representing\nthe country, for each city \n    i\n, the city \n    p_i\n is fixed, equal to the\nfirst city to which you need to go from the city \n    i\n to get to the city\n\n    1\n. In other words, the city \n    p_i\n is equal to the ancestor of the\ncity \n    i\n if the tree is hung for the city \n    1\n.There is one gas station\nin each city of Berland. Gas stations have special pricing, and for each gas\nstation there is a fixed range of prices for which they are ready to sell\ngasoline. A gas station in the city with the number \n    i\n is ready to sell\ngasoline at any price from \n    l_i\n to \n    r_i\n inclusive. The King of\nBerland \u2014 is an exemplary family man, and for \n    m\n years, two sons were\nborn to him every year. The king's children have been involved in public\naffairs since early childhood, and at the end of each year they check the\nhonesty of gasoline prices. From birth, the king's children, who are born in\nthe year \n    i\n, are responsible for checking gasoline prices on the ways\nfrom the city of \n    a_i\n to the city of \n    b_i\n and from the city of\n\n    c_i\n to the city of \n    d_i\n, respectively. The check is as follows:\nboth children simultaneously start their journey from the cities \n    a_i\n and\n\n    c_i\n, respectively. The first son of the king, born in the year \n    i\n,\nmoves along the path from the city \n    a_i\n to the city \n    b_i\n, and the\nsecond \u2014 from the city \n    c_i\n to the city \n    d_i\n. Children check that\nthe price of gasoline in the city of \n    a_i\n coincides with the price of\ngasoline in the city of \n    c_i\n. Next, they check that the price of gasoline\nin the second city on the way from \n    a_i\n to \n    b_i\n coincides with the\nprice in the second city on the way from \n    c_i\n to \n    d_i\n. Then they\nrepeat the same thing for a couple of third cities on their paths and so on.\nAt the end, they check that the price of gasoline in the city of \n    b_i\n\ncoincides with the price of gasoline in the city of \n    d_i\n. It is\nguaranteed that the length of the path from the city \n    a_i\n to the city\n\n    b_i\n coincides with the length of the path from the city \n    c_i\n to the\ncity \n    d_i\n. Gas stations must strictly obey the laws, and therefore all\nchecks of gasoline prices should not reveal violations. Help Berland gas\nstations find out how many ways they can set gasoline prices for \n    m\n\nyears. In other words, for each \n    i\n from \n    1\n to \n    m\n, calculate how\nmany ways you can set gasoline prices at all gas stations so that after the\nbirth of the first \n    i\n pairs of the king's children, all their checks did\nnot reveal violations, and at any gas station the price was in the acceptable\nprice range. Since the number of such methods can be large, calculate the\nanswer modulo \n    10^9 + 7\n. Input The first line contains a single integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 200\n     000\n) \u2014 the number of cities in Berland.\nThe second line contains \n    (n - 1)\n numbers \n    p_2,\n     p_3,\n     p_4,\n    \n    \u2026,\n     p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n), where \n    p_i\n denotes the\nnumber of the next city on the way from city \n    i\n to city \n    1\n. In each\nof the following lines, two integers are given \n    l_i\n and \n    r_i\n (\n    1\n    \n    \u2264 l_i \n    \u2264 r_i < 10^9+7\n), specifying the acceptable range of prices at\nthe gas station number \n    i\n. The following line contains a single integer\n\n    m\n (\n    1 \n    \u2264 m \n    \u2264 200\n     000\n) \u2014 the number of years during which\ntwo sons were born to the king. In each of the following \n    m\n lines, four\nintegers are given \n    a_i\n, \n    b_i\n, \n    c_i\n and \n    d_i\n (\n    1 \n    \u2264\n    a_i, b_i, c_i, d_i \n    \u2264 n\n), specifying two paths on which the king's\nchildren will check gasoline prices, born in the year \n    i\n. It is\nguaranteed that the length of the path between the cities \n    a_i\n and\n\n    b_i\n is equal to the length of the path between the cities \n    c_i\n and\n\n    d_i\n. Output In \n    m\n lines, print one number each. The number in the\n\n    i\n line should be equal to the number of ways to set gasoline prices in\nall cities so that the king's children born in the years up to and including\n\n    i\n do not reveal violations in inspections. Output the numbers modulo\n\n    10^9 + 7\n. Examples Input 5 1 1 2 2 2 4 1 3 1 3 2 4 4 4 4 1 1 2 2 1 2 2 1\n3 4 4 3 3 4 3 5 Output 18 18 4 0 Input 8 1 2 3 4 5 8 6 3 7 2 6 3 8 5 10 5 8 2\n9 3 8 6 8 4 1 3 7 6 4 1 5 7 1 7 7 1 1 8 2 7 Output 720 120 120 1 Note Consider\nthe first example. After the birth of the first two sons, the prices in the\ncities of \n    1\n and \n    2\n should be equal. In total, there are 2 ways to\nchoose the same gasoline price for the cities of \n    1\n and \n    2\n so that\nit falls within the acceptable price range for these cities. So, there are\nonly ways to set gasoline prices: \n    2 \n    \u00b7 3 \n    \u00b7 3 \n    \u00b7 1 = 18\n.\nThe second pair of sons will check the prices on the paths \n    1 - 2\n and\n\n    2 - 1\n. This means that gasoline prices in the cities of \n    1\n and\n\n    2\n must match, which is already being done. Therefore, after the birth of\nthe second pair of sons, the answer did not change in any way. The third pair\nof sons will check the prices on the tracks \n    3 - 1 - 2 - 4\n and \n    4 - 2 -\n    1 - 3\n. Then the price of non-gasoline in the city of \n    3\n should be\nequal to the price in the city of \n    4\n, and the price in the city of\n\n    1\n should be equal to the price in the city of \n    2\n. Prices in the\ncities of \n    1\n and \n    2\n are already the same. For the cities of \n    3\n\nand \n    4\n, there are 2 ways to choose the same price for gasoline so that it\nfalls within the acceptable price range for these cities. So, there are only\nways to set gasoline prices: \n    2 \n    \u00b7 2 \n    \u00b7 1 = 4\n. The fourth pair\nof sons will check the prices on the tracks \n    3 - 1 - 2 - 4\n and \n    3 - 1 -\n    2 - 5\n. This means that the prices in the cities of \n    4\n and \n    5\n\nshould be equal, and since the prices in the cities of \n    3\n and \n    4\n\nalready coincide, then in the cities of \n    3\n, \n    4\n and \n    5\n there\nshould be the same price for gasoline. The price of gasoline in the city of\n\n    3\n should be no more than 3, and the price of gasoline in the city of\n\n    5\n should be no less than 4. So, after the birth of the fourth pair of\nsons, there are no ways to set gasoline prices so that all checks are carried\nout and prices are in the required ranges.\n\n",
        "cf_contest_id": 1801,
        "cf_index": "E",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "divide and conquer",
            "dsu",
            "hashing",
            "trees"
        ],
        "time_limit_seconds": 3.5,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "5\r\n1 1 2 2\r\n2 4\r\n1 3\r\n1 3\r\n2 4\r\n4 4\r\n4\r\n1 1 2 2\r\n1 2 2 1\r\n3 4 4 3\r\n3 4 3 5\r\n",
                "18\r\n18\r\n4\r\n0\r\n"
            ],
            [
                "8\r\n1 2 3 4 5 8 6\r\n3 7\r\n2 6\r\n3 8\r\n5 10\r\n5 8\r\n2 9\r\n3 8\r\n6 8\r\n4\r\n1 3 7 6\r\n4 1 5 7\r\n1 7 7 1\r\n1 8 2 7\r\n",
                "720\r\n120\r\n120\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n\r\n246602972 890145302\r\n1\r\n1 1 1 1\r\n",
                "643542331\r\n"
            ]
        ]
    }
]