[
    {
        "name": "Indivisible",
        "description": "You're given a positive integer \n    n\n. Find a permutation \n    a_1, a_2,\n    \n    \u2026, a_n\n such that for any \n    1 \n    \u2264 l < r \n    \u2264 n\n, the sum\n\n    a_l + a_l+1 + \n    \u2026 + a_r\n is not divisible by \n    r-l+1\n. A\npermutation of length \n    n\n is an array consisting of \n    n\n distinct\nintegers from \n    1\n to \n    n\n in arbitrary order. For example,\n\n    [2,3,1,5,4]\n is a permutation, but \n    [1,2,2]\n is not a permutation\n(\n    2\n appears twice in the array), and \n    [1,3,4]\n is also not a\npermutation (\n    n=3\n but there is \n    4\n in the array). Input Each test\ncontains multiple test cases. The first line contains the number of test cases\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n). Description of the test cases follows.\nThe first line of each test case contain a single integer \n    n\n (\n    1 \n    \u2264\n    n \n    \u2264 100\n) \u2014 the size of the desired permutation. Output For each test\ncase, if there is no such permutation print \n    -1\n. Otherwise, print \n    n\n\ndistinct integers \n    p_1, p_2, \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n)\n\u2014 a permutation satisfying the condition described in the statement. If there\nare multiple solutions, print any. Example Input 3 1 2 3 Output 1 1 2 -1 Note\nIn the first example, there are no valid pairs of \n    l < r\n, meaning that\nthe condition is true for all such pairs. In the second example, the only\nvalid pair is \n    l=1\n and \n    r=2\n, for which \n    a_1 + a_2 = 1+2=3\n is\nnot divisible by \n    r-l+1=2\n. in the third example, for \n    l=1\n and\n\n    r=3\n the sum \n    a_1+a_2+a_3\n is always \n    6\n, which is divisible by\n\n    3\n.\n\n",
        "cf_contest_id": 1818,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1\r\n2\r\n3\r\n",
                "1\r\n2 1\r\n-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n100\r\n",
                "2 1 4 3 6 5 8 7 10 9 12 11 14 13 16 15 18 17 20 19 22 21 24 23 26 25 28 27 30 29 32 31 34 33 36 35 38 37 40 39 42 41 44 43 46 45 48 47 50 49 52 51 54 53 56 55 58 57 60 59 62 61 64 63 66 65 68 67 70 69 72 71 74 73 76 75 78 77 80 79 82 81 84 83 86 85 88 87 90 89 92 91 94 93 96 95 98 97 100 99\r\n"
            ],
            [
                "100\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n99\r\n",
                "-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "100\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n97\r\n",
                "-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ]
        ]
    }
]