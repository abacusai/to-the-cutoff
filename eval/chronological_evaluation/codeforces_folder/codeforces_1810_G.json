[
    {
        "name": "The Maximum Prefix",
        "description": "You're going to generate an array \n    a\n with a length of at most \n    n\n,\nwhere each \n    a_i\n equals either \n    1\n or \n    -1\n. You generate this\narray in the following way. First, you choose some integer \n    k\n (\n    1\n    \u2264\n    k \n    \u2264 n\n), which decides the length of \n    a\n. Then, for each \n    i\n\n(\n    1\n    \u2264 i \n    \u2264 k\n), you set \n    a_i = 1\n with probability\n\n    p_i\n, otherwise set \n    a_i = -1\n (with probability \n    1 -\n    p_i\n). After the array is generated, you calculate \n    s_i = a_1 +\n    a_2 + a_3+ \n    \u2026 + a_i\n. Specially, \n    s_0 = 0\n. Then you let\n\n    S\n equal to \n    max_i=0^ks_i\n. That is,\n\n    S\n is the maximum prefix sum of the array \n    a\n. You are given\n\n    n+1\n integers \n    h_0 , h_1, \n    \u2026 ,h_n\n. The score of an array\n\n    a\n with maximum prefix sum \n    S\n is \n    h_S\n. Now, for each \n    k\n,\nyou want to know the expected score for an array of length \n    k\n modulo\n\n    10^9+7\n. Input Each test contains multiple test cases. The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 5000\n) \u2014 the number of\ntest cases. Their description follows. The first line contains an integer\n\n    n\n (\n    1\n    \u2264 n \n    \u2264 5000\n). Then for the following \n    n\n lines,\neach line contains two integers \n    x_i\n and \n    y_i\n (\n    0 \n    \u2264 x_i\n    < 10^9 + 7\n, \n    1\n    \u2264 y_i < 10^9 + 7\n, \n    x_i\n    \u2264 y_i\n),\nindicating \n    p_i = \n    x_i/y_i\n. The next line contains\n\n    n+1\n integers \n    h_0,h_1, \n    \u2026, h_n\n (\n    0 \n    \u2264 h_i < 10^9\n    + 7\n). It is guaranteed that the sum of \n    n\n over all test cases does not\nexceed \n    5000\n. Output For each test case, output \n    n\n integers in one\nsingle line, the \n    i\n-th of which denotes the expected score for an array\nof length \n    i\n, modulo \n    10^9 + 7\n. Formally, let \n    M = 10^9 + 7\n. It\ncan be shown that the answer can be expressed as an irreducible fraction\n\n    p/q\n, where \n    p\n and \n    q\n are integers and \n    q \n    \u2261 0 \n    M\n. Output the integer equal to \n    p \n    \u00b7 q^-1\n     M\n. In other words, output such an integer \n    x\n that \n    0 \n    \u2264 x\n    < M\n and \n    x \n    \u00b7 q \n    \u2261 p \n    M\n. Example Input 4 2 1 2 1 2\n1 2 3 3 1 3 1 4 5 5 1 1 1 1 3 2 5 4 6 0 2 4 3 2 1 5 5 6 5 7 1 6 1 3 4 7 9 0 4\n5 2 4 Output 500000005 750000007 1 1 1 200000005 333333339 333333339 500000005\n880952391 801587311 781746041 789304620 Note In the first test case, if we\nchoose \n    k=1\n, there are \n    2\n possible arrays with equal probabilities:\n\n    [1]\n and \n    [-1]\n. The \n    S\n values for them are \n    1\n and \n    0\n.\nSo the expected score is \n    1/2h_0 + \n    1/2h_1 =\n    \n    3/2\n. If we choose \n    k=2\n, there are \n    4\n possible arrays\nwith equal probabilities: \n    [1,1]\n, \n    [1,-1]\n, \n    [-1,1]\n,\n\n    [-1,-1]\n, and the \n    S\n values for them are \n    2,1,0,0\n. So the\nexpected score is \n    1/2h_0 + \n    1/4h_1 +\n    \n    1/4h_2 = \n    7/4\n. In the second test case, no matter what\nthe \n    S\n value is, the score is always \n    1\n, so the expected score is\nalways \n    1\n.\n\n",
        "cf_contest_id": 1810,
        "cf_index": "G",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2\r\n1 2\r\n1 2\r\n1 2 3\r\n3\r\n1 3\r\n1 4\r\n5 5\r\n1 1 1 1\r\n3\r\n2 5\r\n4 6\r\n0 2\r\n4 3 2 1\r\n5\r\n5 6\r\n5 7\r\n1 6\r\n1 3\r\n4 7\r\n9 0 4 5 2 4\r\n",
                "500000005 750000007 \r\n1 1 1 \r\n200000005 333333339 333333339 \r\n500000005 880952391 801587311 781746041 789304620 \r\n"
            ]
        ],
        "private_cases": []
    }
]