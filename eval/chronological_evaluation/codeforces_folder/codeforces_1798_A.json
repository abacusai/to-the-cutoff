[
    {
        "name": "Showstopper",
        "description": "You are given two arrays \n    a_1, a_2, \n    \u2026, a_n\n and \n    b_1, b_2,\n    \n    \u2026, b_n\n. In one operation, you can choose any integer \n    i\n from\n\n    1\n to \n    n\n and swap the numbers \n    a_i\n and \n    b_i\n. Determine\nwhether, after using any (possibly zero) number of operations, the following\ntwo conditions can be satisfied simultaneously: \n    a_n = \n    max(a_1, a_2,\n    \n    \u2026, a_n)\n, \n    b_n = \n    max(b_1, b_2, \n    \u2026, b_n)\n. Here\n\n    max(c_1, c_2, \n    \u2026, c_k)\n denotes the maximum number among \n    c_1,\n    c_2, \n    \u2026, c_k\n. For example, \n    max(3, 5, 4) = 5\n, \n    max(1, 7,\n    7) = 7\n, \n    max(6, 2) = 6\n. Input Each test contains multiple test\ncases. The first line contains the number of test cases \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 200\n). The description of the test cases follows. The first line of\neach test case contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n) \u2014\nthe length of the arrays. The second line of each test case contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 100\n) \u2014\nelements of the first array. The third line of each test case contains \n    n\n\nintegers \n    b_1, b_2, \n    \u2026, b_n\n (\n    1 \n    \u2264 b_i \n    \u2264 100\n) \u2014\nelements of the second array. Output For each test case, print \"Yes\" if after\nusing any (possibly zero) number of operations the conditions described above\nare satisfied. Otherwise, print \"No\". You can output the answer in any case\n(upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will\nbe recognized as positive responses. Example Input 7 3 7 9 7 7 6 9 4 10 10 15\n15 10 16 15 15 2 100 99 99 100 1 1 1 9 1 2 3 4 5 6 7 8 9 9 9 9 9 9 9 6 6 6 7 1\n1 2 2 1 1 2 1 2 1 2 1 2 1 2 30 4 5 30 Output Yes No Yes Yes Yes No No Note In\nthe first test case, you can swap the numbers \n    a_3\n and \n    b_3\n, after\nwhich the array \n    a\n becomes equal to \n    [7, 9, 9]\n, and the array\n\n    b\n becomes equal to \n    [7, 6, 7]\n, and both conditions are met. In the\nsecond test case, it can be proved that it is impossible to satisfy both\nconditions. In the third test case, you can swap the numbers \n    a_1\n and\n\n    b_1\n, after which the array \n    a\n becomes equal to \n    [99, 99]\n, and\nthe array \n    b\n becomes equal to \n    [100, 100]\n, and both conditions are\nsatisfied. In fifth test case, you can swap \n    a_7\n and \n    b_7\n, \n    a_8\n\nand \n    b_8\n, \n    a_9\n and \n    b_9\n, after which the array \n    a\n becomes\nequal to \n    [1, 2, 3, 4, 5, 6, 6, 6, 6]\n, and the array \n    b\n becomes\nequal to \n    [9, 9, 9, 9, 9, 9, 7, 8, 9]\n, and both conditions are satisfied.\n\n",
        "cf_contest_id": 1798,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n3\r\n7 9 7\r\n7 6 9\r\n4\r\n10 10 15 15\r\n10 16 15 15\r\n2\r\n100 99\r\n99 100\r\n1\r\n1\r\n1\r\n9\r\n1 2 3 4 5 6 7 8 9\r\n9 9 9 9 9 9 6 6 6\r\n7\r\n1 1 2 2 1 1 2\r\n1 2 1 2 1 2 1\r\n2\r\n30 4\r\n5 30\r\n",
                "Yes\r\nNo\r\nYes\r\nYes\r\nYes\r\nNo\r\nNo\r\n"
            ]
        ],
        "private_cases": []
    }
]