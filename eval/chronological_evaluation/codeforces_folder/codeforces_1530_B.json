[
    {
        "name": "Putting Plates",
        "description": "To celebrate your birthday you have prepared a festive table! Now you want to\nseat as many guests as possible. The table can be represented as a rectangle\nwith height \n    h\n and width \n    w\n, divided into \n    h \n    \u00d7 w\n cells.\nLet \n    (i, j)\n denote the cell in the \n    i\n-th row and the \n    j\n-th\ncolumn of the rectangle (\n    1 \n    \u2264 i \n    \u2264 h\n; \n    1 \n    \u2264 j \n    \u2264 w\n).\nInto each cell of the table you can either put a plate or keep it empty. As\neach guest has to be seated next to their plate, you can only put plates on\nthe edge of the table \u2014 into the first or the last row of the rectangle, or\ninto the first or the last column. Formally, for each cell \n    (i, j)\n you\nput a plate into, at least one of the following conditions must be satisfied:\n\n    i = 1\n, \n    i = h\n, \n    j = 1\n, \n    j = w\n. To make the guests\ncomfortable, no two plates must be put into cells that have a common side or\ncorner. In other words, if cell \n    (i, j)\n contains a plate, you can't put\nplates into cells \n    (i - 1, j)\n, \n    (i, j - 1)\n, \n    (i + 1, j)\n, \n    (i,\n    j + 1)\n, \n    (i - 1, j - 1)\n, \n    (i - 1, j + 1)\n, \n    (i + 1, j - 1)\n,\n\n    (i + 1, j + 1)\n. Put as many plates on the table as possible without\nviolating the rules above. Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases. Each of the\nfollowing \n    t\n lines describes one test case and contains two integers\n\n    h\n and \n    w\n (\n    3 \n    \u2264 h, w \n    \u2264 20\n) \u2014 the height and the width\nof the table. Output For each test case, print \n    h\n lines containing\n\n    w\n characters each. Character \n    j\n in line \n    i\n must be equal to\n\n    1\n if you are putting a plate into cell \n    (i, j)\n, and \n    0\n\notherwise. If there are multiple answers, print any. All plates must be put on\nthe edge of the table. No two plates can be put into cells that have a common\nside or corner. The number of plates put on the table under these conditions\nmust be as large as possible. You are allowed to print additional empty lines.\nExample Input 3 3 5 4 4 5 6 Output 10101 00000 10101 0100 0001 1000 0010\n010101 000000 100001 000000 101010 Note For the first test case, example\noutput contains the only way to put \n    6\n plates on the table. For the\nsecond test case, there are many ways to put \n    4\n plates on the table,\nexample output contains one of them. Putting more than \n    6\n plates in the\nfirst test case or more than \n    4\n plates in the second test case is\nimpossible.\n\n",
        "cf_contest_id": 1530,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n3 5\r\n4 4\r\n5 6\r\n",
                "10101 00000 10101\r\n1010 0000 0000 1010\r\n101010 000000 100001 000000 101010\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n3 3\r\n",
                "101 000 101\r\n"
            ],
            [
                "4\r\n5 5\r\n5 6\r\n6 5\r\n6 6\r\n",
                "10101 00000 10001 00000 10101\r\n101010 000000 100001 000000 101010\r\n10101 00000 10001 00000 00000 10101\r\n101010 000000 100001 000000 000000 101010\r\n"
            ]
        ]
    }
]