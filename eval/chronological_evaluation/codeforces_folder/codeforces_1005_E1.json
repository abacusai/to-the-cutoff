[
    {
        "name": "Median on Segments (Permutations Edition)",
        "description": "You are given a permutation \n    p_1, p_2, \n    \u2026, p_n\n. A permutation of\nlength \n    n\n is a sequence such that each integer between \n    1\n and\n\n    n\n occurs exactly once in the sequence. Find the number of pairs of\nindices \n    (l, r)\n (\n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 n\n) such that the value of\nthe median of \n    p_l, p_l+1, \n    \u2026, p_r\n is exactly the given number\n\n    m\n. The median of a sequence is the value of the element which is in the\nmiddle of the sequence after sorting it in non-decreasing order. If the length\nof the sequence is even, the left of two middle elements is used. For example,\nif \n    a=[4, 2, 7, 5]\n then its median is \n    4\n since after sorting the\nsequence, it will look like \n    [2, 4, 5, 7]\n and the left of two middle\nelements is equal to \n    4\n. The median of \n    [7, 1, 2, 9, 6]\n equals\n\n    6\n since after sorting, the value \n    6\n will be in the middle of the\nsequence. Write a program to find the number of pairs of indices \n    (l, r)\n\n(\n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 n\n) such that the value of the median of \n    p_l,\n    p_l+1, \n    \u2026, p_r\n is exactly the given number \n    m\n. Input The first\nline contains integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264\n    2\n    \u00b710^5\n, \n    1 \n    \u2264 m \n    \u2264 n\n) \u2014 the length of the given sequence\nand the required value of the median. The second line contains a permutation\n\n    p_1, p_2, \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n). Each integer between\n\n    1\n and \n    n\n occurs in \n    p\n exactly once. Output Print the required\nnumber. Examples Input 5 4 2 4 5 3 1 Output 4 Input 5 5 1 2 3 4 5 Output 1\nInput 15 8 1 15 2 14 3 13 4 8 12 5 11 6 10 7 9 Output 48 Note In the first\nexample, the suitable pairs of indices are: \n    (1, 3)\n, \n    (2, 2)\n, \n    (2,\n    3)\n and \n    (2, 4)\n.\n\n",
        "cf_contest_id": 1005,
        "cf_index": "E1",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4\r\n2 4 5 3 1\r\n",
                "4\r\n"
            ],
            [
                "5 5\r\n1 2 3 4 5\r\n",
                "1\r\n"
            ],
            [
                "15 8\r\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\r\n",
                "48\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "2 1\r\n1 2\r\n",
                "2\r\n"
            ],
            [
                "2 1\r\n2 1\r\n",
                "2\r\n"
            ],
            [
                "2 2\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "2 2\r\n2 1\r\n",
                "1\r\n"
            ],
            [
                "3 1\r\n1 2 3\r\n",
                "2\r\n"
            ],
            [
                "3 1\r\n1 3 2\r\n",
                "2\r\n"
            ],
            [
                "3 1\r\n2 1 3\r\n",
                "3\r\n"
            ],
            [
                "3 1\r\n2 3 1\r\n",
                "2\r\n"
            ],
            [
                "3 1\r\n3 1 2\r\n",
                "3\r\n"
            ],
            [
                "3 1\r\n3 2 1\r\n",
                "2\r\n"
            ],
            [
                "5 2\r\n2 1 3 4 5\r\n",
                "3\r\n"
            ],
            [
                "6 3\r\n3 6 1 4 2 5\r\n",
                "6\r\n"
            ],
            [
                "7 4\r\n1 7 6 4 2 3 5\r\n",
                "10\r\n"
            ],
            [
                "8 7\r\n2 3 6 8 7 5 4 1\r\n",
                "4\r\n"
            ],
            [
                "9 9\r\n6 4 8 5 1 7 2 9 3\r\n",
                "1\r\n"
            ],
            [
                "10 1\r\n6 9 8 10 4 3 7 1 5 2\r\n",
                "3\r\n"
            ],
            [
                "11 2\r\n9 4 7 5 11 1 3 8 10 2 6\r\n",
                "3\r\n"
            ],
            [
                "12 3\r\n6 4 3 7 8 10 1 2 11 5 12 9\r\n",
                "4\r\n"
            ],
            [
                "14 5\r\n13 14 5 11 3 2 10 8 12 9 6 1 7 4\r\n",
                "10\r\n"
            ],
            [
                "100 1\r\n78 52 95 76 96 49 53 59 77 100 64 11 9 48 15 17 44 46 21 54 39 68 43 4 32 28 73 6 16 62 72 84 65 86 98 75 33 45 25 3 91 82 2 92 63 88 7 50 97 93 14 22 20 42 60 55 80 85 29 34 56 71 83 38 26 47 90 70 51 41 40 31 37 12 35 99 67 94 1 87 57 8 61 19 23 79 36 18 66 74 5 27 81 69 24 58 13 10 89 30\r\n",
                "3\r\n"
            ],
            [
                "100 50\r\n2 4 82 12 47 63 52 91 87 45 53 1 17 25 64 50 9 13 22 54 21 30 43 24 38 33 68 11 41 78 99 23 28 18 58 67 79 10 71 56 49 61 26 29 59 20 90 74 5 75 89 8 39 95 72 42 66 98 44 32 88 35 92 3 97 55 65 51 77 27 81 76 84 69 73 85 19 46 62 100 60 37 7 36 57 6 14 83 40 48 16 70 96 15 31 93 80 86 94 34\r\n",
                "182\r\n"
            ],
            [
                "100 100\r\n70 54 10 72 81 84 56 15 27 19 43 100 49 44 52 33 63 40 95 17 58 2 51 39 22 18 82 1 16 99 32 29 24 94 9 98 5 37 47 14 42 73 41 31 79 64 12 6 53 26 68 67 89 13 90 4 21 93 46 74 75 88 66 57 23 7 25 48 92 62 30 8 50 61 38 87 71 34 97 28 80 11 60 91 3 35 86 96 36 20 59 65 83 45 76 77 78 69 85 55\r\n",
                "1\r\n"
            ]
        ]
    }
]