[
    {
        "name": "Sliding Doors",
        "description": "Imagine that you are the CEO of a big old-fashioned company. Unlike any modern\nand progressive company (such as JetBrains), your company has a dress code.\nThat's why you have already allocated a spacious room for your employees where\nthey can change their clothes. Moreover, you've already purchased an\n\n    m\n-compartment wardrobe, so the \n    i\n-th employee can keep his/her\nbelongings in the \n    i\n-th cell (of course, all compartments have equal\nwidths). The issue has occurred: the wardrobe has sliding doors! More\nspecifically, the wardrobe has \n    n\n doors (numbered from left to right) and\nthe \n    j\n-th door has width equal to \n    a_j\n wardrobe's cells. The\nwardrobe has single rails so that no two doors can slide past each other.\nExtremely schematic example of a wardrobe: \n    m=9\n, \n    n=2\n, \n    a_1=2\n,\n\n    a_2=3\n. The problem is as follows: sometimes to open some cells you must\nclose some other cells (since all doors are placed on the single track). For\nexample, if you have a \n    4\n-compartment wardrobe (i.e. \n    m=4\n) with\n\n    n=2\n one-cell doors (i.e. \n    a_1=a_2=1\n) and you need to open the\n\n    1\n-st and the \n    3\n-rd cells, you have to close the \n    2\n-nd and the\n\n    4\n-th cells. As CEO, you have a complete schedule for the next \n    q\n\ndays. Now you are wondering: is it possible that all employees who will come\non the \n    k\n-th day can access their cells simultaneously? Input The first\nline contains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n, \n    1 \n    \u2264 m \n    \u2264 4 \n    \u00b7 10^5\n) \u2014 the number of doors and\ncompartments respectively. The second line contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 m\n, \n    \u2211a_i\n    \u2264 m\n) \u2014\nthe corresponding widths of the doors. The third line contains a single\ninteger \n    q\n (\n    1 \n    \u2264 q \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of days\nyou have to process. The next \n    q\n lines describe schedule of each day.\nEach schedule is represented as an integer \n    c_k\n followed by \n    c_k\n\nintegers \n    w_1, w_2, \n    \u2026, w_c_k\n (\n    1 \n    \u2264 c_k \n    \u2264 2 \n    \u00b7\n    10^5\n, \n    1 \n    \u2264 w_1 < w_2 < \n    \u2026 < w_c_k\n    \u2264 m\n) \u2014 the number of\nemployees who will come on the \n    k\n-th day, and their indices in ascending\norder. It's guaranteed that \n    \u2211c_k\n doesn't exceed \n    2 \n    \u00b7\n    10^5\n. Output Print \n    q\n answers. Each answer is \"YES\" or \"NO\" (case\ninsensitive). Print \"YES\" if it is possible, that all employees on the\ncorresponding day can access their compartments simultaneously. Example Input\n3 10 2 3 2 6 1 5 2 1 10 2 2 9 2 5 6 3 1 7 8 4 1 2 3 4 Output YES YES NO NO YES\nNO\n\n",
        "cf_contest_id": 1170,
        "cf_index": "E",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "binary search"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 10\r\n2 3 2\r\n6\r\n1 5\r\n2 1 10\r\n2 2 9\r\n2 5 6\r\n3 1 7 8\r\n4 1 2 3 4\r\n",
                "YES\nYES\nNO\nNO\nYES\nNO\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n1\r\n1 1\r\n",
                "NO\n"
            ],
            [
                "10 30\r\n1 2 1 1 5 1 1 3 4 1\r\n10\r\n1 22\r\n2 3 9\r\n1 15\r\n10 2 10 11 13 15 16 17 20 26 28\r\n1 24\r\n7 1 4 5 8 13 24 30\r\n2 8 16\r\n3 20 25 29\r\n1 19\r\n2 3 4\r\n",
                "YES\nYES\nYES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\n"
            ],
            [
                "10 30\r\n1 2 1 2 1 1 3 3 1 5\r\n10\r\n3 2 5 11\r\n1 12\r\n6 1 14 16 20 23 29\r\n8 1 2 7 10 15 21 22 25\r\n1 24\r\n1 20\r\n2 2 14\r\n1 12\r\n3 4 12 24\r\n4 1 8 16 30\r\n",
                "YES\nYES\nYES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\n"
            ],
            [
                "10 30\r\n3 1 1 3 2 3 1 4 1 1\r\n10\r\n1 8\r\n2 5 27\r\n1 19\r\n1 11\r\n1 24\r\n10 2 4 5 6 9 10 11 21 22 26\r\n1 30\r\n5 4 18 21 26 28\r\n2 9 28\r\n6 3 6 8 16 21 29\r\n",
                "YES\nYES\nYES\nYES\nYES\nNO\nYES\nYES\nYES\nNO\n"
            ],
            [
                "10 30\r\n3 1 1 3 2 1 3 1 1 4\r\n10\r\n1 11\r\n1 28\r\n4 3 9 11 20\r\n1 15\r\n2 1 30\r\n2 6 28\r\n1 13\r\n3 3 15 29\r\n14 4 5 6 8 9 10 13 16 17 21 22 23 26 27\r\n1 18\r\n",
                "YES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nNO\nYES\n"
            ],
            [
                "10 30\r\n3 2 1 3 1 2 1 3 1 3\r\n10\r\n3 7 16 17\r\n1 12\r\n4 2 17 18 22\r\n7 6 9 16 20 22 24 26\r\n2 2 3\r\n2 10 18\r\n3 21 24 25\r\n2 6 26\r\n3 2 8 27\r\n3 1 12 25\r\n",
                "YES\nYES\nYES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\n"
            ],
            [
                "10 30\r\n2 3 2 1 6 1 1 2 1 1\r\n10\r\n3 13 20 24\r\n4 8 12 18 24\r\n2 1 20\r\n2 21 24\r\n2 19 23\r\n4 5 22 23 27\r\n1 28\r\n2 21 26\r\n8 3 6 8 13 17 24 26 30\r\n2 15 30\r\n",
                "YES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\nNO\nYES\n"
            ],
            [
                "10 30\r\n1 1 1 3 4 1 2 4 2 1\r\n10\r\n6 1 5 10 13 20 29\r\n2 7 29\r\n1 10\r\n6 4 13 17 18 20 21\r\n1 29\r\n2 23 24\r\n3 9 28 30\r\n5 5 9 14 20 28\r\n3 8 13 20\r\n1 4\r\n",
                "YES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\n"
            ],
            [
                "10 30\r\n1 1 1 3 1 1 4 3 3 2\r\n10\r\n8 5 7 12 13 17 18 19 29\r\n1 23\r\n1 23\r\n2 2 15\r\n1 2\r\n3 5 11 19\r\n5 5 10 11 18 28\r\n3 8 9 28\r\n4 1 4 16 25\r\n2 6 27\r\n",
                "NO\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\n"
            ],
            [
                "10 30\r\n2 1 1 2 1 2 1 6 3 1\r\n10\r\n3 1 2 13\r\n2 7 17\r\n4 1 3 9 13\r\n2 15 23\r\n4 1 3 25 29\r\n1 12\r\n2 16 20\r\n4 6 13 15 16\r\n2 9 25\r\n6 6 8 12 17 20 23\r\n",
                "YES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nNO\n"
            ],
            [
                "10 30\r\n2 1 1 2 2 3 3 2 1 3\r\n10\r\n1 27\r\n8 2 3 6 13 16 26 27 30\r\n4 6 10 22 25\r\n3 1 16 23\r\n3 4 9 12\r\n1 22\r\n3 6 12 24\r\n1 14\r\n4 6 9 14 15\r\n2 24 26\r\n",
                "YES\nNO\nYES\nYES\nYES\nYES\nYES\nYES\nYES\nYES\n"
            ],
            [
                "1 2\r\n1\r\n3\r\n1 1\r\n1 2\r\n2 1 2\r\n",
                "YES\nYES\nNO\n"
            ],
            [
                "2 2\r\n1 1\r\n3\r\n1 1\r\n1 2\r\n2 1 2\r\n",
                "NO\nNO\nNO\n"
            ],
            [
                "1 3\r\n1\r\n7\r\n1 1\r\n1 2\r\n1 3\r\n2 1 2\r\n2 1 3\r\n2 2 3\r\n3 1 2 3\r\n",
                "YES\nYES\nYES\nYES\nYES\nYES\nNO\n"
            ],
            [
                "1 3\r\n2\r\n7\r\n1 1\r\n1 2\r\n1 3\r\n2 1 2\r\n2 1 3\r\n2 2 3\r\n3 1 2 3\r\n",
                "YES\nNO\nYES\nNO\nNO\nNO\nNO\n"
            ],
            [
                "1 3\r\n3\r\n7\r\n1 1\r\n1 2\r\n1 3\r\n2 1 2\r\n2 1 3\r\n2 2 3\r\n3 1 2 3\r\n",
                "NO\nNO\nNO\nNO\nNO\nNO\nNO\n"
            ],
            [
                "2 3\r\n1 1\r\n7\r\n1 1\r\n1 2\r\n1 3\r\n2 1 2\r\n2 1 3\r\n2 2 3\r\n3 1 2 3\r\n",
                "YES\nYES\nYES\nNO\nNO\nNO\nNO\n"
            ],
            [
                "2 3\r\n1 2\r\n7\r\n1 1\r\n1 2\r\n1 3\r\n2 1 2\r\n2 1 3\r\n2 2 3\r\n3 1 2 3\r\n",
                "NO\nNO\nNO\nNO\nNO\nNO\nNO\n"
            ],
            [
                "2 3\r\n2 1\r\n7\r\n1 1\r\n1 2\r\n1 3\r\n2 1 2\r\n2 1 3\r\n2 2 3\r\n3 1 2 3\r\n",
                "NO\nNO\nNO\nNO\nNO\nNO\nNO\n"
            ],
            [
                "3 3\r\n1 1 1\r\n7\r\n1 1\r\n1 2\r\n1 3\r\n2 1 2\r\n2 1 3\r\n2 2 3\r\n3 1 2 3\r\n",
                "NO\nNO\nNO\nNO\nNO\nNO\nNO\n"
            ],
            [
                "1 2\r\n2\r\n3\r\n1 1\r\n1 2\r\n2 1 2\r\n",
                "NO\nNO\nNO\n"
            ]
        ]
    }
]