[
    {
        "name": "Guess the Cycle Size",
        "description": "This is an interactive problem. I want to play a game with you... We hid from\nyou a cyclic graph of \n    n\n vertices (\n    3 \n    \u2264 n \n    \u2264 10^18\n). A\ncyclic graph is an undirected graph of \n    n\n vertices that form one cycle.\nEach vertex belongs to the cycle, i.e. the length of the cycle (the number of\nedges in it) is exactly \n    n\n. The order of the vertices in the cycle is\narbitrary. You can make queries in the following way: \"? a b\" where \n    1 \n    \u2264\n    a, b \n    \u2264 10^18\n and \n    a \n    \u2260 b\n. In response to the query, the\ninteractor outputs on a separate line the length of random of two paths from\nvertex \n    a\n to vertex \n    b\n, or -1 if \n    max(a, b) > n\n. The\ninteractor chooses one of the two paths with equal probability. The length of\nthe path \u2014is the number of edges in it.You win if you guess the number of\nvertices in the hidden graph (number \n    n\n) by making no more than \n    50\n\nqueries. Note that the interactor is implemented in such a way that for any\nordered pair \n    (a, b)\n, it always returns the same value for query \"? a b\",\nno matter how many such queries. Note that the \"? b a\" query may be answered\ndifferently by the interactor. The vertices in the graph are randomly placed,\nand their positions are fixed in advance. Hacks are forbidden in this problem.\nThe number of tests the jury has is \n    50\n. Interaction You can make no more\nthan \n    50\n of queries. To make a query, output on a separate line: \"? a b\",\nwhere \n    1 \n    \u2264 a, b \n    \u2264 10^18\n and \n    a \n    \u2260 b\n. In response to\nthe query, the interactor will output on a separate line the length of a\nrandom simple path from vertex \n    a\n to vertex \n    b\n (not to be confused\nwith the path from \n    b\n to \n    a\n), or \n    -1\n if \n    max(a, b) > n\n.\nThe interactor chooses one of the two paths with equal probability. If your\nprogram gets a number 0 as a result of a query, it means that the verdict for\nyour solution is already defined as \"wrong answer\" (for example, you made more\nthan \n    50\n queries or made an invalid query). In this case, your program\nshould terminate immediately. Otherwise, in this scenario you may get a random\nverdict \"Execution error\", \"Exceeded time limit\" or some other verdict instead\nof \"Wrong answer\". The answer, like queries, print on a separate line. The\noutput of the answer is not counted as a query when counting them. To print\nit, use the following format: \"! n\": the expected size of the hidden graph\n(\n    3 \n    \u2264 n \n    \u2264 10^18\n). After that, your program should terminate.\nAfter the output of the next query, be sure to use stream cleaning functions\nso that some of your output is not left in some buffer. For example, in C++\nyou should use function flush(stdout), in Java call System.out.flush(), in\nPascal flush(output) and stdout.flush() for Python. Note that the interactor\nis implemented in such a way that for any ordered pair \n    (a, b)\n, it always\nreturns the same value for query \"? a b\", no matter how many such queries.\nNote that the \"? b a\" query may be answered differently by the interactor. The\nvertices in the graph are randomly placed, and their positions are fixed in\nadvance. Hacks are forbidden in this problem. The number of tests the jury has\nis \n    50\n. Example Input 1 2 -1 Output ? 1 2 ? 1 3 ? 1 4 ! 3 Note In the\nfirst example, the graph could look like this The lengths of the simple paths\nbetween all pairs of vertices in this case are \n    1\n or \n    2\n. The first\nquery finds out that one of the simple paths from vertex \n    1\n to vertex\n\n    2\n has a length of \n    1\n. With the second query, we find out that one\nof the simple paths from vertex \n    1\n to vertex \n    3\n has length \n    2\n.\nIn the third query, we find out that vertex \n    4\n is not in the graph.\nConsequently, the size of the graph is \n    3\n.\n\n",
        "cf_contest_id": 1729,
        "cf_index": "E",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "interactive",
            "probabilities"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n9195979e279504391c49d2f080c1d8c755d044ca\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n811b528c8d8274a119b9c3f84517f68cbe4ea2f9\r\n",
                "8\r\n"
            ],
            [
                "5\r\nda39a3ee5e6b4b0d3255bfef95601890afd80709\r\n",
                "6\r\n"
            ],
            [
                "6\r\n71c56086d65fc8e4e6b36b13a6d8431f43f35c53\r\n",
                "4\r\n"
            ],
            [
                "7\r\na9e6c18f7e561737ca7a93417c874e3c3b7f44be\r\n",
                "2\r\n"
            ],
            [
                "8\r\n9fc1f8c7f4394eb16069bb3bf4e5be7b958d3b50\r\n",
                "2\r\n"
            ],
            [
                "9\r\n622a6ad5f0a2ddc8874b969ff8e6bf87091fecd5\r\n",
                "6\r\n"
            ],
            [
                "10\r\n9f0be7497dd2f92714bc6f996fc386888ca0360b\r\n",
                "4\r\n"
            ],
            [
                "11\r\nd037df8682e1d913239d2b45ce4277bf06875d79\r\n",
                "4\r\n"
            ],
            [
                "12\r\n18f16b6121e446462edfbb44206a96d39b3221d4\r\n",
                "2\r\n"
            ],
            [
                "13\r\n803f56ada92ab88ec3a9797238e3ec6eb8315c9d\r\n",
                "4\r\n"
            ],
            [
                "14\r\nefa23a1109c06270e02fcbb8bdf05896844971bc\r\n",
                "2\r\n"
            ],
            [
                "15\r\n7e578485622bb7aa868152c1d0dec21f57b92a14\r\n",
                "2\r\n"
            ],
            [
                "100\r\nfd420137054c62b92965daaac085292c603e0278\r\n",
                "4\r\n"
            ],
            [
                "1000\r\ne7044f02c91616251e0abf25874472b1e4975ed3\r\n",
                "4\r\n"
            ],
            [
                "9999\r\nda068fecfbfd0a0cc57f8cf46fa300f35ea82151\r\n",
                "2\r\n"
            ],
            [
                "29191\r\ne968a157ecc37c86c61d8a6d2f793ba51466f0a6\r\n",
                "4\r\n"
            ],
            [
                "665100313\r\nf408f405dbb1b091bf531b380c4380ea2e0fd490\r\n",
                "2\r\n"
            ],
            [
                "121263743\r\n94d790bdecfb668dec7dbfe9c57a350dac28458f\r\n",
                "2\r\n"
            ],
            [
                "536870912\r\n6ca7375edd146715bf0b2d05a9126ec3358a7138\r\n",
                "2\r\n"
            ],
            [
                "402653184\r\n5df3731fd82198c9c8da212339ff67463ed5f588\r\n",
                "2\r\n"
            ],
            [
                "14348907\r\nf0839b99e7e940069b0b4161ebd0fe6c71feb721\r\n",
                "4\r\n"
            ],
            [
                "538657681\r\n16bf9d1bf97ef25dc2649ada0e5b6bbf4b5f4771\r\n",
                "2\r\n"
            ],
            [
                "999999999\r\n22b9bbff1a4f5a6ab71840051ffa97abbdd3fc86\r\n",
                "2\r\n"
            ],
            [
                "1000000000\r\n857f10dbae670f33461bdf95522807964c9f40ba\r\n",
                "2\r\n"
            ],
            [
                "1000000001\r\nf6z73pcerqcd6nn650uh5w006221exjx342uhw1z\r\n",
                "2\r\n"
            ],
            [
                "1000000000000\r\nh514694g9uuiu30g5r59f653001z064kjp20dwxf\r\n",
                "4\r\n"
            ],
            [
                "1312154450968413\r\n0840dt0byzw8780f8uw12179n02n459cw1054119\r\n",
                "2\r\n"
            ],
            [
                "28316254877914571\r\n2w9n8hqsx857469ia1029576lfr1ezn4moqudgf1\r\n",
                "4\r\n"
            ],
            [
                "61892514008225921\r\n2988g70t78b7dk90adlxi877bn6ezzv5ml2421sx\r\n",
                "18\r\n"
            ],
            [
                "74859965623690078\r\nxxtps1bg868vbci3zor2w4w035fqelxl33al1r7m\r\n",
                "6\r\n"
            ],
            [
                "84324836731963974\r\nv942z325l8f56smkn1bsx38f8638lj746h25om98\r\n",
                "2\r\n"
            ],
            [
                "148049067628894320\r\nw3m41saq04tc21z9n492jr1k541g42x6ex0915zo\r\n",
                "4\r\n"
            ],
            [
                "252509062433933439\r\n6lcy7000bc697o839u207m21y1ti3330xim349u9\r\n",
                "4\r\n"
            ],
            [
                "335408923861648766\r\nbm122501o3nd9p96mreqlb2ca2337gld6wpmxkv6\r\n",
                "6\r\n"
            ],
            [
                "339271357282580133\r\n020pry8065h33qmp0l323g6gksakkrk6c43437i9\r\n",
                "2\r\n"
            ],
            [
                "339271357282580134\r\n7sc2n37wnh3xncps3awotx5895823lf1eh8bck0r\r\n",
                "2\r\n"
            ],
            [
                "354979176822804781\r\n5hz4w41961g19g979v668d9fjv07iwob97f0c55h\r\n",
                "2\r\n"
            ],
            [
                "500000000000000000\r\nap0y307tm26lp9im5744emh27j23l5coqa4igi05\r\n",
                "2\r\n"
            ],
            [
                "522842190971407769\r\nn21cz5ipez2yxf3d312i5204tobud2mr0i84p6vw\r\n",
                "2\r\n"
            ],
            [
                "578223549024979436\r\n0f6dcz289k4naz9q3g790mh0ekco537qp56l1kc4\r\n",
                "4\r\n"
            ],
            [
                "585335731211047194\r\n3fhp7bjx9x6188y92uhzf254m309k9396m9e2v18\r\n",
                "4\r\n"
            ],
            [
                "678542714565160267\r\n6919gcv1422kg700qjvv4w9x6r2w0218h7hx9t9p\r\n",
                "4\r\n"
            ],
            [
                "760713023476190622\r\nfvthvrys549j9ql4v75tk46j1nnxtgtad2gh0yls\r\n",
                "4\r\n"
            ],
            [
                "779547118602436424\r\n2931bdd356y3f89af7s9xm93yz4la71828855jw2\r\n",
                "2\r\n"
            ],
            [
                "822981263158260519\r\n46bt47zd4260nt6yzk0n7flxko63d50wdjib7w1c\r\n",
                "4\r\n"
            ],
            [
                "919845427262703496\r\ntqly1u7lh8u52t98c8052824t8667ogy23ou0dyc\r\n",
                "2\r\n"
            ],
            [
                "999999999999999998\r\nsw5np7n5jw646292ww6b1j9igad1312dg1mng96z\r\n",
                "4\r\n"
            ],
            [
                "999999999999999999\r\n79e796841v94ea092dg232a79q2h7lbmg8jf37k5\r\n",
                "2\r\n"
            ],
            [
                "1000000000000000000\r\n6lu3bl6x9u94k60kj11pi7se0s87vz9w517hor7v\r\n",
                "4\r\n"
            ]
        ]
    }
]