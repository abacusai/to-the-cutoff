[
    {
        "name": "Two IP Cameras",
        "description": "You have two IP cameras of the same model. Each camera can take photos\nstarting from some moment of time with a fixed period. You can freely choose\nthe starting moment but you can choose the period only as one of \n    k\n\nvalues \n    p_1, p_2, \n    \u2026, p_k\n which are chosen by the camera's\nmanufacturer. You have \n    n\n moments of interest \n    x_1, x_2, \n    \u2026,\n    x_n\n. You'd like to configure both cameras in such a way that at least one\ncamera will take a photo in each of these moments. Configuring the camera\nmeans setting the moment when it takes the first photo and the gap between two\nconsecutive photos (which should be one of the values \n    p_1, p_2, \n    \u2026,\n    p_k\n). It's not a problem for you that cameras can take photos at other\nmoments of time \u2014 you only care about moments of interest. Input The first\nline contains two integers \n    k\n and \n    n\n (\n    1 \n    \u2264 k \n    \u2264 10^5\n;\n\n    2 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of periods to choose and the number\nof moments of interest. The second line contains \n    k\n integers \n    p_1, p_2,\n    \n    \u2026, p_k\n (\n    1 \n    \u2264 p_1 < p_2 < \n    \u2026 < p_k \n    \u2264 10^6\n) \u2014 the\nperiods to choose in the ascending order. The third line contains \n    n\n\nintegers \n    x_1, x_2, \n    \u2026, x_n\n (\n    1 \n    \u2264 x_1 < x_2 < \n    \u2026 < x_n\n    \n    \u2264 10^6\n) \u2014 the moments of interest in the ascending order. Output Print\nYES (case insensitive) in the first line if there is a way to configure\ncameras. In the second line, print two integers \n    s_1\n and \n    cp_1\n (\n    1\n    \n    \u2264 s_1 \n    \u2264 10^6\n; \n    1 \n    \u2264 cp_1 \n    \u2264 10^6\n; \n    cp_1 \n    \u2208\n    \n    p_1, \n    \u2026, p_k\n) \u2014 the starting moment and the period for the\nfirst camera. The period should be one of the given periods. In the third\nline, print two integers \n    s_2\n and \n    cp_2\n (\n    1 \n    \u2264 s_2 \n    \u2264\n    10^6\n; \n    1 \n    \u2264 cp_2 \n    \u2264 10^6\n; \n    cp_2 \n    \u2208\n    \n    p_1, \n    \u2026,\n    p_k\n) \u2014 the starting moment and the period for the second camera. The\nperiod should be one of the given periods. If there is no way to configure\ncameras, print NO (case insensitive). If there are multiple ways, you may\nprint any of them. Examples Input 3 5 3 5 7 1 4 5 7 12 Output YES 1 3 5 7\nInput 3 2 1 2 3 1 10 Output YES 1 1 10 1 Input 3 4 1 2 3 5 7 9 11 Output YES 5\n1 5 1 Input 3 4 10 20 100 2 3 4 7 Output NO\n\n",
        "cf_contest_id": 1346,
        "cf_index": "G",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 5\r\n3 5 7\r\n1 4 5 7 12\r\n",
                "YES\r\n1 3\n5 7\r\n"
            ],
            [
                "3 2\r\n1 2 3\r\n1 10\r\n",
                "YES\r\n1 1\n10 1\r\n"
            ],
            [
                "3 4\r\n1 2 3\r\n5 7 9 11\r\n",
                "YES\r\n5 1\n1 1\r\n"
            ],
            [
                "3 4\r\n10 20 100\r\n2 3 4 7\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 2\r\n1000000\r\n999999 1000000\r\n",
                "YES\r\n999999 1000000\n1000000 1000000\r\n"
            ],
            [
                "4 6\r\n2 5 6 9\r\n1 13 19 40 77 91\r\n",
                "YES\r\n1 2\n40 2\r\n"
            ],
            [
                "3 9\r\n3 5 41\r\n1 16 31 42 46 61 66 83 124\r\n",
                "YES\r\n1 5\n42 41\r\n"
            ],
            [
                "4 6\r\n3 5 11 13\r\n1 17 32 144 157 170\r\n",
                "YES\r\n17 3\n1 13\r\n"
            ]
        ]
    }
]