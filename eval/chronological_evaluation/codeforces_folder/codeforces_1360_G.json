[
    {
        "name": "A/B Matrix",
        "description": "You are given four positive integers \n    n\n, \n    m\n, \n    a\n, \n    b\n (\n    1\n    \n    \u2264 b \n    \u2264 n \n    \u2264 50\n; \n    1 \n    \u2264 a \n    \u2264 m \n    \u2264 50\n). Find any such\nrectangular matrix of size \n    n \n    \u00d7 m\n that satisfies all of the\nfollowing conditions: each row of the matrix contains exactly \n    a\n ones;\neach column of the matrix contains exactly \n    b\n ones; all other elements\nare zeros. If the desired matrix does not exist, indicate this. For example,\nfor \n    n=3\n, \n    m=6\n, \n    a=2\n, \n    b=1\n, there exists a matrix\nsatisfying the conditions above: \n    \n\n    0     1     0     0     0    \n    1 \n    \n    \n     1     0     0     1     0     0 \n    \n    \n     0     0     1     0     1     0\n\n    \n Input The first line contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    1000\n) \u2014 the number of test cases. Then \n    t\n test cases follow. Each test\ncase is described by four positive integers \n    n\n, \n    m\n, \n    a\n, \n    b\n\n(\n    1 \n    \u2264 b \n    \u2264 n \n    \u2264 50\n; \n    1 \n    \u2264 a \n    \u2264 m \n    \u2264 50\n), where\n\n    n\n and \n    m\n are the sizes of the matrix, and \n    a\n and \n    b\n are\nthe number of ones for rows and columns, respectively. Output For each test\ncase print: \"YES\" (without quotes) and the required matrix (if there are\nseveral answers, print any) if it exists, or \"NO\" (without quotes) if it does\nnot exist. To print the matrix \n    n \n    \u00d7 m\n, print \n    n\n rows, each of\nwhich consists of \n    m\n numbers \n    0\n or \n    1\n describing a row of the\nmatrix. Numbers must be printed without spaces. Example Input 5 3 6 2 1 2 2 2\n1 2 2 2 2 4 4 2 2 2 1 1 2 Output YES 010001 100100 001010 NO YES 11 11 YES\n1100 1100 0011 0011 YES 1 1\n\n",
        "cf_contest_id": 1360,
        "cf_index": "G",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3 6 2 1\r\n2 2 2 1\r\n2 2 2 2\r\n4 4 2 2\r\n2 1 1 2\r\n",
                "YES\r\n110000\r\n001100\r\n000011\r\nNO\r\nYES\r\n11\r\n11\r\nYES\r\n1100\r\n0011\r\n1100\r\n0011\r\nYES\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": []
    }
]