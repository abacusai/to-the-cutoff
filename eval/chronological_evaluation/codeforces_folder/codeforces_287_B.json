[
    {
        "name": "Pipeline",
        "description": "Vova, the Ultimate Thule new shaman, wants to build a pipeline. As there are\nexactly n houses in Ultimate Thule, Vova wants the city to have exactly n\npipes, each such pipe should be connected to the water supply. A pipe can be\nconnected to the water supply if there's water flowing out of it. Initially\nVova has only one pipe with flowing water. Besides, Vova has several\nsplitters. A splitter is a construction that consists of one input (it can be\nconnected to a water pipe) and x output pipes. When a splitter is connected to\na water pipe, water flows from each output pipe. You can assume that the\noutput pipes are ordinary pipes. For example, you can connect water supply to\nsuch pipe if there's water flowing out from it. At most one splitter can be\nconnected to any water pipe. The figure shows a 4-output splitter Vova has one\nsplitter of each kind: with 2, 3, 4, ..., k outputs. Help Vova use the minimum\nnumber of splitters to build the required pipeline or otherwise state that\nit's impossible. Vova needs the pipeline to have exactly n pipes with flowing\nout water. Note that some of those pipes can be the output pipes of the\nsplitters. Input The first line contains two space-separated integers n and k\n(1 \u2264 n \u2264 10^18, 2 \u2264 k \u2264 10^9). Please, do not use the \nor write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams\nor the \nsplitters needed to build the pipeline. If it is impossible to build a\npipeline with the given splitters, print -1. Examples Input 4 3 Output 2 Input\n5 5 Output 1 Input 8 4 Output -1\n\n",
        "cf_contest_id": 287,
        "cf_index": "B",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "math"
        ],
        "time_limit_seconds": 0.4,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3\r\n",
                "2"
            ],
            [
                "5 5\r\n",
                "1"
            ],
            [
                "8 4\r\n",
                "-1"
            ]
        ],
        "private_cases": [
            [
                "1000000000000000000 1000000000\r\n",
                "-1"
            ],
            [
                "499999998500000001 1000000000\r\n",
                "999955279"
            ],
            [
                "499999998500000000 1000000000\r\n",
                "999955279"
            ],
            [
                "499999999500000000 1000000000\r\n",
                "999999998"
            ],
            [
                "499999999500000001 1000000000\r\n",
                "999999999"
            ],
            [
                "525 34\r\n",
                "25"
            ],
            [
                "223265034477 726990\r\n",
                "440662"
            ],
            [
                "15597035789572051 185473109\r\n",
                "128849771"
            ],
            [
                "499999999500000002 1000000000\r\n",
                "-1"
            ],
            [
                "1 1000000000\r\n",
                "0"
            ],
            [
                "1000000000 2\r\n",
                "-1"
            ],
            [
                "462498979 204468265\r\n",
                "3"
            ],
            [
                "2107921 542531\r\n",
                "4"
            ],
            [
                "131 49\r\n",
                "3"
            ],
            [
                "20171878992939541 200857557\r\n",
                "200853401"
            ],
            [
                "399812655947 894219\r\n",
                "893030"
            ],
            [
                "93 17\r\n",
                "8"
            ],
            [
                "1000000000 999999999\r\n",
                "2"
            ],
            [
                "100000000000000000 1000000000\r\n",
                "105572810"
            ]
        ]
    }
]