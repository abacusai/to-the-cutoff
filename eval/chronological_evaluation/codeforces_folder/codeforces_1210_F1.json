[
    {
        "name": "Marek and Matching (easy version)",
        "description": "This is an easier version of the problem. In this version, \n    n \n    \u2264 6\n.\nMarek is working hard on creating strong testcases to his new algorithmic\nproblem. You want to know what it is? Nah, we're not telling you. However, we\ncan tell you how he generates the testcases. Marek chooses an integer \n    n\n\nand \n    n^2\n integers \n    p_ij\n (\n    1 \n    \u2264 i \n    \u2264 n\n, \n    1 \n    \u2264 j\n    \n    \u2264 n\n). He then generates a random bipartite graph with \n    2n\n\nvertices. There are \n    n\n vertices on the left side: \n    \u2113_1, \n    \u2113_2,\n    \n    \u2026, \n    \u2113_n\n, and \n    n\n vertices on the right side: \n    r_1, r_2,\n    \n    \u2026, r_n\n. For each \n    i\n and \n    j\n, he puts an edge between\nvertices \n    \u2113_i\n and \n    r_j\n with probability \n    p_ij\n percent.\nIt turns out that the tests will be strong only if a perfect matching exists\nin the generated graph. What is the probability that this will occur? It can\nbe shown that this value can be represented as \n    P/Q\n where\n\n    P\n and \n    Q\n are coprime integers and \n    Q \n    \u2261 0\n    \n    10^9+7\n. Let \n    Q^-1\n be an integer for which \n    Q \n    \u00b7\n    Q^-1\n    \u2261 1 \n    10^9+7\n. Print the value of \n    P \n    \u00b7\n    Q^-1\n modulo \n    10^9+7\n. Input The first line of the input contains a\nsingle integer \n    n\n (\n    1 \n    \u2264 \ud835\udc27 \n    \u2264 6\n). The following\n\n    n\n lines describe the probabilities of each edge appearing in the graph.\nThe \n    i\n-th of the lines contains \n    n\n integers \n    p_i1, p_i2,\n    \n    \u2026, p_in\n (\n    0 \n    \u2264 p_ij\n    \u2264 100\n); \n    p_ij\n denotes the\nprobability, in percent, of an edge appearing between \n    \u2113_i\n and\n\n    r_j\n. Output Print a single integer \u2014 the probability that the perfect\nmatching exists in the bipartite graph, written as \n    P \n    \u00b7 Q^-1\n    10^9+7\n for \n    P\n, \n    Q\n defined above. Examples Input 2 50 50\n50 50 Output 937500007 Input 3 3 1 4 1 5 9 2 6 5 Output 351284554 Note In the\nfirst sample test, each of the \n    16\n graphs below is equally probable. Out\nof these, \n    7\n have a perfect matching: Therefore, the probability is equal\nto \n    7/16\n. As \n    16 \n    \u00b7 562\n     500\n     004 = 1\n    \n    10^9+7\n, the answer to the testcase is \n    7 \n    \u00b7\n    562\n     500\n     004 \n    (10^9+7) = 937\n     500\n     007\n.\n\n",
        "cf_contest_id": 1210,
        "cf_index": "F1",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "probabilities"
        ],
        "time_limit_seconds": 7.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n50 50\r\n50 50\r\n",
                "937500007\r\n"
            ],
            [
                "3\r\n3 1 4\r\n1 5 9\r\n2 6 5\r\n",
                "351284554\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1\r\n100\r\n",
                "1\r\n"
            ],
            [
                "1\r\n69\r\n",
                "330000003\r\n"
            ],
            [
                "4\r\n0 100 0 100\r\n100 0 100 0\r\n0 100 0 100\r\n100 0 100 0\r\n",
                "1\r\n"
            ],
            [
                "2\r\n95 61\r\n53 99\r\n",
                "5751951\r\n"
            ],
            [
                "3\r\n26 55 1\r\n44 2 83\r\n9 79 71\r\n",
                "452769275\r\n"
            ],
            [
                "4\r\n25 49 16 56\r\n41 31 89 78\r\n50 3 80 96\r\n93 12 67 57\r\n",
                "986898331\r\n"
            ],
            [
                "5\r\n58 42 65 0 12\r\n80 0 11 64 89\r\n21 92 11 12 10\r\n88 50 94 5 31\r\n2 53 82 90 21\r\n",
                "224596377\r\n"
            ],
            [
                "6\r\n91 2 13 12 50 27\r\n13 44 43 40 62 53\r\n98 13 55 52 93 12\r\n84 11 8 89 90 31\r\n62 95 79 16 10 12\r\n89 22 95 4 23 16\r\n",
                "458013830\r\n"
            ],
            [
                "6\r\n100 0 0 0 0 0\r\n0 0 100 0 0 0\r\n0 0 0 100 0 0\r\n0 0 0 100 0 0\r\n0 0 0 0 0 100\r\n0 0 0 100 100 100\r\n",
                "0\r\n"
            ],
            [
                "5\r\n7 34 34 12 16\r\n28 8 15 70 11\r\n20 26 36 5 23\r\n12 55 82 63 41\r\n12 53 54 32 46\r\n",
                "188514656\r\n"
            ],
            [
                "6\r\n58 7 34 10 24 28\r\n26 21 20 10 28 36\r\n34 75 9 3 25 3\r\n9 33 54 7 16 70\r\n31 62 15 7 17 32\r\n32 82 37 66 32 24\r\n",
                "265772640\r\n"
            ],
            [
                "6\r\n86 47 4 5 9 26\r\n63 99 17 38 15 0\r\n30 22 0 37 19 75\r\n16 4 19 31 27 17\r\n57 1 61 1 55 36\r\n21 3 3 4 4 0\r\n",
                "596541516\r\n"
            ],
            [
                "6\r\n55 82 77 53 91 98\r\n94 92 62 34 82 69\r\n97 33 39 93 90 86\r\n79 79 64 75 94 52\r\n78 92 70 92 42 88\r\n73 71 91 21 87 72\r\n",
                "829000907\r\n"
            ],
            [
                "5\r\n67 43 91 100 62\r\n96 100 51 65 96\r\n68 86 58 56 81\r\n96 93 89 78 74\r\n76 70 58 91 93\r\n",
                "789815481\r\n"
            ],
            [
                "4\r\n96 87 74 37\r\n52 59 97 18\r\n93 82 70 94\r\n54 60 23 59\r\n",
                "794990212\r\n"
            ],
            [
                "6\r\n69 85 49 90 88 86\r\n77 96 13 42 51 68\r\n68 92 85 68 87 45\r\n66 47 92 78 100 96\r\n66 70 47 24 73 78\r\n44 62 66 84 17 96\r\n",
                "710967466\r\n"
            ],
            [
                "5\r\n48 17 41 3 8\r\n9 51 32 31 56\r\n58 25 38 95 10\r\n27 36 13 7 46\r\n44 40 18 74 22\r\n",
                "867818040\r\n"
            ],
            [
                "6\r\n17 14 22 5 45 68\r\n47 29 19 60 6 13\r\n8 42 48 7 67 20\r\n36 31 40 21 41 27\r\n51 3 56 43 12 33\r\n15 28 65 59 39 18\r\n",
                "91887121\r\n"
            ],
            [
                "6\r\n87 56 53 27 22 24\r\n29 66 60 37 61 94\r\n79 32 85 64 36 95\r\n58 52 42 99 62 21\r\n41 83 88 73 6 8\r\n33 20 28 25 92 5\r\n",
                "110718409\r\n"
            ],
            [
                "6\r\n1 1 1 1 1 1\r\n0 1 1 0 1 0\r\n0 1 1 0 1 0\r\n1 1 1 1 1 1\r\n0 1 1 0 1 0\r\n0 1 1 0 1 0\r\n",
                "0\r\n"
            ],
            [
                "6\r\n87 48 67 31 76 91\r\n56 97 66 54 79 61\r\n99 59 85 81 50 92\r\n89 72 64 96 14 88\r\n90 71 75 78 98 83\r\n30 35 93 82 69 43\r\n",
                "584631181\r\n"
            ],
            [
                "5\r\n100 100 0 100 0\r\n0 0 0 0 0\r\n0 100 100 0 100\r\n100 100 0 100 0\r\n0 100 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "6\r\n0 100 0 0 0 0\r\n0 100 0 100 0 0\r\n0 100 0 0 0 0\r\n0 0 0 0 100 0\r\n0 0 0 100 0 100\r\n0 0 0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "6\r\n0 0 0 100 100 100\r\n100 100 0 100 0 0\r\n0 0 0 100 0 0\r\n0 0 0 100 0 100\r\n0 100 0 0 100 0\r\n0 0 0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "6\r\n100 0 0 100 0 0\r\n0 0 100 0 100 100\r\n100 0 0 0 0 0\r\n0 0 0 0 100 100\r\n100 100 0 100 0 0\r\n100 0 0 100 0 100\r\n",
                "1\r\n"
            ]
        ]
    }
]