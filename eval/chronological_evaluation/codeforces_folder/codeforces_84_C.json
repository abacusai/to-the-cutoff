[
    {
        "name": "Biathlon",
        "description": "Perhaps many have heard that the World Biathlon Championship has finished.\nAlthough our hero Valera was not present at this spectacular event himself and\nonly watched it on TV, it excited him so much that he decided to enroll in a\nbiathlon section. Of course, biathlon as any sport, proved very difficult in\npractice. It takes much time and effort. Workouts, workouts, and workouts, \u2014\nthat's what awaited Valera on his way to great achievements in biathlon. As\nfor the workouts, you all probably know that every professional biathlete\nshould ski fast and shoot precisely at the shooting range. Only in this case\nyou can hope to be successful, because running and shooting are the two main\ncomponents of biathlon. Valera has been diligent in his ski trainings, which\nis why he runs really fast, however, his shooting accuracy is nothing to write\nhome about. On a biathlon base where Valera is preparing for the competition,\nthere is a huge rifle range with n targets. Each target have shape of a\ncircle, and the center of each circle is located on the Ox axis. At the last\ntraining session Valera made the total of m shots. To make monitoring of his\nown results easier for him, one rather well-known programmer (of course it is\nyou) was commissioned to write a program that would reveal how many and which\ntargets Valera hit. More specifically, for each target the program must print\nthe number of the first successful shot (in the target), or \"-1\" if this was\nnot hit. The target is considered hit if the shot is inside the circle or on\nits boundary. Valera is counting on you and perhaps, thanks to you he will one\nday win international competitions. Input The first line of the input file\ncontains the integer n (1 \u2264 n \u2264 10^4), which is the number of targets. The\nnext n lines contain descriptions of the targets. Each target is a circle\nwhose center is located on the Ox axis. Each circle is given by its coordinate\nof the center x ( - 2\u00b710^4 \u2264 x \u2264 2\u00b710^4) and its radius r (1 \u2264 r \u2264 1000). It\nis guaranteed that no two targets coincide, intersect or are nested into each\nother, but they can touch each other. The next line contains integer m (1 \u2264 m\n\u2264 2\u00b710^5), which is the number of shots. Next m lines contain descriptions of\nthe shots, which are points on the plane, given by their coordinates x and y (\n- 2\u00b710^4 \u2264 x, y \u2264 2\u00b710^4). All the numbers in the input are integers. Targets\nand shots are numbered starting from one in the order of the input. Output\nPrint on the first line a single number, the number of targets hit by Valera.\nPrint on the second line for each of the targets the number of its first hit\nor \"-1\" (without quotes) if this number does not exist. Separate numbers with\nspaces. Examples Input 3 2 1 5 2 10 1 5 0 1 1 3 3 0 4 0 4 0 Output 2 3 3 -1\nInput 3 3 2 7 1 11 2 4 2 1 6 0 6 4 11 2 Output 3 1 2 4\n\n",
        "cf_contest_id": 84,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2 1\r\n5 2\r\n10 1\r\n5\r\n0 1\r\n1 3\r\n3 0\r\n4 0\r\n4 0\r\n",
                "2\r\n3 3 -1\r\n"
            ],
            [
                "3\r\n3 2\r\n7 1\r\n11 2\r\n4\r\n2 1\r\n6 0\r\n6 4\r\n11 2\r\n",
                "3\r\n1 2 4\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n0 5\r\n10 5\r\n2\r\n7 2\r\n6 1\r\n",
                "1\r\n-1 1\r\n"
            ],
            [
                "3\r\n-3 3\r\n-10 2\r\n10 2\r\n4\r\n10 2\r\n2 -2\r\n-11 -1\r\n10 0\r\n",
                "2\r\n-1 3 1\r\n"
            ],
            [
                "5\r\n3 2\r\n-1 2\r\n6 1\r\n-6 1\r\n20 5\r\n6\r\n1 -2\r\n5 0\r\n5 1\r\n1 0\r\n-4 0\r\n3 2\r\n",
                "3\r\n2 4 2 -1 -1\r\n"
            ],
            [
                "4\r\n2 1\r\n5 1\r\n-6 1\r\n10 2\r\n3\r\n-6 0\r\n-6 1\r\n-5 0\r\n",
                "1\r\n-1 -1 1 -1\r\n"
            ],
            [
                "2\r\n10 10\r\n-20 20\r\n4\r\n-1 6\r\n-1 -2\r\n21 0\r\n0 0\r\n",
                "2\r\n4 1\r\n"
            ],
            [
                "3\r\n6 2\r\n-2 2\r\n2 1\r\n5\r\n2 0\r\n5 1\r\n2 0\r\n2 1\r\n2 -3\r\n",
                "2\r\n2 -1 1\r\n"
            ],
            [
                "3\r\n1 1\r\n3 1\r\n-4 2\r\n1\r\n-4 -3\r\n",
                "0\r\n-1 -1 -1\r\n"
            ],
            [
                "10\r\n67 5\r\n-69 5\r\n-58 3\r\n-5 6\r\n27 2\r\n95 3\r\n36 2\r\n-82 2\r\n-18 6\r\n-33 4\r\n20\r\n-41 3\r\n-47 -2\r\n37 3\r\n29 -6\r\n90 -8\r\n-40 -4\r\n-46 0\r\n70 -6\r\n93 -9\r\n84 -6\r\n-66 -1\r\n-44 6\r\n37 -8\r\n-29 3\r\n39 -4\r\n-77 -3\r\n-21 4\r\n-70 7\r\n97 -6\r\n-61 -5\r\n",
                "2\r\n-1 11 -1 -1 -1 -1 -1 -1 17 -1\r\n"
            ],
            [
                "10\r\n2467 35\r\n-3169 25\r\n-5358 63\r\n-5705 46\r\n827 62\r\n2995 43\r\n5436 92\r\n-3902 54\r\n-4382 22\r\n-3718 96\r\n1\r\n5726 38\r\n",
                "0\r\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1\r\n"
            ],
            [
                "1\r\n467 335\r\n10\r\n-169 -478\r\n-962 -705\r\n281 961\r\n995 -827\r\n-391 -902\r\n292 -421\r\n-718 447\r\n-771 -869\r\n-667 35\r\n-703 322\r\n",
                "0\r\n-1\r\n"
            ],
            [
                "2\r\n15000 1000\r\n-5000 1000\r\n2\r\n15000 0\r\n-5000 0\r\n",
                "2\r\n1 2\r\n"
            ]
        ]
    }
]