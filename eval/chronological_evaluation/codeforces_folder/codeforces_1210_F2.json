[
    {
        "name": "Marek and Matching (hard version)",
        "description": "This is a harder version of the problem. In this version, \n    n \n    \u2264 7\n.\nMarek is working hard on creating strong test cases to his new algorithmic\nproblem. Do you want to know what it is? Nah, we're not telling you. However,\nwe can tell you how he generates test cases. Marek chooses an integer \n    n\n\nand \n    n^2\n integers \n    p_ij\n (\n    1 \n    \u2264 i \n    \u2264 n\n, \n    1 \n    \u2264 j\n    \n    \u2264 n\n). He then generates a random bipartite graph with \n    2n\n\nvertices. There are \n    n\n vertices on the left side: \n    \u2113_1, \n    \u2113_2,\n    \n    \u2026, \n    \u2113_n\n, and \n    n\n vertices on the right side: \n    r_1, r_2,\n    \n    \u2026, r_n\n. For each \n    i\n and \n    j\n, he puts an edge between\nvertices \n    \u2113_i\n and \n    r_j\n with probability \n    p_ij\n percent.\nIt turns out that the tests will be strong only if a perfect matching exists\nin the generated graph. What is the probability that this will occur? It can\nbe shown that this value can be represented as \n    P/Q\n where\n\n    P\n and \n    Q\n are coprime integers and \n    Q \n    \u2261 0\n    \n    10^9+7\n. Let \n    Q^-1\n be an integer for which \n    Q \n    \u00b7\n    Q^-1\n    \u2261 1 \n    10^9+7\n. Print the value of \n    P \n    \u00b7\n    Q^-1\n modulo \n    10^9+7\n. Input The first line of the input contains a\nsingle integer \n    n\n (\n    1 \n    \u2264 \ud835\udc27 \n    \u2264 7\n). The following\n\n    n\n lines describe the probabilities of each edge appearing in the graph.\nThe \n    i\n-th of the lines contains \n    n\n integers \n    p_i1, p_i2,\n    \n    \u2026, p_in\n (\n    0 \n    \u2264 p_ij\n    \u2264 100\n); \n    p_ij\n denotes the\nprobability, in percent, of an edge appearing between \n    \u2113_i\n and\n\n    r_j\n. Output Print a single integer \u2014 the probability that the perfect\nmatching exists in the bipartite graph, written as \n    P \n    \u00b7 Q^-1\n    10^9+7\n for \n    P\n, \n    Q\n defined above. Examples Input 2 50 50\n50 50 Output 937500007 Input 3 3 1 4 1 5 9 2 6 5 Output 351284554 Note In the\nfirst sample test, each of the \n    16\n graphs below is equally probable. Out\nof these, \n    7\n have a perfect matching: Therefore, the probability is equal\nto \n    7/16\n. As \n    16 \n    \u00b7 562\n     500\n     004 = 1\n    \n    10^9+7\n, the answer to the testcase is \n    7 \n    \u00b7\n    562\n     500\n     004 \n    (10^9+7) = 937\n     500\n     007\n.\n\n",
        "cf_contest_id": 1210,
        "cf_index": "F2",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "probabilities"
        ],
        "time_limit_seconds": 15.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n50 50\r\n50 50\r\n",
                "937500007\r\n"
            ],
            [
                "3\r\n3 1 4\r\n1 5 9\r\n2 6 5\r\n",
                "351284554\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1\r\n100\r\n",
                "1\r\n"
            ],
            [
                "1\r\n69\r\n",
                "330000003\r\n"
            ],
            [
                "4\r\n0 100 0 100\r\n100 0 100 0\r\n0 100 0 100\r\n100 0 100 0\r\n",
                "1\r\n"
            ],
            [
                "2\r\n95 61\r\n53 99\r\n",
                "5751951\r\n"
            ],
            [
                "3\r\n26 55 1\r\n44 2 83\r\n9 79 71\r\n",
                "452769275\r\n"
            ],
            [
                "4\r\n25 49 16 56\r\n41 31 89 78\r\n50 3 80 96\r\n93 12 67 57\r\n",
                "986898331\r\n"
            ],
            [
                "5\r\n58 42 65 0 12\r\n80 0 11 64 89\r\n21 92 11 12 10\r\n88 50 94 5 31\r\n2 53 82 90 21\r\n",
                "224596377\r\n"
            ],
            [
                "6\r\n91 2 13 12 50 27\r\n13 44 43 40 62 53\r\n98 13 55 52 93 12\r\n84 11 8 89 90 31\r\n62 95 79 16 10 12\r\n89 22 95 4 23 16\r\n",
                "458013830\r\n"
            ],
            [
                "7\r\n90 97 62 58 88 76 92\r\n78 56 24 69 48 84 14\r\n100 83 69 65 61 58 14\r\n25 65 7 35 63 93 44\r\n58 95 83 51 6 26 99\r\n35 62 8 1 93 96 34\r\n19 50 35 45 50 63 99\r\n",
                "691281217\r\n"
            ],
            [
                "7\r\n0 0 100 100 0 0 0\r\n100 100 0 100 100 0 100\r\n100 0 0 100 0 100 100\r\n100 100 0 100 100 100 0\r\n100 0 100 0 0 0 0\r\n100 0 0 100 0 100 100\r\n0 0 100 100 0 0 0\r\n",
                "1\r\n"
            ],
            [
                "5\r\n7 34 34 12 16\r\n28 8 15 70 11\r\n20 26 36 5 23\r\n12 55 82 63 41\r\n12 53 54 32 46\r\n",
                "188514656\r\n"
            ],
            [
                "6\r\n58 7 34 10 24 28\r\n26 21 20 10 28 36\r\n34 75 9 3 25 3\r\n9 33 54 7 16 70\r\n31 62 15 7 17 32\r\n32 82 37 66 32 24\r\n",
                "265772640\r\n"
            ],
            [
                "7\r\n48 18 38 60 36 12 9\r\n17 15 14 71 10 58 71\r\n50 49 28 13 82 26 95\r\n31 46 72 18 24 57 26\r\n34 7 1 27 81 34 6\r\n1 35 18 16 42 9 28\r\n30 40 36 48 45 56 22\r\n",
                "793838943\r\n"
            ],
            [
                "6\r\n55 82 77 53 91 98\r\n94 92 62 34 82 69\r\n97 33 39 93 90 86\r\n79 79 64 75 94 52\r\n78 92 70 92 42 88\r\n73 71 91 21 87 72\r\n",
                "829000907\r\n"
            ],
            [
                "7\r\n96 87 89 94 81 66 100\r\n96 76 99 67 57 86 98\r\n62 81 45 49 64 76 85\r\n99 37 69 91 85 53 53\r\n73 73 91 85 69 55 89\r\n77 75 93 80 91 92 61\r\n93 84 96 59 87 100 92\r\n",
                "446408248\r\n"
            ],
            [
                "6\r\n30 84 23 27 77 22\r\n72 12 2 53 36 4\r\n49 18 5 82 21 57\r\n8 44 54 66 25 6\r\n45 31 50 43 13 41\r\n28 87 42 37 16 19\r\n",
                "478232647\r\n"
            ],
            [
                "7\r\n13 47 48 39 37 32 61\r\n34 51 90 27 81 68 19\r\n17 78 23 54 36 15 43\r\n18 77 70 7 9 8 3\r\n35 11 5 65 59 55 20\r\n52 2 46 93 38 57 28\r\n26 29 25 92 14 41 64\r\n",
                "725115822\r\n"
            ],
            [
                "7\r\n5 39 19 3 49 94 90\r\n28 45 8 98 9 56 24\r\n65 34 85 88 79 78 10\r\n17 54 41 81 97 75 84\r\n6 91 95 89 21 52 29\r\n35 18 50 2 25 51 7\r\n76 30 83 16 48 26 71\r\n",
                "550524387\r\n"
            ],
            [
                "7\r\n91 15 50 99 88 74 69\r\n89 38 59 34 11 28 35\r\n94 76 86 90 53 79 32\r\n33 68 60 42 63 78 82\r\n97 58 75 73 47 24 80\r\n92 98 87 45 39 83 96\r\n31 64 57 54 48 72 44\r\n",
                "779995848\r\n"
            ],
            [
                "7\r\n1 1 1 1 1 1 1\r\n0 1 1 0 1 0 1\r\n0 1 1 0 1 0 1\r\n1 1 1 1 1 1 1\r\n0 1 1 0 1 0 1\r\n0 1 1 0 1 0 1\r\n0 1 1 0 1 0 1\r\n",
                "0\r\n"
            ],
            [
                "6\r\n100 0 0 0 0 0\r\n0 0 100 0 0 0\r\n0 0 0 100 0 0\r\n0 0 0 100 0 0\r\n0 0 0 0 0 100\r\n0 0 0 100 100 100\r\n",
                "0\r\n"
            ],
            [
                "7\r\n100 0 0 100 0 0 0\r\n0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0\r\n0 0 0 0 0 0 100\r\n0 0 0 100 0 100 100\r\n0 0 0 0 0 0 0\r\n100 0 0 0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "7\r\n0 0 0 0 100 100 100\r\n0 0 0 100 0 0 100\r\n0 100 0 0 100 0 100\r\n100 100 100 0 0 0 0\r\n0 0 0 100 0 0 0\r\n0 0 100 100 0 0 0\r\n100 100 0 0 0 0 0\r\n",
                "1\r\n"
            ],
            [
                "7\r\n0 100 100 0 0 0 0\r\n100 0 0 0 0 100 100\r\n0 0 100 100 0 0 0\r\n0 0 100 0 0 0 0\r\n100 0 100 0 0 0 0\r\n100 0 0 100 100 100 0\r\n100 0 100 0 100 0 100\r\n",
                "1\r\n"
            ]
        ]
    }
]