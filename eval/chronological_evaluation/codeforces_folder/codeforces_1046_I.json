[
    {
        "name": "Say Hello",
        "description": "Two friends are travelling through Bubble galaxy. They say \"Hello!\" via\nsignals to each other if their distance is smaller or equal than \n    d_1\n and\nit's the first time they speak to each other or at some point in time after\ntheir last talk their distance was greater than \n    d_2\n. We need to\ncalculate how many times friends said \"Hello!\" to each other. For \n    N\n\nmoments, you'll have an array of points for each friend representing their\npositions at that moment. A person can stay in the same position between two\nmoments in time, but if a person made a move we assume this movement as\nmovement with constant speed in constant direction. Input The first line\ncontains one integer number \n    N\n (\n    2 \n    \u2264 N \n    \u2264 100\n     000\n)\nrepresenting number of moments in which we captured positions for two friends.\nThe second line contains two integer numbers \n    d_1\n and \n    d_2 \n     (0 < d_1\n    < d_2 < 1000)\n. The next \n    N\n lines contains four integer numbers\n\n    A_x,A_y,B_x,B_y\n (\n    0 \n    \u2264 A_x, A_y, B_x, B_y \n    \u2264 1000\n)\nrepresenting coordinates of friends A and B in each captured moment. Output\nOutput contains one integer number that represents how many times friends will\nsay \"Hello!\" to each other. Example Input 4 2 5 0 0 0 10 5 5 5 6 5 0 10 5 14 7\n10 5 Output 2 Note Explanation: Friends should send signals 2 times to each\nother, first time around point \n    A2\n and \n    B2\n and second time during\nA's travel from point \n    A3\n to \n    A4\n while B stays in point \n    B3=B4\n.\n\n",
        "cf_contest_id": 1046,
        "cf_index": "I",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "geometry"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2 5\r\n0 0 0 10\r\n5 5 5 6\r\n5 0 10 5\r\n14 7 10 5\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 5\r\n10 20 20 30\r\n30 20 20 10\r\n10 20 20 30\r\n30 20 20 10\r\n10 20 20 30\r\n30 20 20 10\r\n10 20 20 30\r\n30 20 20 10\r\n10 20 20 30\r\n30 20 20 10\r\n",
                "9\r\n"
            ],
            [
                "7\r\n10 20\r\n5 10 10 10\r\n10 10 15 10\r\n5 10 15 20\r\n5 10 20 20\r\n5 10 20 35\r\n5 10 5 35\r\n5 10 5 19\r\n",
                "2\r\n"
            ],
            [
                "3\r\n20 50\r\n100 100 75 85\r\n100 100 110 130\r\n100 100 105 70\r\n",
                "1\r\n"
            ],
            [
                "4\r\n20 50\r\n100 100 100 150\r\n100 100 60 100\r\n100 100 90 20\r\n100 100 150 100\r\n",
                "0\r\n"
            ],
            [
                "4\r\n20 50\r\n100 100 100 100\r\n100 100 70 100\r\n100 100 130 90\r\n100 100 130 20\r\n",
                "1\r\n"
            ],
            [
                "2\r\n20 50\r\n100 100 80 200\r\n100 100 80 30\r\n",
                "1\r\n"
            ],
            [
                "3\r\n20 50\r\n100 100 75 85\r\n100 100 110 130\r\n100 100 105 20\r\n",
                "1\r\n"
            ],
            [
                "10\r\n1 5\r\n13 96 23 106\r\n99 63 89 53\r\n76 64 86 74\r\n42 101 32 91\r\n42 3 52 13\r\n83 11 73 1\r\n31 55 41 65\r\n127 18 117 8\r\n50 89 60 99\r\n81 81 71 71\r\n",
                "9\r\n"
            ],
            [
                "7\r\n10 20\r\n8 86 13 86\r\n79 53 84 53\r\n71 54 81 64\r\n17 91 32 101\r\n37 63 52 88\r\n40 31 40 56\r\n102 8 102 17\r\n",
                "2\r\n"
            ],
            [
                "3\r\n20 50\r\n41 176 16 161\r\n103 169 113 199\r\n74 46 79 16\r\n",
                "1\r\n"
            ],
            [
                "4\r\n20 50\r\n41 176 41 226\r\n103 169 63 169\r\n74 143 64 63\r\n77 5 127 5\r\n",
                "0\r\n"
            ],
            [
                "4\r\n20 50\r\n41 176 41 176\r\n103 169 73 169\r\n74 46 104 36\r\n21 143 51 63\r\n",
                "1\r\n"
            ],
            [
                "2\r\n20 50\r\n260 817 240 917\r\n573 444 553 374\r\n",
                "1\r\n"
            ],
            [
                "8\r\n100 200\r\n500 500 301 301\r\n500 500 301 699\r\n500 500 500 500\r\n500 500 699 301\r\n500 500 499 301\r\n500 500 499 400\r\n500 500 400 500\r\n500 500 480 520\r\n",
                "2\r\n"
            ],
            [
                "8\r\n100 200\r\n660 973 461 774\r\n844 449 645 648\r\n770 319 770 319\r\n494 325 693 126\r\n934 913 933 714\r\n207 945 206 845\r\n527 264 427 264\r\n807 189 787 209\r\n",
                "2\r\n"
            ]
        ]
    }
]