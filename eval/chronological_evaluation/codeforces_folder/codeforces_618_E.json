[
    {
        "name": "Robot Arm",
        "description": "Roger is a robot. He has an arm that is a series of n segments connected to\neach other. The endpoints of the i-th segment are initially located at points\n(i - 1, 0) and (i, 0). The endpoint at (i - 1, 0) is colored red and the\nendpoint at (i, 0) is colored blue for all segments. Thus, the blue endpoint\nof the i-th segment is touching the red endpoint of the (i + 1)-th segment for\nall valid i. Roger can move his arm in two different ways: He can choose some\nsegment and some value. This is denoted as choosing the segment number i and\npicking some positive l. This change happens as follows: the red endpoint of\nsegment number i and segments from 1 to i - 1 are all fixed in place. Imagine\na ray from the red endpoint to the blue endpoint. The blue endpoint and\nsegments i + 1 through n are translated l units in the direction of this ray.\nIn this picture, the red point labeled A and segments before A stay in place,\nwhile the blue point labeled B and segments after B gets translated. He can\nchoose a segment and rotate it. This is denoted as choosing the segment number\ni, and an angle a. The red endpoint of the i-th segment will stay fixed in\nplace. The blue endpoint of that segment and segments i + 1 to n will rotate\nclockwise by an angle of a degrees around the red endpoint. In this picture,\nthe red point labeled A and segments before A stay in place, while the blue\npoint labeled B and segments after B get rotated around point A. Roger will\nmove his arm m times. These transformations are a bit complicated, and Roger\neasily loses track of where the blue endpoint of the last segment is. Help him\ncompute the coordinates of the blue endpoint of the last segment after\napplying each operation. Note that these operations are cumulative, and\nRoger's arm may intersect itself arbitrarily during the moves. Input The first\nline of the input will contain two integers n and m (1 \u2264 n, m \u2264 300 000) \u2014 the\nnumber of segments and the number of operations to perform. Each of the next m\nlines contains three integers xi, yi and zi describing a move. If xi = 1, this\nline describes a move of type 1, where yi denotes the segment number and zi\ndenotes the increase in the length. If xi = 2, this describes a move of type\n2, where yi denotes the segment number, and zi denotes the angle in degrees.\n(1 \u2264 xi \u2264 2, 1 \u2264 yi \u2264 n, 1 \u2264 zi \u2264 359) Output Print m lines. The i-th line\nshould contain two real values, denoting the coordinates of the blue endpoint\nof the last segment after applying operations 1, ..., i. Your answer will be\nconsidered correct if its absolute or relative error does not exceed 10^-4.\nNamely, let's assume that your answer for a particular value of a coordinate\nis a and the answer of the jury is b. The checker program will consider your\nanswer correct if for all coordinates. Examples Input 5 4 1 1 3 2 3 90 2 5 48\n1 4 1 Output 8.0000000000 0.0000000000 5.0000000000 -3.0000000000 4.2568551745\n-2.6691306064 4.2568551745 -3.6691306064 Note The following pictures shows the\nstate of the arm after each operation. The coordinates of point F are printed\nafter applying each operation. For simplicity, we only show the blue endpoints\nof a segment (with the exception for the red endpoint of the first segment).\nFor instance, the point labeled B is the blue endpoint for segment 1 and also\nthe red endpoint for segment 2. Initial state: Extend segment 1 by 3. Rotate\nsegment 3 by 90 degrees clockwise. Rotate segment 5 by 48 degrees clockwise.\nExtend segment 4 by 1.\n\n",
        "cf_contest_id": 618,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "geometry"
        ],
        "time_limit_seconds": 8.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4\r\n1 1 3\r\n2 3 90\r\n2 5 48\r\n1 4 1\r\n",
                "8.0000000000 0.0000000000\r\n5.0000000000 -3.0000000000\r\n4.2568551745 -2.6691306064\r\n4.2568551745 -3.6691306064\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n2 1 302\r\n",
                "0.5299192642 0.8480480962\r\n"
            ]
        ]
    }
]