[
    {
        "name": "Destroying Array",
        "description": "You are given an array consisting of n non-negative integers a1, a2, ..., an.\nYou are going to destroy integers in the array one by one. Thus, you are given\nthe permutation of integers from 1 to n defining the order elements of the\narray are destroyed. After each element is destroyed you have to find out the\nsegment of the array, such that it contains no destroyed elements and the sum\nof its elements is maximum possible. The sum of elements in the empty segment\nis considered to be 0. Input The first line of the input contains a single\ninteger n (1 \u2264 n \u2264 100 000) \u2014 the length of the array. The second line\ncontains n integers a1, a2, ..., an (0 \u2264 ai \u2264 10^9). The third line contains a\npermutation of integers from 1 to n \u2014 the order used to destroy elements.\nOutput Print n lines. The i-th line should contain a single integer \u2014 the\nmaximum possible sum of elements on the segment containing no destroyed\nelements, after first i operations are performed. Examples Input 4 1 3 2 5 3 4\n1 2 Output 5 4 3 0 Input 5 1 2 3 4 5 4 2 3 5 1 Output 6 5 5 1 0 Input 8 5 5 4\n4 6 6 5 5 5 2 8 7 1 3 4 6 Output 18 16 11 8 8 6 6 0 Note Consider the first\nsample: Third element is destroyed. Array is now 1 3 * 5. Segment with maximum\nsum 5 consists of one integer 5. Fourth element is destroyed. Array is now 1 3\n* * . Segment with maximum sum 4 consists of two integers 1 3. First element\nis destroyed. Array is now * 3 * * . Segment with maximum sum 3 consists of\none integer 3. Last element is destroyed. At this moment there are no valid\nnonempty segments left in this array, so the answer is equal to 0.\n\n",
        "cf_contest_id": 722,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dsu"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 3 2 5\r\n3 4 1 2\r\n",
                "5\r\n4\r\n3\r\n0\r\n"
            ],
            [
                "5\r\n1 2 3 4 5\r\n4 2 3 5 1\r\n",
                "6\r\n5\r\n5\r\n1\r\n0\r\n"
            ],
            [
                "8\r\n5 5 4 4 6 6 5 5\r\n5 2 8 7 1 3 4 6\r\n",
                "18\r\n16\r\n11\r\n8\r\n8\r\n6\r\n6\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n3 3 3 5 6 9 3 1 7 3\r\n3 4 6 7 5 1 10 9 2 8\r\n",
                "34\r\n29\r\n14\r\n11\r\n11\r\n11\r\n8\r\n3\r\n1\r\n0\r\n"
            ],
            [
                "17\r\n12 9 17 5 0 6 5 1 3 1 17 17 2 14 5 1 17\r\n3 7 5 8 12 9 15 13 11 14 6 16 17 1 10 2 4\r\n",
                "94\r\n78\r\n78\r\n77\r\n39\r\n39\r\n21\r\n21\r\n21\r\n21\r\n21\r\n21\r\n21\r\n9\r\n9\r\n5\r\n0\r\n"
            ],
            [
                "17\r\n1 6 9 2 10 5 15 16 17 14 17 3 9 8 12 0 2\r\n9 13 15 14 16 17 11 10 12 4 6 5 7 8 2 3 1\r\n",
                "65\r\n64\r\n64\r\n64\r\n64\r\n64\r\n64\r\n64\r\n64\r\n46\r\n31\r\n31\r\n16\r\n16\r\n9\r\n1\r\n0\r\n"
            ],
            [
                "17\r\n10 10 3 9 8 0 10 13 11 8 11 1 6 9 2 10 5\r\n9 4 13 2 6 15 11 5 16 10 7 3 14 1 12 8 17\r\n",
                "63\r\n52\r\n31\r\n31\r\n26\r\n23\r\n23\r\n23\r\n23\r\n23\r\n13\r\n13\r\n13\r\n13\r\n13\r\n5\r\n0\r\n"
            ],
            [
                "10\r\n10 4 9 0 7 5 10 3 10 9\r\n5 2 8 1 3 9 6 10 4 7\r\n",
                "37\r\n37\r\n19\r\n19\r\n19\r\n15\r\n10\r\n10\r\n10\r\n0\r\n"
            ],
            [
                "10\r\n3 10 9 2 6 8 4 4 1 9\r\n5 8 6 7 9 10 2 1 3 4\r\n",
                "26\r\n24\r\n24\r\n24\r\n24\r\n24\r\n11\r\n11\r\n2\r\n0\r\n"
            ],
            [
                "1\r\n1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "7\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n1 2 3 4 5 6 7\r\n",
                "6000000000\r\n5000000000\r\n4000000000\r\n3000000000\r\n2000000000\r\n1000000000\r\n0\r\n"
            ]
        ]
    }
]