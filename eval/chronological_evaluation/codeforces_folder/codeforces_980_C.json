[
    {
        "name": "Posterized",
        "description": "Professor Ibrahim has prepared the final homework for his algorithm\u2019s class.\nHe asked his students to implement the Posterization Image Filter. Their\nalgorithm will be tested on an array of integers, where the \n    i\n-th integer\nrepresents the color of the \n    i\n-th pixel in the image. The image is in\nblack and white, therefore the color of each pixel will be an integer between\n0 and 255 (inclusive). To implement the filter, students are required to\ndivide the black and white color range [0, 255] into groups of consecutive\ncolors, and select one color in each group to be the group\u2019s key. In order to\npreserve image details, the size of a group must not be greater than \n    k\n,\nand each color should belong to exactly one group. Finally, the students will\nreplace the color of each pixel in the array with that color\u2019s assigned group\nkey. To better understand the effect, here is an image of a basking turtle\nwhere the Posterization Filter was applied with increasing \n    k\n to the\nright. To make the process of checking the final answer easier, Professor\nIbrahim wants students to divide the groups and assign the keys in a way that\nproduces the lexicographically smallest possible array. Input The first line\nof input contains two integers \n    n\n and \n    k\n (\n    1 \n    \u2264 n \n    \u2264\n    10^5\n, \n    1 \n    \u2264 k \n    \u2264 256\n), the number of pixels in the image, and\nthe maximum size of a group, respectively. The second line contains \n    n\n\nintegers \n    p_1, p_2, \n    \u2026, p_n\n (\n    0 \n    \u2264 p_i \n    \u2264 255\n), where\n\n    p_i\n is the color of the \n    i\n-th pixel. Output Print \n    n\n space-\nseparated integers; the lexicographically smallest possible array that\nrepresents the image after applying the Posterization filter. Examples Input 4\n3 2 14 3 4 Output 0 12 3 3 Input 5 2 0 2 1 255 254 Output 0 1 1 254 254 Note\nOne possible way to group colors and assign keys for the first sample: Color\n\n    2\n belongs to the group \n    [0,2]\n, with group key \n    0\n. Color\n\n    14\n belongs to the group \n    [12,14]\n, with group key \n    12\n. Colors\n\n    3\n and \n    4\n belong to group \n    [3, 5]\n, with group key \n    3\n.\nOther groups won't affect the result so they are not listed here.\n\n",
        "cf_contest_id": 980,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3\r\n2 14 3 4\r\n",
                "0 12 3 3 "
            ],
            [
                "5 2\r\n0 2 1 255 254\r\n",
                "0 1 1 254 254 "
            ]
        ],
        "private_cases": [
            [
                "10 3\r\n112 184 161 156 118 231 191 128 91 229\r\n",
                "110 182 159 154 116 229 189 126 89 229 "
            ],
            [
                "9 3\r\n174 149 118 124 166 146 219 233 107\r\n",
                "172 147 116 122 164 144 217 231 105 "
            ],
            [
                "8 4\r\n180 195 13 195 61 24 132 160\r\n",
                "177 192 10 192 58 21 129 157 "
            ],
            [
                "1 4\r\n51\r\n",
                "48 "
            ],
            [
                "2 4\r\n218 213\r\n",
                "215 210 "
            ],
            [
                "3 3\r\n212 167 3\r\n",
                "210 165 1 "
            ],
            [
                "100 7\r\n39 242 238 155 95 30 129 132 72 59 22 61 133 113 99 81 253 204 160 109 92 187 11 227 145 148 100 42 78 14 113 91 140 197 123 182 4 185 208 27 182 207 63 146 102 79 159 195 26 100 72 127 157 159 152 53 0 117 111 125 19 188 179 145 240 50 205 207 113 246 42 56 181 13 188 244 159 222 119 204 87 182 212 175 199 69 81 45 30 32 238 255 81 61 177 125 149 121 35 38\r\n",
                "33 236 236 149 89 24 123 130 66 53 16 60 130 107 96 75 247 198 156 107 89 181 5 221 139 146 96 40 75 12 107 89 139 191 123 181 0 181 205 24 181 205 60 146 96 75 156 191 24 96 66 123 156 156 149 53 0 114 107 123 16 188 173 139 236 44 205 205 107 243 40 53 181 12 188 243 156 221 114 198 82 181 209 173 198 66 75 44 24 31 236 254 75 60 173 123 149 120 33 33 "
            ],
            [
                "4 2\r\n122 108 224 154\r\n",
                "121 107 223 153 "
            ]
        ]
    }
]