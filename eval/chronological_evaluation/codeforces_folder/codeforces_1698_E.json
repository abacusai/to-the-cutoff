[
    {
        "name": "PermutationForces II",
        "description": "You are given a permutation \n    a\n of length \n    n\n. Recall that permutation\nis an array consisting of \n    n\n distinct integers from \n    1\n to \n    n\n in\narbitrary order. You have a strength of \n    s\n and perform \n    n\n moves on\nthe permutation \n    a\n. The \n    i\n-th move consists of the following: Pick\ntwo integers \n    x\n and \n    y\n such that \n    i \n    \u2264 x \n    \u2264 y \n    \u2264\n    min(i+s,n)\n, and swap the positions of the integers \n    x\n and \n    y\n\nin the permutation \n    a\n. Note that you can select \n    x=y\n in the\noperation, in which case no swap will occur. You want to turn \n    a\n into\nanother permutation \n    b\n after \n    n\n moves. However, some elements of\n\n    b\n are missing and are replaced with \n    -1\n instead. Count the number\nof ways to replace each \n    -1\n in \n    b\n with some integer from \n    1\n to\n\n    n\n so that \n    b\n is a permutation and it is possible to turn \n    a\n\ninto \n    b\n with a strength of \n    s\n. Since the answer can be large, output\nit modulo \n    998\n     244\n     353\n. Input The input consists of multiple test\ncases. The first line contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    1000\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains two integers \n    n\n and\n\n    s\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n; \n    1 \n    \u2264 s \n    \u2264 n\n) \u2014\nthe size of the permutation and your strength, respectively. The second line\nof each test case contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n\n(\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014 the elements of \n    a\n. All elements of \n    a\n\nare distinct. The third line of each test case contains \n    n\n integers\n\n    b_1, b_2, \n    \u2026, b_n\n (\n    1 \n    \u2264 b_i \n    \u2264 n\n or \n    b_i = -1\n) \u2014\nthe elements of \n    b\n. All elements of \n    b\n that are not equal to\n\n    -1\n are distinct. It is guaranteed that the sum of \n    n\n over all test\ncases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, output\na single integer \u2014 the number of ways to fill up the permutation \n    b\n so\nthat it is possible to turn \n    a\n into \n    b\n using a strength of \n    s\n,\nmodulo \n    998\n     244\n     353\n. Example Input 6 3 1 2 1 3 3 -1 -1 3 2 2 1 3 3\n-1 -1 4 1 1 4 3 2 4 3 1 2 6 4 4 2 6 3 1 5 6 1 5 -1 3 -1 7 4 1 3 6 2 7 4 5 2 5\n-1 -1 -1 4 -1 14 14 1 2 3 4 5 6 7 8 9 10 11 12 13 14 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 Output 1 2 0 2 12 331032489 Note In the first test case,\n\n    a=[2,1,3]\n. There are two possible ways to fill out the \n    -1\ns in\n\n    b\n to make it a permutation: \n    [3,1,2]\n or \n    [3,2,1]\n. We can make\n\n    a\n into \n    [3,1,2]\n with a strength of \n    1\n as follows:\n\n    \n\n    [2,1,3] \n     [2,1,3]\n    \n     [3,1,2] \n    \n    [3,1,2].\n\n    \n It can be proven that it is impossible to make \n    [2,1,3]\n\ninto \n    [3,2,1]\n with a strength of \n    1\n. Thus only one permutation\n\n    b\n satisfies the constraints, so the answer is \n    1\n. In the second\ntest case, \n    a\n and \n    b\n the same as the previous test case, but we now\nhave a strength of \n    2\n. We can make \n    a\n into \n    [3,2,1]\n with a\nstrength of \n    2\n as follows: \n    \n\n    [2,1,3] \n    \n    [2,3,1] \n     [3,2,1] \n    \n    [3,2,1].\n\n    \n We can still make \n    a\n into \n    [3,1,2]\n using a strength\nof \n    1\n as shown in the previous test case, so the answer is \n    2\n. In\nthe third test case, there is only one permutation \n    b\n. It can be shown\nthat it is impossible to turn \n    a\n into \n    b\n, so the answer is \n    0\n.\n\n",
        "cf_contest_id": 1698,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "combinatorics",
            "greedy",
            "sortings",
            "trees",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n3 1\r\n2 1 3\r\n3 -1 -1\r\n3 2\r\n2 1 3\r\n3 -1 -1\r\n4 1\r\n1 4 3 2\r\n4 3 1 2\r\n6 4\r\n4 2 6 3 1 5\r\n6 1 5 -1 3 -1\r\n7 4\r\n1 3 6 2 7 4 5\r\n2 5 -1 -1 -1 4 -1\r\n14 14\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\r\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\r\n",
                "1\r\n2\r\n0\r\n2\r\n12\r\n331032489\r\n"
            ]
        ],
        "private_cases": []
    }
]