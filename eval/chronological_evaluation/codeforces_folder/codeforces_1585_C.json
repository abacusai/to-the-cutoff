[
    {
        "name": "Minimize Distance",
        "description": "A total of \n    n\n depots are located on a number line. Depot \n    i\n lies at\nthe point \n    x_i\n for \n    1 \n    \u2264 i \n    \u2264 n\n. You are a salesman with\n\n    n\n bags of goods, attempting to deliver one bag to each of the \n    n\n\ndepots. You and the \n    n\n bags are initially at the origin \n    0\n. You can\ncarry up to \n    k\n bags at a time. You must collect the required number of\ngoods from the origin, deliver them to the respective depots, and then return\nto the origin to collect your next batch of goods. Calculate the minimum\ndistance you need to cover to deliver all the bags of goods to the depots. You\ndo not have to return to the origin after you have delivered all the bags.\nInput Each test contains multiple test cases. The first line contains the\nnumber of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n     500\n). Description of\nthe test cases follows. The first line of each test case contains two integers\n\n    n\n and \n    k\n (\n    1 \n    \u2264 k \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n). The second\nline of each test case contains \n    n\n integers \n    x_1, x_2, \n    \u2026, x_n\n\n(\n    -10^9 \n    \u2264 x_i \n    \u2264 10^9\n). It is possible that some depots share the\nsame position. It is guaranteed that the sum of \n    n\n over all test cases\ndoes not exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, output a\nsingle integer denoting the minimum distance you need to cover to deliver all\nthe bags of goods to the depots. Example Input 4 5 1 1 2 3 4 5 9 3 -5 -10 -15\n6 5 8 3 7 4 5 3 2 2 3 3 3 4 2 1000000000 1000000000 1000000000 1000000000\nOutput 25 41 7 3000000000 Note In the first test case, you can carry only one\nbag at a time. Thus, the following is a solution sequence that gives a minimum\ntravel distance: \n    0 \n    \u2192 2 \n    \u2192 0 \n    \u2192 4 \n    \u2192 0 \n    \u2192 3 \n    \u2192 0 \n    \u2192 1\n    \n    \u2192 0 \n    \u2192 5\n, where each \n    0\n means you go the origin and grab one\nbag, and each positive integer means you deliver the bag to a depot at this\ncoordinate, giving a total distance of \n    25\n units. It must be noted that\nthere are other sequences that give the same distance. In the second test\ncase, you can follow the following sequence, among multiple such sequences, to\ntravel minimum distance: \n    0 \n    \u2192 6 \n    \u2192 8 \n    \u2192 7 \n    \u2192 0 \n    \u2192 5 \n    \u2192 4\n    \n    \u2192 3 \n    \u2192 0 \n    \u2192 (-5) \n    \u2192 (-10) \n    \u2192 (-15)\n, with distance \n    41\n.\nIt can be shown that \n    41\n is the optimal distance for this test case.\n\n",
        "cf_contest_id": 1585,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5 1\r\n1 2 3 4 5\r\n9 3\r\n-5 -10 -15 6 5 8 3 7 4\r\n5 3\r\n2 2 3 3 3\r\n4 2\r\n1000000000 1000000000 1000000000 1000000000\r\n",
                "25\r\n41\r\n7\r\n3000000000\r\n"
            ]
        ],
        "private_cases": []
    }
]