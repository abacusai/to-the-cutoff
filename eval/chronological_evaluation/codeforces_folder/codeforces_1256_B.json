[
    {
        "name": "Minimize the Permutation",
        "description": "You are given a permutation of length \n    n\n. Recall that the permutation is\nan array consisting of \n    n\n distinct integers from \n    1\n to \n    n\n in\narbitrary order. For example, \n    [2, 3, 1, 5, 4]\n is a permutation, but\n\n    [1, 2, 2]\n is not a permutation (\n    2\n appears twice in the array) and\n\n    [1, 3, 4]\n is also not a permutation (\n    n=3\n but there is \n    4\n in\nthe array). You can perform at most \n    n-1\n operations with the given\npermutation (it is possible that you don't perform any operations at all). The\n\n    i\n-th operation allows you to swap elements of the given permutation on\npositions \n    i\n and \n    i+1\n. Each operation can be performed at most once.\nThe operations can be performed in arbitrary order. Your task is to find the\nlexicographically minimum possible permutation obtained by performing some of\nthe given operations in some order. You can see the definition of the\nlexicographical order in the notes section. You have to answer \n    q\n\nindependent test cases. For example, let's consider the permutation \n    [5, 4,\n    1, 3, 2]\n. The minimum possible permutation we can obtain is \n    [1, 5, 2, 4,\n    3]\n and we can do it in the following way: perform the second operation\n(swap the second and the third elements) and obtain the permutation \n    [5, 1,\n    4, 3, 2]\n; perform the fourth operation (swap the fourth and the fifth\nelements) and obtain the permutation \n    [5, 1, 4, 2, 3]\n; perform the third\noperation (swap the third and the fourth elements) and obtain the permutation\n\n    [5, 1, 2, 4, 3]\n. perform the first operation (swap the first and the\nsecond elements) and obtain the permutation \n    [1, 5, 2, 4, 3]\n; Another\nexample is \n    [1, 2, 4, 3]\n. The minimum possible permutation we can obtain\nis \n    [1, 2, 3, 4]\n by performing the third operation (swap the third and\nthe fourth elements). Input The first line of the input contains one integer\n\n    q\n (\n    1 \n    \u2264 q \n    \u2264 100\n) \u2014 the number of test cases. Then \n    q\n\ntest cases follow. The first line of the test case contains one integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n) \u2014 the number of elements in the\npermutation. The second line of the test case contains \n    n\n distinct\nintegers from \n    1\n to \n    n\n \u2014 the given permutation. Output For each test\ncase, print the answer on it \u2014 the lexicograhically minimum possible\npermutation obtained by performing some of the given operations in some order.\nExample Input 4 5 5 4 1 3 2 4 1 2 4 3 1 1 4 4 3 2 1 Output 1 5 2 4 3 1 2 3 4 1\n1 4 3 2 Note Recall that the permutation \n    p\n of length \n    n\n is\nlexicographically less than the permutation \n    q\n of length \n    n\n if there\nis such index \n    i \n    \u2264 n\n that for all \n    j\n from \n    1\n to \n    i - 1\n\nthe condition \n    p_j = q_j\n is satisfied, and \n    p_i < q_i\n. For example:\n\n    p = [1, 3, 5, 2, 4]\n is less than \n    q = [1, 3, 5, 4, 2]\n (such\n\n    i=4\n exists, that \n    p_i < q_i\n and for each \n    j < i\n holds \n    p_j =\n    q_j\n), \n    p = [1, 2]\n is less than \n    q = [2, 1]\n (such \n    i=1\n\nexists, that \n    p_i < q_i\n and for each \n    j < i\n holds \n    p_j = q_j\n).\n\n",
        "cf_contest_id": 1256,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5\r\n5 4 1 3 2\r\n4\r\n1 2 4 3\r\n1\r\n1\r\n4\r\n4 3 2 1\r\n",
                "1 5 2 4 3\r\n1 2 3 4\r\n1\r\n1 4 3 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n5\r\n4 2 3 5 1\r\n",
                "1 4 2 3 5\r\n"
            ]
        ]
    }
]