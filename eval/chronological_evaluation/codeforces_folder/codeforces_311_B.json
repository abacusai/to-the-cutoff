[
    {
        "name": "Cats Transport",
        "description": "Zxr960115 is owner of a large farm. He feeds m cute cats and employs p\nfeeders. There's a straight road across the farm and n hills along the road,\nnumbered from 1 to n from left to right. The distance between hill i and (i -\n1) is di meters. The feeders live in hill 1. One day, the cats went out to\nplay. Cat i went on a trip to hill hi, finished its trip at time ti, and then\nwaited at hill hi for a feeder. The feeders must take all the cats. Each\nfeeder goes straightly from hill 1 to n without waiting at a hill and takes\nall the waiting cats at each hill away. Feeders walk at a speed of 1 meter per\nunit time and are strong enough to take as many cats as they want. For\nexample, suppose we have two hills (d2 = 1) and one cat that finished its trip\nat time 3 at hill 2 (h1 = 2). Then if the feeder leaves hill 1 at time 2 or at\ntime 3, he can take this cat, but if he leaves hill 1 at time 1 he can't take\nit. If the feeder leaves hill 1 at time 2, the cat waits him for 0 time units,\nif the feeder leaves hill 1 at time 3, the cat waits him for 1 time units.\nYour task is to schedule the time leaving from hill 1 for each feeder so that\nthe sum of the waiting time of all cats is minimized. Input The first line of\nthe input contains three integers n, m, p (2 \u2264 n \u2264 10^5, 1 \u2264 m \u2264 10^5, 1 \u2264 p \u2264\n100). The second line contains n - 1 positive integers d2, d3, ..., dn (1 \u2264 di\n< 10^4). Each of the next m lines contains two integers hi and ti (1 \u2264 hi \u2264 n,\n0 \u2264 ti \u2264 10^9). Output Output an integer, the minimum sum of waiting time of\nall cats. Please, do not write the \nintegers in \u0421++. It is preferred to use the cin, cout streams or the \nspecifier. Examples Input 4 6 2 1 3 5 1 0 2 1 4 9 1 10 2 10 3 12 Output 3\n\n",
        "cf_contest_id": 311,
        "cf_index": "B",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 6 2\r\n1 3 5\r\n1 0\r\n2 1\r\n4 9\r\n1 10\r\n2 10\r\n3 12\r\n",
                "3"
            ]
        ],
        "private_cases": []
    }
]