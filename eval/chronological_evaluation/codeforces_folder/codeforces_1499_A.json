[
    {
        "name": "Domino on Windowsill",
        "description": "You have a board represented as a grid with \n    2 \n    \u00d7 n\n cells. The\nfirst \n    k_1\n cells on the first row and first \n    k_2\n cells on the second\nrow are colored in white. All other cells are colored in black. You have\n\n    w\n white dominoes (\n    2 \n    \u00d7 1\n tiles, both cells are colored in\nwhite) and \n    b\n black dominoes (\n    2 \n    \u00d7 1\n tiles, both cells are\ncolored in black). You can place a white domino on the board if both board's\ncells are white and not occupied by any other domino. In the same way, you can\nplace a black domino if both cells are black and not occupied by any other\ndomino. Can you place all \n    w + b\n dominoes on the board if you can place\ndominoes both horizontally and vertically? Input The first line contains a\nsingle integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 3000\n) \u2014 the number of test\ncases. The first line of each test case contains three integers \n    n\n,\n\n    k_1\n and \n    k_2\n (\n    1 \n    \u2264 n \n    \u2264 1000\n; \n    0 \n    \u2264 k_1, k_2 \n    \u2264\n    n\n). The second line of each test case contains two integers \n    w\n and\n\n    b\n (\n    0 \n    \u2264 w, b \n    \u2264 n\n). Output For each test case, print YES if\nit's possible to place all \n    w + b\n dominoes on the board and NO,\notherwise. You may print every letter in any case you want (so, for example,\nthe strings yEs, yes, Yes and YES are all recognized as positive answer).\nExample Input 5 1 0 1 1 0 1 1 1 0 0 3 0 0 1 3 4 3 1 2 2 5 4 3 3 1 Output NO\nYES NO YES YES Note In the first test case, \n    n = 1\n, \n    k_1 = 0\n and\n\n    k_2 = 1\n. It means that \n    2 \n    \u00d7 1\n board has black cell \n    (1,\n    1)\n and white cell \n    (2, 1)\n. So, you can't place any white domino, since\nthere is only one white cell. In the second test case, the board of the same\nsize \n    2 \n    \u00d7 1\n, but both cell are white. Since \n    w = 0\n and \n    b =\n    0\n, so you can place \n    0 + 0 = 0\n dominoes on the board. In the third\ntest case, board \n    2 \n    \u00d7 3\n, but fully colored in black (since \n    k_1\n    = k_2 = 0\n), so you can't place any white domino. In the fourth test case,\ncells \n    (1, 1)\n, \n    (1, 2)\n, \n    (1, 3)\n, and \n    (2, 1)\n are white and\nother cells are black. You can place \n    2\n white dominoes at positions\n\n    ((1, 1), (2, 1))\n and \n    ((1, 2), (1, 3))\n and \n    2\n black dominoes\nat positions \n    ((1, 4), (2, 4))\n \n    ((2, 2), (2, 3))\n.\n\n",
        "cf_contest_id": 1499,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 0 1\r\n1 0\r\n1 1 1\r\n0 0\r\n3 0 0\r\n1 3\r\n4 3 1\r\n2 2\r\n5 4 3\r\n3 1\r\n",
                "NO \r\nYES\r\nNO \r\nYES\r\nYES\r\n"
            ]
        ],
        "private_cases": [
            [
                "9\r\n1 0 1\r\n1 0\r\n1 0 1\r\n1 0\r\n1 0 1\r\n1 0\r\n1 0 1\r\n1 0\r\n1 0 1\r\n1 0\r\n1 0 1\r\n1 0\r\n1 0 1\r\n1 0\r\n1 0 1\r\n1 0\r\n1 0 1\r\n1 0\r\n",
                "NO \r\nNO \r\nNO \r\nNO \r\nNO \r\nNO \r\nNO \r\nNO \r\nNO \r\n"
            ]
        ]
    }
]