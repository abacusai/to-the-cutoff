[
    {
        "name": "World Cup",
        "description": "The last stage of Football World Cup is played using the play-off system.\nThere are n teams left in this stage, they are enumerated from 1 to n. Several\nrounds are held, in each round the remaining teams are sorted in the order of\ntheir ids, then the first in this order plays with the second, the third \u2014\nwith the fourth, the fifth \u2014 with the sixth, and so on. It is guaranteed that\nin each round there is even number of teams. The winner of each game advances\nto the next round, the loser is eliminated from the tournament, there are no\ndraws. In the last round there is the only game with two remaining teams: the\nround is called the Final, the winner is called the champion, and the\ntournament is over. Arkady wants his two favorite teams to play in the Final.\nUnfortunately, the team ids are already determined, and it may happen that it\nis impossible for teams to meet in the Final, because they are to meet in some\nearlier stage, if they are strong enough. Determine, in which round the teams\nwith ids a and b can meet. Input The only line contains three integers n, a\nand b (2 \u2264 n \u2264 256, 1 \u2264 a, b \u2264 n) \u2014 the total number of teams, and the ids of\nthe teams that Arkady is interested in. It is guaranteed that n is such that\nin each round an even number of team advance, and that a and b are not equal.\nOutput In the only line print \"Final!\" (without quotes), if teams a and b can\nmeet in the Final. Otherwise, print a single integer \u2014 the number of the round\nin which teams a and b can meet. The round are enumerated from 1. Examples\nInput 4 1 2 Output 1 Input 8 2 6 Output Final! Input 8 7 5 Output 2 Note In\nthe first example teams 1 and 2 meet in the first round. In the second example\nteams 2 and 6 can only meet in the third round, which is the Final, if they\nwin all their opponents in earlier rounds. In the third example the teams with\nids 7 and 5 can meet in the second round, if they win their opponents in the\nfirst round.\n\n",
        "cf_contest_id": 931,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 1 2\r\n",
                "1\r\n"
            ],
            [
                "8 2 6\r\n",
                "Final!\r\n"
            ],
            [
                "8 7 5\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "128 30 98\r\n",
                "Final!\r\n"
            ],
            [
                "256 128 256\r\n",
                "Final!\r\n"
            ],
            [
                "256 2 127\r\n",
                "7\r\n"
            ],
            [
                "2 1 2\r\n",
                "Final!\r\n"
            ],
            [
                "2 2 1\r\n",
                "Final!\r\n"
            ],
            [
                "4 1 3\r\n",
                "Final!\r\n"
            ],
            [
                "4 1 4\r\n",
                "Final!\r\n"
            ],
            [
                "4 2 1\r\n",
                "1\r\n"
            ],
            [
                "4 2 3\r\n",
                "Final!\r\n"
            ],
            [
                "4 2 4\r\n",
                "Final!\r\n"
            ],
            [
                "4 3 1\r\n",
                "Final!\r\n"
            ],
            [
                "4 3 2\r\n",
                "Final!\r\n"
            ],
            [
                "4 3 4\r\n",
                "1\r\n"
            ],
            [
                "4 4 1\r\n",
                "Final!\r\n"
            ],
            [
                "4 4 2\r\n",
                "Final!\r\n"
            ],
            [
                "4 4 3\r\n",
                "1\r\n"
            ],
            [
                "8 8 7\r\n",
                "1\r\n"
            ],
            [
                "8 8 5\r\n",
                "2\r\n"
            ],
            [
                "8 8 1\r\n",
                "Final!\r\n"
            ],
            [
                "16 4 3\r\n",
                "1\r\n"
            ],
            [
                "16 2 4\r\n",
                "2\r\n"
            ],
            [
                "16 14 11\r\n",
                "3\r\n"
            ],
            [
                "16 3 11\r\n",
                "Final!\r\n"
            ],
            [
                "32 10 9\r\n",
                "1\r\n"
            ],
            [
                "32 25 28\r\n",
                "2\r\n"
            ],
            [
                "32 22 18\r\n",
                "3\r\n"
            ],
            [
                "32 17 25\r\n",
                "4\r\n"
            ],
            [
                "32 18 3\r\n",
                "Final!\r\n"
            ],
            [
                "64 40 39\r\n",
                "1\r\n"
            ],
            [
                "64 60 58\r\n",
                "2\r\n"
            ],
            [
                "64 34 37\r\n",
                "3\r\n"
            ],
            [
                "64 26 24\r\n",
                "4\r\n"
            ],
            [
                "64 50 43\r\n",
                "5\r\n"
            ],
            [
                "64 17 42\r\n",
                "Final!\r\n"
            ],
            [
                "128 116 115\r\n",
                "1\r\n"
            ],
            [
                "128 35 33\r\n",
                "2\r\n"
            ],
            [
                "128 61 59\r\n",
                "3\r\n"
            ],
            [
                "128 116 123\r\n",
                "4\r\n"
            ],
            [
                "128 17 15\r\n",
                "5\r\n"
            ],
            [
                "128 124 77\r\n",
                "6\r\n"
            ],
            [
                "128 4 80\r\n",
                "Final!\r\n"
            ],
            [
                "256 224 223\r\n",
                "1\r\n"
            ],
            [
                "256 24 22\r\n",
                "2\r\n"
            ],
            [
                "256 199 196\r\n",
                "3\r\n"
            ],
            [
                "256 148 159\r\n",
                "4\r\n"
            ],
            [
                "256 178 166\r\n",
                "5\r\n"
            ],
            [
                "256 75 97\r\n",
                "6\r\n"
            ],
            [
                "256 185 200\r\n",
                "7\r\n"
            ],
            [
                "256 3 238\r\n",
                "Final!\r\n"
            ],
            [
                "256 128 129\r\n",
                "Final!\r\n"
            ],
            [
                "256 255 129\r\n",
                "7\r\n"
            ],
            [
                "256 255 128\r\n",
                "Final!\r\n"
            ],
            [
                "256 129 256\r\n",
                "7\r\n"
            ],
            [
                "128 98 69\r\n",
                "6\r\n"
            ],
            [
                "128 47 83\r\n",
                "Final!\r\n"
            ],
            [
                "16 2 3\r\n",
                "2\r\n"
            ],
            [
                "64 32 30\r\n",
                "2\r\n"
            ],
            [
                "8 4 5\r\n",
                "Final!\r\n"
            ],
            [
                "8 7 8\r\n",
                "1\r\n"
            ],
            [
                "8 2 3\r\n",
                "2\r\n"
            ],
            [
                "8 2 5\r\n",
                "Final!\r\n"
            ]
        ]
    }
]