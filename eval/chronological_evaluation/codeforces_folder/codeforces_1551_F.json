[
    {
        "name": "Equidistant Vertices",
        "description": "A tree is an undirected connected graph without cycles. You are given a tree\nof \n    n\n vertices. Find the number of ways to choose exactly \n    k\n\nvertices in this tree (i. e. a \n    k\n-element subset of vertices) so that all\npairwise distances between the selected vertices are equal (in other words,\nthere exists an integer \n    c\n such that for all \n    u, v\n (\n    u \n     v\n,\n\n    u, v\n are in selected vertices) \n    d_u,v=c\n, where \n    d_u,v\n is\nthe distance from \n    u\n to \n    v\n). Since the answer may be very large, you\nneed to output it modulo \n    10^9 + 7\n. Input The first line contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n) \u2014 the number of test cases. Then\n\n    t\n test cases follow. Each test case is preceded by an empty line. Each\ntest case consists of several lines. The first line of the test case contains\ntwo integers \n    n\n and \n    k\n (\n    2 \n    \u2264 k \n    \u2264 n \n    \u2264 100\n) \u2014 the\nnumber of vertices in the tree and the number of vertices to be selected,\nrespectively. Then \n    n - 1\n lines follow, each of them contains two\nintegers \n    u\n and \n    v\n (\n    1 \n    \u2264 u, v \n    \u2264 n\n, \n    u \n    \u2260 v\n)\nwhich describe a pair of vertices connected by an edge. It is guaranteed that\nthe given graph is a tree and has no loops or multiple edges. Output For each\ntest case output in a separate line a single integer \u2014 the number of ways to\nselect exactly \n    k\n vertices so that for all pairs of selected vertices the\ndistances between the vertices in the pairs are equal, modulo \n    10^9 + 7\n\n(in other words, print the remainder when divided by \n    1000000007\n).\nExample Input 3 4 2 1 2 2 3 2 4 3 3 1 2 2 3 5 3 1 2 2 3 2 4 4 5 Output 6 0 1\n\n",
        "cf_contest_id": 1551,
        "cf_index": "F",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "combinatorics",
            "dfs and similar",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n\r\n4 2\r\n1 2\r\n2 3\r\n2 4\r\n\r\n3 3\r\n1 2\r\n2 3\r\n\r\n5 3\r\n1 2\r\n2 3\r\n2 4\r\n4 5\r\n",
                "6\r\n0\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "8\r\n\r\n3 2\r\n3 1\r\n1 2\r\n\r\n5 5\r\n4 1\r\n5 4\r\n1 3\r\n2 4\r\n\r\n10 2\r\n2 5\r\n4 10\r\n9 4\r\n7 1\r\n6 2\r\n9 6\r\n3 1\r\n8 7\r\n7 2\r\n\r\n2 2\r\n2 1\r\n\r\n7 4\r\n5 1\r\n1 3\r\n3 6\r\n6 4\r\n3 7\r\n2 3\r\n\r\n10 3\r\n8 4\r\n1 4\r\n7 1\r\n5 1\r\n10 2\r\n8 9\r\n5 3\r\n2 4\r\n6 9\r\n\r\n5 5\r\n1 5\r\n3 5\r\n1 2\r\n4 2\r\n\r\n8 3\r\n1 2\r\n5 8\r\n5 4\r\n2 7\r\n7 6\r\n8 7\r\n3 2\r\n",
                "3\r\n0\r\n45\r\n1\r\n1\r\n4\r\n0\r\n2\r\n"
            ],
            [
                "1\r\n\r\n6 2\r\n1 4\r\n1 6\r\n3 1\r\n6 2\r\n1 5\r\n",
                "15\r\n"
            ],
            [
                "3\r\n\r\n17 14\r\n5 15\r\n16 10\r\n5 10\r\n8 16\r\n9 6\r\n3 17\r\n6 16\r\n3 14\r\n5 7\r\n2 10\r\n14 4\r\n10 4\r\n16 1\r\n16 11\r\n14 12\r\n13 1\r\n\r\n2 2\r\n1 2\r\n\r\n11 10\r\n2 8\r\n1 6\r\n2 11\r\n11 4\r\n6 3\r\n4 10\r\n4 9\r\n5 10\r\n1 10\r\n7 6\r\n",
                "0\r\n1\r\n0\r\n"
            ]
        ]
    }
]