[
    {
        "name": "Steps",
        "description": "One day Vasya went out for a walk in the yard but there weren't any of his\nfriends outside and he had no one to play touch and run. But the boy didn't\nlose the high spirits and decided to play touch and run with himself. You may\nask: \"How did he do that?\" The answer is simple. Vasya noticed that the yard\nis a rectangular n \u00d7 m field. The squares have coordinates (x, y) (1 \u2264 x \u2264 n,\n1 \u2264 y \u2264 m), where x is the index of the row and y is the index of the column.\nInitially Vasya stands in the square with coordinates (xc, yc). To play, he\nhas got a list of k vectors (dxi, dyi) of non-zero length. The game goes like\nthis. The boy considers all vectors in the order from 1 to k, and\nconsecutively chooses each vector as the current one. After the boy has chosen\na current vector, he makes the maximally possible number of valid steps in the\nvector's direction (it is possible that he makes zero steps). A step is\ndefined as one movement from the square where the boy is standing now, in the\ndirection of the current vector. That is, if Vasya is positioned in square (x,\ny), and the current vector is (dx, dy), one step moves Vasya to square (x +\ndx, y + dy). A step is considered valid, if the boy does not go out of the\nyard if he performs the step. Vasya stepped on and on, on and on until he ran\nout of vectors in his list. Ha had been stepping for so long that he\ncompletely forgot how many steps he had made. Help the boy and count how many\nsteps he had made. Input The first input line contains two integers n and m (1\n\u2264 n, m \u2264 10^9) \u2014 the yard's sizes. The second line contains integers xc and yc\n\u2014 the initial square's coordinates (1 \u2264 xc \u2264 n, 1 \u2264 yc \u2264 m). The third line\ncontains an integer k (1 \u2264 k \u2264 10^4) \u2014 the number of vectors. Then follow k\nlines, each of them contains two integers dxi and dyi (|dxi|, |dyi| \u2264 10^9,\n|dx| + |dy| \u2265 1). Output Print the single number \u2014 the number of steps Vasya\nhad made. Please do not use the \nintegers in \u0421++. It is preferred to use the cin, cout streams or the \nspecificator. Examples Input 4 5 1 1 3 1 1 1 1 0 -2 Output 4 Input 10 10 1 2 1\n-1 0 Output 0 Note In the first sample Vasya is initially positioned at square\n(1, 1) and makes 3 steps by the first vector (1, 1). So, he consecutively\nvisits the squares (2, 2), (3, 3), (4, 4). Then he makes 0 steps by the second\nvector (1, 1). He makes 1 more step by the third vector (0, - 2) and he ends\nup in square (4, 2). Overall, Vasya makes 4 steps. In the second sample Vasya\nis initially positioned in square (1, 2) and makes 0 steps by vector ( - 1,\n0), as the square with coordinates (0, 2) is located outside the yard.\n\n",
        "cf_contest_id": 152,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 5\r\n1 1\r\n3\r\n1 1\r\n1 1\r\n0 -2\r\n",
                "4\n"
            ],
            [
                "10 10\r\n1 2\r\n1\r\n-1 0\r\n",
                "0\n"
            ]
        ],
        "private_cases": [
            [
                "10 20\r\n10 3\r\n10\r\n-2 -6\r\n-1 0\r\n-8 0\r\n0 5\r\n-1 3\r\n16 -16\r\n-1 9\r\n0 -18\r\n9 -1\r\n-9 5\r\n",
                "13\n"
            ],
            [
                "20 10\r\n14 4\r\n10\r\n6 0\r\n-7 -7\r\n12 -2\r\n-4 9\r\n20 3\r\n-1 -16\r\n0 2\r\n-1 1\r\n20 0\r\n-1 1\r\n",
                "4\n"
            ],
            [
                "1000 2000\r\n226 566\r\n20\r\n0 -100\r\n-100 100\r\n100 0\r\n42 0\r\n-100 -79\r\n-66 -16\r\n0 -7\r\n-1 0\r\n0 100\r\n100 91\r\n99 0\r\n1 0\r\n-100 0\r\n70 -100\r\n-100 100\r\n100 1\r\n66 0\r\n-100 1\r\n-47 -100\r\n-42 0\r\n",
                "708\n"
            ],
            [
                "1 1\r\n1 1\r\n1\r\n1 1\r\n",
                "0\n"
            ],
            [
                "3 3\r\n2 2\r\n1\r\n2 0\r\n",
                "0\n"
            ]
        ]
    }
]