[
    {
        "name": "Recommendations",
        "description": "VK news recommendation system daily selects interesting publications of one of\n\n    n\n disjoint categories for each user. Each publication belongs to exactly\none category. For each category \n    i\n batch algorithm selects \n    a_i\n\npublications. The latest A/B test suggests that users are reading recommended\npublications more actively if each category has a different number of\npublications within daily recommendations. The targeted algorithm can find a\nsingle interesting publication of \n    i\n-th category within \n    t_i\n\nseconds. What is the minimum total time necessary to add publications to the\nresult of batch algorithm execution, so all categories have a different number\nof publications? You can't remove publications recommended by the batch\nalgorithm. Input The first line of input consists of single integer \n    n\n \u2014\nthe number of news categories (\n    1 \n    \u2264 n \n    \u2264 200\n     000\n). The second\nline of input consists of \n    n\n integers \n    a_i\n \u2014 the number of\npublications of \n    i\n-th category selected by the batch algorithm (\n    1\n    \n    \u2264 a_i \n    \u2264 10^9\n). The third line of input consists of \n    n\n integers\n\n    t_i\n \u2014 time it takes for targeted algorithm to find one new publication\nof category \n    i\n (\n    1 \n    \u2264 t_i \n    \u2264 10^5)\n. Output Print one integer \u2014\nthe minimal required time for the targeted algorithm to get rid of categories\nwith the same size. Examples Input 5 3 7 9 7 8 5 2 5 7 5 Output 6 Input 5 1 2\n3 4 5 1 1 1 1 1 Output 0 Note In the first example, it is possible to find\nthree publications of the second type, which will take 6 seconds. In the\nsecond example, all news categories contain a different number of\npublications.\n\n",
        "cf_contest_id": 1310,
        "cf_index": "A",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n3 7 9 7 8\r\n5 2 5 7 5\r\n",
                "6\r\n"
            ],
            [
                "5\r\n1 2 3 4 5\r\n1 1 1 1 1\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n12 4 19 18 19\r\n15467 14873 66248 58962 90842\r\n",
                "66248\r\n"
            ],
            [
                "40\r\n19 20 8 13 13 17 1 14 15 20 14 17 2 9 9 10 19 16 6 12 9 7 20 5 12 6 4 4 12 5 4 11 8 1 2 8 11 19 18 4\r\n52258 5648 46847 9200 63940 79328 64407 54479 1788 60107 8234 64215 15419 84411 50307 78075 92548 17867 43456 7970 1390 99373 97297 90662 82950 678 79356 51351 2794 82477 16508 19254 81295 9711 72350 11578 21595 69230 82626 25134\r\n",
                "6113465\r\n"
            ],
            [
                "1\r\n204\r\n74562\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1\r\n72\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1\r\n40825\r\n",
                "0\r\n"
            ],
            [
                "1\r\n5\r\n16\r\n",
                "0\r\n"
            ],
            [
                "1\r\n4\r\n85648\r\n",
                "0\r\n"
            ],
            [
                "1\r\n3\r\n31\r\n",
                "0\r\n"
            ],
            [
                "1\r\n23\r\n29532\r\n",
                "0\r\n"
            ],
            [
                "1\r\n743365444\r\n98\r\n",
                "0\r\n"
            ],
            [
                "1\r\n380100964\r\n63923\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1000000000\r\n100000\r\n",
                "0\r\n"
            ],
            [
                "2\r\n5 3\r\n96 59\r\n",
                "0\r\n"
            ],
            [
                "2\r\n3 2\r\n55839 83916\r\n",
                "0\r\n"
            ],
            [
                "2\r\n8 4\r\n57 28\r\n",
                "0\r\n"
            ],
            [
                "2\r\n7 6\r\n2374 9808\r\n",
                "0\r\n"
            ],
            [
                "2\r\n84 18\r\n96 92\r\n",
                "0\r\n"
            ],
            [
                "2\r\n86 67\r\n77701 9079\r\n",
                "0\r\n"
            ],
            [
                "2\r\n624526990 51492804\r\n74 4\r\n",
                "0\r\n"
            ],
            [
                "2\r\n759394108 613490963\r\n19556 57005\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1000000000 1000000000\r\n100000 100000\r\n",
                "100000\r\n"
            ],
            [
                "5\r\n4 2 4 3 3\r\n8 9 34 54 14\r\n",
                "44\r\n"
            ],
            [
                "5\r\n1 5 1 2 1\r\n49027 92184 18591 86401 84238\r\n",
                "153827\r\n"
            ],
            [
                "5\r\n8 2 3 10 1\r\n2 37 19 73 60\r\n",
                "0\r\n"
            ],
            [
                "5\r\n3 10 9 5 8\r\n12157 40766 83283 22455 29741\r\n",
                "0\r\n"
            ],
            [
                "5\r\n2 52 60 67 26\r\n51 96 75 41 88\r\n",
                "0\r\n"
            ],
            [
                "5\r\n82 90 21 10 3\r\n37195 83314 87379 83209 32491\r\n",
                "0\r\n"
            ],
            [
                "5\r\n298137706 371378543 159326899 423775489 643749813\r\n1 90 76 23 14\r\n",
                "0\r\n"
            ],
            [
                "5\r\n487208130 193137490 653652531 77955217 628457798\r\n37995 12724 66478 45619 87697\r\n",
                "0\r\n"
            ],
            [
                "5\r\n1000000000 1000000000 1000000000 1000000000 1000000000\r\n100000 100000 100000 100000 100000\r\n",
                "1000000\r\n"
            ],
            [
                "10\r\n4 4 1 2 2 2 5 4 1 5\r\n28 81 36 44 2 40 39 43 36 33\r\n",
                "593\r\n"
            ],
            [
                "10\r\n1 4 2 3 5 1 3 5 4 2\r\n95757 10134 79392 48220 34450 34587 61472 88154 76492 38800\r\n",
                "779373\r\n"
            ],
            [
                "10\r\n2 2 2 6 4 4 10 2 2 8\r\n18 13 94 43 72 62 23 47 94 41\r\n",
                "630\r\n"
            ],
            [
                "10\r\n2 5 1 9 1 2 7 8 1 10\r\n38888 43309 35602 62895 51161 96523 20607 20309 21976 21231\r\n",
                "255574\r\n"
            ],
            [
                "10\r\n14 31 50 67 42 44 86 82 35 63\r\n76 17 26 44 60 54 50 73 71 70\r\n",
                "0\r\n"
            ],
            [
                "10\r\n97 75 68 98 56 44 68 24 40 18\r\n75753 53146 17573 59200 87853 73083 67536 45475 70260 99681\r\n",
                "17573\r\n"
            ],
            [
                "10\r\n69564153 558821634 273092444 121621442 354953668 157021146 918149509 902159900 772175415 945981912\r\n29 26 22 78 90 35 24 75 52 53\r\n",
                "0\r\n"
            ],
            [
                "10\r\n400625724 498124775 960958038 697226708 233136478 292118728 33139194 339478293 914271877 828083523\r\n9789 90524 51162 97707 59267 60261 43260 60358 64419 44097\r\n",
                "0\r\n"
            ],
            [
                "10\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n100000 100000 100000 100000 100000 100000 100000 100000 100000 100000\r\n",
                "4500000\r\n"
            ]
        ]
    }
]