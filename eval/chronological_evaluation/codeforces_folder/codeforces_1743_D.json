[
    {
        "name": "Problem with Random Tests",
        "description": "You are given a string \n    s\n consisting of \n    n\n characters. Each\ncharacter of \n    s\n is either 0 or 1. A substring of \n    s\n is a contiguous\nsubsequence of its characters. You have to choose two substrings of \n    s\n\n(possibly intersecting, possibly the same, possibly non-intersecting \u2014 just\nany two substrings). After choosing them, you calculate the value of the\nchosen pair of substrings as follows: let \n    s_1\n be the first substring,\n\n    s_2\n be the second chosen substring, and \n    f(s_i)\n be the integer such\nthat \n    s_i\n is its binary representation (for example, if \n    s_i\n is\n11010, \n    f(s_i) = 26\n); the value is the bitwise OR of \n    f(s_1)\n and\n\n    f(s_2)\n. Calculate the maximum possible value you can get, and print it\nin binary representation without leading zeroes. Input The first line contains\none integer \n    n\n \u2014 the number of characters in \n    s\n. The second line\ncontains \n    s\n itself, consisting of exactly \n    n\n characters 0 and/or 1.\nAll non-example tests in this problem are generated randomly: every character\nof \n    s\n is chosen independently of other characters; for each character,\nthe probability of it being 1 is exactly \n    1/2\n. This problem has\nexactly \n    40\n tests. Tests from \n    1\n to \n    3\n are the examples; tests\nfrom \n    4\n to \n    40\n are generated randomly. In tests from \n    4\n to\n\n    10\n, \n    n = 5\n; in tests from \n    11\n to \n    20\n, \n    n = 1000\n; in\ntests from \n    21\n to \n    40\n, \n    n = 10^6\n. Hacks are forbidden in this\nproblem. Output Print the maximum possible value you can get in binary\nrepresentation without leading zeroes. Examples Input 5 11010 Output 11111\nInput 7 1110010 Output 1111110 Input 4 0000 Output 0 Note In the first\nexample, you can choose the substrings 11010 and 101. \n    f(s_1) = 26\n,\n\n    f(s_2) = 5\n, their bitwise OR is \n    31\n, and the binary representation\nof \n    31\n is 11111. In the second example, you can choose the substrings\n1110010 and 11100.\n\n",
        "cf_contest_id": 1743,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "greedy",
            "probabilities"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n11010\r\n",
                "11111\r\n"
            ],
            [
                "7\r\n1110010\r\n",
                "1111110\r\n"
            ],
            [
                "4\r\n0000\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n10110\r\n",
                "11111\r\n"
            ],
            [
                "5\r\n10111\r\n",
                "11111\r\n"
            ],
            [
                "5\r\n11011\r\n",
                "11111\r\n"
            ],
            [
                "5\r\n11000\r\n",
                "11110\r\n"
            ],
            [
                "5\r\n10000\r\n",
                "11000\r\n"
            ],
            [
                "5\r\n10110\r\n",
                "11111\r\n"
            ],
            [
                "5\r\n10111\r\n",
                "11111\r\n"
            ]
        ]
    }
]