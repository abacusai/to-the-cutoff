[
    {
        "name": "Ordering T-Shirts",
        "description": "It's another Start[c]up, and that means there are T-shirts to order. In order\nto make sure T-shirts are shipped as soon as possible, we've decided that this\nyear we're going to order all of the necessary T-shirts before the actual\ncompetition. The top C contestants are going to be awarded T-shirts, but we\nobviously don't know which contestants that will be. The plan is to get the\nT-Shirt sizes of all contestants before the actual competition, and then order\nenough T-shirts so that no matter who is in the top C we'll have T-shirts\navailable in order to award them. In order to get the T-shirt sizes of the\ncontestants, we will send out a survey. The survey will allow contestants to\neither specify a single desired T-shirt size, or two adjacent T-shirt sizes.\nIf a contestant specifies two sizes, it means that they can be awarded either\nsize. As you can probably tell, this plan could require ordering a lot of\nunnecessary T-shirts. We'd like your help to determine the minimum number of\nT-shirts we'll need to order to ensure that we'll be able to award T-shirts no\nmatter the outcome of the competition. Input Input will begin with two\nintegers N and C (1 \u2264 N \u2264 2\u00b710^5, 1 \u2264 C), the number of T-shirt sizes and\nnumber of T-shirts to be awarded, respectively. Following this is a line with\n2\u00b7N - 1 integers, s1 through s2\u00b7N - 1 (0 \u2264 si \u2264 10^8). For odd i, si indicates\nthe number of contestants desiring T-shirt size ((i + 1) / 2). For even i, si\nindicates the number of contestants okay receiving either of T-shirt sizes (i\n/ 2) and (i / 2 + 1). C will not exceed the total number of contestants.\nOutput Print the minimum number of T-shirts we need to buy. Examples Input 2\n200 100 250 100 Output 200 Input 4 160 88 69 62 29 58 52 44 Output 314 Note In\nthe first example, we can buy 100 of each size.\n\n",
        "cf_contest_id": 859,
        "cf_index": "F",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 200\r\n100 250 100\r\n",
                "200\r\n"
            ],
            [
                "4 160\r\n88 69 62 29 58 52 44\r\n",
                "314\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1000\r\n1000000\r\n",
                "1000\r\n"
            ],
            [
                "10 50\r\n10 1 9 2 8 3 7 4 6 5 5 6 4 7 3 8 2 9 1\r\n",
                "95\r\n"
            ],
            [
                "5 99\r\n87 0 65 0 72 0 188 0 91\r\n",
                "414\r\n"
            ],
            [
                "10 15\r\n0 9 0 8 0 7 0 6 0 5 0 4 0 3 0 2 0 1 0\r\n",
                "33\r\n"
            ],
            [
                "1 10\r\n10\r\n",
                "10\r\n"
            ],
            [
                "2 9\r\n10 4 4\r\n",
                "13\r\n"
            ],
            [
                "4 5\r\n0 3 0 8 0 0 0\r\n",
                "5\r\n"
            ],
            [
                "8 15\r\n0 3 0 11 0 4 0 1 0 3 0 11 0 8 0\r\n",
                "30\r\n"
            ],
            [
                "16 61\r\n7 6 7 13 13 5 8 9 6 11 6 1 0 10 2 2 0 2 7 7 10 5 11 8 11 2 5 0 2 9 12\r\n",
                "188\r\n"
            ],
            [
                "32 119\r\n9 12 1 15 5 10 6 11 6 13 10 11 12 6 6 10 12 11 9 14 14 7 7 5 15 11 5 1 0 9 15 3 4 2 3 8 6 14 3 5 1 11 7 1 6 2 9 2 10 9 7 14 5 4 4 4 4 14 7 11 7 2 10\r\n",
                "461\r\n"
            ],
            [
                "64 113\r\n0 16 0 16 0 15 0 6 0 15 0 13 0 13 0 16 0 1 0 8 0 15 0 1 0 7 0 14 0 4 0 1 0 6 0 6 0 11 0 16 0 15 0 9 0 16 0 0 0 7 0 1 0 15 0 1 0 15 0 15 0 4 0 5 0 5 0 15 0 6 0 10 0 4 0 3 0 13 0 13 0 4 0 16 0 10 0 7 0 15 0 2 0 16 0 2 0 5 0 7 0 1 0 11 0 11 0 0 0 11 0 5 0 8 0 7 0 15 0 15 0 2 0 9 0 9 0\r\n",
                "554\r\n"
            ]
        ]
    }
]