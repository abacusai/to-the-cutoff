[
    {
        "name": "Circle of Students",
        "description": "There are \n    n\n students standing in a circle in some order. The index of\nthe \n    i\n-th student is \n    p_i\n. It is guaranteed that all indices of\nstudents are distinct integers from \n    1\n to \n    n\n (i. e. they form a\npermutation). Students want to start a round dance. A clockwise round dance\ncan be started if the student \n    2\n comes right after the student \n    1\n in\nclockwise order (there are no students between them), the student \n    3\n\ncomes right after the student \n    2\n in clockwise order, and so on, and the\nstudent \n    n\n comes right after the student \n    n - 1\n in clockwise order.\nA counterclockwise round dance is almost the same thing \u2014 the only difference\nis that the student \n    i\n should be right after the student \n    i - 1\n in\ncounterclockwise order (this condition should be met for every \n    i\n from\n\n    2\n to \n    n\n). For example, if the indices of students listed in\nclockwise order are \n    [2, 3, 4, 5, 1]\n, then they can start a clockwise\nround dance. If the students have indices \n    [3, 2, 1, 4]\n in clockwise\norder, then they can start a counterclockwise round dance. Your task is to\ndetermine whether it is possible to start a round dance. Note that the\nstudents cannot change their positions before starting the dance; they cannot\nswap or leave the circle, and no other student can enter the circle. You have\nto answer \n    q\n independent queries. Input The first line of the input\ncontains one integer \n    q\n (\n    1 \n    \u2264 q \n    \u2264 200\n) \u2014 the number of\nqueries. Then \n    q\n queries follow. The first line of the query contains one\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 200\n) \u2014 the number of students. The\nsecond line of the query contains a permutation of indices \n    p_1, p_2,\n    \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n), where \n    p_i\n is the index of\nthe \n    i\n-th student (in clockwise order). It is guaranteed that all\n\n    p_i\n are distinct integers from \n    1\n to \n    n\n (i. e. they form a\npermutation). Output For each query, print the answer on it. If a round dance\ncan be started with the given order of students, print \"YES\". Otherwise print\n\"NO\". Example Input 5 4 1 2 3 4 3 1 3 2 5 1 2 3 5 4 1 1 5 3 2 1 5 4 Output YES\nYES NO YES YES\n\n",
        "cf_contest_id": 1203,
        "cf_index": "A",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4\r\n1 2 3 4\r\n3\r\n1 3 2\r\n5\r\n1 2 3 5 4\r\n1\r\n1\r\n5\r\n3 2 1 5 4\r\n",
                "YES\r\nYES\r\nNO\r\nYES\r\nYES\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n12\r\n12 3 4 5 6 7 8 9 10 11 1 2\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n11\r\n11 2 3 4 5 6 7 8 9 10 1\r\n",
                "NO\r\n"
            ]
        ]
    }
]