[
    {
        "name": "Stable Arrangement of Rooks",
        "description": "You have an \n    n \n    \u00d7 n\n chessboard and \n    k\n rooks. Rows of this\nchessboard are numbered by integers from \n    1\n to \n    n\n from top to bottom\nand columns of this chessboard are numbered by integers from \n    1\n to\n\n    n\n from left to right. The cell \n    (x, y)\n is the cell on the\nintersection of row \n    x\n and collumn \n    y\n for \n    1 \n    \u2264 x \n    \u2264 n\n\nand \n    1 \n    \u2264 y \n    \u2264 n\n. The arrangement of rooks on this board is\ncalled good, if no rook is beaten by another rook. A rook beats all the rooks\nthat shares the same row or collumn with it. The good arrangement of rooks on\nthis board is called not stable, if it is possible to move one rook to the\nadjacent cell so arrangement becomes not good. Otherwise, the good arrangement\nis stable. Here, adjacent cells are the cells that share a side. Such\narrangement of \n    3\n rooks on the \n    4 \n    \u00d7 4\n chessboard is good, but\nit is not stable: the rook from \n    (1, 1)\n can be moved to the adjacent cell\n\n    (2, 1)\n and rooks on cells \n    (2, 1)\n and \n    (2, 4)\n will beat each\nother. Please, find any stable arrangement of \n    k\n rooks on the \n    n\n    \n    \u00d7 n\n chessboard or report that there is no such arrangement. Input\nThe first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n)\n\u2014 the number of test cases. The first line of each test case contains two\nintegers \n    n\n, \n    k\n (\n    1 \n    \u2264 k \n    \u2264 n \n    \u2264 40\n) \u2014 the size of\nthe chessboard and the number of rooks. Output If there is a stable\narrangement of \n    k\n rooks on the \n    n \n    \u00d7 n\n chessboard, output\n\n    n\n lines of symbols . and R. The \n    j\n-th symbol of the \n    i\n-th line\nshould be equals R if and only if there is a rook on the cell \n    (i, j)\n in\nyour arrangement. If there are multiple solutions, you may output any of them.\nIf there is no stable arrangement, output \n    -1\n. Example Input 5 3 2 3 3 1\n1 5 2 40 33 Output ..R ... R.. -1 R ..... R.... ..... ....R ..... -1 Note In\nthe first test case, you should find stable arrangement of \n    2\n rooks on\nthe \n    3 \n    \u00d7 3\n chessboard. Placing them in cells \n    (3, 1)\n and\n\n    (1, 3)\n gives stable arrangement. In the second test case it can be shown\nthat it is impossbile to place \n    3\n rooks on the \n    3 \n    \u00d7 3\n\nchessboard to get stable arrangement.\n\n",
        "cf_contest_id": 1621,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3 2\r\n3 3\r\n1 1\r\n5 2\r\n40 33\r\n",
                "R.. ... ..R \r\n-1\r\nR \r\nR.... ..... ..R.. ..... ..... \r\n-1\r\n"
            ]
        ],
        "private_cases": []
    }
]