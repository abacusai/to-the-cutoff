[
    {
        "name": "Harmonious Graph",
        "description": "You're given an undirected graph with \n    n\n nodes and \n    m\n edges. Nodes\nare numbered from \n    1\n to \n    n\n. The graph is considered harmonious if\nand only if the following property holds: For every triple of integers \n    (l,\n    m, r)\n such that \n    1 \n    \u2264 l < m < r \n    \u2264 n\n, if there exists a path\ngoing from node \n    l\n to node \n    r\n, then there exists a path going from\nnode \n    l\n to node \n    m\n. In other words, in a harmonious graph, if from a\nnode \n    l\n we can reach a node \n    r\n through edges (\n    l < r\n), then we\nshould able to reach nodes \n    (l+1), (l+2), \n    \u2026, (r-1)\n too. What is\nthe minimum number of edges we need to add to make the graph harmonious? Input\nThe first line contains two integers \n    n\n and \n    m\n (\n    3 \n    \u2264 n \n    \u2264\n    200\n     000\n and \n    1 \n    \u2264 m \n    \u2264 200\n     000\n). The \n    i\n-th of the\nnext \n    m\n lines contains two integers \n    u_i\n and \n    v_i\n (\n    1 \n    \u2264\n    u_i, v_i \n    \u2264 n\n, \n    u_i \n    \u2260 v_i\n), that mean that there's an edge\nbetween nodes \n    u\n and \n    v\n. It is guaranteed that the given graph is\nsimple (there is no self-loop, and there is at most one edge between every\npair of nodes). Output Print the minimum number of edges we have to add to the\ngraph to make it harmonious. Examples Input 14 8 1 2 2 7 3 4 6 3 5 7 3 8 6 8\n11 12 Output 1 Input 200000 3 7 9 9 8 4 5 Output 0 Note In the first example,\nthe given graph is not harmonious (for instance, \n    1 < 6 < 7\n, node \n    1\n\ncan reach node \n    7\n through the path \n    1 \n    \u2192 2 \n    \u2192\n    7\n, but node \n    1\n can't reach node \n    6\n). However adding the edge\n\n    (2, 4)\n is sufficient to make it harmonious. In the second example, the\ngiven graph is already harmonious.\n\n",
        "cf_contest_id": 1253,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "14 8\r\n1 2\r\n2 7\r\n3 4\r\n6 3\r\n5 7\r\n3 8\r\n6 8\r\n11 12\r\n",
                "1\r\n"
            ],
            [
                "200000 3\r\n7 9\r\n9 8\r\n4 5\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 1\r\n1 3\r\n",
                "1\r\n"
            ],
            [
                "200000 1\r\n1 200000\r\n",
                "199998\r\n"
            ],
            [
                "500 5\r\n100 300\r\n200 400\r\n420 440\r\n430 450\r\n435 460\r\n",
                "335\r\n"
            ]
        ]
    }
]