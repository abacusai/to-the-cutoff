[
    {
        "name": "Assigning to Classes",
        "description": "Reminder: the median of the array \n    [a_1, a_2, \n    \u2026, a_2k+1]\n of odd\nnumber of elements is defined as follows: let \n    [b_1, b_2, \n    \u2026,\n    b_2k+1]\n be the elements of the array in the sorted order. Then median of\nthis array is equal to \n    b_k+1\n. There are \n    2n\n students, the\n\n    i\n-th student has skill level \n    a_i\n. It's not guaranteed that all\nskill levels are distinct. Let's define skill level of a class as the median\nof skill levels of students of the class. As a principal of the school, you\nwould like to assign each student to one of the \n    2\n classes such that each\nclass has odd number of students (not divisible by \n    2\n). The number of\nstudents in the classes may be equal or different, by your choice. Every\nstudent has to be assigned to exactly one class. Among such partitions, you\nwant to choose one in which the absolute difference between skill levels of\nthe classes is minimized. What is the minimum possible absolute difference you\ncan achieve? Input Each test contains multiple test cases. The first line\ncontains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n). The\ndescription of the test cases follows. The first line of each test case\ncontains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of\nstudents halved. The second line of each test case contains \n    2n\n integers\n\n    a_1, a_2, \n    \u2026, a_2 n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 skill levels\nof students. It is guaranteed that the sum of \n    n\n over all test cases does\nnot exceed \n    10^5\n. Output For each test case, output a single integer, the\nminimum possible absolute difference between skill levels of two classes of\nodd sizes. Example Input 3 1 1 1 3 6 5 4 1 2 3 5 13 4 20 13 2 5 8 3 17 16\nOutput 0 1 5 Note In the first test, there is only one way to partition\nstudents \u2014 one in each class. The absolute difference of the skill levels will\nbe \n    |1 - 1| = 0\n. In the second test, one of the possible partitions is to\nmake the first class of students with skill levels \n    [6, 4, 2]\n, so that\nthe skill level of the first class will be \n    4\n, and second with \n    [5, 1,\n    3]\n, so that the skill level of the second class will be \n    3\n. Absolute\ndifference will be \n    |4 - 3| = 1\n. Note that you can't assign like \n    [2,\n    3]\n, \n    [6, 5, 4, 1]\n or \n    []\n, \n    [6, 5, 4, 1, 2, 3]\n because\nclasses have even number of students. \n    [2]\n, \n    [1, 3, 4]\n is also not\npossible because students with skills \n    5\n and \n    6\n aren't assigned to a\nclass. In the third test you can assign the students in the following way:\n\n    [3, 4, 13, 13, 20], [2, 5, 8, 16, 17]\n or \n    [3, 8, 17], [2, 4, 5, 13,\n    13, 16, 20]\n. Both divisions give minimal possible absolute difference.\n\n",
        "cf_contest_id": 1300,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1\r\n1 1\r\n3\r\n6 5 4 1 2 3\r\n5\r\n13 4 20 13 2 5 8 3 17 16\r\n",
                "0\r\n1\r\n5\r\n"
            ]
        ],
        "private_cases": []
    }
]