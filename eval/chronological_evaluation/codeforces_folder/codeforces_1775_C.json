[
    {
        "name": "Interesting Sequence",
        "description": "Petya and his friend, robot Petya++, like to solve exciting math problems. One\nday Petya++ came up with the numbers \n    n\n and \n    x\n and wrote the\nfollowing equality on the board: \n    \n\n    n\n     \n    &\n     (n+1)\n     \n    &\n    \n    \u2026\n     \n    &\n     m = x,\n\n    \n where \n    &\n denotes the bitwise AND\noperation. Then he suggested his friend Petya find such a minimal \n    m\n\n(\n    m \n    \u2265 n\n) that the equality on the board holds. Unfortunately, Petya\ncouldn't solve this problem in his head and decided to ask for computer help.\nHe quickly wrote a program and found the answer. Can you solve this difficult\nproblem? Input Each test contains multiple test cases. The first line contains\nthe number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2000\n). The description\nof the test cases follows. The only line of each test case contains two\nintegers \n    n\n, \n    x\n (\n    0\n    \u2264 n, x \n    \u2264 10^18\n). Output For every\ntest case, output the smallest possible value of \n    m\n such that equality\nholds. If the equality does not hold for any \n    m\n, print \n    -1\n instead.\nWe can show that if the required \n    m\n exists, it does not exceed \n    5\n    \n    \u00b7 10^18\n. Example Input 5 10 8 10 10 10 42 20 16 1000000000000000000\n0 Output 12 10 -1 24 1152921504606846976 Note In the first example, \n    10\n    \n    &\n     11 = 10\n, but \n    10\n     \n    &\n     11\n     \n    &\n     12 = 8\n, so the\nanswer is \n    12\n. In the second example, \n    10 = 10\n, so the answer is\n\n    10\n. In the third example, we can see that the required \n    m\n does not\nexist, so we have to print \n    -1\n.\n\n",
        "cf_contest_id": 1775,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n10 8\r\n10 10\r\n10 42\r\n20 16\r\n1000000000000000000 0\r\n",
                "12\r\n10\r\n-1\r\n24\r\n1152921504606846976\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0 1\r\n",
                "-1\r\n"
            ]
        ]
    }
]