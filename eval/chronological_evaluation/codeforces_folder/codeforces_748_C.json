[
    {
        "name": "Santa Claus and Robot",
        "description": "Santa Claus has Robot which lives on the infinite grid and can move along its\nlines. He can also, having a sequence of m points p1, p2, ..., pm with integer\ncoordinates, do the following: denote its initial location by p0. First, the\nrobot will move from p0 to p1 along one of the shortest paths between them\n(please notice that since the robot moves only along the grid lines, there can\nbe several shortest paths). Then, after it reaches p1, it'll move to p2,\nagain, choosing one of the shortest ways, then to p3, and so on, until he has\nvisited all points in the given order. Some of the points in the sequence may\ncoincide, in that case Robot will visit that point several times according to\nthe sequence order. While Santa was away, someone gave a sequence of points to\nRobot. This sequence is now lost, but Robot saved the protocol of its unit\nmovements. Please, find the minimum possible length of the sequence. Input The\nfirst line of input contains the only positive integer n (1 \u2264 n \u2264 2\u00b710^5)\nwhich equals the number of unit segments the robot traveled. The second line\ncontains the movements protocol, which consists of n letters, each being equal\neither L, or R, or U, or D. k-th letter stands for the direction which Robot\ntraveled the k-th unit segment in: L means that it moved to the left, R \u2014 to\nthe right, U \u2014 to the top and D \u2014 to the bottom. Have a look at the\nillustrations for better explanation. Output The only line of input should\ncontain the minimum possible length of the sequence. Examples Input 4 RURD\nOutput 2 Input 6 RRULDD Output 2 Input 26 RRRULURURUULULLLDLDDRDRDLD Output 7\nInput 3 RLL Output 2 Input 4 LRLR Output 4 Note The illustrations to the first\nthree tests are given below. The last example illustrates that each point in\nthe sequence should be counted as many times as it is presented in the\nsequence.\n\n",
        "cf_contest_id": 748,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\nRURD\r\n",
                "2\r\n"
            ],
            [
                "6\r\nRRULDD\r\n",
                "2\r\n"
            ],
            [
                "26\r\nRRRULURURUULULLLDLDDRDRDLD\r\n",
                "7\r\n"
            ],
            [
                "3\r\nRLL\r\n",
                "2\r\n"
            ],
            [
                "4\r\nLRLR\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\nLRDLR\r\n",
                "4\r\n"
            ],
            [
                "10\r\nDDRDUULUDD\r\n",
                "3\r\n"
            ],
            [
                "1\r\nD\r\n",
                "1\r\n"
            ]
        ]
    }
]