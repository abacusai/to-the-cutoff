[
    {
        "name": "Puzzle From the Future",
        "description": "In the \n    2022\n year, Mike found two binary integers \n    a\n and \n    b\n of\nlength \n    n\n (both of them are written only by digits \n    0\n and \n    1\n)\nthat can have leading zeroes. In order not to forget them, he wanted to\nconstruct integer \n    d\n in the following way: he creates an integer \n    c\n\nas a result of bitwise summing of \n    a\n and \n    b\n without transferring\ncarry, so \n    c\n may have one or more \n    2\n-s. For example, the result of\nbitwise summing of \n    0110\n and \n    1101\n is \n    1211\n or the sum of\n\n    011000\n and \n    011000\n is \n    022000\n; after that Mike replaces equal\nconsecutive digits in \n    c\n by one digit, thus getting \n    d\n. In the cases\nabove after this operation, \n    1211\n becomes \n    121\n and \n    022000\n\nbecomes \n    020\n (so, \n    d\n won't have equal consecutive digits).\nUnfortunately, Mike lost integer \n    a\n before he could calculate \n    d\n\nhimself. Now, to cheer him up, you want to find any binary integer \n    a\n of\nlength \n    n\n such that \n    d\n will be maximum possible as integer. Maximum\npossible as integer means that \n    102 > 21\n, \n    012 < 101\n, \n    021 = 21\n\nand so on. Input The first line contains a single integer \n    t\n (\n    1 \n    \u2264\n    t \n    \u2264 1000\n) \u2014 the number of test cases. The first line of each test case\ncontains the integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the length of\n\n    a\n and \n    b\n. The second line of each test case contains binary integer\n\n    b\n of length \n    n\n. The integer \n    b\n consists only of digits \n    0\n\nand \n    1\n. It is guaranteed that the total sum of \n    n\n over all \n    t\n\ntest cases doesn't exceed \n    10^5\n. Output For each test case output one\nbinary integer \n    a\n of length \n    n\n. Note, that \n    a\n or \n    b\n may\nhave leading zeroes but must have the same length \n    n\n. Example Input 5 1 0\n3 011 3 110 6 111000 6 001011 Output 1 110 100 101101 101110 Note In the first\ntest case, \n    b = 0\n and choosing \n    a = 1\n gives \n    d = 1\n as a result.\nIn the second test case, \n    b = 011\n so: if you choose \n    a = 000\n,\n\n    c\n will be equal to \n    011\n, so \n    d = 01\n; if you choose \n    a =\n    111\n, \n    c\n will be equal to \n    122\n, so \n    d = 12\n; if you choose\n\n    a = 010\n, you'll get \n    d = 021\n. If you select \n    a = 110\n, you'll\nget \n    d = 121\n. We can show that answer \n    a = 110\n is optimal and \n    d =\n    121\n is maximum possible.In the third test case, \n    b = 110\n. If you\nchoose \n    a = 100\n, you'll get \n    d = 210\n and it's the maximum possible\n\n    d\n. In the fourth test case, \n    b = 111000\n. If you choose \n    a =\n    101101\n, you'll get \n    d = 212101\n and it's maximum possible \n    d\n. In\nthe fifth test case, \n    b = 001011\n. If you choose \n    a = 101110\n, you'll\nget \n    d = 102121\n and it's maximum possible \n    d\n.\n\n",
        "cf_contest_id": 1474,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1\r\n0\r\n3\r\n011\r\n3\r\n110\r\n6\r\n111000\r\n6\r\n001011\r\n",
                "1\r\n110\r\n100\r\n101101\r\n101110\r\n"
            ]
        ],
        "private_cases": []
    }
]