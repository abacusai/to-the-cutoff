[
    {
        "name": "Tourism",
        "description": "Alex decided to go on a touristic trip over the country. For simplicity let's\nassume that the country has \n    n\n cities and \n    m\n bidirectional roads\nconnecting them. Alex lives in city \n    s\n and initially located in it. To\ncompare different cities Alex assigned each city a score \n    w_i\n which is as\nhigh as interesting city seems to Alex. Alex believes that his trip will be\ninteresting only if he will not use any road twice in a row. That is if Alex\ncame to city \n    v\n from city \n    u\n, he may choose as the next city in the\ntrip any city connected with \n    v\n by the road, except for the city \n    u\n.\nYour task is to help Alex plan his city in a way that maximizes total score\nover all cities he visited. Note that for each city its score is counted at\nmost once, even if Alex been there several times during his trip. Input First\nline of input contains two integers \n    n\n and \n    m\n, (\n    1 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n, \n    0 \n    \u2264 m \n    \u2264 2 \n    \u00b7 10^5\n) which are numbers of\ncities and roads in the country. Second line contains \n    n\n integers \n    w_1,\n    w_2, \n    \u2026, w_n\n (\n    0 \n    \u2264 w_i \n    \u2264 10^9\n) which are scores of all\ncities. The following \n    m\n lines contain description of the roads. Each of\nthese \n    m\n lines contains two integers \n    u\n and \n    v\n (\n    1 \n    \u2264 u, v\n    \n    \u2264 n\n) which are cities connected by this road. It is guaranteed that\nthere is at most one direct road between any two cities, no city is connected\nto itself by the road and, finally, it is possible to go from any city to any\nother one using only roads. The last line contains single integer \n    s\n\n(\n    1 \n    \u2264 s \n    \u2264 n\n), which is the number of the initial city. Output\nOutput single integer which is the maximum possible sum of scores of visited\ncities. Examples Input 5 7 2 2 8 6 9 1 2 1 3 2 4 3 2 4 5 2 5 1 5 2 Output 27\nInput 10 12 1 7 1 9 3 3 6 30 1 10 1 2 1 3 3 5 5 7 2 3 5 4 6 9 4 6 3 7 6 8 9 4\n9 10 6 Output 61\n\n",
        "cf_contest_id": 1220,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "graphs",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 7\r\n2 2 8 6 9\r\n1 2\r\n1 3\r\n2 4\r\n3 2\r\n4 5\r\n2 5\r\n1 5\r\n2\r\n",
                "27\r\n"
            ],
            [
                "10 12\r\n1 7 1 9 3 3 6 30 1 10\r\n1 2\r\n1 3\r\n3 5\r\n5 7\r\n2 3\r\n5 4\r\n6 9\r\n4 6\r\n3 7\r\n6 8\r\n9 4\r\n9 10\r\n6\r\n",
                "61\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 0\r\n1000000000\r\n1\r\n",
                "1000000000\r\n"
            ],
            [
                "2 1\r\n999999999 2\r\n1 2\r\n2\r\n",
                "1000000001\r\n"
            ],
            [
                "3 2\r\n1 1335 2\r\n2 1\r\n3 2\r\n2\r\n",
                "1337\r\n"
            ],
            [
                "3 3\r\n1 1 1\r\n1 2\r\n3 2\r\n3 1\r\n3\r\n",
                "3\r\n"
            ],
            [
                "6 6\r\n0 0 0 2 0 1\r\n1 2\r\n2 3\r\n3 1\r\n3 4\r\n1 6\r\n5 3\r\n5\r\n",
                "2\r\n"
            ],
            [
                "8 9\r\n1 7 1 9 3 3 6 30\r\n1 2\r\n1 3\r\n3 5\r\n5 7\r\n2 3\r\n5 4\r\n4 6\r\n3 7\r\n6 8\r\n6\r\n",
                "60\r\n"
            ],
            [
                "8 9\r\n0 2 10 0 1 0 4 1\r\n3 8\r\n4 8\r\n1 5\r\n6 4\r\n5 7\r\n6 8\r\n5 8\r\n2 1\r\n3 5\r\n5\r\n",
                "16\r\n"
            ],
            [
                "10 9\r\n96 86 63 95 78 91 96 100 99 90\r\n10 5\r\n1 2\r\n8 7\r\n4 5\r\n4 6\r\n3 8\r\n6 7\r\n3 9\r\n10 2\r\n8\r\n",
                "732\r\n"
            ],
            [
                "10 20\r\n64 70 28 86 100 62 79 86 85 95\r\n7 10\r\n6 2\r\n4 8\r\n8 10\r\n9 2\r\n5 1\r\n5 3\r\n8 2\r\n3 6\r\n4 3\r\n9 4\r\n4 2\r\n6 9\r\n7 6\r\n8 6\r\n7 3\r\n8 5\r\n2 7\r\n8 7\r\n7 4\r\n4\r\n",
                "755\r\n"
            ],
            [
                "10 9\r\n0 1 0 1 2 1 1 1 2 1\r\n1 7\r\n6 4\r\n1 8\r\n10 7\r\n1 2\r\n1 9\r\n9 3\r\n5 1\r\n1 4\r\n2\r\n",
                "3\r\n"
            ],
            [
                "10 10\r\n1 1 4 1 3 0 4 0 1 0\r\n3 9\r\n3 2\r\n4 5\r\n10 7\r\n4 8\r\n5 3\r\n5 7\r\n7 1\r\n6 7\r\n1 8\r\n7\r\n",
                "14\r\n"
            ],
            [
                "17 17\r\n1 0 0 2 2 0 1 0 2 0 0 0 0 2 1 0 1\r\n13 14\r\n8 12\r\n14 7\r\n10 14\r\n9 8\r\n4 14\r\n12 11\r\n8 4\r\n14 15\r\n16 2\r\n5 12\r\n1 6\r\n5 2\r\n5 6\r\n2 7\r\n2 17\r\n2 3\r\n1\r\n",
                "10\r\n"
            ],
            [
                "30 30\r\n81 86 81 91 90 100 98 89 96 97 88 99 68 45 82 92 94 80 99 67 70 90 81 74 91 100 92 89 74 98\r\n16 26\r\n20 3\r\n23 16\r\n17 27\r\n30 22\r\n18 23\r\n14 30\r\n25 4\r\n3 8\r\n18 9\r\n29 26\r\n27 21\r\n26 6\r\n10 7\r\n28 5\r\n1 30\r\n28 30\r\n12 15\r\n17 25\r\n26 15\r\n30 2\r\n5 15\r\n14 20\r\n10 4\r\n24 16\r\n8 7\r\n11 30\r\n19 8\r\n21 9\r\n13 15\r\n2\r\n",
                "1909\r\n"
            ],
            [
                "10 45\r\n1 0 2 2 2 1 1 2 1 0\r\n3 1\r\n9 6\r\n7 1\r\n6 8\r\n8 4\r\n2 7\r\n7 10\r\n4 5\r\n7 4\r\n3 4\r\n9 2\r\n7 5\r\n8 5\r\n5 1\r\n7 3\r\n6 2\r\n3 5\r\n3 8\r\n1 9\r\n10 3\r\n9 7\r\n4 6\r\n9 8\r\n5 9\r\n10 8\r\n2 1\r\n9 4\r\n3 9\r\n8 7\r\n5 10\r\n6 5\r\n4 2\r\n2 8\r\n4 10\r\n9 10\r\n6 10\r\n6 1\r\n6 7\r\n3 6\r\n2 5\r\n8 1\r\n1 4\r\n10 1\r\n10 2\r\n3 2\r\n6\r\n",
                "12\r\n"
            ],
            [
                "10 20\r\n4 1 5 1 3 0 2 2 10 4\r\n10 6\r\n10 4\r\n2 5\r\n6 3\r\n2 9\r\n1 7\r\n5 10\r\n5 6\r\n5 3\r\n3 4\r\n9 6\r\n1 8\r\n10 9\r\n10 3\r\n9 4\r\n4 6\r\n6 2\r\n3 8\r\n9 5\r\n8 2\r\n10\r\n",
                "32\r\n"
            ],
            [
                "28 31\r\n0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 2 1 0 1 0 0 1 1 1 0\r\n9 7\r\n24 10\r\n12 27\r\n3 20\r\n16 3\r\n27 8\r\n23 25\r\n19 20\r\n10 17\r\n7 13\r\n7 5\r\n15 11\r\n19 1\r\n25 4\r\n26 22\r\n21 3\r\n17 24\r\n27 11\r\n26 20\r\n22 24\r\n8 12\r\n25 6\r\n2 14\r\n22 28\r\n20 18\r\n2 21\r\n13 9\r\n23 4\r\n19 7\r\n22 25\r\n11 24\r\n2\r\n",
                "9\r\n"
            ]
        ]
    }
]