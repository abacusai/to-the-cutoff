[
    {
        "name": "Recursive Queries",
        "description": "You are given a permutation \n    p_1, p_2, \n    \u2026, p_n\n. You should answer\n\n    q\n queries. Each query is a pair \n    (l_i, r_i)\n, and you should\ncalculate \n    f(l_i, r_i)\n. Let's denote \n    m_l, r\n as the position of\nthe maximum in subsegment \n    p_l, p_l+1, \n    \u2026, p_r\n. Then \n    f(l, r) =\n    (r - l + 1) + f(l, m_l,r - 1) + f(m_l,r + 1, r)\n if \n    l \n    \u2264 r\n or\n\n    0\n otherwise. Input The first line contains two integers \n    n\n and\n\n    q\n (\n    1 \n    \u2264 n \n    \u2264 10^6\n, \n    1 \n    \u2264 q \n    \u2264 10^6\n) \u2014 the size of\nthe permutation \n    p\n and the number of queries. The second line contains\n\n    n\n pairwise distinct integers \n    p_1, p_2, \n    \u2026, p_n\n (\n    1 \n    \u2264\n    p_i \n    \u2264 n\n, \n    p_i \n    \u2260 p_j\n for \n    i \n    \u2260 j\n) \u2014 permutation\n\n    p\n. The third line contains \n    q\n integers \n    l_1, l_2, \n    \u2026, l_q\n\n\u2014 the first parts of the queries. The fourth line contains \n    q\n integers\n\n    r_1, r_2, \n    \u2026, r_q\n \u2014 the second parts of the queries. It's\nguaranteed that \n    1 \n    \u2264 l_i \n    \u2264 r_i \n    \u2264 n\n for all queries. Output\nPrint \n    q\n integers \u2014 the values \n    f(l_i, r_i)\n for the corresponding\nqueries. Example Input 4 5 3 1 4 2 2 1 1 2 1 2 3 4 4 1 Output 1 6 8 5 1 Note\nDescription of the queries: \n    f(2, 2) = (2 - 2 + 1) + f(2, 1) + f(3, 2) = 1 +\n    0 + 0 = 1\n; \n    f(1, 3) = (3 - 1 + 1) + f(1, 2) + f(4, 3) = 3 + (2 - 1 + 1) +\n    f(1, 0) + f(2, 2) = 3 + 2 + (2 - 2 + 1) = 6\n; \n    f(1, 4) = (4 - 1 + 1) +\n    f(1, 2) + f(4, 4) = 4 + 3 + 1 = 8\n; \n    f(2, 4) = (4 - 2 + 1) + f(2, 2) +\n    f(4, 4) = 3 + 1 + 1 = 5\n; \n    f(1, 1) = (1 - 1 + 1) + 0 + 0 = 1\n.\n\n",
        "cf_contest_id": 1117,
        "cf_index": "G",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 5\r\n3 1 4 2\r\n2 1 1 2 1\r\n2 3 4 4 1\r\n",
                "1 6 8 5 1\r\n"
            ]
        ],
        "private_cases": []
    }
]