[
    {
        "name": "Minimum Possible LCM",
        "description": "You are given an array \n    a\n consisting of \n    n\n integers \n    a_1, a_2,\n    \n    \u2026, a_n\n. Your problem is to find such pair of indices \n    i, j\n (\n    1\n    \n    \u2264 i < j \n    \u2264 n\n) that \n    lcm(a_i, a_j)\n is minimum possible.\n\n    lcm(x, y)\n is the least common multiple of \n    x\n and \n    y\n (minimum\npositive number such that both \n    x\n and \n    y\n are divisors of this\nnumber). Input The first line of the input contains one integer \n    n\n (\n    2\n    \n    \u2264 n \n    \u2264 10^6\n) \u2014 the number of elements in \n    a\n. The second line of\nthe input contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264\n    a_i \n    \u2264 10^7\n), where \n    a_i\n is the \n    i\n-th element of \n    a\n.\nOutput Print two integers \n    i\n and \n    j\n (\n    1 \n    \u2264 i < j \n    \u2264 n\n)\nsuch that the value of \n    lcm(a_i, a_j)\n is minimum among all valid pairs\n\n    i, j\n. If there are multiple answers, you can print any. Examples Input 5\n2 4 8 3 6 Output 1 2 Input 5 5 2 11 3 7 Output 2 4 Input 6 2 5 10 1 10 2\nOutput 1 4\n\n",
        "cf_contest_id": 1154,
        "cf_index": "G",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "5\r\n2 4 8 3 6\r\n",
                "1 2"
            ],
            [
                "5\r\n5 2 11 3 7\r\n",
                "2 4"
            ],
            [
                "6\r\n2 5 10 1 10 2\r\n",
                "1 6"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 1\r\n",
                "1 2"
            ],
            [
                "2\r\n10000000 9999999\r\n",
                "1 2"
            ],
            [
                "4\r\n21 23 26 28\r\n",
                "1 4"
            ],
            [
                "2\r\n7 2\r\n",
                "1 2"
            ],
            [
                "2\r\n6 7\r\n",
                "1 2"
            ],
            [
                "2\r\n4 4\r\n",
                "1 2"
            ],
            [
                "2\r\n8 8\r\n",
                "1 2"
            ],
            [
                "2\r\n6 5\r\n",
                "1 2"
            ],
            [
                "3\r\n3 4 3\r\n",
                "1 3"
            ],
            [
                "3\r\n8 8 6\r\n",
                "1 2"
            ],
            [
                "3\r\n7 4 7\r\n",
                "1 3"
            ],
            [
                "3\r\n8 6 7\r\n",
                "1 2"
            ],
            [
                "3\r\n6 7 8\r\n",
                "1 3"
            ],
            [
                "4\r\n8 6 8 1\r\n",
                "2 4"
            ],
            [
                "4\r\n6 4 4 7\r\n",
                "2 3"
            ],
            [
                "4\r\n7 3 3 4\r\n",
                "2 3"
            ],
            [
                "4\r\n7 7 6 7\r\n",
                "1 2"
            ],
            [
                "4\r\n7 5 5 6\r\n",
                "2 3"
            ],
            [
                "5\r\n4 7 6 6 6\r\n",
                "3 4"
            ],
            [
                "5\r\n3 4 4 2 3\r\n",
                "1 5"
            ],
            [
                "5\r\n5 5 4 5 8\r\n",
                "1 2"
            ],
            [
                "5\r\n7 4 5 5 5\r\n",
                "3 4"
            ],
            [
                "5\r\n7 6 7 8 5\r\n",
                "1 3"
            ],
            [
                "3\r\n10000000 9999999 9999997\r\n",
                "2 3"
            ],
            [
                "2\r\n999999 1000000\r\n",
                "1 2"
            ],
            [
                "4\r\n9999991 9999883 9999659 9999433\r\n",
                "3 4"
            ],
            [
                "3\r\n1 1 10000000\r\n",
                "1 2"
            ],
            [
                "3\r\n10000000 9999999 9999998\r\n",
                "1 3"
            ]
        ]
    }
]