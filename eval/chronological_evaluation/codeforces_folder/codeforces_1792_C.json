[
    {
        "name": "Min Max Sort",
        "description": "You are given a permutation \n    p\n of length \n    n\n (a permutation of length\n\n    n\n is an array of length \n    n\n in which each integer from \n    1\n to\n\n    n\n occurs exactly once). You can perform the following operation any\nnumber of times (possibly zero): choose two different elements \n    x\n and\n\n    y\n and erase them from the permutation; insert the minimum of \n    x\n and\n\n    y\n into the permutation in such a way that it becomes the first element;\ninsert the maximum of \n    x\n and \n    y\n into the permutation in such a way\nthat it becomes the last element. For example, if \n    p = [1, 5, 4, 2, 3]\n\nand we want to apply the operation to the elements \n    3\n and \n    5\n, then\nafter the first step of the operation, the permutation becomes \n    p = [1, 4,\n    2]\n; and after we insert the elements, it becomes \n    p = [3, 1, 4, 2, 5]\n.\nYour task is to calculate the minimum number of operations described above to\nsort the permutation \n    p\n in ascending order (i. e. transform \n    p\n so\nthat \n    p_1 < p_2 < \n    \u2026 < p_n\n). Input The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The\nfirst line of the test case contains a single integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of elements in the permutation. The\nsecond line of the test case contains \n    n\n distinct integers from \n    1\n\nto \n    n\n \u2014 the given permutation \n    p\n. The sum of \n    n\n over all test\ncases doesn't exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, output a\nsingle integer \u2014 the minimum number of operations described above to sort the\narray \n    p\n in ascending order. Example Input 4 5 1 5 4 2 3 3 1 2 3 4 2 1 4\n3 6 5 2 4 1 6 3 Output 2 0 1 3 Note In the first example, you can proceed as\nfollows: in the permutation \n    p = [1, 5, 4, 2, 3]\n, let's choose the\nelements \n    4\n and \n    2\n, then, after applying the operation, the\npermutation becomes \n    p = [2, 1, 5, 3, 4]\n; in the permutation \n    p = [2,\n    1, 5, 3, 4]\n, let's choose the elements \n    1\n and \n    5\n, then, after\napplying operation, the permutation becomes \n    p = [1, 2, 3, 4, 5]\n.\n\n",
        "cf_contest_id": 1792,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "greedy",
            "math",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5\r\n1 5 4 2 3\r\n3\r\n1 2 3\r\n4\r\n2 1 4 3\r\n6\r\n5 2 4 1 6 3\r\n",
                "2\r\n0\r\n1\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]