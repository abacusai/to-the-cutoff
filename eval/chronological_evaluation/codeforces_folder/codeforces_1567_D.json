[
    {
        "name": "Expression Evaluation Error",
        "description": "On the board, Bob wrote \n    n\n positive integers in base \n    10\n with sum\n\n    s\n (i. e. in decimal numeral system). Alice sees the board, but\naccidentally interprets the numbers on the board as base-\n    11\n integers and\nadds them up (in base \n    11\n). What numbers should Bob write on the board,\nso Alice's sum is as large as possible? Input The input consists of multiple\ntest cases. The first line contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    100\n) \u2014 the number of test cases. The description of the test cases follows.\nThe only line of each test case contains two integers \n    s\n and \n    n\n\n(\n    1 \n    \u2264 s \n    \u2264 10^9\n; \n    1 \n    \u2264 n \n    \u2264\n    min(100, s)\n) \u2014 the\nsum and amount of numbers on the board, respectively. Numbers \n    s\n and\n\n    n\n are given in decimal notation (base \n    10\n). Output For each test\ncase, output \n    n\n positive integers \u2014 the numbers Bob should write on the\nboard, so Alice's sum is as large as possible. If there are multiple answers,\nprint any of them. Example Input 6 97 2 17 1 111 4 100 2 10 9 999999 3 Output\n70 27 17 3 4 100 4 10 90 1 1 2 1 1 1 1 1 1 999900 90 9 Note In the first test\ncase, \n    70_10 + 27_10 = 97_10\n, and Alice's sum is \n    \n\n    70_11 +\n    27_11 = 97_11 = 9 \n    \u00b7 11 + 7 = 106_10.\n\n    \n (Here \n    x_b\n\nrepresents the number \n    x\n in base \n    b\n.) It can be shown that it is\nimpossible for Alice to get a larger sum than \n    106_10\n. In the second\ntest case, Bob can only write a single number on the board, so he must write\n\n    17\n. In the third test case, \n    3_10 + 4_10 + 100_10 + 4_10 =\n    111_10\n, and Alice's sum is \n    \n\n    3_11 + 4_11 + 100_11 + 4_11 =\n    110_11 = 1 \n    \u00b7 11^2 + 1 \n    \u00b7 11 = 132_10.\n\n    \n It can be shown\nthat it is impossible for Alice to get a larger sum than \n    132_10\n.\n\n",
        "cf_contest_id": 1567,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n97 2\r\n17 1\r\n111 4\r\n100 2\r\n10 9\r\n999999 3\r\n",
                "10 87\r\n17\r\n100 1 1 9\r\n10 90\r\n1 1 1 1 1 1 1 1 2\r\n100000 100000 799999\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 1\r\n",
                "1\r\n"
            ]
        ]
    }
]