[
    {
        "name": "PE Lesson",
        "description": "Smart Beaver decided to be not only smart, but also a healthy beaver! And so\nhe began to attend physical education classes at school X. In this school,\nphysical education has a very creative teacher. One of his favorite warm-up\nexercises is throwing balls. Students line up. Each one gets a single ball in\nthe beginning. The balls are numbered from 1 to n (by the demand of the\ninventory commission). Figure 1. The initial position for n = 5. After\nreceiving the balls the students perform the warm-up exercise. The exercise\ntakes place in a few throws. For each throw the teacher chooses any two\narbitrary different students who will participate in it. The selected students\nthrow their balls to each other. Thus, after each throw the students remain in\ntheir positions, and the two balls are swapped. Figure 2. The example of a\nthrow. In this case there was a throw between the students, who were holding\nthe 2-nd and the 4-th balls. Since the warm-up has many exercises, each of\nthem can only continue for little time. Therefore, for each student we know\nthe maximum number of throws he can participate in. For this lessons maximum\nnumber of throws will be 1 or 2. Note that after all phases of the considered\nexercise any ball can end up with any student. Smart Beaver decided to\nformalize it and introduced the concept of the \"ball order\". The ball order is\na sequence of n numbers that correspond to the order of balls in the line. The\nfirst number will match the number of the ball of the first from the left\nstudent in the line, the second number will match the ball of the second\nstudent, and so on. For example, in figure 2 the order of the balls was (1, 2,\n3, 4, 5), and after the throw it was (1, 4, 3, 2, 5). Smart beaver knows the\nnumber of students and for each student he knows the maximum number of throws\nin which he can participate. And now he is wondering: what is the number of\ndistinct ways of ball orders by the end of the exercise. Input The first line\ncontains a single number n \u2014 the number of students in the line and the number\nof balls. The next line contains exactly n space-separated integers. Each\nnumber corresponds to a student in the line (the i-th number corresponds to\nthe i-th from the left student in the line) and shows the number of throws he\ncan participate in. The input limits for scoring 30 points are (subproblem\nD1): 1 \u2264 n \u2264 10. The input limits for scoring 70 points are (subproblems\nD1+D2): 1 \u2264 n \u2264 500. The input limits for scoring 100 points are (subproblems\nD1+D2+D3): 1 \u2264 n \u2264 1000000. Output The output should contain a single integer\n\u2014 the number of variants of ball orders after the warm up exercise is\ncomplete. As the number can be rather large, print it modulo 1000000007 (10^9\n+ 7). Examples Input 5 1 2 2 1 2 Output 120 Input 8 1 2 2 1 2 1 1 2 Output\n16800\n\n",
        "cf_contest_id": 316,
        "cf_index": "D3",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "math"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2 2 1 2\r\n",
                "120\r\n"
            ],
            [
                "8\r\n1 2 2 1 2 1 1 2\r\n",
                "16800\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2\r\n",
                "1\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "2\r\n2 2\r\n",
                "2\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "2\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "2\r\n"
            ],
            [
                "10\r\n2 2 2 2 2 2 1 2 1 1\r\n",
                "2419200\r\n"
            ],
            [
                "10\r\n2 1 1 2 1 2 1 2 2 1\r\n",
                "786240\r\n"
            ],
            [
                "10\r\n1 1 1 1 1 1 1 1 1 1\r\n",
                "9496\r\n"
            ],
            [
                "10\r\n1 1 1 1 2 1 1 1 1 1\r\n",
                "26200\r\n"
            ],
            [
                "10\r\n2 1 2 2 2 2 2 2 2 2\r\n",
                "3628800\r\n"
            ],
            [
                "10\r\n2 2 2 2 2 2 2 2 2 2\r\n",
                "3628800\r\n"
            ],
            [
                "10\r\n1 1 1 1 1 2 1 1 2 1\r\n",
                "68760\r\n"
            ],
            [
                "9\r\n1 1 1 2 2 1 1 1 1\r\n",
                "16704\r\n"
            ],
            [
                "100\r\n2 2 2 2 1 1 2 2 1 2 2 1 1 2 2 2 2 2 2 1 1 2 2 2 2 1 2 1 1 2 2 1 2 2 1 2 2 2 2 2 2 1 2 2 2 2 2 1 2 1 2 2 2 2 2 2 2 2 1 2 2 2 2 2 1 2 1 1 2 1 1 2 2 2 2 1 2 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 1 2 2 2 2\r\n",
                "834603967\r\n"
            ],
            [
                "200\r\n1 2 1 1 2 2 1 1 1 1 1 1 2 1 2 2 2 2 2 1 2 2 1 1 2 2 2 2 2 1 2 1 1 2 2 2 1 2 2 2 1 1 2 2 2 1 2 2 1 2 1 2 2 1 2 2 2 2 2 1 2 2 1 2 1 1 2 2 2 2 2 2 2 1 2 2 2 1 1 2 2 2 2 1 1 2 2 1 1 1 2 2 1 1 2 2 1 1 2 2 2 1 2 2 2 1 2 1 2 2 2 2 2 2 2 1 1 1 2 2 2 2 2 2 2 2 1 1 2 2 2 2 2 1 2 1 2 1 1 1 2 2 2 1 2 1 2 2 1 2 2 1 2 1 2 1 1 2 2 1 2 2 1 2 1 1 2 1 1 2 2 2 2 1 2 1 1 1 1 1 1 1 1 2 1 2 1 1 2 1 2 1 2 2 1 2 1 1 1 2\r\n",
                "83780780\r\n"
            ]
        ]
    }
]