[
    {
        "name": "Dominoes",
        "description": "Dora likes to play with dominoes. She takes \n    n \n    \u00d7 m\n table, marks\nsome cells as occupied, and then tries to fill all unoccupied cells with \n    2\n    \n    \u00d7 1\n dominoes. Her little brother Dani loves to play pranks on his\nolder sister. So when she is away, he marks two more unoccupied cells as\noccupied. He wants to do it in such a way that it will be impossible to fill\nall unoccupied cells with dominoes. Help Dani to count the number of ways he\ncan select these two cells. Since Dani can only count to one million, if this\nnumber of ways is \n    x\n, output \n    min(x, 10^6)\n. Input The first line\ncontains integers \n    n\n and \n    m\n (\n    1\n    \u2264 n, m\n    \u2264 1000\n). Next\n\n    n\n lines contain \n    m\n characters each \u2014 the initial state of the\ntable. Character \"#\" corresponds to an occupied cell, and character \".\"\ncorresponds to an unoccupied cell. It is guaranteed that there are at least\ntwo unoccupied cells, and that it is possible to fill all unoccupied cells\nwith dominoes. Output Let \n    x\n be the number of ways Dani can mark two\ncells in such a way that it will be impossible to fill all unoccupied cells\nwith dominoes. Print one integer \n    min(x, 10^6)\n. Examples Input 3 6\n...#.. ...... #...## Output 52 Input 2 2 .. .. Output 2 Input 2 2 #. #. Output\n0\n\n",
        "cf_contest_id": 1773,
        "cf_index": "D",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "flows",
            "graph matchings",
            "greedy"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [],
        "private_cases": []
    }
]