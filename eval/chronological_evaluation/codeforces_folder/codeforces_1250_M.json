[
    {
        "name": "SmartGarden",
        "description": "Berland Gardeners United Inc. hired you for the project called \"SmartGarden\".\nThe main feature of this project is automatic garden watering. Formally the\ngarden can be represented as a square of \n    n \n    \u00d7 n\n cells with rows\nnumbered \n    1\n to \n    n\n from top to bottom and columns numbered \n    1\n to\n\n    n\n from left to right. Each cell of the garden contains either a plant or\na slab. It's known that slabs are located on the main diagonal of the matrix\nrepresenting the garden, and in the cells that are below the main diagonal and\nshare a side with at least one cell of the main diagonal. All the remaining\ncells of the garden are filled with plants. Example of the garden for\n\n    n=5\n. During implementation of the project you created a smart robot that\ntakes a list of commands as an input, which are processed one by one. Each\ncommand contains: a list of horizontal lines (rows in the matrix representing\nthe garden); a list of vertical lines (columns in the matrix representing the\ngarden). While executing each command robot waters only cells in the\nintersection of specified rows and specified columns. So, if you specify\n\n    r\n rows and \n    c\n columns, then exactly \n    r \n    \u00b7 c\n cells will be\nwatered. In the demo for the customer you have tuned robot in such a way that\nit waters all the garden. To do that you prepared a single command containing\nall \n    n\n rows and all \n    n\n columns. Unfortunately, 5 hours before the\ndemo for your customer it turned out that the CEO of Berland Gardeners United\nInc. was going to take part in it. Moreover, most probably he will be standing\non a garden slab during the demo! Now you need to create a list of commands\nfor the robot so that it waters all the plants and doesn't water any cell\ncontaining a slab. Since it's only a beta version of \"SmartGarden\", the total\nnumber of commands shouldn't exceed \n    50\n. Create a program that, for a\ngiven size of the garden, will find a list of no more than \n    50\n commands\nthat allow the robot to water all the plants in the garden without watering\nthe slabs. It is allowed to water a plant several times. Input The first and\nthe only line of the input contains a single integer \n    n\n (\n    2 \n    \u2264 n\n    \n    \u2264 5000\n), where \n    n\n is the size of the garden. Output In the first\nline print the total number of commands for the robot \n    k\n (\n    1 \n    \u2264 k\n    \n    \u2264 50\n). In the next \n    2 \n    \u00b7 k\n lines print all the commands. Each\ncommand should be specified by \n    2\n lines. The first line of each command\nshould describe rows in the command and the second line should describe\ncolumns in the command. Each of these \n    2\n lines should have the following\nformat: the first number of the line should specify the total number of items\n\n    x\n in the appropriate list; then \n    x\n distinct numbers follow, where\neach number is in the range \n    1 \n    \u2026 n\n and describes a chosen row for\nthe first line and a chosen column for the second line. If there are multiple\nways to water the garden, print any of them. Examples Input 2 Output 2 1 1 1 2\n1 1 1 2 Input 4 Output 4 2 1 4 1 2 2 1 2 2 3 4 1 3 2 1 4 1 4 1 1\n\n",
        "cf_contest_id": 1250,
        "cf_index": "M",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "divide and conquer"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [],
        "private_cases": []
    }
]