[
    {
        "name": "Baby Ehab's Hyper Apartment",
        "description": "This is an interactive problem. Baby Ehab loves crawling around his apartment.\nIt has \n    n\n rooms numbered from \n    0\n to \n    n-1\n. For every pair of\nrooms, \n    a\n and \n    b\n, there's either a direct passage from room \n    a\n\nto room \n    b\n, or from room \n    b\n to room \n    a\n, but never both. Baby\nEhab wants to go play with Baby Badawy. He wants to know if he could get to\nhim. However, he doesn't know anything about his apartment except the number\nof rooms. He can ask the baby sitter two types of questions: is the passage\nbetween room \n    a\n and room \n    b\n directed from \n    a\n to \n    b\n or the\nother way around? does room \n    x\n have a passage towards any of the rooms\n\n    s_1\n, \n    s_2\n, ..., \n    s_k\n? He can ask at most \n    9n\n queries of\nthe first type and at most \n    2n\n queries of the second type. After asking\nsome questions, he wants to know for every pair of rooms \n    a\n and \n    b\n\nwhether there's a path from \n    a\n to \n    b\n or not. A path from \n    a\n to\n\n    b\n is a sequence of passages that starts from room \n    a\n and ends at\nroom \n    b\n. Input The first line contains an integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 30\n) \u2014 the number of test cases you need to solve. Then each test case\nstarts with an integer \n    n\n (\n    4 \n    \u2264 n \n    \u2264 100\n) \u2014 the number of\nrooms. The sum of \n    n\n across the test cases doesn't exceed \n    500\n.\nOutput To print the answer for a test case, print a line containing \"3\",\nfollowed by \n    n\n lines, each containing a binary string of length \n    n\n.\nThe \n    j\n-th character of the \n    i\n-th string should be \n    1\n if there's\na path from room \n    i\n to room \n    j\n, and \n    0\n if there isn't. The\n\n    i\n-th character of the \n    i\n-th string should be \n    1\n for each valid\n\n    i\n. After printing the answer, we will respond with a single integer. If\nit's \n    1\n, you printed a correct answer and should keep solving the test\ncases (or exit if it is the last one). If it's \n    -1\n, you printed a wrong\nanswer and should terminate to get Wrong answer verdict. Otherwise, you can\nget an arbitrary verdict because your solution will continue to read from a\nclosed stream. Interaction To ask a question of the first type, use the\nformat: \n    1\n \n    a\n \n    b\n (\n    0 \n    \u2264 a,b \n    \u2264 n-1\n, \n    a \n    \u2260\n    b\n). we will answer with \n    1\n if the passage is from \n    a\n to \n    b\n,\nand \n    0\n if it is from \n    b\n to \n    a\n. you can ask at most \n    9n\n\nquestions of this type in each test case. To ask a question of the second\ntype, use the format: \n    2\n \n    x\n \n    k\n \n    s_1\n \n    s_2\n ...\n\n    s_k\n (\n    0 \n    \u2264 x,s_i \n    \u2264 n-1\n, \n    0 \n    \u2264 k < n\n, \n    x \n    \u2260\n    s_i\n, elements of \n    s\n are pairwise distinct). we will answer with\n\n    1\n if there's a passage from \n    x\n to any of the rooms in \n    s\n, and\n\n    0\n otherwise. you can ask at most \n    2n\n questions of this type in each\ntest case. If we answer with \n    -1\n instead of a valid answer, that means\nyou exceeded the number of queries or made an invalid query. Exit immediately\nafter receiving \n    -1\n and you will see Wrong answer verdict. Otherwise, you\ncan get an arbitrary verdict because your solution will continue to read from\na closed stream. After printing a query, do not forget to output end of line\nand flush the output. Otherwise, you will get Idleness limit exceeded. To do\nthis, use: fflush(stdout) or cout.flush() in C++; System.out.flush() in Java;\nflush(output) in Pascal; stdout.flush() in Python; see the documentation for\nother languages.Hacks: The first line should contain an integer \n    t\n \u2014 the\nnumber of test cases. The first line of each test case should contain an\ninteger \n    n\n (\n    4 \n    \u2264 n \n    \u2264 100\n) \u2014 the number of rooms. Each of the\nnext \n    n\n lines should contain a binary string of length \n    n\n. The\n\n    j\n-th character of the \n    i\n-th string should be \n    1\n if there's a\npassage from room \n    i\n to room \n    j\n, \n    0\n otherwise. The \n    i\n-th\ncharacter of the \n    i\n-th string should be \n    0\n. Example Input 1 4 0 0 1\n1 1 Output 2 3 3 0 1 2 1 0 1 1 0 2 2 2 1 1 3 1111 1111 1111 0001 Note In the\ngiven example: The first query asks whether there's a passage from room\n\n    3\n to any of the other rooms. The second query asks about the direction\nof the passage between rooms \n    0\n and \n    1\n. After a couple other\nqueries, we concluded that you can go from any room to any other room except\nif you start at room \n    3\n, and you can't get out of this room, so we\nprinted the matrix: 1111 1111 1111 0001 The interactor answered with \n    1\n,\ntelling us the answer is correct.\n\n",
        "cf_contest_id": 1514,
        "cf_index": "E",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "graphs",
            "interactive",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n4\r\n0011\r\n1001\r\n0101\r\n0000\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": []
    }
]