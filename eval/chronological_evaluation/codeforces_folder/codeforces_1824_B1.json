[
    {
        "name": "LuoTianyi and the Floating Islands (Easy Version)",
        "description": "This is the easy version of the problem. The only difference is that in this\nversion \n    k\n    \u2264\n    min(n,3)\n. You can make hacks only if both versions of\nthe problem are solved. Chtholly and the floating islands. LuoTianyi now lives\nin a world with \n    n\n floating islands. The floating islands are connected\nby \n    n-1\n undirected air routes, and any two of them can reach each other\nby passing the routes. That means, the \n    n\n floating islands form a tree.\nOne day, LuoTianyi wants to meet her friends: Chtholly, Nephren, William, ....\nTotally, she wants to meet \n    k\n people. She doesn't know the exact\npositions of them, but she knows that they are in pairwise distinct islands.\nShe define an island is good if and only if the sum of the\ndistances\n    ^\n    \u2020\n from it to the islands with \n    k\n people is the\nminimal among all the \n    n\n islands. Now, LuoTianyi wants to know that, if\nthe \n    k\n people are randomly set in \n    k\n distinct of the \n    n\n\nislands, then what is the expect number of the good islands? You just need to\ntell her the expect number modulo \n    10^9+7\n. \n    ^\n    \u2020\nThe distance\nbetween two islands is the minimum number of air routes you need to take to\nget from one island to the other. Input The first line contains two integers\n\n    n\n and \n    k\n (\n    1\n    \u2264 k \n    \u2264\n    min(n,3), 1\n    \u2264 n \n    \u2264 2\n    \u00b7\n    10^5\n) \u2014 the number of the islands and people respectively. Next \n    n\u22121\n\nlines describe the air routes. The \n    i\n-th of them contains two integers\n\n    u_i\n and \n    v_i\n (\n    1 \n    \u2264 u_i,v_i \n    \u2264 n, u_i \n    \u2260 v_i\n) \u2014 the\nislands connected by the \n    i\n-th air route. Output Print a single integer \u2014\nthe expect number of the good islands modulo \n    10^9 + 7\n. Formally, let\n\n    M = 10^9 + 7\n. It can be shown that the answer can be expressed as an\nirreducible fraction \n    p/q\n, where \n    p\n and \n    q\n are\nintegers and \n    q \n    \u2261 0\n (\n    mod M\n). Output\nthe integer equal to \n    p \n    \u00b7 q^-1\n \n    mod M\n. In\nother words, output such an integer \n    x\n that \n    0 \n    \u2264 x < M\n and \n    x\n    \n    \u00b7 q \n    \u2261 p\n (\n    mod M\n). Examples Input 4 2 1 2\n2 3 3 4 Output 666666674 Input 5 1 1 2 2 3 3 4 3 5 Output 1 Note In the first\nexample the air routes form the following tree: If the people are in the\nislands \n    1\n and \n    2\n, then islands \n    1\n and \n    2\n will be good.\nThe sum of the distances from island \n    1\n or \n    2\n to all the people is\n\n    1+0=1\n, which is the minimal. While the sum of the distances from island\n\n    3\n to all the people is \n    2+1=3\n, which is greater than \n    1\n. Like\nthis, when the people are in island \n    1\n and \n    3\n, then islands\n\n    1,2\n and \n    3\n will be good. When the people are in islands \n    1\n and\n\n    4\n, then islands \n    1,2,3\n and \n    4\n will be good. When the people\nare in islands \n    2\n and \n    3\n, then islands \n    2\n and \n    3\n will be\ngood. When the people are in islands \n    2\n and \n    4\n, then islands\n\n    2,3\n and \n    4\n will be good. When the people are in islands \n    3\n and\n\n    4\n, then islands \n    3\n and \n    4\n will be good. So the expect of the\nnumber of the good islands is \n    16/6\n, which equals to\n\n    666666674\n modulo \n    10^9+7\n. In the second example the air routes form\nthe following tree: There is always the only good island, so the expected\nnumber is \n    1\n.\n\n",
        "cf_contest_id": 1824,
        "cf_index": "B1",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "math",
            "probabilities",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2\r\n1 2\r\n2 3\r\n3 4\r\n",
                "666666674\r\n"
            ],
            [
                "5 1\r\n1 2\r\n2 3\r\n3 4\r\n3 5\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n",
                "1\r\n"
            ],
            [
                "2 1\r\n2 1\r\n",
                "1\r\n"
            ],
            [
                "2 2\r\n1 2\r\n",
                "2\r\n"
            ],
            [
                "10 2\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 6\r\n4 7\r\n2 8\r\n5 9\r\n9 10\r\n",
                "844444454\r\n"
            ],
            [
                "10 3\r\n1 2\r\n2 3\r\n3 4\r\n3 5\r\n3 6\r\n5 7\r\n7 8\r\n1 9\r\n1 10\r\n",
                "1\r\n"
            ]
        ]
    }
]