[
    {
        "name": "Training Session",
        "description": "Monocarp is the coach of the Berland State University programming teams. He\ndecided to compose a problemset for a training session for his teams. Monocarp\nhas \n    n\n problems that none of his students have seen yet. The \n    i\n-th\nproblem has a topic \n    a_i\n (an integer from \n    1\n to \n    n\n) and a\ndifficulty \n    b_i\n (an integer from \n    1\n to \n    n\n). All problems are\ndifferent, that is, there are no two tasks that have the same topic and\ndifficulty at the same time. Monocarp decided to select exactly \n    3\n\nproblems from \n    n\n problems for the problemset. The problems should satisfy\nat least one of two conditions (possibly, both): the topics of all three\nselected problems are different; the difficulties of all three selected\nproblems are different. Your task is to determine the number of ways to select\nthree problems for the problemset. Input The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 50000\n) \u2014 the number of testcases. The\nfirst line of each testcase contains an integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the number of problems that Monocarp have. In the\n\n    i\n-th of the following \n    n\n lines, there are two integers \n    a_i\n\nand \n    b_i\n (\n    1 \n    \u2264 a_i, b_i \n    \u2264 n\n) \u2014 the topic and the difficulty\nof the \n    i\n-th problem. It is guaranteed that there are no two problems\nthat have the same topic and difficulty at the same time. The sum of \n    n\n\nover all testcases doesn't exceed \n    2 \n    \u00b7 10^5\n. Output Print the\nnumber of ways to select three training problems that meet either of the\nrequirements described in the statement. Example Input 2 4 2 4 3 4 2 1 1 3 5 1\n5 2 4 3 3 4 2 5 1 Output 3 10 Note In the first example, you can take the\nfollowing sets of three problems: problems \n    1\n, \n    2\n, \n    4\n; problems\n\n    1\n, \n    3\n, \n    4\n; problems \n    2\n, \n    3\n, \n    4\n. Thus, the\nnumber of ways is equal to three.\n\n",
        "cf_contest_id": 1598,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "data structures",
            "geometry",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n4\r\n2 4\r\n3 4\r\n2 1\r\n1 3\r\n5\r\n1 5\r\n2 4\r\n3 3\r\n4 2\r\n5 1\r\n",
                "3\r\n10\r\n"
            ]
        ],
        "private_cases": []
    }
]