[
    {
        "name": "Combination",
        "description": "Ilya plays a card game by the following rules. A player has several cards.\nEach card contains two non-negative integers inscribed, one at the top of the\ncard and one at the bottom. At the beginning of the round the player chooses\none of his cards to play it. If the top of the card contains number ai, and\nthe bottom contains number bi, then when the player is playing the card, he\ngets ai points and also gets the opportunity to play additional bi cards.\nAfter the playing the card is discarded. More formally: let's say that there\nis a counter of the cards that can be played. At the beginning of the round\nthe counter equals one. When a card is played, the counter decreases by one\nfor the played card and increases by the number bi, which is written at the\nbottom of the card. Then the played card is discarded. If after that the\ncounter is not equal to zero, the player gets the opportunity to play another\ncard from the remaining cards. The round ends when the counter reaches zero or\nthe player runs out of cards. Of course, Ilya wants to get as many points as\npossible. Can you determine the maximum number of points he can score provided\nthat you know his cards? Input The first line contains a single integer n (1 \u2264\nn \u2264 1000) \u2014 the number of cards Ilya has. Each of the next n lines contains\ntwo non-negative space-separated integers \u2014 ai and bi (0 \u2264 ai, bi \u2264 10^4) \u2014\nthe numbers, written at the top and the bottom of the i-th card\ncorrespondingly. Output Print the single number \u2014 the maximum number of points\nyou can score in one round by the described rules. Examples Input 2 1 0 2 0\nOutput 2 Input 3 1 0 2 0 0 2 Output 3 Note In the first sample none of two\ncards brings extra moves, so you should play the one that will bring more\npoints. In the second sample you should first play the third card that doesn't\nbring any points but lets you play both remaining cards.\n\n",
        "cf_contest_id": 155,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1 0\r\n2 0\r\n",
                "2\r\n"
            ],
            [
                "3\r\n1 0\r\n2 0\r\n0 2\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n0 0\r\n2 0\r\n2 0\r\n3 0\r\n5 1\r\n",
                "8\r\n"
            ],
            [
                "7\r\n9 1\r\n8 1\r\n9 0\r\n9 1\r\n5 1\r\n1 1\r\n0 1\r\n",
                "41\r\n"
            ],
            [
                "7\r\n5 0\r\n4 0\r\n3 0\r\n5 2\r\n3 0\r\n4 2\r\n0 0\r\n",
                "21\r\n"
            ],
            [
                "1\r\n7 0\r\n",
                "7\r\n"
            ],
            [
                "1\r\n10 1\r\n",
                "10\r\n"
            ],
            [
                "10\r\n18 0\r\n4 0\r\n10 0\r\n5 0\r\n1 0\r\n18 0\r\n19 0\r\n11 1\r\n11 1\r\n0 1\r\n",
                "41\r\n"
            ],
            [
                "20\r\n33 0\r\n53 0\r\n91 0\r\n15 0\r\n35 0\r\n55 0\r\n23 0\r\n70 0\r\n98 0\r\n98 0\r\n56 0\r\n65 0\r\n20 0\r\n45 0\r\n71 0\r\n80 0\r\n39 0\r\n41 0\r\n47 0\r\n79 0\r\n",
                "98\r\n"
            ],
            [
                "20\r\n20 0\r\n36 0\r\n27 0\r\n25 0\r\n0 0\r\n24 0\r\n90 0\r\n94 0\r\n100 0\r\n72 0\r\n50 0\r\n6 0\r\n16 0\r\n85 0\r\n22 4\r\n60 0\r\n48 0\r\n13 0\r\n13 0\r\n7 0\r\n",
                "391\r\n"
            ],
            [
                "1\r\n0 0\r\n",
                "0\r\n"
            ],
            [
                "1\r\n0 10000\r\n",
                "0\r\n"
            ],
            [
                "1\r\n2 9999\r\n",
                "2\r\n"
            ],
            [
                "2\r\n0 10000\r\n1 0\r\n",
                "1\r\n"
            ],
            [
                "7\r\n1 1000\r\n100 1000\r\n3 1000\r\n4 1000\r\n5 1000\r\n6 1000\r\n7 1000\r\n",
                "126\r\n"
            ]
        ]
    }
]