[
    {
        "name": "Mouse Hunt",
        "description": "Medicine faculty of Berland State University has just finished their admission\ncampaign. As usual, about \n    80\n    %\n of applicants are girls and majority of\nthem are going to live in the university dormitory for the next \n    4\n\n(hopefully) years. The dormitory consists of \n    n\n rooms and a single mouse!\nGirls decided to set mouse traps in some rooms to get rid of the horrible\nmonster. Setting a trap in room number \n    i\n costs \n    c_i\n burles. Rooms\nare numbered from \n    1\n to \n    n\n. Mouse doesn't sit in place all the time,\nit constantly runs. If it is in room \n    i\n in second \n    t\n then it will\nrun to room \n    a_i\n in second \n    t + 1\n without visiting any other rooms\ninbetween (\n    i = a_i\n means that mouse won't leave room \n    i\n). It's\nsecond \n    0\n in the start. If the mouse is in some room with a mouse trap in\nit, then the mouse get caught into this trap. That would have been so easy if\nthe girls actually knew where the mouse at. Unfortunately, that's not the\ncase, mouse can be in any room from \n    1\n to \n    n\n at second \n    0\n. What\nit the minimal total amount of burles girls can spend to set the traps in\norder to guarantee that the mouse will eventually be caught no matter the room\nit started from? Input The first line contains as single integers \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of rooms in the dormitory.\nThe second line contains \n    n\n integers \n    c_1, c_2, \n    \u2026, c_n\n (\n    1\n    \n    \u2264 c_i \n    \u2264 10^4\n) \u2014 \n    c_i\n is the cost of setting the trap in room\nnumber \n    i\n. The third line contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014 \n    a_i\n is the room the mouse will run\nto the next second after being in room \n    i\n. Output Print a single integer\n\u2014 the minimal total amount of burles girls can spend to set the traps in order\nto guarantee that the mouse will eventually be caught no matter the room it\nstarted from. Examples Input 5 1 2 3 2 10 1 3 4 3 3 Output 3 Input 4 1 10 2 10\n2 4 2 2 Output 10 Input 7 1 1 1 1 1 1 1 2 2 2 3 6 7 6 Output 2 Note In the\nfirst example it is enough to set mouse trap in rooms \n    1\n and \n    4\n. If\nmouse starts in room \n    1\n then it gets caught immideately. If mouse starts\nin any other room then it eventually comes to room \n    4\n. In the second\nexample it is enough to set mouse trap in room \n    2\n. If mouse starts in\nroom \n    2\n then it gets caught immideately. If mouse starts in any other\nroom then it runs to room \n    2\n in second \n    1\n. Here are the paths of the\nmouse from different starts from the third example: \n    1 \n    \u2192 2\n    \n    \u2192 2 \n    \u2192\n    \u2026\n; \n    2 \n    \u2192 2 \n    \u2192\n    \u2026\n; \n    3 \n    \u2192 2 \n    \u2192 2 \n    \u2192\n    \u2026\n;\n\n    4 \n    \u2192 3 \n    \u2192 2 \n    \u2192 2 \n    \u2192\n    \u2026\n;\n\n    5 \n    \u2192 6 \n    \u2192 7 \n    \u2192 6 \n    \u2192\n    \u2026\n;\n\n    6 \n    \u2192 7 \n    \u2192 6 \n    \u2192\n    \u2026\n; \n    7\n    \n    \u2192 6 \n    \u2192 7 \n    \u2192\n    \u2026\n; So it's enough to\nset traps in rooms \n    2\n and \n    6\n.\n\n",
        "cf_contest_id": 1027,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2 3 2 10\r\n1 3 4 3 3\r\n",
                "3\r\n"
            ],
            [
                "4\r\n1 10 2 10\r\n2 4 2 2\r\n",
                "10\r\n"
            ],
            [
                "7\r\n1 1 1 1 1 1 1\r\n2 2 2 3 6 7 6\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n6 9 1 1 1 10 2 4 9 6\r\n5 3 4 2 6 8 9 1 10 7\r\n",
                "4\r\n"
            ],
            [
                "10\r\n9 19 19 1 3 9 1 12 10 8\r\n7 1 6 3 4 8 5 10 2 9\r\n",
                "1\r\n"
            ],
            [
                "1\r\n12\r\n1\r\n",
                "12\r\n"
            ],
            [
                "2\r\n62 49\r\n1 2\r\n",
                "111\r\n"
            ],
            [
                "2\r\n21 28\r\n2 1\r\n",
                "21\r\n"
            ],
            [
                "3\r\n80 6 67\r\n1 2 3\r\n",
                "153\r\n"
            ],
            [
                "3\r\n15 52 14\r\n1 3 2\r\n",
                "29\r\n"
            ],
            [
                "3\r\n17 34 88\r\n2 1 3\r\n",
                "105\r\n"
            ],
            [
                "3\r\n30 98 37\r\n2 3 1\r\n",
                "30\r\n"
            ],
            [
                "3\r\n40 26 88\r\n3 1 2\r\n",
                "26\r\n"
            ],
            [
                "3\r\n76 74 84\r\n3 2 1\r\n",
                "150\r\n"
            ],
            [
                "4\r\n97 27 70 99\r\n1 2 3 4\r\n",
                "293\r\n"
            ],
            [
                "4\r\n99 71 47 82\r\n1 3 4 2\r\n",
                "146\r\n"
            ],
            [
                "4\r\n4 95 20 62\r\n2 1 4 3\r\n",
                "24\r\n"
            ],
            [
                "4\r\n90 5 66 84\r\n3 1 2 4\r\n",
                "89\r\n"
            ],
            [
                "4\r\n2 58 52 89\r\n3 1 4 2\r\n",
                "2\r\n"
            ],
            [
                "4\r\n37 86 1 88\r\n4 2 1 3\r\n",
                "87\r\n"
            ],
            [
                "4\r\n81 69 80 19\r\n4 3 1 2\r\n",
                "19\r\n"
            ],
            [
                "4\r\n88 78 39 46\r\n4 3 2 1\r\n",
                "85\r\n"
            ],
            [
                "10\r\n7846 8354 1188 6898 8046 7561 8043 8588 8684 3699\r\n1 1 2 3 4 5 6 7 8 9\r\n",
                "7846\r\n"
            ],
            [
                "10\r\n6724 5003 9029 376 7529 5554 1407 388 2632 981\r\n2 3 4 5 1 4 6 7 8 9\r\n",
                "376\r\n"
            ],
            [
                "10\r\n1337 4359 5138 5246 7859 8111 1154 8455 3711 1737\r\n1 1 2 3 4 1 6 7 8 9\r\n",
                "1337\r\n"
            ],
            [
                "10\r\n6870 3547 3337 9426 3866 1873 4908 4628 7800 6716\r\n2 3 4 5 1 4 6 2 8 9\r\n",
                "3337\r\n"
            ],
            [
                "10\r\n5620 2478 4051 7060 6327 2170 6912 2031 1781 7454\r\n1 1 1 1 1 1 1 1 1 1\r\n",
                "5620\r\n"
            ],
            [
                "5\r\n1 2 3 4 5\r\n3 4 5 3 2\r\n",
                "2\r\n"
            ],
            [
                "5\r\n1 1 10 10 10\r\n2 3 4 5 3\r\n",
                "10\r\n"
            ],
            [
                "4\r\n2 1 2 2\r\n2 3 3 2\r\n",
                "2\r\n"
            ],
            [
                "4\r\n1 12 2 3\r\n2 3 4 2\r\n",
                "2\r\n"
            ],
            [
                "10\r\n10 10 10 10 1 10 10 10 10 10\r\n2 3 4 5 3 2 6 9 5 8\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 2 4\r\n1 3 1\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 2 4\r\n2 2 1\r\n",
                "2\r\n"
            ],
            [
                "3\r\n1 2 4\r\n2 3 3\r\n",
                "4\r\n"
            ],
            [
                "3\r\n1 2 4\r\n3 2 2\r\n",
                "2\r\n"
            ],
            [
                "3\r\n1 2 4\r\n3 3 1\r\n",
                "1\r\n"
            ],
            [
                "5\r\n5 4 2 6 10\r\n2 4 3 3 2\r\n",
                "2\r\n"
            ],
            [
                "8\r\n8 8 1 10 6 9 3 1\r\n5 2 7 1 6 8 4 3\r\n",
                "9\r\n"
            ],
            [
                "2\r\n1 2\r\n2 2\r\n",
                "2\r\n"
            ],
            [
                "5\r\n1 16 2 4 8\r\n5 3 1 5 4\r\n",
                "4\r\n"
            ],
            [
                "8\r\n1 8 32 4 16 64 128 2\r\n6 4 1 5 4 4 1 3\r\n",
                "4\r\n"
            ],
            [
                "6\r\n10 7 1 1 8 2\r\n5 5 2 3 3 5\r\n",
                "1\r\n"
            ],
            [
                "8\r\n1 2 2 9 7 5 6 5\r\n8 4 1 5 5 1 1 8\r\n",
                "12\r\n"
            ],
            [
                "3\r\n9 5 6\r\n3 3 1\r\n",
                "6\r\n"
            ],
            [
                "7\r\n2 1 64 8 32 4 16\r\n5 7 2 4 2 4 6\r\n",
                "8\r\n"
            ],
            [
                "3\r\n1 2 4\r\n3 3 3\r\n",
                "4\r\n"
            ],
            [
                "4\r\n1 2 4 8\r\n2 3 3 2\r\n",
                "4\r\n"
            ],
            [
                "3\r\n1 2 4\r\n3 2 3\r\n",
                "6\r\n"
            ],
            [
                "7\r\n4 32 8 1 16 64 2\r\n6 1 5 2 1 4 5\r\n",
                "1\r\n"
            ]
        ]
    }
]