[
    {
        "name": "Vertical Paths",
        "description": "You are given a rooted tree consisting of \n    n\n vertices. Vertices are\nnumbered from \n    1\n to \n    n\n. Any vertex can be the root of a tree. A tree\nis a connected undirected graph without cycles. A rooted tree is a tree with a\nselected vertex, which is called the root. The tree is specified by an array\nof parents \n    p\n containing \n    n\n numbers: \n    p_i\n is a parent of the\nvertex with the index \n    i\n. The parent of a vertex \n    u\n is a vertex that\nis the next vertex on the shortest path from \n    u\n to the root. For example,\non the simple path from \n    5\n to \n    3\n (the root), the next vertex would\nbe \n    1\n, so the parent of \n    5\n is \n    1\n. The root has no parent, so\nfor it, the value of \n    p_i\n is \n    i\n (the root is the only vertex for\nwhich \n    p_i=i\n). Find such a set of paths that: each vertex belongs to\nexactly one path, each path can contain one or more vertices; in each path\neach next vertex \u2014 is a son of the current vertex (that is, paths always lead\ndown \u2014 from parent to son); number of paths is minimal. For example, if\n\n    n=5\n and \n    p=[3, 1, 3, 3, 1]\n, then the tree can be divided into three\npaths: \n    3 \n    \u2192 1 \n    \u2192 5\n (path of \n    3\n vertices),\n\n    4\n (path of \n    1\n vertices). \n    2\n (path of \n    1\n vertices).\nExample of splitting a root tree into three paths for \n    n=5\n, the root of\nthe tree \u2014 node \n    3\n. Input The first line of input data contains an\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases in the\ntest. Each test case consists of two lines. The first of them contains an\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n). It is the number of\nvertices in the tree. The second line contains \n    n\n integers \n    p_1, p_2,\n    \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n). It is guaranteed that the \n    p\n\narray encodes some rooted tree. It is guaranteed that the sum of the values\n\n    n\n over all test cases in the test does not exceed \n    2 \n    \u00b7 10^5\n.\nOutput For each test case on the first line, output an integer \n    m\n \u2014 the\nminimum number of non-intersecting leading down paths that can cover all\nvertices of the tree. Then print \n    m\n pairs of lines containing path\ndescriptions. In the first of them print the length of the path, in the second\n\u2014 the sequence of vertices specifying that path in the order from top to\nbottom. You can output the paths in any order. If there are several answers,\noutput any of them. Example Input 6 5 3 1 3 3 1 4 1 1 4 1 7 1 1 2 3 4 5 6 1 1\n6 4 4 4 4 1 2 4 2 2 2 2 Output 3 3 3 1 5 1 2 1 4 2 2 1 2 2 4 3 1 7 1 2 3 4 5 6\n7 1 1 1 3 3 4 1 5 2 2 6 1 3 3 2 2 1 1 3 1 4\n\n",
        "cf_contest_id": 1675,
        "cf_index": "D",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "graphs",
            "implementation",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n5\r\n3 1 3 3 1\r\n4\r\n1 1 4 1\r\n7\r\n1 1 2 3 4 5 6\r\n1\r\n1\r\n6\r\n4 4 4 4 1 2\r\n4\r\n2 2 2 2\r\n",
                "3\r\n3\r\n3 1 2\r\n1\r\n4\r\n1\r\n5\r\n2\r\n2\r\n1 2\r\n2\r\n4 3\r\n1\r\n7\r\n1 2 3 4 5 6 7\r\n1\r\n1\r\n1\r\n3\r\n2\r\n4 3\r\n2\r\n1 5\r\n2\r\n2 6\r\n3\r\n2\r\n2 1\r\n1\r\n3\r\n1\r\n4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n55\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "54\r\n2\r\n1 2\r\n1\r\n3\r\n1\r\n4\r\n1\r\n5\r\n1\r\n6\r\n1\r\n7\r\n1\r\n8\r\n1\r\n9\r\n1\r\n10\r\n1\r\n11\r\n1\r\n12\r\n1\r\n13\r\n1\r\n14\r\n1\r\n15\r\n1\r\n16\r\n1\r\n17\r\n1\r\n18\r\n1\r\n19\r\n1\r\n20\r\n1\r\n21\r\n1\r\n22\r\n1\r\n23\r\n1\r\n24\r\n1\r\n25\r\n1\r\n26\r\n1\r\n27\r\n1\r\n28\r\n1\r\n29\r\n1\r\n30\r\n1\r\n31\r\n1\r\n32\r\n1\r\n33\r\n1\r\n34\r\n1\r\n35\r\n1\r\n36\r\n1\r\n37\r\n1\r\n38\r\n1\r\n39\r\n1\r\n40\r\n1\r\n41\r\n1\r\n42\r\n1\r\n43\r\n1\r\n44\r\n1\r\n45\r\n1\r\n46\r\n1\r\n47\r\n1\r\n48\r\n1\r\n49\r\n1\r\n50\r\n1\r\n51\r\n1\r\n52\r\n1\r\n53\r\n1\r\n54\r\n1\r\n55\r\n"
            ]
        ]
    }
]