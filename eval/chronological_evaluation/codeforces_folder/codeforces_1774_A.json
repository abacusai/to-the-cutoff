[
    {
        "name": "Add Plus Minus Sign",
        "description": "AquaMoon has a string \n    a\n consisting of only \n    0\n and \n    1\n. She\nwants to add \n    +\n and \n    -\n between all pairs of consecutive positions to\nmake the absolute value of the resulting expression as small as possible. Can\nyou help her? Input The first line contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 2\n     000\n) \u2013 the number of test cases. The description of\ntest cases follows. The first line of each test case contains a single integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 100\n) \u2014 the length of \n    a\n. The second line\nof each test case contains a string \n    a\n of length \n    n\n, consisting of\nonly \n    0\n and \n    1\n. Output For each test case, output a string of length\n\n    n - 1\n consisting of \n    -\n and \n    +\n on a separate line. If there is\nmore than one assignment of signs that produces the smallest possible absolute\nvalue, any of them is accepted. Example Input 3 2 11 5 01101 5 10001 Output \u00ad\n+-++ +++- Note In the first test case, we can get the expression \n    1 - 1 =\n    0\n, with absolute value \n    0\n. In the second test case, we can get the\nexpression \n    0 + 1 - 1 + 0 + 1 = 1\n, with absolute value \n    1\n. In the\nthird test case, we can get the expression \n    1 + 0 + 0 + 0 - 1 = 0\n, with\nabsolute value \n    0\n.\n\n",
        "cf_contest_id": 1774,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2\r\n11\r\n5\r\n01101\r\n5\r\n10001\r\n",
                "-\r\n+-++\r\n----\r\n"
            ]
        ],
        "private_cases": []
    }
]