[
    {
        "name": "Count the Trains",
        "description": "There are \n    n\n of independent carriages on the rails. The carriages are\nnumbered from left to right from \n    1\n to \n    n\n. The carriages are not\nconnected to each other. The carriages move to the left, so that the carriage\nwith number \n    1\n moves ahead of all of them. The \n    i\n-th carriage has\nits own engine, which can accelerate the carriage to \n    a_i\n km/h, but the\ncarriage cannot go faster than the carriage in front of it. See example for\nexplanation. All carriages start moving to the left at the same time, and they\nnaturally form trains. We will call trains \u2014 consecutive moving carriages\nhaving the same speed. For example, we have \n    n=5\n carriages and array \n    a\n    = [10, 13, 5, 2, 6]\n. Then the final speeds of the carriages will be \n    [10,\n    10, 5, 2, 2]\n. Respectively, \n    3\n of the train will be formed. There are\nalso messages saying that some engine has been corrupted: message \"k d\" means\nthat the speed of the \n    k\n-th carriage has decreased by \n    d\n (that is,\nthere has been a change in the maximum speed of the carriage \n    a_k = a_k -\n    d\n). Messages arrive sequentially, the processing of the next message takes\ninto account the changes from all previous messages. After each message\ndetermine the number of formed trains. Input The first line of input data\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014the number of\ninput test cases. This is followed by descriptions of the test cases. The\nfirst line of each test case is empty. The second line of the test case\ncontains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n,m \n    \u2264 10^5\n) \u2014the\nnumber of carriages and the number of messages to slow down the carriage,\nrespectively. The third line contains \n    n\n integers: \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the number \n    a_i\n means that the\ncarriage with number \n    i\n can reach a speed of \n    a_i\n km/h. The next\n\n    m\n lines contain two integers \n    k_j\n and \n    d_j\n (\n    1 \n    \u2264 k_j\n    \n    \u2264 n\n, \n    0 \n    \u2264 d_j \n    \u2264 a_k_j\n) \u2014this is the message that the\nspeed of the carriage with number \n    k_j\n has decreased by \n    d_j\n. In\nother words, there has been a change in its maximum speed \n    a_k_j = a_k_j\n    - d_j\n. Note that at any time the speed of each carriage is non-negative. In\nother words, \n    a_i \n    \u2265 s_i\n, where \n    s_i\n \u2014is the sum of such\n\n    d_j\n that \n    k_j=i\n. It is guaranteed that the sum of \n    n\n over all\ntest cases does not exceed \n    10^5\n. Similarly, it is guaranteed that the\nsum of \n    m\n over all test cases does not exceed \n    10^5\n. Output Print\n\n    t\n lines. On each line print the answer for the corresponding test case.\nFor each test case print \n    m\n numbers: the number of trains formed after\neach message. Example Input 3 4 2 6 2 3 7 3 2 4 7 5 4 10 13 5 2 6 2 4 5 2 1 5\n3 2 13 4 769 514 336 173 181 373 519 338 985 709 729 702 168 12 581 6 222 7\n233 5 117 Output 3 4 4 4 2 3 5 6 6 5 Note For the first test case: Initially\narray \n    a = [6, 2, 3, 7]\n. After the first message, the array \n    a = [6, 2,\n    1, 7]\n. Accordingly, the speeds of the carriages are \n    [6, 2, 1, 1]\n and\nwill form \n    3\n of the train. After the second message the array \n    a = [6,\n    2, 1, 0]\n. Accordingly, the speeds of the carriages are \n    [6, 2, 1, 0]\n,\nand \n    4\n of the train will be formed. For the second test case: Initially,\nthe array \n    a = [10, 13, 5, 2, 6]\n. After the first message, the array \n    a\n    = [10, 9, 5, 2, 6]\n. Accordingly, the speeds of the carriages are equal:\n\n    [10, 9, 5, 2, 2]\n, and \n    4\n of the train will be formed. After the\nsecond message the array \n    a = [10, 9, 5, 2, 4]\n. Accordingly, the speeds\nof the carriages are \n    [10, 9, 5, 2, 2]\n, and \n    4\n of the train will be\nformed. After the third message the array \n    a = [5, 9, 5, 2, 4]\n.\nAccordingly, the speeds of the carriages are \n    [5, 5, 5, 2, 2]\n, and\n\n    2\n of the train will be formed. After the fourth message the array \n    a =\n    [5, 9, 3, 2, 4]\n. Accordingly, the speeds of the carriages are \n    [5, 5, 3,\n    2, 2]\n, and \n    3\n of the train will be formed.\n\n",
        "cf_contest_id": 1690,
        "cf_index": "G",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n\r\n4 2\r\n6 2 3 7\r\n3 2\r\n4 7\r\n\r\n5 4\r\n10 13 5 2 6\r\n2 4\r\n5 2\r\n1 5\r\n3 2\r\n\r\n13 4\r\n769 514 336 173 181 373 519 338 985 709 729 702 168\r\n12 581\r\n6 222\r\n7 233\r\n5 117\r\n",
                "3 4 \r\n4 4 2 3 \r\n5 6 6 5 \r\n"
            ]
        ],
        "private_cases": []
    }
]