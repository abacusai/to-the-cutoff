[
    {
        "name": "Euler tour",
        "description": "Euler is a little, cute squirrel. When the autumn comes, he collects some\nreserves for winter. The interesting fact is that Euler likes to collect\nacorns in a specific way. A tree can be described as \n    n\n acorns connected\nby \n    n - 1\n branches, such that there is exactly one way between each pair\nof acorns. Let's enumerate the acorns from \n    1\n to \n    n\n. The squirrel\nchooses one acorn (not necessary with number \n    1\n) as a start, and visits\nthem in a way called \"Euler tour\" (see notes), collecting each acorn when he\nvisits it for the last time. Today morning Kate was observing Euler. She took\na sheet of paper and wrote down consecutive indices of acorns on his path.\nUnfortunately, during her way to home it started raining and some of numbers\nbecame illegible. Now the girl is very sad, because she has to present the\nobservations to her teacher. \"Maybe if I guess the lacking numbers, I'll be\nable to do it!\" she thought. Help her and restore any valid Euler tour of some\ntree or tell that she must have made a mistake. Input The first line contains\na single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 5 \n    \u00b7 10^5\n), denoting\nthe number of acorns in the tree. The second line contains \n    2n - 1\n\nintegers \n    a_1, a_2, \n    \u2026, a_2n-1\n (\n    0 \n    \u2264 a_i \n    \u2264 n\n) \u2014\nthe Euler tour of the tree that Kate wrote down. \n    0\n means an illegible\nnumber, which has to be guessed. Output If there is no Euler tour satisfying\nthe given description, output \"no\" in the first line. Otherwise, on the first\nline output \"yes\", and then in the second line print the Euler tour which\nsatisfy the given description. Any valid Euler tour will be accepted, since\nthe teacher doesn't know how exactly the initial tree looks. Examples Input 2\n1 0 0 Output yes 1 2 1 Input 4 1 0 3 2 0 0 0 Output yes 1 4 3 2 3 4 1 Input 5\n0 1 2 3 4 1 0 0 0 Output no Note An Euler tour of a tree with \n    n\n acorns\nis a sequence of \n    2n - 1\n indices of acorns. such that each acorn occurs\nat least once, the first and the last acorns are same and each two consecutive\nacorns are directly connected with a branch.\n\n",
        "cf_contest_id": 1053,
        "cf_index": "E",
        "cf_rating": 3500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1 0 0\r\n",
                "yes\r\n1 2 1 \r\n"
            ],
            [
                "4\r\n1 0 3 2 0 0 0\r\n",
                "yes\r\n1 2 3 2 4 2 1 \r\n"
            ],
            [
                "5\r\n0 1 2 3 4 1 0 0 0\r\n",
                "no\r\n"
            ]
        ],
        "private_cases": [
            [
                "6\r\n1 2 3 4 0 4 0 4 0 4 1\r\n",
                "no\r\n"
            ],
            [
                "30\r\n14 7 20 11 8 18 0 18 1 18 0 29 0 29 0 29 0 30 23 10 17 10 0 3 0 10 0 10 6 2 0 13 26 0 19 12 0 24 22 0 0 24 0 4 0 4 19 21 0 21 0 21 9 0 9 27 0 27 0\r\n",
                "no\r\n"
            ],
            [
                "30\r\n10 25 15 12 1 25 21 18 0 18 13 7 13 19 9 19 23 17 3 19 11 0 4 0 11 8 0 26 0 0 11 24 0 24 11 5 0 0 11 0 13 0 0 18 28 30 27 0 28 0 28 0 28 0 0 0 0 0 21\r\n",
                "no\r\n"
            ],
            [
                "50\r\n17 0 14 0 19 25 0 44 34 0 0 4 0 38 7 18 0 4 23 0 0 0 0 0 0 31 36 39 0 0 5 50 42 0 46 3 0 3 49 0 6 0 0 27 0 0 33 13 0 13 45 47 45 10 48 0 0 21 2 10 40 10 45 12 0 0 33 27 49 0 0 3 46 0 32 0 0 0 0 30 0 50 11 0 5 0 5 0 36 0 0 0 15 12 0 0 22 0 26\r\n",
                "no\r\n"
            ],
            [
                "25\r\n23 9 20 15 5 8 25 1 0 21 17 19 18 3 6 0 6 0 6 0 0 0 6 24 0 12 0 0 0 0 0 24 0 0 0 0 22 0 22 0 22 2 11 0 11 0 0 0 0\r\n",
                "no\r\n"
            ],
            [
                "25\r\n0 8 3 24 0 10 0 1 21 0 5 14 21 0 0 1 0 9 6 22 25 0 20 0 20 0 20 15 25 0 25 0 25 0 12 0 0 22 6 0 0 0 0 0 3 0 3 0 18\r\n",
                "yes\r\n18 8 3 24 17 10 19 1 21 14 5 14 21 2 21 1 19 9 6 22 25 15 20 4 20 7 20 15 25 11 25 13 25 16 12 16 25 22 6 9 19 10 17 24 3 23 3 8 18 \r\n"
            ],
            [
                "1\r\n0\r\n",
                "yes\r\n1 \r\n"
            ],
            [
                "1\r\n1\r\n",
                "yes\r\n1 \r\n"
            ],
            [
                "3\r\n1 0 0 1 0\r\n",
                "no\r\n"
            ],
            [
                "5\r\n1 2 0 0 1 2 0 0 1\r\n",
                "no\r\n"
            ],
            [
                "2\r\n1 0 2\r\n",
                "no\r\n"
            ],
            [
                "8\r\n0 0 4 0 7 2 0 0 0 5 0 0 0 3 0\r\n",
                "yes\r\n4 1 4 6 7 2 8 2 7 5 7 6 4 3 4 \r\n"
            ],
            [
                "70\r\n0 0 0 0 70 0 55 0 55 0 63 0 60 0 29 3 0 0 29 14 29 0 52 0 0 0 54 0 42 8 0 0 0 16 40 53 40 44 6 0 0 58 32 66 32 51 0 51 0 15 0 51 41 0 0 43 34 0 0 27 0 0 0 20 0 0 34 0 46 47 0 65 0 25 59 10 0 12 0 45 0 12 0 0 0 10 13 7 0 18 0 0 0 7 0 0 0 10 0 10 24 0 0 31 0 0 57 0 57 69 0 28 0 69 57 3 59 61 0 61 0 0 0 9 59 30 0 30 56 0 0 30 0 30 23 62 23 0 0\r\n",
                "no\r\n"
            ],
            [
                "20\r\n17 16 17 0 0 6 9 0 2 7 0 19 20 19 9 12 9 0 5 3 18 3 10 13 1 4 0 13 10 0 0 0 15 14 8 0 0 3 17\r\n",
                "yes\r\n17 16 17 3 9 6 9 7 2 7 9 19 20 19 9 12 9 3 5 3 18 3 10 13 1 4 1 13 10 11 10 14 15 14 8 14 10 3 17 \r\n"
            ],
            [
                "20\r\n2 0 0 0 2 5 8 5 0 0 0 0 0 0 13 0 4 16 13 0 0 0 0 9 0 1 10 1 0 0 2 18 0 0 0 18 2 0 2\r\n",
                "yes\r\n2 6 3 6 2 5 8 5 7 11 12 14 15 14 13 16 4 16 13 14 12 11 7 9 7 1 10 1 7 5 2 18 19 17 19 18 2 20 2 \r\n"
            ],
            [
                "25\r\n24 21 0 8 0 0 0 19 0 19 0 0 0 8 0 8 0 8 0 0 0 10 0 2 0 1 25 0 25 0 25 0 0 10 0 10 0 8 22 8 0 21 0 21 24 12 23 14 18\r\n",
                "no\r\n"
            ],
            [
                "25\r\n0 0 0 0 19 0 0 0 19 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 0 22 0 0 0 17 0 0 24 0 0 0 0 0 0 4 0 4 25 0 0 15\r\n",
                "yes\r\n15 8 7 8 19 2 1 2 19 9 10 11 12 13 14 16 18 20 21 23 21 20 18 16 14 13 17 3 22 3 5 3 17 13 12 24 12 11 10 9 19 8 4 6 4 25 4 8 15 \r\n"
            ],
            [
                "6\r\n1 6 0 3 5 2 5 0 4 6 1\r\n",
                "yes\r\n1 6 5 3 5 2 5 6 4 6 1 \r\n"
            ]
        ]
    }
]