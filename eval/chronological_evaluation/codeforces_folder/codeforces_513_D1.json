[
    {
        "name": "Constrained Tree",
        "description": "You need to find a binary tree of size n that satisfies a given set of c\nconstraints. Suppose that the nodes of the unknown binary tree are labeled\nusing a pre-order traversal starting with 1. For the i-th constraint you are\ngiven two labels, ai and bi and a direction, left or right. In case of left\ndirection, bi is an element of the subtree rooted at ai's left child.\nSimilarly in the case of right direction bi is an element of the subtree\nrooted at ai's right child. Input The first line of input contains two\nintegers n and c. The next c lines contain 2 integers ai, bi (1 \u2264 ai, bi \u2264 n)\nand either \"LEFT\" or \"RIGHT\" denoting whether b is in the subtree rooted at\nai's left child or in the subtree rooted at ai's right child. The problem\nconsists of multiple subproblems. The subproblems have different constraints\non the input. You will get some score for the correct submission of the\nsubproblem. The description of the subproblems follows. In subproblem D1 (9\npoints), the constraints 1 \u2264 n \u2264 100, 1 \u2264 c \u2264 50 will hold. In subproblem D2\n(8 points), the constraints 1 \u2264 n \u2264 1000000, 1 \u2264 c \u2264 100000 will hold. Output\nOutput will be on a single line. Any binary tree that satisfies the\nconstraints will be accepted. The tree's nodes should be printed out as n\nspace separated labels representing an in-order traversal, using the pre-order\nnumbers as labels of vertices. If there are no trees that satisfy the\nconstraints, print \"IMPOSSIBLE\" (without quotes). Examples Input 3 2 1 2 LEFT\n1 3 RIGHT Output 2 1 3 Input 3 2 1 2 RIGHT 1 3 LEFT Output IMPOSSIBLE Note\nConsider the first sample test. We need to find a tree with 3 nodes that\nsatisfies the following two constraints. The node labeled 2 with pre-order\ntraversal should be in the left subtree of the node labeled 1 with pre-order\ntraversal; the node labeled 3 with pre-order traversal should be in the right\nsubtree of the node labeled 1. There is only one tree with three nodes that\nsatisfies these constraints and its in-order traversal is (2, 1, 3). Pre-order\nis the \"root \u2013 left subtree \u2013 right subtree\" order. In-order is the \"left\nsubtree \u2013 root \u2013 right subtree\" order. For other information regarding in-\norder and pre-order, see http://en.wikipedia.org/wiki/Tree_traversal.\n\n",
        "cf_contest_id": 513,
        "cf_index": "D1",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n1 2 LEFT\r\n1 3 RIGHT\r\n",
                "2 1 3 \r\n"
            ],
            [
                "3 2\r\n1 2 RIGHT\r\n1 3 LEFT\r\n",
                "IMPOSSIBLE\r\n"
            ]
        ],
        "private_cases": [
            [
                "25 10\r\n3 5 RIGHT\r\n8 10 LEFT\r\n8 12 LEFT\r\n8 17 LEFT\r\n1 19 RIGHT\r\n6 21 RIGHT\r\n1 22 RIGHT\r\n6 24 RIGHT\r\n23 24 RIGHT\r\n6 25 RIGHT\r\n",
                "1 2 3 4 5 6 7 9 10 11 12 13 14 15 16 17 8 18 19 20 21 22 23 24 25 \r\n"
            ],
            [
                "50 10\r\n2 3 LEFT\r\n4 7 LEFT\r\n3 10 LEFT\r\n13 14 LEFT\r\n1 15 LEFT\r\n13 20 RIGHT\r\n23 33 RIGHT\r\n1 35 LEFT\r\n23 36 RIGHT\r\n39 41 RIGHT\r\n",
                "5 6 7 4 8 9 10 3 2 11 12 14 13 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 1 37 38 39 40 41 42 43 44 45 46 47 48 49 50 \r\n"
            ],
            [
                "100 10\r\n17 18 LEFT\r\n10 25 LEFT\r\n10 26 LEFT\r\n39 44 RIGHT\r\n48 53 RIGHT\r\n43 71 RIGHT\r\n39 73 RIGHT\r\n43 73 RIGHT\r\n54 97 RIGHT\r\n97 99 LEFT\r\n",
                "1 2 3 4 5 6 7 8 9 11 12 13 14 15 16 18 17 19 20 21 22 23 24 25 26 10 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 98 99 97 100 \r\n"
            ],
            [
                "1 1\r\n1 1 LEFT\r\n",
                "IMPOSSIBLE\r\n"
            ],
            [
                "1 1\r\n1 1 RIGHT\r\n",
                "IMPOSSIBLE\r\n"
            ],
            [
                "2 1\r\n1 2 LEFT\r\n",
                "2 1 \r\n"
            ],
            [
                "2 1\r\n1 2 RIGHT\r\n",
                "1 2 \r\n"
            ],
            [
                "3 2\r\n1 2 LEFT\r\n1 3 LEFT\r\n",
                "2 3 1 \r\n"
            ],
            [
                "3 2\r\n1 2 RIGHT\r\n1 3 RIGHT\r\n",
                "1 2 3 \r\n"
            ],
            [
                "3 1\r\n1 2 RIGHT\r\n",
                "1 2 3 \r\n"
            ],
            [
                "3 1\r\n1 3 LEFT\r\n",
                "2 3 1 \r\n"
            ],
            [
                "3 3\r\n1 3 LEFT\r\n1 2 LEFT\r\n2 3 LEFT\r\n",
                "3 2 1 \r\n"
            ],
            [
                "3 3\r\n1 3 RIGHT\r\n1 2 RIGHT\r\n2 3 RIGHT\r\n",
                "1 2 3 \r\n"
            ],
            [
                "3 2\r\n1 2 RIGHT\r\n2 3 RIGHT\r\n",
                "1 2 3 \r\n"
            ],
            [
                "3 2\r\n1 3 LEFT\r\n2 3 LEFT\r\n",
                "3 2 1 \r\n"
            ],
            [
                "13 25\r\n6 7 RIGHT\r\n3 4 RIGHT\r\n7 8 LEFT\r\n2 6 RIGHT\r\n6 7 RIGHT\r\n3 4 RIGHT\r\n5 6 RIGHT\r\n5 7 RIGHT\r\n3 4 RIGHT\r\n1 10 RIGHT\r\n7 8 LEFT\r\n9 11 RIGHT\r\n2 7 RIGHT\r\n9 10 LEFT\r\n12 13 LEFT\r\n12 13 LEFT\r\n1 11 RIGHT\r\n9 12 RIGHT\r\n3 4 RIGHT\r\n9 10 LEFT\r\n2 5 RIGHT\r\n3 4 RIGHT\r\n7 8 LEFT\r\n9 12 RIGHT\r\n9 11 RIGHT\r\n",
                "1 2 3 4 5 6 8 7 10 9 11 13 12 \r\n"
            ],
            [
                "52 9\r\n5 11 RIGHT\r\n10 11 RIGHT\r\n13 22 RIGHT\r\n45 46 LEFT\r\n15 16 RIGHT\r\n35 40 RIGHT\r\n41 43 RIGHT\r\n5 7 LEFT\r\n20 23 RIGHT\r\n",
                "1 2 3 4 6 7 5 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 45 47 48 49 50 51 52 \r\n"
            ],
            [
                "97 33\r\n24 27 LEFT\r\n31 35 RIGHT\r\n36 82 RIGHT\r\n8 9 LEFT\r\n53 58 RIGHT\r\n44 96 RIGHT\r\n41 75 RIGHT\r\n79 85 RIGHT\r\n95 96 LEFT\r\n65 83 RIGHT\r\n27 28 RIGHT\r\n45 79 RIGHT\r\n61 63 LEFT\r\n8 9 LEFT\r\n6 8 LEFT\r\n61 63 LEFT\r\n39 40 RIGHT\r\n31 35 RIGHT\r\n22 30 RIGHT\r\n5 15 RIGHT\r\n1 29 LEFT\r\n44 71 LEFT\r\n88 91 RIGHT\r\n65 91 RIGHT\r\n6 11 RIGHT\r\n74 75 RIGHT\r\n31 35 RIGHT\r\n16 18 LEFT\r\n22 27 LEFT\r\n56 57 LEFT\r\n36 39 LEFT\r\n18 19 RIGHT\r\n66 71 RIGHT\r\n",
                "2 3 4 5 7 9 8 6 10 11 12 13 14 15 17 18 19 16 20 21 23 25 26 27 28 24 22 29 30 1 31 32 33 34 35 37 38 39 40 36 41 42 43 45 46 47 48 49 50 51 52 53 54 55 57 56 58 59 60 62 63 61 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 44 92 93 94 96 95 97 \r\n"
            ],
            [
                "5 44\r\n4 5 RIGHT\r\n4 5 RIGHT\r\n2 3 RIGHT\r\n1 4 RIGHT\r\n1 3 LEFT\r\n2 3 RIGHT\r\n4 5 RIGHT\r\n1 5 RIGHT\r\n1 2 LEFT\r\n1 5 RIGHT\r\n2 3 RIGHT\r\n4 5 RIGHT\r\n1 5 RIGHT\r\n1 2 LEFT\r\n1 3 LEFT\r\n1 5 RIGHT\r\n1 2 LEFT\r\n4 5 RIGHT\r\n2 3 RIGHT\r\n1 4 RIGHT\r\n1 4 RIGHT\r\n1 3 LEFT\r\n1 3 LEFT\r\n2 3 RIGHT\r\n1 4 RIGHT\r\n2 3 RIGHT\r\n1 3 LEFT\r\n2 3 RIGHT\r\n1 5 RIGHT\r\n1 5 RIGHT\r\n2 3 RIGHT\r\n1 3 LEFT\r\n4 5 RIGHT\r\n2 3 RIGHT\r\n1 5 RIGHT\r\n1 2 LEFT\r\n1 3 LEFT\r\n1 4 RIGHT\r\n2 3 RIGHT\r\n2 3 RIGHT\r\n4 5 RIGHT\r\n1 3 LEFT\r\n2 3 RIGHT\r\n1 3 LEFT\r\n",
                "2 3 1 4 5 \r\n"
            ],
            [
                "48 19\r\n18 21 LEFT\r\n12 17 RIGHT\r\n13 14 RIGHT\r\n34 35 LEFT\r\n25 27 RIGHT\r\n3 9 LEFT\r\n18 22 LEFT\r\n2 10 LEFT\r\n46 47 RIGHT\r\n23 34 RIGHT\r\n32 33 LEFT\r\n20 21 RIGHT\r\n44 45 RIGHT\r\n19 20 RIGHT\r\n18 31 RIGHT\r\n25 27 RIGHT\r\n10 11 LEFT\r\n43 44 RIGHT\r\n5 7 RIGHT\r\n",
                "1 4 5 6 7 8 9 3 11 10 2 12 13 14 15 16 17 19 20 21 22 18 23 24 25 26 27 28 29 30 31 33 32 35 34 36 37 38 39 40 41 42 43 44 45 46 47 48 \r\n"
            ],
            [
                "13 20\r\n7 13 RIGHT\r\n7 13 RIGHT\r\n5 9 RIGHT\r\n5 10 RIGHT\r\n1 8 RIGHT\r\n7 10 LEFT\r\n2 4 LEFT\r\n7 10 LEFT\r\n5 13 RIGHT\r\n1 3 LEFT\r\n10 11 LEFT\r\n12 13 LEFT\r\n12 13 LEFT\r\n1 3 LEFT\r\n7 11 LEFT\r\n1 4 LEFT\r\n5 7 RIGHT\r\n2 4 LEFT\r\n8 9 LEFT\r\n12 13 LEFT\r\n",
                "3 4 2 1 5 6 9 8 11 10 7 13 12 \r\n"
            ],
            [
                "86 30\r\n40 54 RIGHT\r\n2 16 LEFT\r\n67 68 RIGHT\r\n24 25 LEFT\r\n66 70 LEFT\r\n39 43 LEFT\r\n35 38 LEFT\r\n13 14 LEFT\r\n44 47 LEFT\r\n41 42 LEFT\r\n36 37 LEFT\r\n45 49 RIGHT\r\n3 14 LEFT\r\n65 67 LEFT\r\n21 22 LEFT\r\n76 77 LEFT\r\n75 83 RIGHT\r\n31 32 LEFT\r\n31 32 LEFT\r\n83 84 RIGHT\r\n45 47 LEFT\r\n7 8 LEFT\r\n53 54 RIGHT\r\n71 73 RIGHT\r\n76 77 LEFT\r\n24 26 LEFT\r\n20 21 LEFT\r\n39 46 LEFT\r\n45 47 LEFT\r\n72 77 LEFT\r\n",
                "1 4 5 6 8 7 9 10 11 12 14 13 3 15 16 2 17 18 19 22 21 20 23 25 26 24 27 28 29 30 32 31 33 34 37 36 38 35 40 42 41 43 46 47 45 48 49 44 50 51 52 53 54 39 55 56 57 58 59 60 61 62 63 64 67 68 69 70 66 65 71 73 74 75 77 76 78 79 80 81 82 83 84 72 85 86 \r\n"
            ],
            [
                "13 24\r\n2 7 LEFT\r\n9 10 LEFT\r\n5 9 RIGHT\r\n2 11 RIGHT\r\n6 7 LEFT\r\n9 10 LEFT\r\n5 9 RIGHT\r\n5 10 RIGHT\r\n3 4 LEFT\r\n9 10 LEFT\r\n3 7 RIGHT\r\n1 5 LEFT\r\n9 10 LEFT\r\n9 10 LEFT\r\n3 4 LEFT\r\n2 11 RIGHT\r\n7 8 RIGHT\r\n3 4 LEFT\r\n2 11 RIGHT\r\n5 8 LEFT\r\n3 4 LEFT\r\n6 7 LEFT\r\n5 9 RIGHT\r\n3 4 RIGHT\r\n",
                "IMPOSSIBLE\r\n"
            ],
            [
                "98 13\r\n8 9 LEFT\r\n91 97 RIGHT\r\n3 8 LEFT\r\n2 7 LEFT\r\n79 80 RIGHT\r\n20 25 LEFT\r\n71 75 LEFT\r\n61 97 RIGHT\r\n21 25 RIGHT\r\n3 5 LEFT\r\n88 93 LEFT\r\n48 49 LEFT\r\n84 41 LEFT\r\n",
                "IMPOSSIBLE\r\n"
            ],
            [
                "58 9\r\n18 46 RIGHT\r\n33 54 LEFT\r\n50 54 LEFT\r\n29 35 LEFT\r\n11 15 LEFT\r\n20 23 RIGHT\r\n18 38 RIGHT\r\n30 39 RIGHT\r\n29 49 RIGHT\r\n",
                "IMPOSSIBLE\r\n"
            ],
            [
                "46 37\r\n31 32 LEFT\r\n34 35 LEFT\r\n1 17 LEFT\r\n20 29 RIGHT\r\n21 22 LEFT\r\n15 16 LEFT\r\n4 13 RIGHT\r\n38 39 RIGHT\r\n38 28 RIGHT\r\n14 17 RIGHT\r\n18 30 LEFT\r\n44 45 RIGHT\r\n21 22 LEFT\r\n4 5 LEFT\r\n18 34 RIGHT\r\n19 28 LEFT\r\n21 22 LEFT\r\n21 22 LEFT\r\n19 30 RIGHT\r\n39 40 RIGHT\r\n23 25 LEFT\r\n33 41 RIGHT\r\n21 24 RIGHT\r\n33 35 LEFT\r\n25 26 RIGHT\r\n2 7 LEFT\r\n14 16 LEFT\r\n3 14 RIGHT\r\n6 7 LEFT\r\n9 12 RIGHT\r\n19 26 LEFT\r\n33 36 RIGHT\r\n28 29 RIGHT\r\n10 11 LEFT\r\n25 26 RIGHT\r\n2 10 LEFT\r\n25 26 RIGHT\r\n",
                "IMPOSSIBLE\r\n"
            ]
        ]
    }
]