[
    {
        "name": "Make Them Odd",
        "description": "There are \n    n\n positive integers \n    a_1, a_2, \n    \u2026, a_n\n. For the one\nmove you can choose any even value \n    c\n and divide by two all elements that\nequal \n    c\n. For example, if \n    a=[6,8,12,6,3,12]\n and you choose\n\n    c=6\n, and \n    a\n is transformed into \n    a=[3,8,12,3,3,12]\n after the\nmove. You need to find the minimal number of moves for transforming \n    a\n to\nan array of only odd integers (each element shouldn't be divisible by\n\n    2\n). Input The first line of the input contains one integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases in the input. Then \n    t\n\ntest cases follow. The first line of a test case contains \n    n\n (\n    1 \n    \u2264\n    n \n    \u2264 2\n    \u00b710^5\n) \u2014 the number of integers in the sequence \n    a\n. The\nsecond line contains positive integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1\n    \n    \u2264 a_i \n    \u2264 10^9\n). The sum of \n    n\n for all test cases in the input\ndoesn't exceed \n    2\n    \u00b710^5\n. Output For \n    t\n test cases print the\nanswers in the order of test cases in the input. The answer for the test case\nis the minimal number of moves needed to make all numbers in the test case odd\n(i.e. not divisible by \n    2\n). Example Input 4 6 40 6 40 3 20 1 1 1024 4 2 4\n8 16 3 3 1 7 Output 4 10 4 0 Note In the first test case of the example, the\noptimal sequence of moves can be as follows: before making moves \n    a=[40, 6,\n    40, 3, 20, 1]\n; choose \n    c=6\n; now \n    a=[40, 3, 40, 3, 20, 1]\n; choose\n\n    c=40\n; now \n    a=[20, 3, 20, 3, 20, 1]\n; choose \n    c=20\n; now\n\n    a=[10, 3, 10, 3, 10, 1]\n; choose \n    c=10\n; now \n    a=[5, 3, 5, 3, 5,\n    1]\n \u2014 all numbers are odd. Thus, all numbers became odd after \n    4\n moves.\nIn \n    3\n or fewer moves, you cannot make them all odd.\n\n",
        "cf_contest_id": 1277,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "number theory"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n6\r\n40 6 40 3 20 1\r\n1\r\n1024\r\n4\r\n2 4 8 16\r\n3\r\n3 1 7\r\n",
                "4\r\n10\r\n4\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]