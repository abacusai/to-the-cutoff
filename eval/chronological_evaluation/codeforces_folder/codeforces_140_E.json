[
    {
        "name": "New Year Garland",
        "description": "As Gerald, Alexander, Sergey and Gennady are already busy with the usual New\nYear chores, Edward hastily decorates the New Year Tree. And any decent New\nYear Tree must be decorated with a good garland. Edward has lamps of m colors\nand he wants to make a garland from them. That garland should represent a\nsequence whose length equals L. Edward's tree is n layers high and Edward\nplans to hang the garland so as to decorate the first layer with the first l1\nlamps, the second layer \u2014 with the next l2 lamps and so on. The last n-th\nlayer should be decorated with the last ln lamps, Edward adores all sorts of\nmath puzzles, so he suddenly wondered: how many different ways to assemble the\ngarland are there given that the both following two conditions are met: Any\ntwo lamps that follow consecutively in the same layer should have different\ncolors. The sets of used colors in every two neighbouring layers must be\ndifferent. We consider unordered sets (not multisets), where every color\noccurs no more than once. So the number of lamps of particular color does not\nmatter. Help Edward find the answer to this nagging problem or else he won't\nmanage to decorate the Tree by New Year. You may consider that Edward has an\nunlimited number of lamps of each of m colors and it is not obligatory to use\nall m colors. The garlands are considered different if they differ in at least\none position when represented as sequences. Calculate the answer modulo p.\nInput The first line contains three integers n, m and p (1 \u2264 n, m \u2264 10^6, 2 \u2264\np \u2264 10^9) which are the number of the tree's layers, the number of the lamps'\ncolors and module correspondingly. The next line contains n integers li (1 \u2264\nli \u2264 5000, ). Output Print the only integer \u2014 the number of garlands modulo p.\nExamples Input 3 2 1000 3 1 2 Output 8 Input 2 3 1000 2 2 Output 24 Input 1 1\n1000 5 Output 0 Note In the first sample the following variants are possible:\n121|1|12, 121|1|21, 121|2|12, 121|2|21, 212|1|12, 212|1|21, 212|2|12,\n212|2|21. In the second sample the following variants are possible: 12|13,\n12|23, 12|31, 12|32 and so on. Figure for the first sample:\n\n",
        "cf_contest_id": 140,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2 1000\r\n3 1 2\r\n",
                "8\r\n"
            ],
            [
                "2 3 1000\r\n2 2\r\n",
                "24\r\n"
            ],
            [
                "1 1 1000\r\n5\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 2\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1 3 100\r\n5\r\n",
                "48\r\n"
            ],
            [
                "5 3 100\r\n1 1 1 1 1\r\n",
                "48\r\n"
            ],
            [
                "5 5 1025\r\n3 4 5 6 7\r\n",
                "545\r\n"
            ],
            [
                "3 2 7\r\n1 2 3\r\n",
                "0\r\n"
            ],
            [
                "10 10 1000000000\r\n10 5 1 5 10 10 5 1 5 10\r\n",
                "835200000\r\n"
            ],
            [
                "10 20 1024\r\n3 1 1 2 2 1 3 5 2 3\r\n",
                "0\r\n"
            ],
            [
                "20 20 100000\r\n95 75 36 50 33 62 77 49 34 95 76 98 64 47 51 2 58 14 6 71\r\n",
                "94560\r\n"
            ]
        ]
    }
]