[
    {
        "name": "Balls Game",
        "description": "Iahub is training for the IOI. What is a better way to train than playing a\nZuma-like game? There are n balls put in a row. Each ball is colored in one of\nk colors. Initially the row doesn't contain three or more contiguous balls\nwith the same color. Iahub has a single ball of color x. He can insert his\nball at any position in the row (probably, between two other balls). If at any\nmoment there are three or more contiguous balls of the same color in the row,\nthey are destroyed immediately. This rule is applied multiple times, until\nthere are no more sets of 3 or more contiguous balls of the same color. For\nexample, if Iahub has the row of balls [black, black, white, white, black,\nblack] and a white ball, he can insert the ball between two white balls. Thus\nthree white balls are destroyed, and then four black balls become contiguous,\nso all four balls are destroyed. The row will not contain any ball in the end,\nso Iahub can destroy all 6 balls. Iahub wants to destroy as many balls as\npossible. You are given the description of the row of balls, and the color of\nIahub's ball. Help Iahub train for the IOI by telling him the maximum number\nof balls from the row he can destroy. Input The first line of input contains\nthree integers: n (1 \u2264 n \u2264 100), k (1 \u2264 k \u2264 100) and x (1 \u2264 x \u2264 k). The next\nline contains n space-separated integers c1, c2, ..., cn (1 \u2264 ci \u2264 k). Number\nci means that the i-th ball in the row has color ci. It is guaranteed that the\ninitial row of balls will never contain three or more contiguous balls of the\nsame color. Output Print a single integer \u2014 the maximum number of balls Iahub\ncan destroy. Examples Input 6 2 2 1 1 2 2 1 1 Output 6 Input 1 1 1 1 Output 0\n\n",
        "cf_contest_id": 430,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 2 2\r\n1 1 2 2 1 1\r\n",
                "6"
            ],
            [
                "1 1 1\r\n1\r\n",
                "0"
            ]
        ],
        "private_cases": [
            [
                "10 2 1\r\n2 1 2 2 1 2 2 1 1 2\r\n",
                "5"
            ],
            [
                "50 2 1\r\n1 1 2 2 1 2 1 1 2 2 1 2 1 2 1 1 2 2 1 2 1 2 2 1 2 1 2 1 2 2 1 1 2 2 1 1 2 2 1 2 1 1 2 1 1 2 2 1 1 2\r\n",
                "15"
            ],
            [
                "75 5 5\r\n1 1 5 5 3 5 2 3 3 2 2 1 1 5 4 4 3 4 5 4 3 3 1 2 2 1 2 1 2 5 5 2 1 3 2 2 3 1 2 1 1 5 5 1 1 2 1 1 2 2 5 2 2 1 1 2 1 2 1 1 3 3 5 4 4 3 3 4 4 5 5 1 1 2 2\r\n",
                "6"
            ],
            [
                "100 3 2\r\n1 1 2 3 1 3 2 1 1 3 3 2 2 1 1 2 2 1 1 3 2 2 3 2 3 2 2 3 3 1 1 2 2 1 2 2 1 3 3 1 3 3 1 2 1 2 2 1 2 3 2 1 1 2 1 1 3 3 1 3 3 1 1 2 2 1 1 2 1 3 2 2 3 2 2 3 3 1 2 1 2 2 1 1 2 3 1 3 3 1 2 3 2 2 1 3 2 2 3 3\r\n",
                "6"
            ],
            [
                "100 2 1\r\n2 2 1 2 1 2 1 2 2 1 1 2 1 1 2 1 1 2 2 1 1 2 1 1 2 1 2 2 1 2 1 2 1 2 1 1 2 1 1 2 1 1 2 2 1 1 2 1 2 2 1 2 1 2 1 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 1 2 1 2 2 1 2 1 1 2 1 2 1 1 2 1 1 2 1 1 2 2 1 2 2 1 1 2 1\r\n",
                "15"
            ],
            [
                "100 2 2\r\n1 2 1 2 2 1 2 1 2 1 2 1 1 2 1 2 2 1 1 2 1 1 2 2 1 1 2 1 2 2 1 2 2 1 2 1 2 1 1 2 1 2 1 2 1 2 1 1 2 1 1 2 2 1 1 2 2 1 2 1 2 1 2 1 2 2 1 2 1 2 2 1 1 2 1 2 2 1 1 2 2 1 2 1 2 1 1 2 1 2 1 2 1 2 1 2 2 1 2 2\r\n",
                "14"
            ],
            [
                "100 2 2\r\n1 2 1 1 2 1 2 2 1 2 1 2 1 2 1 2 1 2 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 1 2 1 1 2 1 1 2 1 2 2 1 1 2 2 1 1 2 1 2 2 1 1 2 1 2 1 2 2 1 2 2 1 1 2 1 2 2 1 2 2 1 2 1 1 2 1 2 2 1 2 2 1 2 1 2 1 2 1 1 2 2 1 1 2 2\r\n",
                "17"
            ],
            [
                "100 2 2\r\n2 1 1 2 2 1 1 2 1 2 1 1 2 2 1 2 1 2 1 2 2 1 2 1 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 1 1 2 1 2 2 1 1 2 1 2 1 1 2 2 1 1 2 1 2 1 2 1 2 2 1 1 2 2 1 1 2 2 1 2 1 2 1 1 2 1 1 2 2 1 2 1 2 2 1 2 2 1 1 2 1 2 2 1 2 2\r\n",
                "17"
            ],
            [
                "100 2 2\r\n1 2 2 1 2 2 1 1 2 1 2 1 2 1 2 1 2 1 2 1 1 2 2 1 2 1 2 1 2 1 2 1 1 2 1 1 2 1 2 2 1 1 2 2 1 1 2 1 1 2 2 1 2 1 2 1 2 1 2 1 1 2 2 1 1 2 2 1 1 2 2 1 2 2 1 1 2 1 2 2 1 2 2 1 2 2 1 2 2 1 1 2 2 1 2 1 2 1 2 1\r\n",
                "28"
            ],
            [
                "100 2 2\r\n1 1 2 1 2 1 1 2 1 2 1 2 2 1 2 1 2 1 1 2 2 1 2 1 1 2 2 1 1 2 1 2 2 1 2 2 1 2 1 2 1 1 2 1 2 1 1 2 2 1 1 2 1 2 1 2 1 2 1 2 2 1 1 2 1 2 2 1 2 1 1 2 1 1 2 1 2 1 2 1 1 2 1 2 2 1 2 1 2 2 1 1 2 1 2 2 1 1 2 2\r\n",
                "8"
            ],
            [
                "100 100 50\r\n15 44 5 7 75 40 52 82 78 90 48 32 16 53 69 2 21 84 7 21 21 87 29 8 42 54 10 21 38 55 54 88 48 63 3 17 45 82 82 91 7 11 11 24 24 79 1 32 32 38 41 41 4 4 74 17 26 26 96 96 3 3 50 50 96 26 26 17 17 74 74 4 41 38 38 32 1 1 79 79 24 11 11 7 7 91 91 82 45 45 97 9 74 60 32 91 61 64 100 26\r\n",
                "2"
            ],
            [
                "100 50 22\r\n15 2 18 15 48 35 46 33 32 39 39 5 5 27 27 50 50 47 47 10 10 6 3 3 7 8 7 17 17 29 14 10 10 46 13 13 31 32 31 22 22 32 31 31 32 13 13 46 46 10 10 14 14 29 29 17 7 7 8 3 6 6 10 47 50 50 27 5 5 39 39 21 47 4 40 47 21 28 21 21 40 27 34 17 3 36 5 7 21 14 25 49 40 34 32 13 23 29 2 4\r\n",
                "2"
            ],
            [
                "100 3 3\r\n3 1 1 2 1 1 3 1 3 3 1 3 3 1 2 1 1 2 2 3 3 2 3 2 2 3 1 3 3 2 2 1 3 3 2 2 1 2 3 3 1 3 1 3 1 2 2 1 2 1 2 3 1 3 1 3 2 1 3 2 3 3 2 3 2 3 1 3 2 2 1 2 1 2 1 1 3 1 3 1 2 1 2 1 2 3 2 2 3 3 2 2 3 2 2 3 1 1 2 3\r\n",
                "6"
            ],
            [
                "100 100 100\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "0"
            ],
            [
                "100 2 2\r\n1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2\r\n",
                "98"
            ],
            [
                "6 20 10\r\n10 2 10 10 2 2\r\n",
                "5"
            ]
        ]
    }
]