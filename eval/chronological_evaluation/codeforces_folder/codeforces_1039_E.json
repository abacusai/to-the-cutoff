[
    {
        "name": "Summer Oenothera Exhibition",
        "description": "While some people enjoy spending their time solving programming contests, Dina\nprefers taking beautiful pictures. As soon as Byteland Botanical Garden\nannounced Summer Oenothera Exhibition she decided to test her new camera\nthere. The exhibition consists of \n    l = 10^100\n Oenothera species\narranged in a row and consecutively numbered with integers from \n    0\n to\n\n    l - 1\n. Camera lens allows to take a photo of \n    w\n species on it, i.e.\nDina can take a photo containing flowers with indices from \n    x\n to \n    x + w\n    - 1\n for some integer \n    x\n between \n    0\n and \n    l - w\n. We will\ndenote such photo with \n    [x, x + w - 1]\n. She has taken \n    n\n photos, the\n\n    i\n-th of which (in chronological order) is \n    [x_i, x_i + w - 1]\n in\nour notation. She decided to build a time-lapse video from these photos once\nshe discovered that Oenothera blossoms open in the evening. Dina takes each\nphoto and truncates it, leaving its segment containing exactly \n    k\n\nflowers, then she composes a video of these photos keeping their original\norder and voil\u00e0, a beautiful artwork has been created! A scene is a contiguous\nsequence of photos such that the set of flowers on them is the same. The\nchange between two scenes is called a cut. For example, consider the first\nphoto contains flowers \n    [1, 5]\n, the second photo contains flowers \n    [3,\n    7]\n and the third photo contains flowers \n    [8, 12]\n. If \n    k = 3\n, then\nDina can truncate the first and the second photo into \n    [3, 5]\n, and the\nthird photo into \n    [9, 11]\n. First two photos form a scene, third photo\nalso forms a scene and the transition between these two scenes which happens\nbetween the second and the third photos is a cut. If \n    k = 4\n, then each of\nthe transitions between photos has to be a cut. Dina wants the number of cuts\nto be as small as possible. Please help her! Calculate the minimum possible\nnumber of cuts for different values of \n    k\n. Input The first line contains\nthree positive integer \n    n\n, \n    w\n, \n    q\n (\n    1 \n    \u2264 n, q \n    \u2264\n    100\n     000\n, \n    1 \n    \u2264 w \n    \u2264 10^9\n) \u2014 the number of taken photos, the\nnumber of flowers on a single photo and the number of queries. Next line\ncontains \n    n\n non-negative integers \n    x_i\n (\n    0 \n    \u2264 x_i \n    \u2264\n    10^9\n) \u2014 the indices of the leftmost flowers on each of the photos. Next\nline contains \n    q\n positive integers \n    k_i\n (\n    1 \n    \u2264 k_i \n    \u2264 w\n)\n\u2014 the values of \n    k\n for which you have to solve the problem. It's\nguaranteed that all \n    k_i\n are distinct. Output Print \n    q\n integers \u2014\nfor each width of the truncated photo \n    k_i\n, the minimum number of cuts\nthat is possible. Examples Input 3 6 5 2 4 0 1 2 3 4 5 Output 0 0 1 1 2 Input\n6 4 3 1 2 3 4 3 2 1 2 3 Output 0 1 2\n\n",
        "cf_contest_id": 1039,
        "cf_index": "E",
        "cf_rating": 3400,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 7.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 6 5\r\n2 4 0\r\n1 2 3 4 5\r\n",
                "0\r\n0\r\n1\r\n1\r\n2\r\n"
            ],
            [
                "6 4 3\r\n1 2 3 4 3 2\r\n1 2 3\r\n",
                "0\r\n1\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 10 5\r\n0 0 0 0 0\r\n1 2 3 4 5\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "14 1000000000 1\r\n1 2 3 4 5 6 7 6 5 6 7 8 9 10\r\n1000000000\r\n",
                "13\r\n"
            ],
            [
                "1 1 1\r\n0\r\n1\r\n",
                "0\r\n"
            ]
        ]
    }
]