[
    {
        "name": "Power Substring",
        "description": "You are given n positive integers a1, a2, ..., an. For every ai you need to\nfind a positive integer ki such that the decimal notation of 2^ki contains the\ndecimal notation of ai as a substring among its last min(100, length(2^ki))\ndigits. Here length(m) is the length of the decimal notation of m. Note that\nyou don't have to minimize ki. The decimal notations in this problem do not\ncontain leading zeros. Input The first line contains a single integer n (1 \u2264 n\n\u2264 2 000) \u2014 the number of integers ai. Each of the next n lines contains a\npositive integer ai (1 \u2264 ai < 10^11). Output Print n lines. The i-th of them\nshould contain a positive integer ki such that the last min(100, length(2^ki))\ndigits of 2^ki contain the decimal notation of ai as a substring. Integers ki\nmust satisfy 1 \u2264 ki \u2264 10^50. It can be shown that the answer always exists\nunder the given constraints. If there are multiple answers, print any of them.\nExamples Input 2 8 2 Output 3 1 Input 2 3 4857 Output 5 20\n\n",
        "cf_contest_id": 913,
        "cf_index": "G",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n8\r\n2\r\n",
                "41320977205205645241257294174\r\n9373777321285284172088426977\r\n"
            ],
            [
                "2\r\n3\r\n4857\r\n",
                "137213329732040813765209346044\r\n44856488441288125289324094440\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n1\r\n7\r\n9\r\n5\r\n6\r\n10\r\n4\r\n",
                "56016977685372089201684851322\r\n85320085768572453292004410084\r\n56416449249688133201213223367\r\n124484844892936089212817346487\r\n92568057769376524005248178097\r\n164040529328852416968125255217\r\n41776001364813693720801291214\r\n"
            ],
            [
                "10\r\n384\r\n179\r\n982\r\n466\r\n646\r\n226\r\n759\r\n798\r\n291\r\n852\r\n",
                "80164088416124049369600107285\r\n129361245777696565329649339327\r\n132449369684848972896176571640\r\n40405648401608092496888427726\r\n120092808081760413296852971290\r\n12924009768924572893612582168\r\n169721252017696897769292451696\r\n80801205729645208965760010046\r\n52004849288816097644445618098\r\n164857281616056161680052130091\r\n"
            ],
            [
                "10\r\n677\r\n958\r\n20\r\n169\r\n441\r\n752\r\n24\r\n809\r\n41\r\n96\r\n",
                "8453769728885641772813338042\r\n81725209616808568008080491727\r\n164457764049768017256132542163\r\n172133689612165760048920423684\r\n93693765249333773648008498497\r\n88805293641252496416404810002\r\n128120404165657217721208543243\r\n165360888576932164525240143778\r\n84812481684408856444920546840\r\n177600805612056812049760863287\r\n"
            ],
            [
                "10\r\n31\r\n362\r\n396\r\n661\r\n314\r\n803\r\n366\r\n124\r\n748\r\n875\r\n",
                "137617368936092177697337378526\r\n5217292537688445641612142172\r\n177292441681604961600485379648\r\n160041728160880845364097386968\r\n44960412968937617657728419770\r\n172169377648444044097364851643\r\n136561608969297208528968094012\r\n173656445737733217372972534960\r\n168813604884404052000805214928\r\n124400089641685361297680175687\r\n"
            ],
            [
                "1\r\n94109029405\r\n",
                "97692168161368093736532462088\r\n"
            ],
            [
                "8\r\n99999999999\r\n1000817304\r\n16153741376\r\n99973050183\r\n5299397471\r\n60086000371\r\n25955597485\r\n32561727234\r\n",
                "56964885656053724168892055375\r\n88120040408012048056852939282\r\n52132800160177688412057339764\r\n45736800128005365320573295764\r\n85652924881680964084128507605\r\n84493285285285656441321703258\r\n576160801644801693697338937\r\n53640088124565612449201619726\r\n"
            ]
        ]
    }
]