[
    {
        "name": "Simple Strings",
        "description": "zscoder loves simple strings! A string t is called simple if every pair of\nadjacent characters are distinct. For example ab, aba, zscoder are simple\nwhereas aa, add are not simple. zscoder is given a string s. He wants to\nchange a minimum number of characters so that the string s becomes simple.\nHelp him with this task! Input The only line contains the string s (1 \u2264 |s| \u2264\n2\u00b710^5) \u2014 the string given to zscoder. The string s consists of only lowercase\nEnglish letters. Output Print the simple string s' \u2014 the string s after the\nminimal number of changes. If there are multiple solutions, you may output any\nof them. Note that the string s' should also consist of only lowercase English\nletters. Examples Input aab Output bab Input caaab Output cabab Input zscoder\nOutput zscoder\n\n",
        "cf_contest_id": 665,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "aab\r\n",
                "acb\r\n"
            ],
            [
                "caaab\r\n",
                "cabab\r\n"
            ],
            [
                "zscoder\r\n",
                "zscoder\r\n"
            ]
        ],
        "private_cases": [
            [
                "u\r\n",
                "u\r\n"
            ],
            [
                "h\r\n",
                "h\r\n"
            ],
            [
                "dtottttotd\r\n",
                "dtotataotd\r\n"
            ],
            [
                "rxxxrrxrxxxxxrrrrrxxxxrrrrxrxxrxxrxrxrrrxrrxrrxrxxxrxrrxrrxrxrxxxxxrxxxxrrrxrxxrxxrxxxrrrrrxrrxrrxrr\r\n",
                "rxaxraxrxaxaxrararxaxararaxrxarxarxrxrarxraxraxrxaxrxraxraxrxrxaxaxrxaxararxrxarxarxaxrararxraxraxra\r\n"
            ],
            [
                "aazz\r\n",
                "abza\r\n"
            ],
            [
                "zz\r\n",
                "za\r\n"
            ],
            [
                "gg\r\n",
                "ga\r\n"
            ],
            [
                "qasdasd\r\n",
                "qasdasd\r\n"
            ],
            [
                "aa\r\n",
                "ab\r\n"
            ],
            [
                "ab\r\n",
                "ab\r\n"
            ],
            [
                "zza\r\n",
                "zba\r\n"
            ],
            [
                "g\r\n",
                "g\r\n"
            ],
            [
                "nnop\r\n",
                "naop\r\n"
            ],
            [
                "xx\r\n",
                "xa\r\n"
            ]
        ]
    }
]