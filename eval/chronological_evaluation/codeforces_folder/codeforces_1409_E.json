[
    {
        "name": "Two Platforms",
        "description": "There are \n    n\n points on a plane. The \n    i\n-th point has coordinates\n\n    (x_i, y_i)\n. You have two horizontal platforms, both of length \n    k\n.\nEach platform can be placed anywhere on a plane but it should be placed\nhorizontally (on the same \n    y\n-coordinate) and have integer borders. If the\nleft border of the platform is \n    (x, y)\n then the right border is \n    (x +\n    k, y)\n and all points between borders (including borders) belong to the\nplatform. Note that platforms can share common points (overlap) and it is not\nnecessary to place both platforms on the same \n    y\n-coordinate. When you\nplace both platforms on a plane, all points start falling down decreasing\ntheir \n    y\n-coordinate. If a point collides with some platform at some\nmoment, the point stops and is saved. Points which never collide with any\nplatform are lost. Your task is to find the maximum number of points you can\nsave if you place both platforms optimally. You have to answer \n    t\n\nindependent test cases. For better understanding, please read the Note section\nbelow to see a picture for the first test case. Input The first line of the\ninput contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2 \n    \u00b7 10^4\n) \u2014\nthe number of test cases. Then \n    t\n test cases follow. The first line of\nthe test case contains two integers \n    n\n and \n    k\n (\n    1 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n; \n    1 \n    \u2264 k \n    \u2264 10^9\n) \u2014 the number of points and the\nlength of each platform, respectively. The second line of the test case\ncontains \n    n\n integers \n    x_1, x_2, \n    \u2026, x_n\n (\n    1 \n    \u2264 x_i \n    \u2264\n    10^9\n), where \n    x_i\n is \n    x\n-coordinate of the \n    i\n-th point. The\nthird line of the input contains \n    n\n integers \n    y_1, y_2, \n    \u2026, y_n\n\n(\n    1 \n    \u2264 y_i \n    \u2264 10^9\n), where \n    y_i\n is \n    y\n-coordinate of the\n\n    i\n-th point. All points are distinct (there is no pair \n    1 \n    \u2264 i < j\n    \n    \u2264 n\n such that \n    x_i = x_j\n and \n    y_i = y_j\n). It is guaranteed\nthat the sum of \n    n\n does not exceed \n    2 \n    \u00b7 10^5\n (\n    \u2211 n\n    \n    \u2264 2 \n    \u00b7 10^5\n). Output For each test case, print the answer: the\nmaximum number of points you can save if you place both platforms optimally.\nExample Input 4 7 1 1 5 2 3 1 5 4 1 3 6 7 2 5 4 1 1 1000000000 1000000000 5 10\n10 7 5 15 8 20 199 192 219 1904 10 10 15 19 8 17 20 10 9 2 10 19 12 13 6 17 1\n14 7 9 19 3 Output 6 1 5 10 Note The picture corresponding to the first test\ncase of the example: Blue dots represent the points, red segments represent\nthe platforms. One of the possible ways is to place the first platform between\npoints \n    (1, -1)\n and \n    (2, -1)\n and the second one between points\n\n    (4, 3)\n and \n    (5, 3)\n. Vectors represent how the points will fall\ndown. As you can see, the only point we can't save is the point \n    (3, 7)\n\nso it falls down infinitely and will be lost. It can be proven that we can't\nachieve better answer here. Also note that the point \n    (5, 3)\n doesn't fall\nat all because it is already on the platform.\n\n",
        "cf_contest_id": 1409,
        "cf_index": "E",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "dp",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n7 1\r\n1 5 2 3 1 5 4\r\n1 3 6 7 2 5 4\r\n1 1\r\n1000000000\r\n1000000000\r\n5 10\r\n10 7 5 15 8\r\n20 199 192 219 1904\r\n10 10\r\n15 19 8 17 20 10 9 2 10 19\r\n12 13 6 17 1 14 7 9 19 3\r\n",
                "6\r\n1\r\n5\r\n10\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n1 1000000000\r\n1\r\n123456\r\n1 1000000000\r\n21345\r\n987654321\r\n1 1000000000\r\n1000000000\r\n1000000000\r\n1 1000000000\r\n1000000000\r\n1\r\n",
                "1\r\n1\r\n1\r\n1\r\n"
            ]
        ]
    }
]