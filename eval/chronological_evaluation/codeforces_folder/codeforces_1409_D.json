[
    {
        "name": "Decrease the Sum of Digits",
        "description": "You are given a positive integer \n    n\n. In one move, you can increase\n\n    n\n by one (i.e. make \n    n := n + 1\n). Your task is to find the minimum\nnumber of moves you need to perform in order to make the sum of digits of\n\n    n\n be less than or equal to \n    s\n. You have to answer \n    t\n\nindependent test cases. Input The first line of the input contains one integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 2 \n    \u00b7 10^4\n) \u2014 the number of test cases.\nThen \n    t\n test cases follow. The only line of the test case contains two\nintegers \n    n\n and \n    s\n (\n    1 \n    \u2264 n \n    \u2264 10^18\n; \n    1 \n    \u2264 s\n    \n    \u2264 162\n). Output For each test case, print the answer: the minimum number\nof moves you need to perform in order to make the sum of digits of \n    n\n be\nless than or equal to \n    s\n. Example Input 5 2 1 1 1 500 4 217871987498122\n10 100000000000000001 1 Output 8 0 500 2128012501878 899999999999999999\n\n",
        "cf_contest_id": 1409,
        "cf_index": "D",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 1\r\n1 1\r\n500 4\r\n217871987498122 10\r\n100000000000000001 1\r\n",
                "8\r\n0\r\n500\r\n2128012501878\r\n899999999999999999\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1000000000000000000 1\r\n",
                "0\r\n"
            ]
        ]
    }
]