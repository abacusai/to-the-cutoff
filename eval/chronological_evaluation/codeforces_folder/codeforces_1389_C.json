[
    {
        "name": "Good String",
        "description": "Let's call left cyclic shift of some string \n    t_1 t_2 t_3 \n    \u2026 t_n - 1\n    t_n\n as string \n    t_2 t_3 \n    \u2026 t_n - 1 t_n t_1\n. Analogically, let's\ncall right cyclic shift of string \n    t\n as string \n    t_n t_1 t_2 t_3 \n    \u2026\n    t_n - 1\n. Let's say string \n    t\n is good if its left cyclic shift is\nequal to its right cyclic shift. You are given string \n    s\n which consists\nof digits 0\u20139. What is the minimum number of characters you need to erase from\n\n    s\n to make it good? Input The first line contains single integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. Next \n    t\n lines\ncontains test cases \u2014 one per line. The first and only line of each test case\ncontains string \n    s\n (\n    2 \n    \u2264 |s| \n    \u2264 2 \n    \u00b7 10^5\n). Each\ncharacter \n    s_i\n is digit 0\u20139. It's guaranteed that the total length of\nstrings doesn't exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, print\nthe minimum number of characters you need to erase from \n    s\n to make it\ngood. Example Input 3 95831 100120013 252525252525 Output 3 5 0 Note In the\nfirst test case, you can erase any \n    3\n characters, for example, the\n\n    1\n-st, the \n    3\n-rd, and the \n    4\n-th. You'll get string 51 and it is\ngood. In the second test case, we can erase all characters except 0: the\nremaining string is 0000 and it's good. In the third test case, the given\nstring \n    s\n is already good.\n\n",
        "cf_contest_id": 1389,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n95831\r\n100120013\r\n252525252525\r\n",
                "3\r\n5\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1111\r\n",
                "0\r\n"
            ]
        ]
    }
]