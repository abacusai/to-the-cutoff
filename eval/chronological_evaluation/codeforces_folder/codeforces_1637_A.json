[
    {
        "name": "Sorting Parts",
        "description": "You have an array \n    a\n of length \n    n\n. You can exactly once select an\ninteger \n    len\n between \n    1\n and \n    n - 1\n inclusively, and then sort\nin non-decreasing order the prefix of the array of length \n    len\n and the\nsuffix of the array of length \n    n - len\n independently. For example, if the\narray is \n    a = [3, 1, 4, 5, 2]\n, and you choose \n    len = 2\n, then after\nthat the array will be equal to \n    [1, 3, 2, 4, 5]\n. Could it be that after\nperforming this operation, the array will not be sorted in non-decreasing\norder? Input There are several test cases in the input data. The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number\nof test cases. This is followed by the test cases description. The first line\nof each test case contains one integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^4\n)\n\u2014 the length of the array. The second line of the test case contains a\nsequence of integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^9\n) \u2014 the array elements. It is guaranteed that the sum of \n    n\n over\nall test cases does not exceed \n    10^4\n. Output For each test case of input\ndata, output \"YES\" (without quotes), if the array may be not sorted in non-\ndecreasing order, output \"NO\" (without quotes) otherwise. You can output each\nletter in any case (uppercase or lowercase). Example Input 3 3 2 2 1 4 3 1 2 1\n5 1 2 2 4 4 Output YES YES NO Note In the first test case, it's possible to\nselect \n    len = 1\n, then after operation, the array will not be sorted in\nnon-decreasing order and will be equal to \n    [2, 1, 2]\n. In the second test\ncase, it's possible to select \n    len = 3\n, then after operation, the array\nwill not be sorted in non-decreasing order and will be equal to \n    [1, 2, 3,\n    1]\n. In the third test case, the array will be sorted in non-decreasing\norder for every possible \n    len\n.\n\n",
        "cf_contest_id": 1637,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n2 2 1\r\n4\r\n3 1 2 1\r\n5\r\n1 2 2 4 4\r\n",
                "YES\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n4\r\n1 3 2 4\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n7\r\n1 2 3 5 4 6 7\r\n",
                "YES\r\n"
            ]
        ]
    }
]