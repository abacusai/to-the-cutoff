[
    {
        "name": "Anti Light's Cell Guessing",
        "description": "You are playing a game on a \n    n \n    \u00d7 m\n grid, in which the computer has\nselected some cell \n    (x, y)\n of the grid, and you have to determine which\none. To do so, you will choose some \n    k\n and some \n    k\n cells \n    (x_1,\n    y_1),\n      (x_2, y_2), \n    \u2026, (x_k, y_k)\n, and give them to the computer.\nIn response, you will get \n    k\n numbers \n    b_1,\n      b_2, \n    \u2026 b_k\n,\nwhere \n    b_i\n is the manhattan distance from \n    (x_i, y_i)\n to the hidden\ncell \n    (x, y)\n (so you know which distance corresponds to which of \n    k\n\ninput cells). After receiving these \n    b_1,\n      b_2, \n    \u2026, b_k\n, you\nhave to be able to determine the hidden cell. What is the smallest \n    k\n for\nwhich is it possible to always guess the hidden cell correctly, no matter what\ncell computer chooses? As a reminder, the manhattan distance between cells\n\n    (a_1, b_1)\n and \n    (a_2, b_2)\n is equal to \n    |a_1-a_2|+|b_1-b_2|\n.\nInput The first line of the input contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The description of test\ncases follows. The single line of each test case contains two integers \n    n\n\nand \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 10^9\n) \u2014 the number of rows and the\nnumber of columns in the grid. Output For each test case print a single\ninteger \u2014 the minimum \n    k\n for that test case. Example Input 2 2 3 3 1\nOutput 2 1 Note In the first test case, the smallest such \n    k\n is \n    2\n,\nfor which you can choose, for example, cells \n    (1, 1)\n and \n    (2, 1)\n.\nNote that you can't choose cells \n    (1, 1)\n and \n    (2, 3)\n for \n    k =\n    2\n, as both cells \n    (1, 2)\n and \n    (2, 1)\n would give \n    b_1 = 1, b_2 =\n    2\n, so we wouldn't be able to determine which cell is hidden if computer\nselects one of those. In the second test case, you should choose \n    k = 1\n,\nfor it you can choose cell \n    (3, 1)\n or \n    (1, 1)\n.\n\n",
        "cf_contest_id": 1610,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n2 3\r\n3 1\r\n",
                "2\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n999 21\r\n21 999\r\n",
                "2\r\n2\r\n"
            ]
        ]
    }
]