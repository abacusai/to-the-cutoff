[
    {
        "name": "Light It Up",
        "description": "Recently, you bought a brand new smart lamp with programming features. At\nfirst, you set up a schedule to the lamp. Every day it will turn power on at\nmoment \n    0\n and turn power off at moment \n    M\n. Moreover, the lamp allows\nyou to set a program of switching its state (states are \"lights on\" and\n\"lights off\"). Unfortunately, some program is already installed into the lamp.\nThe lamp allows only good programs. Good program can be represented as a non-\nempty array \n    a\n, where \n    0 < a_1 < a_2 < \n    \u2026 < a_|a| < M\n. All\n\n    a_i\n must be integers. Of course, preinstalled program is a good program.\nThe lamp follows program \n    a\n in next manner: at moment \n    0\n turns power\nand light on. Then at moment \n    a_i\n the lamp flips its state to opposite\n(if it was lit, it turns off, and vice versa). The state of the lamp flips\ninstantly: for example, if you turn the light off at moment \n    1\n and then\ndo nothing, the total time when the lamp is lit will be \n    1\n. Finally, at\nmoment \n    M\n the lamp is turning its power off regardless of its state.\nSince you are not among those people who read instructions, and you don't\nunderstand the language it's written in, you realize (after some testing) the\nonly possible way to alter the preinstalled program. You can insert at most\none element into the program \n    a\n, so it still should be a good program\nafter alteration. Insertion can be done between any pair of consecutive\nelements of \n    a\n, or even at the begining or at the end of \n    a\n. Find\nsuch a way to alter the program that the total time when the lamp is lit is\nmaximum possible. Maybe you should leave program untouched. If the lamp is lit\nfrom \n    x\n till moment \n    y\n, then its lit for \n    y - x\n units of time.\nSegments of time when the lamp is lit are summed up. Input First line contains\ntwo space separated integers \n    n\n and \n    M\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n,\n\n    2 \n    \u2264 M \n    \u2264 10^9\n) \u2014 the length of program \n    a\n and the moment\nwhen power turns off. Second line contains \n    n\n space separated integers\n\n    a_1, a_2, \n    \u2026, a_n\n (\n    0 < a_1 < a_2 < \n    \u2026 < a_n < M\n) \u2014\ninitially installed program \n    a\n. Output Print the only integer \u2014 maximum\npossible total time when the lamp is lit. Examples Input 3 10 4 6 7 Output 8\nInput 2 12 1 10 Output 9 Input 2 7 3 4 Output 6 Note In the first example, one\nof possible optimal solutions is to insert value \n    x = 3\n before \n    a_1\n,\nso program will be \n    [3, 4, 6, 7]\n and time of lamp being lit equals \n    (3\n    - 0) + (6 - 4) + (10 - 7) = 8\n. Other possible solution is to insert \n    x =\n    5\n in appropriate place. In the second example, there is only one optimal\nsolution: to insert \n    x = 2\n between \n    a_1\n and \n    a_2\n. Program will\nbecome \n    [1, 2, 10]\n, and answer will be \n    (1 - 0) + (10 - 2) = 9\n. In\nthe third example, optimal answer is to leave program untouched, so answer\nwill be \n    (3 - 0) + (7 - 4) = 6\n.\n\n",
        "cf_contest_id": 1000,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 10\r\n4 6 7\r\n",
                "8\r\n"
            ],
            [
                "2 12\r\n1 10\r\n",
                "9\r\n"
            ],
            [
                "2 7\r\n3 4\r\n",
                "6\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 2\r\n1\r\n",
                "1\r\n"
            ],
            [
                "5 10\r\n1 3 5 6 8\r\n",
                "6\r\n"
            ],
            [
                "7 1000000000\r\n1 10001 10011 20011 20021 40021 40031\r\n",
                "999999969\r\n"
            ],
            [
                "7 1000000000\r\n3 10001 10011 20011 20021 40021 40031\r\n",
                "999999969\r\n"
            ],
            [
                "1 10\r\n1\r\n",
                "9\r\n"
            ],
            [
                "1 10000000\r\n1\r\n",
                "9999999\r\n"
            ],
            [
                "1 8\r\n1\r\n",
                "7\r\n"
            ],
            [
                "7 17\r\n1 5 9 10 11 14 16\r\n",
                "9\r\n"
            ],
            [
                "4 17\r\n1 5 9 10\r\n",
                "12\r\n"
            ],
            [
                "5 12\r\n1 2 3 4 5\r\n",
                "9\r\n"
            ],
            [
                "2 1000000000\r\n100 111\r\n",
                "999999989\r\n"
            ],
            [
                "3 90591\r\n90579 90580 90581\r\n",
                "90589\r\n"
            ],
            [
                "5 16\r\n1 2 3 4 5\r\n",
                "13\r\n"
            ],
            [
                "6 981231233\r\n1 6 15 30 130 1875\r\n",
                "981229468\r\n"
            ],
            [
                "1 3\r\n1\r\n",
                "2\r\n"
            ],
            [
                "3 12\r\n4 7 11\r\n",
                "8\r\n"
            ],
            [
                "1 100000\r\n1\r\n",
                "99999\r\n"
            ],
            [
                "2 5\r\n1 3\r\n",
                "3\r\n"
            ],
            [
                "1 1000000000\r\n1\r\n",
                "999999999\r\n"
            ],
            [
                "1 1000000000\r\n999999999\r\n",
                "999999999\r\n"
            ],
            [
                "3 4\r\n1 2 3\r\n",
                "2\r\n"
            ],
            [
                "3 5\r\n1 2 3\r\n",
                "3\r\n"
            ],
            [
                "1 4\r\n2\r\n",
                "3\r\n"
            ],
            [
                "3 5\r\n1 3 4\r\n",
                "3\r\n"
            ],
            [
                "9 20\r\n5 9 11 12 14 15 16 17 19\r\n",
                "12\r\n"
            ],
            [
                "2 4\r\n1 2\r\n",
                "3\r\n"
            ],
            [
                "1 10\r\n2\r\n",
                "9\r\n"
            ],
            [
                "2 6\r\n2 4\r\n",
                "4\r\n"
            ],
            [
                "2 4\r\n1 3\r\n",
                "2\r\n"
            ],
            [
                "3 6\r\n1 2 4\r\n",
                "4\r\n"
            ],
            [
                "7 9863\r\n65 96 97 98 101 112 1115\r\n",
                "9819\r\n"
            ]
        ]
    }
]