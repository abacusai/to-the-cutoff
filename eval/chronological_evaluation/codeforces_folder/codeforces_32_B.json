[
    {
        "name": "Borze",
        "description": "Ternary numeric notation is quite popular in Berland. To telegraph the ternary\nnumber the Borze alphabet is used. Digit 0 is transmitted as \u00ab.\u00bb, 1 as \u00ab-.\u00bb\nand 2 as \u00ab\u2013\u00bb. You are to decode the Borze code, i.e. to find out the ternary\nnumber given its representation in Borze alphabet. Input The first line\ncontains a number in Borze code. The length of the string is between 1 and 200\ncharacters. It's guaranteed that the given string is a valid Borze code of\nsome ternary number (this number can have leading zeroes). Output Output the\ndecoded ternary number. It can have leading zeroes. Examples Input .-.\u2013\nOutput 012 Input \u00ad-. Output 20 Input -..-.\u2013 Output 1012\n\n",
        "cf_contest_id": 32,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "expression parsing",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                ".-.--\r\n",
                "012\r\n"
            ],
            [
                "--.\r\n",
                "20\r\n"
            ],
            [
                "-..-.--\r\n",
                "1012\r\n"
            ]
        ],
        "private_cases": [
            [
                "---..\r\n",
                "210\r\n"
            ],
            [
                "..--.---..\r\n",
                "0020210\r\n"
            ],
            [
                ".\r\n",
                "0\r\n"
            ],
            [
                "-.\r\n",
                "1\r\n"
            ],
            [
                "--\r\n",
                "2\r\n"
            ],
            [
                "..\r\n",
                "00\r\n"
            ],
            [
                "--.\r\n",
                "20\r\n"
            ],
            [
                ".--.\r\n",
                "020\r\n"
            ],
            [
                ".-.-..\r\n",
                "0110\r\n"
            ],
            [
                "----.-.\r\n",
                "2201\r\n"
            ],
            [
                "-..--.-.\r\n",
                "10201\r\n"
            ],
            [
                "..--..--.\r\n",
                "0020020\r\n"
            ],
            [
                "-.-.---.--..-..-.-.-..-..-.--.\r\n",
                "112120010111010120\r\n"
            ],
            [
                "---.-.-.------..-..-..-..-.-..-.--.-.-..-.-.-----..-.-.\r\n",
                "21112220010101011012011011221011\r\n"
            ]
        ]
    }
]