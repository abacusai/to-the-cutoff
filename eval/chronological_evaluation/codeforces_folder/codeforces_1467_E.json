[
    {
        "name": "Distinctive Roots in a Tree",
        "description": "You are given a tree with \n    n\n vertices. Each vertex \n    i\n has a value\n\n    a_i\n associated with it. Let us root the tree at some vertex \n    v\n. The\nvertex \n    v\n is called a distinctive root if the following holds: in all\npaths that start at \n    v\n and end at some other node, all the values\nencountered are distinct. Two different paths may have values in common but a\nsingle path must have all distinct values. Find the number of distinctive\nroots in the tree. Input The first line of the input contains a single integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 2\n    \u00b710^5\n) \u2014 the number of vertices in the\ntree. The next line contains \n    n\n space-separated integers \n    a_1, a_2,\n    \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n). The following \n    n-1\n lines\neach contain two space-separated integers \n    u\n and \n    v\n (\n    1 \n    \u2264\n    u\n, \n    v \n    \u2264 n\n), denoting an edge from \n    u\n to \n    v\n. It is\nguaranteed that the edges form a tree. Output Print a single integer \u2014 the\nnumber of distinctive roots in the tree. Examples Input 5 2 5 1 1 4 1 2 1 3 2\n4 2 5 Output 3 Input 5 2 1 1 1 4 1 2 1 3 2 4 2 5 Output 0 Note In the first\nexample, \n    1\n, \n    2\n and \n    5\n are distinctive roots.\n\n",
        "cf_contest_id": 1467,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 5 1 1 4\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n",
                "3\r\n"
            ],
            [
                "5\r\n2 1 1 1 4\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n1 2 5 1 4\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n",
                "2\r\n"
            ],
            [
                "6\r\n1 3 1 1 4 2\r\n1 2\r\n1 6\r\n2 3\r\n2 4\r\n2 5\r\n",
                "2\r\n"
            ],
            [
                "5\r\n1 2 1 3 1\r\n1 2\r\n2 3\r\n1 4\r\n4 5\r\n",
                "0\r\n"
            ],
            [
                "6\r\n1 2 3 2 2 4\r\n1 2\r\n2 3\r\n3 4\r\n1 5\r\n5 6\r\n",
                "0\r\n"
            ],
            [
                "12\r\n4 1 6 1 7 1 1 3 2 5 3 2\r\n1 2\r\n2 10\r\n1 3\r\n3 4\r\n7 9\r\n3 5\r\n5 7\r\n7 8\r\n1 11\r\n11 12\r\n3 6\r\n",
                "3\r\n"
            ],
            [
                "5\r\n4 2 1 2 3\r\n2 1\r\n3 1\r\n4 2\r\n5 3\r\n",
                "0\r\n"
            ],
            [
                "5\r\n2 1 1 3 1\r\n1 2\r\n1 3\r\n3 4\r\n4 5\r\n",
                "0\r\n"
            ],
            [
                "4\r\n1 2 1 1\r\n1 2\r\n2 3\r\n3 4\r\n",
                "0\r\n"
            ],
            [
                "5\r\n2 2 3 5 3\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n",
                "0\r\n"
            ],
            [
                "5\r\n1 2 1 1 1\r\n1 2\r\n2 4\r\n2 5\r\n1 3\r\n",
                "0\r\n"
            ],
            [
                "6\r\n2 3 5 3 1 1\r\n1 2\r\n2 3\r\n3 4\r\n1 5\r\n1 6\r\n",
                "1\r\n"
            ],
            [
                "10\r\n14 7 13 14 7 3 9 10 14 14\r\n2 1\r\n3 2\r\n4 1\r\n5 3\r\n6 4\r\n7 6\r\n8 7\r\n9 6\r\n10 8\r\n",
                "0\r\n"
            ],
            [
                "10\r\n14 3 13 14 11 14 1 6 5 14\r\n2 1\r\n3 2\r\n4 2\r\n5 4\r\n6 2\r\n7 4\r\n8 2\r\n9 5\r\n10 4\r\n",
                "0\r\n"
            ]
        ]
    }
]