[
    {
        "name": "Paint",
        "description": "You are given a \n    1\n by \n    n\n pixel image. The \n    i\n-th pixel of the\nimage has color \n    a_i\n. For each color, the number of pixels of that color\nis at most \n    20\n. You can perform the following operation, which works like\nthe bucket tool in paint programs, on this image: pick a color \u2014 an integer\nfrom \n    1\n to \n    n\n; choose a pixel in the image; for all pixels connected\nto the selected pixel, change their colors to the selected color (two pixels\nof the same color are considered connected if all the pixels between them have\nthe same color as those two pixels). Compute the minimum number of operations\nneeded to make all the pixels in the image have the same color. Input Each\ntest contains multiple test cases. The first line contains the number of test\ncases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^3\n). The first line of each test case\ncontains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 3\n    \u00b710^3\n) \u2014 the\nnumber of pixels in the image. The second line of each test case contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014\nthe colors of the pixels in the image. Note: for each color, the number of\npixels of that color is at most \n    20\n. It is guaranteed that the sum of\n\n    n\n over all test cases does not exceed \n    3\n    \u00b710^3\n. Output For\neach test case, print one integer: the minimum number of operations needed to\nmake all the pixels in the image have the same color. Example Input 3 5 1 2 3\n2 1 4 1 1 2 2 5 1 2 1 4 2 Output 2 1 3 Note In the first example, the optimal\nsolution is to apply the operation on the third pixel changing its color to\n\n    2\n and then to apply the operation on any pixel that has color \n    2\n\nchanging its color and the color of all pixels connected to it to \n    1\n. The\nsequence of operations is then: \n    [1, 2, 3, 2, 1] \n    \u2192 [1, 2, 2, 2, 1] \n    \u2192\n    [1, 1, 1, 1, 1]\n. In the second example, we can either change the \n    1\ns\nto \n    2\ns in one operation or change the \n    2\ns to \n    1\ns also in one\noperation. In the third example, one possible way to make all the pixels have\nthe same color is to apply the operation on the first, third and the fourth\npixel each time changing its color to \n    2\n.\n\n",
        "cf_contest_id": 1572,
        "cf_index": "C",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n5\r\n1 2 3 2 1\r\n4\r\n1 1 2 2\r\n5\r\n1 2 1 4 2\r\n",
                "2\r\n1\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]