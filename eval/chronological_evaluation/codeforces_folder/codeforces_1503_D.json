[
    {
        "name": "Flip the Cards",
        "description": "There is a deck of \n    n\n cards. The \n    i\n-th card has a number \n    a_i\n\non the front and a number \n    b_i\n on the back. Every integer between \n    1\n\nand \n    2n\n appears exactly once on the cards. A deck is called sorted if the\nfront values are in increasing order and the back values are in decreasing\norder. That is, if \n    a_i< a_i+1\n and \n    b_i> b_i+1\n for all \n    1\n    \u2264\n    i8>4>2>1\n. In the second test case, it is impossible to sort the deck.\n\n",
        "cf_contest_id": 1503,
        "cf_index": "D",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "2-sat",
            "constructive algorithms",
            "data structures",
            "greedy",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3 10\r\n6 4\r\n1 9\r\n5 8\r\n2 7\r\n",
                "2\r\n"
            ],
            [
                "2\r\n1 2\r\n3 4\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 2\r\n3 6\r\n4 5\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 2\r\n",
                "0\r\n"
            ],
            [
                "3\r\n3 5\r\n4 1\r\n2 6\r\n",
                "0\r\n"
            ],
            [
                "4\r\n5 4\r\n6 2\r\n7 1\r\n8 3\r\n",
                "1\r\n"
            ],
            [
                "5\r\n8 5\r\n10 3\r\n4 7\r\n6 9\r\n1 2\r\n",
                "-1\r\n"
            ],
            [
                "6\r\n9 8\r\n10 7\r\n4 6\r\n12 11\r\n5 3\r\n2 1\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n11 16\r\n15 14\r\n7 5\r\n13 9\r\n3 19\r\n6 1\r\n18 17\r\n10 20\r\n8 12\r\n2 4\r\n",
                "-1\r\n"
            ],
            [
                "20\r\n24 12\r\n37 1\r\n5 35\r\n36 19\r\n22 6\r\n25 4\r\n26 17\r\n15 31\r\n39 8\r\n28 16\r\n11 29\r\n21 18\r\n14 34\r\n30 10\r\n32 2\r\n20 27\r\n33 13\r\n23 9\r\n40 7\r\n3 38\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n14 8\r\n7 15\r\n11 6\r\n1 17\r\n18 9\r\n2 20\r\n12 4\r\n16 5\r\n3 19\r\n10 13\r\n",
                "-1\r\n"
            ],
            [
                "20\r\n7 29\r\n4 34\r\n40 2\r\n39 10\r\n33 5\r\n1 37\r\n20 23\r\n14 21\r\n22 9\r\n8 28\r\n19 24\r\n26 13\r\n32 6\r\n30 16\r\n11 38\r\n36 3\r\n35 12\r\n15 31\r\n17 27\r\n18 25\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n20 1\r\n15 6\r\n8 13\r\n3 19\r\n7 14\r\n10 11\r\n18 4\r\n2 17\r\n9 12\r\n16 5\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 6\r\n5 4\r\n2 3\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n1 10\r\n3 5\r\n8 7\r\n6 2\r\n9 4\r\n",
                "-1\r\n"
            ],
            [
                "6\r\n10 1\r\n7 5\r\n11 6\r\n9 4\r\n8 2\r\n12 3\r\n",
                "-1\r\n"
            ]
        ]
    }
]