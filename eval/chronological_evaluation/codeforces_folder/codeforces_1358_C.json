[
    {
        "name": "Celex Update",
        "description": "During the quarantine, Sicromoft has more free time to create the new\nfunctions in \"Celex-2021\". The developers made a new function GAZ-GIZ, which\ninfinitely fills an infinite table to the right and down from the upper left\ncorner as follows: The cell with coordinates \n    (x, y)\n is at the\nintersection of \n    x\n-th row and \n    y\n-th column. Upper left cell\n\n    (1,1)\n contains an integer \n    1\n.The developers of the SUM function\ndon't sleep either. Because of the boredom, they teamed up with the developers\nof the RAND function, so they added the ability to calculate the sum on an\narbitrary path from one cell to another, moving down or right. Formally, from\nthe cell \n    (x,y)\n in one step you can move to the cell \n    (x+1, y)\n or\n\n    (x, y+1)\n. After another Dinwows update, Levian started to study\n\"Celex-2021\" (because he wants to be an accountant!). After filling in the\ntable with the GAZ-GIZ function, he asked you to calculate the quantity of\npossible different amounts on the path from a given cell \n    (x_1, y_1)\n to\nanother given cell \n    (x_2, y_2\n), if you can only move one cell down or\nright. Formally, consider all the paths from the cell \n    (x_1, y_1)\n to cell\n\n    (x_2, y_2)\n such that each next cell in the path is located either to the\ndown or to the right of the previous one. Calculate the number of different\nsums of elements for all such paths. Input The first line contains one integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 57179\n) \u2014 the number of test cases. Each of the\nfollowing \n    t\n lines contains four natural numbers \n    x_1\n, \n    y_1\n,\n\n    x_2\n, \n    y_2\n (\n    1 \n    \u2264 x_1 \n    \u2264 x_2 \n    \u2264 10^9\n, \n    1 \n    \u2264 y_1\n    \n    \u2264 y_2 \n    \u2264 10^9\n) \u2014 coordinates of the start and the end cells. Output\nFor each test case, in a separate line, print the number of possible different\nsums on the way from the start cell to the end cell. Example Input 4 1 1 2 2 1\n2 2 4 179 1 179 100000 5 7 5 7 Output 2 3 1 1 Note In the first test case\nthere are two possible sums: \n    1+2+5=8\n and \n    1+3+5=9\n.\n\n",
        "cf_contest_id": 1358,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 1 2 2\r\n1 2 2 4\r\n179 1 179 100000\r\n5 7 5 7\r\n",
                "2\r\n3\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 1 3 6\r\n",
                "11\r\n"
            ],
            [
                "1\r\n118730819 699217111 995255402 978426672\r\n",
                "244734044025138064\r\n"
            ],
            [
                "2\r\n57 179 1329 2007\r\n179 444 239 1568\r\n",
                "2325217\r\n67441\r\n"
            ]
        ]
    }
]