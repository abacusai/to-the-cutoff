[
    {
        "name": "Mark and His Unfinished Essay",
        "description": "One night, Mark realized that there is an essay due tomorrow. He hasn't\nwritten anything yet, so Mark decided to randomly copy-paste substrings from\nthe prompt to make the essay. More formally, the prompt is a string \n    s\n of\ninitial length \n    n\n. Mark will perform the copy-pasting operation \n    c\n\ntimes. Each operation is described by two integers \n    l\n and \n    r\n, which\nmeans that Mark will append letters \n    s_l s_l+1\n    \u2026 s_r\n to the end\nof string \n    s\n. Note that the length of \n    s\n increases after this\noperation. Of course, Mark needs to be able to see what has been written.\nAfter copying, Mark will ask \n    q\n queries: given an integer \n    k\n,\ndetermine the \n    k\n-th letter of the final string \n    s\n. Input The first\nline contains a single integer \n    t\n (\n    1\n    \u2264 t\n    \u2264 1000\n) \u2014 the\nnumber of test cases. The first line of each test case contains three integers\n\n    n\n, \n    c\n, and \n    q\n (\n    1\n    \u2264 n\n    \u2264 2\n    \u00b7 10^5\n, \n    1\n    \u2264\n    c\n    \u2264 40\n, and \n    1\n    \u2264 q\n    \u2264 10^4\n) \u2014 the length of the initial\nstring \n    s\n, the number of copy-pasting operations, and the number of\nqueries, respectively. The second line of each test case contains a single\nstring \n    s\n of length \n    n\n. It is guaranteed that \n    s\n only contains\nlowercase English letters. The following \n    c\n lines describe the copy-\npasting operation. Each line contains two integers \n    l\n and \n    r\n\n(\n    1\n    \u2264 l\n    \u2264 r\n    \u2264 10^18\n). It is also guaranteed that \n    r\n\ndoes not exceed the current length of \n    s\n. The last \n    q\n lines of each\ntest case describe the queries. Each line contains a single integer \n    k\n\n(\n    1\n    \u2264 k\n    \u2264 10^18\n). It is also guaranteed that \n    k\n does not\nexceed the final length of \n    s\n. It is guaranteed that the sum of \n    n\n\nand \n    q\n across all test cases does not exceed \n    2\n    \u00b7 10^5\n and\n\n    10^4\n, respectively. Output For each query, print the \n    k\n-th letter\nof the final string \n    s\n. Example Input 2 4 3 3 mark 1 4 5 7 3 8 1 10 12 7\n3 3 creamii 2 3 3 4 2 9 9 11 12 Output m a r e a r Note In the first test\ncase, the copy-paste process is as follows. The first step is pasting string\n\n    \n at the end, yielding the string\n\n    \n. The second step is\npasting string \n    \n at the end, yielding the string\n\n    \n. The third step is\npasting string \n    \n at the end, yielding the string\n\n    \n. In the second\ntest case, the copy-paste process is as follows. The first step is pasting\nstring \n    \n at the end, yielding the string\n\n    \n. The second step is\npasting string \n    \n at the end, yielding the string\n\n    \n. The third step is\npasting string \n    \n at the end, yielding the string\n\n    \n.\n\n",
        "cf_contest_id": 1705,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n4 3 3\r\nmark\r\n1 4\r\n5 7\r\n3 8\r\n1\r\n10\r\n12\r\n7 3 3\r\ncreamii\r\n2 3\r\n3 4\r\n2 9\r\n9\r\n11\r\n12\r\n",
                "m\r\na\r\nr\r\ne\r\na\r\nr\r\n"
            ]
        ],
        "private_cases": []
    }
]