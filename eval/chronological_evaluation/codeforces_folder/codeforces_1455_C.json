[
    {
        "name": "Ping-pong",
        "description": "Alice and Bob play ping-pong with simplified rules. During the game, the\nplayer serving the ball commences a play. The server strikes the ball then the\nreceiver makes a return by hitting the ball back. Thereafter, the server and\nreceiver must alternately make a return until one of them doesn't make a\nreturn. The one who doesn't make a return loses this play. The winner of the\nplay commences the next play. Alice starts the first play. Alice has \n    x\n\nstamina and Bob has \n    y\n. To hit the ball (while serving or returning) each\nplayer spends \n    1\n stamina, so if they don't have any stamina, they can't\nreturn the ball (and lose the play) or can't serve the ball (in this case, the\nother player serves the ball instead). If both players run out of stamina, the\ngame is over. Sometimes, it's strategically optimal not to return the ball,\nlose the current play, but save the stamina. On the contrary, when the server\ncommences a play, they have to hit the ball, if they have some stamina left.\nBoth Alice and Bob play optimally and want to, firstly, maximize their number\nof wins and, secondly, minimize the number of wins of their opponent.\nCalculate the resulting number of Alice's and Bob's wins. Input The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of\ntest cases. The first and only line of each test case contains two integers\n\n    x\n and \n    y\n (\n    1 \n    \u2264 x, y \n    \u2264 10^6\n) \u2014 Alice's and Bob's\ninitial stamina. Output For each test case, print two integers \u2014 the resulting\nnumber of Alice's and Bob's wins, if both of them play optimally. Example\nInput 3 1 1 2 1 1 7 Output 0 1 1 1 0 7 Note In the first test case, Alice\nserves the ball and spends \n    1\n stamina. Then Bob returns the ball and also\nspends \n    1\n stamina. Alice can't return the ball since she has no stamina\nleft and loses the play. Both of them ran out of stamina, so the game is over\nwith \n    0\n Alice's wins and \n    1\n Bob's wins. In the second test case,\nAlice serves the ball and spends \n    1\n stamina. Bob decides not to return\nthe ball \u2014 he loses the play but saves stamina. Alice, as the winner of the\nlast play, serves the ball in the next play and spends \n    1\n more stamina.\nThis time, Bob returns the ball and spends \n    1\n stamina. Alice doesn't have\nany stamina left, so she can't return the ball and loses the play. Both of\nthem ran out of stamina, so the game is over with \n    1\n Alice's and \n    1\n\nBob's win. In the third test case, Alice serves the ball and spends \n    1\n\nstamina. Bob returns the ball and spends \n    1\n stamina. Alice ran out of\nstamina, so she can't return the ball and loses the play. Bob, as a winner,\nserves the ball in the next \n    6\n plays. Each time Alice can't return the\nball and loses each play. The game is over with \n    0\n Alice's and \n    7\n\nBob's wins.\n\n",
        "cf_contest_id": 1455,
        "cf_index": "C",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "games",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 1\r\n2 1\r\n1 7\r\n",
                "0 1\r\n1 1\r\n0 7\r\n"
            ]
        ],
        "private_cases": [
            [
                "12\r\n1 1\r\n2 1\r\n1 7\r\n1 1\r\n2 1\r\n1 7\r\n1 1\r\n2 1\r\n1 7\r\n1 1\r\n2 1\r\n1 7\r\n",
                "0 1\r\n1 1\r\n0 7\r\n0 1\r\n1 1\r\n0 7\r\n0 1\r\n1 1\r\n0 7\r\n0 1\r\n1 1\r\n0 7\r\n"
            ],
            [
                "1\r\n99999 100000\r\n",
                "99998 100000\r\n"
            ],
            [
                "1\r\n99899 100000\r\n",
                "99898 100000\r\n"
            ],
            [
                "1\r\n99899 99899\r\n",
                "99898 99899\r\n"
            ],
            [
                "3\r\n1 1\r\n2 1\r\n96342 7\r\n",
                "0 1\r\n1 1\r\n96341 7\r\n"
            ],
            [
                "1\r\n8627 2007\r\n",
                "8626 2007\r\n"
            ],
            [
                "1\r\n1000000 1000000\r\n",
                "999999 1000000\r\n"
            ],
            [
                "1\r\n1000000 1\r\n",
                "999999 1\r\n"
            ],
            [
                "2\r\n1000000 1\r\n1 1000000\r\n",
                "999999 1\r\n0 1000000\r\n"
            ],
            [
                "2\r\n1000000 1000000\r\n1000000 2\r\n",
                "999999 1000000\r\n999999 2\r\n"
            ]
        ]
    }
]