[
    {
        "name": "Assimilation IV",
        "description": "Monocarp is playing a game \"Assimilation IV\". In this game he manages a great\nempire: builds cities and conquers new lands. Monocarp's empire has \n    n\n\ncities. In order to conquer new lands he plans to build one Monument in each\ncity. The game is turn-based and, since Monocarp is still amateur, he builds\nexactly one Monument per turn. Monocarp has \n    m\n points on the map he'd\nlike to control using the constructed Monuments. For each point he knows the\ndistance between it and each city. Monuments work in the following way: when\nbuilt in some city, a Monument controls all points at distance at most \n    1\n\nto this city. Next turn, the Monument controls all points at distance at most\n\n    2\n, the turn after \u2014 at distance at most \n    3\n, and so on. Monocarp\nwill build \n    n\n Monuments in \n    n\n turns and his empire will conquer all\npoints that are controlled by at least one Monument. Monocarp can't figure out\nany strategy, so during each turn he will choose a city for a Monument\nrandomly among all remaining cities (cities without Monuments). Monocarp wants\nto know how many points (among \n    m\n of them) he will conquer at the end of\nturn number \n    n\n. Help him to calculate the expected number of conquered\npoints! Input The first line contains two integers \n    n\n and \n    m\n (\n    1\n    \n    \u2264 n \n    \u2264 20\n; \n    1 \n    \u2264 m \n    \u2264 5 \n    \u00b7 10^4\n) \u2014 the number of\ncities and the number of points. Next \n    n\n lines contains \n    m\n integers\neach: the \n    j\n-th integer of the \n    i\n-th line \n    d_i, j\n (\n    1 \n    \u2264\n    d_i, j\n    \u2264 n + 1\n) is the distance between the \n    i\n-th city and the\n\n    j\n-th point. Output It can be shown that the expected number of points\nMonocarp conquers at the end of the \n    n\n-th turn can be represented as an\nirreducible fraction \n    x/y\n. Print this fraction modulo\n\n    998\n     244\n     353\n, i. e. value \n    x \n    \u00b7 y^-1\n     998244353\n\nwhere \n    y^-1\n is such number that \n    y \n    \u00b7 y^-1\n     998244353 =\n    1\n. Example Input 3 5 1 4 4 3 4 1 4 1 4 2 1 4 4 4 3 Output 166374062 Note\nLet's look at all possible orders of cities Monuments will be build in: \n    [1,\n    2, 3]\n: the first city controls all points at distance at most \n    3\n, in\nother words, points \n    1\n and \n    4\n; the second city controls all points\nat distance at most \n    2\n, or points \n    1\n, \n    3\n and \n    5\n; the third\ncity controls all points at distance at most \n    1\n, or point \n    1\n. In\ntotal, \n    4\n points are controlled. \n    [1, 3, 2]\n: the first city controls\npoints \n    1\n and \n    4\n; the second city \u2014 points \n    1\n and \n    3\n; the\nthird city \u2014 point \n    1\n. In total, \n    3\n points. \n    [2, 1, 3]\n: the\nfirst city controls point \n    1\n; the second city \u2014 points \n    1\n, \n    3\n\nand \n    5\n; the third city \u2014 point \n    1\n. In total, \n    3\n points. \n    [2,\n    3, 1]\n: the first city controls point \n    1\n; the second city \u2014 points\n\n    1\n, \n    3\n and \n    5\n; the third city \u2014 point \n    1\n. In total,\n\n    3\n points. \n    [3, 1, 2]\n: the first city controls point \n    1\n; the\nsecond city \u2014 points \n    1\n and \n    3\n; the third city \u2014 points \n    1\n and\n\n    5\n. In total, \n    3\n points. \n    [3, 2, 1]\n: the first city controls\npoint \n    1\n; the second city \u2014 points \n    1\n, \n    3\n and \n    5\n; the\nthird city \u2014 points \n    1\n and \n    5\n. In total, \n    3\n points. The\nexpected number of controlled points is \n    4 + 3 + 3 + 3 + 3 +\n    3/6\n \n    =\n \n    19/6\n or \n    19 \n    \u00b7 6^-1\n\n\n    \u2261\n \n    19 \n    \u00b7 166374059\n \n    \u2261\n \n    166374062\n\n\n    998244353\n\n\n",
        "cf_contest_id": 1525,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "math",
            "probabilities",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 5\r\n1 4 4 3 4\r\n1 4 1 4 2\r\n1 4 4 4 3\r\n",
                "166374062\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n2\r\n",
                "0\r\n"
            ],
            [
                "3 1\r\n1\r\n1\r\n1\r\n",
                "1\r\n"
            ]
        ]
    }
]