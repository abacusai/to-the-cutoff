[
    {
        "name": "Prison Break",
        "description": "Michael is accused of violating the social distancing rules and creating a\nrisk of spreading coronavirus. He is now sent to prison. Luckily, Michael\nknows exactly what the prison looks like from the inside, especially since\nit's very simple. The prison can be represented as a rectangle \n    a\n    \u00d7\n    b\n which is divided into \n    ab\n cells, each representing a prison cell,\ncommon sides being the walls between cells, and sides on the perimeter being\nthe walls leading to freedom. Before sentencing, Michael can ask his friends\namong the prison employees to make (very well hidden) holes in some of the\nwalls (including walls between cells and the outermost walls). Michael wants\nto be able to get out of the prison after this, no matter which cell he is\nplaced in. However, he also wants to break as few walls as possible. Your task\nis to find out the smallest number of walls to be broken so that there is a\npath to the outside from every cell after this. Input The first line contains\na single integer \n    t\n (\n    1\n    \u2264 t\n    \u2264 100\n) \u2014 the number of test\ncases. Each of the following \n    t\n lines contains two integers \n    a\n and\n\n    b\n (\n    1\n    \u2264 a, b\n    \u2264 100\n), representing a corresponding test\ncase. Output For each test case print the single integer on a separate line \u2014\nthe answer to the problem. Example Input 2 2 2 1 3 Output 4 3 Note Some\npossible escape plans for the example test cases are shown below. Broken walls\nare shown in gray, not broken walls are shown in black.\n\n",
        "cf_contest_id": 1482,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]