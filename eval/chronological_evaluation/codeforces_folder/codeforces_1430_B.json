[
    {
        "name": "Barrels",
        "description": "You have \n    n\n barrels lined up in a row, numbered from left to right from\none. Initially, the \n    i\n-th barrel contains \n    a_i\n liters of water. You\ncan pour water from one barrel to another. In one act of pouring, you can\nchoose two different barrels \n    x\n and \n    y\n (the \n    x\n-th barrel\nshouldn't be empty) and pour any possible amount of water from barrel \n    x\n\nto barrel \n    y\n (possibly, all water). You may assume that barrels have\ninfinite capacity, so you can pour any amount of water in each of them.\nCalculate the maximum possible difference between the maximum and the minimum\namount of water in the barrels, if you can pour water at most \n    k\n times.\nSome examples: if you have four barrels, each containing \n    5\n liters of\nwater, and \n    k = 1\n, you may pour \n    5\n liters from the second barrel\ninto the fourth, so the amounts of water in the barrels are \n    [5, 0, 5,\n    10]\n, and the difference between the maximum and the minimum is \n    10\n; if\nall barrels are empty, you can't make any operation, so the difference between\nthe maximum and the minimum amount is still \n    0\n. Input The first line\ncontains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test\ncases. The first line of each test case contains two integers \n    n\n and\n\n    k\n (\n    1 \n    \u2264 k < n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of barrels and\nthe number of pourings you can make. The second line contains \n    n\n integers\n\n    a_1, a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^9\n), where \n    a_i\n\nis the initial amount of water the \n    i\n-th barrel has. It's guaranteed that\nthe total sum of \n    n\n over test cases doesn't exceed \n    2 \n    \u00b7 10^5\n.\nOutput For each test case, print the maximum possible difference between the\nmaximum and the minimum amount of water in the barrels, if you can pour water\nat most \n    k\n times. Example Input 2 4 1 5 5 5 5 3 2 0 0 0 Output 10 0\n\n",
        "cf_contest_id": 1430,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n4 1\r\n5 5 5 5\r\n3 2\r\n0 0 0\r\n",
                "10\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]