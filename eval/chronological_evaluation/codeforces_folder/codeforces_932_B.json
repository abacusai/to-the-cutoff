[
    {
        "name": "Recursive Queries",
        "description": "Let us define two functions f and g on positive integer numbers. You need to\nprocess Q queries. In each query, you will be given three integers l, r and k.\nYou need to print the number of integers x between l and r inclusive, such\nthat g(x) = k. Input The first line of the input contains an integer Q (1 \u2264 Q\n\u2264 2 \u00d7 10^5) representing the number of queries. Q lines follow, each of which\ncontains 3 integers l, r and k (1 \u2264 l \u2264 r \u2264 10^6, 1 \u2264 k \u2264 9). Output For each\nquery, print a single line containing the answer for that query. Examples\nInput 4 22 73 9 45 64 6 47 55 7 2 62 4 Output 1 4 0 8 Input 4 82 94 6 56 67 4\n28 59 9 39 74 4 Output 3 1 1 5 Note In the first example: g(33) = 9 as g(33) =\ng(3 \u00d7 3) = g(9) = 9 g(47) = g(48) = g(60) = g(61) = 6 There are no such\nintegers between 47 and 55. g(4) = g(14) = g(22) = g(27) = g(39) = g(40) =\ng(41) = g(58) = 4\n\n",
        "cf_contest_id": 932,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "dfs and similar"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n22 73 9\r\n45 64 6\r\n47 55 7\r\n2 62 4\r\n",
                "1\r\n4\r\n0\r\n8\r\n"
            ],
            [
                "4\r\n82 94 6\r\n56 67 4\r\n28 59 9\r\n39 74 4\r\n",
                "3\r\n1\r\n1\r\n5\r\n"
            ]
        ],
        "private_cases": []
    }
]