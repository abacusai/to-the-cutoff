[
    {
        "name": "Space mines",
        "description": "Once upon a time in the galaxy of far, far away... Darth Wader found out the\nlocation of a rebels' base. Now he is going to destroy the base (and the whole\nplanet that the base is located at), using the Death Star. When the rebels\nlearnt that the Death Star was coming, they decided to use their new secret\nweapon \u2014 space mines. Let's describe a space mine's build. Each space mine is\nshaped like a ball (we'll call it the mine body) of a certain radius r with\nthe center in the point O. Several spikes protrude from the center. Each spike\ncan be represented as a segment, connecting the center of the mine with some\npoint P, such that (transporting long-spiked mines is problematic), where |OP|\nis the length of the segment connecting O and P. It is convenient to describe\nthe point P by a vector p such that P = O + p. The Death Star is shaped like a\nball with the radius of R (R exceeds any mine's radius). It moves at a\nconstant speed along the v vector at the speed equal to |v|. At the moment the\nrebels noticed the Star of Death, it was located in the point A. The rebels\nlocated n space mines along the Death Star's way. You may regard the mines as\nbeing idle. The Death Star does not know about the mines' existence and cannot\nnotice them, which is why it doesn't change the direction of its movement. As\nsoon as the Star of Death touched the mine (its body or one of the spikes),\nthe mine bursts and destroys the Star of Death. A touching is the situation\nwhen there is a point in space which belongs both to the mine and to the Death\nStar. It is considered that Death Star will not be destroyed if it can move\ninfinitely long time without touching the mines. Help the rebels determine\nwhether they will succeed in destroying the Death Star using space mines or\nnot. If they will succeed, determine the moment of time when it will happen\n(starting from the moment the Death Star was noticed). Input The first input\ndata line contains 7 integers Ax, Ay, Az, vx, vy, vz, R. They are the Death\nStar's initial position, the direction of its movement, and its radius ( - 10\n\u2264 vx, vy, vz \u2264 10, |v| > 0, 0 < R \u2264 100). The second line contains an integer\nn, which is the number of mines (1 \u2264 n \u2264 100). Then follow n data blocks, the\ni-th of them describes the i-th mine. The first line of each block contains 5\nintegers Oix, Oiy, Oiz, ri, mi, which are the coordinates of the mine centre,\nthe radius of its body and the number of spikes (0 < ri < 100, 0 \u2264 mi \u2264 10).\nThen follow mi lines, describing the spikes of the i-th mine, where the j-th\nof them describes the i-th spike and contains 3 integers pijx, pijy, pijz \u2014\nthe coordinates of the vector where the given spike is directed (). The\ncoordinates of the mines' centers and the center of the Death Star are\nintegers, their absolute value does not exceed 10000. It is guaranteed that R\n> ri for any 1 \u2264 i \u2264 n. For any mines i \u2260 j the following inequality if\nfulfilled: . Initially the Death Star and the mines do not have common points.\nOutput If the rebels will succeed in stopping the Death Star using space\nmines, print the time from the moment the Death Star was noticed to the blast.\nIf the Death Star will not touch a mine, print \"-1\" (without quotes). For the\nanswer the absolute or relative error of 10^-6 is acceptable. Examples Input 0\n0 0 1 0 0 5 2 10 8 0 2 2 0 -3 0 2 2 0 20 0 0 4 3 2 4 0 -4 3 0 1 -5 0 Output\n10.0000000000 Input 8 8 4 4 4 2 6 1 -2 -2 -1 3 0 Output -1 Input 30 30 2 1 2 1\n20 3 0 0 40 5 1 1 4 4 -10 -40 -5 7 0 100 200 95 8 1 -10 0 0 Output\n74.6757620881\n\n",
        "cf_contest_id": 89,
        "cf_index": "D",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "geometry"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "0 0 0 1 0 0 5\r\n2\r\n10 8 0 2 2\r\n0 -3 0\r\n2 2 0\r\n20 0 0 4 3\r\n2 4 0\r\n-4 3 0\r\n1 -5 0\r\n",
                "10.00000000000000000000\r\n"
            ],
            [
                "8 8 4 4 4 2 6\r\n1\r\n-2 -2 -1 3 0\r\n",
                "-1\r\n"
            ],
            [
                "30 30 2 1 2 1 20\r\n3\r\n0 0 40 5 1\r\n1 4 4\r\n-10 -40 -5 7 0\r\n100 200 95 8 1\r\n-10 0 0\r\n",
                "74.67576208812256766123\r\n"
            ]
        ],
        "private_cases": [
            [
                "100 99 30 -1 -5 -3 100\r\n1\r\n100 -90 -50 5 4\r\n0 6 0\r\n7 0 0\r\n6 1 1\r\n0 -6 -1\r\n",
                "17.66935841432031395470\r\n"
            ],
            [
                "0 0 0 5 5 5 20\r\n1\r\n-20 0 -30 10 2\r\n0 11 2\r\n-5 -8 -6\r\n",
                "-1\r\n"
            ],
            [
                "-4 5 8 6 1 5 10\r\n5\r\n10 -3 -3 3 1\r\n0 -4 -2\r\n5 9 -8 1 1\r\n-1 0 -1\r\n-9 8 -6 1 2\r\n-1 0 1\r\n0 -1 1\r\n0 4 -7 3 2\r\n2 -1 -3\r\n4 -2 0\r\n0 -9 -9 3 1\r\n0 -3 -1\r\n",
                "-1\r\n"
            ],
            [
                "-10000 0 0 1 0 0 2\r\n1\r\n10000 3 0 1 0\r\n",
                "20000.00000000000000000000\r\n"
            ],
            [
                "-10000 0 0 1 0 0 3\r\n1\r\n10000 6 0 2 1\r\n-3 0 0\r\n",
                "-1\r\n"
            ],
            [
                "-10000 0 0 10 1 0 100\r\n1\r\n9995 2110 0 10 0\r\n",
                "2000.26943373642075130192\r\n"
            ],
            [
                "-10000 0 0 10 1 0 100\r\n1\r\n9994 2110 0 10 0\r\n",
                "-1\r\n"
            ]
        ]
    }
]