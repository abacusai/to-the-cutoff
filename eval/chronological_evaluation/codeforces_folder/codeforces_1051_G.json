[
    {
        "name": "Distinctification",
        "description": "Suppose you are given a sequence \n    S\n of \n    k\n pairs of integers \n    (a_1,\n    b_1), (a_2, b_2), \n    \u2026, (a_k, b_k)\n. You can perform the following\noperations on it: Choose some position \n    i\n and increase \n    a_i\n by\n\n    1\n. That can be performed only if there exists at least one such position\n\n    j\n that \n    i \n     j\n and \n    a_i = a_j\n. The cost of this operation\nis \n    b_i\n; Choose some position \n    i\n and decrease \n    a_i\n by \n    1\n.\nThat can be performed only if there exists at least one such position \n    j\n\nthat \n    a_i = a_j + 1\n. The cost of this operation is \n    -b_i\n. Each\noperation can be performed arbitrary number of times (possibly zero). Let\n\n    f(S)\n be minimum possible \n    x\n such that there exists a sequence of\noperations with total cost \n    x\n, after which all \n    a_i\n from \n    S\n are\npairwise distinct. Now for the task itself ... You are given a sequence\n\n    P\n consisting of \n    n\n pairs of integers \n    (a_1, b_1), (a_2, b_2),\n    \n    \u2026, (a_n, b_n)\n. All \n    b_i\n are pairwise distinct. Let \n    P_i\n be\nthe sequence consisting of the first \n    i\n pairs of \n    P\n. Your task is to\ncalculate the values of \n    f(P_1), f(P_2), \n    \u2026, f(P_n)\n. Input The first\nline contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n)\n\u2014 the number of pairs in sequence \n    P\n. Next \n    n\n lines contain the\nelements of \n    P\n: \n    i\n-th of the next \n    n\n lines contains two\nintegers \n    a_i\n and \n    b_i\n (\n    1 \n    \u2264 a_i \n    \u2264 2 \n    \u00b7 10^5\n, \n    1\n    \n    \u2264 b_i \n    \u2264 n\n). It is guaranteed that all values of \n    b_i\n are\npairwise distinct. Output Print \n    n\n integers \u2014 the \n    i\n-th number\nshould be equal to \n    f(P_i)\n. Examples Input 5 1 1 3 3 5 5 4 2 2 4 Output 0\n0 0 -5 -16 Input 4 2 4 2 3 2 2 1 1 Output 0 3 7 1\n\n",
        "cf_contest_id": 1051,
        "cf_index": "G",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dsu",
            "greedy"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n1 1\r\n3 3\r\n5 5\r\n4 2\r\n2 4\r\n",
                "0\r\n0\r\n0\r\n-5\r\n-16\r\n"
            ],
            [
                "4\r\n2 4\r\n2 3\r\n2 2\r\n1 1\r\n",
                "0\r\n3\r\n7\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n10 7\r\n10 5\r\n5 10\r\n3 6\r\n7 3\r\n6 4\r\n1 2\r\n10 9\r\n6 8\r\n6 1\r\n",
                "0\r\n5\r\n5\r\n5\r\n5\r\n5\r\n5\r\n17\r\n24\r\n-13\r\n"
            ],
            [
                "10\r\n28 9\r\n19 3\r\n47 5\r\n52 10\r\n75 8\r\n99 1\r\n62 4\r\n85 7\r\n23 6\r\n74 2\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n-6\r\n"
            ],
            [
                "10\r\n1 2\r\n1 10\r\n4 5\r\n4 8\r\n1 4\r\n5 9\r\n3 7\r\n2 3\r\n5 6\r\n2 1\r\n",
                "0\r\n2\r\n2\r\n7\r\n-1\r\n-9\r\n9\r\n26\r\n40\r\n48\r\n"
            ],
            [
                "10\r\n965 8\r\n89 5\r\n711 10\r\n689 3\r\n69 7\r\n273 6\r\n674 1\r\n733 4\r\n186 9\r\n114 2\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ]
        ]
    }
]