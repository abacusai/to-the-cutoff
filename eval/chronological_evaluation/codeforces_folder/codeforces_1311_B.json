[
    {
        "name": "WeirdSort",
        "description": "You are given an array \n    a\n of length \n    n\n. You are also given a set of\ndistinct positions \n    p_1, p_2, \n    \u2026, p_m\n, where \n    1 \n    \u2264 p_i < n\n.\nThe position \n    p_i\n means that you can swap elements \n    a[p_i]\n and\n\n    a[p_i + 1]\n. You can apply this operation any number of times for each of\nthe given positions. Your task is to determine if it is possible to sort the\ninitial array in non-decreasing order (\n    a_1 \n    \u2264 a_2 \n    \u2264\n    \u2026\n    \u2264\n    a_n\n) using only allowed swaps. For example, if \n    a = [3, 2, 1]\n and \n    p\n    = [1, 2]\n, then we can first swap elements \n    a[2]\n and \n    a[3]\n\n(because position \n    2\n is contained in the given set \n    p\n). We get the\narray \n    a = [3, 1, 2]\n. Then we swap \n    a[1]\n and \n    a[2]\n (position\n\n    1\n is also contained in \n    p\n). We get the array \n    a = [1, 3, 2]\n.\nFinally, we swap \n    a[2]\n and \n    a[3]\n again and get the array \n    a = [1,\n    2, 3]\n, sorted in non-decreasing order. You can see that if \n    a = [4, 1, 2,\n    3]\n and \n    p = [3, 2]\n then you cannot sort the array. You have to answer\n\n    t\n independent test cases. Input The first line of the input contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases. Then\n\n    t\n test cases follow. The first line of each test case contains two\nintegers \n    n\n and \n    m\n (\n    1 \n    \u2264 m < n \n    \u2264 100\n) \u2014 the number of\nelements in \n    a\n and the number of elements in \n    p\n. The second line of\nthe test case contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1\n    \n    \u2264 a_i \n    \u2264 100\n). The third line of the test case contains \n    m\n\nintegers \n    p_1, p_2, \n    \u2026, p_m\n (\n    1 \n    \u2264 p_i < n\n, all \n    p_i\n\nare distinct) \u2014 the set of positions described in the problem statement.\nOutput For each test case, print the answer \u2014 \"YES\" (without quotes) if you\ncan sort the initial array in non-decreasing order (\n    a_1 \n    \u2264 a_2 \n    \u2264\n    \u2026\n    \u2264 a_n\n) using only allowed swaps. Otherwise, print \"NO\". Example\nInput 6 3 2 3 2 1 1 2 4 2 4 1 2 3 3 2 5 1 1 2 3 4 5 1 4 2 2 1 4 3 1 3 4 2 4 3\n2 1 1 3 5 2 2 1 2 3 3 1 4 Output YES NO YES YES NO YES\n\n",
        "cf_contest_id": 1311,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n3 2\r\n3 2 1\r\n1 2\r\n4 2\r\n4 1 2 3\r\n3 2\r\n5 1\r\n1 2 3 4 5\r\n1\r\n4 2\r\n2 1 4 3\r\n1 3\r\n4 2\r\n4 3 2 1\r\n1 3\r\n5 2\r\n2 1 2 3 3\r\n1 4\r\n",
                "YES\r\nNO\r\nYES\r\nYES\r\nNO\r\nYES\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n6 4\r\n5 5 6 6 4 5\r\n1 4 5 3\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n5 3\r\n3 2 3 2 5\r\n1 4 2\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n4 2\r\n4 4 1 2\r\n2 1\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n3 1\r\n3 1 1\r\n1\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n8 6\r\n5 5 7 7 8 7 5 2\r\n3 5 4 1 7 6\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n9 7\r\n1 7 7 7 7 4 7 9 3\r\n1 8 2 4 7 6 3\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n7 4\r\n99 1 2 3 4 12 43\r\n1 3 4 2\r\n",
                "NO\r\n"
            ]
        ]
    }
]