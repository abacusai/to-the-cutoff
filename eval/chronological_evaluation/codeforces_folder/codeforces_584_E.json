[
    {
        "name": "Anton and Ira",
        "description": "Anton loves transforming one permutation into another one by swapping elements\nfor money, and Ira doesn't like paying for stupid games. Help them obtain the\nrequired permutation by paying as little money as possible. More formally, we\nhave two permutations, p and s of numbers from 1 to n. We can swap pi and pj,\nby paying |i - j| coins for it. Find and print the smallest number of coins\nrequired to obtain permutation s from permutation p. Also print the sequence\nof swap operations at which we obtain a solution. Input The first line\ncontains a single number n (1 \u2264 n \u2264 2000) \u2014 the length of the permutations.\nThe second line contains a sequence of n numbers from 1 to n \u2014 permutation p.\nEach number from 1 to n occurs exactly once in this line. The third line\ncontains a sequence of n numbers from 1 to n \u2014 permutation s. Each number from\n1 to n occurs once in this line. Output In the first line print the minimum\nnumber of coins that you need to spend to transform permutation p into\npermutation s. In the second line print number k (0 \u2264 k \u2264 2\u00b710^6) \u2014 the number\nof operations needed to get the solution. In the next k lines print the\noperations. Each line must contain two numbers i and j (1 \u2264 i, j \u2264 n, i \u2260 j),\nwhich means that you need to swap pi and pj. It is guaranteed that the\nsolution exists. Examples Input 4 4 2 1 3 3 2 4 1 Output 3 2 4 3 3 1 Note In\nthe first sample test we swap numbers on positions 3 and 4 and permutation p\nbecomes 4 2 3 1. We pay |3 - 4| = 1 coins for that. On second turn we swap\nnumbers on positions 1 and 3 and get permutation 3241 equal to s. We pay |3 -\n1| = 2 coins for that. In total we pay three coins.\n\n",
        "cf_contest_id": 584,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n4 2 1 3\r\n3 2 4 1\r\n",
                "3\r\n2\r\n3 4\r\n1 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n1\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n1 2\r\n1 2\r\n",
                "0\r\n0\r\n"
            ],
            [
                "3\r\n3 2 1\r\n1 3 2\r\n",
                "2\r\n2\r\n2 3\r\n1 2\r\n"
            ],
            [
                "6\r\n4 5 2 6 3 1\r\n1 5 2 4 6 3\r\n",
                "5\r\n3\r\n5 6\r\n4 5\r\n1 4\r\n"
            ],
            [
                "7\r\n7 4 6 2 5 1 3\r\n7 5 6 1 3 2 4\r\n",
                "7\r\n5\r\n4 5\r\n2 4\r\n5 6\r\n4 5\r\n5 7\r\n"
            ],
            [
                "10\r\n5 1 6 2 8 3 4 10 9 7\r\n5 1 6 2 8 3 4 10 9 7\r\n",
                "0\r\n0\r\n"
            ],
            [
                "9\r\n1 6 4 5 9 8 7 3 2\r\n2 3 7 8 9 5 4 6 1\r\n",
                "20\r\n4\r\n4 6\r\n3 7\r\n2 8\r\n1 9\r\n"
            ],
            [
                "8\r\n5 8 3 7 6 1 2 4\r\n1 2 4 5 8 3 7 6\r\n",
                "15\r\n15\r\n5 6\r\n4 5\r\n3 4\r\n2 3\r\n1 2\r\n6 7\r\n5 6\r\n4 5\r\n3 4\r\n2 3\r\n7 8\r\n6 7\r\n5 6\r\n4 5\r\n3 4\r\n"
            ],
            [
                "11\r\n2 7 4 1 5 9 6 11 8 10 3\r\n7 4 1 5 9 6 11 8 10 3 2\r\n",
                "10\r\n10\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n"
            ],
            [
                "12\r\n3 4 10 1 2 6 7 9 12 5 8 11\r\n5 8 11 3 4 10 1 2 6 7 9 12\r\n",
                "27\r\n27\r\n9 10\r\n8 9\r\n7 8\r\n6 7\r\n5 6\r\n4 5\r\n3 4\r\n2 3\r\n1 2\r\n10 11\r\n9 10\r\n8 9\r\n7 8\r\n6 7\r\n5 6\r\n4 5\r\n3 4\r\n2 3\r\n11 12\r\n10 11\r\n9 10\r\n8 9\r\n7 8\r\n6 7\r\n5 6\r\n4 5\r\n3 4\r\n"
            ],
            [
                "10\r\n6 9 8 10 4 3 7 1 5 2\r\n6 1 7 9 4 8 3 10 5 2\r\n",
                "10\r\n6\r\n6 7\r\n4 6\r\n3 4\r\n6 8\r\n4 6\r\n2 4\r\n"
            ],
            [
                "10\r\n7 10 5 8 9 3 4 6 1 2\r\n7 10 5 8 9 3 4 6 1 2\r\n",
                "0\r\n0\r\n"
            ],
            [
                "4\r\n3 1 4 2\r\n4 3 2 1\r\n",
                "3\r\n3\r\n2 3\r\n1 2\r\n3 4\r\n"
            ],
            [
                "5\r\n5 1 3 4 2\r\n1 3 5 4 2\r\n",
                "2\r\n2\r\n1 2\r\n2 3\r\n"
            ],
            [
                "2\r\n1 2\r\n2 1\r\n",
                "1\r\n1\r\n1 2\r\n"
            ],
            [
                "3\r\n1 3 2\r\n3 1 2\r\n",
                "1\r\n1\r\n1 2\r\n"
            ],
            [
                "4\r\n3 1 4 2\r\n2 4 1 3\r\n",
                "4\r\n2\r\n2 3\r\n1 4\r\n"
            ],
            [
                "5\r\n2 1 3 4 5\r\n5 1 3 4 2\r\n",
                "4\r\n1\r\n1 5\r\n"
            ],
            [
                "6\r\n5 2 3 4 6 1\r\n1 4 3 6 5 2\r\n",
                "8\r\n4\r\n2 4\r\n4 5\r\n5 6\r\n1 5\r\n"
            ],
            [
                "7\r\n4 3 2 5 1 6 7\r\n3 2 1 5 7 4 6\r\n",
                "6\r\n5\r\n1 2\r\n2 3\r\n3 5\r\n6 7\r\n5 6\r\n"
            ],
            [
                "8\r\n2 8 4 7 5 3 6 1\r\n3 6 5 1 8 4 7 2\r\n",
                "16\r\n11\r\n4 5\r\n3 4\r\n5 6\r\n4 5\r\n2 4\r\n1 2\r\n6 7\r\n5 6\r\n4 5\r\n2 4\r\n4 8\r\n"
            ],
            [
                "8\r\n6 7 8 1 5 3 4 2\r\n8 5 7 6 4 2 1 3\r\n",
                "9\r\n8\r\n2 3\r\n1 2\r\n4 5\r\n2 4\r\n6 7\r\n5 6\r\n7 8\r\n6 7\r\n"
            ],
            [
                "9\r\n5 1 9 7 8 3 6 2 4\r\n4 5 2 8 9 6 1 3 7\r\n",
                "15\r\n8\r\n4 5\r\n6 7\r\n7 8\r\n5 7\r\n3 5\r\n7 9\r\n2 7\r\n1 2\r\n"
            ],
            [
                "9\r\n3 5 4 2 9 1 8 6 7\r\n7 5 9 8 2 6 1 3 4\r\n",
                "15\r\n7\r\n4 5\r\n3 4\r\n6 7\r\n4 6\r\n6 8\r\n8 9\r\n1 8\r\n"
            ],
            [
                "10\r\n9 3 5 1 4 8 6 2 7 10\r\n3 5 1 4 8 6 2 7 10 9\r\n",
                "9\r\n9\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n"
            ],
            [
                "10\r\n9 5 8 6 3 2 4 1 7 10\r\n2 4 1 7 10 9 5 8 6 3\r\n",
                "25\r\n25\r\n5 6\r\n4 5\r\n3 4\r\n2 3\r\n1 2\r\n6 7\r\n5 6\r\n4 5\r\n3 4\r\n2 3\r\n7 8\r\n6 7\r\n5 6\r\n4 5\r\n3 4\r\n8 9\r\n7 8\r\n6 7\r\n5 6\r\n4 5\r\n9 10\r\n8 9\r\n7 8\r\n6 7\r\n5 6\r\n"
            ],
            [
                "10\r\n4 10 5 1 6 8 9 2 3 7\r\n1 6 5 4 10 8 9 2 3 7\r\n",
                "6\r\n4\r\n2 4\r\n1 2\r\n4 5\r\n2 4\r\n"
            ],
            [
                "10\r\n6 9 8 10 4 3 7 1 5 2\r\n6 5 8 3 7 10 4 2 1 9\r\n",
                "13\r\n7\r\n5 6\r\n4 5\r\n6 7\r\n5 6\r\n8 9\r\n2 8\r\n8 10\r\n"
            ],
            [
                "10\r\n7 10 5 8 9 3 4 6 1 2\r\n1 4 6 5 2 3 10 9 7 8\r\n",
                "23\r\n12\r\n5 7\r\n4 5\r\n3 4\r\n2 3\r\n7 8\r\n5 7\r\n3 5\r\n7 9\r\n5 7\r\n1 5\r\n9 10\r\n5 9\r\n"
            ]
        ]
    }
]