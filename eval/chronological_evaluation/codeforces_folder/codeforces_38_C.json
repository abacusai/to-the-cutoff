[
    {
        "name": "Blinds",
        "description": "The blinds are known to consist of opaque horizontal stripes that can be\nrotated thus regulating the amount of light flowing in the room. There are n\nblind stripes with the width of 1 in the factory warehouse for blind\nproduction. The problem is that all of them are spare details from different\norders, that is, they may not have the same length (it is even possible for\nthem to have different lengths) Every stripe can be cut into two or more\nparts. The cuttings are made perpendicularly to the side along which the\nlength is measured. Thus the cuttings do not change the width of a stripe but\neach of the resulting pieces has a lesser length (the sum of which is equal to\nthe length of the initial stripe) After all the cuttings the blinds are\nconstructed through consecutive joining of several parts, similar in length,\nalong sides, along which length is measured. Also, apart from the resulting\npieces an initial stripe can be used as a blind if it hasn't been cut. It is\nforbidden to construct blinds in any other way. Thus, if the blinds consist of\nk pieces each d in length, then they are of form of a rectangle of k \u00d7 d\nbourlemeters. Your task is to find for what window possessing the largest\npossible area the blinds can be made from the given stripes if on technical\ngrounds it is forbidden to use pieces shorter than l bourlemeter. The window\nis of form of a rectangle with side lengths as positive integers. Input The\nfirst output line contains two space-separated integers n and l (1 \u2264 n, l \u2264\n100). They are the number of stripes in the warehouse and the minimal\nacceptable length of a blind stripe in bourlemeters. The second line contains\nspace-separated n integers ai. They are the lengths of initial stripes in\nbourlemeters (1 \u2264 ai \u2264 100). Output Print the single number \u2014 the maximal area\nof the window in square bourlemeters that can be completely covered. If no\nwindow with a positive area that can be covered completely without breaking\nany of the given rules exist, then print the single number 0. Examples Input 4\n2 1 2 3 4 Output 8 Input 5 3 5 5 7 3 1 Output 15 Input 2 3 1 2 Output 0 Note\nIn the first sample test the required window is 2 \u00d7 4 in size and the blinds\nfor it consist of 4 parts, each 2 bourlemeters long. One of the parts is the\ninitial stripe with the length of 2, the other one is a part of a cut stripe\nwith the length of 3 and the two remaining stripes are parts of a stripe with\nthe length of 4 cut in halves.\n\n",
        "cf_contest_id": 38,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "brute force"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2\r\n1 2 3 4\r\n",
                "8\r\n"
            ],
            [
                "5 3\r\n5 5 7 3 1\r\n",
                "15\r\n"
            ],
            [
                "2 3\r\n1 2\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n3 3\r\n",
                "6\r\n"
            ],
            [
                "5 2\r\n2 4 1 1 3\r\n",
                "8\r\n"
            ],
            [
                "7 4\r\n3 2 1 1 1 3 2\r\n",
                "0\r\n"
            ],
            [
                "10 1\r\n1 2 2 6 6 1 2 5 5 6\r\n",
                "36\r\n"
            ],
            [
                "10 2\r\n6 3 1 1 6 4 6 1 6 3\r\n",
                "33\r\n"
            ],
            [
                "15 6\r\n1 6 6 5 2 10 4 4 7 8 7 3 5 1 2\r\n",
                "36\r\n"
            ],
            [
                "20 2\r\n13 3 6 11 6 11 9 1 1 2 5 2 9 15 14 10 3 12 3 13\r\n",
                "136\r\n"
            ],
            [
                "25 20\r\n10 8 4 6 12 14 19 18 19 9 21 16 16 15 10 15 12 12 18 18 9 22 12 14 14\r\n",
                "42\r\n"
            ],
            [
                "30 15\r\n93 99 77 69 43 86 56 15 9 9 75 84 56 1 42 45 10 23 83 87 86 99 46 48 40 69 95 10 61 47\r\n",
                "1455\r\n"
            ],
            [
                "35 3\r\n13 12 38 45 71 61 42 75 58 40 50 70 27 38 16 37 21 12 36 7 39 4 65 12 32 26 1 21 66 63 29 56 32 29 26\r\n",
                "1236\r\n"
            ],
            [
                "40 33\r\n33 52 83 32 59 90 25 90 38 31 60 30 76 77 9 13 48 1 55 39 84 28 58 83 12 3 77 34 33 73 15 35 29 8 3 21 63 4 21 75\r\n",
                "1089\r\n"
            ],
            [
                "45 1\r\n1 1 2 3 1 2 3 1 1 1 1 2 2 2 2 3 1 1 2 2 3 3 2 3 3 1 3 3 3 1 2 3 2 1 2 1 1 2 1 2 1 1 2 2 2\r\n",
                "84\r\n"
            ],
            [
                "50 70\r\n60 21 1 35 20 10 35 59 27 12 57 67 76 49 27 72 39 47 56 36 36 13 62 16 6 16 39 46 35 9 67 59 61 52 1 44 70 40 60 3 5 2 14 29 56 32 4 28 35 73\r\n",
                "280\r\n"
            ],
            [
                "55 12\r\n15 5 11 16 17 3 5 28 19 15 1 9 5 26 25 3 14 14 33 12 3 21 16 30 22 18 7 16 24 28 2 17 24 25 16 16 31 9 11 9 6 13 25 23 32 18 4 21 10 32 11 5 4 32 14\r\n",
                "588\r\n"
            ],
            [
                "60 10\r\n42 89 35 19 51 41 31 77 10 8 73 27 47 26 66 91 43 33 74 62 77 23 5 44 18 23 74 6 51 21 30 17 31 39 74 4 55 39 3 34 21 3 18 41 61 37 31 91 69 55 75 67 77 30 11 16 35 68 62 19\r\n",
                "2240\r\n"
            ],
            [
                "65 7\r\n1 5 4 1 4 11 9 1 11 7 6 11 9 4 2 6 10 11 10 12 4 6 1 12 12 5 1 11 7 9 11 6 10 10 7 8 4 1 3 5 2 3 2 10 11 10 5 8 7 10 12 5 11 6 8 6 2 9 9 7 2 4 12 7 7\r\n",
                "245\r\n"
            ],
            [
                "70 12\r\n6 8 11 13 11 30 4 26 16 24 8 12 14 25 7 26 1 24 1 9 7 19 25 11 18 23 27 26 27 19 8 10 9 20 23 2 14 27 24 24 14 21 31 5 1 14 24 20 2 1 11 17 12 7 17 20 8 21 16 17 31 25 9 25 5 18 6 19 22 27\r\n",
                "756\r\n"
            ],
            [
                "75 19\r\n3 35 38 25 5 17 12 37 26 34 20 3 30 33 16 26 16 31 17 5 13 40 4 40 16 4 24 31 39 13 12 3 25 40 21 2 27 26 21 2 18 24 24 25 18 3 15 20 5 6 23 10 16 37 20 13 39 4 6 28 9 25 14 7 6 15 34 9 4 16 36 19 17 30 33\r\n",
                "817\r\n"
            ],
            [
                "80 1\r\n7 13 38 24 17 20 11 3 25 23 36 16 41 36 18 9 33 10 37 20 8 7 42 8 17 1 39 30 39 24 36 17 8 11 3 33 23 42 36 16 36 3 30 20 29 35 43 17 32 26 33 4 41 34 9 37 14 26 6 40 16 24 8 26 16 31 11 12 18 24 42 34 24 37 5 23 32 13 8 14\r\n",
                "1810\r\n"
            ],
            [
                "85 2\r\n26 5 48 55 22 22 43 29 55 29 6 53 48 35 58 22 44 7 14 26 48 17 66 44 2 10 50 4 19 35 29 61 55 57 25 5 54 64 18 17 43 16 14 63 46 22 55 23 8 52 65 30 10 13 24 18 7 44 65 7 42 63 29 54 32 23 55 17 3 11 67 14 45 31 33 22 36 28 27 54 46 45 15 40 55\r\n",
                "2796\r\n"
            ],
            [
                "91 6\r\n4 2 4 2 6 2 4 1 2 6 5 3 3 3 3 2 5 4 2 5 3 2 1 3 5 2 4 5 1 3 3 3 6 6 5 3 4 1 5 6 2 5 2 2 5 4 1 5 4 1 2 6 1 2 3 4 3 3 3 3 2 1 4 5 1 6 5 1 6 5 3 5 6 3 3 5 4 4 5 4 5 2 5 2 3 1 5 6 6 4 2\r\n",
                "66\r\n"
            ],
            [
                "92 8\r\n3 4 6 9 7 9 12 12 7 4 9 1 3 9 2 12 4 5 12 2 6 5 9 9 5 2 7 5 12 2 1 7 7 11 11 1 4 10 11 7 5 6 3 5 12 2 9 1 11 1 9 11 1 9 7 9 7 8 1 5 8 8 1 8 6 6 4 5 6 10 7 9 7 1 6 2 12 11 7 6 12 11 5 11 6 10 1 9 3 9 11 9\r\n",
                "306\r\n"
            ],
            [
                "96 9\r\n4 5 1 10 2 6 1 9 2 6 3 2 9 4 1 1 3 10 10 4 6 8 6 4 4 6 4 6 2 9 1 9 3 6 9 10 4 3 7 2 7 4 4 4 6 4 1 7 9 4 9 2 1 7 7 3 4 10 10 5 1 3 10 5 1 9 8 4 10 4 7 2 9 6 9 4 2 3 6 9 8 1 1 2 9 4 10 4 9 7 7 5 1 10 9 10\r\n",
                "225\r\n"
            ],
            [
                "100 2\r\n2 2 1 1 1 1 1 1 1 2 2 1 1 2 2 1 1 2 1 1 1 1 1 1 2 2 2 1 1 2 1 2 1 2 2 1 1 1 1 2 1 1 1 2 2 1 1 2 1 1 2 2 2 2 2 1 2 1 2 1 1 2 1 2 2 2 2 1 2 1 2 1 2 1 2 2 2 1 1 2 2 1 2 1 1 1 1 2 1 2 2 2 1 2 1 1 1 2 2 1\r\n",
                "92\r\n"
            ]
        ]
    }
]