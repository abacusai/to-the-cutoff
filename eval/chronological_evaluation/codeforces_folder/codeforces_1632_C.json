[
    {
        "name": "Strange Test",
        "description": "Igor is in 11th grade. Tomorrow he will have to write an informatics test by\nthe strictest teacher in the school, Pavel Denisovich. Igor knows how the test\nwill be conducted: first of all, the teacher will give each student two\npositive integers \n    a\n and \n    b\n (\n    a < b\n). After that, the student\ncan apply any of the following operations any number of times: \n    a := a +\n    1\n (increase \n    a\n by \n    1\n), \n    b := b + 1\n (increase \n    b\n by\n\n    1\n), \n    a := a \n     | \n     b\n (replace \n    a\n with the bitwise OR of\n\n    a\n and \n    b\n). To get full marks on the test, the student has to tell\nthe teacher the minimum required number of operations to make \n    a\n and\n\n    b\n equal. Igor already knows which numbers the teacher will give him.\nHelp him figure out what is the minimum number of operations needed to make\n\n    a\n equal to \n    b\n. Input Each test contains multiple test cases. The\nfirst line contains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n). Description of the test cases follows. The only line for each test\ncase contains two integers \n    a\n and \n    b\n (\n    1 \n    \u2264 a < b \n    \u2264\n    10^6\n). It is guaranteed that the sum of \n    b\n over all test cases does\nnot exceed \n    10^6\n. Output For each test case print one integer \u2014 the\nminimum required number of operations to make \n    a\n and \n    b\n equal.\nExample Input 5 1 3 5 8 2 5 3 19 56678 164422 Output 1 3 2 1 23329 Note In the\nfirst test case, it is optimal to apply the third operation. In the second\ntest case, it is optimal to apply the first operation three times. In the\nthird test case, it is optimal to apply the second operation and then the\nthird operation.\n\n",
        "cf_contest_id": 1632,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "bitmasks",
            "brute force",
            "dp",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 3\r\n5 8\r\n2 5\r\n3 19\r\n56678 164422\r\n",
                "1\r\n3\r\n2\r\n1\r\n23329\r\n"
            ]
        ],
        "private_cases": [
            [
                "6\r\n1 4\r\n1 4\r\n4 5\r\n631059 999974\r\n1 2\r\n1 2\r\n",
                "2\r\n2\r\n1\r\n24302\r\n1\r\n1\r\n"
            ],
            [
                "17\r\n1 3\r\n2 4\r\n3 5\r\n2 3\r\n1 2\r\n2 5\r\n3 5\r\n1 2\r\n1 5\r\n1 2\r\n3 4\r\n281794 563452\r\n1 3\r\n1 3\r\n1 2\r\n218235 436471\r\n1 5\r\n",
                "1\r\n2\r\n2\r\n1\r\n1\r\n2\r\n2\r\n1\r\n1\r\n1\r\n1\r\n242495\r\n1\r\n1\r\n1\r\n43909\r\n1\r\n"
            ],
            [
                "1\r\n999999 1000000\r\n",
                "1\r\n"
            ],
            [
                "14\r\n1 2\r\n51649 234369\r\n3 5\r\n2 4\r\n4 5\r\n2 3\r\n178731 226389\r\n1 2\r\n2 4\r\n185546 371108\r\n4 5\r\n4 5\r\n1 2\r\n84058 168078\r\n",
                "1\r\n13888\r\n2\r\n2\r\n1\r\n1\r\n17878\r\n1\r\n2\r\n76583\r\n1\r\n1\r\n1\r\n47015\r\n"
            ],
            [
                "18\r\n2 3\r\n2 3\r\n2 3\r\n3 4\r\n1 4\r\n3 4\r\n160570 255604\r\n3 4\r\n3 5\r\n4 5\r\n1 5\r\n1 3\r\n1 2\r\n1 2\r\n113836 489816\r\n1 4\r\n2 4\r\n233746 254500\r\n",
                "1\r\n1\r\n1\r\n1\r\n2\r\n1\r\n3271\r\n1\r\n2\r\n1\r\n1\r\n1\r\n1\r\n1\r\n17237\r\n2\r\n2\r\n3823\r\n"
            ],
            [
                "3\r\n186850 373693\r\n1 4\r\n313129 626299\r\n",
                "75295\r\n2\r\n211119\r\n"
            ],
            [
                "4\r\n2 3\r\n183887 367789\r\n3 4\r\n316073 632198\r\n",
                "1\r\n78243\r\n1\r\n208164\r\n"
            ],
            [
                "5\r\n2 3\r\n39710 210498\r\n394744 789486\r\n1 5\r\n2 4\r\n",
                "1\r\n25821\r\n129545\r\n1\r\n2\r\n"
            ],
            [
                "6\r\n1 4\r\n11286 22574\r\n488702 977404\r\n2 3\r\n1 5\r\n2 3\r\n",
                "2\r\n5097\r\n35587\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "7\r\n1 2\r\n1 5\r\n2 5\r\n1 2\r\n1 2\r\n360113 720342\r\n139807 279631\r\n",
                "1\r\n1\r\n2\r\n1\r\n1\r\n164060\r\n122321\r\n"
            ],
            [
                "8\r\n1 2\r\n1 3\r\n1 3\r\n4 5\r\n1 3\r\n864150 941869\r\n1 2\r\n29049 58098\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n53354\r\n1\r\n3720\r\n"
            ],
            [
                "9\r\n2 5\r\n1 2\r\n2 3\r\n699555 874787\r\n1 2\r\n1 5\r\n54396 125176\r\n2 4\r\n2 4\r\n",
                "2\r\n1\r\n1\r\n86878\r\n1\r\n1\r\n2949\r\n2\r\n2\r\n"
            ],
            [
                "10\r\n1 2\r\n1 2\r\n173190 346359\r\n1 4\r\n3 5\r\n1 2\r\n1 3\r\n4 5\r\n326793 653600\r\n1 2\r\n",
                "1\r\n1\r\n88955\r\n2\r\n2\r\n1\r\n1\r\n1\r\n197482\r\n1\r\n"
            ],
            [
                "11\r\n226295 255982\r\n1 2\r\n3 5\r\n3 4\r\n1 4\r\n2 3\r\n371970 743972\r\n2 3\r\n2 4\r\n1 3\r\n1 2\r\n",
                "3082\r\n1\r\n2\r\n1\r\n2\r\n1\r\n152287\r\n1\r\n2\r\n1\r\n1\r\n"
            ],
            [
                "12\r\n2 5\r\n1 4\r\n1 4\r\n1 3\r\n3 5\r\n1 3\r\n1 4\r\n359632 457119\r\n3 5\r\n1 4\r\n3 4\r\n271435 542829\r\n",
                "2\r\n2\r\n2\r\n1\r\n2\r\n1\r\n2\r\n33585\r\n2\r\n2\r\n1\r\n252854\r\n"
            ],
            [
                "4\r\n145605 291228\r\n297323 463573\r\n1 4\r\n155363 245190\r\n",
                "116522\r\n30358\r\n2\r\n8478\r\n"
            ],
            [
                "5\r\n1 2\r\n4 5\r\n166842 464756\r\n180915 361843\r\n86700 173385\r\n",
                "1\r\n1\r\n29767\r\n81217\r\n44373\r\n"
            ],
            [
                "6\r\n2 4\r\n57037 507291\r\n11128 251632\r\n22225 241058\r\n2 3\r\n1 2\r\n",
                "2\r\n8499\r\n5257\r\n10544\r\n1\r\n1\r\n"
            ],
            [
                "7\r\n3 4\r\n2 5\r\n98504 197008\r\n446850 500484\r\n1 2\r\n151228 302486\r\n2 5\r\n",
                "1\r\n2\r\n32569\r\n11903\r\n1\r\n110887\r\n2\r\n"
            ],
            [
                "8\r\n2 3\r\n103809 261890\r\n2 3\r\n4 5\r\n1 5\r\n2 3\r\n16484 229574\r\n188717 508506\r\n",
                "1\r\n128\r\n1\r\n1\r\n1\r\n1\r\n16285\r\n7892\r\n"
            ],
            [
                "9\r\n44061 88139\r\n1 2\r\n3 5\r\n190794 381599\r\n1 5\r\n1 2\r\n265115 530229\r\n1 2\r\n3 4\r\n",
                "21459\r\n1\r\n2\r\n71340\r\n1\r\n1\r\n259174\r\n1\r\n1\r\n"
            ],
            [
                "10\r\n42822 85641\r\n1 2\r\n2 5\r\n2 3\r\n142224 284491\r\n2 4\r\n1 2\r\n314937 629832\r\n1 3\r\n2 3\r\n",
                "22715\r\n1\r\n2\r\n1\r\n119878\r\n2\r\n1\r\n209352\r\n1\r\n1\r\n"
            ],
            [
                "11\r\n87334 125516\r\n2 3\r\n1 2\r\n1 2\r\n214371 494278\r\n190087 380164\r\n1 4\r\n2 5\r\n1 4\r\n1 4\r\n1 4\r\n",
                "2779\r\n1\r\n1\r\n1\r\n15006\r\n72058\r\n2\r\n2\r\n2\r\n2\r\n2\r\n"
            ],
            [
                "12\r\n4 5\r\n4 5\r\n2 4\r\n1 5\r\n1 2\r\n1 5\r\n1 3\r\n76594 153173\r\n1 3\r\n1 3\r\n266456 532915\r\n156935 313866\r\n",
                "1\r\n1\r\n2\r\n1\r\n1\r\n1\r\n1\r\n54479\r\n1\r\n1\r\n257830\r\n105210\r\n"
            ],
            [
                "13\r\n2 5\r\n2 4\r\n1 4\r\n79307 158614\r\n3 5\r\n167891 335838\r\n2 3\r\n351051 505494\r\n2 3\r\n1 4\r\n1 2\r\n1 2\r\n1 4\r\n",
                "2\r\n2\r\n2\r\n51766\r\n2\r\n94198\r\n1\r\n9398\r\n1\r\n2\r\n1\r\n1\r\n2\r\n"
            ],
            [
                "1\r\n99999 1000000\r\n",
                "17504\r\n"
            ]
        ]
    }
]