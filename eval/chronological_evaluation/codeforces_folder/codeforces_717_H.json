[
    {
        "name": "Pokermon League challenge",
        "description": "Welcome to the world of Pokermon, yellow little mouse-like creatures, who\nabsolutely love playing poker! Yeah, right\u2026 In the ensuing Pokermon League,\nthere are n registered Pokermon trainers, and t existing trainer teams each of\nwhich belongs to one of two conferences. Since there is a lot of jealousy\nbetween trainers, there are e pairs of trainers who hate each other. Their\nhate is mutual, there are no identical pairs among these, and no trainer hates\nhimself (the world of Pokermon is a joyful place!). Each trainer has a wish-\nlist of length li of teams he\u2019d like to join. Your task is to divide players\ninto teams and the teams into two conferences, so that: each trainer belongs\nto exactly one team; no team is in both conferences; total hate between\nconferences is at least e / 2; every trainer is in a team from his wish-list.\nTotal hate between conferences is calculated as the number of pairs of\ntrainers from teams from different conferences who hate each other. Input The\nfirst line of the input contains two integer n (4 \u2264 n \u2264 50 000) and e (2 \u2264 e \u2264\n100 000) \u2014 the total number of Pokermon trainers and the number of pairs of\ntrainers who hate each other. Pokermon trainers are numbered from 1 to n. Next\ne lines contain two integers a and b (1 \u2264 a, b \u2264 n) indicating that Pokermon\ntrainers a and b hate each other. Next 2n lines are in a following format.\nStarting with Pokermon trainer 1, for each trainer in consecutive order: first\nnumber li (16 \u2264 li \u2264 20) \u2014 a size of Pokermon trainers wish list, then li\npositive integers ti, j (1 \u2264 ti, j \u2264 T), providing the teams the i-th trainer\nwould like to be on. Each trainers wish list will contain each team no more\nthan once. Teams on the wish lists are numbered in such a way that the set of\nall teams that appear on at least 1 wish list is set of consecutive positive\nintegers 1, 2, 3, \u2026, T. Here T might be up to 1 000 000. Output Print two\nlines. The first line should contain n numbers, specifying for each trainer\nthe team he is in. The second line should contain T numbers, specifying the\nconference for each team (1 or 2). Example Input 4 3 1 2 2 3 4 1 16 1 2 3 4 5\n6 7 8 9 10 11 12 13 14 16 15 16 2 3 4 5 6 7 8 9 10 11 12 13 14 15 17 18 16 2 3\n4 5 6 7 8 9 10 11 12 13 14 15 18 19 16 1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 19\nOutput 16 15 19 14 2 2 2 1 1 1 2 1 1 2 1 1 1 2 2 1 1 1 1 Note\n\n",
        "cf_contest_id": 717,
        "cf_index": "H",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "probabilities"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3\r\n1 2\r\n2 3\r\n4 1\r\n16\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 15\r\n16\r\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 17 18\r\n16\r\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 18 19\r\n16\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 19\r\n",
                "13 9 14 16\r\n2 2 1 1\r\n2 1 1 1 1 1 2 2 2 2 2 2 2 1 2 "
            ]
        ],
        "private_cases": []
    }
]