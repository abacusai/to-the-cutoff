[
    {
        "name": "Dima and Two Sequences",
        "description": "Little Dima has two sequences of points with integer coordinates: sequence\n(a1, 1), (a2, 2), ..., (an, n) and sequence (b1, 1), (b2, 2), ..., (bn, n).\nNow Dima wants to count the number of distinct sequences of points of length\n2\u00b7n that can be assembled from these sequences, such that the x-coordinates of\npoints in the assembled sequence will not decrease. Help him with that. Note\nthat each element of the initial sequences should be used exactly once in the\nassembled sequence. Dima considers two assembled sequences (p1, q1), (p2, q2),\n..., (p2\u00b7n, q2\u00b7n) and (x1, y1), (x2, y2), ..., (x2\u00b7n, y2\u00b7n) distinct, if there\nis such i (1 \u2264 i \u2264 2\u00b7n), that (pi, qi) \u2260 (xi, yi). As the answer can be rather\nlarge, print the remainder from dividing the answer by number m. Input The\nfirst line contains integer n (1 \u2264 n \u2264 10^5). The second line contains n\nintegers a1, a2, ..., an (1 \u2264 ai \u2264 10^9). The third line contains n integers\nb1, b2, ..., bn (1 \u2264 bi \u2264 10^9). The numbers in the lines are separated by\nspaces. The last line contains integer m (2 \u2264 m \u2264 10^9 + 7). Output In the\nsingle line print the remainder after dividing the answer to the problem by\nnumber m. Examples Input 1 1 2 7 Output 1 Input 2 1 2 2 3 11 Output 2 Note In\nthe first sample you can get only one sequence: (1, 1), (2, 1). In the second\nsample you can get such sequences : (1, 1), (2, 2), (2, 1), (3, 2); (1, 1),\n(2, 1), (2, 2), (3, 2). Thus, the answer is 2.\n\n",
        "cf_contest_id": 272,
        "cf_index": "D",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n1\r\n2\r\n7\r\n",
                "1\r\n"
            ],
            [
                "2\r\n1 2\r\n2 3\r\n11\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "100\r\n1 8 10 6 5 3 2 3 4 2 3 7 1 1 5 1 4 1 8 1 5 5 6 5 3 7 4 5 5 3 8 7 8 6 8 9 10 7 8 5 8 9 1 3 7 2 6 1 7 7 2 8 1 5 4 2 10 4 9 8 1 10 1 5 9 8 1 9 5 1 5 7 1 6 7 8 8 2 2 3 3 7 2 10 6 3 6 3 5 3 10 4 4 6 9 9 3 2 6 6\r\n4 3 8 4 4 2 4 6 6 3 3 5 8 4 1 6 2 7 6 1 6 10 7 9 2 9 2 9 10 1 1 1 1 7 4 5 3 6 8 6 10 4 3 4 8 6 5 3 1 2 2 4 1 9 1 3 1 9 6 8 9 4 8 8 4 2 1 4 6 2 6 3 4 7 7 7 8 10 7 8 8 6 4 10 10 7 4 5 5 8 3 8 2 8 6 4 5 2 10 2\r\n29056621\r\n",
                "5236748\r\n"
            ],
            [
                "100\r\n6 1 10 4 8 7 7 3 2 4 6 3 2 5 3 7 1 6 9 8 3 10 1 6 8 1 4 2 5 6 3 5 4 6 3 10 2 8 10 4 2 6 4 5 3 1 8 6 9 8 5 2 7 1 10 5 10 2 9 1 6 4 9 5 2 4 6 7 10 10 10 6 6 9 2 3 3 1 2 4 1 6 9 8 4 10 10 9 9 2 5 7 10 1 9 7 6 6 4 5\r\n4 9 2 5 5 4 6 9 1 2 6 3 8 9 4 4 4 3 1 3 6 2 9 1 10 6 5 1 9 10 6 2 10 9 8 7 8 2 1 5 8 4 3 2 10 9 5 7 1 8 4 4 4 2 1 3 4 5 3 6 10 3 8 9 5 6 3 9 3 6 5 1 9 1 4 3 8 4 4 8 10 6 4 9 8 4 2 3 1 9 9 1 4 1 8 4 7 9 10 9\r\n66921358\r\n",
                "12938646\r\n"
            ],
            [
                "100\r\n2 2 10 3 5 6 4 7 9 8 2 7 5 5 1 7 5 9 2 2 10 3 6 10 9 9 10 7 3 9 7 8 8 3 9 3 9 3 3 6 3 7 9 9 7 10 9 1 1 3 6 2 9 5 9 9 6 2 6 5 6 8 2 10 1 1 6 8 8 4 5 2 6 8 8 5 9 2 3 3 7 7 10 5 4 2 10 6 7 6 5 4 10 6 10 3 9 9 1 5\r\n3 5 6 4 2 3 2 9 3 8 3 1 10 7 4 3 6 9 3 5 9 5 3 10 4 7 9 7 4 3 3 6 9 8 1 1 10 9 1 6 8 8 8 2 1 6 10 1 8 6 3 5 7 7 10 4 6 6 9 1 5 3 5 10 4 4 1 7 9 7 5 10 6 5 4 1 9 6 4 5 7 3 1 10 2 10 6 6 1 10 7 5 1 4 2 9 2 7 3 10\r\n727992321\r\n",
                "340960284\r\n"
            ],
            [
                "100\r\n2 5 5 6 5 2 8 10 6 1 5 3 10 3 8 6 4 5 7 9 7 1 3 3 5 2 3 7 9 3 7 2 7 6 7 10 5 9 2 4 8 2 3 8 6 6 8 4 1 2 10 5 2 8 4 3 1 3 8 3 2 4 4 6 8 1 9 8 9 9 1 7 1 9 2 4 6 2 1 9 2 7 9 6 6 7 1 9 3 1 6 10 3 9 10 5 3 3 9 8\r\n6 5 3 1 3 3 8 6 5 4 2 3 9 3 9 9 10 5 10 6 7 8 8 7 8 4 2 4 4 9 1 3 1 5 8 4 8 9 7 9 7 8 4 9 9 9 4 2 9 1 3 10 6 4 5 3 2 8 1 5 1 8 10 10 3 3 7 1 2 4 4 3 3 5 9 8 9 8 5 9 4 8 10 6 7 4 1 9 4 7 1 8 3 3 5 9 8 6 5 4\r\n608692736\r\n",
                "550164992\r\n"
            ],
            [
                "2\r\n1 2\r\n1 2\r\n4\r\n",
                "1\r\n"
            ],
            [
                "4\r\n1 2 3 4\r\n4 3 2 1\r\n1009\r\n",
                "16\r\n"
            ],
            [
                "5\r\n1 2 3 3 5\r\n1 2 3 5 3\r\n12\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1000000000\r\n1000000000\r\n2\r\n",
                "1\r\n"
            ],
            [
                "2\r\n1 2\r\n2 2\r\n4\r\n",
                "3\r\n"
            ]
        ]
    }
]