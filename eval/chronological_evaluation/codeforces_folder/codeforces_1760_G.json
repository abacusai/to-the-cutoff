[
    {
        "name": "SlavicG's Favorite Problem",
        "description": "You are given a weighted tree with \n    n\n vertices. Recall that a tree is a\nconnected graph without any cycles. A weighted tree is a tree in which each\nedge has a certain weight. The tree is undirected, it doesn't have a root.\nSince trees bore you, you decided to challenge yourself and play a game on the\ngiven tree. In a move, you can travel from a node to one of its neighbors\n(another node it has a direct edge with). You start with a variable \n    x\n\nwhich is initially equal to \n    0\n. When you pass through edge \n    i\n,\n\n    x\n changes its value to \n    x \u00a0\n    \ud835\uddb7\ud835\uddae\ud835\uddb1\u00a0 w_i\n (where \n    w_i\n is\nthe weight of the \n    i\n-th edge). Your task is to go from vertex \n    a\n to\nvertex \n    b\n, but you are allowed to enter node \n    b\n if and only if after\ntraveling to it, the value of \n    x\n will become \n    0\n. In other words, you\ncan travel to node \n    b\n only by using an edge \n    i\n such that \n    x\n    \u00a0\n    \ud835\uddb7\ud835\uddae\ud835\uddb1\u00a0 w_i = 0\n. Once you enter node \n    b\n the game ends and you\nwin. Additionally, you can teleport at most once at any point in time to any\nvertex except vertex \n    b\n. You can teleport from any vertex, even from\n\n    a\n. Answer with \"YES\" if you can reach vertex \n    b\n from \n    a\n, and\n\"NO\" otherwise. Note that \n    \ud835\uddb7\ud835\uddae\ud835\uddb1\n represents the bitwise XOR\noperation. Input The first line contains a single integer \n    t\n (\n    1 \n    \u2264\n    t \n    \u2264 1000\n) \u2014 the number of test cases. The first line of each test case\ncontains three integers \n    n\n, \n    a\n, and \n    b\n (\n    2 \n    \u2264 n \n    \u2264\n    10^5\n), (\n    1 \n    \u2264 a, b \n    \u2264 n; a \n     b\n) \u2014 the number of vertices,\nand the starting and desired ending node respectively. Each of the next\n\n    n-1\n lines denotes an edge of the tree. Edge \n    i\n is denoted by three\nintegers \n    u_i\n, \n    v_i\n and \n    w_i\n \u2014 the labels of vertices it\nconnects (\n    1 \n    \u2264 u_i, v_i \n    \u2264 n; u_i \n     v_i; 1 \n    \u2264 w_i \n    \u2264\n    10^9\n) and the weight of the respective edge. It is guaranteed that the sum\nof \n    n\n over all test cases does not exceed \n    10^5\n. Output For each\ntest case output \"YES\" if you can reach vertex \n    b\n, and \"NO\" otherwise.\nExample Input 3 5 1 4 1 3 1 2 3 2 4 3 3 3 5 1 2 1 2 1 2 2 6 2 3 1 2 1 2 3 1 3\n4 1 4 5 3 5 6 5 Output YES NO YES Note For the first test case, we can travel\nfrom node \n    1\n to node \n    3\n, \n    x\n changing from \n    0\n to \n    1\n,\nthen we travel from node \n    3\n to node \n    2\n, \n    x\n becoming equal to\n\n    3\n. Now, we can teleport to node \n    3\n and travel from node \n    3\n to\nnode \n    4\n, reaching node \n    b\n, since \n    x\n became equal to \n    0\n in\nthe end, so we should answer \"YES\". For the second test case, we have no\nmoves, since we can't teleport to node \n    b\n and the only move we have is to\ntravel to node \n    2\n which is impossible since \n    x\n wouldn't be equal to\n\n    0\n when reaching it, so we should answer \"NO\".\n\n",
        "cf_contest_id": 1760,
        "cf_index": "G",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dfs and similar",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n5 1 4\r\n1 3 1\r\n2 3 2\r\n4 3 3\r\n3 5 1\r\n2 1 2\r\n1 2 2\r\n6 2 3\r\n1 2 1\r\n2 3 1\r\n3 4 1\r\n4 5 3\r\n5 6 5\r\n",
                "YES\r\nNO\r\nYES\r\n"
            ]
        ],
        "private_cases": []
    }
]