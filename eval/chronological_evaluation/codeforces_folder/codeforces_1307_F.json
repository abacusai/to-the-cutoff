[
    {
        "name": "Cow and Vacation",
        "description": "Bessie is planning a vacation! In Cow-lifornia, there are \n    n\n cities, with\n\n    n-1\n bidirectional roads connecting them. It is guaranteed that one can\nreach any city from any other city. Bessie is considering \n    v\n possible\nvacation plans, with the \n    i\n-th one consisting of a start city \n    a_i\n\nand destination city \n    b_i\n. It is known that only \n    r\n of the cities\nhave rest stops. Bessie gets tired easily, and cannot travel across more than\n\n    k\n consecutive roads without resting. In fact, she is so desperate to\nrest that she may travel through the same city multiple times in order to do\nso. For each of the vacation plans, does there exist a way for Bessie to\ntravel from the starting city to the destination city? Input The first line\ncontains three integers \n    n\n, \n    k\n, and \n    r\n (\n    2 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n, \n    1 \n    \u2264 k,r \n    \u2264 n\n) \u2014 the number of cities, the\nmaximum number of roads Bessie is willing to travel through in a row without\nresting, and the number of rest stops. Each of the following \n    n-1\n lines\ncontain two integers \n    x_i\n and \n    y_i\n (\n    1 \n    \u2264 x_i, y_i \n    \u2264 n\n,\n\n    x_i \n    \u2260 y_i\n), meaning city \n    x_i\n and city \n    y_i\n are connected\nby a road. The next line contains \n    r\n integers separated by spaces \u2014 the\ncities with rest stops. Each city will appear at most once. The next line\ncontains \n    v\n (\n    1 \n    \u2264 v \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of\nvacation plans. Each of the following \n    v\n lines contain two integers\n\n    a_i\n and \n    b_i\n (\n    1 \n    \u2264 a_i, b_i \n    \u2264 n\n, \n    a_i \n     b_i\n)\n\u2014 the start and end city of the vacation plan. Output If Bessie can reach her\ndestination without traveling across more than \n    k\n roads without resting\nfor the \n    i\n-th vacation plan, print YES. Otherwise, print NO. Examples\nInput 6 2 1 1 2 2 3 2 4 4 5 5 6 2 3 1 3 3 5 3 6 Output YES YES NO Input 8 3 3\n1 2 2 3 3 4 4 5 4 6 6 7 7 8 2 5 8 2 7 1 8 1 Output YES NO Note The graph for\nthe first example is shown below. The rest stop is denoted by red. For the\nfirst query, Bessie can visit these cities in order: \n    1, 2, 3\n. For the\nsecond query, Bessie can visit these cities in order: \n    3, 2, 4, 5\n. For\nthe third query, Bessie cannot travel to her destination. For example, if she\nattempts to travel this way: \n    3, 2, 4, 5, 6\n, she travels on more than\n\n    2\n roads without resting. The graph for the second example is shown\nbelow.\n\n",
        "cf_contest_id": 1307,
        "cf_index": "F",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dsu",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 2 1\r\n1 2\r\n2 3\r\n2 4\r\n4 5\r\n5 6\r\n2\r\n3\r\n1 3\r\n3 5\r\n3 6\r\n",
                "YES\r\nYES\r\nNO\r\n"
            ],
            [
                "8 3 3\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n4 6\r\n6 7\r\n7 8\r\n2 5 8\r\n2\r\n7 1\r\n8 1\r\n",
                "YES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "6 3 1\r\n1 2\r\n1 4\r\n4 3\r\n4 5\r\n5 6\r\n3\r\n30\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n2 1\r\n2 3\r\n2 4\r\n2 5\r\n2 6\r\n3 1\r\n3 2\r\n3 4\r\n3 5\r\n3 6\r\n4 1\r\n4 2\r\n4 3\r\n4 5\r\n4 6\r\n5 1\r\n5 2\r\n5 3\r\n5 4\r\n5 6\r\n6 1\r\n6 2\r\n6 3\r\n6 4\r\n6 5\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "8 3 3\r\n7 2\r\n2 3\r\n3 4\r\n4 5\r\n4 6\r\n6 1\r\n1 8\r\n2 5 8\r\n56\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n1 7\r\n1 8\r\n2 1\r\n2 3\r\n2 4\r\n2 5\r\n2 6\r\n2 7\r\n2 8\r\n3 1\r\n3 2\r\n3 4\r\n3 5\r\n3 6\r\n3 7\r\n3 8\r\n4 1\r\n4 2\r\n4 3\r\n4 5\r\n4 6\r\n4 7\r\n4 8\r\n5 1\r\n5 2\r\n5 3\r\n5 4\r\n5 6\r\n5 7\r\n5 8\r\n6 1\r\n6 2\r\n6 3\r\n6 4\r\n6 5\r\n6 7\r\n6 8\r\n7 1\r\n7 2\r\n7 3\r\n7 4\r\n7 5\r\n7 6\r\n7 8\r\n8 1\r\n8 2\r\n8 3\r\n8 4\r\n8 5\r\n8 6\r\n8 7\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nNO\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nNO\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nNO\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nNO\r\nYES\r\nNO\r\nNO\r\nYES\r\nNO\r\nYES\r\nNO\r\n"
            ],
            [
                "6 2 2\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n3 5\r\n30\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n2 1\r\n2 3\r\n2 4\r\n2 5\r\n2 6\r\n3 1\r\n3 2\r\n3 4\r\n3 5\r\n3 6\r\n4 1\r\n4 2\r\n4 3\r\n4 5\r\n4 6\r\n5 1\r\n5 2\r\n5 3\r\n5 4\r\n5 6\r\n6 1\r\n6 2\r\n6 3\r\n6 4\r\n6 5\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "2 1 1\r\n1 2\r\n1\r\n2\r\n1 2\r\n2 1\r\n",
                "YES\r\nYES\r\n"
            ],
            [
                "11 4 6\r\n1 2\r\n2 3\r\n1 4\r\n4 5\r\n1 6\r\n6 7\r\n1 8\r\n8 9\r\n1 10\r\n10 11\r\n1 2 4 6 8 10\r\n20\r\n1 4\r\n4 5\r\n1 11\r\n6 2\r\n1 9\r\n4 5\r\n11 2\r\n1 2\r\n5 10\r\n1 6\r\n8 7\r\n8 3\r\n9 11\r\n3 7\r\n2 8\r\n1 4\r\n1 11\r\n9 5\r\n9 11\r\n4 3\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "2 2 1\r\n1 2\r\n1\r\n2\r\n1 2\r\n2 1\r\n",
                "YES\r\nYES\r\n"
            ],
            [
                "2 1 1\r\n1 2\r\n2\r\n2\r\n1 2\r\n2 1\r\n",
                "YES\r\nYES\r\n"
            ],
            [
                "2 1 2\r\n1 2\r\n2 1\r\n2\r\n1 2\r\n2 1\r\n",
                "YES\r\nYES\r\n"
            ],
            [
                "10 2 5\r\n9 2\r\n5 7\r\n2 5\r\n6 8\r\n5 4\r\n4 10\r\n9 1\r\n2 3\r\n4 6\r\n8 10 7 1 3\r\n10\r\n10 3\r\n9 2\r\n6 7\r\n10 3\r\n5 10\r\n6 4\r\n1 3\r\n6 4\r\n8 5\r\n2 8\r\n",
                "NO\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nNO\r\nYES\r\nNO\r\nNO\r\n"
            ]
        ]
    }
]