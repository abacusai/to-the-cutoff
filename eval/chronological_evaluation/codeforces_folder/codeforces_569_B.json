[
    {
        "name": "Inventory",
        "description": "Companies always have a lot of equipment, furniture and other things. All of\nthem should be tracked. To do this, there is an inventory number assigned with\neach item. It is much easier to create a database by using those numbers and\nkeep the track of everything. During an audit, you were surprised to find out\nthat the items are not numbered sequentially, and some items even share the\nsame inventory number! There is an urgent need to fix it. You have chosen to\nmake the numbers of the items sequential, starting with 1. Changing a number\nis quite a time-consuming process, and you would like to make maximum use of\nthe current numbering. You have been given information on current inventory\nnumbers for n items in the company. Renumber items so that their inventory\nnumbers form a permutation of numbers from 1 to n by changing the number of as\nfew items as possible. Let us remind you that a set of n numbers forms a\npermutation if all the numbers are in the range from 1 to n, and no two\nnumbers are equal. Input The first line contains a single integer n \u2014 the\nnumber of items (1 \u2264 n \u2264 10^5). The second line contains n numbers a1, a2,\n..., an (1 \u2264 ai \u2264 10^5) \u2014 the initial inventory numbers of the items. Output\nPrint n numbers \u2014 the final inventory numbers of the items in the order they\noccur in the input. If there are multiple possible answers, you may print any\nof them. Examples Input 3 1 3 2 Output 1 3 2 Input 4 2 2 3 3 Output 2 1 3 4\nInput 1 2 Output 1 Note In the first test the numeration is already a\npermutation, so there is no need to change anything. In the second test there\nare two pairs of equal numbers, in each pair you need to replace one number.\nIn the third test you need to replace 2 by 1, as the numbering should start\nfrom one.\n\n",
        "cf_contest_id": 569,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 3 2\r\n",
                "1 3 2\r\n"
            ],
            [
                "4\r\n2 2 3 3\r\n",
                "2 1 3 4\r\n"
            ],
            [
                "1\r\n2\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n3 3 1\r\n",
                "3 2 1\r\n"
            ],
            [
                "5\r\n1 1 1 1 1\r\n",
                "1 2 3 4 5\r\n"
            ],
            [
                "5\r\n5 3 4 4 2\r\n",
                "5 3 4 1 2\r\n"
            ],
            [
                "5\r\n19 11 8 8 10\r\n",
                "1 2 3 4 5\r\n"
            ],
            [
                "15\r\n2 2 1 2 1 2 3 3 1 3 2 1 2 3 2\r\n",
                "2 4 1 5 6 7 3 8 9 10 11 12 13 14 15\r\n"
            ],
            [
                "18\r\n3 11 5 9 5 4 6 4 5 7 5 1 8 11 11 2 1 9\r\n",
                "3 11 5 9 10 4 6 12 13 7 14 1 8 15 16 2 17 18\r\n"
            ],
            [
                "42\r\n999 863 440 1036 1186 908 330 265 382 417 858 286 834 922 42 569 79 158 312 1175 1069 188 21 1207 985 375 59 417 256 595 732 742 629 737 25 699 484 517 37 1134 472 720\r\n",
                "1 2 3 4 5 6 7 8 9 10 11 12 13 14 42 15 16 17 18 19 20 22 21 23 24 26 27 28 29 30 31 32 33 34 25 35 36 38 37 39 40 41\r\n"
            ],
            [
                "111\r\n15 45 14 65 49 25 102 86 14 80 54 73 43 78 42 32 47 60 55 66 84 69 49 22 26 72 89 52 26 80 71 35 56 2 88 23 23 53 65 92 46 73 29 65 88 99 19 99 87 10 47 96 109 20 60 89 63 105 29 92 109 20 95 65 31 89 107 3 3 50 58 9 28 39 104 42 41 36 70 49 59 96 16 9 3 108 38 42 2 67 32 86 20 6 101 70 101 91 38 10 74 3 27 15 103 63 51 60 62 10 70\r\n",
                "15 45 14 65 49 25 102 86 1 80 54 73 43 78 42 32 47 60 55 66 84 69 4 22 26 72 89 52 5 7 71 35 56 2 88 23 8 53 11 92 46 12 29 13 17 99 19 18 87 10 21 96 109 20 24 30 63 105 33 34 37 40 95 44 31 48 107 3 57 50 58 9 28 39 104 61 41 36 70 64 59 68 16 75 76 108 38 77 79 67 81 82 83 6 101 85 90 91 93 94 74 97 27 98 103 100 51 106 62 110 111\r\n"
            ],
            [
                "7\r\n45301 14370 61599 42695 46301 24556 26812\r\n",
                "1 2 3 4 5 6 7\r\n"
            ],
            [
                "22\r\n70150 17718 11731 6488 72633 41249 12141 71465 88562 6167 71659 34151 60508 24942 77343 35882 80424 67225 92746 55412 79 53642\r\n",
                "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\r\n"
            ],
            [
                "2\r\n1 4\r\n",
                "1 2\r\n"
            ]
        ]
    }
]