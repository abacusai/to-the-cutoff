[
    {
        "name": "Difficult Mountain",
        "description": "A group of \n    n\n alpinists has just reached the foot of the mountain. The\ninitial difficulty of climbing this mountain can be described as an integer\n\n    d\n. Each alpinist can be described by two integers \n    s\n and \n    a\n,\nwhere \n    s\n is his skill of climbing mountains and \n    a\n is his neatness.\nAn alpinist of skill level \n    s\n is able to climb a mountain of difficulty\n\n    p\n only if \n    p \n    \u2264 s\n. As an alpinist climbs a mountain, they\naffect the path and thus may change mountain difficulty. Specifically, if an\nalpinist of neatness \n    a\n climbs a mountain of difficulty \n    p\n the\ndifficulty of this mountain becomes \n    max(p, a)\n. Alpinists will climb\nthe mountain one by one. And before the start, they wonder, what is the\nmaximum number of alpinists who will be able to climb the mountain if they\nchoose the right order. As you are the only person in the group who does\nprogramming, you are to answer the question. Note that after the order is\nchosen, each alpinist who can climb the mountain, must climb the mountain at\nthat time. Input The first line contains two integers \n    n\n and \n    d\n\n(\n    1 \n    \u2264 n \n    \u2264 500\n     000\n; \n    0 \n    \u2264 d \n    \u2264 10^9\n) \u2014 the\nnumber of alpinists and the initial difficulty of the mountain. Each of the\nnext \n    n\n lines contains two integers \n    s_i\n and \n    a_i\n (\n    0 \n    \u2264\n    s_i, a_i \n    \u2264 10^9\n) that define the skill of climbing and the neatness of\nthe \n    i\n-th alpinist. Output Print one integer equal to the maximum number\nof alpinists who can climb the mountain if they choose the right order to do\nso. Examples Input 3 2 2 6 3 5 5 7 Output 2 Input 3 3 2 4 6 4 4 6 Output 2\nInput 5 0 1 5 4 8 2 7 7 6 3 2 Output 3 Note In the first example, alpinists\n\n    2\n and \n    3\n can climb the mountain if they go in this order. There is\nno other way to achieve the answer of \n    2\n. In the second example, alpinist\n\n    1\n is not able to climb because of the initial difficulty of the\nmountain, while alpinists \n    2\n and \n    3\n can go up in any order. In the\nthird example, the mountain can be climbed by alpinists \n    5\n, \n    3\n and\n\n    4\n in this particular order. There is no other way to achieve optimal\nanswer.\n\n",
        "cf_contest_id": 1601,
        "cf_index": "D",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 2\r\n2 6\r\n3 5\r\n5 7\r\n",
                "2"
            ],
            [
                "3 3\r\n2 4\r\n6 4\r\n4 6\r\n",
                "2"
            ],
            [
                "5 0\r\n1 5\r\n4 8\r\n2 7\r\n7 6\r\n3 2\r\n",
                "3"
            ]
        ],
        "private_cases": [
            [
                "10 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n",
                "10"
            ],
            [
                "10 5\r\n7 15\r\n0 6\r\n2 12\r\n13 17\r\n29 28\r\n4 23\r\n20 24\r\n14 18\r\n16 25\r\n9 30\r\n",
                "3"
            ],
            [
                "10 5\r\n3 30\r\n7 10\r\n1 13\r\n28 0\r\n2 9\r\n24 27\r\n14 5\r\n4 23\r\n8 22\r\n11 29\r\n",
                "4"
            ],
            [
                "10 5\r\n29 23\r\n24 11\r\n28 8\r\n26 7\r\n14 1\r\n12 6\r\n27 22\r\n15 5\r\n21 2\r\n18 4\r\n",
                "10"
            ],
            [
                "10 5\r\n8 14\r\n1 13\r\n3 17\r\n2 18\r\n6 12\r\n10 7\r\n24 5\r\n9 23\r\n4 28\r\n11 15\r\n",
                "3"
            ],
            [
                "10 5\r\n18 2\r\n14 6\r\n12 9\r\n4 10\r\n22 0\r\n8 11\r\n5 24\r\n17 3\r\n13 7\r\n29 1\r\n",
                "8"
            ],
            [
                "10 5\r\n6 11\r\n20 10\r\n4 25\r\n4 14\r\n27 29\r\n17 25\r\n20 1\r\n15 15\r\n28 17\r\n10 30\r\n",
                "7"
            ],
            [
                "10 5\r\n11 18\r\n18 11\r\n18 18\r\n5 18\r\n18 18\r\n18 18\r\n18 18\r\n2 18\r\n2 2\r\n11 5\r\n",
                "7"
            ],
            [
                "10 5\r\n18 15\r\n27 12\r\n0 25\r\n21 13\r\n14 21\r\n11 22\r\n28 2\r\n4 24\r\n17 16\r\n13 18\r\n",
                "5"
            ],
            [
                "10 5\r\n18 3\r\n24 4\r\n16 12\r\n27 16\r\n21 5\r\n30 4\r\n26 0\r\n7 3\r\n21 5\r\n19 5\r\n",
                "10"
            ],
            [
                "1 0\r\n24 14\r\n",
                "1"
            ],
            [
                "2 4\r\n2 3\r\n1 7\r\n",
                "0"
            ]
        ]
    }
]