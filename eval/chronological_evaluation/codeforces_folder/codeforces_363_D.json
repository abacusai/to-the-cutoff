[
    {
        "name": "Renting Bikes",
        "description": "A group of n schoolboys decided to ride bikes. As nobody of them has a bike,\nthe boys need to rent them. The renting site offered them m bikes. The renting\nprice is different for different bikes, renting the j-th bike costs pj rubles.\nIn total, the boys' shared budget is a rubles. Besides, each of them has his\nown personal money, the i-th boy has bi personal rubles. The shared budget can\nbe spent on any schoolchildren arbitrarily, but each boy's personal money can\nbe spent on renting only this boy's bike. Each boy can rent at most one bike,\none cannot give his bike to somebody else. What maximum number of schoolboys\nwill be able to ride bikes? What minimum sum of personal money will they have\nto spend in total to let as many schoolchildren ride bikes as possible? Input\nThe first line of the input contains three integers n, m and a (1 \u2264 n, m \u2264\n10^5; 0 \u2264 a \u2264 10^9). The second line contains the sequence of integers b1, b2,\n..., bn (1 \u2264 bi \u2264 10^4), where bi is the amount of the i-th boy's personal\nmoney. The third line contains the sequence of integers p1, p2, ..., pm (1 \u2264\npj \u2264 10^9), where pj is the price for renting the j-th bike. Output Print two\nintegers r and s, where r is the maximum number of schoolboys that can rent a\nbike and s is the minimum total personal money needed to rent r bikes. If the\nschoolchildren cannot rent any bikes, then r = s = 0. Examples Input 2 2 10 5\n5 7 6 Output 2 3 Input 4 5 2 8 1 1 2 6 3 7 5 2 Output 3 8 Note In the first\nsample both schoolchildren can rent a bike. For instance, they can split the\nshared budget in half (5 rubles each). In this case one of them will have to\npay 1 ruble from the personal money and the other one will have to pay 2\nrubles from the personal money. In total, they spend 3 rubles of their\npersonal money. This way of distribution of money minimizes the amount of\nspent personal money.\n\n",
        "cf_contest_id": 363,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2 10\r\n5 5\r\n7 6\r\n",
                "2 3\r\n"
            ],
            [
                "4 5 2\r\n8 1 1 2\r\n6 3 7 5 2\r\n",
                "3 8\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 2\r\n1\r\n2\r\n",
                "1 0\r\n"
            ],
            [
                "4 1 1\r\n3 2 3 2\r\n3\r\n",
                "1 2\r\n"
            ],
            [
                "1 4 1\r\n3\r\n2 4 5 5\r\n",
                "1 1\r\n"
            ],
            [
                "3 3 3\r\n1 1 2\r\n3 5 6\r\n",
                "1 0\r\n"
            ],
            [
                "4 5 6\r\n5 1 7 2\r\n8 7 3 9 8\r\n",
                "3 12\r\n"
            ],
            [
                "4 8 10\r\n2 1 2 2\r\n10 12 10 8 7 9 10 9\r\n",
                "1 0\r\n"
            ],
            [
                "8 4 18\r\n9 4 2 2 7 5 1 1\r\n11 12 8 9\r\n",
                "4 22\r\n"
            ],
            [
                "6 6 2\r\n6 1 5 3 10 1\r\n11 4 7 8 11 7\r\n",
                "3 16\r\n"
            ],
            [
                "10 10 7\r\n6 7 15 1 3 1 14 6 7 4\r\n15 3 13 17 11 19 20 14 8 17\r\n",
                "5 42\r\n"
            ],
            [
                "14 14 22\r\n23 1 3 16 23 1 7 5 18 7 3 6 17 8\r\n22 14 22 18 12 11 7 24 20 27 10 22 16 7\r\n",
                "10 115\r\n"
            ],
            [
                "10 20 36\r\n12 4 7 18 4 4 2 7 4 10\r\n9 18 7 7 30 19 26 27 16 20 30 25 23 17 5 30 22 7 13 6\r\n",
                "10 69\r\n"
            ],
            [
                "20 10 31\r\n17 27 2 6 11 12 5 3 12 4 2 10 4 8 2 10 7 9 12 1\r\n24 11 18 10 30 16 20 18 24 24\r\n",
                "7 86\r\n"
            ],
            [
                "40 40 61\r\n28 59 8 27 45 67 33 32 61 3 42 2 3 37 8 8 10 61 1 5 65 28 34 27 8 35 45 49 31 49 13 23 23 53 20 48 14 74 16 6\r\n69 56 34 66 42 73 45 49 29 70 67 77 73 26 78 11 50 69 64 72 78 66 66 29 80 40 50 75 68 47 78 63 41 70 52 52 69 22 69 66\r\n",
                "22 939\r\n"
            ],
            [
                "10 10 0\r\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\r\n1001 1001 1001 1001 1001 1001 1001 1001 1001 1001\r\n",
                "0 0\r\n"
            ],
            [
                "9 8 0\r\n1 2 3 4 5 6 7 8 9\r\n2 3 4 5 6 7 8 9\r\n",
                "8 44\r\n"
            ],
            [
                "9 8 0\r\n1 2 3 4 5 6 7 8 9\r\n1 2 3 4 5 6 7 8\r\n",
                "8 36\r\n"
            ]
        ]
    }
]