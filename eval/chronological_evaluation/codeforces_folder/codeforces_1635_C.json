[
    {
        "name": "Differential Sorting",
        "description": "You are given an array \n    a\n of \n    n\n elements. Your can perform the\nfollowing operation no more than \n    n\n times: Select three indices\n\n    x,y,z\n \n    (1 \n    \u2264 x < y < z \n    \u2264 n)\n and replace \n    a_x\n with\n\n    a_y - a_z\n. After the operation, \n    |a_x|\n need to be less than\n\n    10^18\n. Your goal is to make the resulting array non-decreasing. If\nthere are multiple solutions, you can output any. If it is impossible to\nachieve, you should report it as well. Input Each test contains multiple test\ncases. The first line will contain a single integer \n    t\n \n    (1 \n    \u2264 t\n    \n    \u2264 10000)\n \u2014 the number of test cases. Then \n    t\n test cases follow.\nThe first line of each test case contains a single integer \n    n\n \n    (3\n    \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5)\n \u2014 the size of the array \n    a\n. The second\nline of each test case contains \n    n\n integers \n    a_1, a_2, \n    \u2026 ,a_n\n\n\n    (-10^9 \n    \u2264 a_i \n    \u2264 10^9)\n, the elements of \n    a\n. It is\nguaranteed that the sum of \n    n\n over all test cases does not exceed \n    2\n    \n    \u00b7 10^5\n. Output For each test case, print \n    -1\n in a single line if\nthere is no solution. Otherwise in the first line you should print a single\ninteger \n    m\n \n    (0 \n    \u2264 m \n    \u2264 n)\n \u2014 number of operations you\nperformed. Then the \n    i\n-th of the following \n    m\n lines should contain\nthree integers \n    x,y,z\n \n    (1 \n    \u2264 x < y < z \n    \u2264 n)\n\u2014 description of\nthe \n    i\n-th operation. If there are multiple solutions, you can output any.\nNote that you don't have to minimize the number of operations in this task.\nExample Input 3 5 5 -4 2 -1 2 3 4 3 2 3 -3 -2 -1 Output 2 1 2 3 3 4 5 -1 0\nNote In the first example, the array becomes \n    [-6,-4,2,-1,2]\n after the\nfirst operation, \n    [-6,-4,-3,-1,2]\n after the second operation. In the\nsecond example, it is impossible to make the array sorted after any sequence\nof operations. In the third example, the array is already sorted, so we don't\nneed to perform any operations.\n\n",
        "cf_contest_id": 1635,
        "cf_index": "C",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n5\r\n5 -4 2 -1 2\r\n3\r\n4 3 2\r\n3\r\n-3 -2 -1\r\n",
                "3\r\n1 4 5\r\n2 4 5\r\n3 4 5\r\n-1\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]