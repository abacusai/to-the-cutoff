[
    {
        "name": "Inverse Transformation",
        "description": "A permutation scientist is studying a self-transforming permutation \n    a\n\nconsisting of \n    n\n elements \n    a_1,a_2,\n    \u2026,a_n\n. A permutation is a\nsequence of integers from \n    1\n to \n    n\n of length \n    n\n containing each\nnumber exactly once. For example, \n    [1]\n, \n    [4, 3, 5, 1, 2]\n are\npermutations, while \n    [1, 1]\n, \n    [4, 3, 1]\n are not. The permutation\ntransforms day by day. On each day, each element \n    x\n becomes \n    a_x\n,\nthat is, \n    a_x\n becomes \n    a_a_x\n. Specifically: on the first day, the\npermutation becomes \n    b\n, where \n    b_x = a_a_x\n; on the second day, the\npermutation becomes \n    c\n, where \n    c_x = b_b_x\n; \n    \u2026\n For\nexample, consider permutation \n    a = [2,3,1]\n. On the first day, it becomes\n\n    [3,1,2]\n. On the second day, it becomes \n    [2,3,1]\n.You're given the\npermutation \n    a'\n on the \n    k\n-th day. Define \n    \u03c3(x) = a_x\n,\nand define \n    f(x)\n as the minimal positive integer \n    m\n such that\n\n    \u03c3^m(x) = x\n, where \n    \u03c3^m(x)\n denotes\n\n    \u03c3(\n    \u03c3(\n    \u2026\n    \u03c3_m \n     times(x)\n    \n    \u2026))\n. For example, if \n    a = [2,3,1]\n, then \n    \u03c3(1) = 2\n,\n\n    \u03c3^2(1) = \n    \u03c3(\n    \u03c3(1)) = \n    \u03c3(2) = 3\n,\n\n    \u03c3^3(1) = \n    \u03c3(\n    \u03c3(\n    \u03c3(1))) = \n    \u03c3(3) = 1\n, so\n\n    f(1) = 3\n. And if \n    a=[4,2,1,3]\n, \n    \u03c3(2) = 2\n so \n    f(2) =\n    1\n; \n    \u03c3(3) = 1\n, \n    \u03c3^2(3) = 4\n, \n    \u03c3^3(3) = 3\n\nso \n    f(3) = 3\n. Find the initial permutation \n    a\n such that\n\n    \u2211\n    ^n_i=1\n    1f(i)\n is minimum possible. Input\nEach test contains multiple test cases. The first line contains an integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The first\nline of each test case contains two integers \n    n\n and \n    k\n (\n    1 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n; \n    1 \n    \u2264 k \n    \u2264 10^9\n) \u2014 the length of \n    a\n,\nand the last day. The second line contains \n    n\n integers\n\n    a'_1,a'_2,\n    \u2026,a'_n\n (\n    1 \n    \u2264 a'_i \n    \u2264 n\n) \u2014 the permutation\non the \n    k\n-th day. It's guaranteed that the sum of \n    n\n does not exceed\n\n    2 \n    \u00b7 10^5\n. Output For each test case, if at least one initial\n\n    a\n consistent with the given \n    a'\n exists, print \"YES\", then print\n\n    n\n integers \n    a_1,a_2,\n    \u2026,a_n\n \u2014 the initial permutation with the\nsmallest sum \n    \u2211\n    ^n_i=1\n    1f(i)\n. If there are\nmultiple answers with the smallest sum, print any. If there are no valid\npermutations, print \"NO\". Example Input 10 5 3 1 2 3 4 5 7 2 1 2 3 4 5 6 7 8\n998 1 2 3 4 5 6 7 8 6 1 6 3 5 4 1 2 4 8 4 2 1 3 9 1 1 5 4 8 7 6 3 2 9 5\n9999999 2 3 4 5 1 7 97843220 4 6 1 2 7 5 3 3 1000000000 2 1 3 12 3 8 9 10 1 5\n3 11 4 7 6 12 2 Output YES 2 3 4 1 5 YES 6 2 5 7 1 3 4 YES 2 3 4 5 6 7 8 1 YES\n3 1 6 4 2 5 YES 4 2 1 3 NO YES 3 4 5 1 2 YES 2 5 4 6 3 7 1 NO YES 3 7 8 6 5 1\n12 10 11 4 2 9 Note In the second test case, the initial permutation can be\n\n    a = [6,2,5,7,1,3,4]\n, which becomes \n    [3,2,1,4,6,5,7]\n on the first\nday and \n    a' = [1,2,3,4,5,6,7]\n on the second day (the \n    k\n-th day).\nAlso, among all the permutations satisfying that, it has the minimum\n\n    \u2211\n    ^n_i=1\n    1f(i)\n, which is\n\n    14+\n    11+\n    14+\n    12+\n    14+\n    14+\n    12=3\n.\nIn the fifth test case, the initial permutation can be \n    a = [4,2,1,3]\n,\nwhich becomes \n    [3,2,4,1]\n on the first day, \n    [4,2,1,3]\n on the second\nday, and so on. So it finally becomes \n    a' = [4,2,1,3]\n on the \n    8\n-th\nday (the \n    k\n-th day). And it has the minimum \n    \u2211\n    ^n_i=1\n    1f(i) = \n    13 + \n    11 + \n    13 +\n    \n    13 = 2\n.\n\n",
        "cf_contest_id": 1787,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10\r\n5 3\r\n1 2 3 4 5\r\n7 2\r\n1 2 3 4 5 6 7\r\n8 998\r\n1 2 3 4 5 6 7 8\r\n6 1\r\n6 3 5 4 1 2\r\n4 8\r\n4 2 1 3\r\n9 1\r\n1 5 4 8 7 6 3 2 9\r\n5 9999999\r\n2 3 4 5 1\r\n7 97843220\r\n4 6 1 2 7 5 3\r\n3 1000000000\r\n2 1 3\r\n12 3\r\n8 9 10 1 5 3 11 4 7 6 12 2\r\n",
                "YES\r\n1 5 2 3 4 \r\nYES\r\n1 3 2 7 4 5 6 \r\nYES\r\n8 1 2 3 4 5 6 7 \r\nYES\r\n3 1 6 4 2 5 \r\nYES\r\n4 2 1 3 \r\nNO\r\nYES\r\n3 4 5 1 2 \r\nYES\r\n2 5 4 6 3 7 1 \r\nNO\r\nYES\r\n10 7 1 3 5 4 12 6 11 8 2 9 \r\n"
            ]
        ],
        "private_cases": []
    }
]