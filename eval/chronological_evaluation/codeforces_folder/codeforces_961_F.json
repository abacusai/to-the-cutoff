[
    {
        "name": "k-substrings",
        "description": "You are given a string s consisting of n lowercase Latin letters. Let's denote\nk-substring of s as a string subsk = sksk + 1..sn + 1 - k. Obviously, subs1 =\ns, and there are exactly such substrings. Let's call some string t an odd\nproper suprefix of a string T iff the following conditions are met: |T| > |t|;\n|t| is an odd number; t is simultaneously a prefix and a suffix of T.For evey\nk-substring () of s you have to calculate the maximum length of its odd proper\nsuprefix. Input The first line contains one integer n (2 \u2264 n \u2264 10^6) \u2014 the\nlength s. The second line contains the string s consisting of n lowercase\nLatin letters. Output Print integers. i-th of them should be equal to maximum\nlength of an odd proper suprefix of i-substring of s (or - 1, if there is no\nsuch string that is an odd proper suprefix of i-substring). Examples Input 15\nbcabcabcabcabca Output 9 7 5 3 1 -1 -1 -1 Input 24 abaaabaaaabaaabaaaabaaab\nOutput 15 13 11 9 7 5 3 1 1 -1 -1 1 Input 19 cabcabbcabcabbcabca Output 5 3 1\n-1 -1 1 1 -1 -1 -1 Note The answer for first sample test is folowing:\n1-substring: bcabcabcabcabca 2-substring: cabcabcabcabc 3-substring:\nabcabcabcab 4-substring: bcabcabca 5-substring: cabcabc 6-substring: abcab\n7-substring: bca 8-substring: c\n\n",
        "cf_contest_id": 961,
        "cf_index": "F",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "hashing",
            "string suffix structures"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "15\r\nbcabcabcabcabca\r\n",
                "9 7 5 3 1 -1 -1 -1 "
            ],
            [
                "24\r\nabaaabaaaabaaabaaaabaaab\r\n",
                "15 13 11 9 7 5 3 1 1 -1 -1 1 "
            ],
            [
                "19\r\ncabcabbcabcabbcabca\r\n",
                "5 3 1 -1 -1 1 1 -1 -1 -1 "
            ]
        ],
        "private_cases": [
            [
                "2\r\nza\r\n",
                "-1 "
            ],
            [
                "20\r\nbbbaaabbbbbbbbaaabbb\r\n",
                "9 7 5 3 1 1 7 5 3 1 "
            ],
            [
                "2\r\nzz\r\n",
                "1 "
            ],
            [
                "3\r\ndad\r\n",
                "1 -1 "
            ],
            [
                "4\r\naccd\r\n",
                "-1 1 "
            ],
            [
                "5\r\naabcd\r\n",
                "-1 -1 -1 "
            ],
            [
                "6\r\nbcabbd\r\n",
                "-1 -1 -1 "
            ],
            [
                "7\r\nbaaaadd\r\n",
                "-1 -1 1 -1 "
            ]
        ]
    }
]