[
    {
        "name": "Madhouse (Easy version)",
        "description": "This problem is different with hard version only by constraints on total\nanswers length It is an interactive problem Venya joined a tour to the\nmadhouse, in which orderlies play with patients the following game. Orderlies\npick a string \n    s\n of length \n    n\n, consisting only of lowercase English\nletters. The player can ask two types of queries: ? l r \u2013 ask to list all\nsubstrings of \n    s[l..r]\n. Substrings will be returned in random order, and\nin every substring, all characters will be randomly shuffled. ! s \u2013 guess the\nstring picked by the orderlies. This query can be asked exactly once, after\nthat the game will finish. If the string is guessed correctly, the player\nwins, otherwise he loses. The player can ask no more than \n    3\n queries of\nthe first type. To make it easier for the orderlies, there is an additional\nlimitation: the total number of returned substrings in all queries of the\nfirst type must not exceed \n    (n+1)^2\n. Venya asked you to write a program,\nwhich will guess the string by interacting with the orderlies' program and\nacting by the game's rules. Your program should immediately terminate after\nguessing the string using a query of the second type. In case your program\nguessed the string incorrectly, or it violated the game rules, it will receive\nverdict Wrong answer. Note that in every test case the string is fixed\nbeforehand and will not change during the game, which means that the\ninteractor is not adaptive. Input First line contains number \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 100\n) \u2014 the length of the picked string. Interaction You start\nthe interaction by reading the number \n    n\n. To ask a query about a\nsubstring from \n    l\n to \n    r\n inclusively (\n    1 \n    \u2264 l \n    \u2264 r \n    \u2264\n    n\n), you should output ? l r on a separate line. After this, all substrings\nof \n    s[l..r]\n will be returned in random order, each substring exactly\nonce. In every returned substring all characters will be randomly shuffled. In\nthe case, if you ask an incorrect query, ask more than \n    3\n queries of the\nfirst type or there will be more than \n    (n+1)^2\n substrings returned in\ntotal, you will receive verdict Wrong answer. To guess the string \n    s\n, you\nshould output ! s on a separate line. After printing each query, do not forget\nto flush the output. Otherwise, you will get Idleness limit exceeded. To flush\nthe output, you can use: fflush(stdout) or cout.flush() in C++;\nSystem.out.flush() in Java; flush(output) in Pascal; stdout.flush() in Python;\nsee documentation for other languages. If you received - (dash) as an answer\nto any query, you need to terminate your program with exit code 0 (for\nexample, by calling exit(0)). This means that there was an error in the\ninteraction protocol. If you don't terminate with exit code 0, you can receive\nany unsuccessful verdict. Hack format To hack a solution, use the following\nformat: The first line should contain one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    100\n) \u2014 the length of the string, and the following line should contain the\nstring \n    s\n. Example Input 4 a aa a cb b c c Output ? 1 2 ? 3 4 ? 4 4 !\naabc\n\n",
        "cf_contest_id": 1286,
        "cf_index": "C1",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms",
            "interactive",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\naabc\r\n",
                "? 1 4\r\n? 2 4\r\n! aabc\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\nabcd\r\n",
                "? 1 4\r\n? 2 4\r\n! abcd\r\n"
            ],
            [
                "2\r\nee\r\n",
                "? 1 2\r\n? 2 2\r\n! ee\r\n"
            ],
            [
                "1\r\nf\r\n",
                "? 1 1\r\n! f\r\n"
            ],
            [
                "3\r\nabb\r\n",
                "? 1 3\r\n? 2 3\r\n! abb\r\n"
            ],
            [
                "3\r\nzyx\r\n",
                "? 1 3\r\n? 2 3\r\n! zyx\r\n"
            ],
            [
                "8\r\nxasdungo\r\n",
                "? 1 8\r\n? 2 8\r\n! xasdungo\r\n"
            ],
            [
                "4\r\nrvek\r\n",
                "? 1 4\r\n? 2 4\r\n! rvek\r\n"
            ],
            [
                "6\r\nphzjef\r\n",
                "? 1 6\r\n? 2 6\r\n! phzjef\r\n"
            ],
            [
                "6\r\nbrttuw\r\n",
                "? 1 6\r\n? 2 6\r\n! brttuw\r\n"
            ],
            [
                "9\r\nrnnnqnnrn\r\n",
                "? 1 9\r\n? 2 9\r\n! rnnnqnnrn\r\n"
            ],
            [
                "15\r\nvweeeuuvewuweuu\r\n",
                "? 1 15\r\n? 2 15\r\n! vweeeuuvewuweuu\r\n"
            ],
            [
                "20\r\nssssszszsszszzszzzzs\r\n",
                "? 1 20\r\n? 2 20\r\n! ssssszszsszszzszzzzs\r\n"
            ],
            [
                "100\r\nbbbbbaaaaabbbbbcccccaaaaabbbbbaaaaabbbbbaaaaabbbbbcccccaaaaacccccaaaaabbbbbcccccaaaaabbbbbcccccaaaaa\r\n",
                "? 1 100\r\n? 2 100\r\n! bbbbbaaaaabbbbbcccccaaaaabbbbbaaaaabbbbbaaaaabbbbbcccccaaaaacccccaaaaabbbbbcccccaaaaabbbbbcccccaaaaa\r\n"
            ],
            [
                "2\r\nba\r\n",
                "? 1 2\r\n? 2 2\r\n! ba\r\n"
            ],
            [
                "4\r\nqjnq\r\n",
                "? 1 4\r\n? 2 4\r\n! qjnq\r\n"
            ],
            [
                "20\r\ndhadahhaaaahdaaahhad\r\n",
                "? 1 20\r\n? 2 20\r\n! dhadahhaaaahdaaahhad\r\n"
            ],
            [
                "20\r\nycuqvsghtycqkkbxddjq\r\n",
                "? 1 20\r\n? 2 20\r\n! ycuqvsghtycqkkbxddjq\r\n"
            ],
            [
                "33\r\naaaaaaaaabbbbbbbbaaaaaaaabbbbbbbb\r\n",
                "? 1 33\r\n? 2 33\r\n! aaaaaaaaabbbbbbbbaaaaaaaabbbbbbbb\r\n"
            ],
            [
                "33\r\nuuuuuuutttttttmmmmmmmtttttthhhhhh\r\n",
                "? 1 33\r\n? 2 33\r\n! uuuuuuutttttttmmmmmmmtttttthhhhhh\r\n"
            ],
            [
                "34\r\nbbbbccccaaaabbbbaaabbbcccaaabbbccc\r\n",
                "? 1 34\r\n? 2 34\r\n! bbbbccccaaaabbbbaaabbbcccaaabbbccc\r\n"
            ],
            [
                "50\r\nkytqglncaovzpqdrcgfizluhftsjumpgsjecupmqkyyhcozabx\r\n",
                "? 1 50\r\n? 2 50\r\n! kytqglncaovzpqdrcgfizluhftsjumpgsjecupmqkyyhcozabx\r\n"
            ],
            [
                "60\r\ndaddddpppddapapdpaapaadppppapaaddappdadpaaaddpdaaddapadppppd\r\n",
                "? 1 60\r\n? 2 60\r\n! daddddpppddapapdpaapaadppppapaaddappdadpaaaddpdaaddapadppppd\r\n"
            ],
            [
                "67\r\nzxabbabaabbaababbabaababbaabbabaabbaababbaabbabaababbabaabbaababbav\r\n",
                "? 1 67\r\n? 2 67\r\n! zxabbabaabbaababbabaababbaabbabaabbaababbaabbabaababbabaabbaababbav\r\n"
            ],
            [
                "75\r\nxqvxeqqvqvvxxxxxxxqxxevvvvqvexqqxvxvxxvxqqeexeqqevveqxxevxevvqqxeexxqeexvqe\r\n",
                "? 1 75\r\n? 2 75\r\n! xqvxeqqvqvvxxxxxxxqxxevvvvqvexqqxvxvxxvxqqeexeqqevveqxxevxevvqqxeexxqeexvqe\r\n"
            ],
            [
                "99\r\nyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\r\n",
                "? 1 99\r\n? 2 99\r\n! yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\r\n"
            ],
            [
                "99\r\nuuudududuudqqqduuuqquuddqdqquqududqqdudqqudquqdqqudquqdduuuddudqduqduqqqudqdquduuuudduuqqquqdqdudqu\r\n",
                "? 1 99\r\n? 2 99\r\n! uuudududuudqqqduuuqquuddqdqquqududqqdudqqudquqdqqudquqdduuuddudqduqduqqqudqdquduuuudduuqqquqdqdudqu\r\n"
            ],
            [
                "99\r\npppnppnnppnnnnppnnpnnpppnpnpnnnppnppnnpnpnpppnppnppnpppnnnpppnpnnnppnpnpnpnppnpnnpnpppnppnnpppnnppn\r\n",
                "? 1 99\r\n? 2 99\r\n! pppnppnnppnnnnppnnpnnpppnpnpnnnppnppnnpnpnpppnppnppnpppnnnpppnpnnnppnpnpnpnppnpnnpnpppnppnnpppnnppn\r\n"
            ],
            [
                "99\r\ntduttitddiddtuyiytdiyttiudduyddtiyduytutyiduidututyittiuytudyyudiuuuyduiytytuuutyiiytddddutuiuuduut\r\n",
                "? 1 99\r\n? 2 99\r\n! tduttitddiddtuyiytdiyttiudduyddtiyduytutyiduidututyittiuytudyyudiuuuyduiytytuuutyiiytddddutuiuuduut\r\n"
            ],
            [
                "100\r\ntttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\r\n",
                "? 1 100\r\n? 2 100\r\n! tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\r\n"
            ],
            [
                "100\r\nlljllllllljjjllljlljlljlljjjljljjjjjllllllljljjjljlljjjjljjljljjlljjlljjjjljjllljjjlljjjljljjljjjljl\r\n",
                "? 1 100\r\n? 2 100\r\n! lljllllllljjjllljlljlljlljjjljljjjjjllllllljljjjljlljjjjljjljljjlljjlljjjjljjllljjjlljjjljljjljjjljl\r\n"
            ],
            [
                "100\r\nqvynouyqhasgfxwavprvmnfpqkzrqtyxpxqgzbfftxvzwsvcdlknukhgexhgbtnlhynwoivkyuvjtkfmlfidqtetefagnwllnyaj\r\n",
                "? 1 100\r\n? 2 100\r\n! qvynouyqhasgfxwavprvmnfpqkzrqtyxpxqgzbfftxvzwsvcdlknukhgexhgbtnlhynwoivkyuvjtkfmlfidqtetefagnwllnyaj\r\n"
            ],
            [
                "100\r\naaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaa\r\n",
                "? 1 100\r\n? 2 100\r\n! aaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbaaaaaaaaaaaaaaaaaaaa\r\n"
            ],
            [
                "100\r\nccccccccccccccceeeeeeeeeeeeeeecccccccccccccceeeeeeeeeeeeeeccccccccccccccbbbbbbbbbbbbbbdddddddddddddd\r\n",
                "? 1 100\r\n? 2 100\r\n! ccccccccccccccceeeeeeeeeeeeeeecccccccccccccceeeeeeeeeeeeeeccccccccccccccbbbbbbbbbbbbbbdddddddddddddd\r\n"
            ],
            [
                "100\r\noooooooooooooooooooooooooooooooooooooooooooooooooovvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n",
                "? 1 100\r\n? 2 100\r\n! oooooooooooooooooooooooooooooooooooooooooooooooooovvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\r\n"
            ],
            [
                "100\r\noooooooooooooooooooooooooooooooooooooooooooooooooossssssssssssssssssssssssssssssssssssssssssssssssss\r\n",
                "? 1 100\r\n? 2 100\r\n! oooooooooooooooooooooooooooooooooooooooooooooooooossssssssssssssssssssssssssssssssssssssssssssssssss\r\n"
            ],
            [
                "100\r\nuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\r\n",
                "? 1 100\r\n? 2 100\r\n! uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\r\n"
            ],
            [
                "100\r\nsssssssssssssssssssssssssssssssssssssssssssssssssszzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\r\n",
                "? 1 100\r\n? 2 100\r\n! sssssssssssssssssssssssssssssssssssssssssssssssssszzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\r\n"
            ],
            [
                "100\r\nuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuullllllllllllllllllllllllllllllllllllllllllllllllll\r\n",
                "? 1 100\r\n? 2 100\r\n! uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuullllllllllllllllllllllllllllllllllllllllllllllllll\r\n"
            ],
            [
                "52\r\nabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\r\n",
                "? 1 52\r\n? 2 52\r\n! abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\r\n"
            ],
            [
                "100\r\ntssttststtssttsssttsssttttttsttttssstssstsstssstststttssssstttsssttststststtttsssstsstsssssttttttsst\r\n",
                "? 1 100\r\n? 2 100\r\n! tssttststtssttsssttsssttttttsttttssstssstsstssstststttssssstttsssttststststtttsssstsstsssssttttttsst\r\n"
            ],
            [
                "10\r\nrkiirkrkir\r\n",
                "? 1 10\r\n? 2 10\r\n! rkiirkrkir\r\n"
            ],
            [
                "100\r\naaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbaaaaa\r\n",
                "? 1 100\r\n? 2 100\r\n! aaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbbaaaaaabbbbbaaaaa\r\n"
            ],
            [
                "8\r\nxyaxybxy\r\n",
                "? 1 8\r\n? 2 8\r\n! xyaxybxy\r\n"
            ]
        ]
    }
]