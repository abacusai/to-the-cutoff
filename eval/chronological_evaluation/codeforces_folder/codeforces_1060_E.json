[
    {
        "name": "Sergey and Subway",
        "description": "Sergey Semyonovich is a mayor of a county city N and he used to spend his days\nand nights in thoughts of further improvements of Nkers' lives. Unfortunately\nfor him, anything and everything has been done already, and there are no more\npossible improvements he can think of during the day (he now prefers to sleep\nat night). However, his assistants have found a solution and they now draw an\nimaginary city on a paper sheet and suggest the mayor can propose its\nimprovements. Right now he has a map of some imaginary city with \n    n\n\nsubway stations. Some stations are directly connected with tunnels in such a\nway that the whole map is a tree (assistants were short on time and\nenthusiasm). It means that there exists exactly one simple path between each\npair of station. We call a path simple if it uses each tunnel no more than\nonce. One of Sergey Semyonovich's favorite quality objectives is the sum of\nall pairwise distances between every pair of stations. The distance between\ntwo stations is the minimum possible number of tunnels on a path between them.\nSergey Semyonovich decided to add new tunnels to the subway map. In\nparticular, he connected any two stations \n    u\n and \n    v\n that were not\nconnected with a direct tunnel but share a common neighbor, i.e. there exists\nsuch a station \n    w\n that the original map has a tunnel between \n    u\n and\n\n    w\n and a tunnel between \n    w\n and \n    v\n. You are given a task to\ncompute the sum of pairwise distances between all pairs of stations in the new\nmap. Input The first line of the input contains a single integer \n    n\n (\n    2\n    \n    \u2264 n \n    \u2264 200\n     000\n) \u2014 the number of subway stations in the\nimaginary city drawn by mayor's assistants. Each of the following \n    n - 1\n\nlines contains two integers \n    u_i\n and \n    v_i\n (\n    1 \n    \u2264 u_i, v_i\n    \n    \u2264 n\n, \n    u_i \n     v_i\n), meaning the station with these indices are\nconnected with a direct tunnel. It is guaranteed that these \n    n\n stations\nand \n    n - 1\n tunnels form a tree. Output Print one integer that is equal to\nthe sum of distances between all pairs of stations after Sergey Semyonovich\ndraws new tunnels between all pairs of stations that share a common neighbor\nin the original map. Examples Input 4 1 2 1 3 1 4 Output 6 Input 4 1 2 2 3 3 4\nOutput 7 Note In the first sample, in the new map all pairs of stations share\na direct connection, so the sum of distances is \n    6\n. In the second sample,\nthe new map has a direct tunnel between all pairs of stations except for the\npair \n    (1, 4)\n. For these two stations the distance is \n    2\n.\n\n",
        "cf_contest_id": 1060,
        "cf_index": "E",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n1 2\r\n1 3\r\n1 4\r\n",
                "6"
            ],
            [
                "4\r\n1 2\r\n2 3\r\n3 4\r\n",
                "7"
            ]
        ],
        "private_cases": [
            [
                "2\r\n2 1\r\n",
                "1"
            ],
            [
                "3\r\n2 1\r\n3 2\r\n",
                "3"
            ],
            [
                "10\r\n2 3\r\n3 9\r\n6 3\r\n9 8\r\n9 10\r\n4 8\r\n3 1\r\n3 5\r\n7 1\r\n",
                "67"
            ]
        ]
    }
]