[
    {
        "name": "Nauuo and ODT",
        "description": "Nauuo is a girl who loves traveling. One day she went to a tree, Old Driver\nTree, literally, a tree with an old driver on it. The tree is a connected\ngraph consisting of \n    n\n nodes and \n    n-1\n edges. Each node has a color,\nand Nauuo will visit the ODT through a simple path on the tree in the old\ndriver's car. Nauuo wants to visit see more different colors in her journey,\nbut she doesn't know which simple path she will be traveling on. So, she wants\nto calculate the sum of the numbers of different colors on all different\npaths. Can you help her? What's more, the ODT is being redecorated, so there\nwill be \n    m\n modifications, each modification will change a single node's\ncolor. Nauuo wants to know the answer after each modification too. Note that\nin this problem, we consider the simple path from \n    u\n to \n    v\n and the\nsimple path from \n    v\n to \n    u\n as two different simple paths if and only\nif \n    u\n     v\n. Input The first line contains two integers \n    n\n and\n\n    m\n (\n    2\n    \u2264 n\n    \u2264 4\n    \u00b7 10^5\n, \n    1\n    \u2264 m\n    \u2264 4\n    \u00b7 10^5\n)\n\u2014 the number of nodes and the number of modifications. The second line\ncontains \n    n\n integers \n    c_1,c_2,\n    \u2026,c_n\n (\n    1\n    \u2264 c_i\n    \u2264\n    n\n), where \n    c_i\n is the initial color of node \n    i\n. Each of the next\n\n    n-1\n lines contains two integers \n    u\n and \n    v\n (\n    1\n    \u2264 u,v\n    \u2264\n    n\n), denoting there is an edge between \n    u\n and \n    v\n. It is guaranteed\nthat the given edges form a tree. Each of the next \n    m\n lines contains two\nintegers \n    u\n and \n    x\n (\n    1\n    \u2264 u,x\n    \u2264 n\n), which means a\nmodification that changes the color of node \n    u\n into \n    x\n. Output The\noutput contains \n    m+1\n integers \u2014 the first integer is the answer at the\nbeginning, the rest integers are the answers after every modification in the\ngiven order. Examples Input 5 3 1 2 1 2 3 1 2 1 3 3 4 3 5 3 3 4 1 4 3 Output\n47 51 49 45 Input 6 1 1 1 1 1 1 1 1 2 2 3 3 4 4 5 5 6 1 2 Output 36 46 Note\nExample 1 The number of colors on each simple path at the beginning:\n\n",
        "cf_contest_id": 1172,
        "cf_index": "E",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 7.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5 3\r\n1 2 1 2 3\r\n1 2\r\n1 3\r\n3 4\r\n3 5\r\n3 3\r\n4 1\r\n4 3\r\n",
                "47\r\n51\r\n49\r\n45\r\n"
            ],
            [
                "6 1\r\n1 1 1 1 1 1\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n1 2\r\n",
                "36\r\n46\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1 2\r\n1 2\r\n1 2\r\n",
                "6\r\n4\r\n"
            ]
        ]
    }
]