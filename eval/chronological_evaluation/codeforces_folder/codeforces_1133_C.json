[
    {
        "name": "Balanced Team",
        "description": "You are a coach at your local university. There are \n    n\n students under\nyour supervision, the programming skill of the \n    i\n-th student is\n\n    a_i\n. You have to create a team for a new programming competition. As you\nknow, the more students some team has the more probable its victory is! So you\nhave to create a team with the maximum number of students. But you also know\nthat a team should be balanced. It means that the programming skill of each\npair of students in a created team should differ by no more than \n    5\n. Your\ntask is to report the maximum possible number of students in a balanced team.\nInput The first line of the input contains one integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of students. The second line of the\ninput contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 10^9\n), where \n    a_i\n is a programming skill of the \n    i\n-th\nstudent. Output Print one integer \u2014 the maximum possible number of students in\na balanced team. Examples Input 6 1 10 17 12 15 2 Output 3 Input 10 1337 1337\n1337 1337 1337 1337 1337 1337 1337 1337 Output 10 Input 6 1 1000 10000 10 100\n1000000000 Output 1 Note In the first example you can create a team with\nskills \n    [12, 17, 15]\n. In the second example you can take all students in\na team because their programming skills are equal. In the third example you\ncan create a team consisting of a single student (and you cannot create a team\nconsisting of at least two students).\n\n",
        "cf_contest_id": 1133,
        "cf_index": "C",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1 10 17 12 15 2\r\n",
                "3\r\n"
            ],
            [
                "10\r\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\r\n",
                "10\r\n"
            ],
            [
                "6\r\n1 1000 10000 10 100 1000000000\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "100\r\nr\n",
                "100\r\n"
            ],
            [
                "100\r\n1342 1342 1342 1339 1338 1340 1339 1338 1341 1341 1339 1342 1337 1337 1337 1341 1340 1338 1338 1340 1337 1337 1337 1339 1337 1342 1337 1340 1342 1337 1342 1338 1342 1338 1337 1341 1337 1337 1341 1338 1342 1342 1342 1337 1342 1337 1341 1340 1340 1340 1339 1342 1342 1337 1339 1340 1338 1342 1340 1342 1340 1342 1340 1341 1337 1342 1341 1337 1339 1340 1341 1342 1342 1337 1342 1338 1340 1337 1338 1341 1341 1342 1337 1338 1338 1342 1342 1341 1342 1341 1339 1342 1338 1340 1337 1338 1338 1338 1339 1338\r\n",
                "100\r\n"
            ],
            [
                "100\r\n1340 1337 1341 1339 1342 1343 1343 1340 1342 1339 1343 1338 1343 1340 1338 1342 1340 1339 1339 1342 1342 1337 1343 1337 1341 1343 1337 1337 1342 1340 1340 1341 1341 1339 1343 1338 1338 1338 1337 1341 1339 1337 1341 1343 1337 1340 1343 1339 1343 1340 1337 1341 1343 1340 1343 1340 1339 1342 1342 1339 1339 1342 1340 1340 1340 1340 1341 1338 1338 1338 1338 1342 1337 1339 1339 1338 1337 1339 1338 1337 1341 1338 1340 1338 1338 1338 1337 1339 1340 1342 1343 1339 1338 1338 1343 1342 1343 1343 1337 1342\r\n",
                "86\r\n"
            ],
            [
                "100\r\n1408 1397 1375 1350 1344 1390 1370 1428 1342 1386 1355 1417 1342 1397 1388 1366 1340 1358 1341 1343 1360 1390 1366 1407 1412 1407 1353 1413 1436 1421 1408 1391 1392 1405 1369 1393 1423 1380 1387 1390 1377 1348 1435 1423 1340 1366 1346 1416 1368 1377 1436 1372 1386 1355 1337 1418 1436 1350 1355 1346 1366 1427 1427 1392 1338 1351 1400 1358 1377 1422 1408 1400 1371 1381 1387 1408 1405 1339 1359 1404 1346 1363 1390 1360 1350 1402 1359 1348 1409 1402 1430 1400 1409 1422 1359 1392 1425 1360 1406 1437\r\n",
                "12\r\n"
            ],
            [
                "1\r\n1337\r\n",
                "1\r\n"
            ],
            [
                "2\r\n1337 1338\r\n",
                "2\r\n"
            ],
            [
                "2\r\n1338 1228\r\n",
                "1\r\n"
            ],
            [
                "4\r\n1 2 5 6\r\n",
                "4\r\n"
            ],
            [
                "2\r\n1 5\r\n",
                "2\r\n"
            ]
        ]
    }
]