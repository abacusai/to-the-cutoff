[
    {
        "name": "Maximize the Remaining String",
        "description": "You are given a string \n    s\n, consisting of lowercase Latin letters. While\nthere is at least one character in the string \n    s\n that is repeated at\nleast twice, you perform the following operation: you choose the index \n    i\n\n(\n    1 \n    \u2264 i \n    \u2264 |s|\n) such that the character at position \n    i\n occurs\nat least two times in the string \n    s\n, and delete the character at position\n\n    i\n, that is, replace \n    s\n with \n    s_1 s_2 \n    \u2026 s_i-1 s_i+1\n    s_i+2\n    \u2026 s_n\n. For example, if \n    s=\n\"codeforces\", then you can\napply the following sequence of operations: \n    i=6 \n    \u21d2\n    s=\n\"codefrces\"; \n    i=1 \n    \u21d2 s=\n\"odefrces\"; \n    i=7 \n    \u21d2\n    s=\n\"odefrcs\"; Given a given string \n    s\n, find the lexicographically\nmaximum string that can be obtained after applying a certain sequence of\noperations after which all characters in the string become unique. A string\n\n    a\n of length \n    n\n is lexicographically less than a string \n    b\n of\nlength \n    m\n, if: there is an index \n    i\n (\n    1 \n    \u2264 i \n    \u2264\n    min(n,\n    m)\n) such that the first \n    i-1\n characters of the strings \n    a\n and\n\n    b\n are the same, and the \n    i\n-th character of the string \n    a\n is\nless than \n    i\n-th character of string \n    b\n; or the first \n    min(n,\n    m)\n characters in the strings \n    a\n and \n    b\n are the same and \n    n <\n    m\n. For example, the string \n    a=\n\"aezakmi\" is lexicographically less than\nthe string \n    b=\n\"aezus\". Input The first line contains one integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 10^4\n). Then \n    t\n test cases follow. Each test case\nis characterized by a string \n    s\n, consisting of lowercase Latin letters\n(\n    1 \n    \u2264 |s| \n    \u2264 2 \n    \u00b7 10^5\n). It is guaranteed that the sum of the\nlengths of the strings in all test cases does not exceed \n    2 \n    \u00b7 10^5\n.\nOutput For each test case, output the lexicographically maximum string that\ncan be obtained after applying a certain sequence of operations after which\nall characters in the string become unique. Example Input 6 codeforces aezakmi\nabacaba convexhull swflldjgpaxs myneeocktxpqjpz Output odfrces ezakmi cba\nconvexhul wfldjgpaxs myneocktxqjpz\n\n",
        "cf_contest_id": 1506,
        "cf_index": "G",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "dp",
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 2.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\ncodeforces\r\naezakmi\r\nabacaba\r\nconvexhull\r\nswflldjgpaxs\r\nmyneeocktxpqjpz\r\n",
                "odfrces\r\nezakmi\r\ncba\r\nconvexhul\r\nwfldjgpaxs\r\nmyneocktxqjpz\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n",
                "a\r\n"
            ]
        ]
    }
]