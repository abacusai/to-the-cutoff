[
    {
        "name": "Equidistant Letters",
        "description": "You are given a string \n    s\n, consisting of lowercase Latin letters. Every\nletter appears in it no more than twice. Your task is to rearrange the letters\nin the string in such a way that for each pair of letters that appear exactly\ntwice, the distance between the letters in the pair is the same. You are not\nallowed to add or remove letters. It can be shown that the answer always\nexists. If there are multiple answers, print any of them. Input The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^3\n) \u2014 the number of\ntestcases. Each testcase consists of a non-empty string \n    s\n, consisting of\nlowercase Latin letters. Every letter appears in the string no more than\ntwice. The length of the string doesn't exceed \n    52\n. Output For each\ntestcase, print a single string. Every letter should appear in it the same\nnumber of times as it appears in string \n    s\n. For each pair of letters that\nappear exactly twice, the distance between the letters in the pair should be\nthe same. If there are multiple answers, print any of them. Example Input 3\noelhl abcdcba ac Output hello ababcdc ac Note In the first testcase of the\nexample, the only letter that appears exactly twice is letter 'l'. You can\nrearrange the letters arbitrarily, since there are no distances to compare. In\nthe second testcase of the example, the letters that appear exactly twice are\n'a', 'b' and 'c'. Initially, letters 'a' are distance \n    6\n apart, letters\n'b' are distance \n    4\n apart and letters 'c' are distance \n    2\n apart.\nThey are not the same, so we have to rearrange the letters. After\nrearrangement, letters 'a' are distance \n    2\n apart, letters 'b' are\ndistance \n    2\n apart and letters 'c' are distance \n    2\n apart. They are\nall the same, so the answer is valid. In the third testcase of the example,\nthere are no letters that appear exactly twice. Thus, any rearrangement is\nvalid. Including not changing the string at all.\n\n",
        "cf_contest_id": 1626,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\noelhl\r\nabcdcba\r\nac\r\n",
                "ehllo\r\naabbccd\r\nac\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nf\r\n",
                "f\r\n"
            ],
            [
                "1\r\nabdogaber\r\n",
                "aabbdegor\r\n"
            ]
        ]
    }
]