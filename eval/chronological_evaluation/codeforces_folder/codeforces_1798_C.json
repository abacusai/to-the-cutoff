[
    {
        "name": "Candy Store",
        "description": "The store sells \n    n\n types of candies with numbers from \n    1\n to \n    n\n.\nOne candy of type \n    i\n costs \n    b_i\n coins. In total, there are \n    a_i\n\ncandies of type \n    i\n in the store. You need to pack all available candies\nin packs, each pack should contain only one type of candies. Formally, for\neach type of candy \n    i\n you need to choose the integer \n    d_i\n, denoting\nthe number of type \n    i\n candies in one pack, so that \n    a_i\n is divided\nwithout remainder by \n    d_i\n. Then the cost of one pack of candies of type\n\n    i\n will be equal to \n    b_i \n    \u00b7 d_i\n. Let's denote this cost by\n\n    c_i\n, that is, \n    c_i = b_i \n    \u00b7 d_i\n. After packaging, packs will\nbe placed on the shelf. Consider the cost of the packs placed on the shelf, in\norder \n    c_1, c_2, \n    \u2026, c_n\n. Price tags will be used to describe costs\nof the packs. One price tag can describe the cost of all packs from \n    l\n to\n\n    r\n inclusive if \n    c_l = c_l+1 = \n    \u2026 = c_r\n. Each of the packs\nfrom \n    1\n to \n    n\n must be described by at least one price tag. For\nexample, if \n    c_1, \n    \u2026, c_n = [4, 4, 2, 4, 4]\n, to describe all the\npacks, a \n    3\n price tags will be enough, the first price tag describes the\npacks \n    1, 2\n, the second: \n    3\n, the third: \n    4, 5\n. You are given\nthe integers \n    a_1, b_1, a_2, b_2, \n    \u2026, a_n, b_n\n. Your task is to\nchoose integers \n    d_i\n so that \n    a_i\n is divisible by \n    d_i\n for all\n\n    i\n, and the required number of price tags to describe the values of\n\n    c_1, c_2, \n    \u2026, c_n\n is the minimum possible. For a better\nunderstanding of the statement, look at the illustration of the first test\ncase of the first test: Let's repeat the meaning of the notation used in the\nproblem: \n    a_i\n \u2014 the number of candies of type \n    i\n available in the\nstore. \n    b_i\n \u2014 the cost of one candy of type \n    i\n. \n    d_i\n \u2014 the\nnumber of candies of type \n    i\n in one pack. \n    c_i\n \u2014 the cost of one\npack of candies of type \n    i\n is expressed by the formula \n    c_i = b_i\n    \n    \u00b7 d_i\n. Input Each test contains multiple test cases. The first line\ncontains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n     000\n).\nDescription of the test cases follows. The first line of each test case\ncontains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 200\n     000\n) \u2014 the\nnumber of types of candies. Each of the next \n    n\n lines of each test case\ncontains two integers \n    a_i\n and \n    b_i\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n,\n\n    1 \n    \u2264 b_i \n    \u2264 10\n     000\n) \u2014 the number of candies and the cost of one\ncandy of type \n    i\n, respectively. It is guaranteed that the sum of \n    n\n\nover all test cases does not exceed \n    200\n     000\n. Output For each test\ncase, output the minimum number of price tags required to describe the costs\nof all packs of candies in the store. Example Input 5 4 20 3 6 2 14 5 20 7 3\n444 5 2002 10 2020 2 5 7 7 6 5 15 2 10 3 7 7 5 10 1 11 5 5 1 2 2 8 2 6 7 12 12\n3 5 3 9 12 9 3 1000000000 10000 Output 2 1 3 2 5 Note In the first test case,\nyou can choose \n    d_1 = 4\n, \n    d_2 = 6\n, \n    d_3 = 7\n, \n    d_4 = 5\n.\nThen the cost of packs will be equal to \n    [12, 12, 35, 35]\n. \n    2\n price\ntags are enough to describe them, the first price tag for \n    c_1, c_2\n and\nthe second price tag for \n    c_3, c_4\n. It can be shown that with any correct\nchoice of \n    d_i\n, at least \n    2\n of the price tag will be needed to\ndescribe all the packs. Also note that this example is illustrated by a\npicture in the statement. In the second test case, with \n    d_1 = 4\n, \n    d_2\n    = 2\n, \n    d_3 = 10\n, the costs of all packs will be equal to \n    20\n.\nThus, \n    1\n price tag is enough to describe all the packs. Note that\n\n    a_i\n is divisible by \n    d_i\n for all \n    i\n, which is necessary\ncondition. In the third test case, it is not difficult to understand that one\nprice tag can be used to describe \n    2\nnd, \n    3\nrd and \n    4\nth packs.\nAnd additionally a price tag for pack \n    1\n and pack \n    5\n. Total: \n    3\n\nprice tags.\n\n",
        "cf_contest_id": 1798,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4\r\n20 3\r\n6 2\r\n14 5\r\n20 7\r\n3\r\n444 5\r\n2002 10\r\n2020 2\r\n5\r\n7 7\r\n6 5\r\n15 2\r\n10 3\r\n7 7\r\n5\r\n10 1\r\n11 5\r\n5 1\r\n2 2\r\n8 2\r\n6\r\n7 12\r\n12 3\r\n5 3\r\n9 12\r\n9 3\r\n1000000000 10000\r\n",
                "2\r\n1\r\n3\r\n2\r\n5\r\n"
            ]
        ],
        "private_cases": []
    }
]