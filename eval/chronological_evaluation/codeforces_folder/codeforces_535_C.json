[
    {
        "name": "Tavas and Karafs",
        "description": "Karafs is some kind of vegetable in shape of an 1 \u00d7 h rectangle. Tavaspolis\npeople love Karafs and they use Karafs in almost any kind of food. Tavas,\nhimself, is crazy about Karafs. Each Karafs has a positive integer height.\nTavas has an infinite 1-based sequence of Karafses. The height of the i-th\nKarafs is si = A + (i - 1) \u00d7 B. For a given m, let's define an m-bite\noperation as decreasing the height of at most m distinct not eaten Karafses by\n1. Karafs is considered as eaten when its height becomes zero. Now SaDDas asks\nyou n queries. In each query he gives you numbers l, t and m and you should\nfind the largest number r such that l \u2264 r and sequence sl, sl + 1, ..., sr can\nbe eaten by performing m-bite no more than t times or print -1 if there is no\nsuch number r. Input The first line of input contains three integers A, B and\nn (1 \u2264 A, B \u2264 10^6, 1 \u2264 n \u2264 10^5). Next n lines contain information about\nqueries. i-th line contains integers l, t, m (1 \u2264 l, t, m \u2264 10^6) for i-th\nquery. Output For each query, print its answer in a single line. Examples\nInput 2 1 4 1 5 3 3 3 10 7 10 2 6 4 8 Output 4 -1 8 -1 Input 1 5 2 1 5 10 2 7\n4 Output 1 2\n\n",
        "cf_contest_id": 535,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1 4\r\n1 5 3\r\n3 3 10\r\n7 10 2\r\n6 4 8\r\n",
                "4\r\n-1\r\n8\r\n-1\r\n"
            ],
            [
                "1 5 2\r\n1 5 10\r\n2 7 4\r\n",
                "1\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 4\r\n1 1000000 1000000\r\n1 1 1000000\r\n1 1000000 1\r\n1 1 1\r\n",
                "1000000\r\n1\r\n1413\r\n1\r\n"
            ],
            [
                "1000000 1000000 1\r\n1000000 1000000 1000000\r\n",
                "-1\r\n"
            ],
            [
                "999999 1000000 1\r\n1 1000000 1000000\r\n",
                "1\r\n"
            ],
            [
                "1 1000000 1\r\n1 1000000 1000000\r\n",
                "1\r\n"
            ],
            [
                "1 5000 1\r\n1 1000000 1000000\r\n",
                "200\r\n"
            ],
            [
                "1 1 1\r\n1 1000000 1000000\r\n",
                "1000000\r\n"
            ],
            [
                "447 74474 4\r\n47 777474 747\r\n74 744744 74477\r\n477 477447 777\r\n7 477777 444444\r\n",
                "-1\r\n-1\r\n-1\r\n7\r\n"
            ]
        ]
    }
]