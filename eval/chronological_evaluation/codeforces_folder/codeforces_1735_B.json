[
    {
        "name": "Tea with Tangerines",
        "description": "There are \n    n\n pieces of tangerine peel, the \n    i\n-th of them has size\n\n    a_i\n. In one step it is possible to divide one piece of size \n    x\n into\ntwo pieces of positive integer sizes \n    y\n and \n    z\n so that \n    y + z =\n    x\n. You want that for each pair of pieces, their sizes differ strictly less\nthan twice. In other words, there should not be two pieces of size \n    x\n and\n\n    y\n, such that \n    2x \n    \u2264 y\n. What is the minimum possible number of\nsteps needed to satisfy the condition? Input The first line of the input\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of\ntest cases. The description of test cases follows. The first line of each test\ncase contains the integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n). Then one line\nfollows, containing \n    n\n integers \n    a_1 \n    \u2264 a_2 \n    \u2264\n    \u2026\n    \u2264\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^7\n). Output For each test case, output a\nsingle line containing the minimum number of steps. Example Input 3 5 1 2 3 4\n5 1 1033 5 600 900 1300 2000 2550 Output 10 0 4 Note In the first test case,\nwe initially have a piece of size \n    1\n, so all final pieces must have size\n\n    1\n. The total number of steps is: \n    0 + 1 + 2 + 3 + 4 = 10\n. In the\nsecond test case, we have just one piece, so we don't need to do anything, and\nthe answer is \n    0\n steps. In the third test case, one of the possible cut\noptions is: \n    600,\n     900,\n     (600 | 700),\n     (1000 | 1000),\n     (1000 | 1000\n    | 550)\n. You can see this option in the picture below. The maximum piece has\nsize \n    1000\n, and it is less than \n    2\n times bigger than the minimum\npiece of size \n    550\n. \n    4\n steps are done. We can show that it is the\nminimum possible number of steps.\n\n",
        "cf_contest_id": 1735,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n5\r\n1 2 3 4 5\r\n1\r\n1033\r\n5\r\n600 900 1300 2000 2550\r\n",
                "10\r\n0\r\n4\r\n"
            ]
        ],
        "private_cases": []
    }
]