[
    {
        "name": "Restore the Permutation",
        "description": "A sequence of \n    n\n numbers is called permutation if it contains all numbers\nfrom \n    1\n to \n    n\n exactly once. For example, the sequences [\n    3, 1, 4,\n    2\n], [\n    1\n] and [\n    2,1\n] are permutations, but [\n    1,2,1\n],\n[\n    0,1\n] and [\n    1,3,4\n] \u2014 are not. For a permutation \n    p\n of even\nlength \n    n\n you can make an array \n    b\n of length \n    n/2\n\nsuch that: \n    b_i = \n    max(p_2i - 1, p_2i)\n for \n    1 \n    \u2264 i \n    \u2264\n    n/2\n For example, if \n    p\n = [\n    2, 4, 3, 1, 5, 6\n], then:\n\n    b_1 = \n    max(p_1, p_2) = \n    max(2, 4) = 4\n \n    b_2 = \n    max(p_3, p_4) =\n    \n    max(3,1)=3\n \n    b_3 = \n    max(p_5, p_6) = \n    max(5,6) = 6\n As a result,\nwe made \n    b\n = \n    [4, 3, 6]\n.For a given array \n    b\n, find the\nlexicographically minimal permutation \n    p\n such that you can make the given\narray \n    b\n from it. If \n    b\n = [\n    4,3,6\n], then the lexicographically\nminimal permutation from which it can be made is \n    p\n =\n[\n    1,4,2,3,5,6\n], since: \n    b_1 = \n    max(p_1, p_2) = \n    max(1, 4) = 4\n\n\n    b_2 = \n    max(p_3, p_4) = \n    max(2, 3) = 3\n \n    b_3 = \n    max(p_5, p_6) =\n    \n    max(5, 6) = 6\n A permutation \n    x_1, x_2, \n    \u2026, x_n\n is\nlexicographically smaller than a permutation \n    y_1, y_2 \n    \u2026, y_n\n if\nand only if there exists such \n    i\n (\n    1 \n    \u2264 i \n    \u2264 n\n) that\n\n    x_1=y_1, x_2=y_2, \n    \u2026, x_i-1=y_i-1\n and \n    x_i<y_i\n. Input The\nfirst line of input data contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains one even integer \n    n\n\n(\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n). The second line of each test case\ncontains exactly \n    n/2\n integers \n    b_i\n (\n    1 \n    \u2264 b_i \n    \u2264\n    n\n) \u2014 elements of array \n    b\n. It is guaranteed that the sum of \n    n\n\nvalues over all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For\neach test case, print on a separate line: lexicographically minimal\npermutation \n    p\n such that you can make an array \n    b\n from it; or a\nnumber -1 if the permutation you are looking for does not exist. Example Input\n6 6 4 3 6 4 2 4 8 8 7 2 3 6 6 4 2 4 4 4 8 8 7 4 5 Output 1 4 2 3 5 6 1 2 3 4\n-1 5 6 3 4 1 2 -1 1 8 6 7 2 4 3 5 Note The first test case is parsed in the\nproblem statement.\n\n",
        "cf_contest_id": 1759,
        "cf_index": "G",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n6\r\n4 3 6\r\n4\r\n2 4\r\n8\r\n8 7 2 3\r\n6\r\n6 4 2\r\n4\r\n4 4\r\n8\r\n8 7 4 5\r\n",
                "1 4 2 3 5 6 1 2 3 4 -1 5 6 3 4 1 2 -1 1 8 6 7 2 4 3 5 "
            ]
        ],
        "private_cases": []
    }
]