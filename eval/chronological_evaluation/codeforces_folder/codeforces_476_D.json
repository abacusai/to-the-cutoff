[
    {
        "name": "Dreamoon and Sets",
        "description": "Dreamoon likes to play with sets, integers and . is defined as the largest\npositive integer that divides both a and b. Let S be a set of exactly four\ndistinct integers greater than 0. Define S to be of rank k if and only if for\nall pairs of distinct elements si, sj from S, . Given k and n, Dreamoon wants\nto make up n sets of rank k using integers from 1 to m such that no integer is\nused in two different sets (of course you can leave some integers without\nuse). Calculate the minimum m that makes it possible and print one possible\nsolution. Input The single line of the input contains two space separated\nintegers n, k (1 \u2264 n \u2264 10 000, 1 \u2264 k \u2264 100). Output On the first line print a\nsingle integer \u2014 the minimal possible m. On each of the next n lines print\nfour space separated integers representing the i-th set. Neither the order of\nthe sets nor the order of integers within a set is important. If there are\nmultiple possible solutions with minimal m, print any one of them. Examples\nInput 1 1 Output 5 1 2 3 5 Input 2 2 Output 22 2 4 6 22 14 18 10 16 Note For\nthe first example it's easy to see that set 1, 2, 3, 4 isn't a valid set of\nrank 1 since .\n\n",
        "cf_contest_id": 476,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 1\r\n",
                "5\r\n1 2 3 5\r\n"
            ],
            [
                "2 2\r\n",
                "22\r\n2 4 6 10\r\n14 16 18 22\r\n"
            ]
        ],
        "private_cases": [
            [
                "7 7\r\n",
                "287\r\n7 14 21 35\r\n49 56 63 77\r\n91 98 105 119\r\n133 140 147 161\r\n175 182 189 203\r\n217 224 231 245\r\n259 266 273 287\r\n"
            ],
            [
                "13 7\r\n",
                "539\r\n7 14 21 35\r\n49 56 63 77\r\n91 98 105 119\r\n133 140 147 161\r\n175 182 189 203\r\n217 224 231 245\r\n259 266 273 287\r\n301 308 315 329\r\n343 350 357 371\r\n385 392 399 413\r\n427 434 441 455\r\n469 476 483 497\r\n511 518 525 539\r\n"
            ],
            [
                "15 27\r\n",
                "2403\r\n27 54 81 135\r\n189 216 243 297\r\n351 378 405 459\r\n513 540 567 621\r\n675 702 729 783\r\n837 864 891 945\r\n999 1026 1053 1107\r\n1161 1188 1215 1269\r\n1323 1350 1377 1431\r\n1485 1512 1539 1593\r\n1647 1674 1701 1755\r\n1809 1836 1863 1917\r\n1971 1998 2025 2079\r\n2133 2160 2187 2241\r\n2295 2322 2349 2403\r\n"
            ],
            [
                "19 21\r\n",
                "2373\r\n21 42 63 105\r\n147 168 189 231\r\n273 294 315 357\r\n399 420 441 483\r\n525 546 567 609\r\n651 672 693 735\r\n777 798 819 861\r\n903 924 945 987\r\n1029 1050 1071 1113\r\n1155 1176 1197 1239\r\n1281 1302 1323 1365\r\n1407 1428 1449 1491\r\n1533 1554 1575 1617\r\n1659 1680 1701 1743\r\n1785 1806 1827 1869\r\n1911 1932 1953 1995\r\n2037 2058 2079 2121\r\n2163 2184 2205 2247\r\n2289 2310 2331 2373\r\n"
            ],
            [
                "1 100\r\n",
                "500\r\n100 200 300 500\r\n"
            ],
            [
                "1 10\r\n",
                "50\r\n10 20 30 50\r\n"
            ]
        ]
    }
]