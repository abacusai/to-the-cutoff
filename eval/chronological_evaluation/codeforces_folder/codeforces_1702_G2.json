[
    {
        "name": "Passable Paths (hard version)",
        "description": "This is a hard version of the problem. The only difference between an easy and\na hard version is in the number of queries. Polycarp grew a tree from \n    n\n\nvertices. We remind you that a tree of \n    n\n vertices is an undirected\nconnected graph of \n    n\n vertices and \n    n-1\n edges that does not contain\ncycles. He calls a set of vertices passable if there is such a path in the\ntree that passes through each vertex of this set without passing through any\nedge twice. The path can visit other vertices (not from this set). In other\nwords, a set of vertices is called passable if there is a simple path that\npasses through all the vertices of this set (and possibly some other). For\nexample, for a tree below sets \n    3, 2, 5\n, \n    1, 5,\n    4\n, \n    1, 4\n are passable, and \n    1, 3, 5\n,\n\n    1, 2, 3, 4, 5\n are not. Polycarp asks you to answer \n    q\n\nqueries. Each query is a set of vertices. For each query, you need to\ndetermine whether the corresponding set of vertices is passable. Input The\nfirst line of input contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 number of vertices. Following \n    n - 1\n lines a\ndescription of the tree.. Each line contains two integers \n    u\n and \n    v\n\n(\n    1 \n    \u2264 u, v \n    \u2264 n\n, \n    u \n     v\n) \u2014 indices of vertices connected\nby an edge. Following line contains single integer \n    q\n (\n    1 \n    \u2264 q \n    \u2264\n    10^5\n) \u2014 number of queries. The following \n    2 \n    \u00b7 q\n lines contain\ndescriptions of sets. The first line of the description contains an integer\n\n    k\n (\n    1 \n    \u2264 k \n    \u2264 n\n) \u2014 the size of the set. The second line of\nthe description contains \n    k\n of distinct integers \n    p_1, p_2, \n    \u2026,\n    p_k\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n) \u2014 indices of the vertices of the set. It is\nguaranteed that the sum of \n    k\n values for all queries does not exceed \n    2\n    \n    \u00b7 10^5\n. Output Output \n    q\n lines, each of which contains the\nanswer to the corresponding query. As an answer, output \"YES\" if the set is\npassable, and \"NO\" otherwise. You can output the answer in any case (for\nexample, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will be recognized as a\npositive answer). Examples Input 5 1 2 2 3 2 4 4 5 5 3 3 2 5 5 1 2 3 4 5 2 1 4\n3 1 3 5 3 1 5 4 Output YES NO YES NO YES Input 5 1 2 3 2 2 4 5 2 4 2 3 1 3 3 4\n5 3 2 3 5 1 1 Output YES NO YES YES\n\n",
        "cf_contest_id": 1702,
        "cf_index": "G2",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2\r\n2 3\r\n2 4\r\n4 5\r\n5\r\n3\r\n3 2 5\r\n5\r\n1 2 3 4 5\r\n2\r\n1 4\r\n3\r\n1 3 5\r\n3\r\n1 5 4\r\n",
                "YES\r\nNO\r\nYES\r\nNO\r\nYES\r\n"
            ],
            [
                "5\r\n1 2\r\n3 2\r\n2 4\r\n5 2\r\n4\r\n2\r\n3 1\r\n3\r\n3 4 5\r\n3\r\n2 3 5\r\n1\r\n1\r\n",
                "YES\r\nNO\r\nYES\r\nYES\r\n"
            ]
        ],
        "private_cases": []
    }
]