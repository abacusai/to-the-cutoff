[
    {
        "name": "Slime Escape",
        "description": "You are playing a game called Slime Escape. The game takes place on a number\nline. Initially, there are \n    n\n slimes. For all positive integers \n    i\n\nwhere \n    1 \n    \u2264 i \n    \u2264 n\n, the \n    i\n-th slime is located at position\n\n    i\n and has health \n    a_i\n. You are controlling the slime at position\n\n    k\n. There are two escapes located at positions \n    0\n and \n    n+1\n.\nYour goal is to reach any one of the two escapes by performing any number of\ngame moves. In one game move, you move your slime to the left or right by one\nposition. However, if there is another slime in the new position, you must\nabsorb it. When absorbing a slime, the health of your slime would be increased\nby the health of the absorbed slime, then the absorbed slime would be removed\nfrom the game. Note that some slimes might have negative health, so your\nhealth would decrease when absorbing such slimes. You lose the game\nimmediately if your slime has negative health at any moment during the game.\nCan you reach one of two escapes by performing any number of game moves,\nwithout ever losing the game? Input Each test contains multiple test cases.\nThe first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    20\n     000\n) \u2014 the number of test cases. Description of the test cases\nfollows. The first line of each test case contains two positive integers\n\n    n\n, \n    k\n (\n    3 \n    \u2264 n \n    \u2264 200\n     000\n, \n    1 \n    \u2264 k \n    \u2264\n    n\n) \u2014 the number of slimes and the position of your slime. The second line\nof each test case contains \n    n\n integers, \n    a_1, a_2, \n    \u2026, a_n\n\n(\n    -10^9 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the health of the slimes. It is\nguaranteed that health of your slime is non-negative (\n    a_k \n    \u2265 0\n), and\nall other slimes have non-zero health (\n    a_i \n     0\n for \n    i \n     k\n).\nIt is guaranteed that the sum of \n    n\n over all test cases does not exceed\n\n    200\n     000\n. Output For each test case, print \"YES\" (without quotes) if\nyou can escape without losing, and \"NO\" (without quotes) otherwise. Example\nInput 6 7 4 -1 -2 -3 6 -2 -3 -1 3 1 232 -500 -700 7 4 -1 -2 -4 6 -2 -4 -1 8 4\n-100 10 -7 6 -2 -3 6 -10 8 2 -999 0 -2 3 4 5 6 7 7 3 7 3 3 4 2 1 1 Output YES\nYES NO YES NO YES Note In the first test case, you control the slime at\nposition \n    4\n with health \n    6\n. One way to escape is to absorb the\nslimes at positions \n    5\n, \n    6\n, and \n    7\n. Your slime escapes with\n\n    0\n health at position \n    8\n. In the second test case, you control the\nslime with \n    232\n health at position \n    1\n. Since your slime is already\nlocated next to the escape at position \n    0\n, you can move to it without\nabsorbing any slime. In the third test case, it can be shown that your slime\nwould always have a negative health before reaching any one of two escapes. In\nthe fourth test case, you control the slime at position \n    4\n with health\n\n    6\n. The following describes a possible sequence of moves to win: Absorb\nthe slimes at positions \n    5\n, \n    6\n, and \n    7\n: your health becomes\n\n    4\n after absorbing the slime with health \n    -2\n; becomes \n    1\n after\nabsorbing the slime with health \n    -3\n; and becomes \n    7\n after absorbing\nthe slime with health \n    6\n. Absorb the slimes at positions \n    3\n, and\n\n    2\n: your health becomes \n    7-7+10=10\n. Absorb the slime at position\n\n    8\n: your health becomes \n    10-10=0\n. Use the escape at position\n\n    9\n. Since your slime has maintained non-negative health at all times, you\nhave won.\n\n",
        "cf_contest_id": 1734,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n7 4\r\n-1 -2 -3 6 -2 -3 -1\r\n3 1\r\n232 -500 -700\r\n7 4\r\n-1 -2 -4 6 -2 -4 -1\r\n8 4\r\n-100 10 -7 6 -2 -3 6 -10\r\n8 2\r\n-999 0 -2 3 4 5 6 7\r\n7 3\r\n7 3 3 4 2 1 1\r\n",
                "YES\r\nYES\r\nNO\r\nYES\r\nNO\r\nYES\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n5 3\r\n-1 -1000000000 1000000000 -1000000000 1\r\n5 3\r\n-3 -1000000000 1000000000 -1000000000 -4\r\n",
                "YES\r\nNO\r\n"
            ]
        ]
    }
]