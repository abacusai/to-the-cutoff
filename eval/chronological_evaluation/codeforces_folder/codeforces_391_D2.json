[
    {
        "name": "Supercollider",
        "description": "This problem consists of two subproblems: for solving subproblem D1 you will\nreceive 3 points, and for solving subproblem D2 you will receive 16 points.\nManao is the chief architect involved in planning a new supercollider. He has\nto identify a plot of land where the largest possible supercollider can be\nbuilt. The supercollider he is building requires four-way orthogonal\ncollisions of particles traveling at the same speed, so it will consist of\nfour accelerating chambers and be shaped like a plus sign (i.e., +). Each of\nthe four accelerating chambers must be the same length and must be aligned\nwith the Earth's magnetic field (parallel or orthogonal) to minimize\ninterference. The accelerating chambers need to be laid down across long flat\nstretches of land to keep costs under control. Thus, Manao has already\ncommissioned a topographical study that has identified all possible maximal\nlength tracts of land available for building accelerating chambers that are\neither parallel or orthogonal to the Earth's magnetic field. To build the\nlargest possible supercollider, Manao must identify the largest symmetric plus\nshape from among these candidate tracts. That is, he must find the two tracts\nof land that form an axis-aligned plus shape with the largest distance from\nthe center of the plus to the tip of the shortest of the four arms of the\nplus. Note that the collider need not use the entire length of the tracts\nidentified (see the example in the notes). Input The first line of the input\nwill contain two single-space-separated integers n, the number of north-south\ntracts and m, the number of west-east tracts. Each of the n lines following\nthe first describes a north-south tract. Each such tract is described by three\nsingle-space-separated integers xi, yi, li representing the vertical line\nsegment from (xi, yi) to (xi, yi + li). Similarly, after the n lines\ndescribing north-south tracts follow m similar lines describing the west-east\ntracts. Each such tract is described by three single-space-separated integers\nxi, yi, li representing the horizontal line segment from (xi, yi) to (xi + li,\nyi). All xi and yi are between -100000000 and 100000000, inclusive. All li are\nbetween 1 and 100000000, inclusive. No pair of horizontal segments will touch\nor intersect, and no pair of vertical segments will touch or intersect. The\nproblem consists of two subproblems. The subproblems have different\nconstraints on the input. You will get some score for the correct submission\nof the subproblem. The description of the subproblems follows. In subproblem\nD1 (3 points), n and m will be between 1 and 1000, inclusive. In subproblem D2\n(16 points), n and m will be between 1 and 50000, inclusive. Output Print one\nline containing a single integer, the size of the largest supercollider that\ncan be built on one north-south tract and one west-east tract. The size of the\nsupercollider is defined to be the length of one of the four accelerating\nchambers. In other words, the size of the resulting supercollider is defined\nto be the distance from the intersection of the two line segments to the\nclosest endpoint of either of the two segments. If no pair of north-south and\nwest-east tracts intersects, it is not possible to build a supercollider and\nthe program should report a maximum size of zero. Examples Input 1 2 4 0 9 1 1\n8 1 2 7 Output 2 Note Consider the example. There is one vertical line segment\nfrom (4, 0) to (4, 9) and two horizontal line segments: from (1, 1) to (9, 1)\nand from (1, 2) to (8, 2). The largest plus shape that can be found among\nthese segments is formed from the only vertical segment and the second of\nhorizontal segments, and is centered at (4, 2). The program should output 2\nbecause the closest end point of those segments to the center is (4, 0), which\nis distance 2 from the center point of (4, 2). The collider will be formed by\nthe line segments from (2, 2) to (6, 2) and from (4, 0) to (4, 4).\n\n",
        "cf_contest_id": 391,
        "cf_index": "D2",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 2\r\n4 0 9\r\n1 1 8\r\n1 2 7\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 4\r\n0 0 10\r\n1 0 6\r\n2 -2 4\r\n5 7 13\r\n10 16 15\r\n0 0 11\r\n0 -4 13\r\n-2 -5 19\r\n2 7 5\r\n",
                "2\r\n"
            ],
            [
                "4 1\r\n0 -5 2\r\n0 0 2\r\n0 5 2\r\n0 -10 2\r\n1 1 1\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\n-100000000 -100000000 100000000\r\n100000000 -100000000 100000000\r\n-100000000 100000000 100000000\r\n100000000 100000000 100000000\r\n-100000000 -100000000 100000000\r\n100000000 -100000000 100000000\r\n-100000000 100000000 100000000\r\n100000000 100000000 100000000\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n0 0 100000000\r\n-50000000 50000000 100000000\r\n",
                "50000000\r\n"
            ],
            [
                "3 2\r\n0 0 1\r\n1 0 1\r\n0 2 1\r\n0 0 1\r\n-1 -1 1\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n0 0 100000000\r\n-50000000 50000000 99999999\r\n",
                "49999999\r\n"
            ],
            [
                "1 1\r\n0 0 99999999\r\n-50000000 50000000 100000000\r\n",
                "49999999\r\n"
            ],
            [
                "1 1\r\n0 0 100000000\r\n-49999999 50000000 99999999\r\n",
                "49999999\r\n"
            ],
            [
                "1 1\r\n0 0 99999999\r\n-49999999 50000000 99999999\r\n",
                "49999999\r\n"
            ],
            [
                "1 1\r\n0 0 100000000\r\n-49999999 49999999 99999999\r\n",
                "49999999\r\n"
            ],
            [
                "1 1\r\n0 0 99999998\r\n-49999999 50000000 99999999\r\n",
                "49999998\r\n"
            ]
        ]
    }
]