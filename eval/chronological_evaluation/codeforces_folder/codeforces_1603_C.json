[
    {
        "name": "Extreme Extension",
        "description": "For an array \n    b\n of \n    n\n integers, the extreme value of this array is\nthe minimum number of times (possibly, zero) the following operation has to be\nperformed to make \n    b\n non-decreasing: Select an index \n    i\n such that\n\n    1 \n    \u2264 i \n    \u2264 |b|\n, where \n    |b|\n is the current length of \n    b\n.\nReplace \n    b_i\n with two elements \n    x\n and \n    y\n such that \n    x\n and\n\n    y\n both are positive integers and \n    x + y = b_i\n. This way, the array\n\n    b\n changes and the next operation is performed on this modified array.\nFor example, if \n    b = [2, 4, 3]\n and index \n    2\n gets selected, then the\npossible arrays after this operation are \n    [2, \n    1,\n    \n    3, 3]\n, \n    [2, \n    2, \n    2, 3]\n, or\n\n    [2, \n    3, \n    1, 3]\n. And consequently, for this\narray, this single operation is enough to make it non-decreasing: \n    [2, 4, 3]\n    \n    \u2192 [2, \n    2, \n    2, 3]\n. It's easy to see\nthat every array of positive integers can be made non-decreasing this way.\nYouKn0wWho has an array \n    a\n of \n    n\n integers. Help him find the sum of\nextreme values of all nonempty subarrays of \n    a\n modulo\n\n    998\n     244\n     353\n. If a subarray appears in \n    a\n multiple times, its\nextreme value should be counted the number of times it appears. An array\n\n    d\n is a subarray of an array \n    c\n if \n    d\n can be obtained from\n\n    c\n by deletion of several (possibly, zero or all) elements from the\nbeginning and several (possibly, zero or all) elements from the end. Input The\nfirst line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n     000\n)\n\u2014 the number of test cases. The first line of each test case contains a single\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n). The second line of each test\ncase contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 10^5\n). It is guaranteed that the sum of \n    n\n over all test cases\ndoesn't exceed \n    10^5\n. Output For each test case, print a single integer \u2014\nthe sum of extreme values of all subarrays of \n    a\n modulo\n\n    998\n     244\n     353\n. Example Input 4 3 5 4 3 4 3 2 1 4 1 69 8 7264 40515\n28226 92776 35285 21709 75124 48163 Output 5 9 0 117 Note Let \n    f(l, r)\n\ndenote the extreme value of \n    [a_l, a_l+1, \n    \u2026, a_r]\n. In the first\ntest case, \n    f(1, 3) = 3\n, because YouKn0wWho can perform the following\noperations on the subarray \n    [5, 4, 3]\n (the newly inserted elements are\nunderlined):\n    [5, 4, 3] \n    \u2192 [\n    3, \n    2, 4,\n    3] \n    \u2192 [3, 2, \n    2, \n    2, 3] \n    \u2192\n    [\n    1, \n    2, 2, 2, 2, 3]\n; \n    f(1, 2) = 1\n, because\n\n    [5, 4] \n    \u2192 [\n    2, \n    3, 4]\n; \n    f(2, 3) =\n    1\n, because \n    [4, 3] \n    \u2192 [\n    1, \n    3,\n    3]\n; \n    f(1, 1) = f(2, 2) = f(3, 3) = 0\n, because they are already non-\ndecreasing. So the total sum of extreme values of all subarrays of \n    a = 3 +\n    1 + 1 + 0 + 0 + 0 = 5\n.\n\n",
        "cf_contest_id": 1603,
        "cf_index": "C",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3\r\n5 4 3\r\n4\r\n3 2 1 4\r\n1\r\n69\r\n8\r\n7264 40515 28226 92776 35285 21709 75124 48163\r\n",
                "5\r\n9\r\n0\r\n117\r\n"
            ]
        ],
        "private_cases": []
    }
]