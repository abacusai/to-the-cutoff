[
    {
        "name": "Wonderful Permutation",
        "description": "God's Blessing on This PermutationForces! A Random Pebble You are given a\npermutation \n    p_1,p_2,\n    \u2026,p_n\n of length \n    n\n and a positive\ninteger \n    k \n    \u2264 n\n. In one operation you can choose two indices \n    i\n\nand \n    j\n (\n    1 \n    \u2264 i < j \n    \u2264 n\n) and swap \n    p_i\n with \n    p_j\n.\nFind the minimum number of operations needed to make the sum \n    p_1 + p_2 +\n    \n    \u2026 + p_k\n as small as possible. A permutation is an array consisting\nof \n    n\n distinct integers from \n    1\n to \n    n\n in arbitrary order. For\nexample, \n    [2,3,1,5,4]\n is a permutation, but \n    [1,2,2]\n is not a\npermutation (\n    2\n appears twice in the array) and \n    [1,3,4]\n is also not\na permutation (\n    n=3\n but there is \n    4\n in the array). Input Each test\ncontains multiple test cases. The first line contains the number of test cases\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n). Description of the test cases follows.\nThe first line of each test case contains two integers \n    n\n and \n    k\n\n(\n    1 \n    \u2264 k \n    \u2264 n \n    \u2264 100\n). The second line of each test case\ncontains \n    n\n integers \n    p_1,p_2,\n    \u2026,p_n\n (\n    1 \n    \u2264 p_i \n    \u2264\n    n\n). It is guaranteed that the given numbers form a permutation of length\n\n    n\n. Output For each test case print one integer \u2014 the minimum number of\noperations needed to make the sum \n    p_1 + p_2 + \n    \u2026 + p_k\n as small as\npossible. Example Input 4 3 1 2 3 1 3 3 1 2 3 4 2 3 4 1 2 1 1 1 Output 1 0 2 0\nNote In the first test case, the value of \n    p_1 + p_2 + \n    \u2026 + p_k\n is\ninitially equal to \n    2\n, but the smallest possible value is \n    1\n. You\ncan achieve it by swapping \n    p_1\n with \n    p_3\n, resulting in the\npermutation \n    [1, 3, 2]\n. In the second test case, the sum is already as\nsmall as possible, so the answer is \n    0\n.\n\n",
        "cf_contest_id": 1712,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3 1\r\n2 3 1\r\n3 3\r\n1 2 3\r\n4 2\r\n3 4 1 2\r\n1 1\r\n1\r\n",
                "1 0 2 0 "
            ]
        ],
        "private_cases": []
    }
]