[
    {
        "name": "Trails and Glades",
        "description": "Vasya went for a walk in the park. The park has n glades, numbered from 1 to\nn. There are m trails between the glades. The trails are numbered from 1 to m,\nwhere the i-th trail connects glades xi and yi. The numbers of the connected\nglades may be the same (xi = yi), which means that a trail connects a glade to\nitself. Also, two glades may have several non-intersecting trails between\nthem. Vasya is on glade 1, he wants to walk on all trails of the park exactly\nonce, so that he can eventually return to glade 1. Unfortunately, Vasya does\nnot know whether this walk is possible or not. Help Vasya, determine whether\nthe walk is possible or not. If such walk is impossible, find the minimum\nnumber of trails the authorities need to add to the park in order to make the\ndescribed walk possible. Vasya can shift from one trail to another one only on\nglades. He can move on the trails in both directions. If Vasya started going\non the trail that connects glades a and b, from glade a, then he must finish\nthis trail on glade b. Input The first line contains two integers n and m (1 \u2264\nn \u2264 10^6; 0 \u2264 m \u2264 10^6) \u2014 the number of glades in the park and the number of\ntrails in the park, respectively. Next m lines specify the trails. The i-th\nline specifies the i-th trail as two space-separated numbers, xi, yi (1 \u2264 xi,\nyi \u2264 n) \u2014 the numbers of the glades connected by this trail. Output Print the\nsingle integer \u2014 the answer to the problem. If Vasya's walk is possible\nwithout adding extra trails, print 0, otherwise print the minimum number of\ntrails the authorities need to add to the park in order to make Vasya's walk\npossible. Examples Input 3 3 1 2 2 3 3 1 Output 0 Input 2 5 1 1 1 2 1 2 2 2 1\n2 Output 1 Note In the first test case the described walk is possible without\nbuilding extra trails. For example, let's first go on the first trail, then on\nthe second one, and finally on the third one. In the second test case the\ndescribed walk is impossible without adding extra trails. To make the walk\npossible, it is enough to add one trail, for example, between glades number\none and two.\n\n",
        "cf_contest_id": 209,
        "cf_index": "C",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dsu",
            "graphs",
            "greedy"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n1 2\r\n2 3\r\n3 1\r\n",
                "0"
            ],
            [
                "2 5\r\n1 1\r\n1 2\r\n1 2\r\n2 2\r\n1 2\r\n",
                "1"
            ]
        ],
        "private_cases": [
            [
                "5 10\r\n3 3\r\n4 4\r\n4 1\r\n2 1\r\n4 3\r\n3 4\r\n5 4\r\n2 4\r\n1 5\r\n1 1\r\n",
                "1"
            ],
            [
                "5 10\r\n3 2\r\n1 4\r\n1 3\r\n5 2\r\n4 4\r\n4 5\r\n5 4\r\n4 5\r\n1 1\r\n1 3\r\n",
                "1"
            ],
            [
                "5 10\r\n2 3\r\n5 4\r\n1 5\r\n5 2\r\n5 3\r\n2 1\r\n4 1\r\n1 1\r\n2 1\r\n2 1\r\n",
                "1"
            ],
            [
                "5 10\r\n5 5\r\n2 5\r\n4 2\r\n4 4\r\n1 5\r\n4 2\r\n4 5\r\n2 2\r\n2 2\r\n4 3\r\n",
                "2"
            ],
            [
                "10 10\r\n3 10\r\n7 3\r\n7 10\r\n2 5\r\n3 4\r\n7 6\r\n5 5\r\n7 6\r\n7 2\r\n2 5\r\n",
                "3"
            ],
            [
                "10 10\r\n3 6\r\n2 8\r\n6 7\r\n2 6\r\n4 8\r\n1 4\r\n2 2\r\n4 8\r\n2 7\r\n8 2\r\n",
                "2"
            ],
            [
                "10 10\r\n1 8\r\n6 9\r\n8 2\r\n6 2\r\n6 5\r\n3 10\r\n2 3\r\n10 9\r\n7 8\r\n7 1\r\n",
                "2"
            ],
            [
                "10 0\r\n",
                "0"
            ],
            [
                "1 0\r\n",
                "0"
            ],
            [
                "100 30\r\n94 37\r\n56 32\r\n93 71\r\n89 7\r\n99 20\r\n56 42\r\n76 2\r\n48 91\r\n71 17\r\n43 12\r\n87 15\r\n62 90\r\n79 94\r\n36 51\r\n82 16\r\n67 65\r\n95 89\r\n49 16\r\n38 19\r\n16 56\r\n84 45\r\n10 76\r\n71 85\r\n25 95\r\n23 89\r\n91 17\r\n9 17\r\n83 83\r\n15 91\r\n50 26\r\n",
                "21"
            ],
            [
                "1 1\r\n1 1\r\n",
                "0"
            ],
            [
                "2 1\r\n1 2\r\n",
                "1"
            ],
            [
                "2 0\r\n",
                "0"
            ],
            [
                "2 2\r\n1 2\r\n2 1\r\n",
                "0"
            ],
            [
                "2 2\r\n1 1\r\n2 2\r\n",
                "2"
            ],
            [
                "3 2\r\n1 1\r\n2 3\r\n",
                "2"
            ],
            [
                "3 3\r\n1 1\r\n2 3\r\n3 2\r\n",
                "2"
            ],
            [
                "2 1\r\n1 1\r\n",
                "0"
            ],
            [
                "5 3\r\n1 2\r\n3 4\r\n5 5\r\n",
                "3"
            ],
            [
                "10 8\r\n1 2\r\n2 3\r\n3 1\r\n4 5\r\n5 4\r\n6 7\r\n8 8\r\n9 9\r\n",
                "5"
            ],
            [
                "7 3\r\n2 3\r\n4 5\r\n6 7\r\n",
                "4"
            ],
            [
                "1000000 1\r\n999999 999999\r\n",
                "2"
            ],
            [
                "6 6\r\n1 2\r\n3 4\r\n5 6\r\n5 6\r\n3 4\r\n1 2\r\n",
                "3"
            ],
            [
                "7 6\r\n1 2\r\n3 4\r\n5 6\r\n5 6\r\n3 4\r\n1 2\r\n",
                "3"
            ],
            [
                "8 6\r\n7 2\r\n3 4\r\n5 6\r\n5 6\r\n3 4\r\n7 2\r\n",
                "4"
            ],
            [
                "100 0\r\n",
                "0"
            ],
            [
                "99 0\r\n",
                "0"
            ],
            [
                "2 1\r\n1 1\r\n",
                "0"
            ],
            [
                "2 1\r\n2 2\r\n",
                "2"
            ],
            [
                "2 2\r\n2 2\r\n2 2\r\n",
                "2"
            ],
            [
                "2 2\r\n1 1\r\n1 1\r\n",
                "0"
            ],
            [
                "2 3\r\n1 1\r\n1 2\r\n2 2\r\n",
                "1"
            ],
            [
                "8 7\r\n1 2\r\n1 2\r\n3 4\r\n3 4\r\n5 6\r\n5 6\r\n7 8\r\n",
                "4"
            ],
            [
                "10 0\r\n",
                "0"
            ],
            [
                "3 2\r\n1 2\r\n1 2\r\n",
                "0"
            ],
            [
                "3 2\r\n2 3\r\n2 3\r\n",
                "2"
            ],
            [
                "3 1\r\n2 3\r\n",
                "2"
            ],
            [
                "5 0\r\n",
                "0"
            ],
            [
                "9 8\r\n2 3\r\n3 4\r\n4 5\r\n5 2\r\n6 7\r\n7 8\r\n8 9\r\n6 9\r\n",
                "3"
            ],
            [
                "10 1\r\n5 5\r\n",
                "2"
            ],
            [
                "100 4\r\n2 2\r\n3 4\r\n3 4\r\n4 5\r\n",
                "3"
            ],
            [
                "10 1\r\n2 2\r\n",
                "2"
            ],
            [
                "4 3\r\n2 3\r\n3 4\r\n2 4\r\n",
                "2"
            ],
            [
                "4 3\r\n2 3\r\n2 4\r\n3 4\r\n",
                "2"
            ]
        ]
    }
]