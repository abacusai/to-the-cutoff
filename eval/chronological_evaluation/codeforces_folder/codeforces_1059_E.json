[
    {
        "name": "Split the Tree",
        "description": "You are given a rooted tree on \n    n\n vertices, its root is the vertex number\n\n    1\n. The \n    i\n-th vertex contains a number \n    w_i\n. Split it into the\nminimum possible number of vertical paths in such a way that each path\ncontains no more than \n    L\n vertices and the sum of integers \n    w_i\n on\neach path does not exceed \n    S\n. Each vertex should belong to exactly one\npath. A vertical path is a sequence of vertices \n    v_1, v_2, \n    \u2026, v_k\n\nwhere \n    v_i\n (\n    i \n    \u2265 2\n) is the parent of \n    v_i - 1\n. Input The\nfirst line contains three integers \n    n\n, \n    L\n, \n    S\n (\n    1 \n    \u2264 n\n    \n    \u2264 10^5\n, \n    1 \n    \u2264 L \n    \u2264 10^5\n, \n    1 \n    \u2264 S \n    \u2264 10^18\n) \u2014\nthe number of vertices, the maximum number of vertices in one path and the\nmaximum sum in one path. The second line contains \n    n\n integers \n    w_1,\n    w_2, \n    \u2026, w_n\n (\n    1 \n    \u2264 w_i \n    \u2264 10^9\n) \u2014 the numbers in the\nvertices of the tree. The third line contains \n    n - 1\n integers \n    p_2,\n    \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i < i\n), where \n    p_i\n is the parent of the\n\n    i\n-th vertex in the tree. Output Output one number \u2014 the minimum number\nof vertical paths. If it is impossible to split the tree, output \n    -1\n.\nExamples Input 3 1 3 1 2 3 1 1 Output 3 Input 3 3 6 1 2 3 1 1 Output 2 Input 1\n1 10000 10001 Output -1 Note In the first sample the tree is split into\n\n    1\n    \n    ,\n     \n    \n    2\n    \n    ,\n     \n    \n    3\n. In the second sample the\ntree is split into \n    1,\n     2\n    \n    ,\n     \n    \n    3\n or \n    1,\n    3\n    \n    ,\n     \n    \n    2\n. In the third sample it is impossible to split the\ntree.\n\n",
        "cf_contest_id": 1059,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 1 3\r\n1 2 3\r\n1 1\r\n",
                "3"
            ],
            [
                "3 3 6\r\n1 2 3\r\n1 1\r\n",
                "2"
            ],
            [
                "1 1 10000\r\n10001\r\n",
                "-1"
            ]
        ],
        "private_cases": [
            [
                "3 2 3\r\n1 2 3\r\n1 1\r\n",
                "2"
            ],
            [
                "6 3 100\r\n1 100 1 1 1 1\r\n1 1 2 3 3\r\n",
                "4"
            ],
            [
                "2 1 1\r\n1 1\r\n1\r\n",
                "2"
            ],
            [
                "2 100000 1000000000000000000\r\n1000000000 1000000000\r\n1\r\n",
                "1"
            ],
            [
                "3 3 2200000000\r\n1000000000 1000000000 1000000000\r\n1 2\r\n",
                "2"
            ],
            [
                "7 2 91648\r\n7 3 6 2 5 4 1\r\n1 1 1 1 3 2\r\n",
                "4"
            ],
            [
                "2 2 8\r\n8 1\r\n1\r\n",
                "2"
            ],
            [
                "1 100000 1\r\n1\r\n",
                "1"
            ]
        ]
    }
]