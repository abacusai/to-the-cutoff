[
    {
        "name": "Roads",
        "description": "The government of Treeland wants to build a new road network. There are\n\n    2N\n cities in Treeland. The unfinished plan of the road network already\ncontains \n    N\n road segments, each of which connects two cities with a\nstraight line. No two road segments have a common point (including their\nendpoints). Your task is to determine \n    N-1\n additional road segments\nsatisfying the following conditions: Every new road segment must connect two\ncities with a straight line. If two segments (new or old) have a common point,\nthen this point must be an endpoint of both segments. The road network\nconnects all cities: for each pair of cities there is a path consisting of\nsegments that connects the two cities. Input The first line of the standard\ninput contains \n    N\n (\n    2 \n    \u2264 N \n    \u2264 10^5\n) \u2013 the number of\nexisting road segments. Each of the following \n    N\n lines contains four\nintegers: \n    x_1,y_1, x_2, y_2\n, where \n    (x_1, y_1)\n and \n    (x_2, y_2)\n\nare the coordinates of the endpoints of the segment \n    (-10^7 \n    \u2264\n    x_i,y_i\n    \u2264 10^7)\n. Output The standard output must contain \n    N-1\n\nlines, each of them containing four integers, \n    x_1, y_1, x_2, y_2\n, where\n\n    (x_1,y_1)\n and \n    (x_2, y_2)\n are the coordinates of the cities that\nare the endpoints of a new road segment. If there are multiple solutions, your\nprogram may output any of them. Scoring \n    [                                                     ;                                                     ;                                              Subtask                                                     ;                                               Points                                                     ;                                          Constraints; ; ;                                                     ;                                                    1                                                    0                                                     ;                                              samples; ; ;                                                     ;                                                    2                                                   15                                                     ;                     all input segments are\n    vertical.; ; ;                                                     ;                                                    3                                                   15                                                     ;            each pair of input segments are\n    parallel.; ; ;                                                     ;                                                    4                                                   15                                                     ; each input segment is either\n    horizontal or vertical.; ; ;                                                     ;                                                    5                                                   15                                                    N;                                                 \u2264 10;                                                  000; ; ;                                                     ;                                                    6                                                   40                                                     ;                            no additional constraints; ; ;                                                     ;                                                     ;  ]\n Example Input 5 1 3 3 6 5 1 5 3 3 3 6 5 2 1 4 1 2 3 4 2\nOutput 2 1 1 3 2 3 2 1 3 3 2 3 5 1 4 2 Note\n\n",
        "cf_contest_id": 1402,
        "cf_index": "B",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "geometry",
            "sortings"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]