[
    {
        "name": "Almost Permutation",
        "description": "Recently Ivan noticed an array a while debugging his code. Now Ivan can't\nremember this array, but the bug he was trying to fix didn't go away, so Ivan\nthinks that the data from this array might help him to reproduce the bug. Ivan\nclearly remembers that there were n elements in the array, and each element\nwas not less than 1 and not greater than n. Also he remembers q facts about\nthe array. There are two types of facts that Ivan remembers: 1 li ri vi \u2014 for\neach x such that li \u2264 x \u2264 ri ax \u2265 vi; 2 li ri vi \u2014 for each x such that li \u2264 x\n\u2264 ri ax \u2264 vi. Also Ivan thinks that this array was a permutation, but he is\nnot so sure about it. He wants to restore some array that corresponds to the q\nfacts that he remembers and is very similar to permutation. Formally, Ivan has\ndenoted the cost of array as follows: , where cnt(i) is the number of\noccurences of i in the array. Help Ivan to determine minimum possible cost of\nthe array that corresponds to the facts! Input The first line contains two\ninteger numbers n and q (1 \u2264 n \u2264 50, 0 \u2264 q \u2264 100). Then q lines follow, each\nrepresenting a fact about the array. i-th line contains the numbers ti, li, ri\nand vi for i-th fact (1 \u2264 ti \u2264 2, 1 \u2264 li \u2264 ri \u2264 n, 1 \u2264 vi \u2264 n, ti denotes the\ntype of the fact). Output If the facts are controversial and there is no array\nthat corresponds to them, print -1. Otherwise, print minimum possible cost of\nthe array. Examples Input 3 0 Output 3 Input 3 1 1 1 3 2 Output 5 Input 3 2 1\n1 3 2 2 1 3 2 Output 9 Input 3 2 1 1 3 2 2 1 3 1 Output -1\n\n",
        "cf_contest_id": 863,
        "cf_index": "F",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "flows"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 0\r\n",
                "3\r\n"
            ],
            [
                "3 1\r\n1 1 3 2\r\n",
                "5\r\n"
            ],
            [
                "3 2\r\n1 1 3 2\r\n2 1 3 2\r\n",
                "9\r\n"
            ],
            [
                "3 2\r\n1 1 3 2\r\n2 1 3 1\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "50 0\r\n",
                "50\r\n"
            ],
            [
                "50 1\r\n2 31 38 25\r\n",
                "50\r\n"
            ],
            [
                "50 2\r\n2 38 41 49\r\n1 19 25 24\r\n",
                "50\r\n"
            ],
            [
                "50 10\r\n2 4 24 29\r\n1 14 49 9\r\n2 21 29 12\r\n2 2 46 11\r\n2 4 11 38\r\n2 3 36 8\r\n1 24 47 28\r\n2 23 40 32\r\n1 16 50 38\r\n1 31 49 38\r\n",
                "-1\r\n"
            ],
            [
                "50 20\r\n1 14 22 40\r\n1 23 41 3\r\n1 32 39 26\r\n1 8 47 25\r\n2 5 13 28\r\n2 2 17 32\r\n1 23 30 37\r\n1 33 45 49\r\n2 13 27 43\r\n1 30 32 2\r\n2 28 49 40\r\n2 33 35 32\r\n2 5 37 30\r\n1 45 45 32\r\n2 6 24 24\r\n2 28 44 16\r\n2 36 47 24\r\n1 5 11 9\r\n1 9 37 22\r\n1 28 40 24\r\n",
                "-1\r\n"
            ],
            [
                "50 1\r\n1 12 38 31\r\n",
                "64\r\n"
            ],
            [
                "50 2\r\n2 6 35 37\r\n1 19 46 44\r\n",
                "-1\r\n"
            ],
            [
                "50 10\r\n1 17 44 44\r\n2 32 40 4\r\n2 1 45 31\r\n1 27 29 16\r\n1 8 9 28\r\n2 1 34 16\r\n2 16 25 2\r\n2 17 39 32\r\n1 16 35 34\r\n1 1 28 12\r\n",
                "-1\r\n"
            ],
            [
                "50 20\r\n1 44 48 43\r\n1 15 24 9\r\n2 39 44 25\r\n1 36 48 35\r\n1 4 30 27\r\n1 31 44 15\r\n2 19 38 22\r\n2 18 43 24\r\n1 25 35 10\r\n2 38 43 5\r\n2 10 22 21\r\n2 5 19 30\r\n1 17 35 26\r\n1 17 31 10\r\n2 9 21 1\r\n2 29 34 10\r\n2 25 44 21\r\n2 13 33 13\r\n2 34 38 9\r\n2 23 43 4\r\n",
                "-1\r\n"
            ],
            [
                "50 1\r\n2 12 34 9\r\n",
                "88\r\n"
            ],
            [
                "50 2\r\n1 15 16 17\r\n2 12 35 41\r\n",
                "50\r\n"
            ],
            [
                "50 10\r\n2 31 38 4\r\n2 33 43 1\r\n2 33 46 21\r\n2 37 48 17\r\n1 12 46 33\r\n2 25 44 43\r\n1 12 50 2\r\n1 15 35 18\r\n2 9 13 35\r\n1 2 25 28\r\n",
                "-1\r\n"
            ],
            [
                "50 20\r\n1 7 49 43\r\n1 10 18 42\r\n2 10 37 24\r\n1 45 46 24\r\n2 5 36 33\r\n2 17 40 20\r\n1 22 30 7\r\n1 5 49 25\r\n2 18 49 21\r\n1 43 49 39\r\n2 9 25 23\r\n1 10 19 47\r\n2 36 48 10\r\n1 25 30 50\r\n1 15 49 13\r\n1 10 17 33\r\n2 8 33 7\r\n2 28 36 34\r\n2 40 40 16\r\n1 1 17 31\r\n",
                "-1\r\n"
            ],
            [
                "1 0\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "50 1\r\n2 1 2 1\r\n",
                "52\r\n"
            ],
            [
                "50 2\r\n2 1 33 1\r\n2 14 50 1\r\n",
                "2500\r\n"
            ],
            [
                "49 10\r\n2 17 19 14\r\n1 6 46 9\r\n2 19 32 38\r\n2 27 31 15\r\n2 38 39 17\r\n1 30 36 14\r\n2 35 41 8\r\n1 18 23 32\r\n2 8 35 13\r\n2 24 32 45\r\n",
                "-1\r\n"
            ],
            [
                "49 7\r\n1 17 44 13\r\n1 14 22 36\r\n1 27 39 3\r\n2 20 36 16\r\n2 29 31 49\r\n1 32 40 10\r\n2 4 48 48\r\n",
                "-1\r\n"
            ],
            [
                "50 8\r\n2 11 44 10\r\n2 2 13 2\r\n2 23 35 41\r\n1 16 28 17\r\n2 21 21 46\r\n1 22 39 43\r\n2 10 29 34\r\n1 17 27 22\r\n",
                "-1\r\n"
            ],
            [
                "5 2\r\n1 1 2 4\r\n1 3 5 5\r\n",
                "13\r\n"
            ],
            [
                "4 3\r\n2 1 2 2\r\n1 2 2 2\r\n2 3 4 1\r\n",
                "8\r\n"
            ],
            [
                "5 2\r\n1 1 5 4\r\n2 3 5 4\r\n",
                "13\r\n"
            ],
            [
                "42 16\r\n2 33 37 36\r\n1 14 18 1\r\n2 24 25 9\r\n2 4 34 29\r\n2 32 33 8\r\n2 27 38 23\r\n2 1 1 7\r\n2 15 42 35\r\n2 37 42 17\r\n2 8 13 4\r\n2 19 21 40\r\n2 37 38 6\r\n2 33 38 18\r\n2 12 40 26\r\n2 27 42 38\r\n2 40 40 30\r\n",
                "64\r\n"
            ],
            [
                "7 3\r\n2 1 2 2\r\n1 3 7 2\r\n2 3 7 3\r\n",
                "17\r\n"
            ],
            [
                "29 5\r\n2 4 9 27\r\n1 25 29 14\r\n1 9 10 18\r\n2 13 13 5\r\n2 1 19 23\r\n",
                "29\r\n"
            ],
            [
                "3 6\r\n1 1 1 2\r\n2 1 1 2\r\n1 2 2 2\r\n2 2 2 2\r\n1 3 3 2\r\n2 3 3 3\r\n",
                "5\r\n"
            ],
            [
                "7 14\r\n1 1 1 1\r\n2 1 1 6\r\n1 2 2 1\r\n2 2 2 5\r\n1 3 3 1\r\n2 3 3 6\r\n1 4 4 5\r\n2 4 4 7\r\n1 5 5 1\r\n2 5 5 2\r\n1 6 6 2\r\n2 6 6 2\r\n1 7 7 5\r\n2 7 7 5\r\n",
                "7\r\n"
            ],
            [
                "8 16\r\n1 1 1 2\r\n2 1 1 3\r\n1 2 2 6\r\n2 2 2 8\r\n1 3 3 1\r\n2 3 3 2\r\n1 4 4 3\r\n2 4 4 3\r\n1 5 5 1\r\n2 5 5 2\r\n1 6 6 2\r\n2 6 6 5\r\n1 7 7 3\r\n2 7 7 3\r\n1 8 8 3\r\n2 8 8 3\r\n",
                "16\r\n"
            ]
        ]
    }
]