[
    {
        "name": "Flowers and Chocolate",
        "description": "It's Piegirl's birthday soon, and Pieguy has decided to buy her a bouquet of\nflowers and a basket of chocolates. The flower shop has F different types of\nflowers available. The i-th type of flower always has exactly pi petals.\nPieguy has decided to buy a bouquet consisting of exactly N flowers. He may\nbuy the same type of flower multiple times. The N flowers are then arranged\ninto a bouquet. The position of the flowers within a bouquet matters. You can\nthink of a bouquet as an ordered list of flower types. The chocolate shop\nsells chocolates in boxes. There are B different types of boxes available. The\ni-th type of box contains ci pieces of chocolate. Pieguy can buy any number of\nboxes, and can buy the same type of box multiple times. He will then place\nthese boxes into a basket. The position of the boxes within the basket\nmatters. You can think of the basket as an ordered list of box types. Pieguy\nknows that Piegirl likes to pluck a petal from a flower before eating each\npiece of chocolate. He would like to ensure that she eats the last piece of\nchocolate from the last box just after plucking the last petal from the last\nflower. That is, the total number of petals on all the flowers in the bouquet\nshould equal the total number of pieces of chocolate in all the boxes in the\nbasket. How many different bouquet+basket combinations can Pieguy buy? The\nanswer may be very large, so compute it modulo 1000000007 = 10^9 + 7. Input\nThe first line of input will contain integers F, B, and N (1 \u2264 F \u2264 10, 1 \u2264 B \u2264\n100, 1 \u2264 N \u2264 10^18), the number of types of flowers, the number of types of\nboxes, and the number of flowers that must go into the bouquet, respectively.\nThe second line of input will contain F integers p1, p2, ..., pF (1 \u2264 pi \u2264\n10^9), the numbers of petals on each of the flower types. The third line of\ninput will contain B integers c1, c2, ..., cB (1 \u2264 ci \u2264 250), the number of\npieces of chocolate in each of the box types. Output Print the number of\nbouquet+basket combinations Pieguy can buy, modulo 1000000007 = 10^9 + 7.\nExamples Input 2 3 3 3 5 10 3 7 Output 17 Input 6 5 10 9 3 3 4 9 9 9 9 1 6 4\nOutput 31415926 Note In the first example, there is 1 way to make a bouquet\nwith 9 petals (3 + 3 + 3), and 1 way to make a basket with 9 pieces of\nchocolate (3 + 3 + 3), for 1 possible combination. There are 3 ways to make a\nbouquet with 13 petals (3 + 5 + 5, 5 + 3 + 5, 5 + 5 + 3), and 5 ways to make a\nbasket with 13 pieces of chocolate (3 + 10, 10 + 3, 3 + 3 + 7, 3 + 7 + 3, 7 +\n3 + 3), for 15 more combinations. Finally there is 1 way to make a bouquet\nwith 15 petals (5 + 5 + 5) and 1 way to make a basket with 15 pieces of\nchocolate (3 + 3 + 3 + 3 + 3), for 1 more combination. Note that it is\npossible for multiple types of flowers to have the same number of petals. Such\ntypes are still considered different. Similarly different types of boxes may\ncontain the same number of pieces of chocolate, but are still considered\ndifferent.\n\n",
        "cf_contest_id": 865,
        "cf_index": "G",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "math",
            "matrices"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 3 3\r\n3 5\r\n10 3 7\r\n",
                "17\r\n"
            ],
            [
                "6 5 10\r\n9 3 3 4 9 9\r\n9 9 1 6 4\r\n",
                "31415926\r\n"
            ]
        ],
        "private_cases": [
            [
                "8 2 1\r\n7 10 12 15 29 34 36 38\r\n1 1\r\n",
                "314159265\r\n"
            ],
            [
                "10 1 4484891659\r\n1 2 3 4 5 6 7 8 9 10\r\n1\r\n",
                "314159265\r\n"
            ],
            [
                "1 100 1\r\n5365669\r\n250 190 178 74 65 223 225 45 84 222 55 89 164 10 234 210 165 23 185 200 182 53 94 60 146 32 63 62 11 107 131 144 149 59 70 66 134 111 71 120 166 12 136 177 246 199 194 121 145 156 187 91 216 124 99 237 90 230 141 157 26 201 18 97 173 37 211 214 8 181 244 7 87 33 155 218 75 138 67 228 46 69 41 78 169 4 118 79 139 112 227 196 96 115 117 56 158 110 179 114\r\n",
                "314159265\r\n"
            ],
            [
                "10 100 864691128455135231\r\n536870911 805306367 939524095 939523967 937426943 805298175 788529151 804782079 939523839 805306363\r\n182 152 228 37 107 239 168 211 179 6 90 68 118 16 190 13 93 199 241 60 105 181 80 7 218 184 78 176 221 172 45 11 67 217 174 191 4 85 34 215 230 145 1 75 231 52 153 146 22 149 216 2 83 225 42 84 10 194 104 212 159 143 121 201 242 170 197 175 167 188 200 236 233 120 56 131 108 59 53 54 185 29 214 77 49 82 95 220 158 139 130 208 81 100 223 25 20 205 128 250\r\n",
                "582337624\r\n"
            ],
            [
                "9 52 881371880336470888\r\n634074578 642802746 740396295 773386884 579721198 396628655 503722503 971207868 202647942\r\n6 218 248 227 88 43 18 33 62 119 212 230 106 102 54 174 45 191 99 171 209 66 106 182 6 61 214 16 126 169 50 137 79 150 90 81 27 65 250 183 112 75 226 177 198 216 11 146 4 178 246 211\r\n",
                "635311469\r\n"
            ],
            [
                "9 96 621306592075475634\r\n804928248 476927808 284875072 503158867 627937890 322595515 786026685 645468307 669240390\r\n97 197 25 144 219 56 36 82 207 147 221 159 213 60 25 35 61 61 75 250 250 203 215 90 235 136 247 27 227 80 35 91 222 187 106 75 145 20 160 222 147 99 168 161 85 87 116 154 220 91 35 239 114 121 158 44 55 170 61 137 66 24 245 164 109 134 51 126 132 63 153 33 246 247 223 44 145 232 249 114 144 98 151 228 57 160 18 152 119 240 126 203 105 223 153 192\r\n",
                "121663555\r\n"
            ],
            [
                "7 37 584613336374288891\r\n535590429 751244358 124321145 232930851 266089174 543529670 773363571\r\n247 238 141 189 144 61 133 56 8 27 205 233 230 42 24 19 246 88 182 182 243 20 145 135 15 144 169 7 189 137 20 194 170 250 218 67 21\r\n",
                "699167651\r\n"
            ],
            [
                "1 81 547920080673102149\r\n561219907\r\n111 114 230 117 29 50 140 231 27 168 159 124 106 114 26 76 158 10 240 221 73 227 13 199 40 52 220 98 140 21 78 98 149 228 176 248 75 163 155 204 157 105 83 109 177 145 150 30 230 48 6 142 209 33 18 71 138 18 159 102 118 102 182 41 195 142 205 209 108 48 188 229 213 207 49 246 183 179 109 134 170\r\n",
                "886701643\r\n"
            ],
            [
                "9 21 287854792412106895\r\n291882089 564718673 358502890 837699009 657489855 690430685 632939232 373282330 398630021\r\n118 159 232 41 20 114 202 20 156 38 103 47 180 197 234 14 161 172 242 165 228\r\n",
                "603644863\r\n"
            ],
            [
                "9 70 251161541005887448\r\n757703054 544067926 902981667 712695184 295641139 911364840 620276118 902318577 865222469\r\n220 138 43 208 243 126 220 11 97 124 112 226 195 155 205 113 223 88 160 197 65 90 250 106 108 173 151 73 14 142 171 9 93 168 206 189 17 21 127 76 108 246 106 111 186 229 228 191 57 194 79 158 134 71 194 97 85 102 157 90 139 217 142 43 80 123 47 116 88 33\r\n",
                "599812932\r\n"
            ],
            [
                "7 22 991096248449924898\r\n783332532 378192988 592684636 147499872 343857831 837331700 197547597\r\n17 66 60 72 70 125 123 127 238 218 96 152 75 63 52 114 176 224 35 17 136 218\r\n",
                "176974567\r\n"
            ],
            [
                "5 63 954402997043705451\r\n513994713 652509537 432130709 317463343 687041819\r\n105 29 207 60 150 109 131 42 38 139 210 209 48 133 143 196 159 130 90 39 156 137 112 34 1 159 159 161 68 73 127 195 112 225 245 168 28 39 79 223 49 146 104 121 179 195 194 33 164 221 176 4 21 120 204 168 93 97 218 94 225 74 108\r\n",
                "839513920\r\n"
            ],
            [
                "9 7 694337708782710197\r\n539624191 631858791 976609486 752268030 30225807 279200011 467188665 630132600 594612100\r\n195 246 158 209 10 139 229\r\n",
                "542950823\r\n"
            ],
            [
                "8 18 624045669640274071\r\n983359971 71550121 96204862 799843967 446173607 796619138 402690754 223219513\r\n87 249 123 87 137 147 167 76 167 250 12 203 76 106 228 234 227 121\r\n",
                "214421258\r\n"
            ],
            [
                "1 1 1\r\n1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1 1 1000000000000000000\r\n37\r\n23\r\n",
                "0\r\n"
            ],
            [
                "1 1 1000000000000000000\r\n100003\r\n250\r\n",
                "1\r\n"
            ]
        ]
    }
]