[
    {
        "name": "Treasure Island",
        "description": "Our brave travelers reached an island where pirates had buried treasure.\nHowever as the ship was about to moor, the captain found out that some rat ate\na piece of the treasure map. The treasure map can be represented as a\nrectangle n \u00d7 m in size. Each cell stands for an islands' square (the square's\nside length equals to a mile). Some cells stand for the sea and they are\nimpenetrable. All other cells are penetrable (i.e. available) and some of them\ncontain local sights. For example, the large tree on the hills or the cave in\nthe rocks. Besides, the map also has a set of k instructions. Each instruction\nis in the following form: \"Walk n miles in the y direction\" The possible\ndirections are: north, south, east, and west. If you follow these instructions\ncarefully (you should fulfill all of them, one by one) then you should reach\nexactly the place where treasures are buried. Unfortunately the captain\ndoesn't know the place where to start fulfilling the instructions \u2014 as that\nvery piece of the map was lost. But the captain very well remembers that the\nplace contained some local sight. Besides, the captain knows that the whole\nway goes through the island's penetrable squares. The captain wants to know\nwhich sights are worth checking. He asks you to help him with that. Input The\nfirst line contains two integers n and m (3 \u2264 n, m \u2264 1000). Then follow n\nlines containing m integers each \u2014 the island map's description. \"#\" stands\nfor the sea. It is guaranteed that all cells along the rectangle's perimeter\nare the sea. \".\" stands for a penetrable square without any sights and the\nsights are marked with uppercase Latin letters from \"A\" to \"Z\". Not all\nalphabet letters can be used. However, it is guaranteed that at least one of\nthem is present on the map. All local sights are marked by different letters.\nThe next line contains number k (1 \u2264 k \u2264 10^5), after which k lines follow.\nEach line describes an instruction. Each instruction possesses the form \"dir\nlen\", where dir stands for the direction and len stands for the length of the\nway to walk. dir can take values \"N\", \"S\", \"W\" and \"E\" for North, South, West\nand East correspondingly. At that, north is to the top, South is to the\nbottom, west is to the left and east is to the right. len is an integer from 1\nto 1000. Output Print all local sights that satisfy to the instructions as a\nstring without any separators in the alphabetical order. If no sight fits,\nprint \"no solution\" without the quotes. Examples Input 6 10 ##########\n#K#..##### #.#..##.## #..L.#...# ###D###A.# ########## 4 N 2 S 1 E 1 W 2\nOutput AD Input 3 4 #### #.A# #### 2 W 1 N 2 Output no solution\n\n",
        "cf_contest_id": 106,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 10\r\n##########\r\n#K#..#####\r\n#.#..##.##\r\n#..L.#...#\r\n###D###A.#\r\n##########\r\n4\r\nN 2\r\nS 1\r\nE 1\r\nW 2\r\n",
                "AD"
            ],
            [
                "3 4\r\n####\r\n#.A#\r\n####\r\n2\r\nW 1\r\nN 2\r\n",
                "no solution\r\n"
            ]
        ],
        "private_cases": [
            [
                "6 6\r\n######\r\n#UPWT#\r\n#KJSL#\r\n#VCMA#\r\n#QOGB#\r\n######\r\n5\r\nN 1\r\nW 1\r\nS 1\r\nE 1\r\nN 1\r\n",
                "ABCGJLMOS"
            ],
            [
                "3 3\r\n###\r\n#A#\r\n###\r\n1\r\nN 1\r\n",
                "no solution\r\n"
            ],
            [
                "7 8\r\n########\r\n#..#O.##\r\n##U#YTI#\r\n##.#####\r\n##R.E.P#\r\n###W#Q##\r\n########\r\n2\r\nN 1\r\nW 1\r\n",
                "QTUW"
            ],
            [
                "9 4\r\n####\r\n#AB#\r\n#C.#\r\n##.#\r\n#D.#\r\n#E.#\r\n#F.#\r\n#G.#\r\n####\r\n1\r\nN 3\r\n",
                "G"
            ],
            [
                "9 4\r\n####\r\n#AB#\r\n#C.#\r\n##.#\r\n#D.#\r\n#E.#\r\n#F.#\r\n#G.#\r\n####\r\n1\r\nS 3\r\n",
                "BD"
            ]
        ]
    }
]