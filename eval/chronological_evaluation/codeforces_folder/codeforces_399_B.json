[
    {
        "name": "Red and Blue Balls",
        "description": "User ainta has a stack of n red and blue balls. He can apply a certain\noperation which changes the colors of the balls inside the stack. While the\ntop ball inside the stack is red, pop the ball from the top of the stack. Then\nreplace the blue ball on the top with a red ball. And finally push some blue\nballs to the stack until the stack has total of n balls inside. If there are\nno blue balls inside the stack, ainta can't apply this operation. Given the\ninitial state of the stack, ainta wants to know the maximum number of\noperations he can repeatedly apply. Input The first line contains an integer n\n(1 \u2264 n \u2264 50) \u2014 the number of balls inside the stack. The second line contains\na string s (|s| = n) describing the initial state of the stack. The i-th\ncharacter of the string s denotes the color of the i-th ball (we'll number the\nballs from top to bottom of the stack). If the character is \"R\", the color is\nred. If the character is \"B\", the color is blue. Output Print the maximum\nnumber of operations ainta can repeatedly apply. Please, do not write the \nspecifier to read or write 64-bit integers in \u0421++. It is preferred to use the\ncin, cout streams or the \n4 RBBR Output 6 Input 5 RBBRR Output 6 Note The first example is depicted\nbelow. The explanation how user ainta applies the first operation. He pops out\none red ball, changes the color of the ball in the middle from blue to red,\nand pushes one blue ball. The explanation how user ainta applies the second\noperation. He will not pop out red balls, he simply changes the color of the\nball on the top from blue to red. From now on, ainta can't apply any operation\nbecause there are no blue balls inside the stack. ainta applied two\noperations, so the answer is 2. The second example is depicted below. The blue\narrow denotes a single operation.\n\n",
        "cf_contest_id": 399,
        "cf_index": "B",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 0.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\nRBR\r\n",
                "2\r\n"
            ],
            [
                "4\r\nRBBR\r\n",
                "6\r\n"
            ],
            [
                "5\r\nRBBRR\r\n",
                "6\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\nRBRBR\r\n",
                "10\r\n"
            ],
            [
                "10\r\nRRBRRBBRRR\r\n",
                "100\r\n"
            ],
            [
                "10\r\nBRBRRRRRRR\r\n",
                "5\r\n"
            ],
            [
                "10\r\nBRRRRRRRRR\r\n",
                "1\r\n"
            ],
            [
                "20\r\nBRBRRRRRRRRRRRRRRRRR\r\n",
                "5\r\n"
            ],
            [
                "30\r\nRRBBBBBBBBBBBBBBBBBBBBBBBBBBBB\r\n",
                "1073741820\r\n"
            ],
            [
                "50\r\nBRRRBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\r\n",
                "1125899906842609\r\n"
            ],
            [
                "20\r\nRRRBRBBBBBRRRRRRRRRR\r\n",
                "1000\r\n"
            ],
            [
                "20\r\nRRBRBBBBBRRRRRRRRRRR\r\n",
                "500\r\n"
            ],
            [
                "1\r\nR\r\n",
                "0\r\n"
            ],
            [
                "1\r\nB\r\n",
                "1\r\n"
            ],
            [
                "2\r\nRR\r\n",
                "0\r\n"
            ],
            [
                "2\r\nBR\r\n",
                "1\r\n"
            ],
            [
                "50\r\nRRRRRRRRRRBBBBBBRRBBRRRBRRBBBRRRRRRRRRRRRRRRRRRRRR\r\n",
                "479001600\r\n"
            ],
            [
                "50\r\nRBRRRRRBRBRRBBBBBBRRRBRRRRRBBBRRBRRRRRBBBRRRRRRRRR\r\n",
                "1929382195842\r\n"
            ],
            [
                "48\r\nRBRBRRRRBRBRRBRRRRRRRBBBRRBRBRRRBBRRRRRRRRRRRRRR\r\n",
                "13235135754\r\n"
            ],
            [
                "30\r\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\r\n",
                "0\r\n"
            ],
            [
                "50\r\nRRBBBBBBBBBBBBBBBBRBRRBBBRBBRBBBRRBRBBBBBRBBRBBRBR\r\n",
                "402373705727996\r\n"
            ],
            [
                "50\r\nBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\r\n",
                "1125899906842623\r\n"
            ],
            [
                "19\r\nRRRRRBRRBRRRRBRBBBB\r\n",
                "500000\r\n"
            ],
            [
                "32\r\nBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBR\r\n",
                "2147483647\r\n"
            ],
            [
                "3\r\nBBB\r\n",
                "7\r\n"
            ],
            [
                "3\r\nBBR\r\n",
                "3\r\n"
            ],
            [
                "3\r\nBRB\r\n",
                "5\r\n"
            ],
            [
                "3\r\nBRR\r\n",
                "1\r\n"
            ],
            [
                "3\r\nRBB\r\n",
                "6\r\n"
            ],
            [
                "3\r\nRBR\r\n",
                "2\r\n"
            ],
            [
                "3\r\nRRB\r\n",
                "4\r\n"
            ],
            [
                "3\r\nRRR\r\n",
                "0\r\n"
            ],
            [
                "2\r\nRB\r\n",
                "2\r\n"
            ],
            [
                "2\r\nBB\r\n",
                "3\r\n"
            ]
        ]
    }
]