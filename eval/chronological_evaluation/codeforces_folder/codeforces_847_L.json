[
    {
        "name": "Berland SU Computer Network",
        "description": "In the computer network of the Berland State University there are n routers\nnumbered from 1 to n. Some pairs of routers are connected by patch cords.\nInformation can be transmitted over patch cords in both direction. The network\nis arranged in such a way that communication between any two routers (directly\nor through other routers) is possible. There are no cycles in the network, so\nthere is only one path between each pair of routers over patch cords.\nUnfortunately, the exact topology of the network was lost by administrators.\nIn order to restore it, the following auxiliary information was collected. For\neach patch cord p, directly connected to the router i, list of routers located\nbehind the patch cord p relatively i is known. In other words, all routers\npath from which to the router i goes through p are known. So for each router i\nthere are ki lists, where ki is the number of patch cords connected to i. For\nexample, let the network consists of three routers connected in chain 1 - 2 -\n3. Then: the router 1: for the single patch cord connected to the first router\nthere is a single list containing two routers: 2 and 3; the router 2: for each\nof the patch cords connected to the second router there is a list: one list\ncontains the router 1 and the other \u2014 the router 3; the router 3: for the\nsingle patch cord connected to the third router there is a single list\ncontaining two routers: 1 and 2. Your task is to help administrators to\nrestore the network topology, i. e. to identify all pairs of routers directly\nconnected by a patch cord. Input The first line contains a single integer n (2\n\u2264 n \u2264 1000) \u2014 the number of routers in the network. The i-th of the following\nn lines contains a description of the lists for the router i. The description\nof each list begins with the number of routers in it. Then the symbol ':'\nfollows, and after that the numbers of routers from the list are given. This\nnumbers are separated by comma. Lists are separated by symbol '-'. It is\nguaranteed, that for each router i the total number of routers in its lists\nequals to n - 1 and all the numbers in lists of each router are distinct. For\neach router i lists do not contain the number i. Output Print -1 if no\nsolution exists. In the other case print to the first line n - 1 \u2014 the total\nnumber of patch cords in the network. In each of the following n - 1 lines\nprint two integers \u2014 the routers which are directly connected by a patch cord.\nInformation about each patch cord must be printed exactly once. Patch cords\nand routers can be printed in arbitrary order. Examples Input 3 2:3,2 1:1-1:3\n2:1,2 Output 2 2 1 2 3 Input 5 4:2,5,3,4 1:4-1:1-2:5,3 4:4,5,2,1 4:2,1,3,5\n1:3-3:4,2,1 Output 4 2 1 2 4 5 2 3 5 Input 3 1:2-1:3 1:1-1:3 1:1-1:2 Output -1\nNote The first example is analyzed in the statement. The answer to the second\nexample is shown on the picture. The first router has one list, which contains\nall other routers. The second router has three lists: the first \u2014 the single\nrouter 4, the second \u2014 the single router 1, the third \u2014 two routers 3 and 5.\nThe third router has one list, which contains all other routers. The fourth\nrouter also has one list, which contains all other routers. The fifth router\nhas two lists: the first \u2014 the single router 3, the second \u2014 three routers 1,\n2 and 4.\n\n",
        "cf_contest_id": 847,
        "cf_index": "L",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "hashing",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2:3,2\r\n1:1-1:3\r\n2:1,2\r\n",
                "2\r\n1 2\r\n2 3\r\n"
            ],
            [
                "5\r\n4:2,5,3,4\r\n1:4-1:1-2:5,3\r\n4:4,5,2,1\r\n4:2,1,3,5\r\n1:3-3:4,2,1\r\n",
                "4\r\n1 2\r\n2 4\r\n2 5\r\n3 5\r\n"
            ],
            [
                "3\r\n1:2-1:3\r\n1:1-1:3\r\n1:1-1:2\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1:2\r\n1:1\r\n",
                "1\r\n1 2\r\n"
            ],
            [
                "3\r\n1:3-1:2\r\n2:3,1\r\n2:2,1\r\n",
                "2\r\n1 2\r\n1 3\r\n"
            ],
            [
                "4\r\n1:4-1:2-1:3\r\n3:1,3,4\r\n3:1,4,2\r\n3:1,2,3\r\n",
                "3\r\n1 2\r\n1 3\r\n1 4\r\n"
            ],
            [
                "4\r\n3:3,4,2\r\n1:3-2:1,4\r\n3:1,4,2\r\n2:2,3-1:1\r\n",
                "3\r\n1 4\r\n2 3\r\n2 4\r\n"
            ],
            [
                "5\r\n1:4-1:2-1:3-1:5\r\n4:1,4,5,3\r\n4:2,5,4,1\r\n4:5,3,1,2\r\n4:2,1,3,4\r\n",
                "4\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n"
            ],
            [
                "5\r\n1:4-2:3,5-1:2\r\n4:1,4,3,5\r\n4:2,5,1,4\r\n4:1,3,5,2\r\n3:1,2,4-1:3\r\n",
                "4\r\n1 2\r\n1 4\r\n1 5\r\n3 5\r\n"
            ],
            [
                "5\r\n1:3-1:2-2:4,5\r\n4:1,3,4,5\r\n4:2,4,1,5\r\n3:3,1,2-1:5\r\n4:1,3,4,2\r\n",
                "4\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n"
            ],
            [
                "5\r\n4:2,4,5,3\r\n2:3,5-2:1,4\r\n3:2,4,1-1:5\r\n1:1-3:2,3,5\r\n4:1,4,2,3\r\n",
                "4\r\n1 4\r\n2 3\r\n2 4\r\n3 5\r\n"
            ],
            [
                "5\r\n4:3,5,4,2\r\n4:5,3,4,1\r\n3:4,1,5-1:2\r\n2:3,2-2:1,5\r\n1:1-3:2,3,4\r\n",
                "4\r\n1 5\r\n2 3\r\n3 4\r\n4 5\r\n"
            ],
            [
                "10\r\n2:7,4-2:5,8-1:3-1:6-1:2-2:10,9\r\n9:6,7,3,4,10,8,9,5,1\r\n9:2,1,7,6,9,4,8,10,5\r\n8:5,2,1,3,6,9,10,8-1:7\r\n1:8-8:9,10,2,6,3,1,7,4\r\n9:8,4,1,2,10,9,7,3,5\r\n9:1,3,6,2,9,10,5,8,4\r\n9:5,2,7,3,6,4,10,1,9\r\n9:3,7,6,8,10,5,1,2,4\r\n1:9-8:2,7,3,6,8,5,1,4\r\n",
                "9\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n1 10\r\n4 7\r\n5 8\r\n9 10\r\n"
            ],
            [
                "4\r\n3:2,3,4\r\n1:1-2:3,4\r\n2:1,2-1:4\r\n3:1,2,3\r\n",
                "3\r\n1 2\r\n2 3\r\n3 4\r\n"
            ],
            [
                "4\r\n3:2,3,4\r\n1:1-1:3-1:4\r\n2:1,2-1:4\r\n3:1,2,3\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n3:2,3,4\r\n1:1-2:3,4\r\n1:1-1:2-1:4\r\n3:1,2,3\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n4:3,5,2,4\r\n3:4,3,1-1:5\r\n3:2,1,5-1:4\r\n1:2-2:3,5-1:1\r\n2:4,3-2:1,2\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n1:3-2:4,2\r\n2:3,1-1:4\r\n3:4,2,1\r\n2:2,3-1:1\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n2:2,3-1:4\r\n3:4,3,1\r\n3:2,4,1\r\n1:2-2:1,3\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n3:2,4,3\r\n2:1,4-1:3\r\n2:1,4-1:2\r\n2:1,2-1:3\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n3:2,3,4\r\n1:3-1:4-1:1\r\n1:4-1:1-1:2\r\n1:2-1:3-1:1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n2:3,2\r\n1:1-1:3\r\n1:1-1:2\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n3:2,4,3\r\n3:3,4,1\r\n2:2,1-1:4\r\n2:3,2-1:1\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n1:2-1:4-1:3\r\n3:4,3,1\r\n1:2-1:1-1:4\r\n1:1-1:3-1:2\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n2:4,5-2:2,3\r\n4:1,5,4,3\r\n1:2-3:5,4,1\r\n1:5-3:2,1,3\r\n1:2-3:1,4,3\r\n",
                "-1\r\n"
            ]
        ]
    }
]