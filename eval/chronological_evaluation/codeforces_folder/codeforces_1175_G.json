[
    {
        "name": "Yet Another Partiton Problem",
        "description": "You are given array \n    a_1, a_2, \n    \u2026, a_n\n. You need to split it into\n\n    k\n subsegments (so every element is included in exactly one subsegment).\nThe weight of a subsegment \n    a_l, a_l+1, \n    \u2026, a_r\n is equal to \n    (r\n    - l + 1) \n    \u00b7\n    max\n    _l \n    \u2264 i \n    \u2264 r(a_i)\n. The weight of a\npartition is a total weight of all its segments. Find the partition of minimal\nweight. Input The first line contains two integers \n    n\n and \n    k\n (\n    1\n    \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^4\n, \n    1 \n    \u2264 k \n    \u2264\n    min(100, n)\n) \u2014 the\nlength of the array \n    a\n and the number of subsegments in the partition.\nThe second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1\n    \n    \u2264 a_i \n    \u2264 2 \n    \u00b7 10^4\n) \u2014 the array \n    a\n. Output Print single\ninteger \u2014 the minimal weight among all possible partitions. Examples Input 4 2\n6 1 7 4 Output 25 Input 4 3 6 1 7 4 Output 21 Input 5 4 5 1 5 1 5 Output 21\nNote The optimal partition in the first example is next: \n    6\n \n    1\n\n\n    7\n \n    |\n \n    4\n. The optimal partition in the second example is\nnext: \n    6\n \n    |\n \n    1\n \n    |\n \n    7\n \n    4\n. One of\nthe optimal partitions in the third example is next: \n    5\n \n    |\n\n\n    1\n \n    5\n \n    |\n \n    1\n \n    |\n \n    5\n.\n\n",
        "cf_contest_id": 1175,
        "cf_index": "G",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "divide and conquer",
            "dp",
            "geometry",
            "two pointers"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4 2\r\n6 1 7 4\r\n",
                "25\r\n"
            ],
            [
                "4 3\r\n6 1 7 4\r\n",
                "21\r\n"
            ],
            [
                "5 4\r\n5 1 5 1 5\r\n",
                "21\r\n"
            ]
        ],
        "private_cases": [
            [
                "8 5\r\n163 748 822 239 986 362 972 118\r\n",
                "5122\r\n"
            ],
            [
                "8 7\r\n4 4 6 2 9 8 3 5\r\n",
                "41\r\n"
            ],
            [
                "10 1\r\n3340 6069 11033 9735 10137 1053 4378 10299 19078 4262\r\n",
                "190780\r\n"
            ],
            [
                "10 2\r\n6558 2429 9425 3728 1907 16788 10115 9418 10081 7227\r\n",
                "131065\r\n"
            ],
            [
                "10 3\r\n9777 14598 15114 17721 17870 8332 18956 12728 16892 10191\r\n",
                "169269\r\n"
            ],
            [
                "10 4\r\n12995 18254 803 15905 16937 4067 7798 16038 7895 10051\r\n",
                "142098\r\n"
            ],
            [
                "10 5\r\n13109 3126 19196 9898 8708 15611 9343 15156 14706 13016\r\n",
                "133282\r\n"
            ],
            [
                "10 6\r\n9031 6783 17589 3891 11966 7154 18184 18467 1517 3276\r\n",
                "106960\r\n"
            ],
            [
                "10 7\r\n12250 18951 3277 17883 11033 2889 7026 9073 12520 6240\r\n",
                "115006\r\n"
            ],
            [
                "10 8\r\n19660 11120 5862 11876 6996 14433 15867 8191 19331 9204\r\n",
                "128854\r\n"
            ],
            [
                "10 9\r\n2878 14776 11551 5869 6062 10168 17413 18798 10334 16361\r\n",
                "114403\r\n"
            ],
            [
                "10 10\r\n5554 3504 6888 155 3575 338 2510 8935 11175 7727\r\n",
                "50361\r\n"
            ]
        ]
    }
]