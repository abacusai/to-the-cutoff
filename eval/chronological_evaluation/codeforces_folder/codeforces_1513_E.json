[
    {
        "name": "Cost Equilibrium",
        "description": "An array is called beautiful if all the elements in the array are equal. You\ncan transform an array using the following steps any number of times: Choose\ntwo indices \n    i\n and \n    j\n (\n    1 \n    \u2264 i,j \n    \u2264 n\n), and an integer\n\n    x\n (\n    1 \n    \u2264 x \n    \u2264 a_i\n). Let \n    i\n be the source index and\n\n    j\n be the sink index. Decrease the \n    i\n-th element by \n    x\n, and\nincrease the \n    j\n-th element by \n    x\n. The resulting values at \n    i\n-th\nand \n    j\n-th index are \n    a_i-x\n and \n    a_j+x\n respectively. The cost of\nthis operation is \n    x \n    \u00b7 |j-i|\n. Now the \n    i\n-th index can no\nlonger be the sink and the \n    j\n-th index can no longer be the source. The\ntotal cost of a transformation is the sum of all the costs in step \n    3\n.For\nexample, array \n    [0, 2, 3, 3]\n can be transformed into a beautiful array\n\n    [2, 2, 2, 2]\n with total cost \n    1 \n    \u00b7 |1-3| + 1 \n    \u00b7 |1-4| =\n    5\n. An array is called balanced, if it can be transformed into a beautiful\narray, and the cost of such transformation is uniquely defined. In other\nwords, the minimum cost of transformation into a beautiful array equals the\nmaximum cost. You are given an array \n    a_1, a_2, \n    \u2026, a_n\n of length\n\n    n\n, consisting of non-negative integers. Your task is to find the number\nof balanced arrays which are permutations of the given array. Two arrays are\nconsidered different, if elements at some position differ. Since the answer\ncan be large, output it modulo \n    10^9 + 7\n. Input The first line contains a\nsingle integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the size of the array.\nThe second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0\n    \n    \u2264 a_i \n    \u2264 10^9\n). Output Output a single integer \u2014 the number of\nbalanced permutations modulo \n    10^9+7\n. Examples Input 3 1 2 3 Output 6\nInput 4 0 4 0 4 Output 2 Input 5 0 11 12 13 14 Output 120 Note In the first\nexample, \n    [1, 2, 3]\n is a valid permutation as we can consider the index\nwith value \n    3\n as the source and index with value \n    1\n as the sink.\nThus, after conversion we get a beautiful array \n    [2, 2, 2]\n, and the total\ncost would be \n    2\n. We can show that this is the only transformation of\nthis array that leads to a beautiful array. Similarly, we can check for other\npermutations too. In the second example, \n    [0, 0, 4, 4]\n and \n    [4, 4, 0,\n    0]\n are balanced permutations. In the third example, all permutations are\nbalanced.\n\n",
        "cf_contest_id": 1513,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "constructive algorithms",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 3\r\n",
                "6\r\n"
            ],
            [
                "4\r\n0 4 0 4\r\n",
                "2\r\n"
            ],
            [
                "5\r\n0 11 12 13 14\r\n",
                "120\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n100000\r\n",
                "1\r\n"
            ],
            [
                "3\r\n0 0 3\r\n",
                "3\r\n"
            ]
        ]
    }
]