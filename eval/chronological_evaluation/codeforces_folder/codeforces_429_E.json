[
    {
        "name": "Points and Segments",
        "description": "Iahub isn't well prepared on geometry problems, but he heard that this year\nthere will be a lot of geometry problems on the IOI selection camp. Scared,\nIahub locked himself in the basement and started thinking of new problems of\nthis kind. One of them is the following. Iahub wants to draw n distinct\nsegments [li, ri] on the OX axis. He can draw each segment with either red or\nblue. The drawing is good if and only if the following requirement is met: for\neach point x of the OX axis consider all the segments that contains point x;\nsuppose, that rx red segments and bx blue segments contain point x; for each\npoint x inequality |rx - bx| \u2264 1 must be satisfied. A segment [l, r] contains\na point x if and only if l \u2264 x \u2264 r. Iahub gives you the starting and ending\npoints of all the segments. You have to find any good drawing for him. Input\nThe first line of input contains integer n (1 \u2264 n \u2264 10^5) \u2014 the number of\nsegments. The i-th of the next n lines contains two integers li and ri (0 \u2264 li\n\u2264 ri \u2264 10^9) \u2014 the borders of the i-th segment. It's guaranteed that all the\nsegments are distinct. Output If there is no good drawing for a given test,\noutput a single integer -1. Otherwise output n integers; each integer must be\n0 or 1. The i-th number denotes the color of the i-th segment (0 is red and 1\nis blue). If there are multiple good drawings you can output any of them.\nExamples Input 2 0 2 2 3 Output 0 1 Input 6 1 5 1 3 3 5 2 10 11 11 12 12\nOutput 0 1 0 1 0 0\n\n",
        "cf_contest_id": 429,
        "cf_index": "E",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "graphs"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n0 2\r\n2 3\r\n",
                "0 1 "
            ],
            [
                "6\r\n1 5\r\n1 3\r\n3 5\r\n2 10\r\n11 11\r\n12 12\r\n",
                "0 1 0 1 0 0 "
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 10\r\n4 10\r\n4 9\r\n1 8\r\n6 10\r\n3 10\r\n4 5\r\n0 2\r\n2 3\r\n4 7\r\n",
                "0 1 0 1 0 1 0 1 0 1 "
            ],
            [
                "3\r\n1 3\r\n1 2\r\n2 3\r\n",
                "0 1 1 "
            ],
            [
                "1\r\n7444363 9756385\r\n",
                "0 "
            ]
        ]
    }
]