[
    {
        "name": "Toy Army",
        "description": "The hero of our story, Valera, and his best friend Arcady are still in school,\nand therefore they spend all the free time playing turn-based strategy \"GAGA:\nGo And Go Again\". The gameplay is as follows. There are two armies on the\nplaying field each of which consists of n men (n is always even). The current\nplayer specifies for each of her soldiers an enemy's soldier he will shoot (a\ntarget) and then all the player's soldiers shot simultaneously. This is a game\nworld, and so each soldier shoots perfectly, that is he absolutely always hits\nthe specified target. If an enemy soldier is hit, he will surely die. It may\nhappen that several soldiers had been indicated the same target. Killed\nsoldiers do not participate in the game anymore. The game \"GAGA\" consists of\nthree steps: first Valera makes a move, then Arcady, then Valera again and the\ngame ends. You are asked to calculate the maximum total number of soldiers\nthat may be killed during the game. Input The input data consist of a single\ninteger n (2 \u2264 n \u2264 10^8, n is even). Please note that before the game starts\nthere are 2n soldiers on the fields. Output Print a single number \u2014 a maximum\ntotal number of soldiers that could be killed in the course of the game in\nthree turns. Examples Input 2 Output 3 Input 4 Output 6 Note The first sample\ntest: 1) Valera's soldiers 1 and 2 shoot at Arcady's soldier 1. 2) Arcady's\nsoldier 2 shoots at Valera's soldier 1. 3) Valera's soldier 1 shoots at\nArcady's soldier 2. There are 3 soldiers killed in total: Valera's soldier 1\nand Arcady's soldiers 1 and 2.\n\n",
        "cf_contest_id": 84,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n",
                "3"
            ],
            [
                "4\r\n",
                "6"
            ]
        ],
        "private_cases": [
            [
                "6\r\n",
                "9"
            ],
            [
                "8\r\n",
                "12"
            ],
            [
                "10\r\n",
                "15"
            ],
            [
                "140\r\n",
                "210"
            ],
            [
                "500\r\n",
                "750"
            ],
            [
                "1000\r\n",
                "1500"
            ],
            [
                "2000\r\n",
                "3000"
            ],
            [
                "50000\r\n",
                "75000"
            ],
            [
                "10000\r\n",
                "15000"
            ],
            [
                "25460\r\n",
                "38190"
            ],
            [
                "54646\r\n",
                "81969"
            ],
            [
                "59790\r\n",
                "89685"
            ],
            [
                "578456\r\n",
                "867684"
            ],
            [
                "56798056\r\n",
                "85197084"
            ],
            [
                "8457980\r\n",
                "12686970"
            ],
            [
                "5687986\r\n",
                "8531979"
            ],
            [
                "10984932\r\n",
                "16477398"
            ],
            [
                "99999994\r\n",
                "149999991"
            ],
            [
                "99999996\r\n",
                "149999994"
            ],
            [
                "99999998\r\n",
                "149999997"
            ],
            [
                "100000000\r\n",
                "150000000"
            ]
        ]
    }
]