[
    {
        "name": "The Good Array",
        "description": "You are given two integers \n    n\n and \n    k\n. An array \n    a_1, a_2,\n    \n    \u2026, a_n\n of length \n    n\n, consisting of zeroes and ones is good if\nfor all integers \n    i\n from \n    1\n to \n    n\n both of the following\nconditions are satisfied: at least \n    \u2308\n    i/k\n    \u2309\n of\nthe first \n    i\n elements of \n    a\n are equal to \n    1\n, at least\n\n    \u2308\n    i/k\n    \u2309\n of the last \n    i\n elements of \n    a\n\nare equal to \n    1\n. Here, \n    \u2308\n    i/k\n    \u2309\n denotes the\nresult of division of \n    i\n by \n    k\n, rounded up. For example, \n    \u2308\n    6/3\n    \u2309 = 2\n, \n    \u2308\n    11/5\n    \u2309 = \n    \u2308\n    2.2 \n    \u2309 = 3\n and \n    \u2308\n    7/4\n    \u2309 = \n    \u2308 1.75\n    \n    \u2309 = 2\n. Find the minimum possible number of ones in a good array.\nInput Each test contains multiple test cases. The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The\nonly line of each test case contains two integers \n    n\n, \n    k\n (\n    2 \n    \u2264\n    n \n    \u2264 100\n, \n    1 \n    \u2264 k \n    \u2264 n\n) \u2014 the length of array and parameter\n\n    k\n from the statement. Output For each test case output one integer \u2014 the\nminimum possible number of ones in a good array. It can be shown that under\nthe given constraints at least one good array always exists. Example Input 7 3\n2 5 2 9 3 7 1 10 4 9 5 8 8 Output 2 3 4 7 4 3 2 Note In the first test case,\n\n    n = 3\n and \n    k = 2\n: Array \n    [ \n      1, 0, 1 \n      ]\n is good and the\nnumber of ones in it is \n    2\n. Arrays \n    [ \n      0, 0, 0 \n      ]\n, \n    [ \n     \n    0, 1, 0 \n      ]\n and \n    [ \n      0, 0, 1 \n      ]\n are not good since for\n\n    i=1\n the first condition from the statement is not satisfied. Array \n    [\n    \n      1, 0, 0 \n      ]\n is not good since for \n    i=1\n the second condition\nfrom the statement is not satisfied. All other arrays of length \n    3\n\ncontain at least \n    2\n ones. Thus, the answer is \n    2\n. In the second test\ncase, \n    n = 5\n and \n    k = 2\n: Array \n    [ \n      1, 1, 0, 0, 1 \n      ]\n is\nnot good since for \n    i=3\n the second condition is not satisfied. Array \n    [\n    \n      1, 0, 1, 0, 1 \n      ]\n is good and the number of ones in it is \n    3\n.\nIt can be shown that there is no good array with less than \n    3\n ones, so\nthe answer is \n    3\n. In the third test case, \n    n = 9\n and \n    k = 3\n:\nArray \n    [ \n      1, 0, 1, 0, 0, 0, 1, 0, 1 \n      ]\n is good and the number of\nones in it is \n    4\n. It can be shown that there is no good array with less\nthan \n    4\n ones, so the answer is \n    4\n. In the fourth test case, \n    n =\n    7\n and \n    k = 1\n. The only good array is \n    [ \n      1, 1, 1, 1, 1, 1, 1\n     \n    ]\n, so the answer is \n    7\n.\n\n",
        "cf_contest_id": 1839,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n3 2\r\n5 2\r\n9 3\r\n7 1\r\n10 4\r\n9 5\r\n8 8\r\n",
                "2\r\n3\r\n4\r\n7\r\n4\r\n3\r\n2\r\n"
            ]
        ],
        "private_cases": []
    }
]