[
    {
        "name": "Strange Instructions",
        "description": "Dasha has \n    10^100\n coins. Recently, she found a binary string \n    s\n of\nlength \n    n\n and some operations that allows to change this string (she can\ndo each operation any number of times): Replace substring 00 of \n    s\n by 0\nand receive \n    a\n coins. Replace substring 11 of \n    s\n by 1 and receive\n\n    b\n coins. Remove 0 from any position in \n    s\n and pay \n    c\n coins. It\nturned out that while doing this operations Dasha should follow the rule: It\nis forbidden to do two operations with the same parity in a row. Operations\nare numbered by integers \n    1\n-\n    3\n in the order they are given above.\nPlease, calculate what is the maximum profit Dasha can get by doing these\noperations and following this rule. Input The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The\nfirst line of each test case contains four integers \n    n\n, \n    a\n, \n    b\n,\n\n    c\n (\n    1 \n    \u2264 n \n    \u2264 10^5, 1 \n    \u2264 a, b, c \n    \u2264 10^9\n). The\nsecond line of each test case contains a binary string \n    s\n of length\n\n    n\n. It is guaranteed that the total sum of \n    n\n over all test cases\ndoesn't exceed \n    2 \n    \u00b7 10^5\n. Output For each test case print the\nanswer. Example Input 3 5 2 2 1 01101 6 4 3 5 110001 6 3 2 1 011110 Output 3\n11 4 Note In the first test case one of the optimal sequences of operations is\n01101 \n    \u2192\n 0101 \n    \u2192\n 011 \n    \u2192\n 01.\nThis sequence of operations consists of operations \n    2\n, \n    3\n and\n\n    2\n in this order. It satisfies all rules and gives profit \n    3\n. It can\nbe shown that it is impossible to achieve higher profit in this test case, so\nthe answer is \n    3\n. In the second test case one of the optimal sequences of\noperations is 110001 \n    \u2192\n 11001 \n    \u2192\n 1001\n\n    \u2192\n 101. In the third test case one of the optimal sequences\nof operations is 011110 \n    \u2192\n 01110 \n    \u2192\n 1110\n\n    \u2192\n 110 \n    \u2192\n 11 \n    \u2192\n 1.\n\n",
        "cf_contest_id": 1621,
        "cf_index": "F",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n5 2 2 1\r\n01101\r\n6 4 3 5\r\n110001\r\n6 3 2 1\r\n011110\r\n",
                "3\r\n11\r\n4\r\n"
            ]
        ],
        "private_cases": []
    }
]