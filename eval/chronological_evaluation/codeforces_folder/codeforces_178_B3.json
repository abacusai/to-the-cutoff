[
    {
        "name": "Greedy Merchants",
        "description": "In ABBYY a wonderful Smart Beaver lives. This time, he began to study history.\nWhen he read about the Roman Empire, he became interested in the life of\nmerchants. The Roman Empire consisted of n cities numbered from 1 to n. It\nalso had m bidirectional roads numbered from 1 to m. Each road connected two\ndifferent cities. Any two cities were connected by no more than one road. We\nsay that there is a path between cities c1 and c2 if there exists a finite\nsequence of cities t1, t2, ..., tp (p \u2265 1) such that: t1 = c1 tp = c2 for any\ni (1 \u2264 i < p), cities ti and ti + 1 are connected by a road We know that there\nexisted a path between any two cities in the Roman Empire. In the Empire k\nmerchants lived numbered from 1 to k. For each merchant we know a pair of\nnumbers si and li, where si is the number of the city where this merchant's\nwarehouse is, and li is the number of the city where his shop is. The shop and\nthe warehouse could be located in different cities, so the merchants had to\ndeliver goods from the warehouse to the shop. Let's call a road important for\nthe merchant if its destruction threatens to ruin the merchant, that is,\nwithout this road there is no path from the merchant's warehouse to his shop.\nMerchants in the Roman Empire are very greedy, so each merchant pays a tax (1\ndinar) only for those roads which are important for him. In other words, each\nmerchant pays di dinars of tax, where di (di \u2265 0) is the number of roads\nimportant for the i-th merchant. The tax collection day came in the Empire.\nThe Smart Beaver from ABBYY is very curious by nature, so he decided to count\nhow many dinars each merchant had paid that day. And now he needs your help.\nInput The first input line contains two integers n and m, separated by a\nspace, n is the number of cities, and m is the number of roads in the empire.\nThe following m lines contain pairs of integers ai, bi (1 \u2264 ai, bi \u2264 n, ai \u2260\nbi), separated by a space \u2014 the numbers of cities connected by the i-th road.\nIt is guaranteed that any two cities are connected by no more than one road\nand that there exists a path between any two cities in the Roman Empire. The\nnext line contains a single integer k \u2014 the number of merchants in the empire.\nThe following k lines contain pairs of integers si, li (1 \u2264 si, li \u2264 n),\nseparated by a space, \u2014 si is the number of the city in which the warehouse of\nthe i-th merchant is located, and li is the number of the city in which the\nshop of the i-th merchant is located. The input limitations for getting 20\npoints are: 1 \u2264 n \u2264 200 1 \u2264 m \u2264 200 1 \u2264 k \u2264 200 The input limitations for\ngetting 50 points are: 1 \u2264 n \u2264 2000 1 \u2264 m \u2264 2000 1 \u2264 k \u2264 2000 The input\nlimitations for getting 100 points are: 1 \u2264 n \u2264 10^5 1 \u2264 m \u2264 10^5 1 \u2264 k \u2264 10^5\nOutput Print exactly k lines, the i-th line should contain a single integer di\n\u2014 the number of dinars that the i-th merchant paid. Examples Input 7 8 1 2 2 3\n3 4 4 5 5 6 5 7 3 5 4 7 4 1 5 2 4 2 6 4 7 Output 2 1 2 0 Note The given sample\nis illustrated in the figure below. Let's describe the result for the first\nmerchant. The merchant's warehouse is located in city 1 and his shop is in\ncity 5. Let us note that if either road, (1, 2) or (2, 3) is destroyed, there\nwon't be any path between cities 1 and 5 anymore. If any other road is\ndestroyed, the path will be preserved. That's why for the given merchant the\nanswer is 2.\n\n",
        "cf_contest_id": 178,
        "cf_index": "B3",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 8\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n5 7\r\n3 5\r\n4 7\r\n4\r\n1 5\r\n2 4\r\n2 6\r\n4 7\r\n",
                "2\r\n1\r\n2\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 5\r\n5 1\r\n5 4\r\n4 3\r\n5 2\r\n3 2\r\n10\r\n3 4\r\n2 2\r\n5 4\r\n5 3\r\n3 5\r\n5 1\r\n5 3\r\n3 4\r\n2 3\r\n3 4\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "20 25\r\n7 20\r\n7 6\r\n6 4\r\n6 2\r\n7 3\r\n20 8\r\n15 8\r\n3 14\r\n6 1\r\n5 3\r\n12 6\r\n2 16\r\n8 11\r\n17 5\r\n14 18\r\n19 14\r\n12 13\r\n10 18\r\n9 18\r\n15 7\r\n11 17\r\n11 14\r\n8 16\r\n1 13\r\n6 19\r\n34\r\n20 6\r\n20 14\r\n10 9\r\n19 10\r\n7 9\r\n4 7\r\n20 19\r\n11 13\r\n7 20\r\n5 12\r\n12 18\r\n13 17\r\n2 11\r\n17 13\r\n9 16\r\n20 15\r\n6 5\r\n12 1\r\n8 17\r\n16 20\r\n4 5\r\n18 14\r\n13 2\r\n1 3\r\n17 14\r\n10 11\r\n7 18\r\n8 20\r\n17 14\r\n9 8\r\n9 10\r\n6 11\r\n7 15\r\n15 10\r\n",
                "0\r\n0\r\n2\r\n2\r\n2\r\n1\r\n0\r\n0\r\n0\r\n0\r\n1\r\n0\r\n0\r\n0\r\n2\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n1\r\n0\r\n0\r\n0\r\n2\r\n1\r\n0\r\n0\r\n2\r\n2\r\n0\r\n0\r\n2\r\n"
            ]
        ]
    }
]