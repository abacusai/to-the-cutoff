[
    {
        "name": "A New Beginning",
        "description": "Annie has gotten bored of winning every coding contest and farming unlimited\nrating. Today, she is going to farm potatoes instead. Annie's garden is an\ninfinite 2D plane. She has \n    n\n potatoes to plant, and the \n    i\n-th\npotato must be planted at \n    (x_i,y_i)\n. Starting at the point \n    (0, 0)\n,\nAnnie begins walking, in one step she can travel one unit right or up\n(increasing her \n    x\n or \n    y\n coordinate by \n    1\n respectively). At any\npoint \n    (X,Y)\n during her walk she can plant some potatoes at arbitrary\npoints using her potato gun, consuming \n    max(|X-x|,|Y-y|)\n units of\nenergy in order to plant a potato at \n    (x,y)\n. Find the minimum total\nenergy required to plant every potato. Note that Annie may plant any number of\npotatoes from any point. Input The first line contains the integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 800\n     000\n). The next \n    n\n lines contain two\nintegers \n    x_i\n and \n    y_i\n (\n    0 \n    \u2264 x_i,y_i \n    \u2264 10^9\n),\nrepresenting the location of the \n    i\n-th potato. It is possible that some\npotatoes should be planted in the same location. Output Print the minimum\ntotal energy to plant all potatoes. Examples Input 2 1 1 2 2 Output 0 Input 2\n1 1 2 0 Output 1 Input 3 5 5 7 7 4 9 Output 2 Input 10 5 1 4 0 9 6 0 2 10 1 9\n10 3 10 0 10 8 9 1 5 Output 19 Input 10 1 1 2 2 2 0 4 2 4 0 2 0 0 2 4 0 4 2 5\n1 Output 6 Note In example \n    1\n, Annie can travel to each spot directly and\nplant a potato with no energy required. In example \n    2\n, moving to\n\n    (1,0)\n, Annie plants the second potato using \n    1\n energy. Next, she\ntravels to \n    (1,1)\n and plants the first potato with \n    0\n energy.\n\n",
        "cf_contest_id": 1534,
        "cf_index": "G",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "geometry",
            "sortings"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1 1\r\n2 2\r\n",
                "0"
            ],
            [
                "2\r\n1 1\r\n2 0\r\n",
                "1"
            ],
            [
                "3\r\n5 5\r\n7 7\r\n4 9\r\n",
                "2"
            ],
            [
                "10\r\n5 1\r\n4 0\r\n9 6\r\n0 2\r\n10 1\r\n9 10\r\n3 10\r\n0 10\r\n8 9\r\n1 5\r\n",
                "19"
            ],
            [
                "10\r\n1 1\r\n2 2\r\n2 0\r\n4 2\r\n4 0\r\n2 0\r\n0 2\r\n4 0\r\n4 2\r\n5 1\r\n",
                "6"
            ]
        ],
        "private_cases": [
            [
                "12\r\n0 0\r\n1000000000 1000000000\r\n0 1000000000\r\n0 999999999\r\n0 999999998\r\n0 999999997\r\n0 999999996\r\n1000000000 0\r\n999999999 0\r\n999999998 0\r\n999999997 0\r\n999999996 0\r\n",
                "4999999990"
            ],
            [
                "14\r\n100 100\r\n100 101\r\n100 102\r\n101 102\r\n100 102\r\n100 102\r\n9000 8000\r\n9000 8100\r\n9000 8101\r\n9008 8101\r\n9008 8088\r\n4000 20000\r\n4000 20001\r\n4001 20000\r\n",
                "15015"
            ],
            [
                "12\r\n40 0\r\n4 0\r\n41 0\r\n40 0\r\n50 0\r\n80 0\r\n8000 0\r\n16000 1\r\n17000 1\r\n30000 2\r\n200000 11\r\n200400 888888\r\n",
                "0"
            ],
            [
                "16\r\n100 100\r\n100 101\r\n100 102\r\n100 103\r\n101 100\r\n101 101\r\n101 102\r\n101 103\r\n102 100\r\n102 101\r\n102 102\r\n102 103\r\n103 100\r\n103 101\r\n103 102\r\n103 103\r\n",
                "10"
            ],
            [
                "26\r\n1000000000 0\r\n0 1000000000\r\n1000000000 1000000000\r\n0 0\r\n900000000 0\r\n900000000 1\r\n900000000 2\r\n900000000 3\r\n900000000 4\r\n900000000 5\r\n900000000 6\r\n900000000 7\r\n900000000 8\r\n900000000 9\r\n900000000 10\r\n0 700000000\r\n1 700000000\r\n2 700000000\r\n3 700000000\r\n4 700000000\r\n5 700000000\r\n6 700000000\r\n7 700000000\r\n8 700000000\r\n9 700000000\r\n10 700000000\r\n",
                "8699999945"
            ],
            [
                "18\r\n1 1\r\n1 2\r\n4 2\r\n4 8\r\n16 8\r\n16 32\r\n64 32\r\n64 128\r\n256 128\r\n256 512\r\n1024 512\r\n1024 2048\r\n4096 2048\r\n4096 8192\r\n16384 8192\r\n16384 31768\r\n65536 31768\r\n65535 131072\r\n",
                "1"
            ],
            [
                "1\r\n1 7\r\n",
                "0"
            ],
            [
                "100\r\n7 7\r\n7 4\r\n7 9\r\n4 6\r\n5 5\r\n0 2\r\n6 7\r\n3 4\r\n3 9\r\n5 6\r\n6 5\r\n0 6\r\n5 7\r\n5 8\r\n4 5\r\n1 2\r\n8 2\r\n9 9\r\n7 0\r\n1 0\r\n3 6\r\n3 8\r\n1 9\r\n6 6\r\n9 2\r\n8 1\r\n0 3\r\n8 4\r\n2 1\r\n6 1\r\n4 2\r\n8 6\r\n1 4\r\n7 2\r\n3 3\r\n6 3\r\n5 9\r\n9 0\r\n4 3\r\n0 8\r\n4 9\r\n3 7\r\n6 2\r\n8 3\r\n1 5\r\n1 6\r\n4 0\r\n7 1\r\n3 2\r\n8 8\r\n5 2\r\n1 1\r\n9 3\r\n6 8\r\n2 2\r\n6 0\r\n8 5\r\n0 1\r\n9 8\r\n2 7\r\n6 9\r\n4 4\r\n0 4\r\n4 7\r\n4 8\r\n2 6\r\n2 3\r\n8 0\r\n5 4\r\n9 7\r\n3 5\r\n4 1\r\n7 8\r\n7 3\r\n2 8\r\n5 0\r\n2 0\r\n3 0\r\n7 6\r\n9 6\r\n3 1\r\n8 9\r\n5 1\r\n9 5\r\n0 9\r\n6 4\r\n2 5\r\n9 1\r\n1 8\r\n5 3\r\n9 4\r\n0 7\r\n1 7\r\n0 0\r\n2 9\r\n7 5\r\n0 5\r\n1 3\r\n8 7\r\n2 4\r\n",
                "165"
            ],
            [
                "4\r\n870469116 611670530\r\n621650311 206334172\r\n638184237 803783737\r\n98104849 549406387\r\n",
                "535185422"
            ],
            [
                "10\r\n2 3\r\n7 9\r\n4 1\r\n7 3\r\n7 2\r\n2 3\r\n7 7\r\n8 9\r\n1 2\r\n5 6\r\n",
                "5"
            ],
            [
                "10\r\n8 2\r\n4 1\r\n8 1\r\n1 6\r\n10 2\r\n1 8\r\n0 8\r\n7 6\r\n5 9\r\n2 9\r\n",
                "25"
            ],
            [
                "8\r\n7 2\r\n8 10\r\n2 4\r\n7 5\r\n0 1\r\n1 6\r\n10 8\r\n9 6\r\n",
                "6"
            ],
            [
                "3\r\n0 4\r\n2 8\r\n5 8\r\n",
                "0"
            ],
            [
                "8\r\n5 9\r\n4 5\r\n5 7\r\n4 8\r\n9 9\r\n6 5\r\n1 4\r\n2 2\r\n",
                "3"
            ]
        ]
    }
]