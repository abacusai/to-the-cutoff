[
    {
        "name": "Good Substrings",
        "description": "Smart Beaver recently got interested in a new word game. The point is as\nfollows: count the number of distinct good substrings of some string s. To\ndetermine if a string is good or not the game uses rules. Overall there are n\nrules. Each rule is described by a group of three (p, l, r), where p is a\nstring and l and r (l \u2264 r) are integers. We\u2019ll say that string t complies with\nrule (p, l, r), if the number of occurrences of string t in string p lies\nbetween l and r, inclusive. For example, string \"ab\", complies with rules\n(\"ab\", 1, 2) and (\"aab\", 0, 1), but does not comply with rules (\"cd\", 1, 2)\nand (\"abab\", 0, 1). A substring s[l... r] (1 \u2264 l \u2264 r \u2264 |s|) of string s =\ns1s2... s|s| (|s| is a length of s) is string slsl + 1... sr. Consider a\nnumber of occurrences of string t in string p as a number of pairs of integers\nl, r (1 \u2264 l \u2264 r \u2264 |p|) such that p[l... r] = t. We\u2019ll say that string t is\ngood if it complies with all n rules. Smart Beaver asks you to help him to\nwrite a program that can calculate the number of distinct good substrings of\nstring s. Two substrings s[x... y] and s[z... w] are cosidered to be distinct\niff s[x... y] \u2260 s[z... w]. Input The first line contains string s. The second\nline contains integer n. Next n lines contain the rules, one per line. Each of\nthese lines contains a string and two integers pi, li, ri, separated by single\nspaces (0 \u2264 li \u2264 ri \u2264 |pi|). It is guaranteed that all the given strings are\nnon-empty and only contain lowercase English letters. The input limits for\nscoring 30 points are (subproblem G1): 0 \u2264 n \u2264 10. The length of string s and\nthe maximum length of string p is \u2264 200. The input limits for scoring 70\npoints are (subproblems G1+G2): 0 \u2264 n \u2264 10. The length of string s and the\nmaximum length of string p is \u2264 2000. The input limits for scoring 100 points\nare (subproblems G1+G2+G3): 0 \u2264 n \u2264 10. The length of string s and the maximum\nlength of string p is \u2264 50000. Output Print a single integer \u2014 the number of\ngood substrings of string s. Examples Input aaab 2 aa 0 0 aab 1 1 Output 3\nInput ltntlnen 3 n 0 0 ttlneenl 1 4 lelllt 1 1 Output 2 Input a 0 Output 1\nNote There are three good substrings in the first sample test: \u00abaab\u00bb, \u00abab\u00bb and\n\u00abb\u00bb. In the second test only substrings \u00abe\u00bb and \u00abt\u00bb are good.\n\n",
        "cf_contest_id": 316,
        "cf_index": "G1",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "hashing",
            "strings"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "aaab\r\n2\r\naa 0 0\r\naab 1 1\r\n",
                "3"
            ],
            [
                "ltntlnen\r\n3\r\nn 0 0\r\nttlneenl 1 4\r\nlelllt 1 1\r\n",
                "2"
            ],
            [
                "a\r\n0\r\n",
                "1"
            ]
        ],
        "private_cases": [
            [
                "nysnvneyavzcebsbsvrsbcvzsrcr\r\n5\r\nycaa 1 3\r\nzsayyyvseccsbcbvzrr 5 16\r\nznz 1 3\r\nbvnzrccvcb 4 7\r\nseznebzeevvrncccaabsbny 17 21\r\n",
                "0"
            ],
            [
                "oaoaa\r\n1\r\noaooaoooooaaaaaaaoooaao 2 18\r\n",
                "7"
            ],
            [
                "hrsszhjvrbsszvqesessiqbzeqijjerqirhhjsehiehezvzihzssivhvihrivrhizeqvvhejvibhqrbbqjrjsessvrhijzsrqirvsqqbibzhrzseijesszsrzhjjbqsrjrsrizivvhsjvqz\r\n3\r\nrzzevhiibziqiirhsebebrvrvvjihsjhvjjrejvqezireqevqeszrrseriijijijveqzbsbrezqhrrhbshqrhzshjervqjjzveeqsisrbevvjvjhbzvbjrrvizh 0 122\r\niqqqjirjjhrbrerhssszbqqizzhrejrijjhirz 0 37\r\nevqqvrshbieivszqvqhjrbeqjhiijsjzjrvhsvbsjivsvvhrvvzqzshrrqvehhvqsrssqvsjjvbqqhjqijevvehvejsvhhhjjvjrsqirqzhjeieqzhssjibirzsjribvrisjizzsrzerieivvhrrhqhvbrssvhviebzqjqbbzirh 1 170\r\n",
                "92"
            ],
            [
                "aaajiajqjvehgzqjssaebbqzhggehreiihhrjeehzeaeiiigavjsqbszghavijavqszgbjhjzvvjqhvqvrhehhjjbsezsbraiiabrzvgvzvhrisjzhehaqehqerrvieseheavbigihahbqv\r\n0\r\n",
                "10115"
            ]
        ]
    }
]