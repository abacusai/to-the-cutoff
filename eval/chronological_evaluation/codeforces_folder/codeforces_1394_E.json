[
    {
        "name": "Boboniu and Banknote Collection",
        "description": "No matter what trouble you're in, don't be afraid, but face it with a smile.\nI've made another billion dollars! \u2014 Boboniu Boboniu has issued his\ncurrencies, named Bobo Yuan. Bobo Yuan (BBY) is a series of currencies.\nBoboniu gives each of them a positive integer identifier, such as BBY-1,\nBBY-2, etc. Boboniu has a BBY collection. His collection looks like a\nsequence. For example: We can use sequence \n    a=[1,2,3,3,2,1,4,4,1]\n of\nlength \n    n=9\n to denote it. Now Boboniu wants to fold his collection. You\ncan imagine that Boboniu stick his collection to a long piece of paper and\nfold it between currencies: Boboniu will only fold the same identifier of\ncurrencies together. In other words, if \n    a_i\n is folded over \n    a_j\n\n(\n    1\n    \u2264 i,j\n    \u2264 n\n), then \n    a_i=a_j\n must hold. Boboniu doesn't care\nif you follow this rule in the process of folding. But once it is finished,\nthe rule should be obeyed. A formal definition of fold is described in notes.\nAccording to the picture above, you can fold \n    a\n two times. In fact, you\ncan fold \n    a=[1,2,3,3,2,1,4,4,1]\n at most two times. So the maximum number\nof folds of it is \n    2\n. As an international fan of Boboniu, you're asked to\ncalculate the maximum number of folds. You're given a sequence \n    a\n of\nlength \n    n\n, for each \n    i\n (\n    1\n    \u2264 i\n    \u2264 n\n), you need to\ncalculate the maximum number of folds of \n    [a_1,a_2,\n    \u2026,a_i]\n. Input\nThe first line contains an integer \n    n\n (\n    1\n    \u2264 n\n    \u2264 10^5\n). The\nsecond line contains \n    n\n integers \n    a_1,a_2,\n    \u2026,a_n\n (\n    1\n    \u2264\n    a_i\n    \u2264 n\n). Output Print \n    n\n integers. The \n    i\n-th of them should\nbe equal to the maximum number of folds of \n    [a_1,a_2,\n    \u2026,a_i]\n.\nExamples Input 9 1 2 3 3 2 1 4 4 1 Output 0 0 0 1 1 1 1 2 2 Input 9 1 2 2 2 2\n1 1 2 2 Output 0 0 1 2 3 3 4 4 5 Input 15 1 2 3 4 5 5 4 3 2 2 3 4 4 3 6 Output\n0 0 0 0 0 1 1 1 1 2 2 2 3 3 0 Input 50 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3\n1 2 2 1 1 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 Output 0 0 0 0 1 1\n1 1 1 1 2 2 2 2 2 3 3 3 3 4 4 4 5 5 6 7 3 3 3 4 4 4 4 3 3 4 4 4 4 4 5 5 5 5 6\n6 6 7 7 8 Note Formally, for a sequence \n    a\n of length \n    n\n, let's\ndefine the folding sequence as a sequence \n    b\n of length \n    n\n such that:\n\n    b_i\n (\n    1\n    \u2264 i\n    \u2264 n\n) is either \n    1\n or \n    -1\n. Let\n\n    p(i)=[b_i=1]+\n    \u2211_j=1^i-1b_j\n. For all \n    1\n    \u2264 i<j\n    \u2264 n\n, if\n\n    p(i)=p(j)\n, then \n    a_i\n should be equal to \n    a_j\n. (\n    [A]\n is\nthe value of boolean expression \n    A\n. i. e. \n    [A]=1\n if \n    A\n is true,\nelse \n    [A]=0\n). Now we define the number of folds of \n    b\n as\n\n    f(b)=\n    \u2211_i=1^n-1[b_i\n     b_i+1]\n. The maximum number of folds\nof \n    a\n is \n    F(a)=\n    max\n    \n     f(b)\n    | b \n     is a folding sequence\n    of a\n.\n\n",
        "cf_contest_id": 1394,
        "cf_index": "E",
        "cf_rating": 3500,
        "difficulty": 0,
        "cf_tags": [
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9\r\n1 2 3 3 2 1 4 4 1\r\n",
                "0 0 0 1 1 1 1 2 2 \r\n"
            ],
            [
                "9\r\n1 2 2 2 2 1 1 2 2\r\n",
                "0 0 1 2 3 3 4 4 5 \r\n"
            ],
            [
                "15\r\n1 2 3 4 5 5 4 3 2 2 3 4 4 3 6\r\n",
                "0 0 0 0 0 1 1 1 1 2 2 2 3 3 0 \r\n"
            ],
            [
                "50\r\n1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1\r\n",
                "0 0 0 0 1 1 1 1 1 1 2 2 2 2 2 3 3 3 3 4 4 4 5 5 6 7 3 3 3 4 4 4 4 3 3 4 4 4 4 4 5 5 5 5 6 6 6 7 7 8 \r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n",
                "0 \r\n"
            ],
            [
                "100\r\n2 4 4 2 1 3 3 1 2 2 1 1 1 2 2 1 1 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 2 1 1 3 3 1 2 2 1 1 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 1 3 1 2 2 1 1 3 3 1 2 2 1 1 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1\r\n",
                "0 0 1 1 1 1 2 2 2 3 3 4 5 3 4 4 5 5 5 5 5 6 6 6 6 5 6 6 6 6 7 7 7 8 8 9 9 7 8 7 8 8 7 8 8 9 7 7 7 7 7 8 8 8 8 8 9 9 9 9 10 10 10 11 11 12 13 13 11 11 12 12 13 11 12 12 11 12 12 13 11 11 11 11 11 12 12 12 12 12 13 13 13 13 14 14 14 15 15 16 \r\n"
            ],
            [
                "100\r\n3 1 2 4 6 8 8 6 4 2 1 3 5 7 7 5 3 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 6 8 10 10 8 6 4 2 1 3 5 7 9 9 7 5 3 1 2 4 6 8 8 6 4 2 1 3 5 7 7 5 3 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1\r\n",
                "0 0 0 0 0 0 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 3 3 3 3 3 3 4 4 4 4 4 5 5 5 5 6 6 6 7 7 8 1 1 1 2 2 2 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 7 7 7 7 8 8 8 9 9 10 \r\n"
            ],
            [
                "100\r\n1 2 2 1 1 1 2 4 6 8 10 10 8 6 4 2 1 3 5 7 9 9 7 5 3 1 2 4 6 8 8 6 4 2 1 3 5 7 7 5 3 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 2 1 1\r\n",
                "0 0 1 1 2 3 3 3 3 3 3 4 4 4 4 4 4 3 3 3 3 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 7 7 8 8 8 8 8 9 9 9 9 10 10 10 11 11 12 3 4 3 3 3 3 4 4 4 4 5 5 5 6 6 7 3 3 3 3 3 4 4 4 4 5 5 5 6 6 7 7 5 6 \r\n"
            ],
            [
                "100\r\n1 1 1 1 1 2 1 1 1 1 1 2 2 1 1 1 1 1 1 3 1 2 2 1 1 1 1 1 2 1 1 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1\r\n",
                "0 1 2 3 4 4 4 5 6 7 8 8 9 9 10 11 12 13 14 12 12 12 13 13 14 15 16 17 16 16 17 17 18 18 19 20 20 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 39 39 40 40 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 56 56 57 58 59 60 61 61 62 62 63 64 65 66 67 68 69 70 70 70 71 72 \r\n"
            ],
            [
                "100\r\n2 1 1 2 2 1 1 2 2 2 1 1 1 1 1 2 1 2 1 2 2 1 2 2 2 1 2 2 1 1 1 1 2 2 2 1 1 2 2 1 1 1 1 1 2 1 1 2 1 2 2 1 2 1 1 1 1 1 1 2 2 1 2 1 2 2 2 1 1 1 1 2 2 2 2 2 1 2 2 1 1 1 1 1 2 1 2 2 2 1 2 1 1 2 2 2 2 2 1 2\r\n",
                "0 0 1 1 2 2 3 3 4 5 5 6 7 8 9 9 9 9 9 9 10 10 10 11 12 12 12 13 13 14 15 16 16 17 18 18 19 19 20 20 21 22 23 24 24 24 25 25 25 25 26 26 26 26 27 28 29 30 31 31 32 32 32 32 32 33 34 34 35 36 37 37 38 39 40 41 41 41 42 42 43 44 45 46 46 46 46 47 48 48 48 48 49 49 50 51 52 53 53 53 \r\n"
            ],
            [
                "100\r\n4 2 1 3 5 7 9 11 13 13 11 9 7 5 3 1 2 4 6 8 10 12 12 10 8 6 4 2 1 3 5 7 9 11 11 9 7 5 3 1 2 4 6 8 10 10 8 6 4 2 1 3 5 7 9 9 7 5 3 1 2 4 6 8 8 6 4 2 1 3 5 7 7 5 3 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1\r\n",
                "0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 8 8 8 8 8 8 9 9 9 9 9 10 10 10 10 11 11 11 12 12 13 \r\n"
            ],
            [
                "100\r\n8 10 12 12 10 8 6 4 2 1 3 5 7 9 11 11 9 7 5 3 1 2 4 6 8 10 10 8 6 4 2 1 3 5 7 9 9 7 5 3 1 2 4 6 8 8 6 4 2 1 3 5 7 7 5 3 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1\r\n",
                "0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 7 7 8 8 8 8 8 9 9 9 9 10 10 10 11 11 12 12 3 3 3 4 4 4 4 3 4 4 4 4 5 5 5 6 6 7 \r\n"
            ],
            [
                "100\r\n5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 2 1 3 3 1 2 2 1 1 1 2 4 6 8 10 10 8 6 4 2 1 3 5 7 9 9 7 5 3 1 2 4 6 8 8 6 4 2 1 3 5 7 7 5 3 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 1 1 2 4 4 2 1 3 3 1 2 2 1 1\r\n",
                "0 1 1 1 1 1 2 2 2 2 3 3 3 4 4 5 5 3 3 4 4 4 5 5 6 7 5 5 5 5 5 6 6 6 6 6 6 5 5 5 5 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 9 9 9 9 9 9 10 10 10 10 10 11 11 11 11 12 12 12 13 13 14 15 16 16 16 17 17 17 17 18 18 18 19 19 20 \r\n"
            ],
            [
                "100\r\n1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 2 2 1 1 1 1 2 1 1\r\n",
                "0 1 2 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 21 21 22 23 24 24 25 25 26 27 27 28 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 53 53 54 55 56 57 58 59 60 61 61 61 62 63 64 65 66 66 66 67 68 69 70 71 72 73 74 75 76 76 77 77 78 79 80 80 80 81 \r\n"
            ],
            [
                "100\r\n10 3 10 1 10 9 8 10 6 7 2 6 10 7 7 8 1 5 1 6 5 2 2 4 3 3 4 5 1 8 8 9 5 1 8 2 9 8 7 2 9 9 9 1 3 2 10 4 5 3 8 9 5 5 6 4 1 1 4 9 5 2 1 7 5 2 7 5 3 4 1 5 4 7 8 1 3 6 10 4 6 2 10 8 6 5 10 8 6 2 8 9 6 8 4 7 7 8 9 6\r\n",
                "0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 \r\n"
            ],
            [
                "100\r\n6 4 2 1 3 5 7 9 9 7 5 3 1 2 4 6 8 8 6 4 2 1 3 5 7 7 5 3 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 8 8 6 4 2 1 3 5 7 7 5 3 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 1 1 1 3 3 1 2 2 1 1\r\n",
                "0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 4 4 4 4 4 4 5 5 5 5 5 6 6 6 6 7 7 7 8 8 9 1 2 1 1 1 1 1 1 1 2 2 2 2 2 2 2 3 3 3 3 3 3 4 4 4 4 4 5 5 5 5 6 6 6 7 7 8 9 10 11 11 12 12 12 13 13 14 \r\n"
            ],
            [
                "100\r\n3 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 4 2 1 3 5 7 9 11 11 9 7 5 3 1 2 4 6 8 10 10 8 6 4 2 1 3 5 7 9 9 7 5 3 1 2 4 6 8 8 6 4 2 1 3 5 7 7 5 3 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1\r\n",
                "0 0 0 0 0 1 1 1 1 1 1 2 2 2 2 2 3 3 3 3 4 4 4 5 5 6 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 6 6 6 6 6 6 7 7 7 7 7 8 8 8 8 9 9 9 10 10 11 \r\n"
            ],
            [
                "100\r\n3 1 2 2 1 1 1 2 4 4 2 1 3 3 1 2 2 1 1 2 4 4 2 1 3 3 1 2 2 1 1 10 8 6 4 2 1 3 5 7 9 9 7 5 3 1 2 4 6 8 8 6 4 2 1 3 5 7 7 5 3 1 2 4 6 6 4 2 1 3 5 5 3 1 2 4 4 2 1 3 3 1 2 2 1 1 3 1 2 4 4 2 1 3 3 1 2 2 1 1\r\n",
                "0 0 0 1 1 2 3 2 2 3 3 3 2 3 3 3 4 4 5 5 5 6 6 6 6 7 7 7 8 8 9 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 10 10 10 10 10 10 11 11 11 11 11 12 12 12 12 13 13 13 14 14 15 6 6 6 6 7 7 7 7 8 8 8 9 9 10 \r\n"
            ],
            [
                "100\r\n1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "0 1 2 3 4 5 5 5 6 7 8 9 10 11 12 12 13 13 14 15 16 17 18 19 20 20 21 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 40 40 41 42 43 44 45 46 47 47 47 48 49 50 51 52 53 54 55 56 57 58 59 60 60 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 74 74 75 76 77 78 79 80 81 82 83 84 85 \r\n"
            ],
            [
                "100\r\n22 92 54 92 32 48 39 52 8 47 75 22 5 88 23 29 52 28 54 10 90 40 65 68 18 64 70 99 44 97 57 92 36 99 46 3 29 92 65 10 98 55 60 43 28 30 76 14 2 17 29 12 16 49 54 57 45 26 33 59 53 5 5 41 63 46 55 21 83 11 76 54 69 67 18 11 29 72 47 26 6 18 64 74 67 13 11 5 9 35 10 31 62 12 54 81 39 36 65 10\r\n",
                "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \r\n"
            ]
        ]
    }
]