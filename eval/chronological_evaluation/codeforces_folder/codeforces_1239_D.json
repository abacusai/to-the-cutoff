[
    {
        "name": "Catowice City",
        "description": "In the Catowice city next weekend the cat contest will be held. However, the\njury members and the contestants haven't been selected yet. There are \n    n\n\nresidents and \n    n\n cats in the Catowice, and each resident has exactly one\ncat living in his house. The residents and cats are numbered with integers\nfrom \n    1\n to \n    n\n, where the \n    i\n-th cat is living in the house of\n\n    i\n-th resident. Each Catowice resident is in friendship with several\ncats, including the one living in his house. In order to conduct a contest, at\nleast one jury member is needed and at least one cat contestant is needed. Of\ncourse, every jury member should know none of the contestants. For the contest\nto be successful, it's also needed that the number of jury members plus the\nnumber of contestants is equal to \n    n\n. Please help Catowice residents to\nselect the jury and the contestants for the upcoming competition, or determine\nthat it's impossible to do. Input The first line contains an integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 100\n     000\n), the number of test cases. Then description\nof \n    t\n test cases follow, where each description is as follows: The first\nline contains integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 m \n    \u2264\n    10^6\n), the number of Catowice residents and the number of friendship pairs\nbetween residents and cats. Each of the next \n    m\n lines contains integers\n\n    a_i\n and \n    b_i\n (\n    1 \n    \u2264 a_i, b_i \n    \u2264 n\n), denoting that\n\n    a_i\n-th resident is acquaintances with \n    b_i\n-th cat. It's guaranteed\nthat each pair of some resident and some cat is listed at most once. It's\nguaranteed, that for every \n    i\n there exists a pair between \n    i\n-th\nresident and \n    i\n-th cat. Different test cases are separated with an empty\nline. It's guaranteed, that the sum of \n    n\n over all test cases is at most\n\n    10^6\n and that the sum of \n    m\n over all test cases is at most\n\n    10^6\n. Output For every test case print: \"No\", if it's impossible to\nselect the jury and contestants. Otherwise print \"Yes\".In the second line\nprint two integers \n    j\n and \n    p\n (\n    1 \n    \u2264 j\n, \n    1 \n    \u2264 p\n, \n    j\n    + p = n\n) \u2014 the number of jury members and the number of contest\nparticipants. In the third line print \n    j\n distinct integers from \n    1\n\nto \n    n\n, the indices of the residents forming a jury. In the fourth line\nprint \n    p\n distinct integers from \n    1\n to \n    n\n, the indices of the\ncats, which will participate in the contest. In case there are several correct\nanswers, print any of them. Example Input 4 3 4 1 1 2 2 3 3 1 3 3 7 1 1 1 2 1\n3 2 2 3 1 3 2 3 3 1 1 1 1 2 4 1 1 1 2 2 1 2 2 Output Yes 2 1 1 3 2 Yes 1 2 2 1\n3 No No Note In the first test case, we can select the first and the third\nresident as a jury. Both of them are not acquaintances with a second cat, so\nwe can select it as a contestant. In the second test case, we can select the\nsecond resident as a jury. He is not an acquaintances with a first and a third\ncat, so they can be selected as contestants. In the third test case, the only\nresident is acquaintances with the only cat, so they can't be in the contest\ntogether. So it's not possible to make a contest with at least one jury and at\nleast one cat. In the fourth test case, each resident is acquaintances with\nevery cat, so it's again not possible to make a contest with at least one jury\nand at least one cat.\n\n",
        "cf_contest_id": 1239,
        "cf_index": "D",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "2-sat",
            "dfs and similar",
            "graph matchings",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n3 4\r\n1 1\r\n2 2\r\n3 3\r\n1 3\r\n\r\n3 7\r\n1 1\r\n1 2\r\n1 3\r\n2 2\r\n3 1\r\n3 2\r\n3 3\r\n\r\n1 1\r\n1 1\r\n\r\n2 4\r\n1 1\r\n1 2\r\n2 1\r\n2 2\r\n",
                "Yes\r\n1 2\r\n3 \r\n1 2 \r\nYes\r\n1 2\r\n2 \r\n1 3 \r\nNo\r\nNo\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n4 6\r\n1 1\r\n3 3\r\n1 2\r\n2 2\r\n4 4\r\n4 2\r\n\r\n4 6\r\n2 4\r\n2 2\r\n3 2\r\n1 1\r\n3 3\r\n4 4\r\n\r\n4 8\r\n1 1\r\n3 1\r\n2 2\r\n3 3\r\n3 2\r\n1 2\r\n4 4\r\n2 4\r\n\r\n5 8\r\n4 4\r\n3 5\r\n3 4\r\n5 5\r\n1 3\r\n3 3\r\n2 2\r\n1 1\r\n\r\n5 10\r\n5 2\r\n2 3\r\n4 4\r\n2 1\r\n5 4\r\n3 1\r\n2 2\r\n3 3\r\n5 5\r\n1 1\r\n",
                "Yes\r\n1 3\r\n2 \r\n1 3 4 \r\nYes\r\n1 3\r\n1 \r\n2 3 4 \r\nYes\r\n1 3\r\n4 \r\n1 2 3 \r\nYes\r\n1 4\r\n5 \r\n1 2 3 4 \r\nYes\r\n1 4\r\n1 \r\n2 3 4 5 \r\n"
            ]
        ]
    }
]