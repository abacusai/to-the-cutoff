[
    {
        "name": "Circle Coloring",
        "description": "You are given three sequences: \n    a_1, a_2, \n    \u2026, a_n\n; \n    b_1, b_2,\n    \n    \u2026, b_n\n; \n    c_1, c_2, \n    \u2026, c_n\n. For each \n    i\n, \n    a_i\n    \n    \u2260 b_i\n, \n    a_i \n    \u2260 c_i\n, \n    b_i \n    \u2260 c_i\n. Find a sequence\n\n    p_1, p_2, \n    \u2026, p_n\n, that satisfy the following conditions: \n    p_i\n    \n    \u2208\n    \n    a_i, b_i, c_i\n \n    p_i \n    \u2260 p_(i \n     n) + 1\n.In\nother words, for each element, you need to choose one of the three possible\nvalues, such that no two adjacent elements (where we consider elements\n\n    i,i+1\n adjacent for \n    i<n\n and also elements \n    1\n and \n    n\n) will\nhave equal value. It can be proved that in the given constraints solution\nalways exists. You don't need to minimize/maximize anything, you need to find\nany proper sequence. Input The first line of input contains one integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n): the number of test cases. The first\nline of each test case contains one integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264\n    100\n): the number of elements in the given sequences. The second line\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 100\n). The third line contains \n    n\n integers \n    b_1, b_2,\n    \n    \u2026, b_n\n (\n    1 \n    \u2264 b_i \n    \u2264 100\n). The fourth line contains\n\n    n\n integers \n    c_1, c_2, \n    \u2026, c_n\n (\n    1 \n    \u2264 c_i \n    \u2264\n    100\n). It is guaranteed that \n    a_i \n    \u2260 b_i\n, \n    a_i \n    \u2260 c_i\n,\n\n    b_i \n    \u2260 c_i\n for all \n    i\n. Output For each test case, print \n    n\n\nintegers: \n    p_1, p_2, \n    \u2026, p_n\n (\n    p_i \n    \u2208\n    \n    a_i, b_i,\n    c_i\n, \n    p_i \n    \u2260 p_i \n     n + 1\n). If there are several\nsolutions, you can print any. Example Input 5 3 1 1 1 2 2 2 3 3 3 4 1 2 1 2 2\n1 2 1 3 4 3 4 7 1 3 3 1 1 1 1 2 4 4 3 2 2 4 4 2 2 2 4 4 2 3 1 2 1 2 3 3 3 1 2\n10 1 1 1 2 2 2 3 3 3 1 2 2 2 3 3 3 1 1 1 2 3 3 3 1 1 1 2 2 2 3 Output 1 2 3 1\n2 1 2 1 3 4 3 2 4 2 1 3 2 1 2 3 1 2 3 1 2 3 2 Note In the first test case \n    p\n    = [1, 2, 3]\n. It is a correct answer, because: \n    p_1 = 1 = a_1\n, \n    p_2 =\n    2 = b_2\n, \n    p_3 = 3 = c_3\n \n    p_1 \n    \u2260 p_2\n, \n    p_2 \n    \u2260 p_3\n,\n\n    p_3 \n    \u2260 p_1\n All possible correct answers to this test case are:\n\n    [1, 2, 3]\n, \n    [1, 3, 2]\n, \n    [2, 1, 3]\n, \n    [2, 3, 1]\n, \n    [3, 1,\n    2]\n, \n    [3, 2, 1]\n. In the second test case \n    p = [1, 2, 1, 2]\n. In\nthis sequence \n    p_1 = a_1\n, \n    p_2 = a_2\n, \n    p_3 = a_3\n, \n    p_4 =\n    a_4\n. Also we can see, that no two adjacent elements of the sequence are\nequal. In the third test case \n    p = [1, 3, 4, 3, 2, 4, 2]\n. In this\nsequence \n    p_1 = a_1\n, \n    p_2 = a_2\n, \n    p_3 = b_3\n, \n    p_4 = b_4\n,\n\n    p_5 = b_5\n, \n    p_6 = c_6\n, \n    p_7 = c_7\n. Also we can see, that no\ntwo adjacent elements of the sequence are equal.\n\n",
        "cf_contest_id": 1408,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3\r\n1 1 1\r\n2 2 2\r\n3 3 3\r\n4\r\n1 2 1 2\r\n2 1 2 1\r\n3 4 3 4\r\n7\r\n1 3 3 1 1 1 1\r\n2 4 4 3 2 2 4\r\n4 2 2 2 4 4 2\r\n3\r\n1 2 1\r\n2 3 3\r\n3 1 2\r\n10\r\n1 1 1 2 2 2 3 3 3 1\r\n2 2 2 3 3 3 1 1 1 2\r\n3 3 3 1 1 1 2 2 2 3\r\n",
                "1 2 3\r\n1 2 1 2\r\n1 2 3 1 2 1 2\r\n1 2 3\r\n1 2 1 2 1 2 1 2 1 2\r\n"
            ]
        ],
        "private_cases": []
    }
]