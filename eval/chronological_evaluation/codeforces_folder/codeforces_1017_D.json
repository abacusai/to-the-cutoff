[
    {
        "name": "The Wu",
        "description": "Childan is making up a legendary story and trying to sell his forgery \u2014 a\nnecklace with a strong sense of \"Wu\" to the Kasouras. But Mr. Kasoura is\nchallenging the truth of Childan's story. So he is going to ask a few\nquestions about Childan's so-called \"personal treasure\" necklace. This\n\"personal treasure\" is a multiset \n    S\n of \n    m\n \"01-strings\". A\n\"01-string\" is a string that contains \n    n\n characters \"0\" and \"1\". For\nexample, if \n    n=4\n, strings \"0110\", \"0000\", and \"1110\" are \"01-strings\",\nbut \"00110\" (there are \n    5\n characters, not \n    4\n) and \"zero\" (unallowed\ncharacters) are not. Note that the multiset \n    S\n can contain equal\nelements. Frequently, Mr. Kasoura will provide a \"01-string\" \n    t\n and ask\nChildan how many strings \n    s\n are in the multiset \n    S\n such that the\n\"Wu\" value of the pair \n    (s, t)\n is not greater than \n    k\n. Mrs. Kasoura\nand Mr. Kasoura think that if \n    s_i = t_i\n (\n    1\n    \u2264 i\n    \u2264 n\n) then\nthe \"Wu\" value of the character pair equals to \n    w_i\n, otherwise \n    0\n.\nThe \"Wu\" value of the \"01-string\" pair is the sum of the \"Wu\" values of every\ncharacter pair. Note that the length of every \"01-string\" is equal to \n    n\n.\nFor example, if \n    w=[4, 5, 3, 6]\n, \"Wu\" of (\"1001\", \"1100\") is \n    7\n\nbecause these strings have equal characters only on the first and third\npositions, so \n    w_1+w_3=4+3=7\n. You need to help Childan to answer Mr.\nKasoura's queries. That is to find the number of strings in the multiset\n\n    S\n such that the \"Wu\" value of the pair is not greater than \n    k\n.\nInput The first line contains three integers \n    n\n, \n    m\n, and \n    q\n\n(\n    1\n    \u2264 n\n    \u2264 12\n, \n    1\n    \u2264 q, m\n    \u2264 5\n    \u00b7 10^5\n) \u2014 the\nlength of the \"01-strings\", the size of the multiset \n    S\n, and the number\nof queries. The second line contains \n    n\n integers \n    w_1, w_2, \n    \u2026,\n    w_n\n (\n    0 \n    \u2264 w_i \n    \u2264 100\n) \u2014 the value of the \n    i\n-th caracter.\nEach of the next \n    m\n lines contains the \"01-string\" \n    s\n of length\n\n    n\n \u2014 the string in the multiset \n    S\n. Each of the next \n    q\n lines\ncontains the \"01-string\" \n    t\n of length \n    n\n and integer \n    k\n\n(\n    0\n    \u2264 k\n    \u2264 100\n) \u2014 the query. Output For each query, print the\nanswer for this query. Examples Input 2 4 5 40 20 01 01 10 11 00 20 00 40 11\n20 11 40 11 60 Output 2 4 2 3 4 Input 1 2 4 100 0 1 0 0 0 100 1 0 1 100 Output\n1 2 1 2 Note In the first example, we can get: \"Wu\" of (\"01\", \"00\") is\n\n    40\n. \"Wu\" of (\"10\", \"00\") is \n    20\n. \"Wu\" of (\"11\", \"00\") is \n    0\n.\n\"Wu\" of (\"01\", \"11\") is \n    20\n. \"Wu\" of (\"10\", \"11\") is \n    40\n. \"Wu\" of\n(\"11\", \"11\") is \n    60\n. In the first query, pairs (\"11\", \"00\") and (\"10\",\n\"00\") satisfy the condition since their \"Wu\" is not greater than \n    20\n. In\nthe second query, all strings satisfy the condition. In the third query, pairs\n(\"01\", \"11\") and (\"01\", \"11\") satisfy the condition. Note that since there are\ntwo \"01\" strings in the multiset, the answer is \n    2\n, not \n    1\n. In the\nfourth query, since \n    k\n was increased, pair (\"10\", \"11\") satisfies the\ncondition too. In the fifth query, since \n    k\n was increased, pair (\"11\",\n\"11\") satisfies the condition too.\n\n",
        "cf_contest_id": 1017,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force",
            "data structures"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 4 5\r\n40 20\r\n01\r\n01\r\n10\r\n11\r\n00 20\r\n00 40\r\n11 20\r\n11 40\r\n11 60\r\n",
                "2\r\n4\r\n2\r\n3\r\n4\r\n"
            ],
            [
                "1 2 4\r\n100\r\n0\r\n1\r\n0 0\r\n0 100\r\n1 0\r\n1 100\r\n",
                "1\r\n2\r\n1\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "12 1 1\r\n0 1 2 3 4 5 6 7 8 9 10 11\r\n001010001000\r\n001010001000 100\r\n",
                "1\r\n"
            ],
            [
                "1 1 1\r\n67\r\n0\r\n1 47\r\n",
                "1\r\n"
            ]
        ]
    }
]