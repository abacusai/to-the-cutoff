[
    {
        "name": "Watering System",
        "description": "Arkady wants to water his only flower. Unfortunately, he has a very poor\nwatering system that was designed for \n    n\n flowers and so it looks like a\npipe with \n    n\n holes. Arkady can only use the water that flows from the\nfirst hole. Arkady can block some of the holes, and then pour \n    A\n liters\nof water into the pipe. After that, the water will flow out from the non-\nblocked holes proportionally to their sizes \n    s_1, s_2, \n    \u2026, s_n\n. In\nother words, if the sum of sizes of non-blocked holes is \n    S\n, and the\n\n    i\n-th hole is not blocked, \n    s_i \n    \u00b7 A/S\n liters of\nwater will flow out of it. What is the minimum number of holes Arkady should\nblock to make at least \n    B\n liters of water flow out of the first hole?\nInput The first line contains three integers \n    n\n, \n    A\n, \n    B\n (\n    1\n    \n    \u2264 n \n    \u2264 100\n     000\n, \n    1 \n    \u2264 B \n    \u2264 A \n    \u2264 10^4\n) \u2014 the number\nof holes, the volume of water Arkady will pour into the system, and the volume\nhe wants to get out of the first hole. The second line contains \n    n\n\nintegers \n    s_1, s_2, \n    \u2026, s_n\n (\n    1 \n    \u2264 s_i \n    \u2264 10^4\n) \u2014 the\nsizes of the holes. Output Print a single integer \u2014 the number of holes Arkady\nshould block. Examples Input 4 10 3 2 2 2 2 Output 1 Input 4 80 20 3 2 1 4\nOutput 0 Input 5 10 10 1000 1 1 1 1 Output 4 Note In the first example Arkady\nshould block at least one hole. After that, \n    10 \n    \u00b7 2/6\n    \u2248 3.333\n liters of water will flow out of the first hole, and that\nsuits Arkady. In the second example even without blocking any hole,\n\n    80 \n    \u00b7 3/10 = 24\n liters will flow out of the first hole,\nthat is not less than \n    20\n. In the third example Arkady has to block all\nholes except the first to make all water flow out of the first hole.\n\n",
        "cf_contest_id": 967,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 10 3\r\n2 2 2 2\r\n",
                "1\r\n"
            ],
            [
                "4 80 20\r\n3 2 1 4\r\n",
                "0\r\n"
            ],
            [
                "5 10 10\r\n1000 1 1 1 1\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 300 100\r\n20 1 3 10 8 5 3 6 4 3\r\n",
                "1\r\n"
            ],
            [
                "10 300 100\r\n20 25 68 40 60 37 44 85 23 96\r\n",
                "8\r\n"
            ],
            [
                "1 1 1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "1 2 1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "2 2 2\r\n1 10000\r\n",
                "1\r\n"
            ],
            [
                "2 10000 1\r\n1 9999\r\n",
                "0\r\n"
            ]
        ]
    }
]