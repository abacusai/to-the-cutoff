[
    {
        "name": "Inversion Counting",
        "description": "A permutation of size n is an array of size n such that each integer from 1 to\nn occurs exactly once in this array. An inversion in a permutation p is a pair\nof indices (i, j) such that i > j and ai < aj. For example, a permutation [4,\n1, 3, 2] contains 4 inversions: (2, 1), (3, 1), (4, 1), (4, 3). You are given\na permutation a of size n and m queries to it. Each query is represented by\ntwo indices l and r denoting that you have to reverse the segment [l, r] of\nthe permutation. For example, if a = [1, 2, 3, 4] and a query l = 2, r = 4 is\napplied, then the resulting permutation is [1, 4, 3, 2]. After each query you\nhave to determine whether the number of inversions is odd or even. Input The\nfirst line contains one integer n (1 \u2264 n \u2264 1500) \u2014 the size of the\npermutation. The second line contains n integers a1, a2, ..., an (1 \u2264 ai \u2264 n)\n\u2014 the elements of the permutation. These integers are pairwise distinct. The\nthird line contains one integer m (1 \u2264 m \u2264 2\u00b710^5) \u2014 the number of queries to\nprocess. Then m lines follow, i-th line containing two integers li, ri (1 \u2264 li\n\u2264 ri \u2264 n) denoting that i-th query is to reverse a segment [li, ri] of the\npermutation. All queries are performed one after another. Output Print m\nlines. i-th of them must be equal to odd if the number of inversions in the\npermutation after i-th query is odd, and even otherwise. Examples Input 3 1 2\n3 2 1 2 2 3 Output odd even Input 4 1 2 4 3 4 1 1 1 4 1 4 2 3 Output odd odd\nodd even Note The first example: after the first query a = [2, 1, 3],\ninversion: (2, 1); after the second query a = [2, 3, 1], inversions: (3, 1),\n(3, 2). The second example: a = [1, 2, 4, 3], inversion: (4, 3); a = [3, 4, 2,\n1], inversions: (3, 1), (4, 1), (3, 2), (4, 2), (4, 3); a = [1, 2, 4, 3],\ninversion: (4, 3); a = [1, 4, 2, 3], inversions: (3, 2), (4, 2).\n\n",
        "cf_contest_id": 911,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 3\r\n2\r\n1 2\r\n2 3\r\n",
                "odd\r\neven\r\n"
            ],
            [
                "4\r\n1 2 4 3\r\n4\r\n1 1\r\n1 4\r\n1 4\r\n2 3\r\n",
                "odd\r\nodd\r\nodd\r\neven\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n2 6 1 7 4 5 3\r\n5\r\n4 5\r\n7 7\r\n5 6\r\n4 5\r\n4 5\r\n",
                "odd\r\nodd\r\neven\r\nodd\r\neven\r\n"
            ],
            [
                "3\r\n2 1 3\r\n3\r\n2 3\r\n1 1\r\n1 3\r\n",
                "even\r\neven\r\nodd\r\n"
            ],
            [
                "1\r\n1\r\n10\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "even\r\neven\r\neven\r\neven\r\neven\r\neven\r\neven\r\neven\r\neven\r\neven\r\n"
            ]
        ]
    }
]