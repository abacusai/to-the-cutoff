[
    {
        "name": "Prime factorization",
        "description": "You are given a positive integer n. Output its prime factorization. If n =\na1^b1 a2^b2 ... ak^bk (bi > 0), where ak are prime numbers, the output of your\nprogram should look as follows: a1*...*a1*a2*...*a2*...*ak*...*ak, where the\nfactors are ordered in non-decreasing order, and each factor ai is printed bi\ntimes. Input The only line of input contains an integer n (2 \u2264 n \u2264 10000).\nOutput Output the prime factorization of n, as described above. Examples Input\n245 Output 5*7*7 Input 19 Output 19\n\n",
        "cf_contest_id": 162,
        "cf_index": "C",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "*special"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "245\r\n",
                "5*7*7\r\n"
            ],
            [
                "19\r\n",
                "19\r\n"
            ]
        ],
        "private_cases": [
            [
                "8192\r\n",
                "2*2*2*2*2*2*2*2*2*2*2*2*2\r\n"
            ],
            [
                "2\r\n",
                "2\r\n"
            ],
            [
                "10000\r\n",
                "2*2*2*2*5*5*5*5\r\n"
            ],
            [
                "5040\r\n",
                "2*2*2*2*3*3*5*7\r\n"
            ],
            [
                "7429\r\n",
                "17*19*23\r\n"
            ],
            [
                "9973\r\n",
                "9973\r\n"
            ],
            [
                "6979\r\n",
                "7*997\r\n"
            ],
            [
                "9797\r\n",
                "97*101\r\n"
            ],
            [
                "6300\r\n",
                "2*2*3*3*5*5*7\r\n"
            ],
            [
                "6561\r\n",
                "3*3*3*3*3*3*3*3\r\n"
            ],
            [
                "271\r\n",
                "271\r\n"
            ],
            [
                "3826\r\n",
                "2*1913\r\n"
            ],
            [
                "3005\r\n",
                "5*601\r\n"
            ],
            [
                "234\r\n",
                "2*3*3*13\r\n"
            ],
            [
                "998\r\n",
                "2*499\r\n"
            ],
            [
                "121\r\n",
                "11*11\r\n"
            ],
            [
                "90\r\n",
                "2*3*3*5\r\n"
            ],
            [
                "37\r\n",
                "37\r\n"
            ],
            [
                "7\r\n",
                "7\r\n"
            ],
            [
                "6\r\n",
                "2*3\r\n"
            ],
            [
                "5\r\n",
                "5\r\n"
            ],
            [
                "2310\r\n",
                "2*3*5*7*11\r\n"
            ],
            [
                "9240\r\n",
                "2*2*2*3*5*7*11\r\n"
            ],
            [
                "7560\r\n",
                "2*2*2*3*3*3*5*7\r\n"
            ],
            [
                "7063\r\n",
                "7*1009\r\n"
            ]
        ]
    }
]