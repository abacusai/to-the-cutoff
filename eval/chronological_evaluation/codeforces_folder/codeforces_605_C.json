[
    {
        "name": "Freelancer's Dreams",
        "description": "Mikhail the Freelancer dreams of two things: to become a cool programmer and\nto buy a flat in Moscow. To become a cool programmer, he needs at least p\nexperience points, and a desired flat in Moscow costs q dollars. Mikhail is\ndetermined to follow his dreams and registered at a freelance site. He has\nsuggestions to work on n distinct projects. Mikhail has already evaluated that\nthe participation in the i-th project will increase his experience by ai per\nday and bring bi dollars per day. As freelance work implies flexible working\nhours, Mikhail is free to stop working on one project at any time and start\nworking on another project. Doing so, he receives the respective share of\nexperience and money. Mikhail is only trying to become a cool programmer, so\nhe is able to work only on one project at any moment of time. Find the real\nvalue, equal to the minimum number of days Mikhail needs to make his dream\ncome true. For example, suppose Mikhail is suggested to work on three projects\nand a1 = 6, b1 = 2, a2 = 1, b2 = 3, a3 = 2, b3 = 6. Also, p = 20 and q = 20.\nIn order to achieve his aims Mikhail has to work for 2.5 days on both first\nand third projects. Indeed, a1\u00b72.5 + a2\u00b70 + a3\u00b72.5 = 6\u00b72.5 + 1\u00b70 + 2\u00b72.5 = 20\nand b1\u00b72.5 + b2\u00b70 + b3\u00b72.5 = 2\u00b72.5 + 3\u00b70 + 6\u00b72.5 = 20. Input The first line of\nthe input contains three integers n, p and q (1 \u2264 n \u2264 100 000, 1 \u2264 p, q \u2264 1\n000 000) \u2014 the number of projects and the required number of experience and\nmoney. Each of the next n lines contains two integers ai and bi (1 \u2264 ai, bi \u2264\n1 000 000) \u2014 the daily increase in experience and daily income for working on\nthe i-th project. Output Print a real value \u2014 the minimum number of days\nMikhail needs to get the required amount of experience and money. Your answer\nwill be considered correct if its absolute or relative error does not exceed\n10^-6. Namely: let's assume that your answer is a, and the answer of the jury\nis b. The checker program will consider your answer correct, if . Examples\nInput 3 20 20 6 2 1 3 2 6 Output 5.000000000000000 Input 4 1 1 2 3 3 2 2 3 3 2\nOutput 0.400000000000000 Note First sample corresponds to the example in the\nproblem statement.\n\n",
        "cf_contest_id": 605,
        "cf_index": "C",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "geometry"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 20 20\r\n6 2\r\n1 3\r\n2 6\r\n",
                "5.00000000\r\n"
            ],
            [
                "4 1 1\r\n2 3\r\n3 2\r\n2 3\r\n3 2\r\n",
                "0.40000000\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 12 12\r\n5 1\r\n2 2\r\n1 5\r\n",
                "4.00000000\r\n"
            ],
            [
                "3 12 12\r\n5 1\r\n4 4\r\n1 5\r\n",
                "3.00000000\r\n"
            ],
            [
                "3 1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "1.00000000\r\n"
            ],
            [
                "1 4 6\r\n2 3\r\n",
                "2.00000000\r\n"
            ],
            [
                "1 3 4\r\n2 3\r\n",
                "1.50000000\r\n"
            ],
            [
                "2 1 1000000\r\n2 4\r\n5 2\r\n",
                "250000.00000000\r\n"
            ],
            [
                "2 1000000 1\r\n2 4\r\n5 2\r\n",
                "200000.00000000\r\n"
            ],
            [
                "2 1000000 1000000\r\n2 4\r\n5 2\r\n",
                "312500.00000000\r\n"
            ],
            [
                "6 2 2\r\n2 4\r\n5 2\r\n5 2\r\n2 4\r\n2 4\r\n5 2\r\n",
                "0.62500000\r\n"
            ],
            [
                "1 3 5\r\n2 3\r\n",
                "1.66666667\r\n"
            ],
            [
                "2 10 3\r\n2 4\r\n5 2\r\n",
                "2.00000000\r\n"
            ],
            [
                "2 10 4\r\n2 4\r\n5 2\r\n",
                "2.00000000\r\n"
            ],
            [
                "2 10 5\r\n2 4\r\n5 2\r\n",
                "2.18750000\r\n"
            ],
            [
                "2 5 8\r\n2 4\r\n5 2\r\n",
                "2.12500000\r\n"
            ],
            [
                "2 4 8\r\n2 4\r\n5 2\r\n",
                "2.00000000\r\n"
            ],
            [
                "2 3 8\r\n2 4\r\n5 2\r\n",
                "2.00000000\r\n"
            ],
            [
                "2 4 1\r\n2 4\r\n5 2\r\n",
                "0.80000000\r\n"
            ],
            [
                "2 4 2\r\n2 4\r\n5 2\r\n",
                "0.87500000\r\n"
            ],
            [
                "2 4 3\r\n2 4\r\n5 2\r\n",
                "1.06250000\r\n"
            ],
            [
                "2 5 3\r\n2 4\r\n5 2\r\n",
                "1.18750000\r\n"
            ],
            [
                "2 5 4\r\n2 4\r\n5 2\r\n",
                "1.37500000\r\n"
            ],
            [
                "2 4 4\r\n2 4\r\n5 2\r\n",
                "1.25000000\r\n"
            ],
            [
                "2 3 4\r\n2 4\r\n5 2\r\n",
                "1.12500000\r\n"
            ],
            [
                "2 3 3\r\n2 4\r\n5 2\r\n",
                "0.93750000\r\n"
            ],
            [
                "2 2 3\r\n2 4\r\n5 2\r\n",
                "0.81250000\r\n"
            ],
            [
                "2 1 3\r\n2 4\r\n5 2\r\n",
                "0.75000000\r\n"
            ],
            [
                "2 2 4\r\n2 4\r\n5 2\r\n",
                "1.00000000\r\n"
            ],
            [
                "2 5 2\r\n2 4\r\n5 2\r\n",
                "1.00000000\r\n"
            ],
            [
                "2 5 4\r\n2 2\r\n4 3\r\n",
                "1.33333333\r\n"
            ],
            [
                "6 1000000 999999\r\n999999 1\r\n999995 999994\r\n999996 999996\r\n999997 999995\r\n999998 999997\r\n1 999998\r\n",
                "1.00000200\r\n"
            ],
            [
                "7 123456 123459\r\n10 2\r\n3 4\r\n11 3\r\n8 1\r\n5 2\r\n7 1\r\n1 8\r\n",
                "21786.70588235\r\n"
            ],
            [
                "10 123457 123459\r\n5 2\r\n11 4\r\n1 8\r\n11 1\r\n7 1\r\n10 2\r\n8 1\r\n11 3\r\n3 4\r\n11 8\r\n",
                "15432.37500000\r\n"
            ],
            [
                "10 630 764\r\n679 16\r\n34 691\r\n778 366\r\n982 30\r\n177 9\r\n739 279\r\n992 89\r\n488 135\r\n7 237\r\n318 318\r\n",
                "1.47226528\r\n"
            ],
            [
                "10 468662 93838\r\n589910 727627\r\n279516 867207\r\n470524 533177\r\n467834 784167\r\n295605 512137\r\n104422 629804\r\n925609 728473\r\n922365 500342\r\n998983 958315\r\n425628 935048\r\n",
                "0.46913911\r\n"
            ],
            [
                "10 18 25\r\n4 8\r\n16 27\r\n16 13\r\n1 26\r\n8 13\r\n2 14\r\n24 8\r\n4 29\r\n3 19\r\n19 20\r\n",
                "1.04145078\r\n"
            ],
            [
                "10 17 38\r\n6 35\r\n16 37\r\n6 12\r\n16 29\r\n27 15\r\n23 28\r\n4 27\r\n30 12\r\n5 4\r\n40 17\r\n",
                "1.03642384\r\n"
            ],
            [
                "10 36 35\r\n32 37\r\n17 30\r\n20 24\r\n11 21\r\n24 9\r\n25 6\r\n37 23\r\n14 8\r\n32 20\r\n17 39\r\n",
                "1.07266983\r\n"
            ]
        ]
    }
]