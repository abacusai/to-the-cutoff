[
    {
        "name": "Colored Rooks",
        "description": "Ivan is a novice painter. He has \n    n\n dyes of different colors. He also\nknows exactly \n    m\n pairs of colors which harmonize with each other. Ivan\nalso enjoy playing chess. He has \n    5000\n rooks. He wants to take \n    k\n\nrooks, paint each of them in one of \n    n\n colors and then place this \n    k\n\nrooks on a chessboard of size \n    10^9\n    \u00d7 10^9\n. Let's call the set\nof rooks on the board connected if from any rook we can get to any other rook\nin this set moving only through cells with rooks from this set. Assume that\nrooks can jump over other rooks, in other words a rook can go to any cell\nwhich shares vertical and to any cell which shares horizontal. Ivan wants his\narrangement of rooks to have following properties: For any color there is a\nrook of this color on a board; For any color the set of rooks of this color is\nconnected; For any two different colors \n    a\n \n    b\n union of set of rooks\nof color \n    a\n and set of rooks of color \n    b\n is connected if and only if\nthis two colors harmonize with each other.Please help Ivan find such an\narrangement. Input The first line of input contains \n    2\n integers \n    n\n,\n\n    m\n (\n    1 \n    \u2264 n \n    \u2264 100\n, \n    0 \n    \u2264 m \n    \u2264 min(1000, \n     \n     \n    n(n-1)/2)\n) \u2014 number of colors and number of pairs of colors which\nharmonize with each other. In next \n    m\n lines pairs of colors which\nharmonize with each other are listed. Colors are numbered from \n    1\n to\n\n    n\n. It is guaranteed that no pair occurs twice in this list. Output Print\n\n    n\n blocks, \n    i\n-th of them describes rooks of \n    i\n-th color. In the\nfirst line of block print one number \n    a_i\n (\n    1 \n    \u2264 a_i\n    \u2264\n    5000\n) \u2014 number of rooks of color \n    i\n. In each of next \n    a_i\n lines\nprint two integers \n    x\n and \n    y\n (\n    1 \n    \u2264 x, \n     \n      y \n    \u2264\n    10^9\n) \u2014 coordinates of the next rook. All rooks must be on different\ncells. Total number of rooks must not exceed \n    5000\n. It is guaranteed that\nthe solution exists. Examples Input 3 2 1 2 2 3 Output 2 3 4 1 4 4 1 2 2 2 2 4\n5 4 1 5 1 Input 3 3 1 2 2 3 3 1 Output 1 1 1 1 1 2 1 1 3 Input 3 1 1 3 Output\n1 1 1 1 2 2 1 3 1 Note Rooks arrangements for all three examples (red is color\n\n    1\n, green is color \n    2\n and blue is color \n    3\n).\n\n",
        "cf_contest_id": 1068,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graphs"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n1 2\r\n2 3\r\n",
                "2\r\n1 5001\r\n1 1\r\n3\r\n2 5002\r\n2 1\r\n2 2\r\n2\r\n3 5003\r\n3 2\r\n"
            ],
            [
                "3 3\r\n1 2\r\n2 3\r\n3 1\r\n",
                "3\r\n1 5001\r\n1 1\r\n1 3\r\n3\r\n2 5002\r\n2 1\r\n2 2\r\n3\r\n3 5003\r\n3 2\r\n3 3\r\n"
            ],
            [
                "3 1\r\n1 3\r\n",
                "2\r\n1 5001\r\n1 1\r\n1\r\n2 5002\r\n2\r\n3 5003\r\n3 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 0\r\n",
                "1\r\n1 5001\r\n"
            ],
            [
                "4 5\r\n1 3\r\n4 3\r\n2 3\r\n2 4\r\n1 4\r\n",
                "3\r\n1 5001\r\n1 1\r\n1 5\r\n3\r\n2 5002\r\n2 3\r\n2 4\r\n4\r\n3 5003\r\n3 1\r\n3 2\r\n3 3\r\n4\r\n4 5004\r\n4 2\r\n4 4\r\n4 5\r\n"
            ],
            [
                "4 6\r\n3 4\r\n2 3\r\n2 1\r\n1 3\r\n1 4\r\n4 2\r\n",
                "4\r\n1 5001\r\n1 3\r\n1 4\r\n1 5\r\n4\r\n2 5002\r\n2 2\r\n2 3\r\n2 6\r\n4\r\n3 5003\r\n3 1\r\n3 2\r\n3 4\r\n4\r\n4 5004\r\n4 1\r\n4 5\r\n4 6\r\n"
            ],
            [
                "7 4\r\n3 4\r\n3 5\r\n5 7\r\n2 5\r\n",
                "1\r\n1 5001\r\n2\r\n2 5002\r\n2 4\r\n3\r\n3 5003\r\n3 1\r\n3 2\r\n2\r\n4 5004\r\n4 1\r\n4\r\n5 5005\r\n5 2\r\n5 3\r\n5 4\r\n1\r\n6 5006\r\n2\r\n7 5007\r\n7 3\r\n"
            ],
            [
                "5 3\r\n1 2\r\n2 3\r\n1 3\r\n",
                "3\r\n1 5001\r\n1 1\r\n1 3\r\n3\r\n2 5002\r\n2 1\r\n2 2\r\n3\r\n3 5003\r\n3 2\r\n3 3\r\n1\r\n4 5004\r\n1\r\n5 5005\r\n"
            ],
            [
                "3 1\r\n1 2\r\n",
                "2\r\n1 5001\r\n1 1\r\n2\r\n2 5002\r\n2 1\r\n1\r\n3 5003\r\n"
            ],
            [
                "4 1\r\n3 2\r\n",
                "1\r\n1 5001\r\n2\r\n2 5002\r\n2 1\r\n2\r\n3 5003\r\n3 1\r\n1\r\n4 5004\r\n"
            ],
            [
                "2 1\r\n1 2\r\n",
                "2\r\n1 5001\r\n1 1\r\n2\r\n2 5002\r\n2 1\r\n"
            ],
            [
                "2 0\r\n",
                "1\r\n1 5001\r\n1\r\n2 5002\r\n"
            ]
        ]
    }
]