[
    {
        "name": "Attack on Red Kingdom",
        "description": "The Red Kingdom is attacked by the White King and the Black King! The Kingdom\nis guarded by \n    n\n castles, the \n    i\n-th castle is defended by \n    a_i\n\nsoldiers. To conquer the Red Kingdom, the Kings have to eliminate all the\ndefenders. Each day the White King launches an attack on one of the castles.\nThen, at night, the forces of the Black King attack a castle (possibly the\nsame one). Then the White King attacks a castle, then the Black King, and so\non. The first attack is performed by the White King. Each attack must target a\ncastle with at least one alive defender in it. There are three types of\nattacks: a mixed attack decreases the number of defenders in the targeted\ncastle by \n    x\n (or sets it to \n    0\n if there are already less than\n\n    x\n defenders); an infantry attack decreases the number of defenders in\nthe targeted castle by \n    y\n (or sets it to \n    0\n if there are already\nless than \n    y\n defenders); a cavalry attack decreases the number of\ndefenders in the targeted castle by \n    z\n (or sets it to \n    0\n if there\nare already less than \n    z\n defenders). The mixed attack can be launched at\nany valid target (at any castle with at least one soldier). However, the\ninfantry attack cannot be launched if the previous attack on the targeted\ncastle had the same type, no matter when and by whom it was launched. The same\napplies to the cavalry attack. A castle that was not attacked at all can be\ntargeted by any type of attack. The King who launches the last attack will be\nglorified as the conqueror of the Red Kingdom, so both Kings want to launch\nthe last attack (and they are wise enough to find a strategy that allows them\nto do it no matter what are the actions of their opponent, if such strategy\nexists). The White King is leading his first attack, and you are responsible\nfor planning it. Can you calculate the number of possible options for the\nfirst attack that allow the White King to launch the last attack? Each option\nfor the first attack is represented by the targeted castle and the type of\nattack, and two options are different if the targeted castles or the types of\nattack are different. Input The first line contains one integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. Then, the test cases\nfollow. Each test case is represented by two lines. The first line contains\nfour integers \n    n\n, \n    x\n, \n    y\n and \n    z\n (\n    1 \n    \u2264 n \n    \u2264 3\n    \n    \u00b7 10^5\n, \n    1 \n    \u2264 x, y, z \n    \u2264 5\n). The second line contains\n\n    n\n integers \n    a_1\n, \n    a_2\n, ..., \n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^18\n). It is guaranteed that the sum of values of \n    n\n over all test\ncases in the input does not exceed \n    3 \n    \u00b7 10^5\n. Output For each test\ncase, print the answer to it: the number of possible options for the first\nattack of the White King (or \n    0\n, if the Black King can launch the last\nattack no matter how the White King acts). Examples Input 3 2 1 3 4 7 6 1 1 2\n3 1 1 1 2 2 3 Output 2 3 0 Input 10 6 5 4 5 2 3 2 3 1 3 1 5 2 3 10 4 4 2 3 8\n10 8 5 2 2 1 4 8 5 3 5 3 5 9 2 10 4 5 5 5 2 10 4 2 2 3 1 4 1 10 3 1 5 3 9 8 7\n2 5 4 5 8 8 3 5 1 4 5 5 10 Output 0 2 1 2 5 12 5 0 0 2\n\n",
        "cf_contest_id": 1312,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "two pointers"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n2 1 3 4\r\n7 6\r\n1 1 2 3\r\n1\r\n1 1 2 2\r\n3\r\n",
                "2\r\n3\r\n0\r\n"
            ],
            [
                "10\r\n6 5 4 5\r\n2 3 2 3 1 3\r\n1 5 2 3\r\n10\r\n4 4 2 3\r\n8 10 8 5\r\n2 2 1 4\r\n8 5\r\n3 5 3 5\r\n9 2 10\r\n4 5 5 5\r\n2 10 4 2\r\n2 3 1 4\r\n1 10\r\n3 1 5 3\r\n9 8 7\r\n2 5 4 5\r\n8 8\r\n3 5 1 4\r\n5 5 10\r\n",
                "0\r\n2\r\n1\r\n2\r\n5\r\n12\r\n5\r\n0\r\n0\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n2 2 3 5\r\n4 5\r\n2 1 1 1\r\n1 2\r\n7 1 2 2\r\n3 5 3 1 4 5 5\r\n1 3 3 1\r\n2\r\n4 5 5 3\r\n1 3 4 3\r\n2 3 4 3\r\n4 2\r\n2 1 2 5\r\n3 1\r\n3 2 3 5\r\n2 1 3\r\n2 4 5 1\r\n4 4\r\n5 2 4 5\r\n5 5 5 2 1\r\n",
                "1\r\n6\r\n8\r\n2\r\n1\r\n2\r\n1\r\n2\r\n0\r\n3\r\n"
            ]
        ]
    }
]