[
    {
        "name": "Cycle Palindrome",
        "description": "We say that a sequence of \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n is a\npalindrome if for all \n    1 \n    \u2264 i \n    \u2264 n\n, \n    a_i = a_n-i+1\n. You\nare given a sequence of \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n and you\nhave to find, if it exists, a cycle permutation \n    \u03c3\n so that the\nsequence \n    a_\n    \u03c3(1), a_\n    \u03c3(2), \n    \u2026, a_\n    \u03c3(n)\n is\na palindrome. A permutation of \n    1, 2, \n    \u2026, n\n is a bijective function\nfrom \n    1, 2, \n    \u2026, n\n to \n    1, 2, \n    \u2026, n\n.\nWe say that a permutation \n    \u03c3\n is a cycle permutation if \n    1,\n    \n    \u03c3(1), \n    \u03c3^2(1), \n    \u2026, \n    \u03c3^n-1(1)\n are pairwise\ndifferent numbers. Here \n    \u03c3^m(1)\n denotes\n\n    \u03c3(\n    \u03c3(\n    \u2026\n    \u03c3_m \n     times(1)\n    \n    \u2026))\n. Input The input consists of multiple test cases. The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 3 \n    \u00b7 10^4\n) \u2014\nthe number of test cases. Description of the test cases follows. The first\nline of each test case contains an integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the size of the sequence. The second line of each test case\ncontains \n    n\n integers \n    a_1, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    n\n). The sum of \n    n\n for all test cases is at most \n    2 \n    \u00b7 10^5\n.\nOutput For each test case, output one line with YES if a cycle permutation\nexists, otherwise output one line with NO. If the answer is YES, output one\nadditional line with \n    n\n integers \n    \u03c3(1), \n    \u03c3(2), \n    \u2026,\n    \n    \u03c3(n)\n, the permutation. If there is more than one permutation, you\nmay print any. Example Input 3 4 1 2 2 1 3 1 2 1 7 1 3 3 3 1 2 2 Output YES 3\n1 4 2 NO YES 5 3 7 2 6 4 1\n\n",
        "cf_contest_id": 1656,
        "cf_index": "G",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graphs",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4\r\n1 2 2 1\r\n3\r\n1 2 1\r\n7\r\n1 3 3 3 1 2 2\r\n",
                "YES\r\n2 4 1 3 \r\nNO\r\nYES\r\n5 6 4 2 3 7 1 \r\n"
            ]
        ],
        "private_cases": []
    }
]