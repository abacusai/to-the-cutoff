[
    {
        "name": "Election Promises",
        "description": "In Byteland, there are two political parties fighting for seats in the\nParliament in the upcoming elections: Wrong Answer Party and Time Limit\nExceeded Party. As they want to convince as many citizens as possible to cast\ntheir votes on them, they keep promising lower and lower taxes. There are\n\n    n\n cities in Byteland, connected by \n    m\n one-way roads. Interestingly\nenough, the road network has no cycles \u2014 it's impossible to start in any city,\nfollow a number of roads, and return to that city. Last year, citizens of the\n\n    i\n-th city had to pay \n    h_i\n bourles of tax. Parties will now\nalternately hold the election conventions in various cities. If a party holds\na convention in city \n    v\n, the party needs to decrease the taxes in this\ncity to a non-negative integer amount of bourles. However, at the same time\nthey can arbitrarily modify the taxes in each of the cities that can be\nreached from \n    v\n using a single road. The only condition that must be\nfulfilled that the tax in each city has to remain a non-negative integer\namount of bourles. The first party to hold the convention is Wrong Answer\nParty. It's predicted that the party to hold the last convention will win the\nelection. Can Wrong Answer Party win regardless of Time Limit Exceeded Party's\nmoves? Input The first line of the input contains two integers \n    n\n,\n\n    m\n (\n    1 \n    \u2264 n \n    \u2264 200\n     000\n, \n    0 \n    \u2264 m \n    \u2264\n    200\n     000\n) \u2014 the number of cities and roads in Byteland. The next line\ncontains \n    n\n space-separated integers \n    h_1, h_2, \n    \u2026, h_n\n (\n    0\n    \n    \u2264 h_i \n    \u2264 10^9\n); \n    h_i\n denotes the amount of taxes paid in the\n\n    i\n-th city. Each of the following \n    m\n lines contains two integers\n(\n    1 \n    \u2264 u, v \n    \u2264 n\n, \n    u \n    \u2260 v\n), and describes a one-way road\nleading from the city \n    u\n to the city \n    v\n. There will be no cycles in\nthe road network. No two roads will connect the same pair of cities. We can\nshow that the conventions cannot be held indefinitely for any correct test\ncase. Output If Wrong Answer Party can win the election, output WIN in the\nfirst line of your output. In this case, you're additionally asked to produce\nany convention allowing the party to win regardless of the opponent's actions.\nThe second line should contain \n    n\n non-negative integers \n    h'_1, h'_2,\n    \n    \u2026, h'_n\n (\n    0 \n    \u2264 h'_i \n    \u2264 2 \n    \u00b7 10^18\n) describing the\namount of taxes paid in consecutive cities after the convention. If there are\nmultiple answers, output any. We guarantee that if the party has any winning\nmove, there exists a move after which no city has to pay more than \n    2\n    \n    \u00b7 10^18\n bourles. If the party cannot assure their victory, output\nLOSE in the first and only line of the output. Examples Input 4 2 2 1 1 5 1 2\n3 4 Output WIN 1 5 1 5 Input 4 2 1 5 1 5 1 2 3 4 Output LOSE Input 3 3 314 159\n265 1 2 1 3 3 2 Output WIN 0 0 0 Input 6 4 2 2 5 5 6 6 1 3 2 4 3 5 4 6 Output\nLOSE Note In the first example, Wrong Answer Party should hold the convention\nin the city \n    1\n. The party will decrease the taxes in this city to \n    1\n\nbourle. As the city \n    2\n is directly reachable from \n    1\n, we can\narbitrarily modify the taxes in this city. The party should change the tax to\n\n    5\n bourles. It can be easily proved that Time Limit Exceeded cannot win\nthe election after this move if Wrong Answer Party plays optimally. The second\nexample test presents the situation we created after a single move in the\nprevious test; as it's Wrong Answer Party's move now, the party cannot win. In\nthe third test, we should hold the convention in the first city. This allows\nus to change the taxes in any city to any desired value; we can for instance\ndecide to set all the taxes to zero, which allows the Wrong Answer Party to\nwin the election immediately.\n\n",
        "cf_contest_id": 1149,
        "cf_index": "E",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2\r\n2 1 1 5\r\n1 2\r\n3 4\r\n",
                "WIN\r\n1 5 1 5 "
            ],
            [
                "4 2\r\n1 5 1 5\r\n1 2\r\n3 4\r\n",
                "LOSE\r\n"
            ],
            [
                "3 3\r\n314 159 265\r\n1 2\r\n1 3\r\n3 2\r\n",
                "WIN\r\n0 0 0 "
            ],
            [
                "6 4\r\n2 2 5 5 6 6\r\n1 3\r\n2 4\r\n3 5\r\n4 6\r\n",
                "LOSE\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 0\r\n0\r\n",
                "LOSE\r\n"
            ],
            [
                "1 0\r\n271828182\r\n",
                "WIN\r\n0 "
            ],
            [
                "3 2\r\n1 1 1\r\n1 2\r\n2 3\r\n",
                "WIN\r\n1 0 1 "
            ],
            [
                "3 0\r\n4 1 4\r\n",
                "WIN\r\n4 0 4 "
            ],
            [
                "6 3\r\n678678678 395063145 789789 2 3 4\r\n4 1\r\n5 2\r\n6 3\r\n",
                "WIN\r\n678678678 395063145 1073741823 2 3 1 "
            ],
            [
                "3 0\r\n1 2 3\r\n",
                "LOSE\r\n"
            ],
            [
                "3 2\r\n1 0 1\r\n3 2\r\n2 1\r\n",
                "LOSE\r\n"
            ],
            [
                "2 0\r\n123456789 987654321\r\n",
                "WIN\r\n123456789 123456789 "
            ],
            [
                "2 0\r\n1000000000 1000000000\r\n",
                "LOSE\r\n"
            ],
            [
                "2 1\r\n1000000000 1000000000\r\n1 2\r\n",
                "WIN\r\n0 0 "
            ],
            [
                "2 1\r\n1000000000 1000000000\r\n2 1\r\n",
                "WIN\r\n0 0 "
            ],
            [
                "3 2\r\n2 3 4\r\n1 2\r\n1 3\r\n",
                "WIN\r\n0 4 4 "
            ],
            [
                "3 2\r\n123 345 123\r\n1 2\r\n3 2\r\n",
                "WIN\r\n123 0 123 "
            ],
            [
                "3 2\r\n123 345 567\r\n1 2\r\n3 2\r\n",
                "WIN\r\n123 0 123 "
            ]
        ]
    }
]