[
    {
        "name": "Two Subsequences",
        "description": "You are given a string \n    s\n. You need to find two non-empty strings \n    a\n\nand \n    b\n such that the following conditions are satisfied: Strings \n    a\n\nand \n    b\n are both subsequences of \n    s\n. For each index \n    i\n,\ncharacter \n    s_i\n of string \n    s\n must belong to exactly one of strings\n\n    a\n or \n    b\n. String \n    a\n is lexicographically minimum possible;\nstring \n    b\n may be any possible string. Given string \n    s\n, print any\nvalid \n    a\n and \n    b\n. Reminder: A string \n    a\n (\n    b\n) is a\nsubsequence of a string \n    s\n if \n    a\n (\n    b\n) can be obtained from\n\n    s\n by deletion of several (possibly, zero) elements. For example,\n\"dores\", \"cf\", and \"for\" are subsequences of \"codeforces\", while \"decor\" and\n\"fork\" are not. A string \n    x\n is lexicographically smaller than a string\n\n    y\n if and only if one of the following holds: \n    x\n is a prefix of\n\n    y\n, but \n    x \n     y\n; in the first position where \n    x\n and \n    y\n\ndiffer, the string \n    x\n has a letter that appears earlier in the alphabet\nthan the corresponding letter in \n    y\n. Input Each test contains multiple\ntest cases. The first line contains the number of test cases \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 1000\n). Description of the test cases follows. The first and\nonly line of each test case contains one string \n    s\n (\n    2 \n    \u2264 |s| \n    \u2264\n    100\n where \n    |s|\n means the length of \n    s\n). String \n    s\n consists\nof lowercase Latin letters. Output For each test case, print the strings\n\n    a\n and \n    b\n that satisfy the given conditions. If there are multiple\nanswers, print any. Example Input 3 fc aaaa thebrightboiler Output c f a aaa b\ntherightboiler Note In the first test case, there are only two choices: either\n\n    a =\n f and \n    b =\n c or \n    a =\n c and \n    b =\n f. And \n    a =\nc\nis lexicographically smaller than \n    a =\n f. In the second test case, a is\nthe only character in the string. In the third test case, it can be proven\nthat b is the lexicographically smallest subsequence of \n    s\n. The second\nstring can be of two variants; one of them is given here.\n\n",
        "cf_contest_id": 1602,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\nfc\r\naaaa\r\nthebrightboiler\r\n",
                "c f\r\n\r\na aaa\r\n\r\nb therightboiler\r\n\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\nkbxiahaosfyclumgnaczggrnljumplxknibxmeedvnefh\r\ndkqosshpegwunnzsohmxxumnnhckwyczaowpoxezqlovukcuuqgrsbrtifngthlquuqdjvyltgjbrmwoefypvdyzqwlainjoqx\r\nwktnblvszfndrjodikurlytsayblhpdnrytxnhfejtjfzeeamtt\r\ngkffwelozvmyosbmoufjpjzbeohbulotcinspqmyurolxwlwloobkszpnddxhrkbxoytmdsqxaetqzmufc\r\npdhelid\r\n",
                "a kbxihaosfyclumgnaczggrnljumplxknibxmeedvnefh\r\n\r\na dkqosshpegwunnzsohmxxumnnhckwyczowpoxezqlovukcuuqgrsbrtifngthlquuqdjvyltgjbrmwoefypvdyzqwlainjoqx\r\n\r\na wktnblvszfndrjodikurlytsyblhpdnrytxnhfejtjfzeeamtt\r\n\r\na gkffwelozvmyosbmoufjpjzbeohbulotcinspqmyurolxwlwloobkszpnddxhrkbxoytmdsqxetqzmufc\r\n\r\nd phelid\r\n\r\n"
            ]
        ]
    }
]