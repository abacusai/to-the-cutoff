[
    {
        "name": "Gardener Alex",
        "description": "Gardener Alex loves to grow trees. We remind that tree is a connected acyclic\ngraph on \n    n\n vertices. Today he decided to grow a rooted binary tree. A\nbinary tree is a tree where any vertex has no more than two sons. Luckily,\nAlex has a permutation of numbers from \n    1\n to \n    n\n which he was\npresented at his last birthday, so he decided to grow a tree according to this\npermutation. To do so he does the following process: he finds a minimum\nelement and makes it a root of the tree. After that permutation is divided\ninto two parts: everything that is to the left of the minimum element, and\neverything that is to the right. The minimum element on the left part becomes\nthe left son of the root, and the minimum element on the right part becomes\nthe right son of the root. After that, this process is repeated recursively on\nboth parts. Now Alex wants to grow a forest of trees: one tree for each cyclic\nshift of the permutation. He is interested in what cyclic shift gives the tree\nof minimum depth. Unfortunately, growing a forest is a hard and long process,\nbut Alex wants the answer right now. Will you help him? We remind that cyclic\nshift of permutation \n    a_1, a_2, \n    \u2026, a_k, \n    \u2026, a_n\n for \n    k\n\nelements to the left is the permutation \n    a_k + 1, a_k + 2, \n    \u2026,\n    a_n, a_1, a_2, \n    \u2026, a_k\n. Input First line contains an integer number\n\n    n \u00a0 (1 \n    \u2a7d n \n    \u2a7d 200\n     000)\n \u2014 length of the\npermutation. Second line contains \n    n\n integer numbers \n    a_1, a_2,\n    \n    \u2026, a_n \u00a0 (1 \n    \u2a7d a_i \n    \u2a7d n)\n, and it is guaranteed\nthat all numbers occur exactly one time. Output Print two numbers separated\nwith space: minimum possible depth of a tree and how many elements we need to\nshift left to achieve this depth. The number of elements should be a number\nfrom \n    0\n to \n    n - 1\n. If there are several possible answers, print any\nof them. Example Input 4 1 2 3 4 Output 3 2 Note The following picture depicts\nall possible trees for sample test and cyclic shifts on which they are\nachieved.\n\n",
        "cf_contest_id": 1220,
        "cf_index": "F",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 2 3 4\r\n",
                "3 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "6\r\n6 5 3 1 4 2\r\n",
                "3 1\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1 0\r\n"
            ],
            [
                "10\r\n4 2 6 3 1 9 10 5 8 7\r\n",
                "4 9\r\n"
            ],
            [
                "10\r\n7 5 1 6 10 3 4 8 9 2\r\n",
                "4 7\r\n"
            ],
            [
                "10\r\n6 9 2 4 1 10 3 7 8 5\r\n",
                "5 7\r\n"
            ],
            [
                "10\r\n5 6 8 3 1 10 4 7 2 9\r\n",
                "4 1\r\n"
            ],
            [
                "10\r\n7 5 4 10 8 2 3 9 6 1\r\n",
                "5 0\r\n"
            ],
            [
                "10\r\n1 2 3 4 5 6 7 8 9 10\r\n",
                "6 5\r\n"
            ],
            [
                "10\r\n2 3 4 5 6 7 8 9 10 1\r\n",
                "6 4\r\n"
            ],
            [
                "10\r\n8 9 10 1 2 3 4 5 6 7\r\n",
                "6 8\r\n"
            ],
            [
                "15\r\n1 11 10 12 9 14 13 15 4 3 5 2 7 6 8\r\n",
                "4 8\r\n"
            ],
            [
                "15\r\n4 3 5 2 7 6 8 1 11 10 12 9 14 13 15\r\n",
                "4 0\r\n"
            ],
            [
                "15\r\n11 10 12 9 14 13 15 4 3 5 2 7 6 8 1\r\n",
                "4 7\r\n"
            ],
            [
                "10\r\n2 4 5 1 7 8 6 9 10 3\r\n",
                "4 8\r\n"
            ],
            [
                "100\r\n30 99 96 51 67 72 33 35 93 70 25 24 6 9 22 83 86 5 79 46 29 88 66 20 87 47 45 71 48 52 61 37 19 40 44 11 8 42 63 92 31 94 2 4 28 77 21 75 13 95 76 14 53 69 54 38 59 60 98 55 39 68 85 23 15 18 58 78 43 49 16 1 82 91 7 84 34 89 17 27 90 26 36 81 64 74 50 57 10 73 12 62 3 100 80 32 56 41 97 65\r\n",
                "13 72\r\n"
            ],
            [
                "100\r\n51 69 70 74 92 98 95 56 57 93 62 89 21 15 30 80 68 83 76 53 4 47 49 71 24 78 48 2 39 59 35 25 64 3 7 1 87 22 88 58 26 65 6 43 72 13 11 27 37 18 82 12 28 90 85 40 32 38 86 61 20 16 42 100 94 54 96 60 77 9 17 41 73 97 23 34 5 52 63 75 36 44 91 66 99 29 50 79 84 45 31 10 46 33 55 81 14 67 19 8\r\n",
                "13 0\r\n"
            ],
            [
                "100\r\n66 29 41 64 11 8 70 67 58 55 92 93 10 77 86 39 33 97 83 26 6 30 40 1 48 34 90 61 28 20 56 49 23 96 89 75 63 42 73 7 68 81 15 65 60 85 76 51 50 31 2 12 14 57 4 95 88 87 79 52 80 78 37 43 13 74 53 46 99 35 54 18 3 22 84 9 38 45 25 21 62 72 71 16 100 32 59 47 94 82 91 44 36 98 24 5 69 19 27 17\r\n",
                "11 73\r\n"
            ],
            [
                "100\r\n96 36 10 82 40 33 43 91 8 14 84 95 93 62 47 4 22 94 78 83 16 32 48 34 46 67 45 37 18 25 59 5 20 81 58 26 85 90 77 17 98 3 30 11 49 65 15 28 19 53 1 12 99 71 100 31 66 89 13 7 73 39 2 68 6 86 55 92 41 87 29 57 23 80 88 54 42 79 51 56 69 60 38 50 63 72 70 76 61 97 9 27 21 35 24 44 64 52 74 75\r\n",
                "12 93\r\n"
            ],
            [
                "100\r\n39 8 87 59 49 19 6 64 81 26 90 58 30 93 51 94 91 10 37 68 14 86 75 41 15 73 76 85 13 84 34 25 54 92 23 11 99 53 80 74 22 29 20 79 7 66 62 72 28 71 12 48 18 9 78 38 43 47 5 50 77 82 52 96 97 65 55 88 16 45 69 4 61 42 60 100 24 32 57 21 89 70 27 35 98 83 56 40 46 44 1 2 3 17 31 95 36 67 63 33\r\n",
                "11 18\r\n"
            ],
            [
                "100\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "51 50\r\n"
            ],
            [
                "100\r\n18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\r\n",
                "51 33\r\n"
            ],
            [
                "100\r\n60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59\r\n",
                "51 91\r\n"
            ],
            [
                "127\r\n1 70 69 71 68 73 72 74 67 77 76 78 75 80 79 81 66 85 84 86 83 88 87 89 82 92 91 93 90 95 94 96 65 101 100 102 99 104 103 105 98 108 107 109 106 111 110 112 97 116 115 117 114 119 118 120 113 123 122 124 121 126 125 127 7 6 8 5 10 9 11 4 14 13 15 12 17 16 18 3 22 21 23 20 25 24 26 19 29 28 30 27 32 31 33 2 38 37 39 36 41 40 42 35 45 44 46 43 48 47 49 34 53 52 54 51 56 55 57 50 60 59 61 58 63 62 64\r\n",
                "7 64\r\n"
            ],
            [
                "127\r\n7 6 8 5 10 9 11 4 14 13 15 12 17 16 18 3 22 21 23 20 25 24 26 19 29 28 30 27 32 31 33 2 38 37 39 36 41 40 42 35 45 44 46 43 48 47 49 34 53 52 54 51 56 55 57 50 60 59 61 58 63 62 64 1 70 69 71 68 73 72 74 67 77 76 78 75 80 79 81 66 85 84 86 83 88 87 89 82 92 91 93 90 95 94 96 65 101 100 102 99 104 103 105 98 108 107 109 106 111 110 112 97 116 115 117 114 119 118 120 113 123 122 124 121 126 125 127\r\n",
                "7 0\r\n"
            ],
            [
                "127\r\n116 115 117 114 119 118 120 113 123 122 124 121 126 125 127 7 6 8 5 10 9 11 4 14 13 15 12 17 16 18 3 22 21 23 20 25 24 26 19 29 28 30 27 32 31 33 2 38 37 39 36 41 40 42 35 45 44 46 43 48 47 49 34 53 52 54 51 56 55 57 50 60 59 61 58 63 62 64 1 70 69 71 68 73 72 74 67 77 76 78 75 80 79 81 66 85 84 86 83 88 87 89 82 92 91 93 90 95 94 96 65 101 100 102 99 104 103 105 98 108 107 109 106 111 110 112 97\r\n",
                "7 15\r\n"
            ],
            [
                "100\r\n15 22 23 21 25 24 26 2 30 31 29 32 33 28 35 36 34 37 38 27 41 42 40 43 44 39 46 47 45 49 48 50 1 55 56 54 57 58 53 60 61 59 62 63 52 66 67 65 68 69 64 71 72 70 74 73 75 51 79 80 78 81 82 77 84 85 83 87 86 88 76 91 92 90 93 94 89 96 97 95 99 98 100 6 7 5 8 9 4 11 12 10 13 14 3 17 18 16 19 20\r\n",
                "7 82\r\n"
            ]
        ]
    }
]