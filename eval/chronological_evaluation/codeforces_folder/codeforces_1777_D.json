[
    {
        "name": "Score of a Tree",
        "description": "You are given a tree of \n    n\n nodes, rooted at \n    1\n. Every node has a\nvalue of either \n    0\n or \n    1\n at time \n    t=0\n. At any integer time\n\n    t>0\n, the value of a node becomes the bitwise XOR of the values of its\nchildren at time \n    t - 1\n; the values of leaves become \n    0\n since they\ndon't have any children. Let \n    S(t)\n denote the sum of values of all nodes\nat time \n    t\n. Let \n    F(A)\n denote the sum of \n    S(t)\n across all values\nof \n    t\n such that \n    0 \n    \u2264 t \n    \u2264 10^100\n, where \n    A\n is the\ninitial assignment of \n    0\ns and \n    1\ns in the tree. The task is to find\nthe sum of \n    F(A)\n for all \n    2^n\n initial configurations of \n    0\ns and\n\n    1\ns in the tree. Print the sum modulo \n    10^9+7\n. Input Each test\ncontains multiple test cases. The first line contains the number of test cases\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^5\n). The description of the test cases\nfollows. The first line of each test case contains \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    2 \n    \u00b7 10^5\n) \u2014 the number of nodes in the tree. The next \n    n-1\n lines\nof each test case contain two integers each \u2014 \n    u\n, \n    v\n indicating an\nedge between \n    u\n and \n    v\n (\n    1 \n    \u2264 u, v \n    \u2264 n\n). It is\nguaranteed that the sum of \n    n\n over all test cases does not exceed \n    2\n    \n    \u00b7 10^5\n. Output Output the sum modulo \n    10^9+7\n for each test case.\nExample Input 1 6 1 2 1 3 3 4 3 5 3 6 Output 288 Note Let us find \n    F(A)\n\nfor the configuration \n    A = [0,1,0,0,1,1]\n (\n    A[i]\n denotes the value of\nnode \n    i\n). Initially (at \n    t = 0\n) our tree is as shown in the picture\nbelow. In each node, two values are shown: the number and the value of this\nnode. \n    S(0)\n for this configuration is \n    3\n. At \n    t = 1\n the\nconfiguration changes to \n    [1,0,0,0,0,0]\n. The tree looks as shown below.\n\n    S(1) = 1\n. At \n    t = 2\n the configuration changes to\n\n    [0,0,0,0,0,0]\n. The tree looks as shown below. \n    S(2) = 0\n. For all\n\n    t>2\n, the graph remains unchanged, so \n    S(t)=0\n for all \n    t > 2\n.\nSo, for the initial configuration \n    A = [0,1,0,0,1,1]\n, the value of\n\n    F(A) = 3 + 1 = 4\n. Doing this process for all possible \n    2^6\n\nconfigurations yields us an answer of \n    288\n.\n\n",
        "cf_contest_id": 1777,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "combinatorics",
            "dfs and similar",
            "dp",
            "math",
            "probabilities",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "1\r\n6\r\n1 2\r\n1 3\r\n3 4\r\n3 5\r\n3 6\r\n",
                "288\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n31\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n11 12\r\n12 13\r\n13 14\r\n14 15\r\n15 16\r\n16 17\r\n17 18\r\n18 19\r\n19 20\r\n20 21\r\n20 22\r\n20 23\r\n20 24\r\n20 25\r\n20 26\r\n20 27\r\n20 28\r\n20 29\r\n20 30\r\n1 31\r\n2\r\n1 2\r\n1\r\n",
                "771777778\r\n6\r\n1\r\n"
            ],
            [
                "1\r\n2\r\n1 2\r\n",
                "6\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n31\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n11 12\r\n12 13\r\n13 14\r\n14 15\r\n15 16\r\n16 17\r\n17 18\r\n18 19\r\n19 20\r\n20 21\r\n20 22\r\n20 23\r\n20 24\r\n20 25\r\n20 26\r\n20 27\r\n20 28\r\n20 29\r\n20 30\r\n1 31\r\n",
                "771777778\r\n"
            ]
        ]
    }
]