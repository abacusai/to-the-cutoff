[
    {
        "name": "INTERCALC",
        "description": "DO YOU EXPECT ME TO FIND THIS OUT? WHAT BASE AND/XOR LANGUAGE INCLUDES string?\nDON'T BYTE OF MORE THAN YOU CAN CHEW YOU CAN ONLY DISTORT THE LARGEST OF\nMATHEMATICS SO FAR SAYING \"ABRACADABRA\" WITHOUT A MAGIC AND WON'T DO YOU ANY\nGOOD THE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT! I HAVE NO ARRAY\nAND I MUST SCREAM ELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE Input The\nfirst line of input data contains a single integer n (1 \u2264 n \u2264 10). The second\nline of input data contains n space-separated integers ai (1 \u2264 ai \u2264 11).\nOutput Output a single integer. Example Input 4 2 5 3 1 Output 4\n\n",
        "cf_contest_id": 784,
        "cf_index": "C",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "4\r\n2 5 3 1\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 5\r\n",
                "0\r\n"
            ],
            [
                "1\r\n8\r\n",
                "0\r\n"
            ],
            [
                "6\r\n1 1 1 3 2 9\r\n",
                "0\r\n"
            ],
            [
                "5\r\n8 9 3 1 9\r\n",
                "0\r\n"
            ],
            [
                "6\r\n1 5 2 1 7 11\r\n",
                "0\r\n"
            ],
            [
                "8\r\n1 6 11 8 5 10 7 8\r\n",
                "3\r\n"
            ],
            [
                "3\r\n4 9 6\r\n",
                "15\r\n"
            ],
            [
                "2\r\n4 8\r\n",
                "0\r\n"
            ],
            [
                "3\r\n1 1 5\r\n",
                "0\r\n"
            ],
            [
                "5\r\n4 5 5 2 11\r\n",
                "0\r\n"
            ],
            [
                "6\r\n1 7 2 8 8 2\r\n",
                "10\r\n"
            ],
            [
                "5\r\n3 9 3 2 3\r\n",
                "10\r\n"
            ],
            [
                "7\r\n6 6 1 1 1 2 3\r\n",
                "5\r\n"
            ],
            [
                "7\r\n11 1 2 8 10 5 9\r\n",
                "2\r\n"
            ],
            [
                "7\r\n4 5 1 10 10 4 1\r\n",
                "11\r\n"
            ],
            [
                "10\r\n5 5 10 10 10 2 4 3 4 10\r\n",
                "0\r\n"
            ],
            [
                "8\r\n4 7 11 3 11 3 1 1\r\n",
                "10\r\n"
            ],
            [
                "2\r\n5 9\r\n",
                "0\r\n"
            ],
            [
                "6\r\n2 1 10 2 7 5\r\n",
                "15\r\n"
            ],
            [
                "6\r\n3 5 9 10 5 4\r\n",
                "14\r\n"
            ],
            [
                "8\r\n3 5 8 10 3 4 2 10\r\n",
                "0\r\n"
            ],
            [
                "7\r\n1 6 5 3 9 5 9\r\n",
                "0\r\n"
            ],
            [
                "8\r\n7 2 6 3 6 4 1 8\r\n",
                "0\r\n"
            ],
            [
                "10\r\n8 10 6 10 4 3 4 6 7 4\r\n",
                "14\r\n"
            ],
            [
                "2\r\n1 5\r\n",
                "0\r\n"
            ],
            [
                "10\r\n5 6 4 8 11 4 10 4 8 4\r\n",
                "15\r\n"
            ],
            [
                "2\r\n3 7\r\n",
                "0\r\n"
            ],
            [
                "3\r\n4 10 3\r\n",
                "9\r\n"
            ],
            [
                "5\r\n5 2 2 11 2\r\n",
                "9\r\n"
            ]
        ]
    }
]