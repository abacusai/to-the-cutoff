[
    {
        "name": "Elemental Decompress",
        "description": "You are given an array \n    a\n of \n    n\n integers. Find two\npermutations\n    ^\n    \u2020\n \n    p\n and \n    q\n of length \n    n\n such that\n\n    max(p_i,q_i)=a_i\n for all \n    1 \n    \u2264 i \n    \u2264 n\n or report that\nsuch \n    p\n and \n    q\n do not exist. \n    ^\n    \u2020\n A permutation of\nlength \n    n\n is an array consisting of \n    n\n distinct integers from\n\n    1\n to \n    n\n in arbitrary order. For example, \n    [2,3,1,5,4]\n is a\npermutation, but \n    [1,2,2]\n is not a permutation (\n    2\n appears twice in\nthe array), and \n    [1,3,4]\n is also not a permutation (\n    n=3\n but there\nis \n    4\n in the array). Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The\ndescription of test cases follows. The first line of each test case contains a\nsingle integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n). The second line\nof each test case contains \n    n\n integers \n    a_1,a_2,\n    \u2026,a_n\n (\n    1\n    \n    \u2264 a_i \n    \u2264 n\n) \u2014 the array \n    a\n. It is guaranteed that the total\nsum of \n    n\n over all test cases does not exceed \n    2 \n    \u00b7 10^5\n.\nOutput For each test case, if there do not exist \n    p\n and \n    q\n that\nsatisfy the conditions, output \"NO\" (without quotes). Otherwise, output \"YES\"\n(without quotes) and then output \n    2\n lines. The first line should contain\n\n    n\n integers \n    p_1,p_2,\n    \u2026,p_n\n and the second line should contain\n\n    n\n integers \n    q_1,q_2,\n    \u2026,q_n\n. If there are multiple solutions,\nyou may output any of them. You can output \"YES\" and \"NO\" in any case (for\nexample, strings \"yEs\", \"yes\" and \"Yes\" will be recognized as a positive\nresponse). Example Input 3 1 1 5 5 3 4 2 5 2 1 1 Output YES 1 1 YES 1 3 4 2 5\n5 2 3 1 4 NO Note In the first test case, \n    p=q=[1]\n. It is correct since\n\n    a_1 = max(p_1,q_1) = 1\n. In the second test case, \n    p=[1,3,4,2,5]\n and\n\n    q=[5,2,3,1,4]\n. It is correct since: \n    a_1 = \n    max(p_1, q_1) =\n    \n    max(1, 5) = 5\n, \n    a_2 = \n    max(p_2, q_2) = \n    max(3, 2) = 3\n, \n    a_3 =\n    \n    max(p_3, q_3) = \n    max(4, 3) = 4\n, \n    a_4 = \n    max(p_4, q_4) = \n    max(2,\n    1) = 2\n, \n    a_5 = \n    max(p_5, q_5) = \n    max(5, 4) = 5\n. In the third test\ncase, one can show that no such \n    p\n and \n    q\n exist.\n\n",
        "cf_contest_id": 1768,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1\r\n1\r\n5\r\n5 3 4 2 5\r\n2\r\n1 1\r\n",
                "YES\r\n1\r\n1\r\nYES\r\n5 3 4 2 1\r\n1 3 4 2 5\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n1\r\n",
                "YES\r\n1\r\n1\r\n"
            ]
        ]
    }
]