[
    {
        "name": "Case of Fugitive",
        "description": "Andrewid the Android is a galaxy-famous detective. He is now chasing a\ncriminal hiding on the planet Oxa-5, the planet almost fully covered with\nwater. The only dry land there is an archipelago of n narrow islands located\nin a row. For more comfort let's represent them as non-intersecting segments\non a straight line: island i has coordinates [li, ri], besides, ri < li + 1\nfor 1 \u2264 i \u2264 n - 1. To reach the goal, Andrewid needs to place a bridge between\neach pair of adjacent islands. A bridge of length a can be placed between the\ni-th and the (i + 1)-th islads, if there are such coordinates of x and y, that\nli \u2264 x \u2264 ri, li + 1 \u2264 y \u2264 ri + 1 and y - x = a. The detective was supplied\nwith m bridges, each bridge can be used at most once. Help him determine\nwhether the bridges he got are enough to connect each pair of adjacent\nislands. Input The first line contains integers n (2 \u2264 n \u2264 2\u00b710^5) and m (1 \u2264\nm \u2264 2\u00b710^5) \u2014 the number of islands and bridges. Next n lines each contain two\nintegers li and ri (1 \u2264 li \u2264 ri \u2264 10^18) \u2014 the coordinates of the island\nendpoints. The last line contains m integer numbers a1, a2, ..., am (1 \u2264 ai \u2264\n10^18) \u2014 the lengths of the bridges that Andrewid got. Output If it is\nimpossible to place a bridge between each pair of adjacent islands in the\nrequired manner, print on a single line \"No\" (without the quotes), otherwise\nprint in the first line \"Yes\" (without the quotes), and in the second line\nprint n - 1 numbers b1, b2, ..., bn - 1, which mean that between islands i and\ni + 1 there must be used a bridge number bi. If there are multiple correct\nanswers, print any of them. Note that in this problem it is necessary to print\n\"Yes\" and \"No\" in correct case. Examples Input 4 4 1 4 7 8 9 10 12 14 4 5 3 8\nOutput Yes 2 3 1 Input 2 2 11 14 17 18 2 9 Output No Input 2 1 1 1\n1000000000000000000 1000000000000000000 999999999999999999 Output Yes 1 Note\nIn the first sample test you can, for example, place the second bridge between\npoints 3 and 8, place the third bridge between points 7 and 10 and place the\nfirst bridge between points 10 and 14. In the second sample test the first\nbridge is too short and the second bridge is too long, so the solution doesn't\nexist.\n\n",
        "cf_contest_id": 555,
        "cf_index": "B",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 4\r\n1 4\r\n7 8\r\n9 10\r\n12 14\r\n4 5 3 8\r\n",
                "Yes \r\n2 3 1 "
            ],
            [
                "2 2\r\n11 14\r\n17 18\r\n2 9\r\n",
                "No"
            ],
            [
                "2 1\r\n1 1\r\n1000000000000000000 1000000000000000000\r\n999999999999999999\r\n",
                "Yes \r\n1 "
            ]
        ],
        "private_cases": [
            [
                "5 10\r\n1 2\r\n3 3\r\n5 7\r\n11 13\r\n14 20\r\n9 10 2 9 10 4 9 9 9 10\r\n",
                "No"
            ],
            [
                "5 9\r\n1 2\r\n3 3\r\n5 7\r\n11 13\r\n14 20\r\n2 3 4 10 6 2 6 9 5\r\n",
                "Yes \r\n1 6 3 2 "
            ],
            [
                "6 9\r\n1 4\r\n10 18\r\n23 29\r\n33 43\r\n46 57\r\n59 77\r\n11 32 32 19 20 17 32 24 32\r\n",
                "Yes \r\n1 6 4 5 8 "
            ],
            [
                "6 9\r\n1 2\r\n8 16\r\n21 27\r\n31 46\r\n49 57\r\n59 78\r\n26 27 28 13 2 4 2 2 24\r\n",
                "No"
            ],
            [
                "20 10\r\n4 9\r\n10 15\r\n17 18\r\n20 21\r\n25 27\r\n29 32\r\n35 36\r\n46 48\r\n49 51\r\n53 56\r\n59 60\r\n63 64\r\n65 68\r\n69 70\r\n74 75\r\n79 80\r\n81 82\r\n84 87\r\n88 91\r\n98 100\r\n4 7 6 1 5 4 3 1 5 2\r\n",
                "No"
            ],
            [
                "2 1\r\n1 2\r\n5 6\r\n1\r\n",
                "No"
            ],
            [
                "2 1\r\n1 1\r\n100 100\r\n5\r\n",
                "No"
            ],
            [
                "3 2\r\n1000000000000000 1000000000000000\r\n3000000000000000 4000000000000000\r\n6000000000000000 7000000000000000\r\n2000000000000000 4000000000000000\r\n",
                "Yes \r\n1 2 "
            ],
            [
                "3 2\r\n1 5\r\n6 12\r\n14 100000000000\r\n10000000000 4\r\n",
                "Yes \r\n2 1 "
            ]
        ]
    }
]