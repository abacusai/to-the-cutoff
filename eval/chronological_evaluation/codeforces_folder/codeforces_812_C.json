[
    {
        "name": "Sagheer and Nubian Market",
        "description": "On his trip to Luxor and Aswan, Sagheer went to a Nubian market to buy some\nsouvenirs for his friends and relatives. The market has some strange rules. It\ncontains n different items numbered from 1 to n. The i-th item has base cost\nai Egyptian pounds. If Sagheer buys k items with indices x1, x2, ..., xk, then\nthe cost of item xj is axj + xj\u00b7k for 1 \u2264 j \u2264 k. In other words, the cost of\nan item is equal to its base cost in addition to its index multiplied by the\nfactor k. Sagheer wants to buy as many souvenirs as possible without paying\nmore than S Egyptian pounds. Note that he cannot buy a souvenir more than\nonce. If there are many ways to maximize the number of souvenirs, he will\nchoose the way that will minimize the total cost. Can you help him with this\ntask? Input The first line contains two integers n and S (1 \u2264 n \u2264 10^5 and 1 \u2264\nS \u2264 10^9) \u2014 the number of souvenirs in the market and Sagheer's budget. The\nsecond line contains n space-separated integers a1, a2, ..., an (1 \u2264 ai \u2264\n10^5) \u2014 the base costs of the souvenirs. Output On a single line, print two\nintegers k, T \u2014 the maximum number of souvenirs Sagheer can buy and the\nminimum total cost to buy these k souvenirs. Examples Input 3 11 2 3 5 Output\n2 11 Input 4 100 1 2 5 6 Output 4 54 Input 1 7 7 Output 0 0 Note In the first\nexample, he cannot take the three items because they will cost him [5, 9, 14]\nwith total cost 28. If he decides to take only two items, then the costs will\nbe [4, 7, 11]. So he can afford the first and second items. In the second\nexample, he can buy all items as they will cost him [5, 10, 17, 22]. In the\nthird example, there is only one souvenir in the market which will cost him 8\npounds, so he cannot buy it.\n\n",
        "cf_contest_id": 812,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 11\r\n2 3 5\r\n",
                "2\r\n11\r\n"
            ],
            [
                "4 100\r\n1 2 5 6\r\n",
                "4\r\n54\r\n"
            ],
            [
                "1 7\r\n7\r\n",
                "0\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 7\r\n5\r\n",
                "1\r\n6\r\n"
            ],
            [
                "1 1\r\n1\r\n",
                "0\r\n0\r\n"
            ],
            [
                "4 33\r\n4 3 2 1\r\n",
                "3\r\n27\r\n"
            ],
            [
                "86 96\r\n89 48 14 55 5 35 7 79 49 70 74 18 64 63 35 93 63 97 90 77 33 11 100 75 60 99 54 38 3 6 55 1 7 64 56 90 21 76 35 16 61 78 38 78 93 21 89 1 58 53 34 77 56 37 46 59 30 5 85 1 52 87 84 99 97 9 15 66 29 60 17 16 59 23 88 93 32 2 98 89 63 42 9 86 70 80\r\n",
                "3\r\n71\r\n"
            ],
            [
                "9 2727\r\n73 41 68 90 51 7 20 48 69\r\n",
                "9\r\n872\r\n"
            ],
            [
                "35 792600\r\n61 11 82 29 3 50 65 60 62 86 83 78 15 82 7 77 38 87 100 12 93 86 96 79 14 58 60 47 94 39 36 23 69 93 18\r\n",
                "35\r\n24043\r\n"
            ],
            [
                "63 47677090\r\n53 4 59 68 6 12 47 63 28 93 9 53 61 63 53 70 77 63 49 76 70 23 4 40 4 34 24 70 42 83 84 95 11 46 38 83 26 85 34 29 67 96 3 62 97 7 42 65 49 45 50 54 81 74 83 59 10 87 95 87 89 27 3\r\n",
                "63\r\n130272\r\n"
            ],
            [
                "88 631662736\r\n93 75 25 7 6 55 92 23 22 32 4 48 61 29 91 79 16 18 18 9 66 9 57 62 3 81 48 16 21 90 93 58 30 8 31 47 44 70 34 85 52 71 58 42 99 53 43 54 96 26 6 13 38 4 13 60 1 48 32 100 52 8 27 99 66 34 98 45 19 50 37 59 31 56 58 70 61 14 100 66 74 85 64 57 92 89 7 92\r\n",
                "88\r\n348883\r\n"
            ],
            [
                "12 12\r\n1232 1848 2048 4694 5121 3735 9968 4687 2040 6033 5839 2507\r\n",
                "0\r\n0\r\n"
            ],
            [
                "37 5271\r\n368 6194 4856 8534 944 4953 2085 5350 788 7772 9786 1321 4310 4453 7078 9912 5799 4066 5471 5079 5161 9773 1300 5474 1202 1353 9499 9694 9020 6332 595 7619 1271 7430 1199 3127 8867\r\n",
                "5\r\n4252\r\n"
            ],
            [
                "65 958484\r\n9597 1867 5346 637 6115 5833 3318 6059 4430 9169 8155 7895 3534 7962 9900 9495 5694 3461 5370 1945 1724 9264 3475 618 3421 551 8359 6889 1843 6716 9216 2356 1592 6265 2945 6496 4947 2840 9057 6141 887 4823 4004 8027 1993 1391 796 7059 5500 4369 4012 4983 6495 8990 3633 5439 421 1129 6970 8796 7826 1200 8741 6555 5037\r\n",
                "65\r\n468998\r\n"
            ],
            [
                "90 61394040\r\n2480 6212 4506 829 8191 797 5336 6722 3178 1007 5849 3061 3588 6684 5983 5452 7654 5321 660 2569 2809 2179 679 4858 6887 2580 6880 6120 4159 5542 4999 8703 2386 8221 7046 1229 1662 4542 7089 3548 4298 1973 1854 2473 5507 241 359 5248 7907 5201 9624 4596 1723 2622 4800 4716 693 961 7402 9004 7994 8048 6590 5866 7502 3304 4331 5218 6906 1016 5342 6644 2205 5823 8525 4839 1914 2651 3940 7751 3489 4178 7234 6640 7602 9765 8559 7819 5827 163\r\n",
                "90\r\n795634\r\n"
            ],
            [
                "14 891190480\r\n1424 3077 9632 6506 4568 9650 5534 1085 6934 9340 2867 367 7075 618\r\n",
                "14\r\n70147\r\n"
            ],
            [
                "39 43\r\n22166 81842 15513 80979 39645 60168 96994 13493 12904 79871 49910 45356 93691 51829 18226 34288 11525 41944 40433 67295 30123 1081 55623 22279 75814 82316 2963 39329 38223 8445 43202 61912 15122 86367 37200 68113 57194 38541 49641\r\n",
                "0\r\n0\r\n"
            ],
            [
                "67 8824\r\n75515 67590 86373 34191 3446 27408 31581 24727 40005 23718 39738 30960 4786 51040 32590 80454 14335 47173 20079 41204 67289 58347 88969 88396 37681 43963 13886 85690 12259 14732 42036 62620 15011 41890 20150 59469 62104 30136 47163 19790 25699 27453 36151 52914 52684 20503 78622 81082 94500 55756 94030 54764 72763 37830 13210 64559 53600 87998 80472 19001 83769 79700 88794 10161 99980 95184 74439\r\n",
                "2\r\n8268\r\n"
            ],
            [
                "16 56532535\r\n84567 85265 99012 62115 58908 10120 27355 90226 17191 35588 43807 6327 89157 71156 16253 22387\r\n",
                "16\r\n821610\r\n"
            ],
            [
                "42 818723640\r\n57019 99450 43192 25131 80678 41786 52490 34454 51620 56132 41773 94622 23949 11597 96944 51420 44164 85727 72959 26622 1838 36302 99335 35572 92734 10651 22293 97601 38634 24066 81870 10904 5825 71968 2377 61198 3104 4191 97851 99920 65295 1385\r\n",
                "42\r\n2094569\r\n"
            ]
        ]
    }
]