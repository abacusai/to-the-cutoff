[
    {
        "name": "Puzzles",
        "description": "The end of the school year is near and Ms. Manana, the teacher, will soon have\nto say goodbye to a yet another class. She decided to prepare a goodbye\npresent for her n students and give each of them a jigsaw puzzle (which, as\nwikipedia states, is a tiling puzzle that requires the assembly of numerous\nsmall, often oddly shaped, interlocking and tessellating pieces). The shop\nassistant told the teacher that there are m puzzles in the shop, but they\nmight differ in difficulty and size. Specifically, the first jigsaw puzzle\nconsists of f1 pieces, the second one consists of f2 pieces and so on. Ms.\nManana doesn't want to upset the children, so she decided that the difference\nbetween the numbers of pieces in her presents must be as small as possible.\nLet A be the number of pieces in the largest puzzle that the teacher buys and\nB be the number of pieces in the smallest such puzzle. She wants to choose\nsuch n puzzles that A - B is minimum possible. Help the teacher and find the\nleast possible value of A - B. Input The first line contains space-separated\nintegers n and m (2 \u2264 n \u2264 m \u2264 50). The second line contains m space-separated\nintegers f1, f2, ..., fm (4 \u2264 fi \u2264 1000) \u2014 the quantities of pieces in the\npuzzles sold in the shop. Output Print a single integer \u2014 the least possible\ndifference the teacher can obtain. Examples Input 4 6 10 12 10 7 5 22 Output 5\nNote Sample 1. The class has 4 students. The shop sells 6 puzzles. If Ms.\nManana buys the first four puzzles consisting of 10, 12, 10 and 7 pieces\ncorrespondingly, then the difference between the sizes of the largest and the\nsmallest puzzle will be equal to 5. It is impossible to obtain a smaller\ndifference. Note that the teacher can also buy puzzles 1, 3, 4 and 5 to obtain\nthe difference 5.\n\n",
        "cf_contest_id": 337,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 6\r\n10 12 10 7 5 22\r\n",
                "5\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n4 4\r\n",
                "0\r\n"
            ],
            [
                "2 10\r\n4 5 6 7 8 9 10 11 12 12\r\n",
                "0\r\n"
            ],
            [
                "4 5\r\n818 136 713 59 946\r\n",
                "759\r\n"
            ],
            [
                "3 20\r\n446 852 783 313 549 965 40 88 86 617 479 118 768 34 47 826 366 957 463 903\r\n",
                "13\r\n"
            ],
            [
                "2 25\r\n782 633 152 416 432 825 115 97 386 357 836 310 530 413 354 373 847 882 913 682 729 582 671 674 94\r\n",
                "3\r\n"
            ],
            [
                "4 25\r\n226 790 628 528 114 64 239 279 619 39 894 763 763 847 525 93 882 697 999 643 650 244 159 884 190\r\n",
                "31\r\n"
            ],
            [
                "2 50\r\n971 889 628 39 253 157 925 694 129 516 660 272 738 319 611 816 142 717 514 392 41 105 132 676 958 118 306 768 600 685 103 857 704 346 857 309 23 718 618 161 176 379 846 834 640 468 952 878 164 997\r\n",
                "0\r\n"
            ],
            [
                "25 50\r\n582 146 750 905 313 509 402 21 488 512 32 898 282 64 579 869 37 996 377 929 975 697 666 837 311 205 116 992 533 298 648 268 54 479 792 595 152 69 267 417 184 433 894 603 988 712 24 414 301 176\r\n",
                "412\r\n"
            ],
            [
                "49 50\r\n58 820 826 960 271 294 473 102 925 318 729 672 244 914 796 646 868 6 893 882 726 203 528 498 271 195 355 459 721 680 547 147 631 116 169 804 145 996 133 559 110 257 771 476 576 251 607 314 427 886\r\n",
                "938\r\n"
            ],
            [
                "50 50\r\n374 573 323 744 190 806 485 247 628 336 491 606 702 321 991 678 337 579 86 240 993 208 668 686 855 205 363 177 719 249 896 919 782 434 59 647 787 996 286 216 636 212 546 903 958 559 544 126 608 993\r\n",
                "937\r\n"
            ],
            [
                "6 50\r\n6 8 7 8 5 4 4 5 7 8 6 5 7 4 7 7 7 8 6 4 6 6 8 8 7 7 8 7 5 8 5 4 4 7 8 4 4 6 6 6 8 7 4 7 6 6 5 8 4 7\r\n",
                "0\r\n"
            ],
            [
                "37 50\r\n14 5 11 17 8 20 19 16 20 11 17 20 16 9 14 14 13 18 11 20 8 8 8 5 19 17 6 18 10 20 9 7 12 6 14 17 4 4 10 13 7 4 11 6 20 19 12 12 15 19\r\n",
                "12\r\n"
            ],
            [
                "40 50\r\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\r\n",
                "0\r\n"
            ],
            [
                "40 50\r\n17 20 43 26 41 37 14 8 30 35 30 24 43 8 42 9 41 50 41 35 27 32 35 43 28 36 31 16 5 7 23 16 14 29 8 39 12 16 36 18 49 39 33 37 38 6 6 27 23 17\r\n",
                "31\r\n"
            ],
            [
                "2 2\r\n1000 4\r\n",
                "996\r\n"
            ],
            [
                "2 3\r\n4 502 1000\r\n",
                "498\r\n"
            ],
            [
                "3 3\r\n4 1000 4\r\n",
                "996\r\n"
            ]
        ]
    }
]