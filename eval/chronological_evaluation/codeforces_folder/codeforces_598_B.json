[
    {
        "name": "Queries on a String",
        "description": "You are given a string s and should process m queries. Each query is described\nby two 1-based indices li, ri and integer ki. It means that you should\ncyclically shift the substring s[li... ri] ki times. The queries should be\nprocessed one after another in the order they are given. One operation of a\ncyclic shift (rotation) is equivalent to moving the last character to the\nposition of the first character and shifting all other characters one position\nto the right. For example, if the string s is abacaba and the query is l1 = 3,\nr1 = 6, k1 = 1 then the answer is abbacaa. If after that we would process the\nquery l2 = 1, r2 = 4, k2 = 2 then we would get the string baabcaa. Input The\nfirst line of the input contains the string s (1 \u2264 |s| \u2264 10 000) in its\ninitial state, where |s| stands for the length of s. It contains only\nlowercase English letters. Second line contains a single integer m (1 \u2264 m \u2264\n300) \u2014 the number of queries. The i-th of the next m lines contains three\nintegers li, ri and ki (1 \u2264 li \u2264 ri \u2264 |s|, 1 \u2264 ki \u2264 1 000 000) \u2014 the\ndescription of the i-th query. Output Print the resulting string s after\nprocessing all m queries. Examples Input abacaba 2 3 6 1 1 4 2 Output baabcaa\nNote The sample is described in problem statement.\n\n",
        "cf_contest_id": 598,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "abacaba\r\n2\r\n3 6 1\r\n1 4 2\r\n",
                "baabcaa\r\n"
            ]
        ],
        "private_cases": [
            [
                "u\r\n1\r\n1 1 1\r\n",
                "u\r\n"
            ],
            [
                "p\r\n5\r\n1 1 5\r\n1 1 9\r\n1 1 10\r\n1 1 10\r\n1 1 4\r\n",
                "p\r\n"
            ],
            [
                "ssssssssss\r\n5\r\n5 7 9\r\n3 9 3\r\n2 7 1\r\n7 7 10\r\n1 9 6\r\n",
                "ssssssssss\r\n"
            ],
            [
                "tcpyzttcpo\r\n10\r\n2 3 6\r\n2 4 1\r\n2 6 9\r\n7 10 5\r\n2 3 5\r\n4 5 6\r\n3 4 5\r\n7 9 4\r\n9 10 7\r\n1 10 8\r\n",
                "zctycopttp\r\n"
            ],
            [
                "yywlblbblw\r\n10\r\n4 7 2\r\n3 8 2\r\n4 10 6\r\n4 7 1\r\n3 9 6\r\n1 7 3\r\n3 7 3\r\n3 7 1\r\n1 8 7\r\n2 7 5\r\n",
                "bylwlwylbb\r\n"
            ],
            [
                "thisisahacktest\r\n1\r\n1 2 1\r\n",
                "htisisahacktest\r\n"
            ],
            [
                "ozozumuhackleyan\r\n1\r\n1 4 1\r\n",
                "zozoumuhackleyan\r\n"
            ],
            [
                "lacongaithattuyet\r\n1\r\n1 1 1\r\n",
                "lacongaithattuyet\r\n"
            ]
        ]
    }
]