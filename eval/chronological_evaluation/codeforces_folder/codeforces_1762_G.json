[
    {
        "name": "Unequal Adjacent Elements",
        "description": "You are given an array \n    a\n consisting of \n    n\n positive integers. Find\nany permutation \n    p\n of \n    [1,2,\n    \u2026,n]\n such that: \n    p_i-2 <\n    p_i\n for all \n    i\n, where \n    3 \n    \u2264 i \n    \u2264 n\n, and \n    a_p_i-1\n    \u2260 a_p_i\n for all \n    i\n, where \n    2 \n    \u2264 i \n    \u2264 n\n. Or report\nthat no such permutation exists. Input Each test contains multiple test cases.\nThe first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^5\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains a single integer \n    n\n\n(\n    3 \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the length of the array \n    a\n.\nThe second line of each test case contains \n    n\n space-separated integers\n\n    a_1,a_2,\n    \u2026,a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014 representing the\narray \n    a\n. It is guaranteed that the sum of \n    n\n over all test cases\ndoes not exceed \n    3 \n    \u00b7 10^5\n. Output For each test case, output \"NO\"\nif no such permutation exists, otherwise output \"YES\" in the first line and\nprint the permutation \n    p\n in the next line. In case there are multiple\npermutations, print any one of them. You can output \"YES\" and \"NO\" in any case\n(for example, the strings \"yEs\", \"yes\", \"Yes\" and \"YES\" will be recognized as\na positive response). Example Input 4 3 1 2 1 4 1 2 3 4 3 1 1 1 7 1 2 1 1 3 1\n4 Output YES 1 2 3 YES 3 1 4 2 NO YES 1 2 3 5 4 7 6 Note In the first test\ncase, \n    p=[1,2,3]\n is the only permutation of \n    [1,2,3]\n that satisfy\nthe given constraints. In the second test case, \n    [1,3,2,4]\n,\n\n    [2,1,4,3]\n and some other permutations are also acceptable. In the third\ntest case, it can be proved that there does not exist any permutation of\n\n    [1,2,3]\n satisfying the given constraints.\n\n",
        "cf_contest_id": 1762,
        "cf_index": "G",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3\r\n1 2 1\r\n4\r\n1 2 3 4\r\n3\r\n1 1 1\r\n7\r\n1 2 1 1 3 1 4\r\n",
                "YES\r\n1 2 3\r\nYES\r\n1 2 3 4\r\nNO\r\nYES\r\n1 2 3 5 4 7 6\r\n"
            ]
        ],
        "private_cases": [
            [
                "27\r\n3\r\n1 1 1\r\n3\r\n2 1 1\r\n3\r\n3 1 1\r\n3\r\n1 2 1\r\n3\r\n2 2 1\r\n3\r\n3 2 1\r\n3\r\n1 3 1\r\n3\r\n2 3 1\r\n3\r\n3 3 1\r\n3\r\n1 1 2\r\n3\r\n2 1 2\r\n3\r\n3 1 2\r\n3\r\n1 2 2\r\n3\r\n2 2 2\r\n3\r\n3 2 2\r\n3\r\n1 3 2\r\n3\r\n2 3 2\r\n3\r\n3 3 2\r\n3\r\n1 1 3\r\n3\r\n2 1 3\r\n3\r\n3 1 3\r\n3\r\n1 2 3\r\n3\r\n2 2 3\r\n3\r\n3 2 3\r\n3\r\n1 3 3\r\n3\r\n2 3 3\r\n3\r\n3 3 3\r\n",
                "NO\r\nYES\r\n2 1 3\r\nYES\r\n2 1 3\r\nYES\r\n1 2 3\r\nYES\r\n1 3 2\r\nYES\r\n1 3 2\r\nYES\r\n1 2 3\r\nYES\r\n1 3 2\r\nYES\r\n1 3 2\r\nYES\r\n1 3 2\r\nYES\r\n1 2 3\r\nYES\r\n1 2 3\r\nYES\r\n2 1 3\r\nNO\r\nYES\r\n2 1 3\r\nYES\r\n1 3 2\r\nYES\r\n1 2 3\r\nYES\r\n1 3 2\r\nYES\r\n1 3 2\r\nYES\r\n1 2 3\r\nYES\r\n1 2 3\r\nYES\r\n1 2 3\r\nYES\r\n1 3 2\r\nYES\r\n1 2 3\r\nYES\r\n2 1 3\r\nYES\r\n2 1 3\r\nNO\r\n"
            ]
        ]
    }
]