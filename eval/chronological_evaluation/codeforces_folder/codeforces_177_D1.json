[
    {
        "name": "Encrypting Messages",
        "description": "The Smart Beaver from ABBYY invented a new message encryption method and now\nwants to check its performance. Checking it manually is long and tiresome, so\nhe decided to ask the ABBYY Cup contestants for help. A message is a sequence\nof n integers a1, a2, ..., an. Encryption uses a key which is a sequence of m\nintegers b1, b2, ..., bm (m \u2264 n). All numbers from the message and from the\nkey belong to the interval from 0 to c - 1, inclusive, and all the\ncalculations are performed modulo c. Encryption is performed in n - m + 1\nsteps. On the first step we add to each number a1, a2, ..., am a corresponding\nnumber b1, b2, ..., bm. On the second step we add to each number a2, a3, ...,\nam + 1 (changed on the previous step) a corresponding number b1, b2, ..., bm.\nAnd so on: on step number i we add to each number ai, ai + 1, ..., ai + m - 1\na corresponding number b1, b2, ..., bm. The result of the encryption is the\nsequence a1, a2, ..., an after n - m + 1 steps. Help the Beaver to write a\nprogram that will encrypt messages in the described manner. Input The first\ninput line contains three integers n, m and c, separated by single spaces. The\nsecond input line contains n integers ai (0 \u2264 ai < c), separated by single\nspaces \u2014 the original message. The third input line contains m integers bi (0\n\u2264 bi < c), separated by single spaces \u2014 the encryption key. The input\nlimitations for getting 30 points are: 1 \u2264 m \u2264 n \u2264 10^3 1 \u2264 c \u2264 10^3 The input\nlimitations for getting 100 points are: 1 \u2264 m \u2264 n \u2264 10^5 1 \u2264 c \u2264 10^3 Output\nPrint n space-separated integers \u2014 the result of encrypting the original\nmessage. Examples Input 4 3 2 1 1 1 1 1 1 1 Output 0 1 1 0 Input 3 1 5 1 2 3 4\nOutput 0 1 2 Note In the first sample the encryption is performed in two\nsteps: after the first step a = (0, 0, 0, 1) (remember that the calculations\nare performed modulo 2), after the second step a = (0, 1, 1, 0), and that is\nthe answer.\n\n",
        "cf_contest_id": 177,
        "cf_index": "D1",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "brute force"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3 2\r\n1 1 1 1\r\n1 1 1\r\n",
                "0 1 1 0\r\n"
            ],
            [
                "3 1 5\r\n1 2 3\r\n4\r\n",
                "0 1 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 2 7\r\n0 0 1 2 4\r\n3 5\r\n",
                "3 1 2 3 2\r\n"
            ],
            [
                "20 15 17\r\n4 9 14 11 15 16 15 4 0 10 7 12 10 1 8 6 7 14 1 13\r\n6 3 14 8 8 11 16 4 5 9 2 13 6 14 15\r\n",
                "10 1 3 8 3 15 7 14 1 12 3 10 15 16 16 5 4 15 13 11\r\n"
            ]
        ]
    }
]