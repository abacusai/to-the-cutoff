[
    {
        "name": "Nudist Beach",
        "description": "Nudist Beach is planning a military operation to attack the Life Fibers. In\nthis operation, they will attack and capture several cities which are\ncurrently under the control of the Life Fibers. There are n cities, labeled\nfrom 1 to n, and m bidirectional roads between them. Currently, there are Life\nFibers in every city. In addition, there are k cities that are fortresses of\nthe Life Fibers that cannot be captured under any circumstances. So, the\nNudist Beach can capture an arbitrary non-empty subset of cities with no\nfortresses. After the operation, Nudist Beach will have to defend the captured\ncities from counterattack. If they capture a city and it is connected to many\nLife Fiber controlled cities, it will be easily defeated. So, Nudist Beach\nwould like to capture a set of cities such that for each captured city the\nratio of Nudist Beach controlled neighbors among all neighbors of that city is\nas high as possible. More formally, they would like to capture a non-empty set\nof cities S with no fortresses of Life Fibers. The strength of a city is\ndefined as (number of neighbors of x in S) / (total number of neighbors of x).\nHere, two cities are called neighbors if they are connnected with a road. The\ngoal is to maximize the strength of the weakest city in S. Given a description\nof the graph, and the cities with fortresses, find a non-empty subset that\nmaximizes the strength of the weakest city. Input The first line of input\ncontains three integers n, m, k (2 \u2264 n \u2264 100 000, 1 \u2264 m \u2264 100 000, 1 \u2264 k \u2264 n -\n1). The second line of input contains k integers, representing the cities with\nfortresses. These cities will all be distinct. The next m lines contain the\nroads. The i-th of these lines will have 2 integers ai, bi (1 \u2264 ai, bi \u2264 n, ai\n\u2260 bi). Every city will have at least one road adjacent to it. There is no more\nthan one road between each pair of the cities. Output The first line should\ncontain an integer r, denoting the size of an optimum set (1 \u2264 r \u2264 n - k). The\nsecond line should contain r integers, denoting the cities in the set. Cities\nmay follow in an arbitrary order. This line should not contain any of the\ncities with fortresses. If there are multiple possible answers, print any of\nthem. Examples Input 9 8 4 3 9 6 8 1 2 1 3 1 4 1 5 2 6 2 7 2 8 2 9 Output 3 1\n4 5 Input 10 8 2 2 9 1 3 2 9 4 5 5 6 6 7 7 8 8 10 10 4 Output 8 1 5 4 8 10 6 3\n7 Note The first example case achieves a strength of 1/2. No other subset is\nstrictly better. The second example case achieves a strength of 1. Note that\nthe subset doesn't necessarily have to be connected.\n\n",
        "cf_contest_id": 553,
        "cf_index": "D",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "graphs",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9 8 4\r\n3 9 6 8\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 6\r\n2 7\r\n2 8\r\n2 9\r\n",
                "3\r\n1 4 5\r\n"
            ],
            [
                "10 8 2\r\n2 9\r\n1 3\r\n2 9\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 10\r\n10 4\r\n",
                "8\r\n1 3 4 5 6 7 8 10\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1 1\r\n1\r\n2 1\r\n",
                "1\r\n2\r\n"
            ]
        ]
    }
]