[
    {
        "name": "Valerii Against Everyone",
        "description": "You're given an array \n    b\n of length \n    n\n. Let's define another array\n\n    a\n, also of length \n    n\n, for which \n    a_i = 2^b_i\n (\n    1 \n    \u2264 i\n    \n    \u2264 n\n). Valerii says that every two non-intersecting subarrays of\n\n    a\n have different sums of elements. You want to determine if he is wrong.\nMore formally, you need to determine if there exist four integers\n\n    l_1,r_1,l_2,r_2\n that satisfy the following conditions: \n    1 \n    \u2264 l_1\n    \n    \u2264 r_1 \n     l_2 \n    \u2264 r_2 \n    \u2264 n\n;\n\n    a_l_1+a_l_1+1+\n    \u2026+a_r_1-1+a_r_1 =\n    a_l_2+a_l_2+1+\n    \u2026+a_r_2-1+a_r_2\n. If such four integers exist,\nyou will prove Valerii wrong. Do they exist? An array \n    c\n is a subarray of\nan array \n    d\n if \n    c\n can be obtained from \n    d\n by deletion of\nseveral (possibly, zero or all) elements from the beginning and several\n(possibly, zero or all) elements from the end. Input Each test contains\nmultiple test cases. The first line contains the number of test cases \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 100\n). Description of the test cases follows. The first\nline of every test case contains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264\n    1000\n). The second line of every test case contains \n    n\n integers\n\n    b_1,b_2,\n    \u2026,b_n\n (\n    0 \n    \u2264 b_i \n    \u2264 10^9\n). Output For every\ntest case, if there exist two non-intersecting subarrays in \n    a\n that have\nthe same sum, output YES on a separate line. Otherwise, output NO on a\nseparate line. Also, note that each letter can be in any case. Example Input 2\n6 4 3 0 1 2 0 2 2 5 Output YES NO Note In the first case, \n    a =\n    [16,8,1,2,4,1]\n. Choosing \n    l_1 = 1\n, \n    r_1 = 1\n, \n    l_2 = 2\n and\n\n    r_2 = 6\n works because \n    16 = (8+1+2+4+1)\n. In the second case, you\ncan verify that there is no way to select to such subarrays.\n\n",
        "cf_contest_id": 1438,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n6\r\n4 3 0 1 2 0\r\n2\r\n2 5\r\n",
                "YES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n3\r\n1 1 2\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n3\r\n1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n3\r\n1 2 3\r\n",
                "NO\r\n"
            ]
        ]
    }
]