[
    {
        "name": "Birthday",
        "description": "Anna's got a birthday today. She invited many guests and cooked a huge (nearly\ninfinite) birthday cake decorated by n banana circles of different sizes.\nMaria's birthday is about to start in 7 minutes too, and while Anna is older,\nshe decided to play the boss a little. She told Maria to cut the cake by k\nstraight-line cuts (the cutting lines can intersect) to divide banana circles\ninto banana pieces. Anna has many guests and she wants everyone to get at\nleast one banana piece. That's why she told Maria to make the total number of\nbanana pieces maximum. It's not a problem if some banana pieces end up on the\nsame cake piece \u2014 the key is to make the maximum number of banana pieces.\nDetermine what result Maria will achieve. Input The first line contains two\nintegers n and k \u2014 the number of banana circles and the number of cuts Maria\nshould perform (1 \u2264 n \u2264 1000, 1 \u2264 k \u2264 10^5). Next n lines contain the\npositions and sizes of the banana circles (all banana circles are round). On\nthe cake the Cartesian coordinate system is defined. Each line contains three\nintegers x, y and r \u2014 the coordinates of the center of the corresponding\nbanana piece and its radius ( - 1000 \u2264 x, y \u2264 1000, 1 \u2264 r \u2264 1000). It is\nguaranteed that the banana circles do not intersect, do not touch each other\nand do not overlap with each other. Pretest 10 is big test with n = k = 1000.\nOutput Print the only integer \u2014 the largest number of banana pieces that Maria\ncan get after she performs the k straight-line cuts. Please do not use the\n\nuse the cin, cout streams or the \nOutput 2 Input 3 1 0 0 1 3 0 1 6 0 1 Output 6 Input 1 3 0 0 1 Output 7\n\n",
        "cf_contest_id": 128,
        "cf_index": "E",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "geometry",
            "math"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 1\r\n0 0 1\r\n",
                "2\r\n"
            ],
            [
                "3 1\r\n0 0 1\r\n3 0 1\r\n6 0 1\r\n",
                "6\r\n"
            ],
            [
                "1 3\r\n0 0 1\r\n",
                "7\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n0 0 1\r\n3 0 1\r\n",
                "7\r\n"
            ],
            [
                "4 4\r\n2 0 1\r\n-2 0 1\r\n0 2 1\r\n0 -2 1\r\n",
                "18\r\n"
            ],
            [
                "5 2\r\n0 0 1\r\n10 0 3\r\n-10 0 3\r\n0 10 3\r\n0 -10 3\r\n",
                "12\r\n"
            ],
            [
                "7 10\r\n0 0 1000\r\n900 900 1\r\n910 910 1\r\n920 920 1\r\n930 930 1\r\n940 940 2\r\n950 950 5\r\n",
                "122\r\n"
            ],
            [
                "3 1\r\n1000 1000 1000\r\n-1000 -1000 1000\r\n0 0 1\r\n",
                "6\r\n"
            ],
            [
                "13 13\r\n1000 1000 999\r\n1000 -1000 1000\r\n-1000 1000 1000\r\n-1000 -1000 999\r\n100 100 99\r\n100 -100 100\r\n-100 100 100\r\n-100 -100 99\r\n10 10 9\r\n10 -10 10\r\n-10 10 10\r\n-10 -10 9\r\n0 0 1\r\n",
                "182\r\n"
            ],
            [
                "3 81218\r\n1000 500 500\r\n0 -500 500\r\n-1000 499 500\r\n",
                "3298384810\r\n"
            ],
            [
                "3 60316\r\n500 1000 499\r\n-500 0 501\r\n500 -1000 500\r\n",
                "1819160721\r\n"
            ],
            [
                "3 68599\r\n-1000 513 500\r\n-999 -487 500\r\n1000 13 1\r\n",
                "2353082901\r\n"
            ],
            [
                "4 26113\r\n-353 -412 600\r\n436 0 189\r\n358 310 111\r\n-365 868 612\r\n",
                "341009671\r\n"
            ],
            [
                "8 1447\r\n398 594 5\r\n-47 -844 3\r\n850 687 2\r\n-676 851 1\r\n602 413 1\r\n681 698 4\r\n236 -905 3\r\n-677 -700 5\r\n",
                "1050530\r\n"
            ],
            [
                "19 54557\r\n299 256 1\r\n-246 633 4\r\n-895 -917 4\r\n757 744 3\r\n-390 -156 4\r\n758 -623 2\r\n-530 753 1\r\n-898 26 1\r\n194 -280 3\r\n791 -641 4\r\n-248 997 3\r\n185 456 2\r\n673 210 3\r\n-431 95 3\r\n338 589 2\r\n808 689 3\r\n30 -945 1\r\n-633 -990 3\r\n508 -516 4\r\n",
                "1488424093\r\n"
            ],
            [
                "38 41118\r\n124 80 3\r\n303 294 9\r\n-114 -345 6\r\n-498 -237 13\r\n-145 -191 18\r\n667 284 15\r\n703 781 19\r\n-777 805 18\r\n-261 -462 12\r\n-89 379 20\r\n678 700 12\r\n-888 -863 20\r\n587 863 2\r\n-919 -628 5\r\n-433 917 15\r\n460 -785 4\r\n718 -331 4\r\n528 -775 17\r\n101 -535 2\r\n345 249 3\r\n87 778 13\r\n-884 637 8\r\n829 221 12\r\n456 -342 20\r\n-572 -800 20\r\n-938 -339 18\r\n908 -528 2\r\n-53 482 12\r\n632 -373 18\r\n-766 -69 4\r\n-26 -912 1\r\n-795 373 3\r\n-654 -556 3\r\n-430 878 10\r\n168 34 4\r\n421 -905 19\r\n210 -117 11\r\n526 453 5\r\n",
                "845530031\r\n"
            ],
            [
                "37 49447\r\n272 -795 610\r\n-14 722 162\r\n-46 418 132\r\n76 511 4\r\n444 611 122\r\n331 81 147\r\n-817 -228 372\r\n-219 423 21\r\n186 995 96\r\n657 97 39\r\n-294 -305 30\r\n968 -629 81\r\n123 -4 47\r\n-971 785 57\r\n-967 462 30\r\n-852 360 39\r\n-465 935 299\r\n-189 -15 169\r\n-644 -995 15\r\n-951 -958 291\r\n479 223 53\r\n705 -68 79\r\n-654 213 95\r\n-429 86 12\r\n-656 547 87\r\n-289 676 2\r\n-74 -197 29\r\n967 751 45\r\n816 -376 10\r\n-115 955 21\r\n337 -158 7\r\n-909 -640 15\r\n995 54 215\r\n-13 -197 19\r\n921 -173 21\r\n597 763 63\r\n212 877 6\r\n",
                "1222923241\r\n"
            ]
        ]
    }
]