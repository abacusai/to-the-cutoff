[
    {
        "name": "Supermarket",
        "description": "We often go to supermarkets to buy some fruits or vegetables, and on the tag\nthere prints the price for a kilo. But in some supermarkets, when asked how\nmuch the items are, the clerk will say that \n    a\n yuan for \n    b\n kilos\n(You don't need to care about what \"yuan\" is), the same as \n    a/b\n yuan for\na kilo. Now imagine you'd like to buy \n    m\n kilos of apples. You've asked\n\n    n\n supermarkets and got the prices. Find the minimum cost for those\napples. You can assume that there are enough apples in all supermarkets. Input\nThe first line contains two positive integers \n    n\n and \n    m\n (\n    1 \n    \u2264\n    n \n    \u2264 5\n     000\n, \n    1 \n    \u2264 m \n    \u2264 100\n), denoting that there are\n\n    n\n supermarkets and you want to buy \n    m\n kilos of apples. The\nfollowing \n    n\n lines describe the information of the supermarkets. Each\nline contains two positive integers \n    a, b\n (\n    1 \n    \u2264 a, b \n    \u2264\n    100\n), denoting that in this supermarket, you are supposed to pay \n    a\n\nyuan for \n    b\n kilos of apples. Output The only line, denoting the minimum\ncost for \n    m\n kilos of apples. Please make sure that the absolute or\nrelative error between your answer and the correct answer won't exceed\n\n    10^-6\n. Formally, let your answer be \n    x\n, and the jury's answer be\n\n    y\n. Your answer is considered correct if \n    |x - y|/\n    max(1,\n    |y|)\n    \u2264 10^-6\n. Examples Input 3 5 1 2 3 4 1 3 Output 1.66666667\nInput 2 1 99 100 98 99 Output 0.98989899 Note In the first sample, you are\nsupposed to buy \n    5\n kilos of apples in supermarket \n    3\n. The cost is\n\n    5/3\n yuan. In the second sample, you are supposed to buy \n    1\n kilo of\napples in supermarket \n    2\n. The cost is \n    98/99\n yuan.\n\n",
        "cf_contest_id": 919,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 5\r\n1 2\r\n3 4\r\n1 3\r\n",
                "1.66666666666667"
            ],
            [
                "2 1\r\n99 100\r\n98 99\r\n",
                "0.98989898989899"
            ]
        ],
        "private_cases": [
            [
                "50 37\r\n78 49\r\n96 4\r\n86 62\r\n28 4\r\n19 2\r\n79 43\r\n79 92\r\n95 35\r\n33 60\r\n54 84\r\n90 25\r\n2 25\r\n53 21\r\n86 52\r\n72 25\r\n6 78\r\n41 46\r\n3 68\r\n42 89\r\n33 35\r\n57 43\r\n99 45\r\n1 82\r\n38 62\r\n11 50\r\n55 84\r\n1 97\r\n12 67\r\n51 96\r\n51 7\r\n1 100\r\n79 61\r\n66 54\r\n97 93\r\n52 75\r\n80 54\r\n98 73\r\n29 28\r\n73 96\r\n24 73\r\n3 25\r\n1 29\r\n43 50\r\n97 95\r\n54 64\r\n38 97\r\n68 16\r\n22 68\r\n25 91\r\n77 13\r\n",
                "0.37"
            ],
            [
                "5 1\r\n5 100\r\n55 6\r\n53 27\r\n57 53\r\n62 24\r\n",
                "0.05"
            ],
            [
                "10 7\r\n83 93\r\n90 2\r\n63 51\r\n51 97\r\n7 97\r\n25 78\r\n17 68\r\n30 10\r\n46 14\r\n22 28\r\n",
                "0.505154639175258"
            ],
            [
                "1 100\r\n100 1\r\n",
                "10000"
            ],
            [
                "1 1\r\n59 1\r\n",
                "59"
            ],
            [
                "1 100\r\n1 100\r\n",
                "1"
            ],
            [
                "1 100\r\n1 99\r\n",
                "1.01010101010101"
            ],
            [
                "1 1\r\n100 1\r\n",
                "100"
            ],
            [
                "15 100\r\n1 2\r\n3 4\r\n10 11\r\n12 13\r\n20 21\r\n28 29\r\n34 35\r\n42 43\r\n59 60\r\n61 62\r\n74 75\r\n89 90\r\n96 97\r\n98 99\r\n99 100\r\n",
                "50"
            ],
            [
                "15 100\r\n3 2\r\n5 4\r\n12 11\r\n14 13\r\n22 21\r\n30 29\r\n36 35\r\n44 43\r\n61 60\r\n63 62\r\n76 75\r\n91 90\r\n98 97\r\n99 98\r\n100 99\r\n",
                "101.010101010101"
            ],
            [
                "1 1\r\n100 10\r\n",
                "10"
            ],
            [
                "1 1\r\n100 3\r\n",
                "33.3333333333333"
            ],
            [
                "1 100\r\n100 3\r\n",
                "3333.33333333333"
            ],
            [
                "1 100\r\n100 1\r\n",
                "10000"
            ],
            [
                "7 8\r\n9 8\r\n5 1\r\n3 1\r\n6 2\r\n7 3\r\n2 1\r\n3 1\r\n",
                "9"
            ],
            [
                "5 8\r\n9 8\r\n3 1\r\n2 1\r\n4 2\r\n13 5\r\n",
                "9"
            ],
            [
                "2 1\r\n1 2\r\n2 10\r\n",
                "0.2"
            ],
            [
                "2 1\r\n99 100\r\n95 95\r\n",
                "0.99"
            ],
            [
                "1 5\r\n10 1\r\n",
                "50"
            ],
            [
                "5 10\r\n9 1\r\n10 1\r\n11 1\r\n12 1\r\n13 1\r\n",
                "90"
            ],
            [
                "1 100\r\n3 1\r\n",
                "300"
            ]
        ]
    }
]