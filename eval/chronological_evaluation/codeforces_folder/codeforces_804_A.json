[
    {
        "name": "Find Amir",
        "description": "A few years ago Sajjad left his school and register to another one due to\nsecurity reasons. Now he wishes to find Amir, one of his schoolmates and good\nfriends. There are n schools numerated from 1 to n. One can travel between\neach pair of them, to do so, he needs to buy a ticket. The ticker between\nschools i and j costs and can be used multiple times. Help Sajjad to find the\nminimum cost he needs to pay for tickets to visit all schools. He can start\nand finish in any school. Input The first line contains a single integer n (1\n\u2264 n \u2264 10^5) \u2014 the number of schools. Output Print single integer: the minimum\ncost of tickets needed to visit all schools. Examples Input 2 Output 0 Input\n10 Output 4 Note In the first example we can buy a ticket between the schools\nthat costs .\n\n",
        "cf_contest_id": 804,
        "cf_index": "A",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n",
                "0"
            ],
            [
                "10\r\n",
                "4"
            ]
        ],
        "private_cases": [
            [
                "43670\r\n",
                "21834"
            ],
            [
                "4217\r\n",
                "2108"
            ],
            [
                "17879\r\n",
                "8939"
            ],
            [
                "31809\r\n",
                "15904"
            ],
            [
                "40873\r\n",
                "20436"
            ],
            [
                "77859\r\n",
                "38929"
            ],
            [
                "53022\r\n",
                "26510"
            ],
            [
                "79227\r\n",
                "39613"
            ],
            [
                "100000\r\n",
                "49999"
            ],
            [
                "82801\r\n",
                "41400"
            ],
            [
                "5188\r\n",
                "2593"
            ],
            [
                "86539\r\n",
                "43269"
            ],
            [
                "12802\r\n",
                "6400"
            ],
            [
                "20289\r\n",
                "10144"
            ],
            [
                "32866\r\n",
                "16432"
            ],
            [
                "33377\r\n",
                "16688"
            ],
            [
                "31775\r\n",
                "15887"
            ],
            [
                "60397\r\n",
                "30198"
            ],
            [
                "100000\r\n",
                "49999"
            ],
            [
                "99999\r\n",
                "49999"
            ],
            [
                "99998\r\n",
                "49998"
            ],
            [
                "99997\r\n",
                "49998"
            ],
            [
                "99996\r\n",
                "49997"
            ],
            [
                "1\r\n",
                "0"
            ],
            [
                "2\r\n",
                "0"
            ],
            [
                "3\r\n",
                "1"
            ],
            [
                "4\r\n",
                "1"
            ],
            [
                "1\r\n",
                "0"
            ],
            [
                "3\r\n",
                "1"
            ]
        ]
    }
]