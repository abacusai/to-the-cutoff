[
    {
        "name": "The Meeting Place Cannot Be Changed",
        "description": "Petr is a detective in Braginsk. Somebody stole a huge amount of money from a\nbank and Petr is to catch him. Somebody told Petr that some luxurious car\nmoves along the roads without stopping. Petr knows that it is the robbers who\ndrive the car. The roads in Braginsk are one-directional and each of them\nconnects two intersections. Petr wants to select one intersection such that if\nthe robbers continue to drive the roads indefinitely, they will sooner or\nlater come to that intersection. The initial position of the robbers is\nunknown. Find such an intersection that fits the requirements. Input The first\nline of the input contains two integers \n    n\n and \n    m\n (\n    2 \n    \u2264 n\n    \n    \u2264 10^5\n, \n    2 \n    \u2264 m \n    \u2264 5 \n    \u00b7 10^5\n) \u2014 the number of\nintersections and the number of directed roads in Braginsk, respectively. Each\nof the next \n    m\n lines contains two integers \n    u_i\n and \n    v_i\n (\n    1\n    \n    \u2264 u_i, v_i \n    \u2264 n\n, \n    u_i \n     v_i\n) \u2014 the start and finish of the\n\n    i\n-th directed road. It is guaranteed that the robbers can move along the\nroads indefinitely. Output Print a single integer \n    k\n \u2014 the intersection\nPetr needs to choose. If there are multiple answers, print any. If there are\nno such intersections, print \n    -1\n. Examples Input 5 6 1 2 2 3 3 1 3 4 4 5\n5 3 Output 3 Input 3 3 1 2 2 3 3 1 Output 1 Note In the first example the\nrobbers can move, for example, along the following routes: \n    (1-2-3-1)\n,\n\n    (3-4-5-3)\n, \n    (1-2-3-4-5-3-1)\n. We can show that if Petr chooses the\n\n    3\n-rd intersection, he will eventually meet the robbers independently of\ntheir route.\n\n",
        "cf_contest_id": 982,
        "cf_index": "F",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 6\r\n1 2\r\n2 3\r\n3 1\r\n3 4\r\n4 5\r\n5 3\r\n",
                "3\r\n"
            ],
            [
                "3 3\r\n1 2\r\n2 3\r\n3 1\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n1 2\r\n2 1\r\n",
                "1\r\n"
            ],
            [
                "6 7\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 1\r\n1 5\r\n",
                "6\r\n"
            ],
            [
                "6 6\r\n1 2\r\n2 3\r\n3 1\r\n4 5\r\n5 6\r\n6 4\r\n",
                "-1\r\n"
            ],
            [
                "6 8\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 1\r\n1 5\r\n4 2\r\n",
                "-1\r\n"
            ],
            [
                "6 8\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 1\r\n1 5\r\n1 4\r\n",
                "5\r\n"
            ],
            [
                "4 4\r\n1 2\r\n2 3\r\n3 4\r\n4 2\r\n",
                "2\r\n"
            ],
            [
                "4 3\r\n1 2\r\n2 1\r\n3 4\r\n",
                "1\r\n"
            ],
            [
                "4 6\r\n3 4\r\n4 3\r\n3 1\r\n1 2\r\n2 1\r\n4 2\r\n",
                "-1\r\n"
            ],
            [
                "3 6\r\n1 2\r\n1 2\r\n1 3\r\n1 3\r\n2 3\r\n3 2\r\n",
                "3\r\n"
            ],
            [
                "5 8\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n1 3\r\n2 4\r\n3 5\r\n",
                "5\r\n"
            ],
            [
                "6 9\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n2 6\r\n3 6\r\n6 4\r\n5 6\r\n",
                "4\r\n"
            ],
            [
                "5 8\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n1 5\r\n5 2\r\n4 5\r\n5 3\r\n",
                "4\r\n"
            ],
            [
                "10 17\r\n1 2\r\n2 3\r\n2 4\r\n3 4\r\n4 5\r\n4 6\r\n6 5\r\n5 7\r\n5 8\r\n7 8\r\n8 9\r\n9 2\r\n8 10\r\n10 1\r\n8 6\r\n9 1\r\n2 9\r\n",
                "-1\r\n"
            ],
            [
                "23 26\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n11 12\r\n12 13\r\n13 14\r\n14 15\r\n15 16\r\n16 17\r\n17 18\r\n18 1\r\n1 21\r\n21 9\r\n18 20\r\n20 10\r\n17 19\r\n19 11\r\n2 12\r\n8 16\r\n",
                "17\r\n"
            ],
            [
                "23 32\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n11 12\r\n12 13\r\n13 14\r\n14 15\r\n15 16\r\n16 17\r\n17 18\r\n18 1\r\n1 21\r\n21 22\r\n22 9\r\n18 20\r\n20 23\r\n23 10\r\n22 23\r\n17 19\r\n19 11\r\n19 10\r\n2 12\r\n16 8\r\n3 19\r\n5 14\r\n",
                "16\r\n"
            ],
            [
                "23 33\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n11 12\r\n12 13\r\n13 14\r\n14 15\r\n15 16\r\n16 17\r\n17 18\r\n18 1\r\n1 21\r\n21 22\r\n22 9\r\n18 20\r\n20 23\r\n23 10\r\n22 23\r\n17 19\r\n19 11\r\n19 10\r\n2 12\r\n16 8\r\n3 19\r\n5 14\r\n6 4\r\n",
                "-1\r\n"
            ],
            [
                "5 8\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n1 3\r\n4 2\r\n3 5\r\n",
                "3\r\n"
            ],
            [
                "6 9\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n1 3\r\n2 4\r\n5 6\r\n5 6\r\n",
                "1\r\n"
            ],
            [
                "5 7\r\n1 2\r\n2 3\r\n3 1\r\n1 4\r\n4 3\r\n1 5\r\n5 4\r\n",
                "3\r\n"
            ],
            [
                "22 36\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n11 1\r\n11 18\r\n10 20\r\n21 19\r\n9 21\r\n18 8\r\n5 18\r\n4 22\r\n20 16\r\n11 7\r\n15 11\r\n19 1\r\n12 8\r\n6 13\r\n20 12\r\n11 10\r\n12 4\r\n15 22\r\n10 8\r\n22 12\r\n18 11\r\n15 1\r\n22 13\r\n8 20\r\n12 2\r\n6 21\r\n",
                "-1\r\n"
            ],
            [
                "7 9\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n1 6\r\n6 4\r\n4 7\r\n7 1\r\n",
                "4\r\n"
            ],
            [
                "7 10\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n1 6\r\n6 4\r\n4 7\r\n7 1\r\n1 5\r\n",
                "1\r\n"
            ],
            [
                "10 14\r\n1 2\r\n2 3\r\n2 4\r\n3 4\r\n4 5\r\n4 6\r\n6 5\r\n5 7\r\n5 8\r\n7 8\r\n8 9\r\n9 2\r\n8 10\r\n10 1\r\n",
                "2\r\n"
            ],
            [
                "10 15\r\n1 2\r\n2 3\r\n2 4\r\n3 4\r\n4 5\r\n4 6\r\n6 5\r\n5 7\r\n5 8\r\n7 8\r\n8 9\r\n9 2\r\n8 10\r\n10 1\r\n8 6\r\n",
                "8\r\n"
            ],
            [
                "10 16\r\n1 2\r\n2 3\r\n2 4\r\n3 4\r\n4 5\r\n4 6\r\n6 5\r\n5 7\r\n5 8\r\n7 8\r\n8 9\r\n9 2\r\n8 10\r\n10 1\r\n8 6\r\n9 1\r\n",
                "5\r\n"
            ],
            [
                "10 17\r\n1 2\r\n2 3\r\n2 4\r\n3 4\r\n4 5\r\n4 6\r\n6 5\r\n5 7\r\n5 8\r\n7 8\r\n8 9\r\n9 2\r\n8 10\r\n10 1\r\n8 6\r\n9 1\r\n6 9\r\n",
                "-1\r\n"
            ],
            [
                "10 8\r\n2 3\r\n8 2\r\n9 8\r\n5 9\r\n3 6\r\n9 6\r\n5 8\r\n6 5\r\n",
                "5\r\n"
            ],
            [
                "10 11\r\n8 9\r\n2 1\r\n8 6\r\n2 3\r\n9 3\r\n3 6\r\n10 1\r\n3 10\r\n6 10\r\n10 2\r\n1 8\r\n",
                "10\r\n"
            ],
            [
                "100 22\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 1\r\n73 20\r\n100 50\r\n37 24\r\n96 27\r\n8 23\r\n67 81\r\n48 36\r\n23 56\r\n9 39\r\n32 67\r\n48 32\r\n11 22\r\n41 97\r\n",
                "5\r\n"
            ],
            [
                "5 9\r\n5 1\r\n1 2\r\n2 3\r\n3 5\r\n5 4\r\n2 5\r\n5 2\r\n5 3\r\n3 5\r\n",
                "5\r\n"
            ],
            [
                "5 7\r\n1 2\r\n2 3\r\n3 1\r\n2 4\r\n4 2\r\n3 5\r\n5 3\r\n",
                "-1\r\n"
            ]
        ]
    }
]