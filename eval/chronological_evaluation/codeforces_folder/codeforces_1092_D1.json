[
    {
        "name": "Great Vova Wall (Version 1)",
        "description": "Vova's family is building the Great Vova Wall (named by Vova himself). Vova's\nparents, grandparents, grand-grandparents contributed to it. Now it's totally\nup to Vova to put the finishing touches. The current state of the wall can be\nrespresented by a sequence \n    a\n of \n    n\n integers, with \n    a_i\n being\nthe height of the \n    i\n-th part of the wall. Vova can only use \n    2 \n    \u00d7\n    1\n bricks to put in the wall (he has infinite supply of them, however). Vova\ncan put bricks horizontally on the neighboring parts of the wall of equal\nheight. It means that if for some \n    i\n the current height of part \n    i\n\nis the same as for part \n    i + 1\n, then Vova can put a brick there and thus\nincrease both heights by 1. Obviously, Vova can't put bricks in such a way\nthat its parts turn out to be off the borders (to the left of part \n    1\n of\nthe wall or to the right of part \n    n\n of it). The next paragraph is\nspecific to the version 1 of the problem. Vova can also put bricks vertically.\nThat means increasing height of any part of the wall by 2. Vova is a\nperfectionist, so he considers the wall completed when: all parts of the wall\nhas the same height; the wall has no empty spaces inside it. Can Vova complete\nthe wall using any amount of bricks (possibly zero)? Input The first line\ncontains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the\nnumber of parts in the wall. The second line contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the initial heights of\nthe parts of the wall. Output Print \"YES\" if Vova can complete the wall using\nany amount of bricks (possibly zero). Print \"NO\" otherwise. Examples Input 5 2\n1 1 2 5 Output YES Input 3 4 5 3 Output YES Input 2 10 10 Output YES Input 3 1\n2 3 Output NO Note In the first example Vova can put a brick on parts 2 and 3\nto make the wall \n    [2, 2, 2, 2, 5]\n and then put 3 bricks on parts 1 and 2\nand 3 bricks on parts 3 and 4 to make it \n    [5, 5, 5, 5, 5]\n. In the second\nexample Vova can put a brick vertically on part 3 to make the wall \n    [4, 5,\n    5]\n, then horizontally on parts 2 and 3 to make it \n    [4, 6, 6]\n and then\nvertically on part 1 to make it \n    [6, 6, 6]\n. In the third example the wall\nis already complete.\n\n",
        "cf_contest_id": 1092,
        "cf_index": "D1",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 1 1 2 5\r\n",
                "YES\n"
            ],
            [
                "3\r\n4 5 3\r\n",
                "YES\n"
            ],
            [
                "2\r\n10 10\r\n",
                "YES\n"
            ],
            [
                "3\r\n1 2 3\r\n",
                "NO\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 9 7 6 2 4 7 8 1 3\r\n",
                "NO\n"
            ],
            [
                "1\r\n1\r\n",
                "YES\n"
            ],
            [
                "1\r\n2\r\n",
                "YES\n"
            ],
            [
                "3\r\n2 1 2\r\n",
                "NO\n"
            ],
            [
                "2\r\n1 2\r\n",
                "NO\n"
            ],
            [
                "5\r\n1 2 2 1 2\r\n",
                "YES\n"
            ],
            [
                "5\r\n5 2 5 2 6\r\n",
                "NO\n"
            ],
            [
                "4\r\n3 3 3 4\r\n",
                "NO\n"
            ],
            [
                "3\r\n1 1 1\r\n",
                "YES\n"
            ],
            [
                "5\r\n2 1 1 2 1\r\n",
                "YES\n"
            ],
            [
                "2\r\n99999999 99999998\r\n",
                "NO\n"
            ],
            [
                "5\r\n1 1 2 1 2\r\n",
                "NO\n"
            ],
            [
                "4\r\n1 2 2 2\r\n",
                "NO\n"
            ],
            [
                "5\r\n1 2 2 2 2\r\n",
                "YES\n"
            ],
            [
                "6\r\n3 3 4 4 3 4\r\n",
                "NO\n"
            ],
            [
                "5\r\n2 10 6 9 4\r\n",
                "NO\n"
            ],
            [
                "7\r\n10 2 3 4 2 8 8\r\n",
                "YES\n"
            ],
            [
                "9\r\n2 5 1 9 6 5 7 3 1\r\n",
                "NO\n"
            ]
        ]
    }
]