[
    {
        "name": "Potion Brewing Class",
        "description": "Alice's potion making professor gave the following assignment to his students:\nbrew a potion using \n    n\n ingredients, such that the proportion of\ningredient \n    i\n in the final potion is \n    r_i > 0\n (and \n    r_1 + r_2 +\n    \n    \u22ef + r_n = 1\n). He forgot the recipe, and now all he remembers is a\nset of \n    n-1\n facts of the form, \"ingredients \n    i\n and \n    j\n should\nhave a ratio of \n    x\n to \n    y\n\" (i.e., if \n    a_i\n and \n    a_j\n are the\namounts of ingredient \n    i\n and \n    j\n in the potion respectively, then it\nmust hold \n    a_i/a_j = x/y\n), where \n    x\n and \n    y\n are positive\nintegers. However, it is guaranteed that the set of facts he remembers is\nsufficient to uniquely determine the original values \n    r_i\n. He decided\nthat he will allow the students to pass the class as long as they submit a\npotion which satisfies all of the \n    n-1\n requirements (there may be many\nsuch satisfactory potions), and contains a positive integer amount of each\ningredient. Find the minimum total amount of ingredients needed to make a\npotion which passes the class. As the result can be very large, you should\nprint the answer modulo \n    998\n     244\n     353\n. Input The first line contains\na single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test\ncases. The first line of each test case contains a single integer \n    n\n\n(\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n). Each of the next \n    n-1\n lines\ncontains four integers \n    i, j, x, y\n (\n    1 \n    \u2264 i, j \n    \u2264 n\n,\n\n    i\n    \u2260j\n, \n    1\n    \u2264 x, y \n    \u2264 n\n) \u2014 ingredients \n    i\n and \n    j\n\nshould have a ratio of \n    x\n to \n    y\n. It is guaranteed that the set of\nfacts is sufficient to uniquely determine the original values \n    r_i\n. It is\nalso guaranteed that the sum of \n    n\n for all test cases does not exceed\n\n    2 \n    \u00b7 10^5\n. Output For each test case, print the minimum total\namount of ingredients needed to make a potion which passes the class, modulo\n\n    998\n     244\n     353\n. Example Input 3 4 3 2 3 4 1 2 4 3 1 4 2 4 8 5 4 2 3 6\n4 5 4 1 3 5 2 6 8 2 1 3 5 3 4 3 2 2 5 6 7 4 3 17 8 7 4 16 9 17 4 5 5 14 13 12\n11 1 17 14 6 13 8 9 2 11 3 11 4 17 7 2 17 16 8 6 15 5 1 14 16 7 1 10 12 17 13\n10 11 16 7 2 10 11 6 4 13 17 14 6 3 11 15 8 15 6 12 8 Output 69 359 573672453\nNote In the first test case, the minimum total amount of ingredients is\n\n    69\n. In fact, the amounts of ingredients \n    1, 2, 3, 4\n of a valid\npotion are \n    16, 12, 9, 32\n, respectively. The potion is valid because\nIngredients \n    3\n and \n    2\n have a ratio of \n    9 : 12 = 3 : 4\n;\nIngredients \n    1\n and \n    2\n have a ratio of \n    16 : 12 = 4 : 3\n;\nIngredients \n    1\n and \n    4\n have a ratio of \n    16 : 32 = 2 : 4\n. In the\nsecond test case, the amounts of ingredients \n    1, 2, 3, 4, 5, 6, 7, 8\n in\nthe potion that minimizes the total amount of ingredients are \n    60, 60, 24,\n    48, 32, 60, 45, 30\n.\n\n",
        "cf_contest_id": 1654,
        "cf_index": "D",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "math",
            "number theory",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4\r\n3 2 3 4\r\n1 2 4 3\r\n1 4 2 4\r\n8\r\n5 4 2 3\r\n6 4 5 4\r\n1 3 5 2\r\n6 8 2 1\r\n3 5 3 4\r\n3 2 2 5\r\n6 7 4 3\r\n17\r\n8 7 4 16\r\n9 17 4 5\r\n5 14 13 12\r\n11 1 17 14\r\n6 13 8 9\r\n2 11 3 11\r\n4 17 7 2\r\n17 16 8 6\r\n15 5 1 14\r\n16 7 1 10\r\n12 17 13 10\r\n11 16 7 2\r\n10 11 6 4\r\n13 17 14 6\r\n3 11 15 8\r\n15 6 12 8\r\n",
                "69\r\n359\r\n573672453\r\n"
            ]
        ],
        "private_cases": []
    }
]