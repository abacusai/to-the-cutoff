[
    {
        "name": "GCD vs LCM",
        "description": "You are given a positive integer \n    n\n. You have to find \n    4\n positive\nintegers \n    a, b, c, d\n such that \n    a + b + c + d = n\n, and \n    (a,\n    b) = \n    lcm(c, d)\n.If there are several possible answers you\ncan output any of them. It is possible to show that the answer always exists.\nIn this problem \n    (a, b)\n denotes the greatest common divisor of\n\n    a\n and \n    b\n, and \n    lcm(c, d)\n denotes the least\ncommon multiple of \n    c\n and \n    d\n. Input The input consists of multiple\ntest cases. The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^4\n) \u2014 the number of test cases. Description of the test cases\nfollows. Each test case contains a single line with integer \n    n\n (\n    4\n    \n    \u2264 n \n    \u2264 10^9\n) \u2014 the sum of \n    a\n, \n    b\n, \n    c\n, and \n    d\n.\nOutput For each test case output \n    4\n positive integers \n    a\n, \n    b\n,\n\n    c\n, \n    d\n such that \n    a + b + c + d = n\n and \n    (a, b) =\n    \n    lcm(c, d)\n. Example Input 5 4 7 8 9 10 Output 1 1 1 1 2 2 2\n1 2 2 2 2 2 4 2 1 3 5 1 1 Note In the first test case \n    (1, 1) =\n    \n    lcm(1, 1) = 1\n, \n    1 + 1 + 1 + 1 = 4\n. In the second test\ncase \n    (2, 2) = \n    lcm(2, 1) = 2\n, \n    2 + 2 + 2 + 1 =\n    7\n. In the third test case \n    (2, 2) = \n    lcm(2, 2) =\n    2\n, \n    2 + 2 + 2 + 2 = 8\n. In the fourth test case \n    (2, 4) =\n    \n    lcm(2, 1) = 2\n, \n    2 + 4 + 2 + 1 = 9\n. In the fifth test\ncase \n    (3, 5) = \n    lcm(1, 1) = 1\n, \n    3 + 5 + 1 + 1 =\n    10\n.\n\n",
        "cf_contest_id": 1665,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4\r\n7\r\n8\r\n9\r\n10\r\n",
                "1 1 1 1\r\n4 1 1 1\r\n5 1 1 1\r\n6 1 1 1\r\n7 1 1 1\r\n"
            ]
        ],
        "private_cases": []
    }
]