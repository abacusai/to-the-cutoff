[
    {
        "name": "Qingshan and Daniel",
        "description": "Qingshan and Daniel are going to play a card game. But it will be so boring if\nonly two persons play this. So they will make \n    n\n robots in total to play\nthis game automatically. Robots made by Qingshan belong to the team \n    1\n,\nand robots made by Daniel belong to the team \n    2\n. Robot \n    i\n belongs to\nteam \n    t_i\n. Before the game starts, \n    a_i\n cards are given for robot\n\n    i\n. The rules for this card game are simple: Before the start, the robots\nare arranged in a circle in the order or their indices. The robots will\ndiscard cards in some order, in each step one robot discards a single card.\nWhen the game starts, robot \n    1\n will discard one of its cards. After that,\nrobots will follow the following rules: If robot \n    i\n discards the card\nlast, the nearest robot whose team is opposite from \n    i\n's will discard the\ncard next. In another word \n    j\n will discard a card right after \n    i\n, if\nand only if among all \n    j\n that satisfy \n    t_i\n     t_j\n, \n    dist(i,j)\n\n(definition is below) is minimum. The robot who has no cards should quit the\ngame immediately. This robot won't be considered in the next steps. When no\nrobot can discard the card next, the game ends. We define the distance from\nrobot \n    x\n to robot \n    y\n as \n    dist(x,y)=(y-x+n)\n     n\n. It is\nsimilar to the oriented distance on the circle. For example, when \n    n=5\n,\nthe distance from \n    1\n to \n    3\n is \n    dist(1,3)=(3-1+5)\n     5=2\n,\nthe distance from \n    3\n to \n    1\n is \n    dist(3,1)=(1-3+5)\n     5 =3\n.\nLater, Qingshan finds out that it will take so much time to see how robots\nplay. She wants to know the result as quickly as possible. You, as Qingshan's\nfan, are asked to calculate an array \n    [ans_1,ans_2,\n    \u2026,ans_n]\n \u2014\n\n    ans_i\n is equal to the number of cards, that \n    i\n-th robot will\ndiscard during the game. You need to hurry! To avoid the large size of the\ninput, the team and the number of cards of each robot will be generated in\nyour code with some auxiliary arrays. Input The first line contains one\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 5\n    \u00b7 10^6\n) \u2014 the number of robots\nplaying this game. The second line contains one integer \n    m\n (\n    1 \n    \u2264 m\n    \n    \u2264\n    min(n,200\n     000)\n). Each of the next \n    m\n line contains four\nintegers \n    p_i\n, \n    k_i\n, \n    b_i\n, \n    w_i\n (\n    1 \n    \u2264 p_i \n    \u2264\n    n\n, \n    1 \n    \u2264 k_i \n    \u2264 10^9+7\n, \n    0 \n    \u2264 b_i ,w_i< k_i\n). It's\nguaranteed that \n    p_m=n\n and \n    p_j-1<p_j\n (\n    2 \n    \u2264 j \n    \u2264 m\n).\nArrays \n    a_j\n and \n    t_j\n should be generated by the following pseudo\ncode: seed = 0 base = 0 function rnd(): ret = seed seed = (seed * base + 233)\nmod 1000000007 return ret p[0] = 0 for i = 1 to m: seed = b[i] base = w[i] for\nj = p[i - 1] + 1 to p[i]: t[j] = (rnd() mod 2) + 1 a[j] = (rnd() mod k[i]) + 1\nOutput Print a single integer \n    ( \n    \u220f_i=1^n ((ans_i \n    \u2295\n    i^2)+1)\n    ) \n     10^9+7\n, where \n    \u2295\n denotes the bitwise\nXOR operation. Examples Input 3 3 1 5 2 3 2 7 1 2 3 2 1 1 Output 100 Input\n5000000 2 1919810 998244353 114514 19260817 5000000 233333333 623532 7175\nOutput 800210675 Input 1 1 1 1 0 0 Output 1 Note In the first test case\n\n    a=[5,5,1]\n and \n    t=[1,2,2]\n. The robot \n    1\n discards the card\nfirst. Then robot \n    2\n discards the card next. Robot \n    3\n doesn't\ndiscard the card next because \n    dist(1,2)<dist(1,3)\n. Then robot \n    1\n\ndiscards the card next. Robot \n    3\n doesn't discard the card next because\n\n    t_2=t_3\n. If we write down the index of the robot who discards a card in\ntime order, it will be the sequence \n    [1,2,1,2,1,2,1,2]\n. So robots\n\n    1\n, \n    2\n and \n    3\n discard \n    5\n, \n    5\n and \n    0\n cards,\nrespectively. And the answer is \n    (((5 \n    \u2295 1^2)+1)\n    \u00d7((5 \n    \u2295\n    2^2)+1)\n    \u00d7((0 \n    \u2295 3^2)+1)) \n     10^9+7=(5\n    \u00d7 2 \n    \u00d7\n    10)\n     10^9+7=100\n.\n\n",
        "cf_contest_id": 1495,
        "cf_index": "E",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n1 5 2 3\r\n2 7 1 2\r\n3 2 1 1\r\n",
                "100\r\n"
            ],
            [
                "5000000\r\n2\r\n1919810 998244353 114514 19260817\r\n5000000 233333333 623532 7175\r\n",
                "800210675\r\n"
            ],
            [
                "1\r\n1\r\n1 1 0 0\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "200000\r\n10\r\n15131 71806884 51396261 42500393\r\n27376 276796786 20803145 247001190\r\n84508 30400686 21252573 9371220\r\n89312 225764134 168072958 34163021\r\n98328 953687853 171514777 528584946\r\n98899 215213454 1159695 155182831\r\n105117 90347387 85244690 70688341\r\n121760 93606477 16287386 8263312\r\n145379 60763162 8134573 37649480\r\n200000 443384572 270073134 358951299\r\n",
                "927949382\r\n"
            ],
            [
                "5000000\r\n10\r\n373386 424634780 283563017 191781129\r\n562494 562866888 171245548 299471193\r\n919503 969621973 805562826 868946761\r\n1809541 422468551 340660454 201150833\r\n2531536 782938701 383718843 162041016\r\n3478013 372277042 328716307 96172062\r\n4095518 464718509 278335389 421257550\r\n4380930 147616925 136353623 98374202\r\n4568576 623458245 519281164 273023344\r\n5000000 316511471 124116562 192722602\r\n",
                "288904450\r\n"
            ],
            [
                "100\r\n1\r\n100 2 0 1\r\n",
                "446688144\r\n"
            ],
            [
                "5000000\r\n2\r\n2500000 233333 100001 1\r\n5000000 233334 100000 1\r\n",
                "945789039\r\n"
            ],
            [
                "5000000\r\n1\r\n5000000 2 1 1\r\n",
                "465477563\r\n"
            ]
        ]
    }
]