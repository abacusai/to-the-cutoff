[
    {
        "name": "Binary Spiders",
        "description": "Binary Spiders are species of spiders that live on Mars. These spiders weave\ntheir webs to defend themselves from enemies. To weave a web, spiders join in\npairs. If the first spider in pair has \n    x\n legs, and the second spider has\n\n    y\n legs, then they weave a web with durability \n    x \n    \u2295 y\n. Here,\n\n    \u2295\n means bitwise XOR. Binary Spiders live in large groups. You\nobserve a group of \n    n\n spiders, and the \n    i\n-th spider has \n    a_i\n\nlegs. When the group is threatened, some of the spiders become defenders.\nDefenders are chosen in the following way. First, there must be at least two\ndefenders. Second, any pair of defenders must be able to weave a web with\ndurability at least \n    k\n. Third, there must be as much defenders as\npossible. Scientists have researched the behaviour of Binary Spiders for a\nlong time, and now they have a hypothesis that they can always choose the\ndefenders in an optimal way, satisfying the conditions above. You need to\nverify this hypothesis on your group of spiders. So, you need to understand\nhow many spiders must become defenders. You are not a Binary Spider, so you\ndecided to use a computer to solve this problem. Input The first line contains\ntwo integers \n    n\n and \n    k\n (\n    2 \n    \u2264 n \n    \u2264 3\n    \u00b710^5\n, \n    0\n    \n    \u2264 k \n    \u2264 2^30 - 1\n), the amount of spiders in the group and the\nminimal allowed durability of a web. The second line contains \n    n\n integers\n\n    a_i\n (\n    0 \n    \u2264 a_i \n    \u2264 2^30-1\n) \u2014 the number of legs the\n\n    i\n-th spider has. Output In the first line, print a single integer\n\n    \u2113\n (\n    2 \n    \u2264\n    \u2113\n    \u2264 n\n), the maximum possible amount of\ndefenders. In the second line, print \n    \u2113\n integers \n    b_i\n,\nseparated by a single space (\n    1 \n    \u2264 b_i \n    \u2264 n\n) \u2014 indices of spiders\nthat will become defenders. If there exists more than one way to choose the\ndefenders, print any of them. Unfortunately, it may appear that it's\nimpossible to choose the defenders. In this case, print a single integer\n\n    -1\n. Examples Input 6 8 2 8 4 16 10 14 Output 3 1 5 4 Input 6 1024 1 2 3\n1 4 0 Output -1 Note Consider the examples above. In the first example, the\ngroup of spiders is illustrated on the picture below: We choose the two-\nlegged, the ten-legged and the \n    16\n-legged spiders. It's not hard to see\nthat each pair may weave a web with enough durability, as \n    2 \n    \u2295 10 = 8\n    \n    \u2265 8\n, \n    2 \n    \u2295 16 = 18 \n    \u2265 8\n and \n    10 \n    \u2295 16 = 26 \n    \u2265\n    8\n. This is not the only way, as you can also choose, for example, the\nspiders with indices \n    3\n, \n    4\n, and \n    6\n. In the second example, no\npair of spiders can weave the web with durability \n    1024\n or more, so the\nanswer is \n    -1\n.\n\n",
        "cf_contest_id": 1625,
        "cf_index": "D",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "data structures",
            "implementation",
            "math",
            "sortings",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 8\r\n2 8 4 16 10 14\r\n",
                "3\r\n4 6 3 "
            ],
            [
                "6 1024\r\n1 2 3 1 4 0\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "20 0\r\n0 4 1 9 8 1 4 6 7 4 5 9 1 8 9 2 5 4 8 7\r\n",
                "20\r\n15 12 4 19 14 5 20 9 8 17 11 18 10 7 2 16 13 6 3 1 "
            ],
            [
                "20 0\r\n6 8 8 2 0 5 9 7 8 4 8 1 6 7 8 1 8 6 1 9\r\n",
                "20\r\n20 7 17 15 11 9 3 2 14 8 18 13 1 6 10 4 19 16 12 5 "
            ],
            [
                "12 1042429101\r\n181958302 761227580 971492444 397495504 697530492 909196300 12385602 394915868 595046284 568800944 808265126 951866736\r\n",
                "-1\r\n"
            ],
            [
                "11 0\r\n380536893 239760975 315995580 813155154 588348168 380536893 903936370 117722676 117722676 818213290 93979828\r\n",
                "11\r\n7 10 4 5 6 1 3 2 9 8 11 "
            ],
            [
                "14 18535131\r\n1033736871 470339541 682715382 511092621 695998324 1015496828 224209300 600356223 557956192 499247775 620049653 1051585191 790784561 689375733\r\n",
                "13\r\n12 1 6 13 5 3 11 8 9 4 10 2 7 "
            ],
            [
                "11 181954108\r\n682458507 578100151 251346287 859931935 85876287 973133588 391257712 1036504269 223012166 65856047 66320997\r\n",
                "7\r\n8 4 1 2 7 3 5 "
            ],
            [
                "17 943004594\r\n985773614 331482635 420348861 832009364 48043331 697854947 336144824 408806267 241596460 1009815998 495652893 4666970 499378952 293246979 357630786 273623394 105612295\r\n",
                "2\r\n10 17 "
            ],
            [
                "14 1059417823\r\n254956086 124457456 230223080 697879632 475814512 581376668 68692314 364403084 829622814 470493560 447198936 944668462 893919806 568684040\r\n",
                "-1\r\n"
            ],
            [
                "2 3\r\n7 1\r\n",
                "2\r\n1 2 "
            ]
        ]
    }
]