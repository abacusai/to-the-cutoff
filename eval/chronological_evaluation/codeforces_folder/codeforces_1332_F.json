[
    {
        "name": "Independent Set",
        "description": "Eric is the teacher of graph theory class. Today, Eric teaches independent set\nand edge-induced subgraph. Given a graph \n    G=(V,E)\n, an independent set is\na subset of vertices \n    V' \n    \u2282 V\n such that for every pair \n    u,v\n    \n    \u2208 V'\n, \n    (u,v) \n    \u2208 E\n (i.e. no edge in \n    E\n connects two\nvertices from \n    V'\n). An edge-induced subgraph consists of a subset of\nedges \n    E' \n    \u2282 E\n and all the vertices in the original graph that are\nincident on at least one edge in the subgraph. Given \n    E' \n    \u2282 E\n,\ndenote \n    G[E']\n the edge-induced subgraph such that \n    E'\n is the edge\nset of the subgraph. Here is an illustration of those definitions: In order to\nhelp his students get familiar with those definitions, he leaves the following\nproblem as an exercise: Given a tree \n    G=(V,E)\n, calculate the sum of\n\n    w(H)\n over all except null edge-induced subgraph \n    H\n of \n    G\n,\nwhere \n    w(H)\n is the number of independent sets in \n    H\n. Formally,\ncalculate \n    \u2211\n    _\n    \u2205\n    \u2260 E' \n    \u2282 E\n    w(G[E'])\n. Show Eric that you are smarter than his students by providing the\ncorrect answer as quickly as possible. Note that the answer might be large,\nyou should output the answer modulo \n    998,244,353\n. Input The first line\ncontains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n),\nrepresenting the number of vertices of the graph \n    G\n. Each of the\nfollowing \n    n-1\n lines contains two integers \n    u\n and \n    v\n (\n    1\n    \n    \u2264 u,v \n    \u2264 n\n, \n    u \n    \u2260 v\n), describing edges of the given tree.\nIt is guaranteed that the given edges form a tree. Output Output one integer,\nrepresenting the desired value modulo \n    998,244,353\n. Examples Input 2 2 1\nOutput 3 Input 3 1 2 3 2 Output 11 Note For the second example, all\nindependent sets are listed below.\n\n",
        "cf_contest_id": 1332,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n2 1\r\n",
                "3\r\n"
            ],
            [
                "3\r\n1 2\r\n3 2\r\n",
                "11\r\n"
            ]
        ],
        "private_cases": [
            [
                "6\r\n1 5\r\n3 4\r\n6 1\r\n3 2\r\n3 1\r\n",
                "296\r\n"
            ],
            [
                "4\r\n4 3\r\n4 1\r\n4 2\r\n",
                "33\r\n"
            ],
            [
                "5\r\n4 1\r\n4 5\r\n1 2\r\n1 3\r\n",
                "104\r\n"
            ],
            [
                "7\r\n5 7\r\n2 5\r\n2 1\r\n1 6\r\n3 6\r\n4 1\r\n",
                "1001\r\n"
            ],
            [
                "8\r\n8 6\r\n7 4\r\n8 5\r\n2 7\r\n3 2\r\n5 2\r\n1 2\r\n",
                "2807\r\n"
            ],
            [
                "9\r\n3 1\r\n2 7\r\n9 2\r\n2 1\r\n6 9\r\n8 9\r\n9 5\r\n2 4\r\n",
                "7160\r\n"
            ],
            [
                "10\r\n2 8\r\n5 10\r\n3 4\r\n1 6\r\n3 9\r\n1 7\r\n4 8\r\n10 8\r\n1 8\r\n",
                "24497\r\n"
            ],
            [
                "20\r\n10 20\r\n11 8\r\n1 11\r\n10 7\r\n6 14\r\n17 15\r\n17 13\r\n10 1\r\n5 1\r\n19 13\r\n19 3\r\n17 1\r\n17 12\r\n16 18\r\n6 11\r\n18 8\r\n9 6\r\n4 13\r\n2 1\r\n",
                "125985156\r\n"
            ],
            [
                "50\r\n21 10\r\n30 22\r\n3 37\r\n37 32\r\n4 27\r\n18 7\r\n2 30\r\n29 19\r\n6 37\r\n12 39\r\n47 25\r\n41 49\r\n45 9\r\n25 48\r\n16 14\r\n9 7\r\n33 28\r\n3 31\r\n34 16\r\n35 37\r\n27 40\r\n45 16\r\n29 44\r\n16 15\r\n26 15\r\n1 12\r\n2 13\r\n15 21\r\n43 14\r\n9 33\r\n44 15\r\n46 1\r\n38 5\r\n15 5\r\n1 32\r\n42 35\r\n20 27\r\n23 8\r\n1 16\r\n15 17\r\n36 50\r\n13 8\r\n49 45\r\n11 2\r\n24 4\r\n36 15\r\n15 30\r\n16 4\r\n25 37\r\n",
                "120680112\r\n"
            ],
            [
                "4\r\n1 2\r\n2 3\r\n3 4\r\n",
                "36\r\n"
            ],
            [
                "9\r\n3 6\r\n5 2\r\n5 8\r\n9 5\r\n1 3\r\n4 9\r\n7 4\r\n2 3\r\n",
                "8789\r\n"
            ],
            [
                "10\r\n1 10\r\n7 1\r\n6 2\r\n1 3\r\n8 4\r\n1 9\r\n1 4\r\n1 6\r\n5 1\r\n",
                "21234\r\n"
            ],
            [
                "10\r\n4 3\r\n2 6\r\n10 1\r\n5 7\r\n5 8\r\n10 6\r\n5 9\r\n9 3\r\n2 9\r\n",
                "27128\r\n"
            ],
            [
                "11\r\n1 3\r\n1 8\r\n1 10\r\n9 2\r\n1 11\r\n1 4\r\n2 6\r\n5 1\r\n7 1\r\n1 2\r\n",
                "57350\r\n"
            ],
            [
                "11\r\n5 1\r\n4 7\r\n8 11\r\n2 6\r\n3 6\r\n2 10\r\n4 10\r\n5 4\r\n11 9\r\n6 11\r\n",
                "76748\r\n"
            ],
            [
                "12\r\n1 9\r\n11 1\r\n1 7\r\n8 1\r\n2 1\r\n5 12\r\n1 6\r\n1 12\r\n3 12\r\n4 12\r\n12 10\r\n",
                "151928\r\n"
            ],
            [
                "12\r\n8 12\r\n2 4\r\n10 11\r\n6 9\r\n1 3\r\n7 12\r\n11 12\r\n8 4\r\n7 9\r\n5 3\r\n5 6\r\n",
                "279335\r\n"
            ],
            [
                "9\r\n8 1\r\n1 4\r\n1 5\r\n6 1\r\n2 1\r\n3 1\r\n9 1\r\n7 1\r\n",
                "6815\r\n"
            ],
            [
                "11\r\n9 7\r\n8 4\r\n9 3\r\n6 3\r\n7 11\r\n4 2\r\n9 5\r\n1 9\r\n4 5\r\n4 10\r\n",
                "69551\r\n"
            ],
            [
                "11\r\n1 6\r\n7 10\r\n7 2\r\n1 5\r\n9 8\r\n3 7\r\n1 7\r\n8 1\r\n1 4\r\n11 8\r\n",
                "56414\r\n"
            ],
            [
                "11\r\n1 9\r\n2 3\r\n8 7\r\n2 11\r\n2 6\r\n1 5\r\n2 4\r\n7 10\r\n9 7\r\n3 10\r\n",
                "75965\r\n"
            ],
            [
                "11\r\n1 2\r\n7 3\r\n1 6\r\n11 3\r\n8 1\r\n9 1\r\n5 1\r\n3 4\r\n1 3\r\n3 10\r\n",
                "52466\r\n"
            ],
            [
                "12\r\n12 6\r\n6 10\r\n2 12\r\n7 6\r\n11 5\r\n5 6\r\n11 8\r\n3 11\r\n4 7\r\n3 1\r\n7 9\r\n",
                "215486\r\n"
            ],
            [
                "13\r\n3 6\r\n1 5\r\n3 2\r\n1 11\r\n1 7\r\n1 8\r\n1 9\r\n1 12\r\n9 4\r\n3 1\r\n13 1\r\n10 1\r\n",
                "510842\r\n"
            ],
            [
                "14\r\n9 2\r\n12 14\r\n3 14\r\n9 3\r\n5 14\r\n5 13\r\n7 10\r\n8 11\r\n13 7\r\n12 6\r\n8 6\r\n4 8\r\n1 4\r\n",
                "2454519\r\n"
            ],
            [
                "15\r\n1 8\r\n11 4\r\n1 12\r\n1 14\r\n12 2\r\n4 13\r\n4 10\r\n4 1\r\n1 9\r\n15 1\r\n1 7\r\n1 5\r\n4 6\r\n4 3\r\n",
                "3832508\r\n"
            ],
            [
                "16\r\n4 10\r\n13 3\r\n14 3\r\n5 11\r\n6 16\r\n1 4\r\n8 10\r\n16 7\r\n8 9\r\n3 11\r\n9 2\r\n15 9\r\n15 12\r\n12 7\r\n13 7\r\n",
                "21587063\r\n"
            ],
            [
                "17\r\n17 1\r\n7 1\r\n16 1\r\n5 1\r\n9 1\r\n7 4\r\n14 1\r\n6 1\r\n11 1\r\n2 1\r\n7 12\r\n10 1\r\n3 1\r\n1 13\r\n15 1\r\n1 8\r\n",
                "40030094\r\n"
            ]
        ]
    }
]