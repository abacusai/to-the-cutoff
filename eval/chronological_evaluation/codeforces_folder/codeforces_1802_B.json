[
    {
        "name": "Settlement of Guinea Pigs",
        "description": "Dasha loves guinea pigs very much. In this regard, she decided to settle as\nmany guinea pigs at home as possible and developed a plan for the next \n    n\n\ndays. Every day, she will either buy a new guinea pig or call a doctor to\nexamine all her pets. Unfortunately, the store where she was going to buy\nguinea pigs does not understand them. Therefore, it cannot determine their\ngender. Dasha can't do it either. The only one who can help is a doctor. To\nkeep guinea pigs, aviaries are needed. Dasha plans to buy them in the same\nstore. Unfortunately, only one species is sold there \u2014 a double aviary. No\nmore than two guinea pigs can live in it. Since Dasha does not want to cause\nmoral injury to her pets \u2014 she will not settle two guinea pigs of different\ngenders in one aviary. Help Dasha calculate how many aviaries in the worst\ncase you need to buy so that you can be sure that at no moment of time do two\nguinea pigs of different genders live in the same aviary. As part of this\ntask, we believe that guinea pigs have only two genders \u2014 male and female.\nInput The first line of input data contains one number \n    t\n (\n    1\n    \n    \u2a7d t \n    \u2a7d 10^5\n) \u2014 the number of input data sets. The first\nline of each input data set contains one number \n    n\n (\n    1 \n    \u2a7d n\n    \n    \u2a7d 10^5\n) \u2014 the number of days Dasha has a plan for. The next line\ncontains \n    n\n numbers \n    b_1, b_2, b_3, \n    \u2026, b_n\n (\n    1 \n    \u2a7d\n    b_i \n    \u2a7d 2\n) \u2014 Dasha's plan. If \n    b_i = 1\n, then on the \n    i\nth\nday, Dasha will buy a new guinea pig. If \n    b_i = 2\n, then on the \n    i\nth\nday, a doctor will come to Dasha and help determine the sex of all guinea pigs\nthat Dasha already has. It is guaranteed that the sum of \n    n\n for all input\ndata sets does not exceed \n    10^5\n. Output For each set of input data,\noutput one number \u2014 the minimum number of aviaries Dasha needs to buy so that\nno matter what the genders of the pigs turn out to be, we can settle them so\nthat at no point in time do two guinea pigs of different genders live\ntogether. Example Input 6 3 1 1 1 3 2 2 2 5 1 1 1 2 1 10 1 2 1 2 1 2 1 2 1 2\n20 1 2 1 1 1 1 1 2 1 2 1 2 2 1 1 1 1 1 1 1 20 2 1 1 2 1 1 2 1 2 2 1 1 1 2 2 1\n1 1 1 2 Output 3 0 3 4 12 9 Note In the first set of input data, Dasha needs\nto put each guinea pig in a separate enclosure, since she does not know their\ngender. In the second set of input data, Dasha will buy \n    0\n guinea pigs,\nwhich means she will need \n    0\n aviaries. In the third set of input data,\nyou even need \n    3\n aviaries to put each guinea pig in a separate aviary\nbefore the doctor arrives at the \n    4\nth day. When she finds out their\ngender, at least two guinea pigs will be of the same gender and they can be\nplaced in one aviary, and the third in another aviary. Thus, she will have one\nfree aviary in which she can settle a new guinea pig. So answer is \n    3\n. In\nthe fourth set of input data, we show that \n    4\n is the optimal answer. To\nbegin with, we note that the first four guinea pigs can be placed one at a\ntime in an aviary. Then a doctor will come and determine their gender. Among\nthese four guinea pigs there will be at least one pair of the same gender,\nbecause: either male guinea pigs are at least \n    2\n, or they are not more\nthan \n    1\n, which means that the female is at least \n    3\n. Now we can put\nthis couple in one aviary, and the other two in separate ones. We will have\none more empty aviary where we can put a new pig. Now let's show that the\nanswer is at least \n    4\n. Let's say that among the first \n    4\n guinea\npigs, \n    3\n are female and \n    1\n is male. We need at least \n    3\n\naviaries to settle them. Then, when we buy a new guinea pig, we will need\nanother aviary in which we will put it, since we do not know its gender.\n\n",
        "cf_contest_id": 1802,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n3\r\n1 1 1\r\n3\r\n2 2 2\r\n5\r\n1 1 1 2 1\r\n10\r\n1 2 1 2 1 2 1 2 1 2\r\n20\r\n1 2 1 1 1 1 1 2 1 2 1 2 2 1 1 1 1 1 1 1\r\n20\r\n2 1 1 2 1 1 2 1 2 2 1 1 1 2 2 1 1 1 1 2\r\n",
                "3\r\n0\r\n3\r\n4\r\n12\r\n9\r\n"
            ]
        ],
        "private_cases": []
    }
]