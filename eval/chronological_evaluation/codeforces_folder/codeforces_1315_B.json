[
    {
        "name": "Homecoming",
        "description": "After a long party Petya decided to return home, but he turned out to be at\nthe opposite end of the town from his home. There are \n    n\n crossroads in\nthe line in the town, and there is either the bus or the tram station at each\ncrossroad. The crossroads are represented as a string \n    s\n of length\n\n    n\n, where \n    s_i =\n, if there is a bus station at\n\n    i\n-th crossroad, and \n    s_i =\n, if there is a tram station\nat \n    i\n-th crossroad. Currently Petya is at the first crossroad (which\ncorresponds to \n    s_1\n) and his goal is to get to the last crossroad (which\ncorresponds to \n    s_n\n). If for two crossroads \n    i\n and \n    j\n for all\ncrossroads \n    i, i+1, \n    \u2026, j-1\n there is a bus station, one can pay\n\n    a\n roubles for the bus ticket, and go from \n    i\n-th crossroad to the\n\n    j\n-th crossroad by the bus (it is not necessary to have a bus station at\nthe \n    j\n-th crossroad). Formally, paying \n    a\n roubles Petya can go from\n\n    i\n to \n    j\n if \n    s_t =\n for all \n    i \n    \u2264 t < j\n. If\nfor two crossroads \n    i\n and \n    j\n for all crossroads \n    i, i+1, \n    \u2026,\n    j-1\n there is a tram station, one can pay \n    b\n roubles for the tram\nticket, and go from \n    i\n-th crossroad to the \n    j\n-th crossroad by the\ntram (it is not necessary to have a tram station at the \n    j\n-th crossroad).\nFormally, paying \n    b\n roubles Petya can go from \n    i\n to \n    j\n if\n\n    s_t =\n for all \n    i \n    \u2264 t < j\n. For example, if\n\n    s\n=\"AABBBAB\", \n    a=4\n and \n    b=3\n then Petya needs: buy one bus\nticket to get from \n    1\n to \n    3\n, buy one tram ticket to get from \n    3\n\nto \n    6\n, buy one bus ticket to get from \n    6\n to \n    7\n. Thus, in total\nhe needs to spend \n    4+3+4=11\n roubles. Please note that the type of the\nstop at the last crossroad (i.e. the character \n    s_n\n) does not affect the\nfinal expense. Now Petya is at the first crossroad, and he wants to get to the\n\n    n\n-th crossroad. After the party he has left with \n    p\n roubles. He's\ndecided to go to some station on foot, and then go to home using only public\ntransport. Help him to choose the closest crossroad \n    i\n to go on foot the\nfirst, so he has enough money to get from the \n    i\n-th crossroad to the\n\n    n\n-th, using only tram and bus tickets. Input Each test contains one or\nmore test cases. The first line contains the number of test cases \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 10^4\n). The first line of each test case consists of\nthree integers \n    a, b, p\n (\n    1 \n    \u2264 a, b, p \n    \u2264 10^5\n) \u2014 the cost of\nbus ticket, the cost of tram ticket and the amount of money Petya has. The\nsecond line of each test case consists of one string \n    s\n, where \n    s_i =\n, if there is a bus station at \n    i\n-th crossroad, and \n    s_i\n    =\n, if there is a tram station at \n    i\n-th crossroad (\n    2\n    \n    \u2264 |s| \n    \u2264 10^5\n). It is guaranteed, that the sum of the length of\nstrings \n    s\n by all test cases in one test doesn't exceed \n    10^5\n.\nOutput For each test case print one number \u2014 the minimal index \n    i\n of a\ncrossroad Petya should go on foot. The rest of the path (i.e. from \n    i\n to\n\n    n\n he should use public transport). Example Input 5 2 2 1 BB 1 1 1 AB 3 2\n8 AABBBBAABB 5 3 4 BBBBB 2 1 1 ABABAB Output 2 1 3 1 6\n\n",
        "cf_contest_id": 1315,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "dp",
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 2 1\r\nBB\r\n1 1 1\r\nAB\r\n3 2 8\r\nAABBBBAABB\r\n5 3 4\r\nBBBBB\r\n2 1 1\r\nABABAB\r\n",
                "2\r\n1\r\n3\r\n1\r\n6\r\n"
            ]
        ],
        "private_cases": []
    }
]