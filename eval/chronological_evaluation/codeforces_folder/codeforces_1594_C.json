[
    {
        "name": "Make Them Equal",
        "description": "Theofanis has a string \n    s_1 s_2 \n    \u2026 s_n\n and a character \n    c\n. He\nwants to make all characters of the string equal to \n    c\n using the minimum\nnumber of operations. In one operation he can choose a number \n    x\n (\n    1\n    \n    \u2264 x \n    \u2264 n\n) and for every position \n    i\n, where \n    i\n is not\ndivisible by \n    x\n, replace \n    s_i\n with \n    c\n. Find the minimum number\nof operations required to make all the characters equal to \n    c\n and the\n\n    x\n-s that he should use in his operations. Input The first line contains\na single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test\ncases. The first line of each test case contains the integer \n    n\n (\n    3\n    \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n) and a lowercase Latin letter \n    c\n \u2014 the\nlength of the string \n    s\n and the character the resulting string should\nconsist of. The second line of each test case contains a string \n    s\n of\nlowercase Latin letters \u2014 the initial string. It is guaranteed that the sum of\n\n    n\n over all test cases does not exceed \n    3 \n    \u00b7 10^5\n. Output For\neach test case, firstly print one integer \n    m\n \u2014 the minimum number of\noperations required to make all the characters equal to \n    c\n. Next, print\n\n    m\n integers \n    x_1, x_2, \n    \u2026, x_m\n (\n    1 \n    \u2264 x_j \n    \u2264 n\n) \u2014\nthe \n    x\n-s that should be used in the order they are given. It can be\nproved that under given constraints, an answer always exists. If there are\nmultiple answers, print any. Example Input 3 4 a aaaa 4 a baaa 4 b bzyx Output\n0 1 2 2 2 3 Note Let's describe what happens in the third test case: \n    x_1 =\n    2\n: we choose all positions that are not divisible by \n    2\n and replace\nthem, i. e. bzyx \n    \u2192\n bzbx; \n    x_2 = 3\n: we choose all\npositions that are not divisible by \n    3\n and replace them, i. e. bzbx\n\n    \u2192\n bbbb.\n\n",
        "cf_contest_id": 1594,
        "cf_index": "C",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "math",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4 a\r\naaaa\r\n4 a\r\nbaaa\r\n4 b\r\nbzyx\r\n",
                "0\r\n1 2\r\n2 4 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n3 a\r\naba\r\n",
                "1 3\r\n"
            ]
        ]
    }
]