[
    {
        "name": "Moving Points",
        "description": "There are \n    n\n points on a coordinate axis \n    OX\n. The \n    i\n-th point\nis located at the integer point \n    x_i\n and has a speed \n    v_i\n. It is\nguaranteed that no two points occupy the same coordinate. All \n    n\n points\nmove with the constant speed, the coordinate of the \n    i\n-th point at the\nmoment \n    t\n (\n    t\n can be non-integer) is calculated as \n    x_i + t\n    \n    \u00b7 v_i\n. Consider two points \n    i\n and \n    j\n. Let \n    d(i, j)\n be\nthe minimum possible distance between these two points over any possible\nmoments of time (even non-integer). It means that if two points \n    i\n and\n\n    j\n coincide at some moment, the value \n    d(i, j)\n will be \n    0\n. Your\ntask is to calculate the value \n    \u2211\n    _1 \n    \u2264 i < j \n    \u2264 n\n\n\n    d(i, j)\n (the sum of minimum distances over all pairs of points). Input\nThe first line of the input contains one integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the number of points. The second line of the input contains\n\n    n\n integers \n    x_1, x_2, \n    \u2026, x_n\n (\n    1 \n    \u2264 x_i \n    \u2264 10^8\n),\nwhere \n    x_i\n is the initial coordinate of the \n    i\n-th point. It is\nguaranteed that all \n    x_i\n are distinct. The third line of the input\ncontains \n    n\n integers \n    v_1, v_2, \n    \u2026, v_n\n (\n    -10^8 \n    \u2264 v_i\n    \n    \u2264 10^8\n), where \n    v_i\n is the speed of the \n    i\n-th point. Output\nPrint one integer \u2014 the value \n    \u2211\n    _1 \n    \u2264 i < j \n    \u2264 n\n\n\n    d(i, j)\n (the sum of minimum distances over all pairs of points).\nExamples Input 3 1 3 2 -100 2 3 Output 3 Input 5 2 1 4 3 5 2 2 2 3 4 Output 19\nInput 2 2 1 -3 0 Output 0\n\n",
        "cf_contest_id": 1311,
        "cf_index": "F",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "divide and conquer",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 3 2\r\n-100 2 3\r\n",
                "3"
            ],
            [
                "5\r\n2 1 4 3 5\r\n2 2 2 3 4\r\n",
                "19"
            ],
            [
                "2\r\n2 1\r\n-3 0\r\n",
                "0"
            ]
        ],
        "private_cases": []
    }
]