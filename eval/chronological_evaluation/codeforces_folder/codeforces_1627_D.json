[
    {
        "name": "Not Adding",
        "description": "You have an array \n    a_1, a_2, \n    \u2026, a_n\n consisting of \n    n\n distinct\nintegers. You are allowed to perform the following operation on it: Choose two\nelements from the array \n    a_i\n and \n    a_j\n (\n    i \n     j\n) such that\n\n    (a_i, a_j)\n is not present in the array, and add \n    (a_i,\n    a_j)\n to the end of the array. Here \n    (x, y)\n denotes greatest\ncommon divisor (GCD) of integers \n    x\n and \n    y\n. Note that the array\nchanges after each operation, and the subsequent operations are performed on\nthe new array. What is the maximum number of times you can perform the\noperation on the array? Input The first line consists of a single integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^6\n). The second line consists of \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^6\n). All\n\n    a_i\n are distinct. Output Output a single line containing one integer \u2014\nthe maximum number of times the operation can be performed on the given array.\nExamples Input 5 4 20 1 25 30 Output 3 Input 3 6 10 15 Output 4 Note In the\nfirst example, one of the ways to perform maximum number of operations on the\narray is: Pick \n    i = 1, j= 5\n and add \n    (a_1, a_5) = \n    (4, 30) =\n    2\n to the array. Pick \n    i = 2, j= 4\n and add \n    (a_2, a_4) =\n    \n    (20, 25) = 5\n to the array. Pick \n    i = 2, j= 5\n and add\n\n    (a_2, a_5) = \n    (20, 30) = 10\n to the array. It can be proved\nthat there is no way to perform more than \n    3\n operations on the original\narray. In the second example one can add \n    3\n, then \n    1\n, then \n    5\n,\nand \n    2\n.\n\n",
        "cf_contest_id": 1627,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4 20 1 25 30\r\n",
                "3"
            ],
            [
                "3\r\n6 10 15\r\n",
                "4"
            ]
        ],
        "private_cases": [
            [
                "7\r\n838695 559130 335478 98670 152490 129030 72930\r\n",
                "120"
            ],
            [
                "2\r\n1 1000000\r\n",
                "0"
            ],
            [
                "10\r\n239529 302993 398153 204081 370085 184103 337965 450634 411842 217101\r\n",
                "4"
            ],
            [
                "57\r\n241 444 553 126 612 550 441 420 742 879 520 664 590 198 910 731 308 740 791 680 904 629 324 606 621 75 350 253 57 164 440 970 876 648 581 258 989 851 186 117 700 537 837 284 654 130 728 955 859 988 820 345 901 294 244 125 512\r\n",
                "48"
            ]
        ]
    }
]