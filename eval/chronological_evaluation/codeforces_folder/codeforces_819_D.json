[
    {
        "name": "Mister B and Astronomers",
        "description": "After studying the beacons Mister B decided to visit alien's planet, because\nhe learned that they live in a system of flickering star Moon. Moreover,\nMister B learned that the star shines once in exactly T seconds. The problem\nis that the star is yet to be discovered by scientists. There are n\nastronomers numerated from 1 to n trying to detect the star. They try to\ndetect the star by sending requests to record the sky for 1 second. The\nastronomers send requests in cycle: the i-th astronomer sends a request\nexactly ai second after the (i - 1)-th (i.e. if the previous request was sent\nat moment t, then the next request is sent at moment t + ai); the 1-st\nastronomer sends requests a1 seconds later than the n-th. The first astronomer\nsends his first request at moment 0. Mister B doesn't know the first moment\nthe star is going to shine, but it's obvious that all moments at which the\nstar will shine are determined by the time of its shine moment in the interval\n[0, T). Moreover, this interval can be split into T parts of 1 second length\neach of form [t, t + 1), where t = 0, 1, 2, ..., (T - 1). Mister B wants to\nknow how lucky each astronomer can be in discovering the star first. For each\nastronomer compute how many segments of form [t, t + 1) (t = 0, 1, 2, ..., (T\n- 1)) there are in the interval [0, T) so that this astronomer is the first to\ndiscover the star if the first shine of the star happens in this time\ninterval. Input The first line contains two integers T and n (1 \u2264 T \u2264 10^9, 2\n\u2264 n \u2264 2\u00b710^5). The second line contains n integers a1, a2, ..., an (1 \u2264 ai \u2264\n10^9). Output Print n integers: for each astronomer print the number of time\nsegments describer earlier. Examples Input 4 2 2 3 Output 3 1 Input 5 4 1 1 1\n1 Output 2 1 1 1 Note In the first sample test the first astronomer will send\nrequests at moments t1 = 0, 5, 10, ..., the second \u2014 at moments t2 = 3, 8, 13,\n.... That's why interval [0, 1) the first astronomer will discover first at\nmoment t1 = 0, [1, 2) \u2014 the first astronomer at moment t1 = 5, [2, 3) \u2014 the\nfirst astronomer at moment t1 = 10, and [3, 4) \u2014 the second astronomer at\nmoment t2 = 3. In the second sample test interval [0, 1) \u2014 the first\nastronomer will discover first, [1, 2) \u2014 the second astronomer, [2, 3) \u2014 the\nthird astronomer, [3, 4) \u2014 the fourth astronomer, [4, 5) \u2014 the first\nastronomer.\n\n",
        "cf_contest_id": 819,
        "cf_index": "D",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2\r\n2 3\r\n",
                "3 1\r\n"
            ],
            [
                "5 4\r\n1 1 1 1\r\n",
                "2 1 1 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "24 8\r\n3 3 3 3 3 3 3 3\r\n",
                "1 1 1 1 1 1 1 1\r\n"
            ],
            [
                "1000000000 5\r\n1 2 3 4 1000000000\r\n",
                "100000000 100000000 100000000 100000000 0\r\n"
            ],
            [
                "15 25\r\n5 4 3 6 9 9 4 9 10 9 6 7 9 8 9 3 6 1 3 9 2 4 1 8 3\r\n",
                "1 1 1 1 0 1 2 1 1 1 0 0 1 0 1 0 1 0 0 0 0 0 2 0 0\r\n"
            ],
            [
                "18 13\r\n9 2 6 6 5 1 3 1 10 3 6 4 4\r\n",
                "1 1 1 1 1 0 1 2 3 0 2 2 3\r\n"
            ],
            [
                "13 9\r\n5 5 8 5 8 5 9 3 3\r\n",
                "6 1 0 0 0 0 1 3 2\r\n"
            ],
            [
                "16 22\r\n8 3 1 8 1 7 4 6 3 6 1 8 10 1 6 6 4 5 10 4 3 2\r\n",
                "1 1 2 1 1 0 1 2 1 2 0 0 2 2 0 0 0 0 0 0 0 0\r\n"
            ],
            [
                "15 10\r\n8 5 5 5 1 5 4 8 7 4\r\n",
                "2 4 3 0 2 2 0 1 0 1\r\n"
            ],
            [
                "18 14\r\n6 2 3 10 10 9 3 10 6 8 1 9 8 10\r\n",
                "1 1 2 1 2 2 2 1 4 0 2 0 0 0\r\n"
            ],
            [
                "13 3\r\n1 2 6\r\n",
                "6 5 2\r\n"
            ],
            [
                "16 15\r\n9 10 10 3 2 5 4 5 3 5 10 1 6 6 4\r\n",
                "2 2 1 1 2 2 4 0 0 1 0 0 0 1 0\r\n"
            ],
            [
                "15 11\r\n3 7 5 8 4 9 3 7 3 3 4\r\n",
                "2 1 1 1 1 3 2 1 1 1 1\r\n"
            ],
            [
                "9 18\r\n5 6 6 7 1 5 10 3 9 1 9 6 1 2 3 10 1 2\r\n",
                "1 1 1 1 1 2 2 0 0 0 0 0 0 0 0 0 0 0\r\n"
            ],
            [
                "10 2\r\n9 1\r\n",
                "1 1\r\n"
            ],
            [
                "10 4\r\n9 16 1 4\r\n",
                "1 1 1 1\r\n"
            ],
            [
                "10 6\r\n4 7 1 1 1 16\r\n",
                "1 1 1 1 0 1\r\n"
            ],
            [
                "10 8\r\n11 18 1 9 13 28 5 5\r\n",
                "1 1 1 0 1 0 1 0\r\n"
            ],
            [
                "10 10\r\n15 15 7 8 1 3 16 19 1 15\r\n",
                "1 1 1 0 1 1 0 1 0 0\r\n"
            ],
            [
                "10 12\r\n3 33 5 2 5 6 1 1 8 3 1 1\r\n",
                "2 1 2 0 1 1 1 0 0 1 0 1\r\n"
            ],
            [
                "10 14\r\n1 14 4 3 8 4 19 5 15 1 1 6 6 3\r\n",
                "1 1 1 1 1 1 1 1 0 0 0 0 1 0\r\n"
            ],
            [
                "10 16\r\n1 47 1 1 42 1 10 10 24 20 6 2 2 9 1 31\r\n",
                "1 1 1 1 1 1 0 0 1 0 0 1 0 2 0 0\r\n"
            ],
            [
                "10 18\r\n19 7 6 2 14 3 1 3 15 8 1 44 8 4 25 10 9 1\r\n",
                "1 1 1 1 1 1 0 1 1 0 0 1 0 0 0 0 0 0\r\n"
            ],
            [
                "10 20\r\n10 15 23 1 4 1 2 1 1 24 7 5 2 1 1 4 76 1 2 25\r\n",
                "1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 1 0\r\n"
            ],
            [
                "10 22\r\n3 2 2 1 1 1 1 10 1 1 3 2 1 2 4 4 6 6 1 1 6 1\r\n",
                "1 1 1 1 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0\r\n"
            ],
            [
                "10 24\r\n10 4 1 3 4 12 1 1 1 2 1 1 1 1 3 8 1 1 5 2 6 3 7 1\r\n",
                "1 1 1 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0\r\n"
            ],
            [
                "10 26\r\n2 1 1 5 1 6 1 1 4 2 19 1 1 31 15 8 1 11 2 11 3 1 3 1 7 1\r\n",
                "1 1 1 1 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0\r\n"
            ],
            [
                "10 28\r\n42 1 11 4 2 2 31 8 1 8 2 4 57 1 12 67 1 3 4 8 1 1 6 7 3 30 2 5\r\n",
                "1 1 1 1 1 0 0 2 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0\r\n"
            ],
            [
                "10 30\r\n6 1 4 5 1 13 13 6 5 1 48 3 3 1 8 23 1 6 4 17 9 24 33 2 43 11 31 5 2 1\r\n",
                "1 1 1 0 0 1 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n"
            ],
            [
                "10 2\r\n8 2\r\n",
                "1 1\r\n"
            ],
            [
                "10 4\r\n1 1 5 25\r\n",
                "3 5 2 0\r\n"
            ],
            [
                "10 6\r\n1 1 20 3 11 2\r\n",
                "3 2 0 2 2 1\r\n"
            ],
            [
                "10 8\r\n24 21 20 1 14 6 12 2\r\n",
                "1 1 0 1 1 0 1 0\r\n"
            ],
            [
                "10 10\r\n1 1 6 1 1 1 15 1 5 2\r\n",
                "2 1 1 2 1 0 1 1 0 1\r\n"
            ],
            [
                "10 12\r\n23 58 25 9 5 4 3 1 25 11 1 1\r\n",
                "2 1 2 1 1 1 1 1 0 0 0 0\r\n"
            ]
        ]
    }
]