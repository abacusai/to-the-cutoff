[
    {
        "name": "Ski Base",
        "description": "A ski base is planned to be built in Walrusland. Recently, however, the\nproject is still in the constructing phase. A large land lot was chosen for\nthe construction. It contains n ski junctions, numbered from 1 to n. Initially\nthe junctions aren't connected in any way. In the constructing process m\nbidirectional ski roads will be built. The roads are built one after another:\nfirst the road number 1 will be built, then the road number 2, and so on. The\ni-th road connects the junctions with numbers ai and bi. Track is the route\nwith the following properties: The route is closed, that is, it begins and\nends in one and the same junction. The route contains at least one road. The\nroute doesn't go on one road more than once, however it can visit any junction\nany number of times. Let's consider the ski base as a non-empty set of roads\nthat can be divided into one or more tracks so that exactly one track went\nalong each road of the chosen set. Besides, each track can consist only of\nroads from the chosen set. Ski base doesn't have to be connected. Two ski\nbases are considered different if they consist of different road sets. After\nbuilding each new road the Walrusland government wants to know the number of\nvariants of choosing a ski base based on some subset of the already built\nroads. The government asks you to help them solve the given problem. Input The\nfirst line contains two integers n and m (2 \u2264 n \u2264 10^5, 1 \u2264 m \u2264 10^5). They\nrepresent the number of junctions and the number of roads correspondingly.\nThen on m lines follows the description of the roads in the order in which\nthey were built. Each road is described by a pair of integers ai and bi (1 \u2264\nai, bi \u2264 n, ai \u2260 bi) \u2014 the numbers of the connected junctions. There could be\nmore than one road between a pair of junctions. Output Print m lines: the i-th\nline should represent the number of ways to build a ski base after the end of\nconstruction of the road number i. The numbers should be printed modulo\n1000000009 (10^9 + 9). Examples Input 3 4 1 3 2 3 1 2 1 2 Output 0 0 1 3 Note\nLet us have 3 junctions and 4 roads between the junctions have already been\nbuilt (as after building all the roads in the sample): 1 and 3, 2 and 3, 2\nroads between junctions 1 and 2. The land lot for the construction will look\nlike this: The land lot for the construction will look in the following way:\nWe can choose a subset of roads in three ways: In the first and the second\nways you can choose one path, for example, 1 - 2 - 3 - 1. In the first case\nyou can choose one path 1 - 2 - 1.\n\n",
        "cf_contest_id": 91,
        "cf_index": "C",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dsu",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 4\r\n1 3\r\n2 3\r\n1 2\r\n1 2\r\n",
                "0\r\n0\r\n1\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "15 29\r\n6 11\r\n14 3\r\n10 4\r\n14 7\r\n6 14\r\n7 15\r\n13 8\r\n10 13\r\n4 14\r\n15 8\r\n12 7\r\n3 5\r\n6 7\r\n8 1\r\n4 5\r\n11 5\r\n10 6\r\n11 3\r\n13 14\r\n7 10\r\n3 12\r\n7 14\r\n8 11\r\n7 15\r\n15 8\r\n12 7\r\n4 3\r\n9 4\r\n8 10\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n1\r\n1\r\n3\r\n3\r\n7\r\n15\r\n31\r\n63\r\n127\r\n255\r\n511\r\n1023\r\n2047\r\n4095\r\n8191\r\n16383\r\n32767\r\n32767\r\n65535\r\n"
            ],
            [
                "34 27\r\n19 10\r\n8 31\r\n26 22\r\n2 30\r\n32 26\r\n30 4\r\n34 1\r\n2 31\r\n4 18\r\n33 11\r\n10 13\r\n20 23\r\n4 32\r\n23 27\r\n30 7\r\n10 17\r\n29 9\r\n18 10\r\n2 28\r\n3 12\r\n31 8\r\n3 25\r\n5 22\r\n3 16\r\n21 1\r\n10 30\r\n5 3\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n1\r\n1\r\n1\r\n1\r\n3\r\n3\r\n"
            ],
            [
                "29 27\r\n22 8\r\n6 2\r\n3 5\r\n23 29\r\n27 23\r\n18 23\r\n28 23\r\n23 12\r\n24 15\r\n13 6\r\n1 13\r\n9 7\r\n17 6\r\n4 16\r\n20 28\r\n23 3\r\n3 19\r\n16 23\r\n10 21\r\n15 2\r\n21 28\r\n3 9\r\n8 18\r\n10 28\r\n19 18\r\n17 18\r\n13 7\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n3\r\n3\r\n7\r\n"
            ],
            [
                "27 28\r\n20 14\r\n21 5\r\n11 17\r\n14 9\r\n17 13\r\n7 19\r\n24 27\r\n16 9\r\n5 1\r\n2 12\r\n9 2\r\n15 7\r\n13 6\r\n15 17\r\n25 17\r\n2 3\r\n1 15\r\n12 25\r\n10 6\r\n1 8\r\n1 6\r\n5 24\r\n3 15\r\n12 7\r\n2 12\r\n16 15\r\n8 22\r\n8 18\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n1\r\n3\r\n7\r\n15\r\n31\r\n31\r\n31\r\n"
            ],
            [
                "20 29\r\n8 13\r\n19 18\r\n5 20\r\n5 10\r\n14 11\r\n20 8\r\n12 11\r\n13 20\r\n18 10\r\n3 9\r\n7 18\r\n19 13\r\n2 6\r\n20 19\r\n9 3\r\n6 10\r\n14 18\r\n16 12\r\n17 20\r\n1 15\r\n14 12\r\n13 5\r\n11 4\r\n2 16\r\n3 1\r\n11 4\r\n17 5\r\n5 8\r\n18 12\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n1\r\n1\r\n1\r\n3\r\n3\r\n7\r\n15\r\n15\r\n15\r\n15\r\n15\r\n15\r\n31\r\n63\r\n63\r\n127\r\n127\r\n255\r\n511\r\n1023\r\n2047\r\n"
            ],
            [
                "28 25\r\n17 28\r\n21 3\r\n4 7\r\n17 18\r\n13 12\r\n26 20\r\n1 17\r\n10 18\r\n10 16\r\n1 4\r\n15 3\r\n27 26\r\n11 14\r\n7 9\r\n1 13\r\n14 27\r\n14 23\r\n21 27\r\n8 7\r\n16 2\r\n5 25\r\n26 18\r\n21 2\r\n4 3\r\n4 10\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n3\r\n7\r\n"
            ],
            [
                "27 29\r\n12 11\r\n21 20\r\n19 26\r\n16 24\r\n22 4\r\n1 3\r\n23 5\r\n9 1\r\n4 3\r\n21 23\r\n22 8\r\n14 6\r\n25 13\r\n7 20\r\n9 16\r\n3 20\r\n23 19\r\n17 10\r\n13 18\r\n8 14\r\n23 25\r\n25 27\r\n19 15\r\n19 15\r\n17 24\r\n12 27\r\n18 11\r\n25 5\r\n22 17\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n1\r\n1\r\n3\r\n7\r\n15\r\n"
            ],
            [
                "2 40\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n",
                "0\r\n1\r\n3\r\n7\r\n15\r\n31\r\n63\r\n127\r\n255\r\n511\r\n1023\r\n2047\r\n4095\r\n8191\r\n16383\r\n32767\r\n65535\r\n131071\r\n262143\r\n524287\r\n1048575\r\n2097151\r\n4194303\r\n8388607\r\n16777215\r\n33554431\r\n67108863\r\n134217727\r\n268435455\r\n536870911\r\n73741814\r\n147483629\r\n294967259\r\n589934519\r\n179869030\r\n359738061\r\n719476123\r\n438952238\r\n877904477\r\n755808946\r\n"
            ]
        ]
    }
]