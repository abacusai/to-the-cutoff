[
    {
        "name": "Restoration of string",
        "description": "A substring of some string is called the most frequent, if the number of its\noccurrences is not less than number of occurrences of any other substring. You\nare given a set of strings. A string (not necessarily from this set) is called\ngood if all elements of the set are the most frequent substrings of this\nstring. Restore the non-empty good string with minimum length. If several such\nstrings exist, restore lexicographically minimum string. If there are no good\nstrings, print \"NO\" (without quotes). A substring of a string is a contiguous\nsubsequence of letters in the string. For example, \"ab\", \"c\", \"abc\" are\nsubstrings of string \"abc\", while \"ac\" is not a substring of that string. The\nnumber of occurrences of a substring in a string is the number of starting\npositions in the string where the substring occurs. These occurrences could\noverlap. String a is lexicographically smaller than string b, if a is a prefix\nof b, or a has a smaller letter at the first position where a and b differ.\nInput The first line contains integer n (1 \u2264 n \u2264 10^5) \u2014 the number of strings\nin the set. Each of the next n lines contains a non-empty string consisting of\nlowercase English letters. It is guaranteed that the strings are distinct. The\ntotal length of the strings doesn't exceed 10^5. Output Print the non-empty\ngood string with minimum length. If several good strings exist, print\nlexicographically minimum among them. Print \"NO\" (without quotes) if there are\nno good strings. Examples Input 4 mail ai lru cf Output cfmailru Input 3 kek\npreceq cheburek Output NO Note One can show that in the first sample only two\ngood strings with minimum length exist: \"cfmailru\" and \"mailrucf\". The first\nstring is lexicographically minimum.\n\n",
        "cf_contest_id": 886,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graphs",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\nmail\r\nai\r\nlru\r\ncf\r\n",
                "cfmailru\r\n"
            ],
            [
                "3\r\nkek\r\npreceq\r\ncheburek\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nz\r\n",
                "z\r\n"
            ],
            [
                "2\r\nab\r\nba\r\n",
                "NO\r\n"
            ],
            [
                "2\r\nac\r\nbc\r\n",
                "NO\r\n"
            ],
            [
                "2\r\ncd\r\nce\r\n",
                "NO\r\n"
            ],
            [
                "2\r\nca\r\ncb\r\n",
                "NO\r\n"
            ],
            [
                "2\r\ndc\r\nec\r\n",
                "NO\r\n"
            ],
            [
                "26\r\nhw\r\nwb\r\nba\r\nax\r\nxl\r\nle\r\neo\r\nod\r\ndj\r\njt\r\ntm\r\nmq\r\nqf\r\nfk\r\nkn\r\nny\r\nyz\r\nzr\r\nrg\r\ngv\r\nvc\r\ncs\r\nsi\r\niu\r\nup\r\nph\r\n",
                "NO\r\n"
            ],
            [
                "25\r\nsw\r\nwt\r\nc\r\nl\r\nyo\r\nag\r\nz\r\nof\r\np\r\nmz\r\nnm\r\nui\r\nzs\r\nj\r\nq\r\nk\r\ngd\r\nb\r\nen\r\nx\r\ndv\r\nty\r\nh\r\nr\r\nvu\r\n",
                "agdvuibcenmzswtyofhjklpqrx\r\n"
            ],
            [
                "2\r\naz\r\nzb\r\n",
                "azb\r\n"
            ],
            [
                "26\r\nl\r\nq\r\nb\r\nk\r\nh\r\nf\r\nx\r\ny\r\nj\r\na\r\ni\r\nu\r\ns\r\nd\r\nc\r\ng\r\nv\r\nw\r\np\r\no\r\nm\r\nt\r\nr\r\nz\r\nn\r\ne\r\n",
                "abcdefghijklmnopqrstuvwxyz\r\n"
            ],
            [
                "76\r\namnctposz\r\nmnctpos\r\nos\r\nu\r\ne\r\nam\r\namnc\r\neamnctpo\r\nl\r\nx\r\nq\r\nposzq\r\neamnc\r\nctposzq\r\nctpos\r\nmnc\r\ntpos\r\namnctposzql\r\ntposzq\r\nmnctposz\r\nnctpos\r\nctposzql\r\namnctpos\r\nmnct\r\np\r\nux\r\nposzql\r\ntpo\r\nmnctposzql\r\nmnctp\r\neamnctpos\r\namnct\r\ntposzql\r\nposz\r\nz\r\nct\r\namnctpo\r\noszq\r\neamnct\r\ntposz\r\ns\r\nmn\r\nn\r\nc\r\noszql\r\npo\r\no\r\nmnctposzq\r\nt\r\namnctposzq\r\nnctposzql\r\nnct\r\namn\r\neam\r\nctp\r\nosz\r\npos\r\nmnctpo\r\nzq\r\neamnctposzql\r\namnctp\r\nszql\r\neamn\r\ntp\r\nzql\r\na\r\nea\r\nql\r\nsz\r\neamnctposz\r\nnctpo\r\nctposz\r\nm\r\nnctposz\r\nnctp\r\nnc\r\n",
                "eamnctposzqlux\r\n"
            ],
            [
                "75\r\nqsicaj\r\nd\r\nnkmd\r\ndb\r\ntqsicaj\r\nm\r\naje\r\nftqsicaj\r\ncaj\r\nftqsic\r\ntqsicajeh\r\nic\r\npv\r\ny\r\nho\r\nicajeho\r\nc\r\ns\r\nb\r\nftqsi\r\nmdb\r\ntqsic\r\ntqs\r\nsi\r\nnkmdb\r\njeh\r\najeho\r\nqs\r\ntqsicajeho\r\nje\r\nwp\r\njeho\r\neh\r\nwpv\r\nh\r\no\r\nyw\r\nj\r\nv\r\ntqsicaje\r\nftqsicajeho\r\nsica\r\ncajeho\r\nqsic\r\nqsica\r\na\r\nftqsicajeh\r\nn\r\ntqsi\r\nicajeh\r\nsic\r\ne\r\nqsicaje\r\ncajeh\r\nca\r\nft\r\nsicajeho\r\najeh\r\ncaje\r\nqsicajeho\r\nsicaje\r\nftqsicaje\r\nsicajeh\r\nftqsica\r\nica\r\nkm\r\nqsicajeh\r\naj\r\ni\r\ntq\r\nmd\r\nkmdb\r\nkmd\r\ntqsica\r\nnk\r\n",
                "ftqsicajehonkmdbywpv\r\n"
            ],
            [
                "16\r\nngv\r\nng\r\njngvu\r\ng\r\ngv\r\nvu\r\ni\r\nn\r\njngv\r\nu\r\nngvu\r\njng\r\njn\r\nl\r\nj\r\ngvu\r\n",
                "ijngvul\r\n"
            ],
            [
                "33\r\naqzwlyfjcuktsr\r\ngidpnvaqzwlyfj\r\nvaqzwlyf\r\npnvaqzwlyfjcuktsrbx\r\njcuktsrbxme\r\nuktsrb\r\nhgidpnvaqzw\r\nvaqzwlyfjcu\r\nhgid\r\nvaqzwlyfjcukts\r\npnvaqzwl\r\npnvaqzwlyfj\r\ngidpnvaqzwlyfjcukt\r\naqzwlyfjcuktsrbxme\r\ngidpnvaqzwlyfjcuktsrb\r\naqzw\r\nlyfjcuktsrbxme\r\nrbxm\r\nwlyfjcukt\r\npnvaqzwlyfjcuktsr\r\nnvaqzwly\r\nd\r\nzwlyf\r\nhgidpnva\r\ngidpnvaqzwlyfjcuktsrbxm\r\ngidpn\r\nfjcuktsrbxmeo\r\nfjcuktsrbx\r\ngidpnva\r\nzwlyfjc\r\nrb\r\ntsrbxm\r\ndpnvaqzwlyfjcuktsrbxm\r\n",
                "hgidpnvaqzwlyfjcuktsrbxmeo\r\n"
            ],
            [
                "15\r\nipxh\r\nipx\r\nr\r\nxh\r\ncjr\r\njr\r\np\r\nip\r\ncj\r\ni\r\nx\r\nhi\r\nc\r\nh\r\npx\r\n",
                "NO\r\n"
            ],
            [
                "51\r\np\r\nsu\r\nbpxh\r\nx\r\nxhvacdy\r\nqosuf\r\ncdy\r\nbpxhvacd\r\nxh\r\nbpxhv\r\nf\r\npxh\r\nhva\r\nhvac\r\nxhva\r\nos\r\ns\r\ndy\r\nqo\r\nv\r\nq\r\na\r\nbpxhvacdy\r\nxhv\r\nqosu\r\nyb\r\nacdy\r\nu\r\npxhvacd\r\nc\r\nvacdy\r\no\r\nuf\r\nxhvacd\r\nvac\r\nbpx\r\nacd\r\nbp\r\nhvacdy\r\nsuf\r\nbpxhvac\r\ncd\r\nh\r\npxhva\r\nhv\r\npxhv\r\nosu\r\nd\r\ny\r\nxhvac\r\npxhvacdy\r\n",
                "NO\r\n"
            ],
            [
                "20\r\nckdza\r\nw\r\ntvylck\r\nbqtv\r\ntvylckd\r\nos\r\nbqtvy\r\nrpx\r\nzaj\r\nrpxebqtvylckdzajfmi\r\nbqtvylckdzajf\r\nvylc\r\ntvyl\r\npxebq\r\nf\r\npxebqtv\r\nlckdza\r\nwnh\r\ns\r\npxe\r\n",
                "osrpxebqtvylckdzajfmiwnh\r\n"
            ],
            [
                "25\r\nza\r\nb\r\nc\r\nd\r\ne\r\nf\r\ng\r\nh\r\ni\r\nj\r\nk\r\nl\r\nm\r\nn\r\no\r\np\r\nr\r\ns\r\nt\r\nu\r\nv\r\nw\r\nx\r\ny\r\nz\r\n",
                "bcdefghijklmnoprstuvwxyza\r\n"
            ],
            [
                "25\r\nzdcba\r\nb\r\nc\r\nd\r\ne\r\nf\r\ng\r\nh\r\ni\r\nj\r\nk\r\nl\r\nm\r\nn\r\no\r\np\r\nr\r\ns\r\nt\r\nu\r\nv\r\nw\r\nx\r\ny\r\nz\r\n",
                "efghijklmnoprstuvwxyzdcba\r\n"
            ],
            [
                "13\r\nza\r\nyb\r\nxc\r\nwd\r\nve\r\nuf\r\ntg\r\nsh\r\nri\r\nqj\r\npk\r\nol\r\nnm\r\n",
                "nmolpkqjrishtgufvewdxcybza\r\n"
            ],
            [
                "13\r\naz\r\nby\r\ncx\r\ndw\r\nev\r\nfu\r\ngt\r\nhs\r\nir\r\njq\r\nkp\r\nlo\r\nmn\r\n",
                "azbycxdwevfugthsirjqkplomn\r\n"
            ],
            [
                "4\r\nab\r\nbc\r\nca\r\nd\r\n",
                "NO\r\n"
            ],
            [
                "3\r\nb\r\nd\r\nc\r\n",
                "bcd\r\n"
            ],
            [
                "3\r\nab\r\nba\r\nc\r\n",
                "NO\r\n"
            ],
            [
                "2\r\nba\r\nca\r\n",
                "NO\r\n"
            ],
            [
                "4\r\naz\r\nzy\r\ncx\r\nxd\r\n",
                "azycxd\r\n"
            ],
            [
                "2\r\nab\r\nbb\r\n",
                "NO\r\n"
            ],
            [
                "2\r\nab\r\nac\r\n",
                "NO\r\n"
            ],
            [
                "3\r\nab\r\nba\r\ncd\r\n",
                "NO\r\n"
            ],
            [
                "2\r\nabc\r\ncb\r\n",
                "NO\r\n"
            ],
            [
                "1\r\nlol\r\n",
                "NO\r\n"
            ],
            [
                "2\r\naa\r\nb\r\n",
                "NO\r\n"
            ],
            [
                "6\r\na\r\nb\r\nc\r\nde\r\nef\r\nfd\r\n",
                "NO\r\n"
            ],
            [
                "3\r\nabc\r\ncb\r\ndd\r\n",
                "NO\r\n"
            ],
            [
                "3\r\nabcd\r\nefg\r\ncdefg\r\n",
                "abcdefg\r\n"
            ]
        ]
    }
]