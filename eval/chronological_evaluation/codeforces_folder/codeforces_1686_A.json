[
    {
        "name": "Everything Everywhere All But One",
        "description": "You are given an array of \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n.\nAfter you watched the amazing film \"Everything Everywhere All At Once\", you\ncame up with the following operation. In one operation, you choose \n    n-1\n\nelements of the array and replace each of them with their arithmetic mean\n(which doesn't have to be an integer). For example, from the array \n    [1, 2,\n    3, 1]\n we can get the array \n    [2, 2, 2, 1]\n, if we choose the first three\nelements, or we can get the array \n    [\n    4/3, \n    4/3, 3,\n    \n    4/3]\n, if we choose all elements except the third. Is it possible\nto make all elements of the array equal by performing a finite number of such\noperations? Input The first line of the input contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 200\n) \u2014 the number of test cases. The\ndescription of the test cases follows. The first line of each test case\ncontains a single integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264 50\n) \u2014 the number of\nintegers. The second line of each test case contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 100\n). Output For each test\ncase, if it is possible to make all elements equal after some number of\noperations, output \n    \n. Otherwise, output\n\n    \n. You can output \n    \n and\n\n    \n in any case (for example, strings \n    \n,\n\n    \n, \n    \n will be recognized as a positive\nresponse). Example Input 4 3 42 42 42 5 1 2 3 4 5 4 4 3 2 1 3 24 2 22 Output\nYES YES NO NO Note In the first test case, all elements are already equal. In\nthe second test case, you can choose all elements except the third, their\naverage is \n    1 + 2 + 4 + 5/4 = 3\n, so the array will become\n\n    [3, 3, 3, 3, 3]\n. It's possible to show that it's impossible to make all\nelements equal in the third and fourth test cases.\n\n",
        "cf_contest_id": 1686,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3\r\n42 42 42\r\n5\r\n1 2 3 4 5\r\n4\r\n4 3 2 1\r\n3\r\n24 2 22\r\n",
                "YES\r\nYES\r\nNO \r\nNO \r\n"
            ]
        ],
        "private_cases": []
    }
]