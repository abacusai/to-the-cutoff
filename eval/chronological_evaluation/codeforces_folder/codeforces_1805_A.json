[
    {
        "name": "We Need the Zero",
        "description": "There is an array \n    a\n consisting of non-negative integers. You can choose\nan integer \n    x\n and denote \n    b_i=a_i \n    \u2295 x\n for all \n    1 \n    \u2264 i\n    \n    \u2264 n\n, where \n    \u2295\n denotes the bitwise XOR operation. Is it\npossible to choose such a number \n    x\n that the value of the expression\n\n    b_1 \n    \u2295 b_2 \n    \u2295\n    \u2026\n    \u2295 b_n\n equals \n    0\n? It can\nbe shown that if a valid number \n    x\n exists, then there also exists \n    x\n\nsuch that (\n    0 \n    \u2264 x < 2^8\n). Input Each test contains multiple test\ncases. The first line contains the number of test cases \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 1000\n). The description of the test cases follows. The first line of\nthe test case contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^3\n) \u2014 the\nlength of the array \n    a\n. The second line of the test case contains \n    n\n\nintegers \u2014 array \n    a\n (\n    0 \n    \u2264 a_i < 2^8\n). It is guaranteed that the\nsum of \n    n\n over all test cases does not exceed \n    10^3\n. Output For each\nset test case, print the integer \n    x\n (\n    0 \n    \u2264 x < 2^8\n) if it exists,\nor \n    -1\n otherwise. Example Input 5 3 1 2 5 3 1 2 3 4 0 1 2 3 4 1 2 2 3 1 1\nOutput 6 0 3 -1 1 Note In the first test case, after applying the operation\nwith the number \n    6\n the array \n    b\n becomes \n    [7, 4, 3]\n, \n    7\n    \n    \u2295 4 \n    \u2295 3 = 0\n. There are other answers in the third test case,\nsuch as the number \n    0\n.\n\n",
        "cf_contest_id": 1805,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3\r\n1 2 5\r\n3\r\n1 2 3\r\n4\r\n0 1 2 3\r\n4\r\n1 2 2 3\r\n1\r\n1\r\n",
                "6\r\n0\r\n0\r\n-1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n255\r\n",
                "255\r\n"
            ],
            [
                "1\r\n1\r\n128\r\n",
                "128\r\n"
            ],
            [
                "1\r\n3\r\n128 0 0\r\n",
                "128\r\n"
            ]
        ]
    }
]