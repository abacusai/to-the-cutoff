[
    {
        "name": "Escape The Maze (easy version)",
        "description": "The only difference with E2 is the question of the problem.. Vlad built a maze\nout of \n    n\n rooms and \n    n-1\n bidirectional corridors. From any room\n\n    u\n any other room \n    v\n can be reached through a sequence of corridors.\nThus, the room system forms an undirected tree. Vlad invited \n    k\n friends\nto play a game with them. Vlad starts the game in the room \n    1\n and wins if\nhe reaches a room other than \n    1\n, into which exactly one corridor leads.\nFriends are placed in the maze: the friend with number \n    i\n is in the room\n\n    x_i\n, and no two friends are in the same room (that is, \n    x_i \n    \u2260\n    x_j\n for all \n    i \n    \u2260 j\n). Friends win if one of them meets Vlad in any\nroom or corridor before he wins. For one unit of time, each participant of the\ngame can go through one corridor. All participants move at the same time.\nParticipants may not move. Each room can fit all participants at the same\ntime. Friends know the plan of a maze and intend to win. Vlad is a bit afraid\nof their ardor. Determine if he can guarantee victory (i.e. can he win in any\nway friends play). In other words, determine if there is such a sequence of\nVlad's moves that lets Vlad win in any way friends play. Input The first line\nof the input contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the\nnumber of test cases in the input. The input contains an empty string before\neach test case. The first line of the test case contains two numbers \n    n\n\nand \n    k\n (\n    1 \n    \u2264 k < n \n    \u2264 2\n    \u00b7 10^5\n) \u2014 the number of rooms\nand friends, respectively. The next line of the test case contains \n    k\n\nintegers \n    x_1, x_2, \n    \u2026, x_k\n (\n    2 \n    \u2264 x_i \n    \u2264 n\n) \u2014 numbers of\nrooms with friends. All \n    x_i\n are different. The next \n    n-1\n lines\ncontain descriptions of the corridors, two numbers per line \n    v_j\n and\n\n    u_j\n (\n    1 \n    \u2264 u_j, v_j \n    \u2264 n\n) \u2014 numbers of rooms that connect the\n\n    j\n corridor. All corridors are bidirectional. From any room, you can go\nto any other by moving along the corridors. It is guaranteed that the sum of\nthe values \n    n\n over all test cases in the test is not greater than\n\n    2\n    \u00b710^5\n. Output Print \n    t\n lines, each line containing the\nanswer to the corresponding test case. The answer to a test case should be\n\"YES\" if Vlad can guarantee himself a victory and \"NO\" otherwise. You may\nprint every letter in any case you want (so, for example, the strings \"yEs\",\n\"yes\", \"Yes\" and \"YES\" will all be recognized as positive answers). Example\nInput 4 8 2 5 3 4 7 2 5 1 6 3 6 7 2 1 7 6 8 3 1 2 1 2 2 3 3 1 2 1 2 1 3 3 2 2\n3 3 1 1 2 Output YES NO YES NO Note In the first test case, regardless of the\nstrategy of his friends, Vlad can win by going to room \n    4\n. The game may\nlook like this: The original locations of Vlad and friends. Vlad is marked in\ngreen, friends \u2014 in red. Locations after one unit of time. End of the game.\nNote that if Vlad tries to reach the exit at the room \n    8\n, then a friend\nfrom the \n    3\n room will be able to catch him.\n\n",
        "cf_contest_id": 1611,
        "cf_index": "E1",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "greedy",
            "shortest paths",
            "trees",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n\r\n8 2\r\n5 3\r\n4 7\r\n2 5\r\n1 6\r\n3 6\r\n7 2\r\n1 7\r\n6 8\r\n\r\n3 1\r\n2\r\n1 2\r\n2 3\r\n\r\n3 1\r\n2\r\n1 2\r\n1 3\r\n\r\n3 2\r\n2 3\r\n3 1\r\n1 2\r\n",
                "YES\r\nNO\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n\r\n10 2\r\n6 9\r\n1 2\r\n2 3\r\n3 4\r\n3 5\r\n3 6\r\n1 7\r\n7 8\r\n8 9\r\n7 10\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n\r\n14 7\r\n2 3 4 5 6 7 8\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n11 12\r\n12 13\r\n13 14\r\n",
                "NO\r\n"
            ]
        ]
    }
]