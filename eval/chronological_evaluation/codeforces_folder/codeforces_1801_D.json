[
    {
        "name": "The way home",
        "description": "The famous magician Borya Budini traveled through the country \n    X\n, which\nconsists of \n    n\n cities. However, an accident happened, and he was robbed\nin the city number \n    1\n. Now Budini will have a hard way home to the city\nnumber \n    n\n.He's going to get there by plane. In total, there are \n    m\n\nflights in the country, \n    i\n-th flies from city \n    a_i\n to city \n    b_i\n\nand costs \n    s_i\n coins. Note that the \n    i\n-th flight is one-way, so it\ncan't be used to get from city \n    b_i\n to city \n    a_i\n. To use it, Borya\nmust be in the city \n    a_i\n and have at least \n    s_i\n coins (which he will\nspend on the flight). After the robbery, he has only \n    p\n coins left, but\nhe does not despair! Being in the city \n    i\n, he can organize performances\nevery day, each performance will bring him \n    w_i\n coins. Help the magician\nfind out if he will be able to get home, and what is the minimum number of\nperformances he will have to organize. Input Each test consists of multiple\ntest cases. The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 80\n) \u2013 the number of test cases. The description of test cases\nfollows. The first line contains three integers \n    n\n, \n    m\n and \n    p\n\n(\n    2 \n    \u2264 n \n    \u2264 800\n, \n    1 \n    \u2264 m \n    \u2264 3000\n, \n    0 \n    \u2264 p \n    \u2264\n    10^9\n) \u2014 the number of cities, the number of flights and the initial amount\nof coins. The second line contains \n    n\n integers \n    w_1, w_2, \n    \u2026,\n    w_n\n \n    (1 \n    \u2264 w_i \n    \u2264 10^9)\n \u2014 profit from representations. The\nfollowing \n    m\n lines each contain three integers \n    a_i\n, \n    b_i\n and\n\n    s_i\n (\n    1 \n    \u2264 a_i, b_i \n    \u2264 n\n, \n    1 \n    \u2264 s_i \n    \u2264 10^9\n) \u2014 the\nstarting and ending city, and the cost of \n    i\n-th flight. It is guaranteed\nthat the sum of \n    n\n over all test cases does not exceed \n    800\n and the\nsum of \n    m\n over all test cases does not exceed \n    10000\n. Output For\neach test case print a single integer \u2014 the minimum number of performances\nBorya will have to organize to get home, or \n    -1\n if it is impossible to do\nthis. Example Input 4 4 4 2 7 4 3 1 1 2 21 3 2 6 1 3 8 2 4 11 4 4 10 1 2 10 1\n1 2 20 2 4 30 1 3 25 3 4 89 4 4 7 5 1 6 2 1 2 5 2 3 10 3 4 50 3 4 70 4 1 2 1 1\n1 1 1 3 2 Output 4 24 10 -1 Note In the first example, it is optimal for Borya\nto make \n    4\n performances in the first city, having as a result \n    2 + 7\n    \n    \u00b7 4 = 30\n coins, and then walk along the route \n    1-3-2-4\n, spending\n\n    6+8+11=25\n coins. In the second example, it is optimal for Borya to make\n\n    15\n performances in the first city, fly to \n    3\n city, make \n    9\n\nperformances there, and then go to \n    4\n city.\n\n",
        "cf_contest_id": 1801,
        "cf_index": "D",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "dp",
            "graphs",
            "greedy",
            "shortest paths",
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n4 4 2\r\n7 4 3 1\r\n1 2 21\r\n3 2 6\r\n1 3 8\r\n2 4 11\r\n4 4 10\r\n1 2 10 1\r\n1 2 20\r\n2 4 30\r\n1 3 25\r\n3 4 89\r\n4 4 7\r\n5 1 6 2\r\n1 2 5\r\n2 3 10\r\n3 4 50\r\n3 4 70\r\n4 1 2\r\n1 1 1 1\r\n1 3 2\r\n",
                "4\r\n24\r\n10\r\n-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n10 13 0\r\n1 5 5 2 5 3 1 3 4 4\r\n2 10 329988143\r\n6 7 166405645\r\n9 2 82431207\r\n8 6 334644736\r\n3 2 236628538\r\n6 3 527666896\r\n8 5 884027363\r\n1 8 881753898\r\n5 6 897250222\r\n7 3 951455364\r\n1 4 608358209\r\n3 9 726552958\r\n4 8 384352190\r\n",
                "1201294851\r\n"
            ],
            [
                "1\r\n10 18 0\r\n1 2 1 1 1 2 2 2 2 1\r\n8 10 895696322\r\n1 3 299670230\r\n8 6 924398764\r\n1 2 265840316\r\n5 3 61264766\r\n1 4 221318064\r\n7 9 1273946\r\n9 7 19426237\r\n2 1 264605790\r\n9 3 176613126\r\n1 6 968665480\r\n3 9 198337608\r\n3 5 107453091\r\n3 1 297332452\r\n4 1 202079090\r\n6 1 940006774\r\n6 8 932060282\r\n10 8 891983929\r\n",
                "1796354253\r\n"
            ],
            [
                "1\r\n7 6 0\r\n1 1 1 1 1 1000000000 1\r\n1 2 1000000000\r\n2 3 1000000000\r\n3 4 1000000000\r\n4 5 1000000000\r\n1 6 1\r\n5 7 1000000000\r\n",
                "5000000000\r\n"
            ],
            [
                "1\r\n5 5 0\r\n1 99 1 5 1\r\n1 2 1\r\n1 3 1\r\n2 4 500\r\n3 4 1\r\n4 5 5\r\n",
                "3\r\n"
            ]
        ]
    }
]