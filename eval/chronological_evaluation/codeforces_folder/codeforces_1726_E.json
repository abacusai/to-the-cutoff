[
    {
        "name": "Almost Perfect",
        "description": "A permutation \n    p\n of length \n    n\n is called almost perfect if for all\ninteger \n    1 \n    \u2264 i \n    \u2264 n\n, it holds that \n    | p_i - p^-1_i\n    \n    |\n    \u2264 1\n, where \n    p^-1\n is the inverse permutation of \n    p\n\n(i.e. \n    p^-1_k_1 = k_2\n if and only if \n    p_k_2 = k_1\n). Count the\nnumber of almost perfect permutations of length \n    n\n modulo\n\n    998244353\n. Input The first line contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The description of each\ntest case follows. The first and only line of each test case contains a single\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the length of the\npermutation. It is guaranteed that the sum of \n    n\n over all test cases does\nnot exceed \n    3 \n    \u00b7 10^5\n. Output For each test case, output a single\ninteger \u2014 the number of almost perfect permutations of length \n    n\n modulo\n\n    998244353\n. Example Input 3 2 3 50 Output 2 4 830690567 Note For \n    n =\n    2\n, both permutations \n    [1, 2]\n, and \n    [2, 1]\n are almost perfect. For\n\n    n = 3\n, there are only \n    6\n permutations. Having a look at all of them\ngives us: \n    [1, 2, 3]\n is an almost perfect permutation. \n    [1, 3, 2]\n is\nan almost perfect permutation. \n    [2, 1, 3]\n is an almost perfect\npermutation. \n    [2, 3, 1]\n is NOT an almost perfect permutation (\n    |\n    p_2 - p^-1_2 \n    | = \n    | 3 - 1 \n    | = 2\n). \n    [3, 1, 2]\n is\nNOT an almost perfect permutation (\n    | p_2 - p^-1_2 \n    | =\n    \n    | 1 - 3 \n    | = 2\n). \n    [3, 2, 1]\n is an almost perfect\npermutation. So we get \n    4\n almost perfect permutations.\n\n",
        "cf_contest_id": 1726,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "fft",
            "math"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2\r\n3\r\n50\r\n",
                "2\r\n4\r\n830690567\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n29680\r\n29973\r\n29287\r\n29309\r\n29955\r\n29585\r\n29906\r\n29778\r\n29014\r\n29264\r\n",
                "369184571\r\n367246175\r\n489281672\r\n746847618\r\n997881348\r\n951191140\r\n482872415\r\n536588278\r\n334928999\r\n418540818\r\n"
            ],
            [
                "1\r\n300000\r\n",
                "433206494\r\n"
            ],
            [
                "1\r\n299999\r\n",
                "239561028\r\n"
            ],
            [
                "1\r\n299998\r\n",
                "636076392\r\n"
            ],
            [
                "1\r\n281101\r\n",
                "431621228\r\n"
            ],
            [
                "3\r\n100000\r\n99999\r\n100001\r\n",
                "97795552\r\n863388966\r\n358884545\r\n"
            ],
            [
                "25\r\n18674\r\n12102\r\n10776\r\n841\r\n4502\r\n12271\r\n1519\r\n4265\r\n15720\r\n3939\r\n11626\r\n1764\r\n3678\r\n10102\r\n2630\r\n658\r\n26302\r\n9601\r\n9088\r\n4407\r\n51036\r\n57972\r\n4016\r\n20100\r\n2411\r\n",
                "237417465\r\n77357934\r\n252536887\r\n916756229\r\n167820932\r\n625032276\r\n495546288\r\n796854025\r\n473608703\r\n104313257\r\n900587769\r\n410061726\r\n249910367\r\n915137836\r\n998193423\r\n875401432\r\n812430015\r\n273922177\r\n91674080\r\n976133712\r\n91063974\r\n725818918\r\n298596809\r\n266876226\r\n829280503\r\n"
            ],
            [
                "1\r\n299979\r\n",
                "930355027\r\n"
            ]
        ]
    }
]