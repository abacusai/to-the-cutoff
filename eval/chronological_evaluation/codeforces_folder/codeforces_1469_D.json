[
    {
        "name": "Ceil Divisions",
        "description": "You have an array \n    a_1, a_2, \n    \u2026, a_n\n where \n    a_i = i\n. In one\nstep, you can choose two indices \n    x\n and \n    y\n (\n    x \n    \u2260 y\n) and\nset \n    a_x = \n    \n    \u2308\n    a_x/a_y\n    \n    \u2309\n (ceiling\nfunction). Your goal is to make array \n    a\n consist of \n    n - 1\n ones and\n\n    1\n two in no more than \n    n + 5\n steps. Note that you don't have to\nminimize the number of steps. Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The first and\nonly line of each test case contains the single integer \n    n\n (\n    3 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of array \n    a\n. It's guaranteed that\nthe sum of \n    n\n over test cases doesn't exceed \n    2 \n    \u00b7 10^5\n. Output\nFor each test case, print the sequence of operations that will make \n    a\n as\n\n    n - 1\n ones and \n    1\n two in the following format: firstly, print one\ninteger \n    m\n (\n    m \n    \u2264 n + 5\n) \u2014 the number of operations; next print\n\n    m\n pairs of integers \n    x\n and \n    y\n (\n    1 \n    \u2264 x, y \n    \u2264 n\n;\n\n    x \n    \u2260 y\n) (\n    x\n may be greater or less than \n    y\n) \u2014 the indices\nof the corresponding operation. It can be proven that for the given\nconstraints it's always possible to find a correct sequence of operations.\nExample Input 2 3 4 Output 2 3 2 3 2 3 3 4 4 2 4 2 Note In the first test\ncase, you have array \n    a = [1, 2, 3]\n. For example, you can do the\nfollowing: choose \n    3\n, \n    2\n: \n    a_3 = \n    \n    \u2308\n    a_3/a_2\n    \n    \u2309 = 2\n and array \n    a = [1, 2, 2]\n; choose \n    3\n,\n\n    2\n: \n    a_3 = \n    \n    \u2308\n    2/2\n    \n    \u2309 = 1\n and\narray \n    a = [1, 2, 1]\n. You've got array with \n    2\n ones and \n    1\n two\nin \n    2\n steps.In the second test case, \n    a = [1, 2, 3, 4]\n. For example,\nyou can do the following: choose \n    3\n, \n    4\n: \n    a_3 = \n    \n    \u2308\n    3/4\n    \n    \u2309 = 1\n and array \n    a = [1, 2, 1, 4]\n; choose\n\n    4\n, \n    2\n: \n    a_4 = \n    \n    \u2308\n    4/2\n    \n    \u2309 =\n    2\n and array \n    a = [1, 2, 1, 2]\n; choose \n    4\n, \n    2\n: \n    a_4 =\n    \n    \n    \u2308\n    2/2\n    \n    \u2309 = 1\n and array \n    a = [1, 2,\n    1, 1]\n.\n\n",
        "cf_contest_id": 1469,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n3\r\n4\r\n",
                "2\r\n3 2\r\n3 2\r\n4\r\n4 3\r\n4 3\r\n3 2\r\n3 2\r\n"
            ]
        ],
        "private_cases": []
    }
]