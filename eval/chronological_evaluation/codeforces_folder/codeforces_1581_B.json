[
    {
        "name": "Diameter of Graph",
        "description": "CQXYM wants to create a connected undirected graph with \n    n\n nodes and\n\n    m\n edges, and the diameter of the graph must be strictly less than\n\n    k-1\n. Also, CQXYM doesn't want a graph that contains self-loops or\nmultiple edges (i.e. each edge connects two different vertices and between\neach pair of vertices there is at most one edge). The diameter of a graph is\nthe maximum distance between any two nodes. The distance between two nodes is\nthe minimum number of the edges on the path which endpoints are the two nodes.\nCQXYM wonders whether it is possible to create such a graph. Input The input\nconsists of multiple test cases. The first line contains an integer \n    t (1\n    \n    \u2264 t \n    \u2264 10^5)\n \u2014 the number of test cases. The description of the\ntest cases follows. Only one line of each test case contains three integers\n\n    n(1 \n    \u2264 n \n    \u2264 10^9)\n, \n    m\n, \n    k\n \n    (0 \n    \u2264 m,k \n    \u2264\n    10^9)\n. Output For each test case, print YES if it is possible to create the\ngraph, or print NO if it is impossible. You can print each letter in any case\n(upper or lower). Example Input 5 1 0 3 4 5 3 4 6 3 5 4 1 2 1 1 Output YES NO\nYES NO NO Note In the first test case, the graph's diameter equal to 0. In the\nsecond test case, the graph's diameter can only be 2. In the third test case,\nthe graph's diameter can only be 1.\n\n",
        "cf_contest_id": 1581,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graphs",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 0 3\r\n4 5 3\r\n4 6 3\r\n5 4 1\r\n2 1 1\r\n",
                "YES\r\nNO \r\nYES\r\nNO \r\nNO \r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 0 0\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n1 0 1\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n5 7 0\r\n",
                "NO \r\n"
            ],
            [
                "2\r\n1 0 0\r\n1 0 1\r\n",
                "NO \r\nNO \r\n"
            ],
            [
                "5\r\n1 0 2\r\n1 0 1\r\n5 20 3\r\n5 20 4\r\n5 20 5\r\n",
                "YES\r\nNO \r\nNO \r\nNO \r\nNO \r\n"
            ],
            [
                "1\r\n3 3 0\r\n",
                "NO \r\n"
            ],
            [
                "3\r\n1 1 1\r\n1 0 0\r\n1 2 1\r\n",
                "NO \r\nNO \r\nNO \r\n"
            ],
            [
                "1\r\n2000000 691723712 3\r\n",
                "NO \r\n"
            ]
        ]
    }
]