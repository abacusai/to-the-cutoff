[
    {
        "name": "Zuma",
        "description": "Genos recently installed the game Zuma on his phone. In Zuma there exists a\nline of n gemstones, the i-th of which has color ci. The goal of the game is\nto destroy all the gemstones in the line as quickly as possible. In one\nsecond, Genos is able to choose exactly one continuous substring of colored\ngemstones that is a palindrome and remove it from the line. After the\nsubstring is removed, the remaining gemstones shift to form a solid line\nagain. What is the minimum number of seconds needed to destroy the entire\nline? Let us remind, that the string (or substring) is called palindrome, if\nit reads same backwards or forward. In our case this means the color of the\nfirst gemstone is equal to the color of the last one, the color of the second\ngemstone is equal to the color of the next to last and so on. Input The first\nline of input contains a single integer n (1 \u2264 n \u2264 500) \u2014 the number of\ngemstones. The second line contains n space-separated integers, the i-th of\nwhich is ci (1 \u2264 ci \u2264 n) \u2014 the color of the i-th gemstone in a line. Output\nPrint a single integer \u2014 the minimum number of seconds needed to destroy the\nentire line. Examples Input 3 1 2 1 Output 1 Input 3 1 2 3 Output 3 Input 7 1\n4 4 2 3 2 1 Output 2 Note In the first sample, Genos can destroy the entire\nline in one second. In the second sample, Genos can only destroy one gemstone\nat a time, so destroying three gemstones takes three seconds. In the third\nsample, to achieve the optimal time of two seconds, destroy palindrome 4 4\nfirst and then destroy palindrome 1 2 3 2 1.\n\n",
        "cf_contest_id": 607,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n1 2 1\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 2 3\r\n",
                "3\r\n"
            ],
            [
                "7\r\n1 4 4 2 3 2 1\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "2\r\n"
            ],
            [
                "8\r\n1 2 1 3 4 1 2 1\r\n",
                "2\r\n"
            ],
            [
                "50\r\n5 7 5 10 7 9 1 9 10 2 8 3 5 7 3 10 2 3 7 6 2 7 1 2 2 2 4 7 3 5 8 3 4 4 1 6 7 10 5 4 8 1 9 5 5 3 4 4 8 3\r\n",
                "21\r\n"
            ],
            [
                "50\r\n13 17 20 5 14 19 4 17 9 13 10 19 16 13 17 2 18 3 1 9 19 4 19 10 17 12 16 20 10 11 15 10 3 19 8 6 2 8 9 15 13 7 8 8 5 8 15 18 9 4\r\n",
                "28\r\n"
            ],
            [
                "50\r\n22 19 14 22 20 11 16 28 23 15 3 23 6 16 30 15 15 10 24 28 19 19 22 30 28 1 27 12 12 14 17 30 17 26 21 26 27 1 11 23 9 30 18 19 17 29 11 20 29 24\r\n",
                "25\r\n"
            ],
            [
                "50\r\n30 17 31 15 10 3 39 36 5 29 16 11 31 2 38 1 32 40 7 15 39 34 24 11 4 23 9 35 39 32 4 5 14 37 10 34 11 33 30 14 4 34 23 10 34 34 26 34 26 16\r\n",
                "36\r\n"
            ],
            [
                "50\r\n19 25 46 17 1 41 50 19 7 1 43 8 19 38 42 32 38 22 8 5 5 31 29 35 43 12 23 48 40 29 30 9 46 3 39 24 36 36 32 22 21 29 43 33 36 49 48 22 47 37\r\n",
                "36\r\n"
            ],
            [
                "6\r\n1 2 1 1 3 1\r\n",
                "2\r\n"
            ]
        ]
    }
]