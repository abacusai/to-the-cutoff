[
    {
        "name": "Sereja and Cinema",
        "description": "The cinema theater hall in Sereja's city is n seats lined up in front of one\nlarge screen. There are slots for personal possessions to the left and to the\nright of each seat. Any two adjacent seats have exactly one shared slot. The\nfigure below shows the arrangement of seats and slots for n = 4. Today it's\nthe premiere of a movie called \"Dry Hard\". The tickets for all the seats have\nbeen sold. There is a very strict controller at the entrance to the theater,\nso all n people will come into the hall one by one. As soon as a person enters\na cinema hall, he immediately (momentarily) takes his seat and occupies all\nempty slots to the left and to the right from him. If there are no empty\nslots, the man gets really upset and leaves. People are not very constant, so\nit's hard to predict the order in which the viewers will enter the hall. For\nsome seats, Sereja knows the number of the viewer (his number in the entering\nqueue of the viewers) that will come and take this seat. For others, it can be\nany order. Being a programmer and a mathematician, Sereja wonders: how many\nways are there for the people to enter the hall, such that nobody gets upset?\nAs the number can be quite large, print it modulo 1000000007 (10^9 + 7). Input\nThe first line contains integer n (1 \u2264 n \u2264 10^5). The second line contains n\nintegers, the i-th integer shows either the index of the person (index in the\nentering queue) with the ticket for the i-th seat or a 0, if his index is not\nknown. It is guaranteed that all positive numbers in the second line are\ndistinct. You can assume that the index of the person who enters the cinema\nhall is a unique integer from 1 to n. The person who has index 1 comes first\nto the hall, the person who has index 2 comes second and so on. Output In a\nsingle line print the remainder after dividing the answer by number 1000000007\n(10^9 + 7). Examples Input 11 0 0 0 0 0 0 0 0 0 0 0 Output 1024 Input 6 0 3 1\n0 0 0 Output 3\n\n",
        "cf_contest_id": 380,
        "cf_index": "D",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "11\r\n0 0 0 0 0 0 0 0 0 0 0\r\n",
                "1024\r\n"
            ],
            [
                "6\r\n0 3 1 0 0 0\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n2 0\r\n",
                "1\r\n"
            ],
            [
                "15\r\n0 0 13 0 0 10 0 0 0 0 0 4 0 2 0\r\n",
                "2\r\n"
            ],
            [
                "1\r\n0\r\n",
                "1\r\n"
            ],
            [
                "23\r\n0 0 18 0 0 10 9 8 7 0 0 0 0 4 0 0 0 0 15 17 19 21 22\r\n",
                "32\r\n"
            ],
            [
                "15\r\n14 0 12 10 0 6 5 4 3 1 2 0 0 11 0\r\n",
                "3\r\n"
            ],
            [
                "29\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "268435456\r\n"
            ],
            [
                "13\r\n0 12 11 10 9 8 7 6 5 0 0 2 0\r\n",
                "3\r\n"
            ],
            [
                "15\r\n12 10 0 8 7 6 5 3 0 0 4 0 13 14 15\r\n",
                "2\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "3\r\n3 1 2\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 3 2\r\n",
                "0\r\n"
            ],
            [
                "2\r\n2 1\r\n",
                "1\r\n"
            ]
        ]
    }
]