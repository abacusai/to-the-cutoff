[
    {
        "name": "Replace",
        "description": "You are given an integer array \n    a_1,\n    \u2026, a_n\n, where \n    1\n    \u2264 a_i\n    \n    \u2264 n\n for all \n    i\n. There's a \"replace\" function \n    f\n which takes a\npair of integers \n    (l, r)\n, where \n    l \n    \u2264 r\n, as input and outputs the\npair \n    \n\n    f\n    ( (l, r)\n    \n    )=\n    (\n    min\n    \n    a_l,a_l+1,\n    \u2026,a_r\n    \n    ,\n     \n    max\n    \n    a_l,a_l+1,\n    \u2026,a_r\n    \n    \n    ).\n\n    \n Consider repeated\ncalls of this function. That is, from a starting pair \n    (l, r)\n we get\n\n    f\n    ((l, r)\n    )\n, then \n    f\n    (f\n    ((l, r)\n    )\n    )\n,\nthen \n    f\n    (f\n    (f\n    ((l, r)\n    )\n    )\n    )\n, and so on. Now\nyou need to answer \n    q\n queries. For the \n    i\n-th query you have two\nintegers \n    l_i\n and \n    r_i\n (\n    1\n    \u2264 l_i\n    \u2264 r_i\n    \u2264 n\n). You must\nanswer the minimum number of times you must apply the \"replace\" function to\nthe pair \n    (l_i,r_i)\n to get \n    (1, n)\n, or report that it is impossible.\nInput The first line contains two positive integers \n    n\n, \n    q\n\n(\n    1\n    \u2264 n,q\n    \u2264 10^5\n) \u2014 the length of the sequence \n    a\n and the\nnumber of the queries. The second line contains \n    n\n positive integers\n\n    a_1,a_2,\n    \u2026,a_n\n (\n    1\n    \u2264 a_i\n    \u2264 n\n) \u2014 the sequence \n    a\n.\nEach line of the following \n    q\n lines contains two integers \n    l_i\n,\n\n    r_i\n (\n    1\n    \u2264 l_i\n    \u2264 r_i\n    \u2264 n\n) \u2014 the queries. Output For each\nquery, output the required number of times, or \n    -1\n if it is impossible.\nExamples Input 5 6 2 5 4 1 3 4 4 1 5 1 4 3 5 4 5 2 3 Output -1 0 1 2 3 4 Input\n6 3 2 3 4 6 1 2 5 6 2 5 2 3 Output 5 1 3 Input 5 3 3 2 2 4 1 2 5 1 3 1 5\nOutput -1 -1 0 Note In the first example, \n    n=5\n and \n    a=[2,5,4,1,3]\n.\nFor the first query:\n\n    (4,4)\n    \u2192(1,1)\n    \u2192(2,2)\n    \u2192(5,5)\n    \u2192(3,3)\n    \u2192(4,4)\n    \u2192\n    \u2026\n, so\nit's impossible to get \n    (1,5)\n. For the second query, you already have\n\n    (1,5)\n. For the third query: \n    (1,4)\n    \u2192(1,5)\n. For the fourth query:\n\n    (3,5)\n    \u2192(1,4)\n    \u2192(1,5)\n. For the fifth query:\n\n    (4,5)\n    \u2192(1,3)\n    \u2192(2,5)\n    \u2192(1,5)\n. For the sixth query:\n\n    (2,3)\n    \u2192(4,5)\n    \u2192(1,3)\n    \u2192(2,5)\n    \u2192(1,5)\n.\n\n",
        "cf_contest_id": 1707,
        "cf_index": "E",
        "cf_rating": 3500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "5 6\r\n2 5 4 1 3\r\n4 4\r\n1 5\r\n1 4\r\n3 5\r\n4 5\r\n2 3\r\n",
                "-1\r\n0\r\n1\r\n2\r\n3\r\n4\r\n"
            ],
            [
                "6 3\r\n2 3 4 6 1 2\r\n5 6\r\n2 5\r\n2 3\r\n",
                "5\r\n1\r\n3\r\n"
            ],
            [
                "5 3\r\n3 2 2 4 1\r\n2 5\r\n1 3\r\n1 5\r\n",
                "-1\r\n-1\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "10 10\r\n1 9 7 6 2 4 7 8 1 3\r\n10 10\r\n3 5\r\n6 7\r\n1 10\r\n6 6\r\n3 3\r\n6 7\r\n2 2\r\n4 9\r\n1 9\r\n",
                "-1\r\n-1\r\n-1\r\n0\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "3 1\r\n3 3 2\r\n1 2\r\n",
                "-1\r\n"
            ]
        ]
    }
]