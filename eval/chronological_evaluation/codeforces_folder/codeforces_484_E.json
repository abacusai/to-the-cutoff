[
    {
        "name": "Sign on Fence",
        "description": "Bizon the Champion has recently finished painting his wood fence. The fence\nconsists of a sequence of n panels of 1 meter width and of arbitrary height.\nThe i-th panel's height is hi meters. The adjacent planks follow without a gap\nbetween them. After Bizon painted the fence he decided to put a \"for sale\"\nsign on it. The sign will be drawn on a rectangular piece of paper and placed\non the fence so that the sides of the sign are parallel to the fence panels\nand are also aligned with the edges of some panels. Bizon the Champion\nintroduced the following constraints for the sign position: The width of the\nsign should be exactly w meters. The sign must fit into the segment of the\nfence from the l-th to the r-th panels, inclusive (also, it can't exceed the\nfence's bound in vertical direction). The sign will be really pretty, So Bizon\nthe Champion wants the sign's height to be as large as possible. You are given\nthe description of the fence and several queries for placing sign. For each\nquery print the maximum possible height of the sign that can be placed on the\ncorresponding segment of the fence with the given fixed width of the sign.\nInput The first line of the input contains integer n \u2014 the number of panels in\nthe fence (1 \u2264 n \u2264 10^5). The second line contains n space-separated integers\nhi, \u2014 the heights of the panels (1 \u2264 hi \u2264 10^9). The third line contains an\ninteger m \u2014 the number of the queries (1 \u2264 m \u2264 10^5). The next m lines contain\nthe descriptions of the queries, each query is represented by three integers\nl, r and w (1 \u2264 l \u2264 r \u2264 n, 1 \u2264 w \u2264 r - l + 1) \u2014 the segment of the fence and\nthe width of the sign respectively. Output For each query print the answer on\na separate line \u2014 the maximum height of the sign that can be put in the\ncorresponding segment of the fence with all the conditions being satisfied.\nExamples Input 5 1 2 2 3 3 3 2 5 3 2 5 2 1 5 5 Output 2 3 1 Note The fence\ndescribed in the sample looks as follows: The possible positions for the signs\nfor all queries are given below. The optimal position of the sign for the\nfirst query. The optimal position of the sign for the second query. The\noptimal position of the sign for the third query.\n\n",
        "cf_contest_id": 484,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "data structures"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2 2 3 3\r\n3\r\n2 5 3\r\n2 5 2\r\n1 5 5\r\n",
                "2\r\n3\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n1\r\n1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n1000000000\r\n1\r\n1 1 1\r\n",
                "1000000000\r\n"
            ]
        ]
    }
]