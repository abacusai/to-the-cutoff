[
    {
        "name": "K-good",
        "description": "We say that a positive integer \n    n\n is \n    k\n-good for some positive\ninteger \n    k\n if \n    n\n can be expressed as a sum of \n    k\n positive\nintegers which give \n    k\n distinct remainders when divided by \n    k\n. Given\na positive integer \n    n\n, find some \n    k \n    \u2265 2\n so that \n    n\n is\n\n    k\n-good or tell that such a \n    k\n does not exist. Input The input\nconsists of multiple test cases. The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^5\n) \u2014 the number of test cases. Each test\ncase consists of one line with an integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264\n    10^18\n). Output For each test case, print a line with a value of \n    k\n\nsuch that \n    n\n is \n    k\n-good (\n    k \n    \u2265 2\n), or \n    -1\n if \n    n\n\nis not \n    k\n-good for any \n    k\n. If there are multiple valid values of\n\n    k\n, you can print any of them. Example Input 5 2 4 6 15 20 Output -1 -1 3\n3 5 Note \n    6\n is a \n    3\n-good number since it can be expressed as a sum\nof \n    3\n numbers which give different remainders when divided by \n    3\n:\n\n    6 = 1 + 2 + 3\n. \n    15\n is also a \n    3\n-good number since \n    15 = 1 +\n    5 + 9\n and \n    1, 5, 9\n give different remainders when divided by \n    3\n.\n\n    20\n is a \n    5\n-good number since \n    20 = 2 + 3 + 4 + 5 + 6\n and\n\n    2,3,4,5,6\n give different remainders when divided by \n    5\n.\n\n",
        "cf_contest_id": 1656,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2\r\n4\r\n6\r\n15\r\n20\r\n",
                "-1\r\n-1\r\n3\r\n2\r\n5\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n546504780814441385\r\n",
                "2\r\n"
            ],
            [
                "1\r\n999999999339134976\r\n",
                "465661287\r\n"
            ],
            [
                "1\r\n536870915758096384\r\n",
                "1000000007\r\n"
            ]
        ]
    }
]