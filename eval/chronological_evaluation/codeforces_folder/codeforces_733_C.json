[
    {
        "name": "Epidemic in Monstropolis",
        "description": "There was an epidemic in Monstropolis and all monsters became sick. To\nrecover, all monsters lined up in queue for an appointment to the only doctor\nin the city. Soon, monsters became hungry and began to eat each other. One\nmonster can eat other monster if its weight is strictly greater than the\nweight of the monster being eaten, and they stand in the queue next to each\nother. Monsters eat each other instantly. There are no monsters which are\nbeing eaten at the same moment. After the monster A eats the monster B, the\nweight of the monster A increases by the weight of the eaten monster B. In\nresult of such eating the length of the queue decreases by one, all monsters\nafter the eaten one step forward so that there is no empty places in the queue\nagain. A monster can eat several monsters one after another. Initially there\nwere n monsters in the queue, the i-th of which had weight ai. For example, if\nweights are [1, 2, 2, 2, 1, 2] (in order of queue, monsters are numbered from\n1 to 6 from left to right) then some of the options are: the first monster\ncan't eat the second monster because a1 = 1 is not greater than a2 = 2; the\nsecond monster can't eat the third monster because a2 = 2 is not greater than\na3 = 2; the second monster can't eat the fifth monster because they are not\nneighbors; the second monster can eat the first monster, the queue will be\ntransformed to [3, 2, 2, 1, 2]. After some time, someone said a good joke and\nall monsters recovered. At that moment there were k (k \u2264 n) monsters in the\nqueue, the j-th of which had weight bj. Both sequences (a and b) contain the\nweights of the monsters in the order from the first to the last. You are\nrequired to provide one of the possible orders of eating monsters which led to\nthe current queue, or to determine that this could not happen. Assume that the\ndoctor didn't make any appointments while monsters were eating each other.\nInput The first line contains single integer n (1 \u2264 n \u2264 500) \u2014 the number of\nmonsters in the initial queue. The second line contains n integers a1, a2,\n..., an (1 \u2264 ai \u2264 10^6) \u2014 the initial weights of the monsters. The third line\ncontains single integer k (1 \u2264 k \u2264 n) \u2014 the number of monsters in the queue\nafter the joke. The fourth line contains k integers b1, b2, ..., bk (1 \u2264 bj \u2264\n5\u00b710^8) \u2014 the weights of the monsters after the joke. Monsters are listed in\nthe order from the beginning of the queue to the end. Output In case if no\nactions could lead to the final queue, print \"NO\" (without quotes) in the only\nline. Otherwise print \"YES\" (without quotes) in the first line. In the next n\n- k lines print actions in the chronological order. In each line print x \u2014 the\nindex number of the monster in the current queue which eats and, separated by\nspace, the symbol 'L' if the monster which stays the x-th in the queue eats\nthe monster in front of him, or 'R' if the monster which stays the x-th in the\nqueue eats the monster behind him. After each eating the queue is enumerated\nagain. When one monster eats another the queue decreases. If there are several\nanswers, print any of them. Examples Input 6 1 2 2 2 1 2 2 5 5 Output YES 2 L\n1 R 4 L 3 L Input 5 1 2 3 4 5 1 15 Output YES 5 L 4 L 3 L 2 L Input 5 1 1 1 3\n3 3 2 1 6 Output NO Note In the first example, initially there were n = 6\nmonsters, their weights are [1, 2, 2, 2, 1, 2] (in order of queue from the\nfirst monster to the last monster). The final queue should be [5, 5]. The\nfollowing sequence of eatings leads to the final queue: the second monster\neats the monster to the left (i.e. the first monster), queue becomes [3, 2, 2,\n1, 2]; the first monster (note, it was the second on the previous step) eats\nthe monster to the right (i.e. the second monster), queue becomes [5, 2, 1,\n2]; the fourth monster eats the mosnter to the left (i.e. the third monster),\nqueue becomes [5, 2, 3]; the finally, the third monster eats the monster to\nthe left (i.e. the second monster), queue becomes [5, 5]. Note that for each\nstep the output contains numbers of the monsters in their current order in the\nqueue.\n\n",
        "cf_contest_id": 733,
        "cf_index": "C",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dp",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1 2 2 2 1 2\r\n2\r\n5 5\r\n",
                "YES\r\n2 L\r\n1 R\r\n2 R\r\n2 R\r\n"
            ],
            [
                "5\r\n1 2 3 4 5\r\n1\r\n15\r\n",
                "YES\r\n5 L\r\n4 L\r\n3 L\r\n2 L\r\n"
            ],
            [
                "5\r\n1 1 1 3 3\r\n3\r\n2 1 6\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n1 1 1 1 2\r\n3\r\n1 1 4\r\n",
                "YES\r\n5 L\r\n4 L\r\n"
            ],
            [
                "5\r\n1 1 1 1 1\r\n4\r\n1 1 2 1\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n2 1 2 2 1 2\r\n2\r\n5 5\r\n",
                "YES\r\n1 R\r\n1 R\r\n2 R\r\n2 R\r\n"
            ],
            [
                "8\r\n2 5 3 1 4 2 3 4\r\n3\r\n10 6 8\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n959139\r\n1\r\n470888\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n2 2 1\r\n1\r\n5\r\n",
                "YES\r\n2 R\r\n2 L\r\n"
            ],
            [
                "3\r\n1 2 2\r\n1\r\n5\r\n",
                "YES\r\n2 L\r\n1 R\r\n"
            ],
            [
                "5\r\n1 2 3 4 5\r\n1\r\n10\r\n",
                "NO\r\n"
            ],
            [
                "5\r\n325539 329221 106895 882089 718673\r\n5\r\n699009 489855 430685 939232 282330\r\n",
                "NO\r\n"
            ],
            [
                "10\r\n30518 196518 274071 359971 550121 204862 843967 173607 619138 690754\r\n3\r\n171337 183499 549873\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n2 1 1\r\n1\r\n3\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n2 2 2 1\r\n3\r\n2 2 2\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n1 2 3\r\n1\r\n3\r\n",
                "NO\r\n"
            ],
            [
                "2\r\n1 2\r\n2\r\n3 1\r\n",
                "NO\r\n"
            ],
            [
                "5\r\n3 3 2 2 1\r\n2\r\n8 3\r\n",
                "YES\r\n2 R\r\n2 L\r\n2 R\r\n"
            ],
            [
                "3\r\n3 2 5\r\n1\r\n10\r\n",
                "YES\r\n3 L\r\n2 L\r\n"
            ],
            [
                "3\r\n1 5 1\r\n1\r\n6\r\n",
                "NO\r\n"
            ],
            [
                "5\r\n1 2 3 4 5\r\n3\r\n1 2 3\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n5 2 3\r\n1\r\n10\r\n",
                "YES\r\n1 R\r\n1 R\r\n"
            ],
            [
                "3\r\n2 1 3\r\n1\r\n6\r\n",
                "YES\r\n3 L\r\n2 L\r\n"
            ],
            [
                "3\r\n3 2 1\r\n1\r\n6\r\n",
                "YES\r\n1 R\r\n1 R\r\n"
            ],
            [
                "2\r\n5 5\r\n1\r\n5\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n1 2 3\r\n2\r\n1 2\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n1 2 3 4\r\n3\r\n1 2 3\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n4 3 2 1\r\n3\r\n3 2 1\r\n",
                "NO\r\n"
            ],
            [
                "2\r\n5 3\r\n1\r\n5\r\n",
                "NO\r\n"
            ],
            [
                "5\r\n1 1 1 1 1\r\n4\r\n1 1 1 1\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n3 3 2\r\n1\r\n8\r\n",
                "YES\r\n2 R\r\n2 L\r\n"
            ],
            [
                "8\r\n2 2 1 2 2 1 2 4\r\n2\r\n9 8\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n3 2 1 4\r\n3\r\n3 2 1\r\n",
                "NO\r\n"
            ],
            [
                "5\r\n3 3 2 3 1\r\n2\r\n11 1\r\n",
                "YES\r\n2 R\r\n2 R\r\n2 L\r\n"
            ],
            [
                "3\r\n2 1 3\r\n1\r\n3\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n2 3 3 2\r\n2\r\n5 3\r\n",
                "NO\r\n"
            ],
            [
                "16\r\n2 2 2 1 2 2 2 1 1 2 2 2 1 2 2 2\r\n4\r\n7 7 7 7\r\n",
                "YES\r\n3 R\r\n3 L\r\n2 L\r\n4 R\r\n4 L\r\n3 L\r\n4 L\r\n3 R\r\n3 R\r\n5 L\r\n4 R\r\n4 R\r\n"
            ],
            [
                "2\r\n1 1\r\n1\r\n1\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n1 2 1\r\n2\r\n3 2\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n2 3 5\r\n1\r\n10\r\n",
                "YES\r\n3 L\r\n2 L\r\n"
            ],
            [
                "5\r\n1 2 3 4 5\r\n2\r\n3 7\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n1 2 3 4\r\n2\r\n1 2\r\n",
                "NO\r\n"
            ],
            [
                "8\r\n1 2 2 2 1 2 1 1\r\n2\r\n5 5\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n5 5 4\r\n1\r\n14\r\n",
                "YES\r\n2 R\r\n2 L\r\n"
            ],
            [
                "22\r\n3 2 3 3 3 1 1 2 1 2 1 1 1 2 2 3 1 2 3 3 3 3\r\n5\r\n5 16 5 5 15\r\n",
                "YES\r\n1 R\r\n4 R\r\n4 R\r\n4 R\r\n4 R\r\n4 R\r\n4 L\r\n3 L\r\n6 L\r\n5 L\r\n4 L\r\n5 L\r\n7 L\r\n6 L\r\n5 R\r\n5 R\r\n5 R\r\n"
            ],
            [
                "4\r\n2 2 1 2\r\n1\r\n7\r\n",
                "YES\r\n2 R\r\n2 R\r\n2 L\r\n"
            ],
            [
                "7\r\n2 2 2 1 2 2 2\r\n1\r\n13\r\n",
                "YES\r\n3 R\r\n3 R\r\n3 R\r\n3 R\r\n3 L\r\n2 L\r\n"
            ],
            [
                "2\r\n1 2\r\n1\r\n1\r\n",
                "NO\r\n"
            ],
            [
                "14\r\n5 5 5 5 4 4 4 3 3 3 4 4 4 4\r\n3\r\n32 21 4\r\n",
                "YES\r\n4 R\r\n4 R\r\n4 R\r\n4 L\r\n3 L\r\n2 L\r\n5 L\r\n4 L\r\n3 L\r\n2 R\r\n2 R\r\n"
            ],
            [
                "5\r\n2 2 1 2 2\r\n1\r\n9\r\n",
                "YES\r\n2 R\r\n2 R\r\n2 R\r\n2 L\r\n"
            ],
            [
                "1\r\n2\r\n1\r\n2\r\n",
                "YES\r\n"
            ],
            [
                "23\r\n3 2 1 3 3 3 1 1 2 1 2 1 1 1 2 2 3 1 2 3 3 3 3\r\n5\r\n6 16 5 5 15\r\n",
                "YES\r\n1 R\r\n1 R\r\n4 R\r\n4 R\r\n4 R\r\n4 R\r\n4 R\r\n4 L\r\n3 L\r\n6 L\r\n5 L\r\n4 L\r\n5 L\r\n7 L\r\n6 L\r\n5 R\r\n5 R\r\n5 R\r\n"
            ]
        ]
    }
]