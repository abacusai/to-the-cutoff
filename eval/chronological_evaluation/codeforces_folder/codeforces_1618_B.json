[
    {
        "name": "Missing Bigram",
        "description": "Polycarp has come up with a new game to play with you. He calls it \"A missing\nbigram\". A bigram of a word is a sequence of two adjacent letters in it. For\nexample, word \"abbaaba\" contains bigrams \"ab\", \"bb\", \"ba\", \"aa\", \"ab\" and\n\"ba\". The game goes as follows. First, Polycarp comes up with a word,\nconsisting only of lowercase letters 'a' and 'b'. Then, he writes down all its\nbigrams on a whiteboard in the same order as they appear in the word. After\nthat, he wipes one of them off the whiteboard. Finally, Polycarp invites you\nto guess what the word that he has come up with was. Your goal is to find any\nword such that it's possible to write down all its bigrams and remove one of\nthem, so that the resulting sequence of bigrams is the same as the one\nPolycarp ended up with. The tests are generated in such a way that the answer\nexists. If there are multiple answers, you can print any of them. Input The\nfirst line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2000\n) \u2014\nthe number of testcases. The first line of each testcase contains a single\ninteger \n    n\n (\n    3 \n    \u2264 n \n    \u2264 100\n) \u2014 the length of the word Polycarp\nhas come up with. The second line of each testcase contains \n    n-2\n bigrams\nof that word, separated by a single space. Each bigram consists of two\nletters, each of them is either 'a' or 'b'. Additional constraint on the\ninput: there exists at least one string such that it is possible to write down\nall its bigrams, except one, so that the resulting sequence is the same as the\nsequence in the input. In other words, the answer exists. Output For each\ntestcase print a word, consisting of \n    n\n letters, each of them should be\neither 'a' or 'b'. It should be possible to write down all its bigrams and\nremove one of them, so that the resulting sequence of bigrams is the same as\nthe one Polycarp ended up with. The tests are generated in such a way that the\nanswer exists. If there are multiple answers, you can print any of them.\nExample Input 4 7 ab bb ba aa ba 7 ab ba aa ab ba 3 aa 5 bb ab bb Output\nabbaaba abaabaa baa bbabb Note The first two testcases from the example are\nproduced from the word \"abbaaba\". As listed in the statement, it contains\nbigrams \"ab\", \"bb\", \"ba\", \"aa\", \"ab\" and \"ba\". In the first testcase, the\n\n    5\n-th bigram is removed. In the second testcase, the \n    2\n-nd bigram is\nremoved. However, that sequence could also have been produced from the word\n\"abaabaa\". It contains bigrams \"ab\", \"ba\", \"aa\", \"ab\", \"ba\" and \"aa\". The\nmissing bigram is the \n    6\n-th one. In the third testcase, all of \"baa\",\n\"aab\" and \"aaa\" are valid answers.\n\n",
        "cf_contest_id": 1618,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n7\r\nab bb ba aa ba\r\n7\r\nab ba aa ab ba\r\n3\r\naa\r\n5\r\nbb ab bb\r\n",
                "abbaaba\r\naabaaba\r\naaa\r\nbbabb\r\n"
            ]
        ],
        "private_cases": []
    }
]