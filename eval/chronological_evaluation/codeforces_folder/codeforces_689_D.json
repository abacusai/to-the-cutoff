[
    {
        "name": "Friends and Subsequences",
        "description": "Mike and !Mike are old childhood rivals, they are opposite in everything they\ndo, except programming. Today they have a problem they cannot solve on their\nown, but together (with you) \u2014 who knows? Every one of them has an integer\nsequences a and b of length n. Being given a query of the form of pair of\nintegers (l, r), Mike can instantly tell the value of while !Mike can\ninstantly tell the value of . Now suppose a robot (you!) asks them all\npossible different queries of pairs of integers (l, r) (1 \u2264 l \u2264 r \u2264 n) (so he\nwill make exactly n(n + 1) / 2 queries) and counts how many times their\nanswers coincide, thus for how many pairs is satisfied. How many occasions\nwill the robot count? Input The first line contains only integer n (1 \u2264 n \u2264\n200 000). The second line contains n integer numbers a1, a2, ..., an ( - 10^9\n\u2264 ai \u2264 10^9) \u2014 the sequence a. The third line contains n integer numbers b1,\nb2, ..., bn ( - 10^9 \u2264 bi \u2264 10^9) \u2014 the sequence b. Output Print the only\ninteger number \u2014 the number of occasions the robot will count, thus for how\nmany pairs is satisfied. Examples Input 6 1 2 3 2 1 4 6 7 1 2 3 2 Output 2\nInput 3 3 3 3 1 1 1 Output 0 Note The occasions in the first sample case are:\n1.l = 4,r = 4 since max2 = min2. 2.l = 4,r = 5 since max2, 1 = min2,\n3. There are no occasions in the second sample case since Mike will answer 3\nto any query pair, but !Mike will always answer 1.\n\n",
        "cf_contest_id": 689,
        "cf_index": "D",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "6\r\n1 2 3 2 1 4\r\n6 7 1 2 3 2\r\n",
                "2"
            ],
            [
                "3\r\n3 3 3\r\n1 1 1\r\n",
                "0"
            ]
        ],
        "private_cases": [
            [
                "17\r\n714413739 -959271262 714413739 -745891378 926207665 -404845105 -404845105 -959271262 -189641729 -670860364 714413739 -189641729 192457837 -745891378 -670860364 536388097 -959271262\r\n-417715348 -959271262 -959271262 714413739 -189641729 571055593 571055593 571055593 -417715348 -417715348 192457837 -745891378 536388097 571055593 -189641729 571055593 -670860364\r\n",
                "1"
            ],
            [
                "1\r\n509658558\r\n509658558\r\n",
                "1"
            ],
            [
                "1\r\n509658558\r\n-544591380\r\n",
                "0"
            ],
            [
                "3\r\n1 1 1\r\n2 2 2\r\n",
                "0"
            ]
        ]
    }
]