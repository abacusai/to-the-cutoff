[
    {
        "name": "GukiZ hates Boxes",
        "description": "Professor GukiZ is concerned about making his way to school, because massive\npiles of boxes are blocking his way. In total there are n piles of boxes,\narranged in a line, from left to right, i-th pile (1 \u2264 i \u2264 n) containing ai\nboxes. Luckily, m students are willing to help GukiZ by removing all the boxes\nfrom his way. Students are working simultaneously. At time 0, all students are\nlocated left of the first pile. It takes one second for every student to move\nfrom this position to the first pile, and after that, every student must start\nperforming sequence of two possible operations, each taking one second to\ncomplete. Possible operations are: If i \u2260 n, move from pile i to pile i + 1;\nIf pile located at the position of student is not empty, remove one box from\nit.GukiZ's students aren't smart at all, so they need you to tell them how to\nremove boxes before professor comes (he is very impatient man, and doesn't\nwant to wait). They ask you to calculate minumum time t in seconds for which\nthey can remove all the boxes from GukiZ's way. Note that students can be\npositioned in any manner after t seconds, but all the boxes must be removed.\nInput The first line contains two integers n and m (1 \u2264 n, m \u2264 10^5), the\nnumber of piles of boxes and the number of GukiZ's students. The second line\ncontains n integers a1, a2, ... an (0 \u2264 ai \u2264 10^9) where ai represents the\nnumber of boxes on i-th pile. It's guaranteed that at least one pile of is\nnon-empty. Output In a single line, print one number, minimum time needed to\nremove all the boxes in seconds. Examples Input 2 1 1 1 Output 4 Input 3 2 1 0\n2 Output 5 Input 4 100 3 4 5 4 Output 5 Note First sample: Student will first\nmove to the first pile (1 second), then remove box from first pile (1 second),\nthen move to the second pile (1 second) and finally remove the box from second\npile (1 second). Second sample: One of optimal solutions is to send one\nstudent to remove a box from the first pile and a box from the third pile, and\nsend another student to remove a box from the third pile. Overall, 5 seconds.\nThird sample: With a lot of available students, send three of them to remove\nboxes from the first pile, four of them to remove boxes from the second pile,\nfive of them to remove boxes from the third pile, and four of them to remove\nboxes from the fourth pile. Process will be over in 5 seconds, when removing\nthe boxes from the last pile is finished.\n\n",
        "cf_contest_id": 551,
        "cf_index": "C",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1\r\n1 1\r\n",
                "4\r\n"
            ],
            [
                "3 2\r\n1 0 2\r\n",
                "5\r\n"
            ],
            [
                "4 100\r\n3 4 5 4\r\n",
                "5\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 8\r\n121351 0 13513 0 165454\r\n",
                "37544\r\n"
            ],
            [
                "6 6\r\n0 10 0 0 10 0\r\n",
                "8\r\n"
            ],
            [
                "1 1\r\n1\r\n",
                "2\r\n"
            ],
            [
                "1 100000\r\n1\r\n",
                "2\r\n"
            ],
            [
                "1 100000\r\n1000000000\r\n",
                "10001\r\n"
            ],
            [
                "1 1\r\n1000000000\r\n",
                "1000000001\r\n"
            ],
            [
                "20 20\r\n0 0 0 0 0 0 154 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "15\r\n"
            ],
            [
                "10 10\r\n0 0 0 100 0 0 0 0 0 0\r\n",
                "14\r\n"
            ],
            [
                "15 20\r\n0 0 0 500 0 0 0 0 400 0 0 0 0 0 0\r\n",
                "52\r\n"
            ],
            [
                "5 3\r\n0 0 14 0 0\r\n",
                "8\r\n"
            ],
            [
                "6 2\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n",
                "3000000005\r\n"
            ],
            [
                "3 2\r\n10 0 0\r\n",
                "6\r\n"
            ],
            [
                "3 100000\r\n0 1 0\r\n",
                "3\r\n"
            ],
            [
                "9 5\r\n0 0 0 0 0 0 0 0 6\r\n",
                "11\r\n"
            ],
            [
                "4 1\r\n0 1000000000 0 1\r\n",
                "1000000005\r\n"
            ],
            [
                "19 100000\r\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\r\n",
                "20\r\n"
            ],
            [
                "7 1\r\n13 14 15 1 1 0 1\r\n",
                "52\r\n"
            ],
            [
                "5 3\r\n999999999 999999999 999999999 999999999 19992232\r\n",
                "1339997413\r\n"
            ],
            [
                "1 1\r\n15141354\r\n",
                "15141355\r\n"
            ],
            [
                "1 100000\r\n543431351\r\n",
                "5436\r\n"
            ]
        ]
    }
]