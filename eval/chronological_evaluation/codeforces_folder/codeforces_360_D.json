[
    {
        "name": "Levko and Sets",
        "description": "Levko loves all sorts of sets very much. Levko has two arrays of integers a1,\na2, ... , an and b1, b2, ... , bm and a prime number p. Today he generates n\nsets. Let's describe the generation process for the i-th set: First it has a\nsingle number 1. Let's take any element c from this set. For all j (1 \u2264 j \u2264 m)\nif number (c\u00b7ai^bj) mod p doesn't occur in the set, then add it to the set.\nRepeat step 2 as long as we can add at least one element to our set. Levko\nwonders, how many numbers belong to at least one set. That is, he wants to\nknow what size is the union of n generated sets. Input The first line contains\nthree integers n, m and p (1 \u2264 n \u2264 10^4, 1 \u2264 m \u2264 10^5, 2 \u2264 p \u2264 10^9), p is\nprime. The second line contains space-separated integers a1, a2, ... , an (1 \u2264\nai < p). The third line contains space-separated integers b1, b2, ... , bm (1\n\u2264 bi \u2264 10^9). Output The single number \u2014 the size of the union of the sets.\nExamples Input 1 1 7 2 5 Output 3 Input 1 2 7 2 2 4 Output 3 Input 2 1 7 1 6 2\nOutput 1 Input 2 1 7 1 6 5 Output 2\n\n",
        "cf_contest_id": 360,
        "cf_index": "D",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "number theory"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 1 7\r\n2\r\n5\r\n",
                "3\r\n"
            ],
            [
                "1 2 7\r\n2\r\n2 4\r\n",
                "3\r\n"
            ],
            [
                "2 1 7\r\n1 6\r\n2\r\n",
                "1\r\n"
            ],
            [
                "2 1 7\r\n1 6\r\n5\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 3 97\r\n90 71 77 92 6\r\n23 34 19\r\n",
                "96\r\n"
            ],
            [
                "6 7 199\r\n29 137 147 17 167 120\r\n12 34 130 151 46 166 164\r\n",
                "198\r\n"
            ],
            [
                "8 1 293\r\n3 247 95 246 257 146 87 110\r\n38\r\n",
                "146\r\n"
            ],
            [
                "10 1 397\r\n135 164 217 193 257 216 119 83 341 96\r\n391\r\n",
                "396\r\n"
            ]
        ]
    }
]