[
    {
        "name": "Ivan and Powers of Two",
        "description": "Ivan has got an array of n non-negative integers a1, a2, ..., an. Ivan knows\nthat the array is sorted in the non-decreasing order. Ivan wrote out integers\n2^a1, 2^a2, ..., 2^an on a piece of paper. Now he wonders, what minimum number\nof integers of form 2^b (b \u2265 0) need to be added to the piece of paper so that\nthe sum of all integers written on the paper equalled 2^v - 1 for some integer\nv (v \u2265 0). Help Ivan, find the required quantity of numbers. Input The first\nline contains integer n (1 \u2264 n \u2264 10^5). The second input line contains n\nspace-separated integers a1, a2, ..., an (0 \u2264 ai \u2264 2\u00b710^9). It is guaranteed\nthat a1 \u2264 a2 \u2264 ... \u2264 an. Output Print a single integer \u2014 the answer to the\nproblem. Examples Input 4 0 1 1 1 Output 0 Input 1 3 Output 3 Note In the\nfirst sample you do not need to add anything, the sum of numbers already\nequals 2^3 - 1 = 7. In the second sample you need to add numbers 2^0, 2^1,\n2^2.\n\n",
        "cf_contest_id": 305,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 0.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n0 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n3\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1\r\n2000000000\r\n",
                "2000000000\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "26\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2\r\n",
                "5\r\n"
            ]
        ]
    }
]