[
    {
        "name": "Yet Another Segments Subset",
        "description": "You are given \n    n\n segments on a coordinate axis \n    OX\n. The \n    i\n-th\nsegment has borders \n    [l_i; r_i]\n. All points \n    x\n, for which \n    l_i\n    \n    \u2264 x \n    \u2264 r_i\n holds, belong to the \n    i\n-th segment. Your task is to\nchoose the maximum by size (the number of segments) subset of the given set of\nsegments such that each pair of segments in this subset either non-\nintersecting or one of them lies inside the other one. Two segments \n    [l_i;\n    r_i]\n and \n    [l_j; r_j]\n are non-intersecting if they have no common\npoints. For example, segments \n    [1; 2]\n and \n    [3; 4]\n, \n    [1; 3]\n and\n\n    [5; 5]\n are non-intersecting, while segments \n    [1; 2]\n and \n    [2;\n    3]\n, \n    [1; 2]\n and \n    [2; 2]\n are intersecting. The segment \n    [l_i;\n    r_i]\n lies inside the segment \n    [l_j; r_j]\n if \n    l_j \n    \u2264 l_i\n and\n\n    r_i \n    \u2264 r_j\n. For example, segments \n    [2; 2]\n, \n    [2, 3]\n, \n    [3;\n    4]\n and \n    [2; 4]\n lie inside the segment \n    [2; 4]\n, while \n    [2; 5]\n\nand \n    [1; 4]\n are not. You have to answer \n    t\n independent test cases.\nInput The first line of the input contains one integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 1000\n) \u2014 the number of test cases. Then \n    t\n test cases follow. The\nfirst line of the test case contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    3000\n) \u2014 the number of segments. The next \n    n\n lines describe segments.\nThe \n    i\n-th segment is given as two integers \n    l_i\n and \n    r_i\n (\n    1\n    \n    \u2264 l_i \n    \u2264 r_i \n    \u2264 2 \n    \u00b7 10^5\n), where \n    l_i\n is the left\nborder of the \n    i\n-th segment and \n    r_i\n is the right border of the\n\n    i\n-th segment. Additional constraint on the input: there are no\nduplicates in the list of segments. It is guaranteed that the sum of \n    n\n\ndoes not exceed \n    3000\n (\n    \u2211 n \n    \u2264 3000\n). Output For each test\ncase, print the answer: the maximum possible size of the subset of the given\nset of segments such that each pair of segments in this subset either non-\nintersecting or one of them lies inside the other one. Example Input 4 4 1 5 2\n4 2 3 3 4 5 1 5 2 3 2 5 3 5 2 2 3 1 3 2 4 2 3 7 1 10 2 8 2 5 3 4 4 4 6 8 7 7\nOutput 3 4 2 7\n\n",
        "cf_contest_id": 1399,
        "cf_index": "F",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "graphs",
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n4\r\n1 5\r\n2 4\r\n2 3\r\n3 4\r\n5\r\n1 5\r\n2 3\r\n2 5\r\n3 5\r\n2 2\r\n3\r\n1 3\r\n2 4\r\n2 3\r\n7\r\n1 10\r\n2 8\r\n2 5\r\n3 4\r\n4 4\r\n6 8\r\n7 7\r\n",
                "3\r\n4\r\n2\r\n7\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n1 200000\r\n",
                "1\r\n"
            ],
            [
                "1\r\n1\r\n100000 100001\r\n",
                "1\r\n"
            ]
        ]
    }
]