[
    {
        "name": "Thor",
        "description": "Thor is getting used to the Earth. As a gift Loki gave him a smartphone. There\nare n applications on this phone. Thor is fascinated by this phone. He has\nonly one minor issue: he can't count the number of unread notifications\ngenerated by those applications (maybe Loki put a curse on it so he can't). q\nevents are about to happen (in chronological order). They are of three types:\nApplication x generates a notification (this new notification is unread). Thor\nreads all notifications generated so far by application x (he may re-read some\nnotifications). Thor reads the first t notifications generated by phone\napplications (notifications generated in first t events of the first type).\nIt's guaranteed that there were at least t events of the first type before\nthis event. Please note that he doesn't read first t unread notifications, he\njust reads the very first t notifications generated on his phone and he may\nre-read some of them in this operation. Please help Thor and tell him the\nnumber of unread notifications after each event. You may assume that initially\nthere are no notifications in the phone. Input The first line of input\ncontains two integers n and q (1 \u2264 n, q \u2264 300 000) \u2014 the number of\napplications and the number of events to happen. The next q lines contain the\nevents. The i-th of these lines starts with an integer typei \u2014 type of the\ni-th event. If typei = 1 or typei = 2 then it is followed by an integer xi.\nOtherwise it is followed by an integer ti (1 \u2264 typei \u2264 3, 1 \u2264 xi \u2264 n, 1 \u2264 ti \u2264\nq). Output Print the number of unread notifications after each event. Examples\nInput 3 4 1 3 1 1 1 2 2 3 Output 1 2 3 2 Input 4 6 1 2 1 4 1 2 3 3 1 3 1 3\nOutput 1 2 3 0 1 2 Note In the first sample: Application 3 generates a\nnotification (there is 1 unread notification). Application 1 generates a\nnotification (there are 2 unread notifications). Application 2 generates a\nnotification (there are 3 unread notifications). Thor reads the notification\ngenerated by application 3, there are 2 unread notifications left. In the\nsecond sample test: Application 2 generates a notification (there is 1 unread\nnotification). Application 4 generates a notification (there are 2 unread\nnotifications). Application 2 generates a notification (there are 3 unread\nnotifications). Thor reads first three notifications and since there are only\nthree of them so far, there will be no unread notification left. Application 3\ngenerates a notification (there is 1 unread notification). Application 3\ngenerates a notification (there are 2 unread notifications).\n\n",
        "cf_contest_id": 704,
        "cf_index": "A",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 4\r\n1 3\r\n1 1\r\n1 2\r\n2 3\r\n",
                "1\r\n2\r\n3\r\n2\r\n"
            ],
            [
                "4 6\r\n1 2\r\n1 4\r\n1 2\r\n3 3\r\n1 3\r\n1 3\r\n",
                "1\r\n2\r\n3\r\n0\r\n1\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 85\r\n2 2\r\n1 10\r\n1 1\r\n2 6\r\n1 2\r\n1 4\r\n1 7\r\n2 1\r\n1 1\r\n3 3\r\n1 9\r\n1 6\r\n1 8\r\n1 10\r\n3 8\r\n2 8\r\n1 6\r\n1 3\r\n1 9\r\n1 6\r\n1 3\r\n1 8\r\n1 1\r\n1 6\r\n1 10\r\n2 1\r\n2 10\r\n1 10\r\n1 1\r\n1 10\r\n1 6\r\n1 2\r\n1 8\r\n1 3\r\n1 4\r\n1 9\r\n1 5\r\n1 5\r\n2 2\r\n2 4\r\n1 7\r\n1 1\r\n2 4\r\n1 9\r\n1 1\r\n1 7\r\n1 8\r\n3 33\r\n1 10\r\n2 2\r\n1 3\r\n1 10\r\n1 6\r\n3 32\r\n2 3\r\n1 5\r\n2 10\r\n2 2\r\n2 4\r\n2 3\r\n3 16\r\n1 3\r\n2 2\r\n1 1\r\n3 18\r\n2 2\r\n2 5\r\n1 5\r\n1 9\r\n2 4\r\n1 3\r\n1 4\r\n1 3\r\n1 6\r\n1 10\r\n2 2\r\n1 7\r\n1 7\r\n2 8\r\n1 1\r\n3 1\r\n1 8\r\n1 10\r\n1 7\r\n1 8\r\n",
                "0\r\n1\r\n2\r\n2\r\n3\r\n4\r\n5\r\n4\r\n5\r\n3\r\n4\r\n5\r\n6\r\n7\r\n2\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n9\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n17\r\n16\r\n17\r\n18\r\n18\r\n19\r\n20\r\n21\r\n22\r\n3\r\n4\r\n4\r\n5\r\n6\r\n7\r\n7\r\n6\r\n7\r\n5\r\n5\r\n5\r\n5\r\n5\r\n6\r\n6\r\n7\r\n7\r\n7\r\n6\r\n7\r\n8\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n13\r\n14\r\n15\r\n14\r\n15\r\n15\r\n16\r\n17\r\n18\r\n19\r\n"
            ],
            [
                "300000 1\r\n1 300000\r\n",
                "1\r\n"
            ]
        ]
    }
]