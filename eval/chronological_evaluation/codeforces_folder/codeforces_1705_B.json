[
    {
        "name": "Mark the Dust Sweeper",
        "description": "Mark is cleaning a row of \n    n\n rooms. The \n    i\n-th room has a nonnegative\ndust level \n    a_i\n. He has a magical cleaning machine that can do the\nfollowing three-step operation. Select two indices \n    i<j\n such that the\ndust levels \n    a_i\n, \n    a_i+1\n, \n    \u2026\n, \n    a_j-1\n are all\nstrictly greater than \n    0\n. Set \n    a_i\n to \n    a_i-1\n. Set \n    a_j\n to\n\n    a_j+1\n. Mark's goal is to make \n    a_1 = a_2 = \n    \u2026 = a_n-1 = 0\n\nso that he can nicely sweep the \n    n\n-th room. Determine the minimum number\nof operations needed to reach his goal. Input The first line contains a single\ninteger \n    t\n (\n    1\n    \u2264 t\n    \u2264 10^4\n) \u2014 the number of test cases. The\nfirst line of each test case contains a single integer \n    n\n (\n    2\n    \u2264\n    n\n    \u2264 2\n    \u00b7 10^5\n) \u2014 the number of rooms. The second line of each test\ncase contains \n    n\n integers \n    a_1\n, \n    a_2\n, ..., \n    a_n\n\n(\n    0\n    \u2264 a_i\n    \u2264 10^9\n) \u2014 the dust level of each room. It is guaranteed\nthat the sum of \n    n\n across all test cases does not exceed \n    2\n    \u00b7\n    10^5\n. Output For each test case, print a line containing a single integer \u2014\nthe minimum number of operations. It can be proven that there is a sequence of\noperations that meets the goal. Example Input 4 3 2 0 0 5 0 2 0 2 0 6 2 0 3 0\n4 6 4 0 0 0 10 Output 3 5 11 0 Note In the first case, one possible sequence\nof operations is as follows. Choose \n    i=1\n and \n    j=2\n, yielding the\narray \n    [1,1,0]\n. Choose \n    i=1\n and \n    j=3\n, yielding the array\n\n    [0,1,1]\n. Choose \n    i=2\n and \n    j=3\n, yielding the array\n\n    [0,0,2]\n. At this point, \n    a_1=a_2=0\n, completing the process.In the\nsecond case, one possible sequence of operations is as follows. Choose\n\n    i=4\n and \n    j=5\n, yielding the array \n    [0,2,0,1,1]\n. Choose\n\n    i=2\n and \n    j=3\n, yielding the array \n    [0,1,1,1,1]\n. Choose\n\n    i=2\n and \n    j=5\n, yielding the array \n    [0,0,1,1,2]\n. Choose\n\n    i=3\n and \n    j=5\n, yielding the array \n    [0,0,0,1,3]\n. Choose\n\n    i=4\n and \n    j=5\n, yielding the array \n    [0,0,0,0,4]\n. In the last\ncase, the array already satisfies the condition.\n\n",
        "cf_contest_id": 1705,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3\r\n2 0 0\r\n5\r\n0 2 0 2 0\r\n6\r\n2 0 3 0 4 6\r\n4\r\n0 0 0 10\r\n",
                "3\r\n5\r\n11\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]