[
    {
        "name": "Two Arrays",
        "description": "You are given two integer arrays of length \n    N\n, \n    A1\n and \n    A2\n. You\nare also given \n    Q\n queries of 4 types: 1 k l r x: set \n    Ak_i:=min(Ak_i,\n    x)\n for each \n    l \n    \u2264 i \n    \u2264 r\n. 2 k l r x: set \n    Ak_i:=max(Ak_i,\n    x)\n for each \n    l \n    \u2264 i \n    \u2264 r\n. 3 k l r x: set \n    Ak_i:=Ak_i+x\n\nfor each \n    l \n    \u2264 i \n    \u2264 r\n. 4 l r: find the \n    (\n    \u2211_i=l^r\n    F(A1_i+A2_i)) \n    % (10^9+7)\n where \n    F(k)\n is the \n    k\n-th Fibonacci\nnumber (\n    F(0)=0, F(1)=1, F(k)=F(k-1)+F(k-2)\n), and \n    x \n    % y\n denotes\nthe remainder of the division of \n    x\n by \n    y\n. You should process these\nqueries and answer each query of the fourth type. Input The first line\ncontains two integers \n    N\n and \n    Q\n. (\n    1 \n    \u2264 N, Q \n    \u2264 5 \n    \u00d7\n    10^4\n) The second line contains \n    N\n integers, array \n    A1_1, A1_2,\n    \n    \u2026 A1_N\n. (\n    0 \n    \u2264 A1_i \n    \u2264 10^6\n) The third line contains\n\n    N\n integers, array \n    A2_1, A2_2, \n    \u2026 A2_N\n. (\n    0 \n    \u2264 A2_i\n    \n    \u2264 10^6\n) The next \n    Q\n lines describe the queries. Each line\ncontains 5 or 3 integers, where the first integer denotes the type of the\nquery. (\n    k \n    \u2208\n    \n    1, 2\n, \n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 N\n) For\nqueries of type 1 and 2, \n    0 \n    \u2264 x \n    \u2264 10^9\n holds. For queries of\ntype 3, \n    \u221210^6 \n    \u2264 x \n    \u2264 10^6\n holds. It is guaranteed that after\nevery query each number in arrays \n    A1\n and \n    A2\n will be nonnegative.\nOutput Print the answer to each query of the fourth type, in separate lines.\nExamples Input 3 4 1 0 2 2 1 0 4 1 3 3 2 2 2 3 1 1 1 3 0 4 1 3 Output 4 4\nInput 5 4 1 3 5 3 2 4 2 1 3 3 4 1 3 4 2 5 2 1 2 4 6 4 2 4 Output 18 26 68 Note\nIn the first example: The answer for the first query is \n    F(1 + 2) + F(0 + 1)\n    + F(2 + 0) = F(3) + F(1) + F(2) = 2 + 1 + 1 = 4\n. After the second query,\nthe array \n    A2\n changes to \n    [2, 4, 0]\n. After the third query, the\narray \n    A1\n changes to \n    [0, 0, 0]\n. The answer for the fourth query is\n\n    F(0 + 2) + F(0 + 4) + F(0 + 0) = F(2) + F(4) + F(0) = 1 + 3 + 0 = 4\n. In\nthe second example: The answer for the first query is \n    F(1 + 4) + F(3 + 2) +\n    F(5 + 1) = F(5) + F(5) + F(6) = 5 + 5 + 8 = 18\n. The answer for the second\nquery is \n    F(3 + 2) + F(5 + 1) + F(3 + 3) + F(2 + 3) = F(5) + F(6) + F(6) +\n    F(5) = 5 + 8 + 8 + 5 = 26\n. After the third query, the array \n    A1\n\nchanges to \n    [1, 6, 6, 6, 2]\n. The answer for the fourth query is \n    F(6 +\n    2) + F(6 + 1) + F(6 + 3) = F(8) + F(7) + F(9) = 21 + 13 + 34 = 68\n.\n\n",
        "cf_contest_id": 1599,
        "cf_index": "E",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "matrices"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 4\r\n1 0 2\r\n2 1 0\r\n4 1 3\r\n3 2 2 2 3\r\n1 1 1 3 0\r\n4 1 3\r\n",
                "4\r\n4\r\n"
            ],
            [
                "5 4\r\n1 3 5 3 2\r\n4 2 1 3 3\r\n4 1 3\r\n4 2 5\r\n2 1 2 4 6\r\n4 2 4\r\n",
                "18\r\n26\r\n68\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n40\r\n40\r\n4 1 1\r\n",
                "184550589\r\n"
            ],
            [
                "10 10\r\n570803 970709 848133 22452 695639 737666 285474 739600 16759 171950\r\n145477 412167 876550 948646 26198 140802 68907 620239 834307 776372\r\n1 1 4 8 412290830\r\n4 4 6\r\n4 2 2\r\n4 7 10\r\n4 2 8\r\n4 5 7\r\n4 3 4\r\n4 8 9\r\n4 6 8\r\n4 3 4\r\n",
                "290830112\r\n495006418\r\n106843172\r\n850178361\r\n249186967\r\n441860838\r\n827699421\r\n601638210\r\n441860838\r\n"
            ]
        ]
    }
]