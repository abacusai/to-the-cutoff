[
    {
        "name": "Game Relics",
        "description": "Esports is a form of competitive sports using video games. Dota 2 is one of\nthe most popular competitive video games in Esports. Recently, a new video\ngame Dota 3 was released. In Dota 3 a player can buy some relics for their\nhero. Relics are counters that track hero's actions and statistics in a game.\nGloria likes to play Dota 3, so she wants to buy all \n    n\n available relics\nfor her favorite hero. Relics can be bought using an in-game currency called\nshards. Each relic has its own price \u2014 \n    c_i\n shards for the \n    i\n-th\nrelic. A player can buy a relic using one of the following options: Pay\n\n    c_i\n shards to buy the \n    i\n-th relic; Pay \n    x\n shards and randomly\nget one of all \n    n\n relics. The probability of getting a relic is the same\nfor all \n    n\n relics. If a duplicate relic is received, then the relic is\nrecycled and \n    x/2\n shards are given back to the player. Gloria\nwants to buy all \n    n\n relics. Help her minimize the expected number of\nshards she spends to buy all the relics. Input The first line contains two\nintegers \n    n\n and \n    x\n (\n    1 \n    \u2264 n \n    \u2264 100\n; \n    1 \n    \u2264 x \n    \u2264\n    10\n     000\n) \u2014 the number of relics and the cost to receive a random relic.\nThe second line consists of \n    n\n integers \n    c_1, c_2, \n    \u2026, c_n\n\n(\n    x \n    \u2264 c_i \n    \u2264 10\n     000\n; \n    \u2211c_i\n    \u2264 10\n     000\n) \u2014 the\nprices of \n    n\n relics. Output Print a single real number \u2014 the minimum\nexpected number of shards that Gloria must spend to buy all the relics. The\nabsolute or relative error should not exceed \n    10^-9\n. Examples Input 2\n20 25 100 Output 47.50000000000000000 Input 4 30 60 50 60 80 Output\n171.25000000000000000 Note In the first example, the optimal strategy is to\nrandomly get one of the two relics paying \n    20\n shards. Then there are two\nscenarios. The first one happens if Gloria receives the first relic. Then she\nkeeps getting random relics until she obtains the second relic. The expected\nnumber of shards to spend in this scenario is \n    20 + 30 = 50\n. In the\nsecond scenario, Gloria initially gets the second relic. Then it is better to\nbuy the first relic for \n    25\n shards, so the expected number of shards to\nspend in this scenario is \n    20 + 25 = 45\n. Thus, the expected number of\nshards to spend is \n    50 + 45/2 = 47.5\n.\n\n",
        "cf_contest_id": 1267,
        "cf_index": "G",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "probabilities"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2 20\r\n25 100\r\n",
                "47.5000000000"
            ],
            [
                "4 30\r\n60 50 60 80\r\n",
                "171.2500000000"
            ]
        ],
        "private_cases": [
            [
                "5 2\r\n2 2 2 2 2\r\n",
                "10.0000000000"
            ],
            [
                "5 6\r\n6 6 6 6 6\r\n",
                "30.0000000000"
            ],
            [
                "1 1\r\n10000\r\n",
                "1.0000000000"
            ],
            [
                "1 1\r\n1\r\n",
                "1.0000000000"
            ],
            [
                "1 10000\r\n10000\r\n",
                "10000.0000000000"
            ],
            [
                "1 500\r\n5000\r\n",
                "500.0000000000"
            ],
            [
                "10 1\r\n4 3 4 5 1 3 6 11 1 2\r\n",
                "17.2545634921"
            ],
            [
                "10 9\r\n12 10 10 9 10 11 10 10 9 9\r\n",
                "98.4916666667"
            ],
            [
                "10 12\r\n12 35 12 22 26 12 22 16 19 24\r\n",
                "165.6484126984"
            ],
            [
                "100 19\r\n342 82 33 44 28 140 51 58 120 177 38 30 227 31 29 28 138 332 206 50 33 78 28 201 19 301 85 58 294 75 131 81 189 228 109 30 39 97 22 31 176 46 31 79 41 156 28 409 249 57 22 52 42 71 66 161 37 41 58 70 34 22 42 53 235 58 85 19 36 103 32 395 126 37 137 84 64 83 105 61 88 55 28 110 37 56 188 204 161 26 41 28 201 164 51 238 41 78 38 151\r\n",
                "3962.5467897620"
            ],
            [
                "50 32\r\n561 182 90 84 62 132 433 145 92 142 323 227 132 105 47 391 532 84 129 248 46 87 199 121 170 105 212 61 795 37 107 40 296 358 484 57 472 35 92 34 143 133 281 45 522 41 116 72 567 131\r\n",
                "3390.1446188317"
            ],
            [
                "20 395\r\n771 447 544 596 439 418 491 417 483 495 410 438 678 753 510 408 415 398 401 488\r\n",
                "9523.1447240947"
            ],
            [
                "20 10\r\n252 115 228 149 46 64 11 12 13 10 10 10 10 10 10 10 10 10 10 10\r\n",
                "342.7800971131"
            ],
            [
                "20 20\r\n584 26 34 25 20 30 21 20 20 20 20 20 20 20 20 20 20 20 20 20\r\n",
                "512.8207086343"
            ],
            [
                "20 5\r\n296 427 157 34 11 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\r\n",
                "160.7705688854"
            ],
            [
                "50 5\r\n7782 1330 286 250 85 14 14 23 10 6 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\r\n",
                "431.8861322174"
            ],
            [
                "50 25\r\n7881 734 93 122 45 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\r\n",
                "1823.8706924805"
            ],
            [
                "100 1\r\n2014 5676 726 271 666 78 455 11 9 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "188.0802551785"
            ]
        ]
    }
]