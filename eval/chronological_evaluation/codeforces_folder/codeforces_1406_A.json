[
    {
        "name": "Subset Mex",
        "description": "Given a set of integers (it can contain equal elements). You have to split it\ninto two subsets \n    A\n and \n    B\n (both of them can contain equal elements\nor be empty). You have to maximize the value of \n    mex(A)+mex(B)\n. Here\n\n    mex\n of a set denotes the smallest non-negative integer that doesn't\nexist in the set. For example: \n    mex(\n    \n    1,4,0,2,2,1\n    \n    )=3\n\n\n    mex(\n    \n    3,3,2,1,3,0,0\n    \n    )=4\n \n    mex(\n    \u2205)=0\n (\n    mex\n for\nempty set) The set is splitted into two subsets \n    A\n and \n    B\n if for any\ninteger number \n    x\n the number of occurrences of \n    x\n into this set is\nequal to the sum of the number of occurrences of \n    x\n into \n    A\n and the\nnumber of occurrences of \n    x\n into \n    B\n. Input The input consists of\nmultiple test cases. The first line contains an integer \n    t\n (\n    1\n    \u2264\n    t\n    \u2264 100\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains an integer \n    n\n\n(\n    1\n    \u2264 n\n    \u2264 100\n) \u2014 the size of the set. The second line of each\ntestcase contains \n    n\n integers \n    a_1,a_2,\n    \u2026 a_n\n (\n    0\n    \u2264\n    a_i\n    \u2264 100\n) \u2014 the numbers in the set. Output For each test case, print\nthe maximum value of \n    mex(A)+mex(B)\n. Example Input 4 6 0 2 1 5 0 1 3 0 1\n2 4 0 2 0 1 6 1 2 3 4 5 6 Output 5 3 4 0 Note In the first test case,\n\n    A=\n    \n    \n    0,1,2\n    \n    \n    ,B=\n    \n    \n    0,1,5\n is a\npossible choice. In the second test case,\n\n    A=\n    \n    \n    0,1,2\n    \n    \n    ,B=\n    \u2205\n is a possible choice.\nIn the third test case,\n\n    A=\n    \n    \n    0,1,2\n    \n    \n    ,B=\n    \n    \n    0\n is a\npossible choice. In the fourth test case,\n\n    A=\n    \n    \n    1,3,5\n    \n    \n    ,B=\n    \n    \n    2,4,6\n is a\npossible choice.\n\n",
        "cf_contest_id": 1406,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n6\r\n0 2 1 5 0 1\r\n3\r\n0 1 2\r\n4\r\n0 2 0 1\r\n6\r\n1 2 3 4 5 6\r\n",
                "5\r\n3\r\n4\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "15\r\n1\r\n0\r\n1\r\n1\r\n2\r\n0 0\r\n2\r\n0 1\r\n2\r\n1 1\r\n2\r\n0 2\r\n2\r\n1 2\r\n3\r\n0 0 0\r\n3\r\n0 1 0\r\n3\r\n0 1 2\r\n4\r\n0 1 2 3\r\n4\r\n1 1 2 3\r\n4\r\n0 1 0 1\r\n4\r\n0 0 0 1\r\n5\r\n0 0 0 0 0\r\n",
                "1\r\n0\r\n2\r\n2\r\n0\r\n1\r\n0\r\n2\r\n3\r\n3\r\n4\r\n0\r\n4\r\n3\r\n2\r\n"
            ],
            [
                "1\r\n100\r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\r\n",
                "100\r\n"
            ]
        ]
    }
]