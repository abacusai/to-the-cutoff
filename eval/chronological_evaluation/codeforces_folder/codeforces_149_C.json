[
    {
        "name": "Division into Teams",
        "description": "Petya loves football very much, especially when his parents aren't home. Each\nmorning he comes to the yard, gathers his friends and they play all day. From\ntime to time they have a break to have some food or do some chores (for\nexample, water the flowers). The key in football is to divide into teams\nfairly before the game begins. There are n boys playing football in the yard\n(including Petya), each boy's football playing skill is expressed with a non-\nnegative characteristic ai (the larger it is, the better the boy plays). Let's\ndenote the number of players in the first team as x, the number of players in\nthe second team as y, the individual numbers of boys who play for the first\nteam as pi and the individual numbers of boys who play for the second team as\nqi. Division n boys into two teams is considered fair if three conditions are\nfulfilled: Each boy plays for exactly one team (x + y = n). The sizes of teams\ndiffer in no more than one (|x - y| \u2264 1). The total football playing skills\nfor two teams differ in no more than by the value of skill the best player in\nthe yard has. More formally: Your task is to help guys divide into two teams\nfairly. It is guaranteed that a fair division into two teams always exists.\nInput The first line contains the only integer n (2 \u2264 n \u2264 10^5) which\nrepresents the number of guys in the yard. The next line contains n positive\nspace-separated integers, ai (1 \u2264 ai \u2264 10^4), the i-th number represents the\ni-th boy's playing skills. Output On the first line print an integer x \u2014 the\nnumber of boys playing for the first team. On the second line print x integers\n\u2014 the individual numbers of boys playing for the first team. On the third line\nprint an integer y \u2014 the number of boys playing for the second team, on the\nfourth line print y integers \u2014 the individual numbers of boys playing for the\nsecond team. Don't forget that you should fulfil all three conditions: x + y =\nn, |x - y| \u2264 1, and the condition that limits the total skills. If there are\nmultiple ways to solve the problem, print any of them. The boys are numbered\nstarting from one in the order in which their skills are given in the input\ndata. You are allowed to print individual numbers of boys who belong to the\nsame team in any order. Examples Input 3 1 2 1 Output 2 1 2 1 3 Input 5 2 3 3\n1 1 Output 3 4 1 3 2 5 2 Note Let's consider the first sample test. There we\nsend the first and the second boy to the first team and the third boy to the\nsecond team. Let's check all three conditions of a fair division. The first\nlimitation is fulfilled (all boys play), the second limitation on the sizes of\ngroups (|2 - 1| = 1 \u2264 1) is fulfilled, the third limitation on the difference\nin skills ((2 + 1) - (1) = 2 \u2264 2) is fulfilled.\n\n",
        "cf_contest_id": 149,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 1\r\n",
                "2 1 2\r\n1 3\r\n"
            ],
            [
                "5\r\n2 3 3 1 1\r\n",
                "3 4 1 3\r\n2 5 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n2 2 2 2 2 2 2 1 2 2\r\n",
                "5 8 2 4 6 9\r\n5 1 3 5 7 10\r\n"
            ],
            [
                "10\r\n2 3 3 1 3 1 1 1 2 2\r\n",
                "5 4 7 1 10 3\r\n5 6 8 9 2 5\r\n"
            ],
            [
                "10\r\n2 3 2 3 3 1 1 3 1 1\r\n",
                "5 6 9 1 2 5\r\n5 7 10 3 4 8\r\n"
            ],
            [
                "11\r\n1 3 1 2 1 2 2 2 1 1 1\r\n",
                "6 1 5 10 4 7 2\r\n5 3 9 11 6 8\r\n"
            ],
            [
                "11\r\n54 83 96 75 33 27 36 35 26 22 77\r\n",
                "6 10 6 8 1 11 3\r\n5 9 5 7 4 2\r\n"
            ],
            [
                "11\r\n1 1 1 1 1 1 1 1 1 1 1\r\n",
                "6 1 3 5 7 9 11\r\n5 2 4 6 8 10\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "1 1\r\n1 2\r\n"
            ],
            [
                "2\r\n35 36\r\n",
                "1 1\r\n1 2\r\n"
            ],
            [
                "25\r\n1 2 2 1 2 2 2 2 2 1 1 2 2 2 2 2 1 2 2 2 1 1 2 2 1\r\n",
                "13 1 10 17 22 2 5 7 9 13 15 18 20 24\r\n12 4 11 21 25 3 6 8 12 14 16 19 23\r\n"
            ],
            [
                "27\r\n2 1 1 3 1 2 1 1 3 2 3 1 3 2 1 3 2 3 2 1 2 3 2 2 1 2 1\r\n",
                "14 2 5 8 15 25 1 10 17 21 24 4 11 16 22\r\n13 3 7 12 20 27 6 14 19 23 26 9 13 18\r\n"
            ],
            [
                "30\r\n2 2 2 3 4 3 4 4 3 2 3 2 2 4 1 4 2 4 2 2 1 4 3 2 1 3 1 1 4 3\r\n",
                "15 15 25 28 2 10 13 19 24 6 11 26 5 8 16 22\r\n15 21 27 1 3 12 17 20 4 9 23 30 7 14 18 29\r\n"
            ],
            [
                "3\r\n1 2 3\r\n",
                "2 1 3\r\n1 2\r\n"
            ],
            [
                "3\r\n10 10 10\r\n",
                "2 1 3\r\n1 2\r\n"
            ],
            [
                "3\r\n5 10 10\r\n",
                "2 1 3\r\n1 2\r\n"
            ],
            [
                "5\r\n6 1 1 1 1\r\n",
                "3 2 4 1\r\n2 3 5\r\n"
            ],
            [
                "5\r\n1 100 2 200 3\r\n",
                "3 1 5 4\r\n2 3 2\r\n"
            ]
        ]
    }
]