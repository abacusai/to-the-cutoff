[
    {
        "name": "Santa Claus and Tangerines",
        "description": "Santa Claus has n tangerines, and the i-th of them consists of exactly ai\nslices. Santa Claus came to a school which has k pupils. Santa decided to\ntreat them with tangerines. However, there can be too few tangerines to\npresent at least one tangerine to each pupil. So Santa decided to divide\ntangerines into parts so that no one will be offended. In order to do this, he\ncan divide a tangerine or any existing part into two smaller equal parts. If\nthe number of slices in the part he wants to split is odd, then one of the\nresulting parts will have one slice more than the other. It's forbidden to\ndivide a part consisting of only one slice. Santa Claus wants to present to\neveryone either a whole tangerine or exactly one part of it (that also means\nthat everyone must get a positive number of slices). One or several tangerines\nor their parts may stay with Santa. Let bi be the number of slices the i-th\npupil has in the end. Let Santa's joy be the minimum among all bi's. Your task\nis to find the maximum possible joy Santa can have after he treats everyone\nwith tangerines (or their parts). Input The first line contains two positive\nintegers n and k (1 \u2264 n \u2264 10^6, 1 \u2264 k \u2264 2\u00b710^9) denoting the number of\ntangerines and the number of pupils, respectively. The second line consists of\nn positive integers a1, a2, ..., an (1 \u2264 ai \u2264 10^7), where ai stands for the\nnumber of slices the i-th tangerine consists of. Output If there's no way to\npresent a tangerine or a part of tangerine to everyone, print -1. Otherwise,\nprint the maximum possible joy that Santa can have. Examples Input 3 2 5 9 3\nOutput 5 Input 2 4 12 14 Output 6 Input 2 3 1 1 Output -1 Note In the first\nexample Santa should divide the second tangerine into two parts with 5 and 4\nslices. After that he can present the part with 5 slices to the first pupil\nand the whole first tangerine (with 5 slices, too) to the second pupil. In the\nsecond example Santa should divide both tangerines, so that he'll be able to\npresent two parts with 6 slices and two parts with 7 slices. In the third\nexample Santa Claus can't present 2 slices to 3 pupils in such a way that\neveryone will have anything.\n\n",
        "cf_contest_id": 748,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n5 9 3\r\n",
                "5"
            ],
            [
                "2 4\r\n12 14\r\n",
                "6"
            ],
            [
                "2 3\r\n1 1\r\n",
                "-1"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n10\r\n",
                "10"
            ],
            [
                "2 2\r\n6 10\r\n",
                "6"
            ],
            [
                "5 3\r\n199999 200000 199999 199999 200000\r\n",
                "199999"
            ],
            [
                "10 2\r\n26 27 32 28 22 23 30 26 28 23\r\n",
                "30"
            ],
            [
                "20 100\r\n52 55 53 54 48 47 50 45 52 51 51 51 47 45 50 51 53 55 51 52\r\n",
                "6"
            ],
            [
                "30 10\r\n40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69\r\n",
                "60"
            ],
            [
                "50 300\r\n9293 9540 6585 6756 215 6853 4819 3033 5529 8201 4072 4862 4071 5500 5717 229 7696 5440 4407 1108 1680 1974 5414 9053 8480 1030 5556 5551 4741 452 1045 2553 8944 7627 3737 3876 2846 3563 3246 8436 1075 2974 9410 1127 1968 830 1380 7371 6414 6384\r\n",
                "559"
            ],
            [
                "100 400\r\n3640 1748 2277 2703 3458 3707 2414 806 2073 3951 1463 1352 1129 2788 2874 1391 1234 3643 3124 3823 488 538 3991 1014 2695 1660 3853 3843 1865 866 639 2134 1454 2174 759 567 1473 1535 747 1379 1239 2177 2190 960 1137 2916 2723 2148 2895 1187 3811 3058 2666 950 3836 758 918 3551 1122 3238 2174 3028 855 3172 3423 2763 3304 2218 1991 1635 3941 3705 2126 1386 956 2274 405 2391 1040 2632 3313 3557 1320 2786 2330 1840 1753 3525 1314 1719 1739 1260 1132 1626 1499 3963 3505 1577 3944 3359\r\n",
                "414"
            ],
            [
                "4 5\r\n1 2 3 200000\r\n",
                "25000"
            ],
            [
                "1 1\r\n10000000\r\n",
                "10000000"
            ],
            [
                "100 5049\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "1"
            ],
            [
                "1 200\r\n199\r\n",
                "-1"
            ],
            [
                "1 3\r\n7\r\n",
                "2"
            ],
            [
                "1 3\r\n31\r\n",
                "8"
            ],
            [
                "1 3\r\n11\r\n",
                "3"
            ],
            [
                "1 2\r\n2\r\n",
                "1"
            ],
            [
                "1 3\r\n15\r\n",
                "4"
            ]
        ]
    }
]