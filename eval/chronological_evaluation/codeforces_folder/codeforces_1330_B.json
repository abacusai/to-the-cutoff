[
    {
        "name": "Dreamoon Likes Permutations",
        "description": "The sequence of \n    m\n integers is called the permutation if it contains all\nintegers from \n    1\n to \n    m\n exactly once. The number \n    m\n is called\nthe length of the permutation. Dreamoon has two permutations \n    p_1\n and\n\n    p_2\n of non-zero lengths \n    l_1\n and \n    l_2\n. Now Dreamoon\nconcatenates these two permutations into another sequence \n    a\n of length\n\n    l_1 + l_2\n. First \n    l_1\n elements of \n    a\n is the permutation\n\n    p_1\n and next \n    l_2\n elements of \n    a\n is the permutation \n    p_2\n.\nYou are given the sequence \n    a\n, and you need to find two permutations\n\n    p_1\n and \n    p_2\n. If there are several possible ways to restore them,\nyou should find all of them. (Note that it is also possible that there will be\nno ways.) Input The first line contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10\n     000\n) denoting the number of test cases in the input. Each test case\ncontains two lines. The first line contains one integer \n    n\n (\n    2 \n    \u2264 n\n    \n    \u2264 200\n     000\n): the length of \n    a\n. The second line contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n-1\n). The\ntotal sum of \n    n\n is less than \n    200\n     000\n. Output For each test case,\nthe first line of output should contain one integer \n    k\n: the number of\nways to divide \n    a\n into permutations \n    p_1\n and \n    p_2\n. Each of the\nnext \n    k\n lines should contain two integers \n    l_1\n and \n    l_2\n (\n    1\n    \n    \u2264 l_1, l_2 \n    \u2264 n, l_1 + l_2 = n\n), denoting, that it is possible to\ndivide \n    a\n into two permutations of length \n    l_1\n and \n    l_2\n\n(\n    p_1\n is the first \n    l_1\n elements of \n    a\n, and \n    p_2\n is the\nlast \n    l_2\n elements of \n    a\n). You can print solutions in any order.\nExample Input 6 5 1 4 3 2 1 6 2 4 1 3 2 1 4 2 1 1 3 4 1 3 3 1 12 2 1 3 4 5 6 7\n8 9 1 10 2 3 1 1 1 Output 2 1 4 4 1 1 4 2 0 0 1 2 10 0 Note In the first\nexample, two possible ways to divide \n    a\n into permutations are\n\n    1\n    \n     + \n    \n    4, 3, 2, 1\n and \n    1,4,3,2\n    \n     +\n    \n    \n    1\n. In the second example, the only way to divide \n    a\n into\npermutations is \n    2,4,1,3\n    \n     + \n    \n    2,1\n. In the third example,\nthere are no possible ways.\n\n",
        "cf_contest_id": 1330,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n5\r\n1 4 3 2 1\r\n6\r\n2 4 1 3 2 1\r\n4\r\n2 1 1 3\r\n4\r\n1 3 3 1\r\n12\r\n2 1 3 4 5 6 7 8 9 1 10 2\r\n3\r\n1 1 1\r\n",
                "2 1 4 4 1\r\n1 4 2\r\n0\r\n0\r\n1 2 10\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]