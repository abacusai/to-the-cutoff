[
    {
        "name": "Unequal Array",
        "description": "You are given an array \n    a\n of length \n    n\n. We define the equality of\nthe array as the number of indices \n    1 \n    \u2264 i \n    \u2264 n - 1\n such that\n\n    a_i = a_i + 1\n. We are allowed to do the following operation: Select\ntwo integers \n    i\n and \n    x\n such that \n    1 \n    \u2264 i \n    \u2264 n - 1\n and\n\n    1 \n    \u2264 x \n    \u2264 10^9\n. Then, set \n    a_i\n and \n    a_i + 1\n to be\nequal to \n    x\n. Find the minimum number of operations needed such that the\nequality of the array is less than or equal to \n    1\n. Input Each test\ncontains multiple test cases. The first line contains a single integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The description of\nthe test cases follows. The first line of each test case contains an integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10 ^ 5\n) \u2014 the length of array\n\n    a\n. The second line of each test case contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 elements of the array.\nIt is guaranteed that the sum of \n    n\n over all test cases does not exceed\n\n    2 \n    \u00b7 10 ^ 5\n Output For each test case, print the minimum number of\noperations needed. Example Input 4 5 1 1 1 1 1 5 2 1 1 1 2 6 1 1 2 3 3 4 6 1 2\n1 4 5 4 Output 2 1 2 0 Note In the first test case, we can select \n    i=2\n\nand \n    x=2\n to form \n    [1, 2, 2, 1, 1]\n. Then, we can select \n    i=3\n and\n\n    x=3\n to form \n    [1, 2, 3, 3, 1]\n. In the second test case, we can\nselect \n    i=3\n and \n    x=100\n to form \n    [2, 1, 100, 100, 2]\n.\n\n",
        "cf_contest_id": 1672,
        "cf_index": "C",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5\r\n1 1 1 1 1\r\n5\r\n2 1 1 1 2\r\n6\r\n1 1 2 3 3 4\r\n6\r\n1 2 1 4 5 4\r\n",
                "2\r\n1\r\n2\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]