[
    {
        "name": "Guess Your Way Out!",
        "description": "Amr bought a new video game \"Guess Your Way Out!\". The goal of the game is to\nfind an exit from the maze that looks like a perfect binary tree of height h.\nThe player is initially standing at the root of the tree and the exit from the\ntree is located at some leaf node. Let's index all the leaf nodes from the\nleft to the right from 1 to 2^h. The exit is located at some node n where 1 \u2264\nn \u2264 2^h, the player doesn't know where the exit is so he has to guess his way\nout! Amr follows simple algorithm to choose the path. Let's consider infinite\ncommand string \"LRLRLRLRL...\" (consisting of alternating characters 'L' and\n'R'). Amr sequentially executes the characters of the string using following\nrules: Character 'L' means \"go to the left child of the current node\";\nCharacter 'R' means \"go to the right child of the current node\"; If the\ndestination node is already visited, Amr skips current command, otherwise he\nmoves to the destination node; If Amr skipped two consecutive commands, he\ngoes back to the parent of the current node before executing next command; If\nhe reached a leaf node that is not the exit, he returns to the parent of the\ncurrent node; If he reaches an exit, the game is finished. Now Amr wonders, if\nhe follows this algorithm, how many nodes he is going to visit before reaching\nthe exit? Input Input consists of two integers h, n (1 \u2264 h \u2264 50, 1 \u2264 n \u2264 2^h).\nOutput Output a single integer representing the number of nodes (excluding the\nexit node) Amr is going to visit before reaching the exit by following this\nalgorithm. Examples Input 1 2 Output 2 Input 2 3 Output 5 Input 3 6 Output 10\nInput 10 1024 Output 2046 Note A perfect binary tree of height h is a binary\ntree consisting of h + 1 levels. Level 0 consists of a single node called\nroot, level h consists of 2^h nodes called leaves. Each node that is not a\nleaf has exactly two children, left and right one. Following picture\nillustrates the sample test number 3. Nodes are labeled according to the order\nof visit.\n\n",
        "cf_contest_id": 507,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 2\r\n",
                "2\r\n"
            ],
            [
                "2 3\r\n",
                "5\r\n"
            ],
            [
                "3 6\r\n",
                "10\r\n"
            ],
            [
                "10 1024\r\n",
                "2046\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 577\r\n",
                "1345\r\n"
            ],
            [
                "11 550\r\n",
                "408\r\n"
            ],
            [
                "19 12783\r\n",
                "503251\r\n"
            ],
            [
                "28 72803174\r\n",
                "50649698\r\n"
            ],
            [
                "39 457181784666\r\n",
                "830699159852\r\n"
            ],
            [
                "12 955\r\n",
                "2871\r\n"
            ],
            [
                "13 154\r\n",
                "7770\r\n"
            ],
            [
                "14 2334\r\n",
                "9440\r\n"
            ],
            [
                "15 15512\r\n",
                "14926\r\n"
            ],
            [
                "16 21395\r\n",
                "2899\r\n"
            ],
            [
                "17 80239\r\n",
                "177237\r\n"
            ],
            [
                "18 153276\r\n",
                "328766\r\n"
            ],
            [
                "20 589266\r\n",
                "1505684\r\n"
            ],
            [
                "21 1687606\r\n",
                "3522472\r\n"
            ],
            [
                "24 14428281\r\n",
                "26969983\r\n"
            ],
            [
                "29 113463931\r\n",
                "347736449\r\n"
            ],
            [
                "1 1\r\n",
                "1\r\n"
            ],
            [
                "3 8\r\n",
                "14\r\n"
            ],
            [
                "31 1819651953\r\n",
                "3412135549\r\n"
            ],
            [
                "33 2599588275\r\n",
                "1357401405\r\n"
            ],
            [
                "38 262402936512\r\n",
                "519008349260\r\n"
            ],
            [
                "4 13\r\n",
                "27\r\n"
            ],
            [
                "40 615535158153\r\n",
                "1572205271927\r\n"
            ],
            [
                "42 1042128038474\r\n",
                "3195908899134\r\n"
            ],
            [
                "45 17519319833295\r\n",
                "17381304930499\r\n"
            ],
            [
                "46 34999315964173\r\n",
                "34646522010881\r\n"
            ],
            [
                "49 295606900104348\r\n",
                "820858833984106\r\n"
            ],
            [
                "50 905353992267944\r\n",
                "1871650493613618\r\n"
            ],
            [
                "3 5\r\n",
                "11\r\n"
            ],
            [
                "4 14\r\n",
                "26\r\n"
            ],
            [
                "6 40\r\n",
                "88\r\n"
            ],
            [
                "7 31\r\n",
                "95\r\n"
            ],
            [
                "8 19\r\n",
                "205\r\n"
            ],
            [
                "10 359\r\n",
                "91\r\n"
            ],
            [
                "11 349\r\n",
                "1057\r\n"
            ],
            [
                "13 4796\r\n",
                "10298\r\n"
            ],
            [
                "20 742273\r\n",
                "1182599\r\n"
            ],
            [
                "22 3343393\r\n",
                "7009189\r\n"
            ],
            [
                "24 3543583\r\n",
                "10865127\r\n"
            ],
            [
                "25 678676\r\n",
                "31527640\r\n"
            ],
            [
                "27 109473899\r\n",
                "209022797\r\n"
            ],
            [
                "29 19827102\r\n",
                "478963048\r\n"
            ],
            [
                "8 204\r\n",
                "422\r\n"
            ],
            [
                "30 414940886\r\n",
                "372407442\r\n"
            ],
            [
                "32 3786259360\r\n",
                "8003335020\r\n"
            ],
            [
                "35 31233562499\r\n",
                "60951693197\r\n"
            ],
            [
                "38 99361414961\r\n",
                "28342263489\r\n"
            ],
            [
                "9 43\r\n",
                "391\r\n"
            ],
            [
                "40 874338951117\r\n",
                "1800799608767\r\n"
            ],
            [
                "33 2696188969\r\n",
                "505562011\r\n"
            ],
            [
                "35 12080044014\r\n",
                "2415167450\r\n"
            ],
            [
                "12 2715\r\n",
                "4185\r\n"
            ],
            [
                "29 524109003\r\n",
                "1052258991\r\n"
            ],
            [
                "50 1\r\n",
                "1125899906842623\r\n"
            ],
            [
                "50 1125899906842624\r\n",
                "2251799813685246\r\n"
            ],
            [
                "50 562949953421312\r\n",
                "562949953421312\r\n"
            ],
            [
                "50 844424930131968\r\n",
                "1407374883553280\r\n"
            ],
            [
                "50 375299968947542\r\n",
                "50\r\n"
            ]
        ]
    }
]