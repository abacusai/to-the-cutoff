[
    {
        "name": "Boring Card Game",
        "description": "When they are bored, Federico and Giada often play the following card game\nwith a deck containing \n    6n\n cards. Each card contains one number between\n\n    1\n and \n    6n\n and each number appears on exactly one card. Initially\nthe deck is sorted, so the first card contains the number \n    1\n, the second\ncard contains the number \n    2\n, \n    \u2026\n, and the last one contains the\nnumber \n    6n\n. Federico and Giada take turns, alternating; Federico starts.\nIn his turn, the player takes \n    3\n contiguous cards from the deck and puts\nthem in his pocket. The order of the cards remaining in the deck is not\nchanged. They play until the deck is empty (after exactly \n    2n\n turns). At\nthe end of the game both Federico and Giada have \n    3n\n cards in their\npockets. You are given the cards in Federico's pocket at the end of the game.\nDescribe a sequence of moves that produces that set of cards in Federico's\npocket. Input The first line of the input contains one integer \n    n\n\n(\n    1\n    \u2264 n \n    \u2264 200\n). The second line of the input contains \n    3n\n\nnumbers \n    x_1, x_2,\n    \u2026, x_3n\n (\n    1 \n    \u2264 x_1 < x_2 <\n    \u2026 <\n    x_3n\n    \u2264 6n\n) \u2013 the cards in Federico's pocket at the end of the game.\nIt is guaranteed that for each test there is at least one sequence of moves\nthat produces such set of cards in Federico's pocket. Output Print \n    2n\n\nlines, each containing \n    3\n integers. The \n    i\n-th line should contain,\nin increasing order, the integers \n    a_i<b_i<c_i\n written on the three cards\ntaken by the player during the \n    i\n-th turn (so taken by Federico if\n\n    i\n is odd and by Giada if \n    i\n is even). If there is more than one\npossible sequence of moves, you can print any. Examples Input 2 2 3 4 9 10 11\nOutput 9 10 11 6 7 8 2 3 4 1 5 12 Input 5 1 2 3 4 5 9 11 12 13 18 19 20 21 22\n23 Output 19 20 21 24 25 26 11 12 13 27 28 29 1 2 3 14 15 16 18 22 23 6 7 8 4\n5 9 10 17 30 Note Explanation of the first testcase: Initially the deck has\n\n    12 = 2\n    \u00b7 6\n sorted cards, so the deck is \n    [1\n     2\n     3\n     4\n    5\n     6\n     7\n     8\n     9\n     10\n     11\n     12]\n. During turn \n    1\n, Federico\ntakes the three cards \n    [9\n     10\n     11]\n. After his move, the deck is\n\n    [1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     12]\n. During turn \n    2\n, Giada\ntakes the three cards \n    [6\n     7\n     8]\n. After her move, the deck is\n\n    [1\n     2\n     3\n     4\n     5\n     12]\n. During turn \n    3\n, Federico takes the\nthree cards \n    [2\n     3\n     4]\n. After his move, the deck is \n    [1\n     5\n    12]\n. During turn \n    4\n, Giada takes the three cards \n    [1\n     5\n     12]\n.\nAfter her move, the deck is empty. At the end of the game, the cards in\nFederico's pocket are \n    [2\n     3\n     4\n     9\n     10\n     11]\n and the cards in\nGiada's pocket are \n    [1\n     5\n     6\n     7\n     8\n     12]\n.\n\n",
        "cf_contest_id": 1427,
        "cf_index": "F",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n2 3 4 9 10 11\r\n",
                "2 3 4\r\n1 5 6\r\n9 10 11\r\n7 8 12\r\n"
            ],
            [
                "5\r\n1 2 3 4 5 9 11 12 13 18 19 20 21 22 23\r\n",
                "11 12 13\r\n6 7 8\r\n18 19 20\r\n10 14 15\r\n21 22 23\r\n16 17 24\r\n1 2 3\r\n25 26 27\r\n4 5 9\r\n28 29 30\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n3 4 5\r\n",
                "3 4 5\r\n1 2 6\r\n"
            ],
            [
                "4\r\n1 2 3 5 9 10 11 12 13 14 15 16\r\n",
                "11 12 13\r\n6 7 8\r\n5 9 10\r\n19 20 21\r\n14 15 16\r\n4 17 18\r\n1 2 3\r\n22 23 24\r\n"
            ],
            [
                "10\r\n1 2 6 7 8 9 13 14 15 16 17 18 19 21 22 23 29 30 31 34 35 36 42 43 47 50 51 52 53 54\r\n",
                "21 22 23\r\n3 4 5\r\n34 35 36\r\n20 24 25\r\n1 2 6\r\n26 27 28\r\n7 8 9\r\n32 33 37\r\n13 14 15\r\n38 39 40\r\n16 17 18\r\n44 45 46\r\n42 43 47\r\n41 48 49\r\n19 29 30\r\n10 11 12\r\n31 50 51\r\n55 56 57\r\n52 53 54\r\n58 59 60\r\n"
            ],
            [
                "11\r\n4 5 6 7 8 15 19 20 21 22 23 24 30 31 32 36 37 38 39 40 41 42 43 47 51 52 53 56 59 60 61 63 64\r\n",
                "30 31 32\r\n9 10 11\r\n36 37 38\r\n12 13 14\r\n39 40 41\r\n44 45 46\r\n42 43 47\r\n1 2 3\r\n51 52 53\r\n16 17 18\r\n59 60 61\r\n57 58 62\r\n56 63 64\r\n25 26 27\r\n4 5 6\r\n28 29 33\r\n7 8 15\r\n34 35 48\r\n19 20 21\r\n49 50 54\r\n22 23 24\r\n55 65 66\r\n"
            ],
            [
                "23\r\n1 2 3 4 5 6 7 8 12 13 14 21 23 24 25 27 28 29 33 34 35 38 39 40 41 42 43 47 48 49 50 52 53 54 57 61 62 63 64 65 73 74 75 81 82 83 84 88 89 90 91 99 100 101 107 108 109 110 114 115 116 117 121 124 125 126 127 128 135\r\n",
                "23 24 25\r\n9 10 11\r\n27 28 29\r\n15 16 17\r\n33 34 35\r\n18 19 20\r\n38 39 40\r\n58 59 60\r\n41 42 43\r\n66 67 68\r\n47 48 49\r\n69 70 71\r\n52 53 54\r\n51 55 56\r\n50 57 61\r\n78 79 80\r\n62 63 64\r\n85 86 87\r\n73 74 75\r\n72 76 77\r\n65 81 82\r\n111 112 113\r\n83 84 88\r\n118 119 120\r\n89 90 91\r\n129 130 131\r\n99 100 101\r\n132 133 134\r\n107 108 109\r\n22 26 30\r\n110 114 115\r\n31 32 36\r\n116 117 121\r\n37 44 45\r\n1 2 3\r\n46 92 93\r\n4 5 6\r\n94 95 96\r\n7 8 12\r\n97 98 102\r\n13 14 21\r\n103 104 105\r\n124 125 126\r\n106 122 123\r\n127 128 135\r\n136 137 138\r\n"
            ],
            [
                "5\r\n3 4 5 7 14 18 19 20 23 24 25 26 27 28 30\r\n",
                "3 4 5\r\n8 9 10\r\n23 24 25\r\n11 12 13\r\n26 27 28\r\n15 16 17\r\n7 14 18\r\n21 22 29\r\n19 20 30\r\n1 2 6\r\n"
            ],
            [
                "5\r\n1 3 4 5 6 7 8 11 12 13 17 24 26 27 28\r\n",
                "3 4 5\r\n14 15 16\r\n6 7 8\r\n2 9 10\r\n26 27 28\r\n18 19 20\r\n1 11 12\r\n21 22 23\r\n13 17 24\r\n25 29 30\r\n"
            ],
            [
                "10\r\n2 3 4 7 32 33 34 35 37 38 39 40 41 42 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60\r\n",
                "2 3 4\r\n8 9 10\r\n37 38 39\r\n11 12 13\r\n40 41 42\r\n14 15 16\r\n44 45 46\r\n17 18 19\r\n47 48 49\r\n20 21 22\r\n50 51 52\r\n23 24 25\r\n53 54 55\r\n26 27 28\r\n56 57 58\r\n29 30 31\r\n7 32 33\r\n36 43 59\r\n34 35 60\r\n1 5 6\r\n"
            ],
            [
                "10\r\n1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 19 20 21 22 23 24 26 27 28 29 54 57 58 59\r\n",
                "3 4 5\r\n30 31 32\r\n6 7 8\r\n33 34 35\r\n9 10 11\r\n36 37 38\r\n12 13 14\r\n39 40 41\r\n15 16 17\r\n42 43 44\r\n19 20 21\r\n45 46 47\r\n22 23 24\r\n2 18 25\r\n57 58 59\r\n48 49 50\r\n1 26 27\r\n51 52 53\r\n28 29 54\r\n55 56 60\r\n"
            ]
        ]
    }
]