[
    {
        "name": "Armchairs",
        "description": "There are \n    n\n armchairs, numbered from \n    1\n to \n    n\n from left to\nright. Some armchairs are occupied by people (at most one person per\narmchair), others are not. The number of occupied armchairs is not greater\nthan \n    n/2\n. For some reason, you would like to tell people to\nmove from their armchairs to some other ones. If the \n    i\n-th armchair is\noccupied by someone and the \n    j\n-th armchair is not, you can tell the\nperson sitting in the \n    i\n-th armchair to move to the \n    j\n-th armchair.\nThe time it takes a person to move from the \n    i\n-th armchair to the\n\n    j\n-th one is \n    |i - j|\n minutes. You may perform this operation any\nnumber of times, but these operations must be done sequentially, i. e. you\ncannot tell a person to move until the person you asked to move in the last\noperation has finished moving to their destination armchair. You want to\nachieve the following situation: every seat that was initially occupied must\nbe free. What is the minimum time you need to do it? Input The first line\ncontains one integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 5000\n) \u2014 the number of\narmchairs. The second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 1\n). \n    a_i = 1\n means that the \n    i\n-th\narmchair is initially occupied, \n    a_i = 0\n means that it is initially free.\nThe number of occupied armchairs is at most \n    n/2\n. Output Print\none integer \u2014 the minimum number of minutes you have to spend to achieve the\nfollowing situation: every seat that was initially occupied must be free.\nExamples Input 7 1 0 0 1 0 0 1 Output 3 Input 6 1 1 1 0 0 0 Output 9 Input 5 0\n0 0 0 0 Output 0 Note In the first test, you can perform the following\nsequence: ask a person to move from armchair \n    1\n to armchair \n    2\n, it\ntakes \n    1\n minute; ask a person to move from armchair \n    7\n to armchair\n\n    6\n, it takes \n    1\n minute; ask a person to move from armchair \n    4\n\nto armchair \n    5\n, it takes \n    1\n minute. In the second test, you can\nperform the following sequence: ask a person to move from armchair \n    1\n to\narmchair \n    4\n, it takes \n    3\n minutes; ask a person to move from armchair\n\n    2\n to armchair \n    6\n, it takes \n    4\n minutes; ask a person to move\nfrom armchair \n    4\n to armchair \n    5\n, it takes \n    1\n minute; ask a\nperson to move from armchair \n    3\n to armchair \n    4\n, it takes \n    1\n\nminute. In the third test, no seat is occupied so your goal is achieved\ninstantly.\n\n",
        "cf_contest_id": 1525,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "flows",
            "graph matchings",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "7\r\n1 0 0 1 0 0 1\r\n",
                "3\r\n"
            ],
            [
                "6\r\n1 1 1 0 0 0\r\n",
                "9\r\n"
            ],
            [
                "5\r\n0 0 0 0 0\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n0 0\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 0\r\n",
                "1\r\n"
            ],
            [
                "100\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "100\r\n0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "10\r\n"
            ],
            [
                "100\r\n1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 1 0 0 1 1 0 0 1 1 1 0 0 0 0\r\n",
                "40\r\n"
            ],
            [
                "100\r\n1 1 0 1 1 0 0 0 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 0 1 1 1 0 0 0 1 0 0 1 0 1 1 0 1 0 0 1 0 0 1 1 0 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 0 1 1 1 0 0 1 1 0 0 0 0 1\r\n",
                "482\r\n"
            ],
            [
                "100\r\n1 1 0 0 1 1 1 0 1 1 0 1 0 0 1 1 0 1 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 1 1 0 1 0 0 1 0 0 1 0 1 1 0 1 1 0 0\r\n",
                "191\r\n"
            ],
            [
                "5\r\n0 0 0 1 1\r\n",
                "4\r\n"
            ],
            [
                "4\r\n1 1 0 0\r\n",
                "4\r\n"
            ]
        ]
    }
]