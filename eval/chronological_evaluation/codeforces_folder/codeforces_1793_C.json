[
    {
        "name": "Dora and Search",
        "description": "As you know, the girl Dora is always looking for something. This time she was\ngiven a permutation, and she wants to find such a subsegment of it that none\nof the elements at its ends is either the minimum or the maximum of the entire\nsubsegment. More formally, you are asked to find the numbers \n    l\n and\n\n    r\n \n    (1 \n    \u2264 l \n    \u2264 r \n    \u2264 n)\n such that \n    a_l \n    \u2260\n    min(a_l, a_l + 1, \n    \u2026, a_r)\n, \n    a_l \n    \u2260\n    max(a_l, a_l + 1,\n    \n    \u2026, a_r)\n and \n    a_r \n    \u2260\n    min(a_l, a_l + 1, \n    \u2026, a_r)\n,\n\n    a_r \n    \u2260\n    max(a_l, a_l + 1, \n    \u2026, a_r)\n. A permutation of\nlength \n    n\n is an array consisting of \n    n\n distinct integers from\n\n    1\n to \n    n\n in any order. For example, \n    [2,3,1,5,4]\n is a\npermutation, but \n    [1,2,2]\n is not a permutation (\n    2\n occurs twice in\nthe array) and \n    [1,3,4]\n is also not a permutation (\n    n=3\n, but \n    4\n\nis present in the array). Help Dora find such a subsegment, or tell her that\nsuch a subsegment does not exist. Input Each test consists of multiple test\ncases. The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014 the number of test cases. Description of the test cases follows.\nFor each test case, the first line contains one integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of permutation. The second line\ncontains \n    n\n distinct integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264\n    a_i \n    \u2264 n\n) \u2014 the elements of permutation. It is guarented that the sum\nof \n    n\n over all test cases doesn't exceed \n    2 \n    \u00b7 10^5\n. Output For\neach test case, output \n    -1\n if the desired subsegment does not exist.\nOtherwise, output two indexes \n    l, r\n such that \n    [a_l, a_l + 1,\n    \n    \u2026, a_r]\n satisfies all conditions. If there are several solutions,\nthen output any of them. Example Input 4 3 1 2 3 4 2 1 4 3 7 1 3 2 4 6 5 7 6 2\n3 6 5 4 1 Output -1 1 4 2 6 -1 Note In the first and fourth test cases, it can\nbe shown that there are no desired subsegments. In the second test case, the\nsubsegment \n    [1, 4]\n satisfies all the conditions, because \n    max(a_1,\n    a_2, a_3, a_4) = 4, \n    min(a_1, a_2, a_3, a_4) = 1\n, as we see, all the\nconditions are met. In the third test case, the subsegment \n    [2, 6]\n also\nsatisfies all the conditions described.\n\n",
        "cf_contest_id": 1793,
        "cf_index": "C",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3\r\n1 2 3\r\n4\r\n2 1 4 3\r\n7\r\n1 3 2 4 6 5 7\r\n6\r\n2 3 6 5 4 1\r\n",
                "-1\r\n1 4\r\n2 6\r\n-1\r\n"
            ]
        ],
        "private_cases": []
    }
]