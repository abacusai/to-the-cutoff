[
    {
        "name": "Pisces",
        "description": "A group of researchers are studying fish population in a natural system of\nlakes and rivers. The system contains \n    n\n lakes connected by \n    n - 1\n\nrivers. Each river has integer length (in kilometers) and can be traversed in\nboth directions. It is possible to travel between any pair of lakes by\ntraversing the rivers (that is, the network of lakes and rivers form a tree).\nThere is an unknown number of indistinguishable fish living in the lakes. On\nday \n    1\n, fish can be at arbitrary lakes. Fish can travel between lakes by\nswimming the rivers. Each fish can swim a river \n    l\n kilometers long in any\ndirection in \n    l\n days. Further, each fish can stay any number of days in\nany particular lake it visits. No fish ever appear or disappear from the lake\nsystem. Each lake can accomodate any number of fish at any time. The\nresearchers made several observations. The \n    j\n-th of these observations is\n\"on day \n    d_j\n there were at least \n    f_j\n distinct fish in the lake\n\n    p_j\n\". Help the researchers in determining the smallest possible total\nnumber of fish living in the lake system that doesn't contradict the\nobservations. Input The first line contains a single integer \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of lakes in the system. The next \n    n -\n    1\n lines describe the rivers. The \n    i\n-th of these lines contains three\nintegers \n    u_i\n, \n    v_i\n, \n    l_i\n (\n    1 \n    \u2264 u_i, v_i \n    \u2264 n\n,\n\n    u_i \n    \u2260 v_i\n, \n    1 \n    \u2264 l_i \n    \u2264 10^3\n) \u2014 \n    1\n-based indices\nof lakes connected by the \n    i\n-th river, and the length of this river. The\nnext line contains a single integer \n    k\n (\n    1 \n    \u2264 k \n    \u2264 10^5\n) \u2014\nthe number of observations. The next \n    k\n lines describe the observations.\nThe \n    j\n-th of these lines contains three integers \n    d_j\n, \n    f_j\n,\n\n    p_j\n (\n    1 \n    \u2264 d_j \n    \u2264 10^8\n, \n    1 \n    \u2264 f_j \n    \u2264 10^4\n,\n\n    1 \n    \u2264 p_j \n    \u2264 n\n) \u2014 the day, the number of fish, and the lake index\nof the \n    j\n-th observation. No two observations happen on the same day at\nthe same lake simultaneously. Output Print one integer \u2014 the smallest total\nnumber of fish not contradicting the observations. Examples Input 4 1 2 1 1 3\n1 1 4 1 5 1 1 2 1 1 3 2 2 1 3 1 4 3 1 2 Output 2 Input 5 1 2 1 1 3 1 1 4 1 1 5\n1 4 1 1 2 2 1 3 3 1 4 4 1 5 Output 2 Input 5 2 5 1 5 1 1 2 4 1 5 3 3 6 5 2 4 2\n1 1 2 1 3 2 2 4 4 7 5 4 1 2 Output 10 Note In the first example, there could\nbe one fish swimming through lakes \n    2\n, \n    1\n, and \n    4\n, and the\nsecond fish swimming through lakes \n    3\n, \n    1\n, and \n    2\n. In the\nsecond example a single fish can not possibly be part of all observations\nsimultaneously, but two fish swimming \n    2 \n    \u2192 1 \n    \u2192 4\n and \n    3 \n    \u2192 1\n    \n    \u2192 5\n can. In the third example one fish can move from lake \n    1\n to\nlake \n    5\n, others staying in their lakes during all time: two fish in lake\n\n    4\n, six fish in lake \n    5\n, one fish in lake \n    3\n. The system of\nlakes is shown on the picture.\n\n",
        "cf_contest_id": 1023,
        "cf_index": "G",
        "cf_rating": 3400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "flows",
            "trees"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n1 2 1\r\n1 3 1\r\n1 4 1\r\n5\r\n1 1 2\r\n1 1 3\r\n2 2 1\r\n3 1 4\r\n3 1 2\r\n",
                "2\r\n"
            ],
            [
                "5\r\n1 2 1\r\n1 3 1\r\n1 4 1\r\n1 5 1\r\n4\r\n1 1 2\r\n2 1 3\r\n3 1 4\r\n4 1 5\r\n",
                "2\r\n"
            ],
            [
                "5\r\n2 5 1\r\n5 1 1\r\n2 4 1\r\n5 3 3\r\n6\r\n5 2 4\r\n2 1 1\r\n2 1 3\r\n2 2 4\r\n4 7 5\r\n4 1 2\r\n",
                "10\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n1 1 1\r\n",
                "1\r\n"
            ],
            [
                "2\r\n1 2 1\r\n2\r\n1 1 1\r\n1 1 2\r\n",
                "2\r\n"
            ],
            [
                "1\r\n10\r\n45473200 738 1\r\n45473194 676 1\r\n45473198 170 1\r\n45473201 491 1\r\n45473199 516 1\r\n45473202 966 1\r\n45473197 299 1\r\n45473196 570 1\r\n45473195 141 1\r\n45473203 617 1\r\n",
                "966\r\n"
            ],
            [
                "2\r\n1 2 184\r\n10\r\n31974059 680 2\r\n31974061 610 1\r\n31974062 305 2\r\n31974058 936 1\r\n31974064 300 1\r\n31974065 288 1\r\n31974067 392 2\r\n31974058 834 2\r\n31974065 577 2\r\n31974059 997 1\r\n",
                "1831\r\n"
            ],
            [
                "3\r\n2 3 3\r\n1 3 6\r\n10\r\n76689710 62 2\r\n76689715 427 1\r\n76689714 929 1\r\n76689709 508 1\r\n76689713 645 1\r\n76689711 892 3\r\n76689716 441 1\r\n76689708 883 3\r\n76689714 417 2\r\n76689716 795 3\r\n",
                "2141\r\n"
            ],
            [
                "10\r\n9 3 1\r\n3 5 1\r\n3 1 1\r\n7 2 1\r\n6 8 1\r\n3 4 1\r\n1 10 1\r\n7 6 1\r\n7 9 1\r\n10\r\n74659845 367 10\r\n74659844 126 10\r\n74659848 662 10\r\n74659843 68 8\r\n74659843 790 3\r\n74659848 487 3\r\n74659847 425 7\r\n74659840 866 2\r\n74659839 926 7\r\n74659842 374 7\r\n",
                "1574\r\n"
            ],
            [
                "15\r\n9 8 1\r\n6 5 1\r\n15 14 1\r\n3 2 1\r\n4 3 1\r\n13 12 1\r\n8 7 1\r\n12 11 1\r\n7 6 1\r\n10 9 1\r\n2 1 1\r\n14 13 1\r\n11 10 1\r\n5 4 1\r\n15\r\n92732500 936 4\r\n92732502 446 8\r\n92732496 741 3\r\n92732505 259 7\r\n92732502 860 1\r\n92732499 491 9\r\n92732503 95 5\r\n92732509 342 13\r\n92732502 576 3\r\n92732499 611 5\r\n92732498 601 1\r\n92732503 563 14\r\n92732504 875 6\r\n92732497 815 7\r\n92732499 790 1\r\n",
                "2874\r\n"
            ],
            [
                "15\r\n10 1 4\r\n3 1 9\r\n8 1 1\r\n6 1 1\r\n5 1 9\r\n12 1 2\r\n11 1 1\r\n9 1 4\r\n4 1 3\r\n7 1 10\r\n14 1 5\r\n13 1 1\r\n2 1 4\r\n15 1 2\r\n15\r\n4760965 638 15\r\n4760968 690 10\r\n4760965 160 14\r\n4760975 799 11\r\n4760970 728 6\r\n4760965 334 3\r\n4760968 85 3\r\n4760975 480 13\r\n4760970 627 3\r\n4760961 984 6\r\n4760974 424 1\r\n4760969 212 11\r\n4760966 201 2\r\n4760975 666 1\r\n4760964 401 14\r\n",
                "2618\r\n"
            ],
            [
                "10\r\n3 2 1\r\n3 5 1\r\n4 1 1\r\n8 3 1\r\n9 7 1\r\n6 3 1\r\n5 1 1\r\n7 5 1\r\n10 6 1\r\n10\r\n5 913 10\r\n6 227 3\r\n8 417 8\r\n4 180 5\r\n6 641 10\r\n8 889 4\r\n10 389 2\r\n8 843 9\r\n4 793 4\r\n7 552 3\r\n",
                "2925\r\n"
            ],
            [
                "5\r\n2 1 1\r\n1 3 1\r\n5 2 1\r\n1 4 1\r\n5\r\n3 518 5\r\n2 511 1\r\n4 956 2\r\n1 915 2\r\n2 293 2\r\n",
                "1029\r\n"
            ],
            [
                "3\r\n1 2 1\r\n3 1 1\r\n3\r\n3 616 2\r\n2 720 1\r\n1 494 3\r\n",
                "720\r\n"
            ],
            [
                "5\r\n1 5 1\r\n4 1 1\r\n2 3 1\r\n4 3 1\r\n5\r\n1 502 1\r\n6 473 5\r\n4 432 1\r\n9 344 3\r\n7 887 1\r\n",
                "887\r\n"
            ]
        ]
    }
]