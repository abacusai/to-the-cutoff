[
    {
        "name": "Brain Network (hard)",
        "description": "Breaking news from zombie neurology! It turns out that \u2013 contrary to previous\nbeliefs \u2013 every zombie is born with a single brain, and only later it evolves\ninto a complicated brain structure. In fact, whenever a zombie consumes a\nbrain, a new brain appears in its nervous system and gets immediately\nconnected to one of the already existing brains using a single brain\nconnector. Researchers are now interested in monitoring the brain latency of a\nzombie. Your task is to write a program which, given a history of evolution of\na zombie's nervous system, computes its brain latency at every stage. Input\nThe first line of the input contains one number n \u2013 the number of brains in\nthe final nervous system (2 \u2264 n \u2264 200000). In the second line a history of\nzombie's nervous system evolution is given. For convenience, we number all the\nbrains by 1, 2, ..., n in the same order as they appear in the nervous system\n(the zombie is born with a single brain, number 1, and subsequently brains 2,\n3, ..., n are added). The second line contains n - 1 space-separated numbers\np2, p3, ..., pn, meaning that after a new brain k is added to the system, it\ngets connected to a parent-brain . Output Output n - 1 space-separated numbers\n\u2013 the brain latencies after the brain number k is added, for k = 2, 3, ..., n.\nExample Input 6 1 2 2 1 5 Output 1 2 2 3 4\n\n",
        "cf_contest_id": 690,
        "cf_index": "C3",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1\r\n",
                "1 "
            ]
        ],
        "private_cases": [
            [
                "3\r\n1\r\n2\r\n",
                "1 2 "
            ],
            [
                "10\r\n1\r\n1\r\n1\r\n1\r\n3\r\n3\r\n7\r\n5\r\n5\r\n",
                "1 2 2 2 3 3 4 5 5 "
            ],
            [
                "120\r\n1\r\n1\r\n2\r\n2\r\n3\r\n3\r\n4\r\n4\r\n5\r\n5\r\n6\r\n6\r\n7\r\n7\r\n8\r\n8\r\n9\r\n9\r\n10\r\n10\r\n11\r\n11\r\n12\r\n12\r\n13\r\n13\r\n14\r\n14\r\n15\r\n15\r\n16\r\n16\r\n17\r\n17\r\n18\r\n18\r\n19\r\n19\r\n20\r\n20\r\n21\r\n21\r\n22\r\n22\r\n23\r\n23\r\n24\r\n24\r\n25\r\n25\r\n26\r\n26\r\n27\r\n27\r\n28\r\n28\r\n29\r\n29\r\n30\r\n30\r\n31\r\n31\r\n32\r\n32\r\n33\r\n33\r\n34\r\n34\r\n35\r\n35\r\n36\r\n36\r\n37\r\n37\r\n38\r\n38\r\n39\r\n39\r\n40\r\n40\r\n41\r\n41\r\n42\r\n42\r\n43\r\n43\r\n44\r\n44\r\n45\r\n45\r\n46\r\n46\r\n47\r\n47\r\n48\r\n48\r\n49\r\n49\r\n50\r\n50\r\n51\r\n51\r\n52\r\n52\r\n53\r\n53\r\n54\r\n54\r\n55\r\n55\r\n56\r\n56\r\n57\r\n57\r\n58\r\n58\r\n59\r\n59\r\n60\r\n",
                "1 2 3 3 4 4 5 5 5 5 6 6 6 6 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 "
            ],
            [
                "6\r\n1\r\n2\r\n2\r\n1\r\n5\r\n",
                "1 2 2 3 4 "
            ]
        ]
    }
]