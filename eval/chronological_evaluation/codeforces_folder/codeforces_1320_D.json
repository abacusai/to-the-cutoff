[
    {
        "name": "Reachable Strings",
        "description": "In this problem, we will deal with binary strings. Each character of a binary\nstring is either a 0 or a 1. We will also deal with substrings; recall that a\nsubstring is a contiguous subsequence of a string. We denote the substring of\nstring \n    s\n starting from the \n    l\n-th character and ending with the\n\n    r\n-th character as \n    s[l \n    \u2026 r]\n. The characters of each string\nare numbered from \n    1\n. We can perform several operations on the strings we\nconsider. Each operation is to choose a substring of our string and replace it\nwith another string. There are two possible types of operations: replace 011\nwith 110, or replace 110 with 011. For example, if we apply exactly one\noperation to the string 110011110, it can be transformed into 011011110,\n110110110, or 110011011. Binary string \n    a\n is considered reachable from\nbinary string \n    b\n if there exists a sequence \n    s_1\n, \n    s_2\n, ...,\n\n    s_k\n such that \n    s_1 = a\n, \n    s_k = b\n, and for every \n    i \n    \u2208 [1,\n    k - 1]\n, \n    s_i\n can be transformed into \n    s_i + 1\n using exactly one\noperation. Note that \n    k\n can be equal to \n    1\n, i. e., every string is\nreachable from itself. You are given a string \n    t\n and \n    q\n queries to\nit. Each query consists of three integers \n    l_1\n, \n    l_2\n and \n    len\n.\nTo answer each query, you have to determine whether \n    t[l_1 \n    \u2026 l_1 + len\n    - 1]\n is reachable from \n    t[l_2 \n    \u2026 l_2 + len - 1]\n. Input The first\nline contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the\nlength of string \n    t\n. The second line contains one string \n    t\n (\n    |t|\n    = n\n). Each character of \n    t\n is either 0 or 1. The third line contains\none integer \n    q\n (\n    1 \n    \u2264 q \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of\nqueries. Then \n    q\n lines follow, each line represents a query. The\n\n    i\n-th line contains three integers \n    l_1\n, \n    l_2\n and \n    len\n\n(\n    1 \n    \u2264 l_1, l_2 \n    \u2264 |t|\n, \n    1 \n    \u2264 len \n    \u2264 |t| - \n    max(l_1, l_2)\n    + 1\n) for the \n    i\n-th query. Output For each query, print either YES if\n\n    t[l_1 \n    \u2026 l_1 + len - 1]\n is reachable from \n    t[l_2 \n    \u2026 l_2 +\n    len - 1]\n, or NO otherwise. You may print each letter in any register.\nExample Input 5 11011 3 1 3 3 1 4 2 1 2 3 Output Yes Yes No\n\n",
        "cf_contest_id": 1320,
        "cf_index": "D",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "hashing",
            "strings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n11011\r\n3\r\n1 3 3\r\n1 4 2\r\n1 2 3\r\n",
                "YES\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0\r\n1\r\n1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "3\r\n010\r\n3\r\n1 3 1\r\n1 3 1\r\n3 2 1\r\n",
                "YES\r\nYES\r\nNO\r\n"
            ],
            [
                "10\r\n0100001001\r\n10\r\n2 5 4\r\n10 2 1\r\n5 3 5\r\n2 9 2\r\n5 3 1\r\n3 3 3\r\n9 8 1\r\n5 3 1\r\n9 5 2\r\n2 3 6\r\n",
                "NO\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nYES\r\nYES\r\nNO\r\nNO\r\n"
            ],
            [
                "5\r\n00010\r\n5\r\n5 3 1\r\n2 1 2\r\n4 1 1\r\n3 1 3\r\n2 1 3\r\n",
                "YES\r\nYES\r\nNO\r\nNO\r\nNO\r\n"
            ],
            [
                "50\r\n01110011100101101001001101110101011011101011010011\r\n50\r\n10 18 32\r\n13 50 1\r\n5 42 1\r\n10 6 35\r\n47 4 4\r\n42 44 7\r\n50 7 1\r\n45 1 5\r\n14 38 11\r\n28 29 4\r\n7 48 2\r\n35 10 1\r\n12 44 6\r\n28 26 4\r\n43 4 4\r\n42 12 4\r\n47 29 3\r\n47 49 1\r\n19 47 2\r\n3 46 2\r\n9 17 23\r\n17 30 1\r\n1 31 11\r\n48 48 1\r\n14 27 9\r\n15 26 4\r\n7 32 10\r\n39 33 4\r\n8 46 3\r\n7 42 8\r\n34 25 12\r\n18 18 9\r\n41 14 6\r\n25 25 24\r\n22 26 24\r\n49 9 2\r\n27 44 4\r\n5 32 9\r\n18 34 7\r\n23 22 4\r\n16 26 12\r\n8 49 2\r\n4 10 30\r\n21 8 20\r\n26 27 5\r\n4 29 14\r\n32 22 2\r\n34 40 2\r\n26 49 1\r\n6 13 34\r\n",
                "NO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\n"
            ],
            [
                "5\r\n11010\r\n5\r\n2 1 4\r\n3 5 1\r\n4 2 1\r\n4 5 1\r\n2 4 2\r\n",
                "NO\r\nYES\r\nYES\r\nNO\r\nYES\r\n"
            ],
            [
                "50\r\n01110100101100100100011001100001110010010000000101\r\n50\r\n27 18 7\r\n22 35 2\r\n50 35 1\r\n41 16 1\r\n27 5 5\r\n11 6 33\r\n7 19 2\r\n9 12 33\r\n14 37 4\r\n1 22 8\r\n22 3 5\r\n50 42 1\r\n50 38 1\r\n29 20 2\r\n20 34 17\r\n20 4 29\r\n16 21 3\r\n11 43 3\r\n15 45 1\r\n12 28 3\r\n31 34 13\r\n43 1 8\r\n3 41 1\r\n18 3 13\r\n29 44 6\r\n47 44 3\r\n40 43 2\r\n6 46 5\r\n9 12 35\r\n19 45 2\r\n38 47 4\r\n19 47 3\r\n48 3 1\r\n16 12 9\r\n24 18 2\r\n32 40 4\r\n16 28 11\r\n33 22 12\r\n7 16 9\r\n17 30 3\r\n16 13 26\r\n46 24 5\r\n48 17 2\r\n25 32 15\r\n46 19 1\r\n40 29 2\r\n36 34 10\r\n47 27 4\r\n43 18 6\r\n4 10 12\r\n",
                "YES\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\n"
            ],
            [
                "10\r\n1101011011\r\n10\r\n10 3 1\r\n10 10 1\r\n5 10 1\r\n10 4 1\r\n10 10 1\r\n10 10 1\r\n10 10 1\r\n10 4 1\r\n4 5 2\r\n3 5 3\r\n",
                "NO\r\nYES\r\nNO\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nNO\r\nNO\r\n"
            ],
            [
                "10\r\n1100111011\r\n10\r\n10 10 1\r\n5 4 5\r\n6 10 1\r\n10 10 1\r\n10 10 1\r\n5 5 4\r\n6 10 1\r\n4 6 4\r\n10 10 1\r\n6 10 1\r\n",
                "YES\r\nNO\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "104\r\n01000100100101000001001000100001010100010011111111110101001010010100010101001010010101001010101010101010\r\n1\r\n1 53 52\r\n",
                "NO\r\n"
            ],
            [
                "96\r\n000100000000001000010010010010001010100111111111101010010010001010101000100100100101010001010010\r\n1\r\n1 49 48\r\n",
                "NO\r\n"
            ],
            [
                "160\r\n1010010101100101100110101010100101010110100101011001100110101001011010101001100101011010101010101001100101010101011010011001010110011010011001101001100101100101\r\n1\r\n1 81 80\r\n",
                "NO\r\n"
            ],
            [
                "240\r\n011010101001011010100110101001011001011010100101100110011001011010010101010110100110010110100101101001101001101001010110011010010101011010011010010101010110011001100110101001010101100110101001100110101010100101010101011010010101010110101010\r\n1\r\n1 121 120\r\n",
                "NO\r\n"
            ],
            [
                "160\r\n0101100101011001100110101010100110011001101001101010100101011010011001010110010110011010010101011001010101100110010110010110101010010101100110101010101010010110\r\n1\r\n1 81 80\r\n",
                "NO\r\n"
            ],
            [
                "240\r\n010101010101010101011001011001101010011010011010101001010101101010100101100101011010101001010101011001100110010110011010010101010101010101100101100110101001101001101010100101010110101010010110010101101010100101010101100110011001011001101001\r\n1\r\n1 121 120\r\n",
                "NO\r\n"
            ],
            [
                "182\r\n00101000101001010000010010100000100100010000001010100100001000010101000000000000100000100001001000000000000010100000100101000000010001000010100000001000100001001010101010000100000101\r\n1\r\n1 92 91\r\n",
                "NO\r\n"
            ],
            [
                "248\r\n01011010011010101001010101011001101001101001100110100110101001101001010101100101011001010101100110010101010101011010101010100110100110101010010101010110011010011010011001101001101010011010010101011001010110010101011001100101010101010110101010101001\r\n1\r\n1 125 124\r\n",
                "NO\r\n"
            ],
            [
                "238\r\n0100010101001010101000010001000001000100100101001000000010000001010100101010101001010010111111111111111111111111111111110101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100\r\n1\r\n1 120 119\r\n",
                "NO\r\n"
            ],
            [
                "358\r\n0100100101000100100001010010000001000010000101000010100100100100000000100010100001001001001000010010010100101010001010001010001111111111111111111111111111111111111111111111111111110101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100\r\n1\r\n1 180 179\r\n",
                "NO\r\n"
            ]
        ]
    }
]