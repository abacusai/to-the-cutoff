[
    {
        "name": "CGCDSSQ",
        "description": "Given a sequence of integers a1, ..., an and q queries x1, ..., xq on it. For\neach query xi you have to count the number of pairs (l, r) such that 1 \u2264 l \u2264 r\n\u2264 n and gcd(al, al + 1, ..., ar) = xi. is a greatest common divisor of v1, v2,\n..., vn, that is equal to a largest positive integer that divides all vi.\nInput The first line of the input contains integer n, (1 \u2264 n \u2264 10^5), denoting\nthe length of the sequence. The next line contains n space separated integers\na1, ..., an, (1 \u2264 ai \u2264 10^9). The third line of the input contains integer q,\n(1 \u2264 q \u2264 3 \u00d7 10^5), denoting the number of queries. Then follows q lines, each\ncontain an integer xi, (1 \u2264 xi \u2264 10^9). Output For each query print the result\nin a separate line. Examples Input 3 2 6 3 5 1 2 3 4 6 Output 1 2 2 0 1 Input\n7 10 20 3 15 1000 60 16 10 1 2 3 4 5 6 10 20 60 1000 Output 14 0 2 2 2 0 2 2 1\n1\n\n",
        "cf_contest_id": 475,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2 6 3\r\n5\r\n1\r\n2\r\n3\r\n4\r\n6\r\n",
                "1\r\n2\r\n2\r\n0\r\n1\r\n"
            ],
            [
                "7\r\n10 20 3 15 1000 60 16\r\n10\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n10\r\n20\r\n60\r\n1000\r\n",
                "14\r\n0\r\n2\r\n2\r\n2\r\n0\r\n2\r\n2\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n2 2 4 3 2 4 4 2 4 2\r\n104\r\n3\r\n3\r\n1\r\n4\r\n1\r\n1\r\n4\r\n1\r\n1\r\n3\r\n1\r\n1\r\n4\r\n1\r\n1\r\n1\r\n4\r\n3\r\n1\r\n1\r\n4\r\n1\r\n1\r\n1\r\n1\r\n1\r\n4\r\n1\r\n1\r\n1\r\n4\r\n1\r\n1\r\n4\r\n1\r\n1\r\n1\r\n1\r\n1\r\n4\r\n4\r\n1\r\n3\r\n1\r\n4\r\n1\r\n1\r\n1\r\n4\r\n1\r\n2\r\n4\r\n1\r\n4\r\n1\r\n4\r\n1\r\n4\r\n3\r\n1\r\n2\r\n2\r\n4\r\n2\r\n1\r\n1\r\n2\r\n4\r\n4\r\n1\r\n2\r\n3\r\n1\r\n1\r\n4\r\n4\r\n4\r\n4\r\n4\r\n2\r\n2\r\n4\r\n1\r\n1\r\n1\r\n1\r\n4\r\n2\r\n1\r\n1\r\n4\r\n1\r\n4\r\n3\r\n4\r\n4\r\n1\r\n2\r\n3\r\n1\r\n2\r\n1\r\n3\r\n1\r\n",
                "1\r\n1\r\n27\r\n5\r\n27\r\n27\r\n5\r\n27\r\n27\r\n1\r\n27\r\n27\r\n5\r\n27\r\n27\r\n27\r\n5\r\n1\r\n27\r\n27\r\n5\r\n27\r\n27\r\n27\r\n27\r\n27\r\n5\r\n27\r\n27\r\n27\r\n5\r\n27\r\n27\r\n5\r\n27\r\n27\r\n27\r\n27\r\n27\r\n5\r\n5\r\n27\r\n1\r\n27\r\n5\r\n27\r\n27\r\n27\r\n5\r\n27\r\n22\r\n5\r\n27\r\n5\r\n27\r\n5\r\n27\r\n5\r\n1\r\n27\r\n22\r\n22\r\n5\r\n22\r\n27\r\n27\r\n22\r\n5\r\n5\r\n27\r\n22\r\n1\r\n27\r\n27\r\n5\r\n5\r\n5\r\n5\r\n5\r\n22\r\n22\r\n5\r\n27\r\n27\r\n27\r\n27\r\n5\r\n22\r\n27\r\n27\r\n5\r\n27\r\n5\r\n1\r\n5\r\n5\r\n27\r\n22\r\n1\r\n27\r\n22\r\n27\r\n1\r\n27\r\n"
            ]
        ]
    }
]