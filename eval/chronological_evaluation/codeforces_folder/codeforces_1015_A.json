[
    {
        "name": "Points in Segments",
        "description": "You are given a set of \n    n\n segments on the axis \n    Ox\n, each segment has\ninteger endpoints between \n    1\n and \n    m\n inclusive. Segments may\nintersect, overlap or even coincide with each other. Each segment is\ncharacterized by two integers \n    l_i\n and \n    r_i\n (\n    1 \n    \u2264 l_i \n    \u2264\n    r_i \n    \u2264 m\n) \u2014 coordinates of the left and of the right endpoints. Consider\nall integer points between \n    1\n and \n    m\n inclusive. Your task is to\nprint all such points that don't belong to any segment. The point \n    x\n\nbelongs to the segment \n    [l; r]\n if and only if \n    l \n    \u2264 x \n    \u2264 r\n.\nInput The first line of the input contains two integers \n    n\n and \n    m\n\n(\n    1 \n    \u2264 n, m \n    \u2264 100\n) \u2014 the number of segments and the upper bound\nfor coordinates. The next \n    n\n lines contain two integers each \n    l_i\n\nand \n    r_i\n (\n    1 \n    \u2264 l_i \n    \u2264 r_i \n    \u2264 m\n) \u2014 the endpoints of the\n\n    i\n-th segment. Segments may intersect, overlap or even coincide with each\nother. Note, it is possible that \n    l_i=r_i\n, i.e. a segment can degenerate\nto a point. Output In the first line print one integer \n    k\n \u2014 the number of\npoints that don't belong to any segment. In the second line print exactly\n\n    k\n integers in any order \u2014 the points that don't belong to any segment.\nAll points you print should be distinct. If there are no such points at all,\nprint a single integer \n    0\n in the first line and either leave the second\nline empty or do not print it at all. Examples Input 3 5 2 2 1 2 5 5 Output 2\n3 4 Input 1 7 1 7 Output 0 Note In the first example the point \n    1\n belongs\nto the second segment, the point \n    2\n belongs to the first and the second\nsegments and the point \n    5\n belongs to the third segment. The points\n\n    3\n and \n    4\n do not belong to any segment. In the second example all\nthe points from \n    1\n to \n    7\n belong to the first segment.\n\n",
        "cf_contest_id": 1015,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 5\r\n2 2\r\n1 2\r\n5 5\r\n",
                "2\r\n3 4\r\n"
            ],
            [
                "1 7\r\n1 7\r\n",
                "0\r\n\r\n"
            ]
        ],
        "private_cases": [
            [
                "100 100\r\n1 2\r\n1 3\r\n1 3\r\n2 3\r\n1 1\r\n1 2\r\n1 1\r\n1 2\r\n1 3\r\n1 2\r\n1 2\r\n1 5\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 2\r\n1 1\r\n1 1\r\n1 2\r\n2 2\r\n1 1\r\n1 5\r\n1 4\r\n1 1\r\n2 2\r\n2 9\r\n1 1\r\n1 5\r\n2 3\r\n2 3\r\n1 5\r\n1 2\r\n2 2\r\n2 2\r\n1 2\r\n1 2\r\n3 4\r\n1 5\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n2 2\r\n1 3\r\n1 2\r\n1 2\r\n1 2\r\n1 1\r\n2 2\r\n1 4\r\n1 3\r\n1 1\r\n1 2\r\n1 1\r\n2 3\r\n1 2\r\n2 2\r\n1 1\r\n1 5\r\n1 2\r\n2 2\r\n1 1\r\n1 1\r\n1 2\r\n1 4\r\n2 3\r\n1 2\r\n1 1\r\n2 2\r\n1 5\r\n1 1\r\n1 6\r\n1 1\r\n1 1\r\n1 2\r\n1 1\r\n1 4\r\n2 2\r\n1 1\r\n1 1\r\n1 2\r\n1 2\r\n1 2\r\n1 1\r\n1 2\r\n2 3\r\n1 1\r\n1 1\r\n1 3\r\n1 3\r\n1 2\r\n1 2\r\n1 1\r\n1 2\r\n1 2\r\n1 1\r\n1 2\r\n",
                "91\r\n10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n"
            ],
            [
                "1 100\r\n2 99\r\n",
                "2\r\n1 100\r\n"
            ],
            [
                "100 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n",
                "1\r\n1\r\n"
            ],
            [
                "1 100\r\n54 54\r\n",
                "99\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n"
            ],
            [
                "1 7\r\n5 5\r\n",
                "6\r\n1 2 3 4 6 7\r\n"
            ],
            [
                "2 9\r\n9 9\r\n4 6\r\n",
                "5\r\n1 2 3 7 8\r\n"
            ],
            [
                "10 11\r\n2 5\r\n9 11\r\n1 6\r\n5 6\r\n1 3\r\n2 7\r\n11 11\r\n9 10\r\n4 7\r\n5 9\r\n",
                "0\r\n\r\n"
            ],
            [
                "4 5\r\n1 1\r\n3 4\r\n4 4\r\n5 5\r\n",
                "1\r\n2\r\n"
            ],
            [
                "1 2\r\n1 1\r\n",
                "1\r\n2\r\n"
            ],
            [
                "3 5\r\n4 4\r\n4 5\r\n5 5\r\n",
                "3\r\n1 2 3\r\n"
            ],
            [
                "4 3\r\n1 1\r\n1 1\r\n1 1\r\n2 2\r\n",
                "1\r\n3\r\n"
            ],
            [
                "26 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "0\r\n\r\n"
            ]
        ]
    }
]