[
    {
        "name": "Minimax Problem",
        "description": "You are given \n    n\n arrays \n    a_1\n, \n    a_2\n, ..., \n    a_n\n; each array\nconsists of exactly \n    m\n integers. We denote the \n    y\n-th element of the\n\n    x\n-th array as \n    a_x, y\n. You have to choose two arrays \n    a_i\n\nand \n    a_j\n (\n    1 \n    \u2264 i, j \n    \u2264 n\n, it is possible that \n    i = j\n).\nAfter that, you will obtain a new array \n    b\n consisting of \n    m\n\nintegers, such that for every \n    k \n    \u2208 [1, m]\n \n    b_k = \n    max(a_i, k,\n    a_j, k)\n. Your goal is to choose \n    i\n and \n    j\n so that the value of\n\n    min\n    _k = 1^m b_k\n is maximum possible. Input The first\nline contains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 3 \n    \u00b7\n    10^5\n, \n    1 \n    \u2264 m \n    \u2264 8\n) \u2014 the number of arrays and the number of\nelements in each array, respectively. Then \n    n\n lines follow, the\n\n    x\n-th line contains the array \n    a_x\n represented by \n    m\n integers\n\n    a_x, 1\n, \n    a_x, 2\n, ..., \n    a_x, m\n (\n    0 \n    \u2264 a_x, y\n    \u2264\n    10^9\n). Output Print two integers \n    i\n and \n    j\n (\n    1 \n    \u2264 i, j \n    \u2264\n    n\n, it is possible that \n    i = j\n) \u2014 the indices of the two arrays you\nhave to choose so that the value of \n    min\n    _k = 1^m b_k\n is\nmaximum possible. If there are multiple answers, print any of them. Example\nInput 6 5 5 0 3 1 2 1 8 9 1 3 1 2 3 4 5 9 1 0 3 7 2 3 0 6 3 6 4 1 7 0 Output 1\n5\n\n",
        "cf_contest_id": 1288,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "bitmasks",
            "dp"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "6 5\r\n5 0 3 1 2\r\n1 8 9 1 3\r\n1 2 3 4 5\r\n9 1 0 3 7\r\n2 3 0 6 3\r\n6 4 1 7 0\r\n",
                "3 6"
            ]
        ],
        "private_cases": [
            [
                "100 1\r\n1\r\n1\r\n0\r\n1\r\n0\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n1\r\n1\r\n0\r\n0\r\n1\r\n0\r\n1\r\n1\r\n1\r\n1\r\n1\r\n0\r\n1\r\n0\r\n0\r\n1\r\n0\r\n0\r\n1\r\n0\r\n1\r\n1\r\n0\r\n1\r\n0\r\n1\r\n1\r\n0\r\n1\r\n1\r\n0\r\n1\r\n1\r\n1\r\n0\r\n0\r\n1\r\n0\r\n1\r\n0\r\n0\r\n0\r\n1\r\n0\r\n0\r\n1\r\n1\r\n0\r\n0\r\n1\r\n1\r\n0\r\n0\r\n0\r\n1\r\n1\r\n0\r\n1\r\n0\r\n0\r\n1\r\n1\r\n1\r\n0\r\n0\r\n1\r\n0\r\n0\r\n1\r\n0\r\n0\r\n0\r\n1\r\n0\r\n0\r\n0\r\n1\r\n0\r\n0\r\n1\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n1\r\n1\r\n1\r\n",
                "97 100"
            ],
            [
                "100 2\r\n0 1\r\n0 0\r\n0 1\r\n0 1\r\n0 1\r\n0 1\r\n0 1\r\n1 1\r\n0 0\r\n0 1\r\n1 0\r\n0 0\r\n1 0\r\n1 1\r\n1 1\r\n0 1\r\n0 1\r\n0 1\r\n1 0\r\n0 0\r\n1 1\r\n0 1\r\n0 1\r\n0 0\r\n1 0\r\n0 1\r\n1 1\r\n1 0\r\n1 1\r\n0 0\r\n0 0\r\n1 0\r\n0 0\r\n1 0\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 0\r\n1 0\r\n1 0\r\n1 1\r\n0 0\r\n1 0\r\n0 1\r\n0 1\r\n0 0\r\n0 0\r\n1 1\r\n1 0\r\n0 1\r\n0 0\r\n1 0\r\n1 1\r\n1 0\r\n0 0\r\n0 0\r\n0 0\r\n1 1\r\n1 1\r\n0 0\r\n1 0\r\n1 1\r\n1 1\r\n0 0\r\n0 1\r\n1 1\r\n1 0\r\n0 1\r\n0 1\r\n1 0\r\n1 0\r\n1 0\r\n0 1\r\n0 1\r\n0 0\r\n0 0\r\n0 1\r\n1 1\r\n0 1\r\n1 0\r\n1 1\r\n0 0\r\n1 0\r\n1 0\r\n1 0\r\n1 1\r\n1 0\r\n0 1\r\n0 0\r\n1 1\r\n0 1\r\n0 1\r\n1 1\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n1 1\r\n1 0\r\n",
                "98 99"
            ],
            [
                "4 2\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n",
                "4 4"
            ],
            [
                "1 1\r\n0\r\n",
                "1 1"
            ],
            [
                "1 4\r\n1 2 3 4\r\n",
                "1 1"
            ],
            [
                "2 3\r\n1 1 3\r\n2 2 2\r\n",
                "1 2"
            ],
            [
                "1 1\r\n1\r\n",
                "1 1"
            ],
            [
                "2 2\r\n1 1\r\n1000 1000\r\n",
                "1 2"
            ],
            [
                "2 2\r\n1 0\r\n0 0\r\n",
                "2 2"
            ],
            [
                "1 2\r\n0 0\r\n",
                "1 1"
            ],
            [
                "1 3\r\n0 0 0\r\n",
                "1 1"
            ],
            [
                "1 4\r\n93 85 23 13\r\n",
                "1 1"
            ],
            [
                "1 7\r\n67 78 37 36 41 0 14\r\n",
                "1 1"
            ],
            [
                "3 4\r\n0 0 0 0\r\n0 0 0 0\r\n0 0 0 0\r\n",
                "3 3"
            ],
            [
                "3 3\r\n99 99 99\r\n100 100 100\r\n100 100 100\r\n",
                "1 3"
            ],
            [
                "1 5\r\n1 2 3 4 5\r\n",
                "1 1"
            ],
            [
                "3 3\r\n1000 1000 1000\r\n1 1 1\r\n2 2 2\r\n",
                "3 1"
            ],
            [
                "3 1\r\n100\r\n5\r\n99\r\n",
                "3 1"
            ]
        ]
    }
]