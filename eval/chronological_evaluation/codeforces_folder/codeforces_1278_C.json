[
    {
        "name": "Berry Jam",
        "description": "Karlsson has recently discovered a huge stock of berry jam jars in the\nbasement of the house. More specifically, there were \n    2n\n jars of\nstrawberry and blueberry jam. All the \n    2n\n jars are arranged in a row. The\nstairs to the basement are exactly in the middle of that row. So when Karlsson\nenters the basement, he sees exactly \n    n\n jars to his left and \n    n\n jars\nto his right. For example, the basement might look like this: Being the\nstarightforward man he is, he immediately starts eating the jam. In one minute\nhe chooses to empty either the first non-empty jar to his left or the first\nnon-empty jar to his right. Finally, Karlsson decided that at the end the\namount of full strawberry and blueberry jam jars should become the same. For\nexample, this might be the result: He has eaten \n    1\n jar to his left and\nthen \n    5\n jars to his right. There remained exactly \n    3\n full jars of\nboth strawberry and blueberry jam. Jars are numbered from \n    1\n to \n    2n\n\nfrom left to right, so Karlsson initially stands between jars \n    n\n and\n\n    n+1\n. What is the minimum number of jars Karlsson is required to empty so\nthat an equal number of full strawberry and blueberry jam jars is left? Your\nprogram should answer \n    t\n independent test cases. Input The first line\ncontains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test\ncases. The first line of each test case contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 10^5\n). The second line of each test case contains\n\n    2n\n integers \n    a_1, a_2, \n    \u2026, a_2n\n (\n    1 \n    \u2264 a_i \n    \u2264 2\n)\n\u2014 \n    a_i=1\n means that the \n    i\n-th jar from the left is a strawberry jam\njar and \n    a_i=2\n means that it is a blueberry jam jar. It is guaranteed\nthat the sum of \n    n\n over all test cases does not exceed \n    10^5\n. Output\nFor each test case print the answer to it \u2014 the minimum number of jars\nKarlsson is required to empty so that an equal number of full strawberry and\nblueberry jam jars is left. Example Input 4 6 1 1 1 2 2 1 2 1 2 1 1 2 2 1 2 1\n2 3 1 1 1 1 1 1 2 2 1 1 1 Output 6 0 6 2 Note The picture from the statement\ndescribes the first test case. In the second test case the number of\nstrawberry and blueberry jam jars is already equal. In the third test case\nKarlsson is required to eat all \n    6\n jars so that there remain \n    0\n jars\nof both jams. In the fourth test case Karlsson can empty either the second and\nthe third jars or the third and the fourth one. The both scenarios will leave\n\n    1\n jar of both jams.\n\n",
        "cf_contest_id": 1278,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n6\r\n1 1 1 2 2 1 2 1 2 1 1 2\r\n2\r\n1 2 1 2\r\n3\r\n1 1 1 1 1 1\r\n2\r\n2 1 1 1\r\n",
                "6\r\n0\r\n6\r\n2\r\n"
            ]
        ],
        "private_cases": []
    }
]