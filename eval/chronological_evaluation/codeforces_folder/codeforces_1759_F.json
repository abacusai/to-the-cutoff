[
    {
        "name": "All Possible Digits",
        "description": "A positive number \n    x\n of length \n    n\n in base \n    p\n (\n    2 \n    \u2264 p\n    \n    \u2264 10^9\n) is written on the blackboard. The number \n    x\n is given as a\nsequence \n    a_1, a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i < p\n) \u2014 the digits of\n\n    x\n in order from left to right (most significant to least significant).\nDmitry is very fond of all the digits of this number system, so he wants to\nsee each of them at least once. In one operation, he can: take any number\n\n    x\n written on the board, increase it by \n    1\n, and write the new value\n\n    x + 1\n on the board. For example, \n    p=5\n and \n    x=234_5\n. Initially,\nthe board contains the digits \n    2\n, \n    3\n and \n    4\n; Dmitry increases\nthe number \n    234_5\n by \n    1\n and writes down the number \n    240_5\n. On\nthe board there are digits \n    0, 2, 3, 4\n; Dmitry increases the number\n\n    240_5\n by \n    1\n and writes down the number \n    241_5\n. Now the board\ncontains all the digits from \n    0\n to \n    4\n. Your task is to determine the\nminimum number of operations required to make all the digits from \n    0\n to\n\n    p-1\n appear on the board at least once. Input The first line of the input\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2 \n    \u00b7 10^3\n) \u2014 the\nnumber of test cases. The descriptions of the input test cases follow. The\nfirst line of description of each test case contains two integers \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 100\n) and \n    p\n (\n    2 \n    \u2264 p \n    \u2264 10^9\n) \u2014 the\nlength of the number and the base of the number system. The second line of the\ndescription of each test case contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    0 \n    \u2264 a_i < p\n) \u2014 digits of \n    x\n in number system with base\n\n    p\n It is guaranteed that the number \n    x\n does not contain leading\nzeros (that is, \n    a_1>0\n). Output For each test case print a single integer\n\u2014 the minimum number of operations required for Dmitry to get all the digits\non the board from \n    0\n to \n    p-1\n. It can be shown that this always\nrequires a finite number of operations. Example Input 11 2 3 1 2 4 2 1 1 1 1 6\n6 1 2 3 4 5 0 5 2 1 0 1 0 1 3 10 1 2 3 5 1000 4 1 3 2 5 3 5 2 3 4 4 4 3 2 3 0\n1 3 2 5 5 1 2 2 2 4 3 4 1 0 1 Output 1 1 0 0 7 995 2 1 1 1 2\n\n",
        "cf_contest_id": 1759,
        "cf_index": "F",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "greedy",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "11\r\n2 3\r\n1 2\r\n4 2\r\n1 1 1 1\r\n6 6\r\n1 2 3 4 5 0\r\n5 2\r\n1 0 1 0 1\r\n3 10\r\n1 2 3\r\n5 1000\r\n4 1 3 2 5\r\n3 5\r\n2 3 4\r\n4 4\r\n3 2 3 0\r\n1 3\r\n2\r\n5 5\r\n1 2 2 2 4\r\n3 4\r\n1 0 1\r\n",
                "1\r\n1\r\n0\r\n0\r\n7\r\n995\r\n2\r\n1\r\n1\r\n1\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n7 8\r\n7 7 7 7 7 7 7\r\n",
                "7\r\n"
            ]
        ]
    }
]