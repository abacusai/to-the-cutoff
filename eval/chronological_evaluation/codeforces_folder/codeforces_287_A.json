[
    {
        "name": "IQ Test",
        "description": "In the city of Ultima Thule job applicants are often offered an IQ test. The\ntest is as follows: the person gets a piece of squared paper with a 4 \u00d7 4\nsquare painted on it. Some of the square's cells are painted black and others\nare painted white. Your task is to repaint at most one cell the other color so\nthat the picture has a 2 \u00d7 2 square, completely consisting of cells of the\nsame color. If the initial picture already has such a square, the person\nshould just say so and the test will be completed. Your task is to write a\nprogram that determines whether it is possible to pass the test. You cannot\npass the test if either repainting any cell or no action doesn't result in a 2\n\u00d7 2 square, consisting of cells of the same color. Input Four lines contain\nfour characters each: the j-th character of the i-th line equals \".\" if the\ncell in the i-th row and the j-th column of the square is painted white, and\n\"#\", if the cell is black. Output Print \"YES\" (without the quotes), if the\ntest can be passed and \"NO\" (without the quotes) otherwise. Examples Input\n#### .#.. #### .... Output YES Input #### .... #### .... Output NO Note In the\nfirst test sample it is enough to repaint the first cell in the second row.\nAfter such repainting the required 2 \u00d7 2 square is on the intersection of the\n1-st and 2-nd row with the 1-st and 2-nd column.\n\n",
        "cf_contest_id": 287,
        "cf_index": "A",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "####\r\n.#..\r\n####\r\n....\r\n",
                "YES"
            ],
            [
                "####\r\n....\r\n####\r\n....\r\n",
                "NO"
            ]
        ],
        "private_cases": [
            [
                ".##.\r\n#..#\r\n.##.\r\n#..#\r\n",
                "NO"
            ],
            [
                ".#.#\r\n#.#.\r\n.#.#\r\n#.#.\r\n",
                "NO"
            ],
            [
                "##..\r\n..##\r\n##..\r\n..##\r\n",
                "NO"
            ],
            [
                "#.#.\r\n#.#.\r\n.#.#\r\n.#.#\r\n",
                "NO"
            ],
            [
                ".#.#\r\n#.#.\r\n#.#.\r\n#.#.\r\n",
                "NO"
            ],
            [
                ".#.#\r\n#.#.\r\n#.#.\r\n.#.#\r\n",
                "NO"
            ],
            [
                "#.#.\r\n#.#.\r\n#.#.\r\n#.#.\r\n",
                "NO"
            ],
            [
                ".#.#\r\n.#.#\r\n.#.#\r\n.#.#\r\n",
                "NO"
            ],
            [
                "#..#\r\n.##.\r\n####\r\n####\r\n",
                "YES"
            ],
            [
                "#.#.\r\n.###\r\n#.#.\r\n.###\r\n",
                "YES"
            ],
            [
                "#..#\r\n.##.\r\n.##.\r\n#..#\r\n",
                "YES"
            ],
            [
                ".##.\r\n.#..\r\n##.#\r\n#..#\r\n",
                "YES"
            ],
            [
                ".##.\r\n##..\r\n#..#\r\n..##\r\n",
                "YES"
            ],
            [
                "##..\r\n##..\r\n..##\r\n..##\r\n",
                "YES"
            ],
            [
                ".#..\r\n###.\r\n.#.#\r\n..#.\r\n",
                "YES"
            ],
            [
                "#.##\r\n##.#\r\n#.##\r\n##.#\r\n",
                "YES"
            ],
            [
                ".#.#\r\n#.#.\r\n.#.#\r\n#.##\r\n",
                "YES"
            ],
            [
                ".#..\r\n..##\r\n##..\r\n..##\r\n",
                "YES"
            ],
            [
                ".#..\r\n..#.\r\n.#..\r\n..#.\r\n",
                "YES"
            ]
        ]
    }
]