[
    {
        "name": "Roof Construction",
        "description": "It has finally been decided to build a roof over the football field in School\n179. Its construction will require placing \n    n\n consecutive vertical\npillars. Furthermore, the headmaster wants the heights of all the pillars to\nform a permutation \n    p\n of integers from \n    0\n to \n    n - 1\n, where\n\n    p_i\n is the height of the \n    i\n-th pillar from the left \n    (1 \n    \u2264 i\n    \n    \u2264 n)\n. As the chief, you know that the cost of construction of\nconsecutive pillars is equal to the maximum value of the bitwise XOR of\nheights of all pairs of adjacent pillars. In other words, the cost of\nconstruction is equal to \n    max\n    _1 \n    \u2264 i \n    \u2264 n - 1p_i\n    \n    \u2295 p_i + 1\n, where \n    \u2295\n denotes the bitwise XOR\noperation. Find any sequence of pillar heights \n    p\n of length \n    n\n with\nthe smallest construction cost. In this problem, a permutation is an array\nconsisting of \n    n\n distinct integers from \n    0\n to \n    n - 1\n in\narbitrary order. For example, \n    [2,3,1,0,4]\n is a permutation, but\n\n    [1,0,1]\n is not a permutation (\n    1\n appears twice in the array) and\n\n    [1,0,3]\n is also not a permutation (\n    n=3\n, but \n    3\n is in the\narray). Input Each test contains multiple test cases. The first line contains\nthe number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n). Description of\nthe test cases follows. The only line for each test case contains a single\ninteger \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of pillars\nfor the construction of the roof. It is guaranteed that the sum of \n    n\n\nover all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test\ncase print \n    n\n integers \n    p_1\n, \n    p_2\n, \n    \u2026\n, \n    p_n\n \u2014\nthe sequence of pillar heights with the smallest construction cost. If there\nare multiple answers, print any of them. Example Input 4 2 3 5 10 Output 0 1 2\n0 1 3 2 1 0 4 4 6 3 2 0 8 9 1 7 5 Note For \n    n = 2\n there are \n    2\n\nsequences of pillar heights: \n    [0, 1]\n \u2014 cost of construction is \n    0\n    \n    \u2295 1 = 1\n. \n    [1, 0]\n \u2014 cost of construction is \n    1 \n    \u2295 0 =\n    1\n. For \n    n = 3\n there are \n    6\n sequences of pillar heights: \n    [0, 1,\n    2]\n \u2014 cost of construction is \n    max(0 \n    \u2295 1, 1 \n    \u2295 2) =\n    \n    max(1, 3) = 3\n. \n    [0, 2, 1]\n \u2014 cost of construction is \n    max(0\n    \n    \u2295 2, 2 \n    \u2295 1) = \n    max(2, 3) = 3\n. \n    [1, 0, 2]\n \u2014 cost of\nconstruction is \n    max(1 \n    \u2295 0, 0 \n    \u2295 2) = \n    max(1, 2) = 2\n.\n\n    [1, 2, 0]\n \u2014 cost of construction is \n    max(1 \n    \u2295 2, 2 \n    \u2295\n    0) = \n    max(3, 2) = 3\n. \n    [2, 0, 1]\n \u2014 cost of construction is\n\n    max(2 \n    \u2295 0, 0 \n    \u2295 1) = \n    max(2, 1) = 2\n. \n    [2, 1, 0]\n \u2014\ncost of construction is \n    max(2 \n    \u2295 1, 1 \n    \u2295 0) = \n    max(3, 1) =\n    3\n.\n\n",
        "cf_contest_id": 1632,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "constructive algorithms"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2\r\n3\r\n5\r\n10\r\n",
                "0 1\r\n1 0 2\r\n3 2 1 0 4\r\n7 6 5 4 3 2 1 0 8 9\r\n"
            ]
        ],
        "private_cases": []
    }
]