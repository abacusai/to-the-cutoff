[
    {
        "name": "News Distribution",
        "description": "In some social network, there are \n    n\n users communicating with each other\nin \n    m\n groups of friends. Let's analyze the process of distributing some\nnews between users. Initially, some user \n    x\n receives the news from some\nsource. Then he or she sends the news to his or her friends (two users are\nfriends if there is at least one group such that both of them belong to this\ngroup). Friends continue sending the news to their friends, and so on. The\nprocess ends when there is no pair of friends such that one of them knows the\nnews, and another one doesn't know. For each user \n    x\n you have to\ndetermine what is the number of users that will know the news if initially\nonly user \n    x\n starts distributing it. Input The first line contains two\nintegers \n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 5 \n    \u00b7 10^5\n) \u2014 the\nnumber of users and the number of groups of friends, respectively. Then\n\n    m\n lines follow, each describing a group of friends. The \n    i\n-th line\nbegins with integer \n    k_i\n (\n    0 \n    \u2264 k_i \n    \u2264 n\n) \u2014 the number of\nusers in the \n    i\n-th group. Then \n    k_i\n distinct integers follow,\ndenoting the users belonging to the \n    i\n-th group. It is guaranteed that\n\n    \u2211\n    _i = 1^m k_i \n    \u2264 5 \n    \u00b7 10^5\n. Output Print\n\n    n\n integers. The \n    i\n-th integer should be equal to the number of\nusers that will know the news if user \n    i\n starts distributing it. Example\nInput 7 5 3 2 5 4 0 2 1 2 1 1 2 6 7 Output 4 4 1 4 4 2 2\n\n",
        "cf_contest_id": 1167,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 5\r\n3 2 5 4\r\n0\r\n2 1 2\r\n1 1\r\n2 6 7\r\n",
                "4 4 1 4 4 2 2 "
            ]
        ],
        "private_cases": [
            [
                "7 2\r\n0\r\n0\r\n",
                "1 1 1 1 1 1 1 "
            ]
        ]
    }
]