[
    {
        "name": "Polycarp and Coins",
        "description": "Polycarp must pay exactly \n    n\n burles at the checkout. He has coins of two\nnominal values: \n    1\n burle and \n    2\n burles. Polycarp likes both kinds of\ncoins equally. So he doesn't want to pay with more coins of one type than with\nthe other. Thus, Polycarp wants to minimize the difference between the count\nof coins of \n    1\n burle and \n    2\n burles being used. Help him by\ndetermining two non-negative integer values \n    c_1\n and \n    c_2\n which are\nthe number of coins of \n    1\n burle and \n    2\n burles, respectively, so that\nthe total value of that number of coins is exactly \n    n\n (i. e. \n    c_1 + 2\n    \n    \u00b7 c_2 = n\n), and the absolute value of the difference between\n\n    c_1\n and \n    c_2\n is as little as possible (i. e. you must minimize\n\n    |c_1-c_2|\n). Input The first line contains one integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. Then \n    t\n test cases\nfollow. Each test case consists of one line. This line contains one integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^9\n) \u2014 the number of burles to be paid by\nPolycarp. Output For each test case, output a separate line containing two\nintegers \n    c_1\n and \n    c_2\n (\n    c_1, c_2 \n    \u2265 0\n) separated by a space\nwhere \n    c_1\n is the number of coins of \n    1\n burle and \n    c_2\n is the\nnumber of coins of \n    2\n burles. If there are multiple optimal solutions,\nprint any one. Example Input 6 1000 30 1 32 1000000000 5 Output 334 333 10 10\n1 0 10 11 333333334 333333333 1 2 Note The answer for the first test case is\n\"334 333\". The sum of the nominal values of all coins is \n    334 \n    \u00b7 1 +\n    333 \n    \u00b7 2 = 1000\n, whereas \n    |334 - 333| = 1\n. One can't get the\nbetter value because if \n    |c_1 - c_2| = 0\n, then \n    c_1 = c_2\n and \n    c_1\n    \n    \u00b7 1 + c_1 \n    \u00b7 2 = 1000\n, but then the value of \n    c_1\n isn't an\ninteger. The answer for the second test case is \"10 10\". The sum of the\nnominal values is \n    10 \n    \u00b7 1 + 10 \n    \u00b7 2 = 30\n and \n    |10 - 10| =\n    0\n, whereas there's no number having an absolute value less than \n    0\n.\n\n",
        "cf_contest_id": 1551,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1000\r\n30\r\n1\r\n32\r\n1000000000\r\n5\r\n",
                "334 333\r\n10 10\r\n1 0\r\n10 11\r\n333333334 333333333\r\n1 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n10111\r\n",
                "3371 3370\r\n"
            ],
            [
                "1\r\n3000002\r\n",
                "1000000 1000001\r\n"
            ],
            [
                "2\r\n3000002\r\n3000001\r\n",
                "1000000 1000001\r\n1000001 1000000\r\n"
            ],
            [
                "1\r\n10555\r\n",
                "3519 3518\r\n"
            ]
        ]
    }
]