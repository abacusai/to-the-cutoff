[
    {
        "name": "Kingdom and its Cities",
        "description": "Meanwhile, the kingdom of K is getting ready for the marriage of the King's\ndaughter. However, in order not to lose face in front of the relatives, the\nKing should first finish reforms in his kingdom. As the King can not wait for\nhis daughter's marriage, reforms must be finished as soon as possible. The\nkingdom currently consists of n cities. Cities are connected by n - 1\nbidirectional road, such that one can get from any city to any other city. As\nthe King had to save a lot, there is only one path between any two cities.\nWhat is the point of the reform? The key ministries of the state should be\nrelocated to distinct cities (we call such cities important). However, due to\nthe fact that there is a high risk of an attack by barbarians it must be done\ncarefully. The King has made several plans, each of which is described by a\nset of important cities, and now wonders what is the best plan. Barbarians can\ncapture some of the cities that are not important (the important ones will\nhave enough protection for sure), after that the captured city becomes\nimpassable. In particular, an interesting feature of the plan is the minimum\nnumber of cities that the barbarians need to capture in order to make all the\nimportant cities isolated, that is, from all important cities it would be\nimpossible to reach any other important city. Help the King to calculate this\ncharacteristic for each of his plan. Input The first line of the input\ncontains integer n (1 \u2264 n \u2264 100 000) \u2014 the number of cities in the kingdom.\nEach of the next n - 1 lines contains two distinct integers ui, vi (1 \u2264 ui, vi\n\u2264 n) \u2014 the indices of the cities connected by the i-th road. It is guaranteed\nthat you can get from any city to any other one moving only along the existing\nroads. The next line contains a single integer q (1 \u2264 q \u2264 100 000) \u2014 the\nnumber of King's plans. Each of the next q lines looks as follows: first goes\nnumber ki \u2014 the number of important cities in the King's plan, (1 \u2264 ki \u2264 n),\nthen follow exactly ki space-separated pairwise distinct numbers from 1 to n \u2014\nthe numbers of important cities in this plan. The sum of all ki's does't\nexceed 100 000. Output For each plan print a single integer \u2014 the minimum\nnumber of cities that the barbarians need to capture, or print - 1 if all the\nbarbarians' attempts to isolate important cities will not be effective.\nExamples Input 4 1 3 2 3 4 3 4 2 1 2 3 2 3 4 3 1 2 4 4 1 2 3 4 Output 1 -1 1\n-1 Input 7 1 2 2 3 3 4 1 5 5 6 5 7 1 4 2 4 6 7 Output 2 Note In the first\nsample, in the first and the third King's plan barbarians can capture the city\n3, and that will be enough. In the second and the fourth plans all their\nattempts will not be effective. In the second sample the cities to capture are\n3 and 5.\n\n",
        "cf_contest_id": 613,
        "cf_index": "D",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "divide and conquer",
            "dp",
            "graphs",
            "sortings",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 3\r\n2 3\r\n4 3\r\n4\r\n2 1 2\r\n3 2 3 4\r\n3 1 2 4\r\n4 1 2 3 4\r\n",
                "1\r\n-1\r\n1\r\n-1\r\n"
            ],
            [
                "7\r\n1 2\r\n2 3\r\n3 4\r\n1 5\r\n5 6\r\n5 7\r\n1\r\n4 2 4 6 7\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n5\r\n4 1 3 5 7\r\n3 2 4 6\r\n2 1 7\r\n2 3 4\r\n3 1 6 7\r\n",
                "3\r\n2\r\n1\r\n-1\r\n-1\r\n"
            ],
            [
                "30\r\n1 2\r\n1 3\r\n1 4\r\n2 5\r\n2 6\r\n2 7\r\n4 8\r\n4 9\r\n6 10\r\n6 11\r\n11 30\r\n11 23\r\n30 24\r\n30 25\r\n25 26\r\n25 27\r\n27 29\r\n27 28\r\n23 20\r\n23 22\r\n20 21\r\n20 19\r\n3 12\r\n3 13\r\n13 14\r\n13 15\r\n15 16\r\n15 17\r\n15 18\r\n2\r\n6 17 25 20 5 9 13\r\n10 2 4 3 14 16 18 22 29 30 19\r\n",
                "3\r\n6\r\n"
            ],
            [
                "4\r\n1 2\r\n2 3\r\n1 4\r\n1\r\n3 1 3 4\r\n",
                "-1\r\n"
            ]
        ]
    }
]