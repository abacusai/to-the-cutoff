[
    {
        "name": "Maximum Absurdity",
        "description": "Reforms continue entering Berland. For example, during yesterday sitting the\nBerland Parliament approved as much as n laws (each law has been assigned a\nunique number from 1 to n). Today all these laws were put on the table of the\nPresident of Berland, G.W. Boosch, to be signed. This time mr. Boosch plans to\nsign 2k laws. He decided to choose exactly two non-intersecting segments of\nintegers from 1 to n of length k and sign all laws, whose numbers fall into\nthese segments. More formally, mr. Boosch is going to choose two integers a, b\n(1 \u2264 a \u2264 b \u2264 n - k + 1, b - a \u2265 k) and sign all laws with numbers lying in the\nsegments [a; a + k - 1] and [b; b + k - 1] (borders are included). As mr.\nBoosch chooses the laws to sign, he of course considers the public opinion.\nAllberland Public Opinion Study Centre (APOSC) conducted opinion polls among\nthe citizens, processed the results into a report and gave it to the\npresident. The report contains the absurdity value for each law, in the public\nopinion. As mr. Boosch is a real patriot, he is keen on signing the laws with\nthe maximum total absurdity. Help him. Input The first line contains two\nintegers n and k (2 \u2264 n \u2264 2\u00b710^5, 0 < 2k \u2264 n) \u2014 the number of laws accepted by\nthe parliament and the length of one segment in the law list, correspondingly.\nThe next line contains n integers x1, x2, ..., xn \u2014 the absurdity of each law\n(1 \u2264 xi \u2264 10^9). Output Print two integers a, b \u2014 the beginning of segments\nthat mr. Boosch should choose. That means that the president signs laws with\nnumbers from segments [a; a + k - 1] and [b; b + k - 1]. If there are multiple\nsolutions, print the one with the minimum number a. If there still are\nmultiple solutions, print the one with the minimum b. Examples Input 5 2 3 6 1\n1 6 Output 1 4 Input 6 2 1 1 1 1 1 1 Output 1 3 Note In the first sample mr.\nBoosch signs laws with numbers from segments [1;2] and [4;5]. The total\nabsurdity of the signed laws equals 3 + 6 + 1 + 6 = 16. In the second sample\nmr. Boosch signs laws with numbers from segments [1;2] and [3;4]. The total\nabsurdity of the signed laws equals 1 + 1 + 1 + 1 = 4.\n\n",
        "cf_contest_id": 332,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 2\r\n3 6 1 1 6\r\n",
                "1 4\r\n"
            ],
            [
                "6 2\r\n1 1 1 1 1 1\r\n",
                "1 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "6 2\r\n1 4 1 2 5 6\r\n",
                "1 5\r\n"
            ],
            [
                "4 1\r\n1 2 2 2\r\n",
                "2 3\r\n"
            ],
            [
                "6 3\r\n15 20 1 15 43 6\r\n",
                "1 4\r\n"
            ],
            [
                "12 3\r\n1 2 1 15 2 3 6 8 3 3 8 6\r\n",
                "4 7\r\n"
            ],
            [
                "14 2\r\n2 1 2 3 1 2 2 3 1 2 2 3 2 3\r\n",
                "3 7\r\n"
            ],
            [
                "2 1\r\n1 1\r\n",
                "1 2\r\n"
            ],
            [
                "2 1\r\n1000000000 999999999\r\n",
                "1 2\r\n"
            ],
            [
                "3 1\r\n100 30 563\r\n",
                "1 3\r\n"
            ],
            [
                "3 1\r\n547468 78578678 6467834\r\n",
                "2 3\r\n"
            ],
            [
                "4 1\r\n90000 34567 90000 90001\r\n",
                "1 4\r\n"
            ],
            [
                "4 2\r\n999999 8888888 7777777 666666\r\n",
                "1 3\r\n"
            ],
            [
                "5 1\r\n2 1 2 1 2\r\n",
                "1 3\r\n"
            ],
            [
                "5 2\r\n98 96 98 96 96\r\n",
                "1 3\r\n"
            ],
            [
                "6 2\r\n4 4 7 1 1 7\r\n",
                "2 5\r\n"
            ],
            [
                "98 24\r\n91 20 12 75 44 22 22 67 28 100 8 41 31 47 95 87 5 54 7 49 32 46 42 37 45 22 29 15 54 98 46 94 69 47 60 1 15 76 17 82 46 22 32 34 91 37 30 26 92 77 69 11 59 78 24 66 88 15 32 49 46 14 57 20 5 69 53 99 81 70 67 22 54 31 49 52 46 51 46 2 53 59 8 66 28 53 54 5 85 75 15 55 87 16 68 6 36 98\r\n",
                "30 67\r\n"
            ],
            [
                "6 3\r\n1 2 2 2 1 1\r\n",
                "1 4\r\n"
            ],
            [
                "10 4\r\n9 3 3 9 1 9 9 4 4 9\r\n",
                "1 6\r\n"
            ],
            [
                "7 3\r\n1 2 5 5 5 5 5\r\n",
                "2 5\r\n"
            ]
        ]
    }
]