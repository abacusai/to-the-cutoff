[
    {
        "name": "The Shortest Statement",
        "description": "You are given a weighed undirected connected graph, consisting of \n    n\n\nvertices and \n    m\n edges. You should answer \n    q\n queries, the \n    i\n-th\nquery is to find the shortest distance between vertices \n    u_i\n and\n\n    v_i\n. Input The first line contains two integers \n    n\n and \n    m\u00a0(1\n    \n    \u2264 n, m \n    \u2264 10^5, m - n \n    \u2264 20)\n \u2014 the number of vertices and edges\nin the graph. Next \n    m\n lines contain the edges: the \n    i\n-th edge is a\ntriple of integers \n    v_i, u_i, d_i\u00a0(1 \n    \u2264 u_i, v_i \n    \u2264 n, 1 \n    \u2264 d_i\n    \n    \u2264 10^9, u_i \n    \u2260 v_i)\n. This triple means that there is an edge\nbetween vertices \n    u_i\n and \n    v_i\n of weight \n    d_i\n. It is guaranteed\nthat graph contains no self-loops and multiple edges. The next line contains a\nsingle integer \n    q\u00a0(1 \n    \u2264 q \n    \u2264 10^5)\n \u2014 the number of queries. Each of\nthe next \n    q\n lines contains two integers \n    u_i\n and \n    v_i\u00a0(1 \n    \u2264\n    u_i, v_i \n    \u2264 n)\n \u2014 descriptions of the queries. Pay attention to the\nrestriction \n    m - n \u00a0\n    \u2264\u00a0 20\n. Output Print \n    q\n lines. The\n\n    i\n-th line should contain the answer to the \n    i\n-th query \u2014 the\nshortest distance between vertices \n    u_i\n and \n    v_i\n. Examples Input 3 3\n1 2 3 2 3 1 3 1 5 3 1 2 1 3 2 3 Output 3 4 1 Input 8 13 1 2 4 2 3 6 3 4 1 4 5\n12 5 6 3 6 7 8 7 8 7 1 4 1 1 8 3 2 6 9 2 7 1 4 6 3 6 8 2 8 1 5 1 7 2 3 2 8 3 7\n3 4 6 8 7 8 Output 7 5 6 7 7 1 2 7\n\n",
        "cf_contest_id": 1051,
        "cf_index": "F",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "graphs",
            "shortest paths",
            "trees"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n1 2 3\r\n2 3 1\r\n3 1 5\r\n3\r\n1 2\r\n1 3\r\n2 3\r\n",
                "3\r\n4\r\n1\r\n"
            ],
            [
                "8 13\r\n1 2 4\r\n2 3 6\r\n3 4 1\r\n4 5 12\r\n5 6 3\r\n6 7 8\r\n7 8 7\r\n1 4 1\r\n1 8 3\r\n2 6 9\r\n2 7 1\r\n4 6 3\r\n6 8 2\r\n8\r\n1 5\r\n1 7\r\n2 3\r\n2 8\r\n3 7\r\n3 4\r\n6 8\r\n7 8\r\n",
                "7\r\n5\r\n6\r\n7\r\n7\r\n1\r\n2\r\n7\r\n"
            ]
        ],
        "private_cases": []
    }
]