[
    {
        "name": "Character Swap (Easy Version)",
        "description": "This problem is different from the hard version. In this version Ujan makes\nexactly one exchange. You can hack this problem only if you solve both\nproblems. After struggling and failing many times, Ujan decided to try to\nclean up his house again. He decided to get his strings in order first. Ujan\nhas two distinct strings \n    s\n and \n    t\n of length \n    n\n consisting of\nonly of lowercase English characters. He wants to make them equal. Since Ujan\nis lazy, he will perform the following operation exactly once: he takes two\npositions \n    i\n and \n    j\n (\n    1 \n    \u2264 i,j \n    \u2264 n\n, the values \n    i\n\nand \n    j\n can be equal or different), and swaps the characters \n    s_i\n and\n\n    t_j\n. Can he succeed? Note that he has to perform this operation exactly\nonce. He has to perform this operation. Input The first line contains a single\ninteger \n    k\n (\n    1 \n    \u2264 k \n    \u2264 10\n), the number of test cases. For\neach of the test cases, the first line contains a single integer \n    n\n (\n    2\n    \n    \u2264 n \n    \u2264 10^4\n), the length of the strings \n    s\n and \n    t\n. Each\nof the next two lines contains the strings \n    s\n and \n    t\n, each having\nlength exactly \n    n\n. The strings consist only of lowercase English letters.\nIt is guaranteed that strings are different. Output For each test case, output\n\"Yes\" if Ujan can make the two strings equal and \"No\" otherwise. You can print\neach letter in any case (upper or lower). Example Input 4 5 souse houhe 3 cat\ndog 2 aa az 3 abc bca Output Yes No No No Note In the first test case, Ujan\ncan swap characters \n    s_1\n and \n    t_4\n, obtaining the word \"house\". In\nthe second test case, it is not possible to make the strings equal using\nexactly one swap of \n    s_i\n and \n    t_j\n.\n\n",
        "cf_contest_id": 1243,
        "cf_index": "B1",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5\r\nsouse\r\nhouhe\r\n3\r\ncat\r\ndog\r\n2\r\naa\r\naz\r\n3\r\nabc\r\nbca\r\n",
                "Yes\r\nNo\r\nNo\r\nNo\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n11\r\nartiovnldnp\r\nartiovsldsp\r\n2\r\naa\r\nzz\r\n2\r\naa\r\nxy\r\n2\r\nab\r\nba\r\n2\r\nza\r\nzz\r\n3\r\nabc\r\nbca\r\n16\r\naajjhdsjfdsfkadf\r\naajjhjsjfdsfkajf\r\n2\r\nix\r\nii\r\n2\r\noo\r\nqo\r\n2\r\npp\r\npa\r\n",
                "Yes\r\nYes\r\nNo\r\nNo\r\nNo\r\nNo\r\nYes\r\nNo\r\nNo\r\nNo\r\n"
            ],
            [
                "1\r\n2\r\nab\r\ncd\r\n",
                "No\r\n"
            ],
            [
                "1\r\n4\r\naacd\r\nbbdc\r\n",
                "No\r\n"
            ],
            [
                "1\r\n4\r\naabb\r\ncccc\r\n",
                "No\r\n"
            ],
            [
                "1\r\n2\r\nab\r\ncc\r\n",
                "No\r\n"
            ]
        ]
    }
]