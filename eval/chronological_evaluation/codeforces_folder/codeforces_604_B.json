[
    {
        "name": "More Cowbell",
        "description": "Kevin Sun wants to move his precious collection of n cowbells from Naperthrill\nto Exeter, where there is actually grass instead of corn. Before moving, he\nmust pack his cowbells into k boxes of a fixed size. In order to keep his\ncollection safe during transportation, he won't place more than two cowbells\ninto a single box. Since Kevin wishes to minimize expenses, he is curious\nabout the smallest size box he can use to pack his entire collection. Kevin is\na meticulous cowbell collector and knows that the size of his i-th (1 \u2264 i \u2264 n)\ncowbell is an integer si. In fact, he keeps his cowbells sorted by size, so si\n- 1 \u2264 si for any i > 1. Also an expert packer, Kevin can fit one or two\ncowbells into a box of size s if and only if the sum of their sizes does not\nexceed s. Given this information, help Kevin determine the smallest s for\nwhich it is possible to put all of his cowbells into k boxes of size s. Input\nThe first line of the input contains two space-separated integers n and k (1 \u2264\nn \u2264 2\u00b7k \u2264 100 000), denoting the number of cowbells and the number of boxes,\nrespectively. The next line contains n space-separated integers s1, s2, ...,\nsn (1 \u2264 s1 \u2264 s2 \u2264 ... \u2264 sn \u2264 1 000 000), the sizes of Kevin's cowbells. It is\nguaranteed that the sizes si are given in non-decreasing order. Output Print a\nsingle integer, the smallest s for which it is possible for Kevin to put all\nof his cowbells into k boxes of size s. Examples Input 2 1 2 5 Output 7 Input\n4 3 2 3 5 9 Output 9 Input 3 2 3 5 7 Output 8 Note In the first sample, Kevin\nmust pack his two cowbells into the same box. In the second sample, Kevin can\npack together the following sets of cowbells: 2, 3, 5 and 9. In the\nthird sample, the optimal solution is 3, 5 and 7.\n\n",
        "cf_contest_id": 604,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1\r\n2 5\r\n",
                "7\r\n"
            ],
            [
                "4 3\r\n2 3 5 9\r\n",
                "9\r\n"
            ],
            [
                "3 2\r\n3 5 7\r\n",
                "8\r\n"
            ]
        ],
        "private_cases": [
            [
                "20 11\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "2\r\n"
            ],
            [
                "10 10\r\n3 15 31 61 63 63 68 94 98 100\r\n",
                "100\r\n"
            ],
            [
                "100 97\r\n340 402 415 466 559 565 649 689 727 771 774 776 789 795 973 1088 1212 1293 1429 1514 1587 1599 1929 1997 2278 2529 2656 2677 2839 2894 2951 3079 3237 3250 3556 3568 3569 3578 3615 3641 3673 3892 4142 4418 4515 4766 4846 4916 5225 5269 5352 5460 5472 5635 5732 5886 5941 5976 5984 6104 6113 6402 6409 6460 6550 6563 6925 7006 7289 7401 7441 7451 7709 7731 7742 7750 7752 7827 8101 8154 8376 8379 8432 8534 8578 8630 8706 8814 8882 8972 9041 9053 9109 9173 9473 9524 9547 9775 9791 9983\r\n",
                "9983\r\n"
            ],
            [
                "10 9\r\n7 29 35 38 41 47 54 56 73 74\r\n",
                "74\r\n"
            ],
            [
                "1 2342\r\n12345\r\n",
                "12345\r\n"
            ],
            [
                "10 5\r\n15 15 20 28 38 44 46 52 69 94\r\n",
                "109\r\n"
            ],
            [
                "10 9\r\n6 10 10 32 36 38 69 80 82 93\r\n",
                "93\r\n"
            ],
            [
                "10 10\r\n4 19 22 24 25 43 49 56 78 88\r\n",
                "88\r\n"
            ],
            [
                "100 89\r\n474 532 759 772 803 965 1043 1325 1342 1401 1411 1452 1531 1707 1906 1928 2034 2222 2335 2606 2757 2968 2978 3211 3513 3734 3772 3778 3842 3948 3976 4038 4055 4113 4182 4267 4390 4408 4478 4595 4668 4792 4919 5133 5184 5255 5312 5341 5476 5628 5683 5738 5767 5806 5973 6051 6134 6254 6266 6279 6314 6342 6599 6676 6747 6777 6827 6842 7057 7097 7259 7340 7378 7405 7510 7520 7698 7796 8148 8351 8507 8601 8805 8814 8826 8978 9116 9140 9174 9338 9394 9403 9407 9423 9429 9519 9764 9784 9838 9946\r\n",
                "9946\r\n"
            ],
            [
                "100 74\r\n10 211 323 458 490 592 979 981 1143 1376 1443 1499 1539 1612 1657 1874 2001 2064 2123 2274 2346 2471 2522 2589 2879 2918 2933 2952 3160 3164 3167 3270 3382 3404 3501 3522 3616 3802 3868 3985 4007 4036 4101 4580 4687 4713 4714 4817 4955 5257 5280 5343 5428 5461 5566 5633 5727 5874 5925 6233 6309 6389 6500 6701 6731 6847 6916 7088 7088 7278 7296 7328 7564 7611 7646 7887 7887 8065 8075 8160 8300 8304 8316 8355 8404 8587 8758 8794 8890 9038 9163 9235 9243 9339 9410 9587 9868 9916 9923 9986\r\n",
                "9986\r\n"
            ],
            [
                "100 61\r\n82 167 233 425 432 456 494 507 562 681 683 921 1218 1323 1395 1531 1586 1591 1675 1766 1802 1842 2116 2625 2697 2735 2739 3337 3349 3395 3406 3596 3610 3721 4059 4078 4305 4330 4357 4379 4558 4648 4651 4784 4819 4920 5049 5312 5361 5418 5440 5463 5547 5594 5821 5951 5972 6141 6193 6230 6797 6842 6853 6854 7017 7026 7145 7322 7391 7460 7599 7697 7756 7768 7872 7889 8094 8215 8408 8440 8462 8714 8756 8760 8881 9063 9111 9184 9281 9373 9406 9417 9430 9511 9563 9634 9660 9788 9883 9927\r\n",
                "9927\r\n"
            ],
            [
                "100 84\r\n53 139 150 233 423 570 786 861 995 1017 1072 1196 1276 1331 1680 1692 1739 1748 1826 2067 2280 2324 2368 2389 2607 2633 2760 2782 2855 2996 3030 3093 3513 3536 3557 3594 3692 3707 3823 3832 4009 4047 4088 4095 4408 4537 4565 4601 4784 4878 4935 5029 5252 5322 5389 5407 5511 5567 5857 6182 6186 6198 6280 6290 6353 6454 6458 6567 6843 7166 7216 7257 7261 7375 7378 7539 7542 7762 7771 7797 7980 8363 8606 8612 8663 8801 8808 8823 8918 8975 8997 9240 9245 9259 9356 9755 9759 9760 9927 9970\r\n",
                "9970\r\n"
            ],
            [
                "100 50\r\n130 248 312 312 334 589 702 916 921 1034 1047 1346 1445 1500 1585 1744 1951 2123 2273 2362 2400 2455 2496 2530 2532 2944 3074 3093 3094 3134 3698 3967 4047 4102 4109 4260 4355 4466 4617 4701 4852 4892 4915 4917 4936 4981 4999 5106 5152 5203 5214 5282 5412 5486 5525 5648 5897 5933 5969 6251 6400 6421 6422 6558 6805 6832 6908 6924 6943 6980 7092 7206 7374 7417 7479 7546 7672 7756 7973 8020 8028 8079 8084 8085 8137 8153 8178 8239 8639 8667 8829 9263 9333 9370 9420 9579 9723 9784 9841 9993\r\n",
                "11103\r\n"
            ],
            [
                "100 50\r\n156 182 208 409 496 515 659 761 772 794 827 912 1003 1236 1305 1388 1412 1422 1428 1465 1613 2160 2411 2440 2495 2684 2724 2925 3033 3035 3155 3260 3378 3442 3483 3921 4031 4037 4091 4113 4119 4254 4257 4442 4559 4614 4687 4839 4896 5054 5246 5316 5346 5859 5928 5981 6148 6250 6422 6433 6448 6471 6473 6485 6503 6779 6812 7050 7064 7074 7141 7378 7424 7511 7574 7651 7808 7858 8286 8291 8446 8536 8599 8628 8636 8768 8900 8981 9042 9055 9114 9146 9186 9411 9480 9590 9681 9749 9757 9983\r\n",
                "10676\r\n"
            ],
            [
                "100 50\r\n145 195 228 411 577 606 629 775 1040 1040 1058 1187 1307 1514 1784 1867 1891 2042 2042 2236 2549 2555 2560 2617 2766 2807 2829 2917 3070 3072 3078 3095 3138 3147 3149 3196 3285 3287 3309 3435 3531 3560 3563 3769 3830 3967 4081 4158 4315 4387 4590 4632 4897 4914 5128 5190 5224 5302 5402 5416 5420 5467 5517 5653 5820 5862 5941 6053 6082 6275 6292 6316 6490 6530 6619 6632 6895 7071 7234 7323 7334 7412 7626 7743 8098 8098 8136 8158 8264 8616 8701 8718 8770 8803 8809 8983 9422 9530 9811 9866\r\n",
                "10011\r\n"
            ],
            [
                "100 50\r\n56 298 387 456 518 532 589 792 870 1041 1055 1122 1141 1166 1310 1329 1523 1548 1626 1730 1780 1833 1850 1911 2006 2157 2303 2377 2403 2442 2450 2522 2573 2822 2994 3200 3238 3252 3280 3311 3345 3422 3429 3506 3526 3617 3686 3791 4134 4467 4525 4614 4633 4792 5017 5220 5243 5338 5445 5536 5639 5675 5763 5875 6129 6220 6228 6287 6385 6616 6789 6822 6940 6959 6985 7297 7304 7391 7443 7580 7824 7884 7981 8055 8063 8223 8280 8322 8346 8473 8688 8986 9087 9323 9477 9489 9518 9621 9699 9804\r\n",
                "10009\r\n"
            ],
            [
                "100 49990\r\n221 257 543 613 818 855 884 1195 1233 1293 1327 1474 1567 1568 1728 1789 1809 1957 1994 2198 2217 2289 2298 2360 2441 2454 2517 2519 2597 2652 2909 2958 2970 3271 3310 3409 3450 3646 3950 3965 4016 4116 4134 4159 4462 4624 4631 4783 4804 5031 5276 5538 5729 5845 5880 5894 5959 5961 6028 6105 6184 6335 6370 6523 6532 6677 6762 6868 6998 7066 7245 7360 7490 7492 7645 7677 7786 7804 8038 8131 8207 8400 8507 8556 8575 8599 8673 8676 8712 8816 9123 9158 9216 9369 9628 9707 9768 9800 9876 9934\r\n",
                "9934\r\n"
            ],
            [
                "1 50000\r\n2\r\n",
                "2\r\n"
            ],
            [
                "1 40000\r\n23456\r\n",
                "23456\r\n"
            ],
            [
                "1 2\r\n10\r\n",
                "10\r\n"
            ],
            [
                "1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "2 2\r\n2 3\r\n",
                "3\r\n"
            ],
            [
                "4 2\r\n1 2 8 9\r\n",
                "10\r\n"
            ]
        ]
    }
]