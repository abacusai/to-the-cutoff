[
    {
        "name": "Rectangular Polyline",
        "description": "One drew a closed polyline on a plane, that consisted only of vertical and\nhorizontal segments (parallel to the coordinate axes). The segments alternated\nbetween horizontal and vertical ones (a horizontal segment was always followed\nby a vertical one, and vice versa). The polyline did not contain strict self-\nintersections, which means that in case any two segments shared a common\npoint, that point was an endpoint for both of them (please consult the\nexamples in the notes section). Unfortunately, the polyline was erased, and\nyou only know the lengths of the horizonal and vertical segments. Please\nconstruct any polyline matching the description with such segments, or\ndetermine that it does not exist. Input The first line contains one integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 200\n) \u2014the number of test cases. The first\nline of each test case contains one integer \n    h\n (\n    1 \n    \u2264 h \n    \u2264\n    1000\n) \u2014 the number of horizontal segments. The following line contains\n\n    h\n integers \n    l_1, l_2, \n    \u2026, l_h\n (\n    1 \n    \u2264 l_i \n    \u2264 1000\n)\n\u2014 lengths of the horizontal segments of the polyline, in arbitrary order. The\nfollowing line contains an integer \n    v\n (\n    1 \n    \u2264 v \n    \u2264 1000\n) \u2014\nthe number of vertical segments, which is followed by a line containing\n\n    v\n integers \n    p_1, p_2, \n    \u2026, p_v\n (\n    1 \n    \u2264 p_i \n    \u2264 1000\n)\n\u2014 lengths of the vertical segments of the polyline, in arbitrary order. Test\ncases are separated by a blank line, and the sum of values \n    h + v\n over\nall test cases does not exceed \n    1000\n. Output For each test case output\nYes, if there exists at least one polyline satisfying the requirements, or No\notherwise. If it does exist, in the following \n    n\n lines print the\ncoordinates of the polyline vertices, in order of the polyline traversal: the\n\n    i\n-th line should contain two integers \n    x_i\n and \n    y_i\n \u2014\ncoordinates of the \n    i\n-th vertex. Note that, each polyline segment must be\neither horizontal or vertical, and the segments should alternate between\nhorizontal and vertical. The coordinates should not exceed \n    10^9\n by their\nabsolute value. Examples Input 2 2 1 1 2 1 1 2 1 2 2 3 3 Output Yes 1 0 1 1 0\n1 0 0 No Input 2 4 1 1 1 1 4 1 1 1 1 3 2 1 1 3 2 1 1 Output Yes 1 0 1 1 2 1 2\n2 1 2 1 1 0 1 0 0 Yes 0 -2 2 -2 2 -1 1 -1 1 0 0 0 Input 2 4 1 4 1 2 4 3 4 5 12\n4 1 2 3 6 2 1 3 Output Yes 2 0 2 3 3 3 3 7 4 7 4 12 0 12 0 0 No Note In the\nfirst test case of the first example, the answer is Yes \u2014 for example, the\nfollowing picture illustrates a square that satisfies the requirements: In the\nfirst test case of the second example, the desired polyline also exists. Note\nthat, the polyline contains self-intersections, but only in the endpoints: In\nthe second test case of the second example, the desired polyline could be like\nthe one below: Note that the following polyline is not a valid one, since it\ncontains self-intersections that are not endpoints for some of the segments:\n\n",
        "cf_contest_id": 1444,
        "cf_index": "D",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dp",
            "geometry"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n2\r\n1 1\r\n2\r\n1 1\r\n\r\n2\r\n1 2\r\n2\r\n3 3\r\n",
                "Yes\r\n1 0\r\n1 -1\r\n0 -1\r\n0 0\r\nNo\r\n"
            ],
            [
                "2\r\n4\r\n1 1 1 1\r\n4\r\n1 1 1 1\r\n\r\n3\r\n2 1 1\r\n3\r\n2 1 1\r\n",
                "Yes\r\n1 0\r\n1 -1\r\n2 -1\r\n2 -2\r\n1 -2\r\n1 -1\r\n0 -1\r\n0 0\r\nYes\r\n2 0\r\n2 -1\r\n1 -1\r\n1 -2\r\n0 -2\r\n0 0\r\n"
            ],
            [
                "2\r\n4\r\n1 4 1 2\r\n4\r\n3 4 5 12\r\n\r\n4\r\n1 2 3 6\r\n2\r\n1 3\r\n",
                "Yes\r\n4 0\r\n4 -3\r\n2 -3\r\n2 -7\r\n1 -7\r\n1 -12\r\n0 -12\r\n0 0\r\nNo\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n4\r\n4 4 3 5\r\n4\r\n3 3 3 3\r\n",
                "Yes\r\n5 0\r\n5 -3\r\n8 -3\r\n8 -6\r\n4 -6\r\n4 -3\r\n0 -3\r\n0 0\r\n"
            ]
        ]
    }
]