[
    {
        "name": "Managing Telephone Poles",
        "description": "Mr. Chanek's city can be represented as a plane. He wants to build a housing\ncomplex in the city. There are some telephone poles on the plane, which is\nrepresented by a grid \n    a\n of size \n    (n + 1) \n    \u00d7 (m + 1)\n. There is\na telephone pole at \n    (x, y)\n if \n    a_x, y = 1\n. For each point \n    (x,\n    y)\n, define \n    S(x, y)\n as the square of the Euclidean distance between\nthe nearest pole and \n    (x, y)\n. Formally, the square of the Euclidean\ndistance between two points \n    (x_1, y_1)\n and \n    (x_2, y_2)\n is \n    (x_2 -\n    x_1)^2 + (y_2 - y_1)^2\n. To optimize the building plan, the project\nsupervisor asks you the sum of all \n    S(x, y)\n for each \n    0 \n    \u2264 x \n    \u2264\n    n\n and \n    0 \n    \u2264 y \n    \u2264 m\n. Help him by finding the value of\n\n    \u2211_x=0^n\n    \u2211_y=0^mS(x, y)\n. Input The first line\ncontains two integers \n    n\n and \n    m\n (\n    0 \n    \u2264 n, m < 2000\n) \u2014 the\nsize of the grid. Then \n    (n + 1)\n lines follow, each containing \n    (m +\n    1)\n integers \n    a_i, j\n (\n    0 \n    \u2264 a_i, j\n    \u2264 1\n) \u2014 the grid\ndenoting the positions of telephone poles in the plane. There is at least one\ntelephone pole in the given grid. Output Output an integer denoting the value\nof \n    \u2211_x=0^n\n    \u2211_y=0^mS(x, y)\n. Examples Input 2 2 101\n000 000 Output 18 Input 5 4 10010 00000 01000 00001 00100 00010 Output 36 Note\nIn the first example, the nearest telephone pole for the points \n    (0,0)\n,\n\n    (1,0)\n, \n    (2,0)\n, \n    (0,1)\n, \n    (1,1)\n, and \n    (2,1)\n is at\n\n    (0, 0)\n. While the nearest telephone pole for the points \n    (0, 2)\n,\n\n    (1,2)\n, and \n    (2,2)\n is at \n    (0, 2)\n. Thus, \n    \u2211_x=0^n\n    \u2211_y=0^mS(x, y) = (0 + 1 + 4) + (1 + 2 + 5) + (0 + 1 + 4) =\n    18\n.\n\n",
        "cf_contest_id": 1575,
        "cf_index": "M",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "geometry"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2 2\r\n101\r\n000\r\n000\r\n",
                "18"
            ],
            [
                "5 4\r\n10010\r\n00000\r\n01000\r\n00001\r\n00100\r\n00010\r\n",
                "36"
            ]
        ],
        "private_cases": [
            [
                "0 0\r\n1\r\n",
                "0"
            ],
            [
                "9 9\r\n0000110000\r\n0001001000\r\n0001001000\r\n0001111000\r\n0001001000\r\n0001001000\r\n0110000110\r\n1000000001\r\n1001001001\r\n0111111110\r\n",
                "182"
            ]
        ]
    }
]