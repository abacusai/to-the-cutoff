[
    {
        "name": "Minimal Coverage",
        "description": "You are given \n    n\n lengths of segments that need to be placed on an\ninfinite axis with coordinates. The first segment is placed on the axis so\nthat one of its endpoints lies at the point with coordinate \n    0\n. Let's\ncall this endpoint the \"start\" of the first segment and let's call its \"end\"\nas that endpoint that is not the start. The \"start\" of each following segment\nmust coincide with the \"end\" of the previous one. Thus, if the length of the\nnext segment is \n    d\n and the \"end\" of the previous one has the coordinate\n\n    x\n, the segment can be placed either on the coordinates \n    [x-d, x]\n,\nand then the coordinate of its \"end\" is \n    x - d\n, or on the coordinates\n\n    [x, x+d]\n, in which case its \"end\" coordinate is \n    x + d\n. The total\ncoverage of the axis by these segments is defined as their overall union which\nis basically the set of points covered by at least one of the segments. It's\neasy to show that the coverage will also be a segment on the axis. Determine\nthe minimal possible length of the coverage that can be obtained by placing\nall the segments on the axis without changing their order. Input The first\nline contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number\nof test cases. The next \n    2t\n lines contain descriptions of the test cases.\nThe first line of each test case description contains an integer \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 10^4\n) \u2014 the number of segments. The second line of the\ndescription contains \n    n\n space-separated integers \n    a_i\n (\n    1 \n    \u2264\n    a_i \n    \u2264 1000\n) \u2014 lengths of the segments in the same order they should be\nplaced on the axis. It is guaranteed that the sum of \n    n\n over all test\ncases does not exceed \n    10^4\n. Output Print \n    t\n lines, each line\ncontaining the answer to the corresponding test case. The answer to a test\ncase should be a single integer \u2014 the minimal possible length of the axis\ncoverage. Example Input 6 2 1 3 3 1 2 3 4 6 2 3 9 4 6 8 4 5 7 1 2 4 6 7 7 3 8\n8 6 5 1 2 2 3 6 Output 3 3 9 9 7 8 Note In the third sample test case the\nsegments should be arranged as follows: \n    [0, 6] \n    \u2192 [4, 6]\n    \n    \u2192 [4, 7] \n    \u2192 [-2, 7]\n. As you can see, the last\nsegment \n    [-2, 7]\n covers all the previous ones, and the total length of\ncoverage is \n    9\n. In the fourth sample test case the segments should be\narranged as \n    [0, 6] \n    \u2192 [-2, 6] \n    \u2192 [-2, 2]\n    \n    \u2192 [2, 7]\n. The union of these segments also occupies the area\n\n    [-2, 7]\n and has the length of \n    9\n.\n\n",
        "cf_contest_id": 1579,
        "cf_index": "G",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n2\r\n1 3\r\n3\r\n1 2 3\r\n4\r\n6 2 3 9\r\n4\r\n6 8 4 5\r\n7\r\n1 2 4 6 7 7 3\r\n8\r\n8 6 5 1 2 2 3 6\r\n",
                "3\r\n3\r\n9\r\n9\r\n7\r\n8\r\n"
            ]
        ],
        "private_cases": []
    }
]