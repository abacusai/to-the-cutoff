[
    {
        "name": "Necklace Assembly",
        "description": "The store sells \n    n\n beads. The color of each bead is described by a\nlowercase letter of the English alphabet (\"a\"\u2013\"z\"). You want to buy some beads\nto assemble a necklace from them. A necklace is a set of beads connected in a\ncircle. For example, if the store sells beads \"a\", \"b\", \"c\", \"a\", \"c\", \"c\",\nthen you can assemble the following necklaces (these are not all possible\noptions): And the following necklaces cannot be assembled from beads sold in\nthe store: The first necklace cannot be assembled because it has three beads\n\"a\" (of the two available). The second necklace cannot be assembled because it\ncontains a bead \"d\", which is not sold in the store. We call a necklace\n\n    k\n-beautiful if, when it is turned clockwise by \n    k\n beads, the\nnecklace remains unchanged. For example, here is a sequence of three turns of\na necklace. As you can see, this necklace is, for example, \n    3\n-beautiful,\n\n    6\n-beautiful, \n    9\n-beautiful, and so on, but it is not\n\n    1\n-beautiful or \n    2\n-beautiful.In particular, a necklace of length\n\n    1\n is \n    k\n-beautiful for any integer \n    k\n. A necklace that consists\nof beads of the same color is also beautiful for any \n    k\n. You are given\nthe integers \n    n\n and \n    k\n, and also the string \n    s\n containing\n\n    n\n lowercase letters of the English alphabet \u2014 each letter defines a bead\nin the store. You can buy any subset of beads and connect them in any order.\nFind the maximum length of a \n    k\n-beautiful necklace you can assemble.\nInput The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    100\n) \u2014 the number of test cases in the test. Then \n    t\n test cases\nfollow. The first line of each test case contains two integers \n    n\n and\n\n    k\n (\n    1 \n    \u2264 n, k \n    \u2264 2000\n). The second line of each test case\ncontains the string \n    s\n containing \n    n\n lowercase English letters \u2014 the\nbeads in the store. It is guaranteed that the sum of \n    n\n for all test\ncases does not exceed \n    2000\n. Output Output \n    t\n answers to the test\ncases. Each answer is a positive integer \u2014 the maximum length of the\n\n    k\n-beautiful necklace you can assemble. Example Input 6 6 3 abcbac 3 6\naaa 7 1000 abczgyo 5 4 ababa 20 10 aaebdbabdbbddaadaadc 20 5\necbedececacbcbccbdec Output 6 3 5 4 15 10 Note The first test case is\nexplained in the statement. In the second test case, a \n    6\n-beautiful\nnecklace can be assembled from all the letters. In the third test case, a\n\n    1000\n-beautiful necklace can be assembled, for example, from beads\n\"abzyo\".\n\n",
        "cf_contest_id": 1367,
        "cf_index": "E",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "greedy",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n6 3\r\nabcbac\r\n3 6\r\naaa\r\n7 1000\r\nabczgyo\r\n5 4\r\nababa\r\n20 10\r\naaebdbabdbbddaadaadc\r\n20 5\r\necbedececacbcbccbdec\r\n",
                "6\r\n3\r\n5\r\n4\r\n15\r\n10\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n7 1782\r\nabcabca\r\n",
                "6\r\n"
            ],
            [
                "1\r\n364 1485\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccddddddddddddddddddddddddddeeeeeeeeeeeeeeeeeeeeeeefffffffffffffffffffffffffffgggggggggggggggggggggggggggggggggggggggghhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiijjjjjjjjjj\r\n",
                "330\r\n"
            ]
        ]
    }
]