[
    {
        "name": "Fib-tree",
        "description": "Let \n    F_k\n denote the \n    k\n-th term of Fibonacci sequence, defined as\nbelow: \n    F_0 = F_1 = 1\n for any integer \n    n \n    \u2265 0\n, \n    F_n+2 =\n    F_n+1 + F_n\nYou are given a tree with \n    n\n vertices. Recall that a tree\nis a connected undirected graph without cycles. We call a tree a Fib-tree, if\nits number of vertices equals \n    F_k\n for some \n    k\n, and at least one of\nthe following conditions holds: The tree consists of only \n    1\n vertex; You\ncan divide it into two Fib-trees by removing some edge of the tree. Determine\nwhether the given tree is a Fib-tree or not. Input The first line of the input\ncontains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014\nthe number of vertices in the tree. Then \n    n-1\n lines follow, each of which\ncontains two integers \n    u\n and \n    v\n (\n    1\n    \u2264 u,v \n    \u2264 n\n, \n    u\n    \n    \u2260 v\n), representing an edge between vertices \n    u\n and \n    v\n. It's\nguaranteed that given edges form a tree. Output Print \"YES\" if the given tree\nis a Fib-tree, or \"NO\" otherwise. You can print your answer in any case. For\nexample, if the answer is \"YES\", then the output \"Yes\" or \"yeS\" will also be\nconsidered as correct answer. Examples Input 3 1 2 2 3 Output YES Input 5 1 2\n1 3 1 4 1 5 Output NO Input 5 1 3 1 2 4 5 3 4 Output YES Note In the first\nsample, we can cut the edge \n    (1, 2)\n, and the tree will be split into\n\n    2\n trees of sizes \n    1\n and \n    2\n correspondently. Any tree of size\n\n    2\n is a Fib-tree, as it can be split into \n    2\n trees of size \n    1\n.\nIn the second sample, no matter what edge we cut, the tree will be split into\n\n    2\n trees of sizes \n    1\n and \n    4\n. As \n    4\n isn't \n    F_k\n for any\n\n    k\n, it's not Fib-tree. In the third sample, here is one possible order of\ncutting the edges so that all the trees in the process are Fib-trees: \n    (1,\n    3), (1, 2), (4, 5), (3, 4)\n.\n\n",
        "cf_contest_id": 1491,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dfs and similar",
            "divide and conquer",
            "number theory",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2\r\n2 3\r\n",
                "yes\r\n"
            ],
            [
                "5\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n",
                "no\r\n"
            ],
            [
                "5\r\n1 3\r\n1 2\r\n4 5\r\n3 4\r\n",
                "yes\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n",
                "yes\r\n"
            ],
            [
                "2\r\n2 1\r\n",
                "yes\r\n"
            ],
            [
                "3\r\n3 1\r\n3 2\r\n",
                "yes\r\n"
            ],
            [
                "8\r\n4 6\r\n6 7\r\n2 5\r\n4 5\r\n3 4\r\n1 2\r\n7 8\r\n",
                "yes\r\n"
            ],
            [
                "8\r\n2 5\r\n1 7\r\n4 1\r\n2 1\r\n8 7\r\n6 1\r\n3 1\r\n",
                "no\r\n"
            ],
            [
                "4\r\n1 2\r\n2 3\r\n3 4\r\n",
                "no\r\n"
            ],
            [
                "13\r\n1 2\r\n1 7\r\n7 8\r\n7 11\r\n8 9\r\n8 10\r\n11 12\r\n11 13\r\n1 3\r\n3 4\r\n3 5\r\n4 6\r\n",
                "no\r\n"
            ]
        ]
    }
]