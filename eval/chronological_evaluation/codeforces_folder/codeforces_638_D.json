[
    {
        "name": "Three-dimensional Turtle Super Computer ",
        "description": "A super computer has been built in the Turtle Academy of Sciences. The\ncomputer consists of n\u00b7m\u00b7k CPUs. The architecture was the paralellepiped of\nsize n \u00d7 m \u00d7 k, split into 1 \u00d7 1 \u00d7 1 cells, each cell contains exactly one\nCPU. Thus, each CPU can be simultaneously identified as a group of three\nnumbers from the layer number from 1 to n, the line number from 1 to m and the\ncolumn number from 1 to k. In the process of the Super Computer's work the\nCPUs can send each other messages by the famous turtle scheme: CPU (x, y, z)\ncan send messages to CPUs (x + 1, y, z), (x, y + 1, z) and (x, y, z + 1) (of\ncourse, if they exist), there is no feedback, that is, CPUs (x + 1, y, z), (x,\ny + 1, z) and (x, y, z + 1) cannot send messages to CPU (x, y, z). Over time\nsome CPUs broke down and stopped working. Such CPUs cannot send messages,\nreceive messages or serve as intermediates in transmitting messages. We will\nsay that CPU (a, b, c) controls CPU (d, e, f) , if there is a chain of CPUs\n(xi, yi, zi), such that (x1 = a, y1 = b, z1 = c), (xp = d, yp = e, zp = f)\n(here and below p is the length of the chain) and the CPU in the chain with\nnumber i (i < p) can send messages to CPU i + 1. Turtles are quite concerned\nabout the denial-proofness of the system of communication between the\nremaining CPUs. For that they want to know the number of critical CPUs. A CPU\n(x, y, z) is critical, if turning it off will disrupt some control, that is,\nif there are two distinctive from (x, y, z) CPUs: (a, b, c) and (d, e, f),\nsuch that (a, b, c) controls (d, e, f) before (x, y, z) is turned off and\nstopped controlling it after the turning off. Input The first line contains\nthree integers n, m and k (1 \u2264 n, m, k \u2264 100) \u2014 the dimensions of the Super\nComputer. Then n blocks follow, describing the current state of the processes.\nThe blocks correspond to the layers of the Super Computer in the order from 1\nto n. Each block consists of m lines, k characters in each \u2014 the description\nof a layer in the format of an m \u00d7 k table. Thus, the state of the CPU (x, y,\nz) is corresponded to the z-th character of the y-th line of the block number\nx. Character \"1\" corresponds to a working CPU and character \"0\" corresponds to\na malfunctioning one. The blocks are separated by exactly one empty line.\nOutput Print a single integer \u2014 the number of critical CPUs, that is, such\nthat turning only this CPU off will disrupt some control. Examples Input 2 2 3\n000 000 111 111 Output 2 Input 3 3 3 111 111 111 111 111 111 111 111 111\nOutput 19 Input 1 1 10 0101010101 Output 0 Note In the first sample the whole\nfirst layer of CPUs is malfunctional. In the second layer when CPU (2, 1, 2)\nturns off, it disrupts the control by CPU (2, 1, 3) over CPU (2, 1, 1), and\nwhen CPU (2, 2, 2) is turned off, it disrupts the control over CPU (2, 2, 3)\nby CPU (2, 2, 1). In the second sample all processors except for the corner\nones are critical. In the third sample there is not a single processor\ncontrolling another processor, so the answer is 0.\n\n",
        "cf_contest_id": 638,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dfs and similar",
            "graphs"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2 3\r\n000\r\n000\r\n\r\n111\r\n111\r\n",
                "2\r\n"
            ],
            [
                "3 3 3\r\n111\r\n111\r\n111\r\n\r\n111\r\n111\r\n111\r\n\r\n111\r\n111\r\n111\r\n",
                "19\r\n"
            ],
            [
                "1 1 10\r\n0101010101\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1 1 1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "3 1 1\r\n1\r\n\r\n1\r\n\r\n1\r\n",
                "1\r\n"
            ],
            [
                "3 1 1\r\n1\r\n\r\n0\r\n\r\n1\r\n",
                "0\r\n"
            ],
            [
                "1 3 1\r\n1\r\n1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1 3 1\r\n1\r\n0\r\n1\r\n",
                "0\r\n"
            ],
            [
                "1 1 3\r\n111\r\n",
                "1\r\n"
            ],
            [
                "1 1 3\r\n101\r\n",
                "0\r\n"
            ],
            [
                "1 1 3\r\n011\r\n",
                "0\r\n"
            ],
            [
                "1 1 3\r\n110\r\n",
                "0\r\n"
            ],
            [
                "1 1 1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1 1 1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "1 1 1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "1 1 100\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n",
                "0\r\n"
            ],
            [
                "1 1 100\r\n0000011111011101001100111010100111000100010100010110111110110011000000111111011111001111000011111010\r\n",
                "21\r\n"
            ],
            [
                "1 1 100\r\n1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\r\n",
                "98\r\n"
            ],
            [
                "1 100 1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1 100 1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n1\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n0\r\n1\r\n1\r\n1\r\n0\r\n0\r\n1\r\n0\r\n1\r\n0\r\n0\r\n1\r\n1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1\r\n0\r\n0\r\n0\r\n1\r\n1\r\n1\r\n1\r\n0\r\n1\r\n0\r\n0\r\n1\r\n0\r\n1\r\n0\r\n0\r\n0\r\n0\r\n1\r\n0\r\n0\r\n1\r\n1\r\n1\r\n0\r\n0\r\n1\r\n1\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n0\r\n1\r\n1\r\n1\r\n0\r\n0\r\n",
                "10\r\n"
            ],
            [
                "1 100 1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n",
                "98\r\n"
            ],
            [
                "100 1 1\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n",
                "0\r\n"
            ],
            [
                "100 1 1\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n0\r\n",
                "17\r\n"
            ],
            [
                "100 1 1\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n\r\n1\r\n",
                "98\r\n"
            ],
            [
                "6 8 3\r\n011\r\n001\r\n000\r\n100\r\n111\r\n110\r\n100\r\n100\r\n\r\n000\r\n100\r\n011\r\n001\r\n011\r\n000\r\n100\r\n111\r\n\r\n110\r\n111\r\n011\r\n110\r\n101\r\n001\r\n110\r\n000\r\n\r\n100\r\n000\r\n110\r\n001\r\n110\r\n010\r\n110\r\n011\r\n\r\n101\r\n111\r\n010\r\n110\r\n101\r\n111\r\n011\r\n110\r\n\r\n100\r\n111\r\n111\r\n011\r\n101\r\n110\r\n110\r\n110\r\n",
                "46\r\n"
            ]
        ]
    }
]