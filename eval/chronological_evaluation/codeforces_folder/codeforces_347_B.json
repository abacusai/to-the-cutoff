[
    {
        "name": "Fixed Points",
        "description": "A permutation of length n is an integer sequence such that each integer from 0\nto (n - 1) appears exactly once in it. For example, sequence [0, 2, 1] is a\npermutation of length 3 while both [0, 2, 2] and [1, 2, 3] are not. A fixed\npoint of a function is a point that is mapped to itself by the function. A\npermutation can be regarded as a bijective function. We'll get a definition of\na fixed point in a permutation. An integer i is a fixed point of permutation\na0, a1, ..., an - 1 if and only if ai = i. For example, permutation [0, 2, 1]\nhas 1 fixed point and permutation [0, 1, 2] has 3 fixed points. You are given\npermutation a. You are allowed to swap two elements of the permutation at most\nonce. Your task is to maximize the number of fixed points in the resulting\npermutation. Note that you are allowed to make at most one swap operation.\nInput The first line contains a single integer n (1 \u2264 n \u2264 10^5). The second\nline contains n integers a0, a1, ..., an - 1 \u2014 the given permutation. Output\nPrint a single integer \u2014 the maximum possible number of fixed points in the\npermutation after at most one swap operation. Examples Input 5 0 1 3 4 2\nOutput 3\n\n",
        "cf_contest_id": 347,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n0 1 3 4 2\r\n",
                "3"
            ]
        ],
        "private_cases": [
            [
                "10\r\n6 9 4 7 8 2 3 5 0 1\r\n",
                "2"
            ],
            [
                "100\r\n99 5 40 32 4 31 38 57 94 47 26 16 89 72 9 80 55 86 78 90 42 41 46 74 56 97 21 48 66 27 93 85 88 59 64 95 10 45 12 22 84 60 8 98 62 51 14 65 39 30 11 71 92 19 76 43 87 54 15 53 37 6 25 18 96 35 13 91 2 3 0 23 1 7 49 75 81 33 50 52 63 44 69 36 17 61 24 20 68 34 73 29 70 83 58 79 82 28 77 67\r\n",
                "3"
            ],
            [
                "3\r\n0 1 2\r\n",
                "3"
            ],
            [
                "3\r\n2 1 0\r\n",
                "3"
            ],
            [
                "3\r\n1 2 0\r\n",
                "1"
            ],
            [
                "1\r\n0\r\n",
                "1"
            ],
            [
                "5\r\n0 1 2 3 4\r\n",
                "5"
            ],
            [
                "4\r\n0 1 2 3\r\n",
                "4"
            ],
            [
                "7\r\n0 1 2 4 3 6 5\r\n",
                "5"
            ],
            [
                "6\r\n0 1 2 3 5 4\r\n",
                "6"
            ]
        ]
    }
]