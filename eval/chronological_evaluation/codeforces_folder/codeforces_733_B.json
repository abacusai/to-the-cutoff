[
    {
        "name": "Parade",
        "description": "Very soon there will be a parade of victory over alien invaders in Berland.\nUnfortunately, all soldiers died in the war and now the army consists of\nentirely new recruits, many of whom do not even know from which leg they\nshould begin to march. The civilian population also poorly understands from\nwhich leg recruits begin to march, so it is only important how many soldiers\nmarch in step. There will be n columns participating in the parade, the i-th\ncolumn consists of li soldiers, who start to march from left leg, and ri\nsoldiers, who start to march from right leg. The beauty of the parade is\ncalculated by the following formula: if L is the total number of soldiers on\nthe parade who start to march from the left leg, and R is the total number of\nsoldiers on the parade who start to march from the right leg, so the beauty\nwill equal |L - R|. No more than once you can choose one column and tell all\nthe soldiers in this column to switch starting leg, i.e. everyone in this\ncolumns who starts the march from left leg will now start it from right leg,\nand vice versa. Formally, you can pick no more than one index i and swap\nvalues li and ri. Find the index of the column, such that switching the\nstarting leg for soldiers in it will maximize the the beauty of the parade, or\ndetermine, that no such operation can increase the current beauty. Input The\nfirst line contains single integer n (1 \u2264 n \u2264 10^5) \u2014 the number of columns.\nThe next n lines contain the pairs of integers li and ri (1 \u2264 li, ri \u2264 500) \u2014\nthe number of soldiers in the i-th column which start to march from the left\nor the right leg respectively. Output Print single integer k \u2014 the number of\nthe column in which soldiers need to change the leg from which they start to\nmarch, or 0 if the maximum beauty is already reached. Consider that columns\nare numbered from 1 to n in the order they are given in the input data. If\nthere are several answers, print any of them. Examples Input 3 5 6 8 9 10 3\nOutput 3 Input 2 6 5 5 6 Output 1 Input 6 5 9 1 3 4 8 4 5 23 54 12 32 Output 0\nNote In the first example if you don't give the order to change the leg, the\nnumber of soldiers, who start to march from the left leg, would equal 5 + 8 +\n10 = 23, and from the right leg \u2014 6 + 9 + 3 = 18. In this case the beauty of\nthe parade will equal |23 - 18| = 5. If you give the order to change the leg\nto the third column, so the number of soldiers, who march from the left leg,\nwill equal 5 + 8 + 3 = 16, and who march from the right leg \u2014 6 + 9 + 10 = 25.\nIn this case the beauty equals |16 - 25| = 9. It is impossible to reach\ngreater beauty by giving another orders. Thus, the maximum beauty that can be\nachieved is 9.\n\n",
        "cf_contest_id": 733,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n5 6\r\n8 9\r\n10 3\r\n",
                "3\r\n"
            ],
            [
                "2\r\n6 5\r\n5 6\r\n",
                "1\r\n"
            ],
            [
                "6\r\n5 9\r\n1 3\r\n4 8\r\n4 5\r\n23 54\r\n12 32\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n500 499\r\n500 500\r\n",
                "1\r\n"
            ],
            [
                "1\r\n139 252\r\n",
                "0\r\n"
            ],
            [
                "10\r\n18 18\r\n71 471\r\n121 362\r\n467 107\r\n138 254\r\n13 337\r\n499 373\r\n337 387\r\n147 417\r\n76 417\r\n",
                "4\r\n"
            ],
            [
                "4\r\n4 1\r\n5 3\r\n7 6\r\n3 5\r\n",
                "4\r\n"
            ],
            [
                "3\r\n6 5\r\n9 8\r\n3 10\r\n",
                "3\r\n"
            ],
            [
                "3\r\n100 9\r\n1 3\r\n1 5\r\n",
                "1\r\n"
            ],
            [
                "4\r\n10 1\r\n10 2\r\n10 3\r\n1 10\r\n",
                "4\r\n"
            ],
            [
                "5\r\n25 1\r\n24 1\r\n2 3\r\n2 3\r\n2 3\r\n",
                "3\r\n"
            ],
            [
                "3\r\n90 1\r\n1 90\r\n100 1\r\n",
                "2\r\n"
            ],
            [
                "3\r\n1 123\r\n22 1\r\n12 1\r\n",
                "1\r\n"
            ],
            [
                "3\r\n4 5\r\n7 6\r\n10 9\r\n",
                "1\r\n"
            ],
            [
                "4\r\n50 1\r\n50 1\r\n50 1\r\n1 49\r\n",
                "4\r\n"
            ],
            [
                "7\r\n2 1\r\n2 1\r\n2 1\r\n2 1\r\n1 200\r\n1 200\r\n1 200\r\n",
                "1\r\n"
            ],
            [
                "5\r\n10 8\r\n7 6\r\n2 8\r\n9 1\r\n7 1\r\n",
                "3\r\n"
            ],
            [
                "3\r\n22 1\r\n12 1\r\n1 123\r\n",
                "3\r\n"
            ],
            [
                "3\r\n10 8\r\n9 7\r\n4 5\r\n",
                "3\r\n"
            ],
            [
                "5\r\n1 2\r\n4 8\r\n4 8\r\n32 16\r\n128 64\r\n",
                "2\r\n"
            ],
            [
                "5\r\n10 1\r\n10 1\r\n10 1\r\n100 1\r\n1 5\r\n",
                "5\r\n"
            ]
        ]
    }
]