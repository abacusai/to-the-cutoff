[
    {
        "name": "Pac-Man 2.0",
        "description": "Polycarp is developing a new version of an old video game \"Pac-Man\". Though he\nreally enjoyed playing the original game, he didn't like some aspects of it,\nso he decided to alter the rules a bit. In Polycarp's version, you play as\nPac-Man and you have to collect pellets scattered over the game world while\navoiding dangerous ghosts (no difference from the original yet). Polycarp\ndidn't like the fact that there was no escape from the ghosts in the original,\nso, in his version, the game world is divided into \n    n\n safe zones with\n\n    m\n one-directional pathways between them \u2014 and it is guaranteed that Pac-\nMan can reach any safe zone from any other. Since safe zones are safe, the\nghosts cannot attack Pac-Man while it is there, it is in danger only while\ntraversing the pathways. Pac-Man starts the game in the safe zone \n    s\n. All\npellets are scattered over the safe zones; initially, the \n    i\n-th safe zone\ncontains \n    a_i\n pellets (and if Pac-Man is in a safe zone, it may freely\ncollect all the pellets in it). The pellets disappear after being collected,\nbut after the last pellet in the game world is collected, new pellets spawn in\nthe safe zones in the same quantity as before (\n    a_i\n new pellets spawn in\nthe \n    i\n-th zone). The pellets can be respawned any number of times, so the\ngame is essentially infinite. Polycarp has already determined the structure of\nthe game world and the number of pellets in each safe zone. Now he is trying\nto find out if the game is difficult enough. There are \n    q\n goals in the\ngame, the \n    i\n-th goal is to collect at least \n    C_i\n pellets from the\nbeginning of the game. Polycarp denotes the difficulty of the \n    i\n-th goal\nas the minimum number of times the player has to traverse a one-directional\npathway in order to collect \n    C_i\n pellets (since only traversing a pathway\nputs Pac-Man in danger). If some pathway is traversed multiple times while\nPac-Man is collecting the pellets, it is included in the answer the same\nnumber of times. Help Polycarp to calculate the difficulty of each goal! Input\nThe first line contains four integers \n    n\n, \n    m\n, \n    q\n and \n    s\n\n(\n    2 \n    \u2264 n \n    \u2264 15\n; \n    n \n    \u2264 m \n    \u2264 n(n-1)\n; \n    1 \n    \u2264 q \n    \u2264\n    5000\n; \n    1 \n    \u2264 s \n    \u2264 n\n) \u2014 the number of safe zones, the number of\npathways, the number of goals and the index of the starting safe zone,\nrespectively. The second line contains \n    n\n integers \n    a_1\n, \n    a_2\n,\n..., \n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n), where \n    a_i\n is the initial\nnumber of pellets in the \n    i\n-th safe zone (and the number of pellets that\nspawn in the \n    i\n-th safe zone when the last pellet in the world is\ncollected). Then \n    m\n lines follow, each line contains two integers\n\n    v_i\n and \n    u_i\n (\n    1 \n    \u2264 v_i, u_i \n    \u2264 n\n; \n    v_i \n     u_i\n)\ndenoting a one-directional pathway from the safe zone \n    v_i\n to the safe\nzone \n    u_i\n. Each ordered pair \n    (v_i, u_i)\n appears in this section at\nmost once (there are no multiple pathways from \n    v_i\n to \n    u_i\n), and it\nis possible to reach every safe zone from every other safe zone using these\npathways. The last line contains \n    q\n integers \n    C_1\n, \n    C_2\n, ...,\n\n    C_q\n (\n    1 \n    \u2264 C_i \n    \u2264 10^15\n), where \n    C_i\n is the minimum\nnumber of pellets the player has to collect in order to fulfil the \n    i\n-th\ngoal. Output For each goal \n    i\n, print one integer \u2014 its difficulty (the\nminimum number of times the player has to traverse along some pathway in order\nto collect at least \n    C_i\n pellets). Examples Input 3 4 2 1 3 1 2 1 2 2 1 1\n3 3 1 5 8 Output 1 3 Input 5 7 4 2 1 3 2 2 1 2 3 4 2 3 4 3 1 1 4 5 4 4 5 7 14\n23 27 Output 2 6 10 13 Input 4 4 3 3 2 3 1 4 3 4 4 1 1 2 2 3 13 42 1337 Output\n3 13 401 Note Consider the first test. In order to collect \n    5\n pellets,\nthe player should collect \n    3\n pellets in the safe zone \n    1\n (which is\nstarting), move to zone \n    3\n, collect \n    2\n pellets there. In order to\ncollect \n    8\n pellets, the player should collect \n    3\n pellets in the safe\nzone \n    1\n, go to \n    2\n, collect \n    1\n pellet, go to \n    1\n without\ngetting pellets, go to \n    3\n, collect \n    2\n pellets. Now the last pellet\nin the world is collected, so they are respawned. The player can collect\n\n    2\n pellets in the safe zone \n    3\n and now the number of collected\npellets is \n    8\n. Consider the second test. In order to collect \n    7\n\npellets let's do the following: \n    2(+3) \n    \u2192 3(+2) \n    \u2192\n    4(+2)\n. In such a way \n    7\n pellets were collected. In order to collect\n\n    14\n pellets let's do the following: \n    2(+3) \n    \u2192 3(+2)\n    \n    \u2192 1(+1) \n    \u2192 4(+2) \n    \u2192 5(+1)\n respawn of\npellets \n    5(+1) \n    \u2192 4 (+2) \n    \u2192 2(+3)\n. In such a way\n\n    15\n pellets were collected. In order to collect \n    23\n pellets let's do\nthe following: \n    2(+3) \n    \u2192 3(+2) \n    \u2192 1(+1) \n    \u2192\n    4(+2) \n    \u2192 5(+1)\n respawn of pellets \n    5(+1) \n    \u2192 4(+2)\n    \n    \u2192 2(+3) \n    \u2192 3(+2) \n    \u2192 1(+1)\n respawn of\npellets \n    1(+1) \n    \u2192 4(+2) \n    \u2192 2(+3)\n. In such a way\n\n    24\n pellets were collected.\n\n",
        "cf_contest_id": 1346,
        "cf_index": "I",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "dp"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 4 2 1\r\n3 1 2\r\n1 2\r\n2 1\r\n1 3\r\n3 1\r\n5 8\r\n",
                "1\r\n3\r\n"
            ],
            [
                "5 7 4 2\r\n1 3 2 2 1\r\n2 3\r\n4 2\r\n3 4\r\n3 1\r\n1 4\r\n5 4\r\n4 5\r\n7 14 23 27\r\n",
                "2\r\n6\r\n10\r\n13\r\n"
            ],
            [
                "4 4 3 3\r\n2 3 1 4\r\n3 4\r\n4 1\r\n1 2\r\n2 3\r\n13 42 1337\r\n",
                "3\r\n13\r\n401\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 14 10 2\r\n5 9 5 1 10\r\n1 2\r\n1 3\r\n1 5\r\n2 1\r\n2 3\r\n2 4\r\n2 5\r\n3 2\r\n3 4\r\n3 5\r\n4 1\r\n5 1\r\n5 2\r\n5 3\r\n575 805 224 405 189 123 432 930 300 482\r\n",
                "76\r\n107\r\n29\r\n53\r\n24\r\n16\r\n57\r\n124\r\n40\r\n64\r\n"
            ],
            [
                "5 11 10 4\r\n2 6 8 2 6\r\n1 2\r\n1 3\r\n2 1\r\n2 4\r\n2 5\r\n3 1\r\n3 4\r\n4 1\r\n5 1\r\n5 3\r\n5 4\r\n665 542 836 107 213 275 875 793 257 994\r\n",
                "110\r\n89\r\n138\r\n17\r\n35\r\n45\r\n145\r\n132\r\n42\r\n165\r\n"
            ],
            [
                "5 10 10 3\r\n7 9 4 4 9\r\n1 2\r\n2 1\r\n2 3\r\n2 4\r\n3 1\r\n3 5\r\n4 1\r\n4 2\r\n5 1\r\n5 3\r\n360 806 200 925 817 940 842 115 716 819\r\n",
                "44\r\n97\r\n24\r\n112\r\n98\r\n113\r\n102\r\n14\r\n87\r\n99\r\n"
            ]
        ]
    }
]