[
    {
        "name": "Great Vova Wall (Version 2)",
        "description": "Vova's family is building the Great Vova Wall (named by Vova himself). Vova's\nparents, grandparents, grand-grandparents contributed to it. Now it's totally\nup to Vova to put the finishing touches. The current state of the wall can be\nrespresented by a sequence \n    a\n of \n    n\n integers, with \n    a_i\n being\nthe height of the \n    i\n-th part of the wall. Vova can only use \n    2 \n    \u00d7\n    1\n bricks to put in the wall (he has infinite supply of them, however). Vova\ncan put bricks only horizontally on the neighbouring parts of the wall of\nequal height. It means that if for some \n    i\n the current height of part\n\n    i\n is the same as for part \n    i + 1\n, then Vova can put a brick there\nand thus increase both heights by 1. Obviously, Vova can't put bricks in such\na way that its parts turn out to be off the borders (to the left of part\n\n    1\n of the wall or to the right of part \n    n\n of it). Note that Vova\ncan't put bricks vertically. Vova is a perfectionist, so he considers the wall\ncompleted when: all parts of the wall has the same height; the wall has no\nempty spaces inside it. Can Vova complete the wall using any amount of bricks\n(possibly zero)? Input The first line contains a single integer \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of parts in the wall. The second\nline contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 10^9\n) \u2014 the initial heights of the parts of the wall. Output Print\n\"YES\" if Vova can complete the wall using any amount of bricks (possibly\nzero). Print \"NO\" otherwise. Examples Input 5 2 1 1 2 5 Output YES Input 3 4 5\n3 Output NO Input 2 10 10 Output YES Note In the first example Vova can put a\nbrick on parts 2 and 3 to make the wall \n    [2, 2, 2, 2, 5]\n and then put 3\nbricks on parts 1 and 2 and 3 bricks on parts 3 and 4 to make it \n    [5, 5, 5,\n    5, 5]\n. In the second example Vova can put no bricks in the wall. In the\nthird example the wall is already complete.\n\n",
        "cf_contest_id": 1092,
        "cf_index": "D2",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 1 1 2 5\r\n",
                "YES"
            ],
            [
                "3\r\n4 5 3\r\n",
                "NO"
            ],
            [
                "2\r\n10 10\r\n",
                "YES"
            ]
        ],
        "private_cases": [
            [
                "4\r\n1 2 2 1\r\n",
                "NO"
            ],
            [
                "6\r\n3 2 3 3 2 3\r\n",
                "NO"
            ],
            [
                "1\r\n1\r\n",
                "YES"
            ],
            [
                "14\r\n7 7 7 4 3 3 4 5 4 4 5 7 7 7\r\n",
                "YES"
            ],
            [
                "10\r\n1 9 7 6 2 4 7 8 1 3\r\n",
                "NO"
            ],
            [
                "6\r\n1 1 1 1 2 1\r\n",
                "NO"
            ],
            [
                "7\r\n1 1 2 2 3 3 1\r\n",
                "NO"
            ],
            [
                "4\r\n2 2 2 3\r\n",
                "NO"
            ],
            [
                "7\r\n4 1 1 2 4 3 3\r\n",
                "NO"
            ],
            [
                "4\r\n3 1 2 4\r\n",
                "NO"
            ],
            [
                "3\r\n5 5 2\r\n",
                "NO"
            ],
            [
                "2\r\n1 2\r\n",
                "NO"
            ],
            [
                "7\r\n4 1 1 2 3 3 4\r\n",
                "NO"
            ],
            [
                "8\r\n2 2 10 6 4 2 2 4\r\n",
                "NO"
            ],
            [
                "4\r\n3 3 3 4\r\n",
                "NO"
            ],
            [
                "5\r\n1 2 2 1 1\r\n",
                "NO"
            ],
            [
                "5\r\n2 1 1 1 2\r\n",
                "NO"
            ],
            [
                "4\r\n10 10 40 60\r\n",
                "NO"
            ],
            [
                "4\r\n5 3 3 3\r\n",
                "NO"
            ],
            [
                "7\r\n2 2 2 2 2 2 1\r\n",
                "NO"
            ],
            [
                "5\r\n1 1 2 2 1\r\n",
                "NO"
            ],
            [
                "5\r\n3 2 2 3 1\r\n",
                "NO"
            ],
            [
                "3\r\n5 5 4\r\n",
                "NO"
            ],
            [
                "5\r\n3 3 1 1 2\r\n",
                "NO"
            ],
            [
                "3\r\n10 10 9\r\n",
                "NO"
            ],
            [
                "7\r\n9 7 6 5 5 6 7\r\n",
                "YES"
            ],
            [
                "5\r\n1 1 2 3 3\r\n",
                "NO"
            ],
            [
                "5\r\n2 2 2 2 1\r\n",
                "NO"
            ],
            [
                "5\r\n5 4 4 4 5\r\n",
                "NO"
            ],
            [
                "3\r\n5 5 3\r\n",
                "NO"
            ],
            [
                "13\r\n5 2 2 1 1 2 5 2 1 1 2 2 5\r\n",
                "NO"
            ],
            [
                "8\r\n9 7 6 5 5 6 7 8\r\n",
                "NO"
            ],
            [
                "5\r\n4 3 3 4 1\r\n",
                "NO"
            ],
            [
                "4\r\n4 4 4 3\r\n",
                "NO"
            ],
            [
                "5\r\n10 9 5 3 7\r\n",
                "NO"
            ],
            [
                "5\r\n1 2 1 2 5\r\n",
                "NO"
            ],
            [
                "4\r\n2 1 4 5\r\n",
                "NO"
            ],
            [
                "4\r\n2 10 1 1\r\n",
                "NO"
            ],
            [
                "5\r\n1 2 2 1 5\r\n",
                "NO"
            ],
            [
                "3\r\n2 2 1\r\n",
                "NO"
            ],
            [
                "2\r\n3 2\r\n",
                "NO"
            ],
            [
                "4\r\n1 1 3 5\r\n",
                "NO"
            ],
            [
                "5\r\n5 5 1 1 2\r\n",
                "NO"
            ],
            [
                "5\r\n5 5 1 1 3\r\n",
                "NO"
            ],
            [
                "4\r\n1 1 3 4\r\n",
                "NO"
            ],
            [
                "10\r\n5 3 1 2 2 1 3 5 1 1\r\n",
                "NO"
            ],
            [
                "10\r\n10 9 8 7 7 7 8 9 10 11\r\n",
                "NO"
            ],
            [
                "9\r\n5 4 3 3 2 2 1 1 5\r\n",
                "NO"
            ],
            [
                "4\r\n4 3 2 1\r\n",
                "NO"
            ],
            [
                "10\r\n5 2 2 6 9 7 8 1 5 5\r\n",
                "NO"
            ],
            [
                "20\r\n10 5 2 3 5 7 7 9 4 9 9 4 9 7 7 5 3 2 5 10\r\n",
                "NO"
            ],
            [
                "5\r\n10 10 9 8 8\r\n",
                "NO"
            ],
            [
                "5\r\n1 1 4 4 6\r\n",
                "YES"
            ],
            [
                "5\r\n1 1 6 4 4\r\n",
                "YES"
            ],
            [
                "5\r\n1 6 1 4 4\r\n",
                "NO"
            ],
            [
                "5\r\n3 2 2 4 5\r\n",
                "NO"
            ]
        ]
    }
]