[
    {
        "name": "Dreamoon Likes Coloring",
        "description": "Dreamoon likes coloring cells very much. There is a row of \n    n\n cells.\nInitially, all cells are empty (don't contain any color). Cells are numbered\nfrom \n    1\n to \n    n\n. You are given an integer \n    m\n and \n    m\n integers\n\n    l_1, l_2, \n    \u2026, l_m\n (\n    1 \n    \u2264 l_i \n    \u2264 n\n) Dreamoon will\nperform \n    m\n operations. In \n    i\n-th operation, Dreamoon will choose a\nnumber \n    p_i\n from range \n    [1, n-l_i+1]\n (inclusive) and will paint all\ncells from \n    p_i\n to \n    p_i+l_i-1\n (inclusive) in \n    i\n-th color. Note\nthat cells may be colored more one than once, in this case, cell will have the\ncolor from the latest operation. Dreamoon hopes that after these \n    m\n\noperations, all colors will appear at least once and all cells will be\ncolored. Please help Dreamoon to choose \n    p_i\n in each operation to satisfy\nall constraints. Input The first line contains two integers \n    n,m\n (\n    1\n    \n    \u2264 m \n    \u2264 n \n    \u2264 100\n     000\n). The second line contains \n    m\n\nintegers \n    l_1, l_2, \n    \u2026, l_m\n (\n    1 \n    \u2264 l_i \n    \u2264 n\n). Output\nIf it's impossible to perform \n    m\n operations to satisfy all constraints,\nprint \"'-1\" (without quotes). Otherwise, print \n    m\n integers \n    p_1, p_2,\n    \n    \u2026, p_m\n (\n    1 \n    \u2264 p_i \n    \u2264 n - l_i + 1\n), after these \n    m\n\noperations, all colors should appear at least once and all cells should be\ncolored. If there are several possible solutions, you can print any. Examples\nInput 5 3 3 2 2 Output 2 4 1 Input 10 1 1 Output -1\n\n",
        "cf_contest_id": 1329,
        "cf_index": "A",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 3\r\n3 2 2\r\n",
                "1 2 4\r\n"
            ],
            [
                "10 1\r\n1\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "2 2\r\n1 2\r\n",
                "-1\r\n"
            ],
            [
                "200 50\r\n49 35 42 47 134 118 14 148 58 159 33 33 8 123 99 126 75 94 1 141 61 79 122 31 48 7 66 97 141 43 25 141 7 56 120 55 49 37 154 56 13 59 153 133 18 1 141 24 151 125\r\n",
                "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 76\r\n"
            ],
            [
                "3 3\r\n3 3 1\r\n",
                "-1\r\n"
            ],
            [
                "100000 1\r\n100000\r\n",
                "1\r\n"
            ],
            [
                "2000 100\r\n5 128 1368 1679 1265 313 1854 1512 1924 338 38 1971 238 1262 1834 1878 1749 784 770 1617 191 395 303 214 1910 1300 741 1966 1367 24 268 403 1828 1033 1424 218 1146 925 1501 1760 1164 1881 1628 1596 1358 1360 29 1343 922 618 1537 1839 1114 1381 704 464 692 1450 1590 1121 670 300 1053 1730 1024 1292 1549 1112 1028 1096 794 38 1121 261 618 1489 587 1841 627 707 1693 1693 1867 1402 803 321 475 410 1664 1491 1846 1279 1250 457 1010 518 1785 514 1656 1588\r\n",
                "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 413\r\n"
            ],
            [
                "10000 3\r\n3376 5122 6812\r\n",
                "1 2 3189\r\n"
            ],
            [
                "99999 30\r\n31344 14090 93157 5965 57557 41264 93881 58871 57763 46958 96029 37297 75623 12215 38442 86773 66112 7512 31968 28331 90390 79301 56205 704 15486 63054 83372 45602 15573 78459\r\n",
                "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 5968 21541\r\n"
            ],
            [
                "100000 10\r\n31191 100000 99999 99999 99997 100000 99996 99994 99995 99993\r\n",
                "-1\r\n"
            ],
            [
                "1000 2\r\n1 1\r\n",
                "-1\r\n"
            ],
            [
                "10 3\r\n1 9 2\r\n",
                "1 2 9\r\n"
            ],
            [
                "6 3\r\n2 2 6\r\n",
                "-1\r\n"
            ],
            [
                "100 3\r\n45 10 45\r\n",
                "1 46 56\r\n"
            ],
            [
                "6 3\r\n1 2 2\r\n",
                "-1\r\n"
            ],
            [
                "9 3\r\n9 3 1\r\n",
                "1 6 9\r\n"
            ],
            [
                "10 2\r\n9 2\r\n",
                "1 9\r\n"
            ]
        ]
    }
]