[
    {
        "name": "Egor and an RPG game",
        "description": "One Saturday afternoon Egor was playing his favorite RPG game. While\ndiscovering new lands and territories, he came across the following sign: Egor\nis a passionate player, but he is an algorithmician as well. That's why he\ninstantly spotted four common letters in two words on the sign above \u2014 if we\npermute the letters \"R\", \"E\", \"G\", \"O\" from the first word, we can obtain the\nletters \"O\", \"G\", \"R\", \"E\". Egor got inspired by the sign and right away he\ncame up with a problem about permutations. You are given a permutation of\nlength \n    n\n. You have to split it into some non-empty subsequences so that\neach element of the permutation belongs to exactly one subsequence. Each\nsubsequence must be monotonic \u2014 that is, either increasing or decreasing.\nSequence is called to be a subsequence if it can be derived from permutation\nby deleting some (possibly none) elements without changing the order of the\nremaining elements. The number of subsequences should be small enough \u2014 let\n\n    f(n)\n be the minimum integer \n    k\n such that every permutation of\nlength \n    n\n can be partitioned into at most \n    k\n monotonic subsequences.\nYou need to split the permutation into at most \n    f(n)\n monotonic\nsubsequences. Input The first line contains one integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^5\n) \u2014 the number of test cases. You can only use \n    t = 1\n in\nhacks. Next, descriptions of \n    t\n test cases come, each of them in the\nfollowing format. The first line of a single test case contains one integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the length of the permutation. The\nsecond line contains \n    n\n distinct integers \n    a_i\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 n\n) \u2014 the permutation itself. The sum of the values of \n    n\n over\nall test cases doesn't exceed \n    10^5\n. Output For each test case print the\nanswer in the following format: In the first line print \n    k\n (\n    1 \n    \u2264 k\n    \n    \u2264 f(n)\n) \u2014 the number of the subsequences in the partition. In the next\n\n    k\n lines, print the descriptions of found subsequences. Each description\nshould start with a number \n    l_i\n (\n    1 \n    \u2264 l_i \n    \u2264 n\n) \u2014 the\nlength of the corresponding subsequence, followed by \n    l_i\n integers \u2014 the\nvalues of this subsequence in the order in which they occur in the\npermutation. Each subsequence you output must be either increasing or\ndecreasing. In case there are multiple possible answers, print any of them.\nExample Input 3 4 4 3 1 2 6 4 5 6 1 3 2 10 1 2 3 4 5 6 7 8 9 10 Output 2 3 4 3\n1 1 2 3 2 4 1 2 5 6 2 3 2 1 10 1 2 3 4 5 6 7 8 9 10 Note In the example, we\ncan split: \n    [4, 3, 1, 2]\n into \n    [4, 3, 1]\n, \n    [2]\n \n    [4, 5, 6, 1,\n    3, 2]\n into \n    [4, 1]\n, \n    [5, 6]\n and \n    [3, 2]\n \n    [1, 2, 3, 4, 5,\n    6, 7, 8, 9, 10]\n into \n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n Surely, there\nare many more answers possible.\n\n",
        "cf_contest_id": 1097,
        "cf_index": "E",
        "cf_rating": 3400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4\r\n4 3 1 2\r\n6\r\n4 5 6 1 3 2\r\n10\r\n1 2 3 4 5 6 7 8 9 10\r\n",
                "2\r\n3 4 3 1 \r\n1 2 \r\n3\r\n2 4 1 \r\n3 5 3 2 \r\n1 6 \r\n1\r\n10 1 2 3 4 5 6 7 8 9 10 \r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n5\r\n2 4 5 3 1\r\n9\r\n9 1 6 7 5 8 4 2 3\r\n6\r\n6 3 4 2 1 5\r\n",
                "2\r\n3 2 4 5 \r\n2 3 1 \r\n3\r\n4 1 6 7 8 \r\n4 9 5 4 2 \r\n1 3 \r\n3\r\n4 6 3 2 1 \r\n1 4 \r\n1 5 \r\n"
            ],
            [
                "1\r\n27\r\n7 5 17 16 19 4 2 25 13 18 1 6 20 14 8 22 27 10 15 3 26 24 9 12 11 23 21\r\n",
                "6\r\n5 7 5 4 2 1 \r\n5 17 16 13 6 3 \r\n4 19 18 14 8 \r\n4 25 20 10 9 \r\n4 22 15 12 11 \r\n5 27 26 24 23 21 \r\n"
            ],
            [
                "4\r\n7\r\n4 3 7 2 6 5 1\r\n63\r\n41 5 33 2 14 31 3 19 9 11 23 24 18 50 8 37 40 47 57 52 56 60 21 35 59 16 34 28 58 4 53 20 32 49 63 15 7 44 30 48 55 45 6 10 42 27 29 46 38 13 36 61 51 39 1 25 43 22 17 12 54 26 62\r\n25\r\n1 17 20 6 7 18 22 8 25 16 15 23 19 13 2 10 11 3 9 12 24 5 4 21 14\r\n5\r\n4 2 5 3 1\r\n",
                "2\r\n4 4 3 2 1 \r\n3 7 6 5 \r\n10\r\n14 2 3 9 11 18 21 28 32 44 45 46 51 54 62 \r\n12 5 14 19 23 24 37 40 47 52 53 55 61 \r\n6 41 33 31 8 4 1 \r\n6 50 35 16 15 7 6 \r\n5 57 56 34 20 10 \r\n8 60 59 58 49 30 27 13 12 \r\n7 63 48 42 29 25 22 17 \r\n3 38 36 26 \r\n1 39 \r\n1 43 \r\n6\r\n8 1 6 7 8 10 11 12 14 \r\n5 17 16 15 13 2 \r\n3 20 18 3 \r\n5 22 19 9 5 4 \r\n3 25 23 21 \r\n1 24 \r\n2\r\n3 4 2 1 \r\n2 5 3 \r\n"
            ]
        ]
    }
]