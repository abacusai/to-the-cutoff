[
    {
        "name": "Omkar and Baseball",
        "description": "Patrick likes to play baseball, but sometimes he will spend so many hours\nhitting home runs that his mind starts to get foggy! Patrick is sure that his\nscores across \n    n\n sessions follow the identity permutation (ie. in the\nfirst game he scores \n    1\n point, in the second game he scores \n    2\n\npoints and so on). However, when he checks back to his record, he sees that\nall the numbers are mixed up! Define a special exchange as the following:\nchoose any subarray of the scores and permute elements such that no element of\nsubarray gets to the same position as it was before the exchange. For example,\nperforming a special exchange on \n    [1,2,3]\n can yield \n    [3,1,2]\n but it\ncannot yield \n    [3,2,1]\n since the \n    2\n is in the same position. Given a\npermutation of \n    n\n integers, please help Patrick find the minimum number\nof special exchanges needed to make the permutation sorted! It can be proved\nthat under given constraints this number doesn't exceed \n    10^18\n. An\narray \n    a\n is a subarray of an array \n    b\n if \n    a\n can be obtained\nfrom \n    b\n by deletion of several (possibly, zero or all) elements from the\nbeginning and several (possibly, zero or all) elements from the end. Input\nEach test contains multiple test cases. The first line contains the number of\ntest cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n). Description of the test cases\nfollows. The first line of each test case contains integer \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of the given permutation. The\nsecond line of each test case contains \n    n\n integers\n\n    a_1,a_2,...,a_n\n (\n    1 \n    \u2264 a_i\n    \u2264 n\n) \u2014 the initial\npermutation. It is guaranteed that the sum of \n    n\n over all test cases does\nnot exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, output one\ninteger: the minimum number of special exchanges needed to sort the\npermutation. Example Input 2 5 1 2 3 4 5 7 3 2 4 5 1 6 7 Output 0 2 Note In\nthe first permutation, it is already sorted so no exchanges are needed. It can\nbe shown that you need at least \n    2\n exchanges to sort the second\npermutation. \n    [3, 2, 4, 5, 1, 6, 7]\n Perform special exchange on range\n(\n    1, 5\n) \n    [4, 1, 2, 3, 5, 6, 7]\n Perform special exchange on range\n(\n    1, 4\n) \n    [1, 2, 3, 4, 5, 6, 7]\n\n\n",
        "cf_contest_id": 1372,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n5\r\n1 2 3 4 5\r\n7\r\n3 2 4 5 1 6 7\r\n",
                "0\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n6\r\n1 5 3 4 2 6\r\n6\r\n5 1 3 4 2 6\r\n6\r\n1 5 3 4 6 2\r\n6\r\n5 1 3 4 6 2\r\n",
                "2\r\n2\r\n2\r\n2\r\n"
            ],
            [
                "3\r\n3\r\n1 2 3\r\n4\r\n3 1 2 4\r\n7\r\n6 4 1 7 3 5 2\r\n",
                "0\r\n1\r\n1\r\n"
            ],
            [
                "3\r\n6\r\n6 2 5 1 4 3\r\n6\r\n3 5 1 4 2 6\r\n2\r\n1 2\r\n",
                "2\r\n2\r\n0\r\n"
            ],
            [
                "1\r\n2\r\n1 2\r\n",
                "0\r\n"
            ],
            [
                "1\r\n7\r\n3 2 4 1 7 6 5\r\n",
                "2\r\n"
            ],
            [
                "1\r\n4\r\n2 1 3 4\r\n",
                "1\r\n"
            ],
            [
                "1\r\n5\r\n1 3 4 2 5\r\n",
                "1\r\n"
            ],
            [
                "1\r\n6\r\n3 2 1 6 5 4\r\n",
                "2\r\n"
            ],
            [
                "1\r\n5\r\n2 1 3 5 4\r\n",
                "2\r\n"
            ],
            [
                "5\r\n5\r\n1 3 4 2 5\r\n4\r\n2 1 3 4\r\n5\r\n2 1 3 5 4\r\n7\r\n3 2 4 1 5 7 6\r\n6\r\n3 2 1 6 5 4\r\n",
                "1\r\n1\r\n2\r\n2\r\n2\r\n"
            ],
            [
                "1\r\n6\r\n2 1 3 5 4 6\r\n",
                "2\r\n"
            ]
        ]
    }
]