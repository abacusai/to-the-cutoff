[
    {
        "name": "Strange Addition",
        "description": "Unfortunately, Vasya can only sum pairs of integers (a, b), such that for any\ndecimal place at least one number has digit 0 in this place. For example,\nVasya can sum numbers 505 and 50, but he cannot sum 1 and 4. Vasya has a set\nof k distinct non-negative integers d1, d2, ..., dk. Vasya wants to choose\nsome integers from this set so that he could sum any two chosen numbers. What\nmaximal number of integers can he choose in the required manner? Input The\nfirst input line contains integer k (1 \u2264 k \u2264 100) \u2014 the number of integers.\nThe second line contains k distinct space-separated integers d1, d2, ..., dk\n(0 \u2264 di \u2264 100). Output In the first line print a single integer n the maximum\nnumber of the chosen integers. In the second line print n distinct non-\nnegative integers \u2014 the required integers. If there are multiple solutions,\nprint any of them. You can print the numbers in any order. Examples Input 4\n100 10 1 0 Output 4 0 1 10 100 Input 3 2 70 3 Output 2 2 70\n\n",
        "cf_contest_id": 305,
        "cf_index": "A",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n100 10 1 0\r\n",
                "4\r\n0 1 10 100\r\n"
            ],
            [
                "3\r\n2 70 3\r\n",
                "2\r\n2 70\r\n"
            ]
        ],
        "private_cases": [
            [
                "39\r\n16 72 42 70 17 36 32 40 47 94 27 30 100 55 23 77 67 28 49 50 53 83 38 33 60 65 62 64 6 66 69 86 96 75 85 0 89 73 29\r\n",
                "4\r\n0 100 6 30\r\n"
            ],
            [
                "50\r\n20 67 96 6 75 12 37 46 38 86 83 22 10 8 21 2 93 9 81 49 69 52 63 62 70 92 97 40 47 99 16 85 48 77 39 100 28 5 11 44 89 1 19 42 35 27 7 14 88 33\r\n",
                "3\r\n1 10 100\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "1\r\n1\r\n"
            ],
            [
                "73\r\n39 66 3 59 40 93 72 34 95 79 83 65 99 57 48 44 82 76 31 21 64 19 53 75 37 16 43 5 47 24 15 22 20 55 45 74 42 10 61 49 23 80 35 62 2 9 67 97 51 81 1 70 88 63 33 25 68 13 69 71 73 6 18 52 41 38 96 46 92 85 14 36 100\r\n",
                "3\r\n1 10 100\r\n"
            ],
            [
                "15\r\n74 90 73 47 36 44 81 21 66 92 2 38 62 72 49\r\n",
                "2\r\n2 90\r\n"
            ],
            [
                "96\r\n17 10 0 85 57 78 15 99 55 6 7 88 12 95 58 19 47 18 96 82 21 80 97 77 46 31 54 70 23 60 59 100 66 92 51 14 91 25 16 27 44 4 35 98 8 52 24 5 81 29 73 13 61 56 45 75 49 71 94 48 3 76 32 65 72 1 84 36 86 40 83 50 22 33 41 11 26 93 90 43 39 79 89 9 64 68 42 74 87 2 62 34 20 63 67 37\r\n",
                "4\r\n0 1 10 100\r\n"
            ],
            [
                "5\r\n23 75 38 47 70\r\n",
                "1\r\n23\r\n"
            ],
            [
                "12\r\n89 61 45 92 22 3 94 66 48 21 54 14\r\n",
                "1\r\n3\r\n"
            ],
            [
                "1\r\n99\r\n",
                "1\r\n99\r\n"
            ],
            [
                "1\r\n0\r\n",
                "1\r\n0\r\n"
            ],
            [
                "2\r\n100 1\r\n",
                "2\r\n1 100\r\n"
            ],
            [
                "3\r\n1 100 99\r\n",
                "2\r\n1 100\r\n"
            ],
            [
                "100\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "3\r\n1 10 100\r\n"
            ],
            [
                "100\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 100 0\r\n",
                "4\r\n0 1 10 100\r\n"
            ],
            [
                "99\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\r\n",
                "2\r\n1 10\r\n"
            ],
            [
                "2\r\n5 6\r\n",
                "1\r\n5\r\n"
            ],
            [
                "81\r\n11 12 13 14 15 16 17 18 19 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 48 49 51 52 53 54 55 56 57 58 59 61 62 63 64 65 66 67 68 69 71 72 73 74 75 76 77 78 79 81 82 83 84 85 86 87 88 89 91 92 93 94 95 96 97 98 99\r\n",
                "1\r\n11\r\n"
            ],
            [
                "3\r\n99 10 6\r\n",
                "2\r\n10 6\r\n"
            ],
            [
                "4\r\n11 10 100 3\r\n",
                "3\r\n10 3 100\r\n"
            ],
            [
                "2\r\n99 6\r\n",
                "1\r\n6\r\n"
            ],
            [
                "3\r\n23 0 100\r\n",
                "3\r\n0 100 23\r\n"
            ],
            [
                "2\r\n43 0\r\n",
                "2\r\n0 43\r\n"
            ],
            [
                "4\r\n99 0 100 6\r\n",
                "3\r\n0 100 6\r\n"
            ],
            [
                "1\r\n100\r\n",
                "1\r\n100\r\n"
            ],
            [
                "2\r\n0 100\r\n",
                "2\r\n0 100\r\n"
            ],
            [
                "3\r\n0 100 10\r\n",
                "3\r\n0 10 100\r\n"
            ],
            [
                "3\r\n0 100 12\r\n",
                "3\r\n0 100 12\r\n"
            ],
            [
                "3\r\n0 100 1\r\n",
                "3\r\n0 1 100\r\n"
            ],
            [
                "4\r\n0 100 10 1\r\n",
                "4\r\n0 1 10 100\r\n"
            ],
            [
                "4\r\n0 100 10 99\r\n",
                "3\r\n0 10 100\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "2\r\n10 12\r\n",
                "1\r\n10\r\n"
            ],
            [
                "2\r\n90 9\r\n",
                "2\r\n9 90\r\n"
            ]
        ]
    }
]