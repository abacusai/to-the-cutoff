[
    {
        "name": "Vladik and Favorite Game",
        "description": "This is an interactive problem. Vladik has favorite game, in which he plays\nall his free time. Game field could be represented as n \u00d7 m matrix which\nconsists of cells of three types: \u00ab.\u00bb \u2014 normal cell, player can visit it. \u00abF\u00bb\n\u2014 finish cell, player has to finish his way there to win. There is exactly one\ncell of this type. \u00ab*\u00bb \u2014 dangerous cell, if player comes to this cell, he\nloses. Initially player is located in the left top cell with coordinates (1,\n1). Player has access to 4 buttons \"U\", \"D\", \"L\", \"R\", each of them move\nplayer up, down, left and right directions respectively. But it\u2019s not that\neasy! Sometimes friends play game and change functions of buttons. Function of\nbuttons \"L\" and \"R\" could have been swapped, also functions of buttons \"U\" and\n\"D\" could have been swapped. Note that functions of buttons can be changed\nonly at the beginning of the game. Help Vladik win the game! Input First line\ncontains two space-separated integers n and m (1 \u2264 n, m \u2264 100) \u2014 number of\nrows and columns respectively. Each of next n lines contains m characters\ndescribing corresponding row of field. Set of characters in field is described\nabove. Guaranteed that cell with coordinates (1, 1) is normal and there is at\nleast one way from initial cell to finish cell without dangerous cells.\nInteraction You can press buttons no more than 2\u00b7n\u00b7m times. To press a button\nyou should print \"U\", \"D\", \"L\", \"R\" in new line. It\u2019s necessary to print\nnewline character and flush output. After flushing buffer you should read\nanswer from input data. Answer is the pair of space-separated integers x, y \u2014\nnew position of player. In case, if there is no cell in direction of moving,\nposition will not change. If after any move player lost, in other words player\nmove to dangerous cell, then x and y will be equal to - 1. If after any move\nplayer is in finish or dangerous cell, then you should terminate your program.\nTo finish output buffer (i. e. for operation flush) right after printing\ndirection and newline you should do next: fflush(stdout) in C++\nSystem.out.flush() in Java stdout.flush() in Python flush(output) in Pascal\nread documentation for other languages. Hacks To perform a hack you should use\nthis format: n m swapLR swapUD a_1 a_2 ... a_n Where n, m \u2014 number of rows and\ncolumns in game field. swapLR is equal to 1 in case, when directions \"L\u2019\u2019 and\n\"R\u2019\u2019 is swapped, and equal to 0 otherwise. swapUD is equal to 1, when\ndirections \"U\u2019\u2019 and \"D\u2019\u2019 is swapped, and equal to 0 otherwise. a1, a2, ..., an\n\u2014 description of corresponding rows of game field. Example Input 4 3 ... **.\nF*. ... 1 1 1 2 1 3 1 3 2 3 3 3 4 3 4 2 4 1 3 1 Output R L L D U U U R R D\nNote In first test case all four directions swapped with their opposite\ndirections. Protocol of interaction In more convenient form: This test could\nbe presenter for hack in following way: 4 3 1 1 ... **. F*. ...\n\n",
        "cf_contest_id": 811,
        "cf_index": "D",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "interactive"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3 1 1\r\n...\r\n**.\r\nF*.\r\n...\r\n",
                ""
            ]
        ],
        "private_cases": [
            [
                "10 10 1 1\r\n..********\r\nF*********\r\n**********\r\n**********\r\n**********\r\n**********\r\n**********\r\n**********\r\n**********\r\n**********\r\n",
                ""
            ],
            [
                "10 10 0 0\r\n.*********\r\n.*********\r\n..********\r\n*.********\r\n*.********\r\n*F********\r\n**********\r\n**********\r\n**********\r\n**********\r\n",
                ""
            ],
            [
                "9 9 0 0\r\n..*******\r\nF********\r\n*********\r\n*********\r\n*********\r\n*********\r\n*********\r\n*********\r\n*********\r\n",
                ""
            ],
            [
                "9 11 0 1\r\n..*********\r\nF**********\r\n***********\r\n***********\r\n***********\r\n***********\r\n***********\r\n***********\r\n***********\r\n",
                ""
            ],
            [
                "9 9 1 0\r\n..*******\r\nF********\r\n*********\r\n*********\r\n*********\r\n*********\r\n*********\r\n*********\r\n*********\r\n",
                ""
            ],
            [
                "11 11 1 1\r\n..*********\r\nF**********\r\n***********\r\n***********\r\n***********\r\n***********\r\n***********\r\n***********\r\n***********\r\n***********\r\n***********\r\n",
                ""
            ],
            [
                "2 2 0 0\r\n.F\r\n..\r\n",
                ""
            ],
            [
                "1 2 0 0\r\n.F\r\n",
                ""
            ]
        ]
    }
]