[
    {
        "name": "Pairs of Paths",
        "description": "You are given a tree consisting of \n    n\n vertices, and \n    m\n simple vertex\npaths. Your task is to find how many pairs of those paths intersect at exactly\none vertex. More formally you have to find the number of pairs \n    (i, j)\n\n\n    (1 \n    \u2264 i < j \n    \u2264 m)\n such that \n    path_i\n and \n    path_j\n have\nexactly one vertex in common. Input First line contains a single integer\n\n    n\n \n    (1 \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5)\n. Next \n    n - 1\n lines\ndescribe the tree. Each line contains two integers \n    u\n and \n    v\n \n    (1\n    \n    \u2264 u, v \n    \u2264 n)\n describing an edge between vertices \n    u\n and\n\n    v\n. Next line contains a single integer \n    m\n \n    (1 \n    \u2264 m \n    \u2264 3\n    \n    \u00b7 10^5)\n. Next \n    m\n lines describe paths. Each line describes a\npath by it's two endpoints \n    u\n and \n    v\n \n    (1 \n    \u2264 u, v \n    \u2264 n)\n.\nThe given path is all the vertices on the shortest path from \n    u\n to\n\n    v\n (including \n    u\n and \n    v\n). Output Output a single integer \u2014 the\nnumber of pairs of paths that intersect at exactly one vertex. Examples Input\n5 1 2 1 3 1 4 3 5 4 2 3 2 4 3 4 3 5 Output 2 Input 1 3 1 1 1 1 1 1 Output 3\nInput 5 1 2 1 3 1 4 3 5 6 2 3 2 4 3 4 3 5 1 1 1 2 Output 7 Note The tree in\nthe first example and paths look like this. Pairs \n    (1,4)\n and \n    (3,4)\n\nintersect at one vertex. In the second example all three paths contain the\nsame single vertex, so all pairs \n    (1, 2)\n, \n    (1, 3)\n and \n    (2, 3)\n\nintersect at one vertex. The third example is the same as the first example\nwith two additional paths. Pairs \n    (1,4)\n, \n    (1,5)\n, \n    (2,5)\n,\n\n    (3,4)\n, \n    (3,5)\n, \n    (3,6)\n and \n    (5,6)\n intersect at one vertex.\n\n",
        "cf_contest_id": 1486,
        "cf_index": "F",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "data structures",
            "dfs and similar",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n4\r\n2 3\r\n2 4\r\n3 4\r\n3 5\r\n",
                "2\r\n"
            ],
            [
                "1\r\n3\r\n1 1\r\n1 1\r\n1 1\r\n",
                "3\r\n"
            ],
            [
                "5\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n6\r\n2 3\r\n2 4\r\n3 4\r\n3 5\r\n1 1\r\n1 2\r\n",
                "7\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "10\r\n10 1\r\n8 5\r\n5 3\r\n10 8\r\n10 7\r\n3 4\r\n9 5\r\n2 8\r\n6 3\r\n10\r\n2 1\r\n1 6\r\n2 3\r\n3 9\r\n10 10\r\n7 10\r\n9 4\r\n4 5\r\n1 2\r\n7 3\r\n",
                "8\r\n"
            ]
        ]
    }
]