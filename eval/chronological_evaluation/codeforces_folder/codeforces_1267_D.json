[
    {
        "name": "DevOps Best Practices",
        "description": "Daisy is a senior software engineer at RainyDay, LLC. She has just implemented\nthree new features in their product: the first feature makes their product\nwork, the second one makes their product fast, and the third one makes their\nproduct correct. The company encourages at least some testing of new features,\nso Daisy appointed her intern Demid to write some tests for the new features.\nInterestingly enough, these three features pass all the tests on Demid's\ndevelopment server, which has index 1, but might fail the tests on some other\nservers. After Demid has completed this task, Daisy appointed you to deploy\nthese three features to all \n    n\n servers of your company. For every feature\n\n    f\n and every server \n    s\n, Daisy told you whether she wants the feature\n\n    f\n to be deployed on the server \n    s\n. If she wants it to be deployed,\nit must be done even if the feature \n    f\n fails the tests on the server\n\n    s\n. If she does not want it to be deployed, you may not deploy it there.\nYour company has two important instruments for the deployment of new features\nto servers: Continuous Deployment (CD) and Continuous Testing (CT). CD can be\nestablished between several pairs of servers, forming a directed graph. CT can\nbe set up on some set of servers. If CD is configured from the server\n\n    s_1\n to the server \n    s_2\n then every time \n    s_1\n receives a new\nfeature \n    f\n the system starts the following deployment process of \n    f\n\nto \n    s_2\n: If the feature \n    f\n is already deployed on the server\n\n    s_2\n, then nothing is done. Otherwise, if CT is not set up on the server\n\n    s_1\n, then the server \n    s_1\n just deploys the feature \n    f\n to the\nserver \n    s_2\n without any testing. Otherwise, the server \n    s_1\n runs\ntests for the feature \n    f\n. If the tests fail on the server \n    s_1\n,\nnothing is done. If the tests pass, then the server \n    s_1\n deploys the\nfeature \n    f\n to the server \n    s_2\n. You are to configure the CD/CT\nsystem, and after that Demid will deploy all three features on his development\nserver. Your CD/CT system must deploy each feature exactly to the set of\nservers that Daisy wants. Your company does not have a lot of computing\nresources, so you can establish CD from one server to another at most\n\n    264\n times. Input The first line contains integer \n    n\n (\n    2 \n    \u2264 n\n    \n    \u2264 256\n) \u2014 the number of servers in your company. Next \n    n\n lines\ncontain three integers each. The \n    j\n-th integer in the \n    i\n-th line is\n\n    1\n if Daisy wants the \n    j\n-th feature to be deployed to the \n    i\n-th\nserver, or \n    0\n otherwise. Next \n    n\n lines contain three integers each.\nThe \n    j\n-th integer in the \n    i\n-th line is \n    1\n if tests pass for the\n\n    j\n-th feature on the \n    i\n-th server, or \n    0\n otherwise. Demid's\ndevelopment server has index \n    1\n. It is guaranteed that Daisy wants all\nthree features to be deployed to the server number 1, and all three features\npass their tests on the server number 1. Output If it is impossible to\nconfigure CD/CT system with CD being set up between at most \n    264\n pairs of\nservers, then output the single line \"Impossible\". Otherwise, the first line\nof the output must contain the line \"Possible\". Next line must contain \n    n\n\nspace-separated integers \u2014 the configuration of CT. The \n    i\n-th integer\nshould be \n    1\n if you set up CT on the \n    i\n-th server, or \n    0\n\notherwise. Next line must contain the integer \n    m\n (\n    0 \n    \u2264 m \n    \u2264\n    264\n) \u2014 the number of CD pairs you want to set up. Each of the next \n    m\n\nlines must describe CD configuration, each line with two integers \n    s_i\n\nand \n    t_i\n (\n    1 \n    \u2264 s_i, t_i \n    \u2264 n\n; \n    s_i \n     t_i\n),\nestablishing automated deployment of new features from the server \n    s_i\n to\nthe server \n    t_i\n. Examples Input 3 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 0 1\nOutput Possible 1 1 1 2 3 2 1 3 Input 2 1 1 1 0 0 1 1 1 1 1 1 0 Output\nImpossible Note CD/CT system for the first sample test is shown below.\n\n",
        "cf_contest_id": 1267,
        "cf_index": "D",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n1 1 1\r\n1 0 1\r\n1 1 1\r\n1 1 1\r\n0 0 0\r\n1 0 1\r\n",
                "Possible\r\n0 0 1 \r\n2\r\n1 3\r\n3 2\r\n"
            ],
            [
                "2\r\n1 1 1\r\n0 0 1\r\n1 1 1\r\n1 1 0\r\n",
                "Impossible\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 0\r\n",
                "Possible\r\n0 1 \r\n1\r\n1 2\r\n"
            ],
            [
                "3\r\n1 1 1\r\n1 0 1\r\n0 0 1\r\n1 1 1\r\n0 0 0\r\n1 0 1\r\n",
                "Impossible\r\n"
            ],
            [
                "6\r\n1 1 1\r\n1 0 1\r\n0 0 1\r\n0 1 0\r\n0 0 1\r\n0 1 1\r\n1 1 1\r\n0 0 1\r\n1 0 0\r\n1 1 1\r\n1 0 1\r\n1 0 1\r\n",
                "Impossible\r\n"
            ],
            [
                "15\r\n1 1 1\r\n0 1 1\r\n0 0 1\r\n0 0 0\r\n1 0 0\r\n0 0 1\r\n1 0 0\r\n1 1 0\r\n1 0 1\r\n1 0 1\r\n1 1 0\r\n1 0 1\r\n0 1 0\r\n0 0 1\r\n0 1 0\r\n1 1 1\r\n0 0 0\r\n1 0 1\r\n0 0 0\r\n1 0 0\r\n0 1 1\r\n1 1 0\r\n0 0 1\r\n1 0 0\r\n1 1 0\r\n1 0 0\r\n0 1 0\r\n0 1 0\r\n1 0 0\r\n0 1 1\r\n",
                "Impossible\r\n"
            ],
            [
                "13\r\n1 1 1\r\n1 1 0\r\n1 1 0\r\n1 1 0\r\n1 0 1\r\n1 0 1\r\n1 0 1\r\n0 1 1\r\n0 1 1\r\n0 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n0 0 0\r\n1 0 0\r\n0 1 0\r\n0 0 0\r\n1 0 0\r\n0 0 1\r\n0 0 0\r\n0 1 0\r\n0 0 1\r\n1 0 0\r\n0 1 0\r\n0 0 1\r\n",
                "Possible\r\n0 0 0 0 0 0 0 0 0 0 1 1 1 \r\n15\r\n1 11\r\n1 12\r\n1 13\r\n2 3\r\n2 4\r\n5 6\r\n5 7\r\n8 9\r\n8 10\r\n11 2\r\n11 5\r\n12 2\r\n12 8\r\n13 5\r\n13 8\r\n"
            ],
            [
                "16\r\n1 1 1\r\n1 1 0\r\n1 1 0\r\n1 1 0\r\n1 1 0\r\n1 0 1\r\n1 0 1\r\n1 0 1\r\n1 0 1\r\n0 1 1\r\n0 1 1\r\n0 1 1\r\n0 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n0 0 0\r\n1 0 0\r\n0 1 0\r\n1 1 0\r\n0 0 0\r\n1 0 0\r\n0 0 1\r\n1 0 1\r\n0 0 0\r\n0 1 0\r\n0 0 1\r\n0 1 1\r\n1 0 0\r\n0 1 0\r\n0 0 1\r\n",
                "Possible\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 \r\n18\r\n1 14\r\n1 15\r\n1 16\r\n2 3\r\n2 4\r\n2 5\r\n6 7\r\n6 8\r\n6 9\r\n10 11\r\n10 12\r\n10 13\r\n14 2\r\n14 6\r\n15 2\r\n15 10\r\n16 6\r\n16 10\r\n"
            ]
        ]
    }
]