[
    {
        "name": "Round Marriage",
        "description": "It's marriage season in Ringland! Ringland has a form of a circle's boundary\nof length \n    L\n. There are \n    n\n bridegrooms and \n    n\n brides, and\nbridegrooms decided to marry brides. Of course, each bridegroom should choose\nexactly one bride, and each bride should be chosen by exactly one bridegroom.\nAll objects in Ringland are located on the boundary of the circle, including\nthe capital, bridegrooms' castles and brides' palaces. The castle of the\n\n    i\n-th bridegroom is located at the distance \n    a_i\n from the capital in\nclockwise direction, and the palace of the \n    i\n-th bride is located at the\ndistance \n    b_i\n from the capital in clockwise direction. Let's define the\ninconvenience of a marriage the maximum distance that some bride should walk\nalong the circle from her palace to her bridegroom's castle in the shortest\ndirection (in clockwise or counter-clockwise direction). Help the bridegrooms\nof Ringland to choose brides in such a way that the inconvenience of the\nmarriage is the smallest possible. Input The first line contains two integers\n\n    n\n and \n    L\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    1 \n    \u2264 L\n    \n    \u2264 10^9\n) \u2014 the number of bridegrooms and brides and the length of\nRingland. The next line contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    0 \n    \u2264 a_i < L\n) \u2014 the distances from the capital to the\ncastles of bridegrooms in clockwise direction. The next line contains \n    n\n\nintegers \n    b_1, b_2, \n    \u2026, b_n\n (\n    0 \n    \u2264 b_i < L\n) \u2014 the\ndistances from the capital to the palaces of brides in clockwise direction.\nOutput In the only line print the smallest possible inconvenience of the\nwedding, where the inconvenience is the largest distance traveled by a bride.\nExamples Input 2 4 0 1 2 3 Output 1 Input 10 100 3 14 15 92 65 35 89 79 32 38\n2 71 82 81 82 84 5 90 45 23 Output 27 Note In the first example the first\nbridegroom should marry the second bride, the second bridegroom should marry\nthe first bride. This way, the second bride should walk the distance of\n\n    1\n, and the first bride should also walk the same distance. Thus, the\ninconvenience is equal to \n    1\n. In the second example let \n    p_i\n be the\nbride the \n    i\n-th bridegroom will marry. One of optimal \n    p\n is the\nfollowing: \n    (6,8,1,4,5,10,3,2,7,9)\n.\n\n",
        "cf_contest_id": 981,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "graph matchings",
            "greedy"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 4\r\n0 1\r\n2 3\r\n",
                "1\r\n"
            ],
            [
                "10 100\r\n3 14 15 92 65 35 89 79 32 38\r\n2 71 82 81 82 84 5 90 45 23\r\n",
                "27\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 100\r\n98 61 9 46 52 8 82 32 14 23\r\n27 18 46 51 74 98 61 84 22 73\r\n",
                "14\r\n"
            ],
            [
                "1 10\r\n0\r\n1\r\n",
                "1\r\n"
            ],
            [
                "19 483745045\r\n99413087 165262125 52290931 71552063 113115568 257477826 473306806 473602546 84933642 349106987 151265913 438015140 53930350 74809602 167916271 35935802 183312736 457033938 362137571\r\n376242509 415641527 330323210 414085656 24682 363929123 56955118 354639251 130749574 274395403 189543913 259896904 32752085 438406254 354089503 207960422 280982608 26766108 321636191\r\n",
                "106479132\r\n"
            ],
            [
                "5 5\r\n0 3 4 4 1\r\n4 3 3 2 2\r\n",
                "1\r\n"
            ],
            [
                "10 1000000\r\n825541 826955 825531 826445 826008 826679 825339 827212 826589 826966\r\n327158 327147 325778 326567 327002 326082 326921 325685 325721 326637\r\n",
                "499355\r\n"
            ],
            [
                "20 999999\r\n512998 512693 512510 512623 512607 512085 513340 513972 513736 512705 512142 513953 512353 512860 512485 512203 513447 512308 512723 512033\r\n12914 13184 13294 13702 12661 12207 12336 13801 13131 12508 12441 13406 12914 12085 12587 13999 12579 13597 13813 13029\r\n",
                "499361\r\n"
            ],
            [
                "30 1000000\r\n775104 776174 775198 774845 776039 774955 776154 776155 775217 774894 776190 774714 774764 774665 776176 775002 774523 775427 775075 775909 775476 776062 776042 775305 776219 774775 775090 775869 775689 775623\r\n275155 275601 275785 274539 275564 275039 274450 274784 274931 274504 274819 276420 275018 274614 275526 275201 276422 276186 276279 275456 274602 274763 274601 275423 275212 275256 276344 274497 274823 276353\r\n",
                "499267\r\n"
            ],
            [
                "1 1\r\n0\r\n0\r\n",
                "0\r\n"
            ]
        ]
    }
]