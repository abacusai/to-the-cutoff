[
    {
        "name": "Yet Another Array Partitioning Task",
        "description": "An array \n    b\n is called to be a subarray of \n    a\n if it forms a\ncontinuous subsequence of \n    a\n, that is, if it is equal to \n    a_l\n,\n\n    a_l + 1\n, \n    \u2026\n, \n    a_r\n for some \n    l, r\n. Suppose\n\n    m\n is some known constant. For any array, having \n    m\n or more\nelements, let's define it's beauty as the sum of \n    m\n largest elements of\nthat array. For example: For array \n    x = [4, 3, 1, 5, 2]\n and \n    m = 3\n,\nthe \n    3\n largest elements of \n    x\n are \n    5\n, \n    4\n and \n    3\n, so\nthe beauty of \n    x\n is \n    5 + 4 + 3 = 12\n. For array \n    x = [10, 10,\n    10]\n and \n    m = 2\n, the beauty of \n    x\n is \n    10 + 10 = 20\n.You are\ngiven an array \n    a_1, a_2, \n    \u2026, a_n\n, the value of the said constant\n\n    m\n and an integer \n    k\n. Your need to split the array \n    a\n into\nexactly \n    k\n subarrays such that: Each element from \n    a\n belongs to\nexactly one subarray. Each subarray has at least \n    m\n elements. The sum of\nall beauties of \n    k\n subarrays is maximum possible. Input The first line\ncontains three integers \n    n\n, \n    m\n and \n    k\n (\n    2 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n, \n    1 \n    \u2264 m\n, \n    2 \n    \u2264 k\n, \n    m \n    \u00b7 k \n    \u2264 n\n)\n\u2014 the number of elements in \n    a\n, the constant \n    m\n in the definition of\nbeauty and the number of subarrays to split to. The second line contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    -10^9 \n    \u2264 a_i \n    \u2264\n    10^9\n). Output In the first line, print the maximum possible sum of the\nbeauties of the subarrays in the optimal partition. In the second line, print\n\n    k-1\n integers \n    p_1, p_2, \n    \u2026, p_k-1\n (\n    1 \n    \u2264 p_1 < p_2 <\n    \n    \u2026 < p_k-1 < n\n) representing the partition of the array, in which:\nAll elements with indices from \n    1\n to \n    p_1\n belong to the first\nsubarray. All elements with indices from \n    p_1 + 1\n to \n    p_2\n belong to\nthe second subarray. \n    \u2026\n. All elements with indices from \n    p_k-1\n    + 1\n to \n    n\n belong to the last, \n    k\n-th subarray.If there are several\noptimal partitions, print any of them. Examples Input 9 2 3 5 2 5 2 4 1 1 3 2\nOutput 21 3 5 Input 6 1 4 4 1 3 2 2 3 Output 12 1 3 5 Input 2 1 2 -1000000000\n1000000000 Output 0 1 Note In the first example, one of the optimal partitions\nis \n    [5, 2, 5]\n, \n    [2, 4]\n, \n    [1, 1, 3, 2]\n. The beauty of the\nsubarray \n    [5, 2, 5]\n is \n    5 + 5 = 10\n. The beauty of the subarray\n\n    [2, 4]\n is \n    2 + 4 = 6\n. The beauty of the subarray \n    [1, 1, 3, 2]\n\nis \n    3 + 2 = 5\n. The sum of their beauties is \n    10 + 6 + 5 = 21\n. In the\nsecond example, one optimal partition is \n    [4]\n, \n    [1, 3]\n, \n    [2,\n    2]\n, \n    [3]\n.\n\n",
        "cf_contest_id": 1114,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9 2 3\r\n5 2 5 2 4 1 1 3 2\r\n",
                "21 3 5\r\n"
            ],
            [
                "6 1 4\r\n4 1 3 2 2 3\r\n",
                "12 1 3 5\r\n"
            ],
            [
                "2 1 2\r\n-1000000000 1000000000\r\n",
                "0 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "11 3 3\r\n-6 9 10 -9 -7 -2 -1 -8 0 2 7\r\n",
                "12 3 7\r\n"
            ],
            [
                "37 3 10\r\n74 42 92 -64 -11 -37 63 81 -58 -88 52 -6 40 -24 29 -10 -23 41 -36 -53 1 94 -65 47 87 -40 -84 -65 -1 99 35 51 40 -21 36 84 -48\r\n",
                "831 3 7 12 15 18 22 26 31 34\r\n"
            ],
            [
                "77 4 11\r\n354 14 -200 44 -872 -822 568 256 -286 -571 180 113 -860 -509 -225 -305 358 717 -632 -267 967 -283 -630 -238 17 -77 -156 718 634 -444 189 -680 -364 208 191 -528 -732 529 108 -426 771 285 -795 -740 984 -123 -322 546 429 852 -242 -742 166 -224 81 637 868 -169 -762 -151 -464 -380 -963 -702 312 -334 28 124 -40 -384 -970 -539 -61 -100 -182 509 339\r\n",
                "11613 4 12 25 29 38 45 50 56 65 73\r\n"
            ],
            [
                "11 2 3\r\n-7 -6 6 -6 5 -3 0 0 -1 -3 -2\r\n",
                "8 5 8\r\n"
            ],
            [
                "12 2 5\r\n97 14 -53 -27 -24 -92 -30 42 -2 -81 7 -1\r\n",
                "23 2 4 7 9\r\n"
            ],
            [
                "15 1 12\r\n-3330 3954 4460 7317 8348 6431 -3741 1603 -6912 -8266 -831 3737 5099 -302 3008\r\n",
                "39494 1 2 3 4 5 6 8 11 12 13 14\r\n"
            ],
            [
                "12 3 2\r\n312188 -288162 435263 599135 244140 146561 912174 -135424 -642097 506834 641852 365524\r\n",
                "3460782 7\r\n"
            ],
            [
                "17 1 4\r\n40654398 -73772996 -301750550 47084378 -989570362 26931632 -630673783 889561285 -392590161 977684923 -409889397 -706593539 636930801 546359196 317700410 90744216 -636840634\r\n",
                "3050536205 8 10 13\r\n"
            ],
            [
                "69 9 5\r\n-7 10 7 3 8 -9 9 -6 -5 -1 6 7 -3 10 2 3 -10 3 1 -7 -9 -10 7 2 -10 -7 -5 -5 -8 -7 4 3 10 -7 -8 7 4 6 -5 -6 8 -7 6 -5 -1 -4 0 -3 1 -2 -8 -3 -4 9 8 5 5 -5 -4 10 6 -6 -2 4 -6 -6 -3 -3 0\r\n",
                "136 13 32 47 57\r\n"
            ],
            [
                "85 5 15\r\n-5 83 -68 -17 89 -82 -37 27 -73 -67 -69 65 -49 -55 72 26 -69 -100 -43 78 32 -46 63 -59 -68 -89 -80 -19 -67 -9 57 -65 -16 68 -42 2 -89 27 -49 -98 -11 7 -86 18 -76 -53 -55 -75 -78 100 -70 -77 -78 61 95 52 -84 -85 67 -6 -49 44 -71 -74 54 -53 -2 19 94 -33 61 85 9 -51 18 -63 -52 -24 48 -6 -61 41 -67 91 -68\r\n",
                "-514 5 11 16 22 29 34 41 47 53 60 65 70 75 80\r\n"
            ],
            [
                "94 2 17\r\n9576 -3108 -5821 4770 -2229 -8216 2947 -6820 5061 979 5595 3594 345 416 -3096 1595 -6589 -8121 9803 -2239 8316 -4841 -9490 -9915 7229 -9579 1383 -6737 3077 -8014 9061 -6238 190 240 3703 3316 4763 -2966 -8645 6458 -2526 6161 2250 -6623 7926 267 -6612 7748 3818 -3645 -6669 -9248 8570 -8485 -8213 -1833 -6669 -6869 3075 -2809 -3740 8048 -5858 -5961 -1685 -6731 1644 5827 -1686 -3370 1863 3101 9492 8525 -4889 5247 -48 8444 -2887 303 4420 50 8543 784 -450 4664 1894 3977 -8629 -8856 7138 7983 -776 5505\r\n",
                "212534 4 11 19 25 31 36 40 45 49 59 68 73 76 81 86 91\r\n"
            ],
            [
                "9 1 9\r\n132035901 -785296294 -157785628 -136500807 20005482 517092755 730462741 899435411 665378513\r\n",
                "1884828074 1 2 3 4 5 6 7 8\r\n"
            ],
            [
                "41 1 41\r\n818680310 -454338317 -909824332 704300034 554591452 485212575 263332416 964173351 578163821 941617507 304976113 955156800 878594359 -766018425 101133452 768981892 929336993 532137439 418114641 -813164197 785663598 439183746 -8960333 -479861200 -768762676 914552755 -936016699 -178234309 405215824 -632191081 91178022 646345885 -107279277 717616687 423033173 -228757445 928949885 -974806261 -939907639 -579751227 -415138757\r\n",
                "6357230555 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\r\n"
            ],
            [
                "6 1 3\r\n2 2 2 2 5 5\r\n",
                "12 4 5\r\n"
            ],
            [
                "6 2 2\r\n1 1 1 2 2 2\r\n",
                "7 4\r\n"
            ],
            [
                "5 1 4\r\n2 2 2 3 4\r\n",
                "11 2 3 4\r\n"
            ],
            [
                "9 2 3\r\n5 2 5 2 4 1 3 2 1\r\n",
                "21 3 5\r\n"
            ],
            [
                "9 2 3\r\n5 2 5 2 4 3 2 1 1\r\n",
                "21 3 5\r\n"
            ]
        ]
    }
]