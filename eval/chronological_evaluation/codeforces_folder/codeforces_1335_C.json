[
    {
        "name": "Two Teams Composing",
        "description": "You have \n    n\n students under your control and you have to compose exactly\ntwo teams consisting of some subset of your students. Each student had his own\nskill, the \n    i\n-th student skill is denoted by an integer \n    a_i\n\n(different students can have the same skills). So, about the teams. Firstly,\nthese two teams should have the same size. Two more constraints: The first\nteam should consist of students with distinct skills (i.e. all skills in the\nfirst team are unique). The second team should consist of students with the\nsame skills (i.e. all skills in the second team are equal). Note that it is\npermissible that some student of the first team has the same skill as a\nstudent of the second team. Consider some examples (skills are given): \n    [1,\n    2, 3]\n, \n    [4, 4]\n is not a good pair of teams because sizes should be the\nsame; \n    [1, 1, 2]\n, \n    [3, 3, 3]\n is not a good pair of teams because the\nfirst team should not contain students with the same skills; \n    [1, 2, 3]\n,\n\n    [3, 4, 4]\n is not a good pair of teams because the second team should\ncontain students with the same skills; \n    [1, 2, 3]\n, \n    [3, 3, 3]\n is a\ngood pair of teams; \n    [5]\n, \n    [6]\n is a good pair of teams. Your task is\nto find the maximum possible size \n    x\n for which it is possible to compose\na valid pair of teams, where each team size is \n    x\n (skills in the first\nteam needed to be unique, skills in the second team should be the same between\nthem). A student cannot be part of more than one team. You have to answer\n\n    t\n independent test cases. Input The first line of the input contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. Then\n\n    t\n test cases follow. The first line of the test case contains one\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of\nstudents. The second line of the test case contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n), where \n    a_i\n is the skill\nof the \n    i\n-th student. Different students can have the same skills. It is\nguaranteed that the sum of \n    n\n over all test cases does not exceed \n    2\n    \n    \u00b7 10^5\n (\n    \u2211 n \n    \u2264 2 \n    \u00b7 10^5\n). Output For each test\ncase, print the answer \u2014 the maximum possible size \n    x\n for which it is\npossible to compose a valid pair of teams, where each team size is \n    x\n.\nExample Input 4 7 4 2 4 1 4 3 4 5 2 1 5 4 3 1 1 4 1 1 1 3 Output 3 1 0 2 Note\nIn the first test case of the example, it is possible to construct two teams\nof size \n    3\n: the first team is \n    [1, 2, 4]\n and the second team is\n\n    [4, 4, 4]\n. Note, that there are some other ways to construct two valid\nteams of size \n    3\n.\n\n",
        "cf_contest_id": 1335,
        "cf_index": "C",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n7\r\n4 2 4 1 4 3 4\r\n5\r\n2 1 5 4 3\r\n1\r\n1\r\n4\r\n1 1 1 3\r\n",
                "3\r\n1\r\n0\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n9\r\n1 2 2 3 3 9 9 9 9\r\n",
                "3\r\n"
            ],
            [
                "5\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n"
            ]
        ]
    }
]