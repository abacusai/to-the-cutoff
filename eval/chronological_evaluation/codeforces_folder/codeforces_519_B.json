[
    {
        "name": "A and B and Compilation Errors",
        "description": "A and B are preparing themselves for programming contests. B loves to debug\nhis code. But before he runs the solution and starts debugging, he has to\nfirst compile the code. Initially, the compiler displayed n compilation\nerrors, each of them is represented as a positive integer. After some effort,\nB managed to fix some mistake and then another one mistake. However, despite\nthe fact that B is sure that he corrected the two errors, he can not\nunderstand exactly what compilation errors disappeared \u2014 the compiler of the\nlanguage which B uses shows errors in the new order every time! B is sure that\nunlike many other programming languages, compilation errors for his\nprogramming language do not depend on each other, that is, if you correct one\nerror, the set of other error does not change. Can you help B find out exactly\nwhat two errors he corrected? Input The first line of the input contains\ninteger n (3 \u2264 n \u2264 10^5) \u2014 the initial number of compilation errors. The\nsecond line contains n space-separated integers a1, a2, ..., an (1 \u2264 ai \u2264\n10^9) \u2014 the errors the compiler displayed for the first time. The third line\ncontains n - 1 space-separated integers b1, b2, ..., bn - 1 \u2014 the errors\ndisplayed at the second compilation. It is guaranteed that the sequence in the\nthird line contains all numbers of the second string except for exactly one.\nThe fourth line contains n - 2 space-separated integers \u04411, \u04412, ..., \u0441n - 2 \u2014\nthe errors displayed at the third compilation. It is guaranteed that the\nsequence in the fourth line contains all numbers of the third line except for\nexactly one. Output Print two numbers on a single line: the numbers of the\ncompilation errors that disappeared after B made the first and the second\ncorrection, respectively. Examples Input 5 1 5 8 123 7 123 7 5 1 5 1 7 Output\n8 123 Input 6 1 4 3 3 5 7 3 7 5 4 3 4 3 7 5 Output 1 3 Note In the first test\nsample B first corrects the error number 8, then the error number 123. In the\nsecond test sample B first corrects the error number 1, then the error number\n3. Note that if there are multiple errors with the same number, B can correct\nonly one of them in one step.\n\n",
        "cf_contest_id": 519,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 5 8 123 7\r\n123 7 5 1\r\n5 1 7\r\n",
                "8\r\n123\r\n"
            ],
            [
                "6\r\n1 4 3 3 5 7\r\n3 7 5 4 3\r\n4 3 7 5\r\n",
                "1\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n1 2 3\r\n3 2\r\n2\r\n",
                "1\r\n3\r\n"
            ],
            [
                "10\r\n460626451 802090732 277246428 661369649 388684428 784303821 376287098 656422756 9301599 25720377\r\n277246428 388684428 661369649 460626451 656422756 802090732 9301599 784303821 376287098\r\n376287098 802090732 388684428 9301599 656422756 784303821 460626451 277246428\r\n",
                "25720377\r\n661369649\r\n"
            ],
            [
                "3\r\n796067435 964699482 819602309\r\n964699482 796067435\r\n964699482\r\n",
                "819602309\r\n796067435\r\n"
            ],
            [
                "3\r\n374054998 726316780 902899520\r\n902899520 726316780\r\n726316780\r\n",
                "374054998\r\n902899520\r\n"
            ],
            [
                "3\r\n168638990 939116221 323703261\r\n168638990 323703261\r\n168638990\r\n",
                "939116221\r\n323703261\r\n"
            ],
            [
                "3\r\n77 77 77\r\n77 77\r\n77\r\n",
                "77\r\n77\r\n"
            ],
            [
                "3\r\n84 30 9\r\n9 84\r\n9\r\n",
                "30\r\n84\r\n"
            ],
            [
                "6\r\n5 4 3 3 5 5\r\n3 5 5 4 3\r\n3 5 4 3\r\n",
                "5\r\n5\r\n"
            ],
            [
                "4\r\n1 5 7 8\r\n1 5 7\r\n1 5\r\n",
                "8\r\n7\r\n"
            ]
        ]
    }
]