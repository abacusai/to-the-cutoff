[
    {
        "name": "Minibuses on Venus (easy version)",
        "description": "This is the easy version of the problem. The only difference between the three\nversions is the constraints on \n    n\n and \n    k\n. You can make hacks only if\nall versions of the problem are solved. Maxim is a minibus driver on Venus. To\nride on Maxim's minibus, you need a ticket. Each ticket has a number\nconsisting of \n    n\n digits. However, as we know, the residents of Venus use\na numeral system with base \n    k\n, rather than the decimal system. Therefore,\nthe ticket number can be considered as a sequence of \n    n\n integers from\n\n    0\n to \n    k-1\n, inclusive. The residents of Venus consider a ticket to\nbe lucky if there is a digit on it that is equal to the sum of the remaining\ndigits, modulo \n    k\n. For example, if \n    k=10\n, then the ticket \n    7135\n\nis lucky because \n    7 + 1 + 5 \n    \u2261 3 \n    10\n. On the other hand,\nthe ticket \n    7136\n is not lucky because no digit is equal to the sum of the\nothers modulo \n    10\n. Once, while on a trip, Maxim wondered: how many lucky\ntickets exist? At the same time, Maxim understands that this number can be\nvery large, so he is interested only in the answer modulo some prime number\n\n    m\n. Input The only line of the input contains three integers \n    n\n,\n\n    k\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 100\n, \n    1 \n    \u2264 k \n    \u2264 30\n,\n\n    10^8 \n    \u2264 m \n    \u2264 10^9 + 7\n, \n    m\n is a prime number) \u2014 the number of\ndigits on the ticket, the base of the numeral system on Venus, and the module\nfor answer calculation. Output Print one integer \u2014 the number of lucky tickets\nmodulo \n    m\n, i. e. the remainder after dividing the answer by \n    m\n.\nExamples Input 3 2 1000000007 Output 4 Input 3 4 1000000007 Output 28 Note In\nthe first example, there are only four lucky tickets: \n    000\n, \n    011\n,\n\n    101\n, and \n    110\n.\n\n",
        "cf_contest_id": 1808,
        "cf_index": "E1",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "divide and conquer",
            "dp"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2 1000000007\r\n",
                "4\r\n"
            ],
            [
                "3 4 1000000007\r\n",
                "28\r\n"
            ]
        ],
        "private_cases": [
            [
                "8 8 218617523\r\n",
                "7548672\r\n"
            ],
            [
                "8 7 942845753\r\n",
                "4085185\r\n"
            ],
            [
                "7 8 166269869\r\n",
                "908608\r\n"
            ],
            [
                "1 1 813483257\r\n",
                "1\r\n"
            ],
            [
                "1 30 244725337\r\n",
                "1\r\n"
            ],
            [
                "100 1 546317561\r\n",
                "1\r\n"
            ],
            [
                "100 30 491661557\r\n",
                "255602562\r\n"
            ],
            [
                "1 2 989255087\r\n",
                "1\r\n"
            ],
            [
                "2 1 835078241\r\n",
                "1\r\n"
            ],
            [
                "30 10 596371873\r\n",
                "591148904\r\n"
            ],
            [
                "30 9 206230391\r\n",
                "80390070\r\n"
            ],
            [
                "29 10 812429491\r\n",
                "515670116\r\n"
            ],
            [
                "30 1 930252539\r\n",
                "1\r\n"
            ],
            [
                "100 10 417718909\r\n",
                "325499744\r\n"
            ],
            [
                "100 9 722295347\r\n",
                "347522355\r\n"
            ],
            [
                "55 7 502391287\r\n",
                "256611148\r\n"
            ],
            [
                "22 8 361418093\r\n",
                "177068429\r\n"
            ],
            [
                "99 10 546151787\r\n",
                "94088159\r\n"
            ],
            [
                "99 9 381665047\r\n",
                "283126301\r\n"
            ],
            [
                "98 24 912752509\r\n",
                "858902629\r\n"
            ],
            [
                "38 24 460056617\r\n",
                "47244431\r\n"
            ],
            [
                "100 2 312023837\r\n",
                "99845570\r\n"
            ],
            [
                "93 7 392639113\r\n",
                "339792915\r\n"
            ],
            [
                "83 27 385329883\r\n",
                "274932582\r\n"
            ],
            [
                "83 9 560381411\r\n",
                "449686485\r\n"
            ],
            [
                "77 15 695355503\r\n",
                "132829494\r\n"
            ],
            [
                "77 3 730783841\r\n",
                "153188970\r\n"
            ],
            [
                "100 29 616783421\r\n",
                "551629557\r\n"
            ],
            [
                "99 30 415061617\r\n",
                "98221983\r\n"
            ],
            [
                "99 29 714463543\r\n",
                "35837756\r\n"
            ],
            [
                "32 25 358827083\r\n",
                "159886832\r\n"
            ],
            [
                "77 23 124533397\r\n",
                "34669895\r\n"
            ],
            [
                "17 6 300305177\r\n",
                "248270767\r\n"
            ],
            [
                "61 12 476076947\r\n",
                "433248040\r\n"
            ],
            [
                "10 10 446815987\r\n",
                "441785205\r\n"
            ],
            [
                "58 15 417555031\r\n",
                "143099630\r\n"
            ],
            [
                "2 29 388294069\r\n",
                "29\r\n"
            ],
            [
                "43 19 564065849\r\n",
                "540622775\r\n"
            ],
            [
                "87 2 329772193\r\n",
                "182070796\r\n"
            ],
            [
                "32 30 505543937\r\n",
                "137079401\r\n"
            ],
            [
                "15 29 919478041\r\n",
                "419588241\r\n"
            ],
            [
                "56 5 685184341\r\n",
                "256301859\r\n"
            ],
            [
                "100 18 860956123\r\n",
                "600529222\r\n"
            ],
            [
                "53 8 831695231\r\n",
                "527510145\r\n"
            ],
            [
                "97 22 107466973\r\n",
                "58377303\r\n"
            ],
            [
                "41 27 978205999\r\n",
                "470185233\r\n"
            ],
            [
                "86 9 948945029\r\n",
                "231081290\r\n"
            ],
            [
                "26 23 224716813\r\n",
                "89432155\r\n"
            ],
            [
                "70 28 890423119\r\n",
                "234881525\r\n"
            ],
            [
                "23 12 166194887\r\n",
                "154342269\r\n"
            ],
            [
                "1 19 766792963\r\n",
                "1\r\n"
            ],
            [
                "42 3 737531999\r\n",
                "382432127\r\n"
            ],
            [
                "90 22 913303793\r\n",
                "616029625\r\n"
            ],
            [
                "30 6 884042839\r\n",
                "696896441\r\n"
            ],
            [
                "83 4 854781869\r\n",
                "730821096\r\n"
            ],
            [
                "27 9 130553641\r\n",
                "123844032\r\n"
            ],
            [
                "67 7 101292701\r\n",
                "29895449\r\n"
            ],
            [
                "16 13 277064461\r\n",
                "109392005\r\n"
            ],
            [
                "60 26 942770797\r\n",
                "929311274\r\n"
            ],
            [
                "1 16 218542553\r\n",
                "1\r\n"
            ]
        ]
    }
]