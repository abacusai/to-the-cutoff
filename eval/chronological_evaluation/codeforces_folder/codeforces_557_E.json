[
    {
        "name": "Ann and Half-Palindrome",
        "description": "Tomorrow Ann takes the hardest exam of programming where she should get an\nexcellent mark. On the last theoretical class the teacher introduced the\nnotion of a half-palindrome. String t is a half-palindrome, if for all the odd\npositions i () the following condition is held: ti = t|t| - i + 1, where |t|\nis the length of string t if positions are indexed from 1. For example,\nstrings \"abaa\", \"a\", \"bb\", \"abbbaa\" are half-palindromes and strings \"ab\",\n\"bba\" and \"aaabaa\" are not. Ann knows that on the exam she will get string s,\nconsisting only of letters a and b, and number k. To get an excellent mark she\nhas to find the k-th in the lexicographical order string among all substrings\nof s that are half-palyndromes. Note that each substring in this order is\nconsidered as many times as many times it occurs in s. The teachers guarantees\nthat the given number k doesn't exceed the number of substrings of the given\nstring that are half-palindromes. Can you cope with this problem? Input The\nfirst line of the input contains string s (1 \u2264 |s| \u2264 5000), consisting only of\ncharacters 'a' and 'b', where |s| is the length of string s. The second line\ncontains a positive integer k \u2014 the lexicographical number of the requested\nstring among all the half-palindrome substrings of the given string s. The\nstrings are numbered starting from one. It is guaranteed that number k doesn't\nexceed the number of substrings of the given string that are half-palindromes.\nOutput Print a substring of the given string that is the k-th in the\nlexicographical order of all substrings of the given string that are half-\npalindromes. Examples Input abbabaab 7 Output abaa Input aaaaa 10 Output aaa\nInput bbaabb 13 Output bbaabb Note By definition, string a = a1a2... an is\nlexicographically less than string b = b1b2... bm, if either a is a prefix of\nb and doesn't coincide with b, or there exists such i, that a1 = b1, a2 = b2,\n... ai - 1 = bi - 1, ai < bi. In the first sample half-palindrome substrings\nare the following strings \u2014 a, a, a, a, aa, aba, abaa, abba, abbabaa, b, b, b,\nb, baab, bab, bb, bbab, bbabaab (the list is given in the lexicographical\norder).\n\n",
        "cf_contest_id": 557,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "graphs",
            "string suffix structures",
            "strings",
            "trees"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "abbabaab\r\n7\r\n",
                "abaa\r\n"
            ],
            [
                "aaaaa\r\n10\r\n",
                "aaa\r\n"
            ],
            [
                "bbaabb\r\n13\r\n",
                "bbaabb\r\n"
            ]
        ],
        "private_cases": [
            [
                "a\r\n1\r\n",
                "a\r\n"
            ],
            [
                "b\r\n1\r\n",
                "b\r\n"
            ],
            [
                "ababbbbbbbaaaaaaaabbbbbb\r\n23\r\n",
                "aaa\r\n"
            ],
            [
                "aa\r\n3\r\n",
                "aa\r\n"
            ],
            [
                "aa\r\n1\r\n",
                "a\r\n"
            ],
            [
                "aa\r\n2\r\n",
                "a\r\n"
            ],
            [
                "ab\r\n1\r\n",
                "a\r\n"
            ],
            [
                "ab\r\n2\r\n",
                "b\r\n"
            ],
            [
                "aaa\r\n1\r\n",
                "a\r\n"
            ],
            [
                "aaa\r\n2\r\n",
                "a\r\n"
            ],
            [
                "aaa\r\n3\r\n",
                "a\r\n"
            ],
            [
                "aaa\r\n4\r\n",
                "aa\r\n"
            ],
            [
                "aaa\r\n5\r\n",
                "aa\r\n"
            ],
            [
                "aaa\r\n6\r\n",
                "aaa\r\n"
            ],
            [
                "abb\r\n1\r\n",
                "a\r\n"
            ],
            [
                "abb\r\n2\r\n",
                "b\r\n"
            ],
            [
                "abb\r\n3\r\n",
                "b\r\n"
            ],
            [
                "abb\r\n4\r\n",
                "bb\r\n"
            ],
            [
                "aba\r\n4\r\n",
                "b\r\n"
            ],
            [
                "aba\r\n3\r\n",
                "aba\r\n"
            ],
            [
                "aba\r\n2\r\n",
                "a\r\n"
            ],
            [
                "aba\r\n1\r\n",
                "a\r\n"
            ]
        ]
    }
]