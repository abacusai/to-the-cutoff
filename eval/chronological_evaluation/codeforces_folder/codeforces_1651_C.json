[
    {
        "name": "Fault-tolerant Network",
        "description": "There is a classroom with two rows of computers. There are \n    n\n computers\nin each row and each computer has its own grade. Computers in the first row\nhas grades \n    a_1, a_2, \n    \u2026, a_n\n and in the second row \u2014 \n    b_1, b_2,\n    \n    \u2026, b_n\n. Initially, all pairs of neighboring computers in each row are\nconnected by wire (pairs \n    (i, i + 1)\n for all \n    1 \n    \u2264 i < n\n), so two\nrows form two independent computer networks. Your task is to combine them in\none common network by connecting one or more pairs of computers from different\nrows. Connecting the \n    i\n-th computer from the first row and the \n    j\n-th\ncomputer from the second row costs \n    |a_i - b_j|\n. You can connect one\ncomputer to several other computers, but you need to provide at least a basic\nfault tolerance: you need to connect computers in such a way that the network\nstays connected, despite one of its computer failing. In other words, if one\ncomputer is broken (no matter which one), the network won't split in two or\nmore parts. That is the minimum total cost to make a fault-tolerant network?\nInput The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014 the number of test cases. Next \n    t\n cases follow. The first line\nof each test case contains the single integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the number of computers in each row. The second line\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^9\n) \u2014 the grades of computers in the first row. The third line contains\n\n    n\n integers \n    b_1, b_2, \n    \u2026, b_n\n (\n    1 \n    \u2264 b_i \n    \u2264 10^9\n) \u2014\nthe grades of computers in the second row. It's guaranteed that the total sum\nof \n    n\n doesn't exceed \n    2 \n    \u00b7 10^5\n. Output For each test case,\nprint a single integer \u2014 the minimum total cost to make a fault-tolerant\nnetwork. Example Input 2 3 1 10 1 20 4 25 4 1 1 1 1 1000000000 1000000000\n1000000000 1000000000 Output 31 1999999998 Note In the first test case, it's\noptimal to connect four pairs of computers: computer \n    1\n from the first\nrow with computer \n    2\n from the second row: cost \n    |1 - 4| = 3\n;\ncomputer \n    3\n from the first row with computer \n    2\n from the second row:\ncost \n    |1 - 4| = 3\n; computer \n    2\n from the first row with computer\n\n    1\n from the second row: cost \n    |10 - 20| = 10\n; computer \n    2\n from\nthe first row with computer \n    3\n from the second row: cost \n    |10 - 25| =\n    15\n; In total, \n    3 + 3 + 10 + 15 = 31\n.In the second test case, it's\noptimal to connect \n    1\n from the first row with \n    1\n from the second\nrow, and \n    4\n from the first row with \n    4\n from the second row.\n\n",
        "cf_contest_id": 1651,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n3\r\n1 10 1\r\n20 4 25\r\n4\r\n1 1 1 1\r\n1000000000 1000000000 1000000000 1000000000\r\n",
                "31\r\n1999999998\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n3\r\n69 69 69\r\n69 69 69\r\n",
                "0\r\n"
            ]
        ]
    }
]