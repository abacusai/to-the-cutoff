[
    {
        "name": "Shoe Store",
        "description": "The warehouse in your shop has n shoe pairs. Each pair is characterized by two\nintegers: its price ci and its size si. We know that on this very day all\nnumbers si are different, that is, there is no more than one pair of each\nsize. The shop has m customers who came at the same time. The customer number\ni has di money and the size of his feet equals li. The customer number i can\nbuy the pair number j, if cj \u2264 di, and also if li = sj or li = sj - 1; that\nis, it is necessary that he has enough money to pay for the shoes. It is also\nnecessary that the size of his feet equals to or is less by 1 than the size of\nthe shoes he chooses. Your task is to sell some customers pairs of shoes (a\npair per person) so as to maximize the sum of the sold pairs cj that is, the\nprofit. It is guaranteed that each customer buys no more than one pair and\neach pair will be bought by no more than one customer. Input The first input\nline contains the only integer n (1 \u2264 n \u2264 10^5) \u2014 the number of shoe pairs in\nthe warehouse. Then n lines contain the descriptions of pairs of shoes as two\nintegers ci and si (1 \u2264 ci, si \u2264 10^9), the numbers are separated by a space.\nIt is guaranteed that all numbers si are different. The next line contains an\ninteger m (1 \u2264 m \u2264 10^5) \u2014 the number of customers in the shop. Next m lines\ncontain the customers' descriptions as two integers di and li (1 \u2264 di, li \u2264\n10^9), the numbers are separated by a space. Output In the first line print\nthe only integer \u2014 the maximum profit you can get from selling shoes. In the\nsecond line print an integer k \u2014 the number of shoe pairs you will sell. In\nthe following k lines print the descriptions of the sold pairs \u2014 two space-\nseparated integers where the first number is the customer's number and the\nsecond number is the number of the shoes the customer will buy. You can print\npairs of numbers \"the customer's number and the shoes' number\" in any order,\nthe customers and the pairs of shoes are numbered starting from 1 in the order\nin which they are given in the input. If there are several optimal answers,\nyou are allowed to print any of them. Please do not use the \nto read or write 64-bit numbers in \u0421++. It is preferred to use the cin, cout\nstreams or the \n20 1 20 2 Output 30 2 2 3 1 1 Input 3 10 4 20 5 30 6 2 70 4 50 5 Output 50 2 2\n3 1 2\n\n",
        "cf_contest_id": 166,
        "cf_index": "D",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "graph matchings",
            "greedy",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n10 1\r\n30 2\r\n20 3\r\n2\r\n20 1\r\n20 2\r\n",
                "30\r\n2\r\n2 3\r\n1 1\r\n"
            ],
            [
                "3\r\n10 4\r\n20 5\r\n30 6\r\n2\r\n70 4\r\n50 5\r\n",
                "50\r\n2\r\n2 3\r\n1 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n7 2\r\n7 4\r\n6 5\r\n5 1\r\n2 3\r\n5\r\n7 1\r\n7 1\r\n7 5\r\n4 2\r\n1 3\r\n",
                "20\r\n4\r\n4 5\r\n3 3\r\n2 1\r\n1 4\r\n"
            ],
            [
                "5\r\n4 11\r\n10 15\r\n9 10\r\n3 17\r\n10 12\r\n1\r\n1 18\r\n",
                "0\r\n0\r\n"
            ],
            [
                "10\r\n32 79\r\n92 70\r\n27 80\r\n49 78\r\n99 87\r\n67 71\r\n7 77\r\n88 82\r\n24 88\r\n88 83\r\n2\r\n1 76\r\n57 75\r\n",
                "0\r\n0\r\n"
            ],
            [
                "10\r\n53 51\r\n4 50\r\n35 49\r\n25 41\r\n15 45\r\n53 48\r\n74 46\r\n12 43\r\n61 42\r\n37 52\r\n50\r\n27 41\r\n82 43\r\n5 41\r\n32 44\r\n60 42\r\n94 50\r\n22 42\r\n61 45\r\n60 43\r\n72 46\r\n60 50\r\n86 41\r\n31 46\r\n60 41\r\n89 52\r\n66 48\r\n81 46\r\n68 49\r\n28 42\r\n11 48\r\n98 50\r\n51 42\r\n51 51\r\n95 47\r\n9 47\r\n22 41\r\n68 41\r\n18 48\r\n24 49\r\n77 45\r\n87 51\r\n38 45\r\n81 50\r\n82 49\r\n13 47\r\n45 41\r\n39 45\r\n79 42\r\n21 43\r\n5 42\r\n44 43\r\n16 41\r\n14 47\r\n42 43\r\n87 43\r\n10 46\r\n13 44\r\n50 50\r\n58 49\r\n68 49\r\n",
                "369\r\n10\r\n24 6\r\n17 7\r\n16 3\r\n15 10\r\n12 9\r\n11 1\r\n6 2\r\n4 5\r\n2 8\r\n1 4\r\n"
            ],
            [
                "3\r\n1000000000 1\r\n1000000000 2\r\n1000000000 3\r\n3\r\n1000000000 1\r\n1000000000 2\r\n1000000000 3\r\n",
                "3000000000\r\n3\r\n3 3\r\n2 2\r\n1 1\r\n"
            ],
            [
                "7\r\n828791834 87999\r\n900749980 27493\r\n175738429 19989\r\n689131699 7647\r\n387824932 86552\r\n563747296 36840\r\n860723435 95029\r\n7\r\n792278798 72699\r\n752634440 81506\r\n192843968 47425\r\n202372845 89530\r\n432650955 78337\r\n94252102 60538\r\n634653105 86611\r\n",
                "0\r\n0\r\n"
            ],
            [
                "1\r\n1 1\r\n1\r\n1 1\r\n",
                "1\r\n1\r\n1 1\r\n"
            ],
            [
                "1\r\n2 1\r\n1\r\n1 1\r\n",
                "0\r\n0\r\n"
            ],
            [
                "1\r\n1 3\r\n1\r\n1 1\r\n",
                "0\r\n0\r\n"
            ],
            [
                "1\r\n1 2\r\n1\r\n1 1\r\n",
                "1\r\n1\r\n1 1\r\n"
            ],
            [
                "2\r\n2 1\r\n1 2\r\n1\r\n5 1\r\n",
                "2\r\n1\r\n1 1\r\n"
            ],
            [
                "2\r\n2 1\r\n1 2\r\n1\r\n1 1\r\n",
                "1\r\n1\r\n1 2\r\n"
            ],
            [
                "10\r\n262742357 1943\r\n287214250 5894\r\n781887425 3315\r\n948341640 5251\r\n590248349 4042\r\n354365659 456\r\n193997153 4604\r\n290852428 1045\r\n112207206 4097\r\n948478528 2904\r\n10\r\n262742357 1943\r\n287214250 5894\r\n781887425 3315\r\n948341640 5251\r\n590248349 4042\r\n354365659 456\r\n193997153 4604\r\n290852428 1045\r\n112207206 4097\r\n948478528 2904\r\n",
                "4770334995\r\n10\r\n10 10\r\n9 9\r\n8 8\r\n7 7\r\n6 6\r\n5 5\r\n4 4\r\n3 3\r\n2 2\r\n1 1\r\n"
            ],
            [
                "5\r\n4 1\r\n4 5\r\n10 3\r\n6 2\r\n6 4\r\n5\r\n7 2\r\n10 5\r\n5 1\r\n9 1\r\n10 2\r\n",
                "24\r\n4\r\n5 3\r\n3 1\r\n2 2\r\n1 4\r\n"
            ],
            [
                "3\r\n1 1\r\n3 2\r\n2 3\r\n2\r\n5 1\r\n5 2\r\n",
                "5\r\n2\r\n2 3\r\n1 2\r\n"
            ],
            [
                "2\r\n50 3\r\n1 4\r\n2\r\n10 3\r\n100 3\r\n",
                "51\r\n2\r\n2 1\r\n1 2\r\n"
            ]
        ]
    }
]