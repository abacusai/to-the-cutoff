[
    {
        "name": "Are You Fired?",
        "description": "Levian works as an accountant in a large company. Levian knows how much the\ncompany has earned in each of the \n    n\n consecutive months \u2014 in the\n\n    i\n-th month the company had income equal to \n    a_i\n (positive income\nmeans profit, negative income means loss, zero income means no change).\nBecause of the general self-isolation, the first \n    \u2308\n    n2\n    \u2309\n months income might have been completely unstable, but then\neverything stabilized and for the last \n    \u230a\n    n2\n    \u230b\n months the income was the same. Levian decided to tell the\ndirectors \n    n-k+1\n numbers \u2014 the total income of the company for each\n\n    k\n consecutive months. In other words, for each \n    i\n between \n    1\n\nand \n    n-k+1\n he will say the value \n    a_i + a_i+1 + \n    \u2026 + a_i + k -\n    1\n. For example, if \n    a=[-1, 0, 1, 2, 2]\n and \n    k=3\n he will say the\nnumbers \n    0, 3, 5\n. Unfortunately, if at least one total income reported by\nLevian is not a profit (income \n    \u2264 0\n), the directors will get angry\nand fire the failed accountant. Save Levian's career: find any such \n    k\n,\nthat for each \n    k\n months in a row the company had made a profit, or report\nthat it is impossible. Input The first line contains a single integer \n    n\n\n(\n    2 \n    \u2264 n \n    \u2264 5\n    \u00b7 10^5\n) \u2014 the number of months for which Levian\nmust account. The second line contains \n    \u2308\n    n/2\n    \u2309\n\nintegers \n    a_1, a_2, \n    \u2026, a_\n    \u2308\n    n/2\n    \u2309\n, where\n\n    a_i\n (\n    -10^9 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the income of the company in\nthe \n    i\n-th month. Third line contains a single integer \n    x\n (\n    -10^9\n    \n    \u2264 x \n    \u2264 10^9\n) \u2014 income in every month from\n\n    \u2308\n    n/2\n    \u2309 + 1\n to \n    n\n. Output In a single line,\nprint the appropriate integer \n    k\n or \n    -1\n, if it does not exist. If\nthere are multiple possible answers, you can print any. Examples Input 3 2 -1\n2 Output 2 Input 5 2 2 -8 2 Output -1 Input 6 -2 -2 6 -1 Output 4 Note In the\nfirst example, \n    k=2\n and \n    k=3\n satisfy: in the first case, Levian will\nreport the numbers \n    1, 1\n, and in the second case \u2014 one number \n    3\n. In\nthe second example, there is no such \n    k\n. In the third example, the only\nanswer is \n    k=4\n: he will report the numbers \n    1,2,3\n.\n\n",
        "cf_contest_id": 1358,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2 -1\r\n2\r\n",
                "3\r\n"
            ],
            [
                "5\r\n2 2 -8\r\n2\r\n",
                "-1\r\n"
            ],
            [
                "6\r\n-2 -2 6\r\n-1\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n2\r\n-1\r\n",
                "2\r\n"
            ],
            [
                "6\r\n0 0 -15\r\n5\r\n",
                "-1\r\n"
            ],
            [
                "2\r\n2\r\n2\r\n",
                "2\r\n"
            ],
            [
                "3\r\n-1 5\r\n-4\r\n",
                "2\r\n"
            ],
            [
                "7\r\n-7 -7 -8 22\r\n1\r\n",
                "7\r\n"
            ],
            [
                "10\r\n-1 -1 -1 -1 6\r\n-1\r\n",
                "6\r\n"
            ],
            [
                "5\r\n17 -1345 246\r\n541\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n1000000000 999999999\r\n-1000000000\r\n",
                "-1\r\n"
            ],
            [
                "2\r\n0\r\n0\r\n",
                "-1\r\n"
            ],
            [
                "2\r\n1000000000\r\n-1000000000\r\n",
                "-1\r\n"
            ],
            [
                "2\r\n10\r\n-10\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1000000000 0\r\n-1000000000\r\n",
                "-1\r\n"
            ],
            [
                "17\r\n-542470641 -617247806 998970243 699622219 565143960 -860452587 447120886 203125491 707835273\r\n5\r\n",
                "17\r\n"
            ],
            [
                "2\r\n57\r\n179\r\n",
                "2\r\n"
            ],
            [
                "6\r\n200 -99 -299\r\n67\r\n",
                "6\r\n"
            ],
            [
                "10\r\n-102 100 8 -102 100\r\n-1\r\n",
                "8\r\n"
            ],
            [
                "7\r\n0 0 0 10\r\n1\r\n",
                "7\r\n"
            ]
        ]
    }
]