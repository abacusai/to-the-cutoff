[
    {
        "name": "Minimal String Xoration",
        "description": "You are given an integer \n    n\n and a string \n    s\n consisting of \n    2^n\n\nlowercase letters of the English alphabet. The characters of the string\n\n    s\n are \n    s_0s_1s_2\n    \u22ef s_2^n-1\n. A string \n    t\n of length\n\n    2^n\n (whose characters are denoted by \n    t_0t_1t_2\n    \u22ef t_2^n-1\n)\nis a xoration of \n    s\n if there exists an integer \n    j\n (\n    0\n    \u2264 j\n    \n    \u2264 2^n-1\n) such that, for each \n    0 \n    \u2264 i \n    \u2264 2^n-1\n, \n    t_i =\n    s_i \n    \u2295 j\n (where \n    \u2295\n denotes the operation bitwise XOR).\nFind the lexicographically minimal xoration of \n    s\n. A string \n    a\n is\nlexicographically smaller than a string \n    b\n if and only if one of the\nfollowing holds: \n    a\n is a prefix of \n    b\n, but \n    a \n     b\n; in the\nfirst position where \n    a\n and \n    b\n differ, the string \n    a\n has a\nletter that appears earlier in the alphabet than the corresponding letter in\n\n    b\n. Input The first line contains a single integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 18\n). The second line contains a string \n    s\n consisting of\n\n    2^n\n lowercase letters of the English alphabet. Output Print a single\nline containing the lexicographically minimal xoration of \n    s\n. Examples\nInput 2 acba Output abca Input 3 bcbaaabb Output aabbbcba Input 4\nbdbcbccdbdbaaccd Output abdbdccacbdbdccb Input 5\nccfcffccccccffcfcfccfffffcccccff Output cccccffffcccccffccfcffcccccfffff Input\n1 zz Output zz Note In the first test, the lexicographically minimal xoration\n\n    t\n of \n    s =\n\"acba\" is \"abca\". It's a xoration because, for \n    j =\n    3\n, \n    t_0 = s_0 \n    \u2295 j = s_3 =\n \"a\"; \n    t_1 = s_1 \n    \u2295 j =\n    s_2 =\n \"b\"; \n    t_2 = s_2 \n    \u2295 j = s_1 =\n \"c\"; \n    t_3 = s_3 \n    \u2295\n    j = s_0 =\n \"a\". There isn't any xoration of \n    s\n lexicographically\nsmaller than \"abca\".In the second test, the minimal string xoration\ncorresponds to choosing \n    j = 4\n in the definition of xoration. In the\nthird test, the minimal string xoration corresponds to choosing \n    j = 11\n\nin the definition of xoration. In the fourth test, the minimal string xoration\ncorresponds to choosing \n    j = 10\n in the definition of xoration. In the\nfifth test, the minimal string xoration corresponds to choosing either \n    j =\n    0\n or \n    j = 1\n in the definition of xoration.\n\n",
        "cf_contest_id": 1654,
        "cf_index": "F",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "data structures",
            "divide and conquer",
            "greedy",
            "hashing",
            "sortings",
            "strings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\nacba\r\n",
                "abca\r\n"
            ],
            [
                "3\r\nbcbaaabb\r\n",
                "aabbbcba\r\n"
            ],
            [
                "4\r\nbdbcbccdbdbaaccd\r\n",
                "abdbdccacbdbdccb\r\n"
            ],
            [
                "5\r\nccfcffccccccffcfcfccfffffcccccff\r\n",
                "cccccffffcccccffccfcffcccccfffff\r\n"
            ],
            [
                "1\r\nzz\r\n",
                "zz\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nup\r\n",
                "pu\r\n"
            ]
        ]
    }
]