[
    {
        "name": "Minimum Extraction",
        "description": "Yelisey has an array \n    a\n of \n    n\n integers. If \n    a\n has length\nstrictly greater than \n    1\n, then Yelisei can apply an operation called\nminimum extraction to it: First, Yelisei finds the minimal number \n    m\n in\nthe array. If there are several identical minima, Yelisey can choose any of\nthem. Then the selected minimal element is removed from the array. After that,\n\n    m\n is subtracted from each remaining element. Thus, after each operation,\nthe length of the array is reduced by \n    1\n. For example, if \n    a = [1, 6,\n    -4, -2, -4]\n, then the minimum element in it is \n    a_3 = -4\n, which means\nthat after this operation the array will be equal to \n    a=[1 - (-4), 6 -\n    (-4), -2 - (-4), -4 - (-4)] = [5, 10, 2, 0]\n. Since Yelisey likes big\nnumbers, he wants the numbers in the array \n    a\n to be as big as possible.\nFormally speaking, he wants to make the minimum of the numbers in array\n\n    a\n to be maximal possible (i.e. he want to maximize a minimum). To do\nthis, Yelisey can apply the minimum extraction operation to the array as many\ntimes as he wants (possibly, zero). Note that the operation cannot be applied\nto an array of length \n    1\n. Help him find what maximal value can the\nminimal element of the array have after applying several (possibly, zero)\nminimum extraction operations to the array. Input The first line contains an\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The\nnext \n    2t\n lines contain descriptions of the test cases. In the description\nof each test case, the first line contains an integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the original length of the array \n    a\n. The\nsecond line of the description lists \n    n\n space-separated integers\n\n    a_i\n (\n    -10^9 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 elements of the array\n\n    a\n. It is guaranteed that the sum of \n    n\n over all test cases does not\nexceed \n    2 \n    \u00b7 10^5\n. Output Print \n    t\n lines, each of them\ncontaining the answer to the corresponding test case. The answer to the test\ncase is a single integer \u2014 the maximal possible minimum in \n    a\n, which can\nbe obtained by several applications of the described operation to it. Example\nInput 8 1 10 2 0 0 3 -1 2 0 4 2 10 1 7 2 2 3 5 3 2 -4 -2 0 2 -1 1 1 -2 Output\n10 0 2 5 2 2 2 -2 Note In the first example test case, the original length of\nthe array \n    n = 1\n. Therefore minimum extraction cannot be applied to it.\nThus, the array remains unchanged and the answer is \n    a_1 = 10\n. In the\nsecond set of input data, the array will always consist only of zeros. In the\nthird set, the array will be changing as follows: \n    [\n    -1, 2,\n    0] \n    \u2192 [3, \n    1] \n    \u2192 [\n    2]\n. The minimum\nelements are highlighted with \n    blue\n. The maximal\none is \n    2\n. In the fourth set, the array will be modified as \n    [2, 10,\n    \n    1, 7] \n    \u2192 [\n    1, 9, 6] \n    \u2192 [8,\n    \n    5] \n    \u2192 [\n    3]\n. Similarly, the maximum of the\nminimum elements is \n    5\n.\n\n",
        "cf_contest_id": 1607,
        "cf_index": "C",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8\r\n1\r\n10\r\n2\r\n0 0\r\n3\r\n-1 2 0\r\n4\r\n2 10 1 7\r\n2\r\n2 3\r\n5\r\n3 2 -4 -2 0\r\n2\r\n-1 1\r\n1\r\n-2\r\n",
                "10\r\n0\r\n2\r\n5\r\n2\r\n2\r\n2\r\n-2\r\n"
            ]
        ],
        "private_cases": []
    }
]