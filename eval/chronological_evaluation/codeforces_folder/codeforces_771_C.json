[
    {
        "name": "Bear and Tree Jumps",
        "description": "A tree is an undirected connected graph without cycles. The distance between\ntwo vertices is the number of edges in a simple path between them. Limak is a\nlittle polar bear. He lives in a tree that consists of n vertices, numbered 1\nthrough n. Limak recently learned how to jump. He can jump from a vertex to\nany vertex within distance at most k. For a pair of vertices (s, t) we define\nf(s, t) as the minimum number of jumps Limak needs to get from s to t. Your\ntask is to find the sum of f(s, t) over all pairs of vertices (s, t) such that\ns < t. Input The first line of the input contains two integers n and k (2 \u2264 n\n\u2264 200 000, 1 \u2264 k \u2264 5) \u2014 the number of vertices in the tree and the maximum\nallowed jump distance respectively. The next n - 1 lines describe edges in the\ntree. The i-th of those lines contains two integers ai and bi (1 \u2264 ai, bi \u2264 n)\n\u2014 the indices on vertices connected with i-th edge. It's guaranteed that the\ngiven edges form a tree. Output Print one integer, denoting the sum of f(s, t)\nover all pairs of vertices (s, t) such that s < t. Examples Input 6 2 1 2 1 3\n2 4 2 5 4 6 Output 20 Input 13 3 1 2 3 2 4 2 5 2 3 6 10 6 6 7 6 13 5 8 5 9 9\n11 11 12 Output 114 Input 3 5 2 1 3 1 Output 3 Note In the first sample, the\ngiven tree has 6 vertices and it's displayed on the drawing below. Limak can\njump to any vertex within distance at most 2. For example, from the vertex 5\nhe can jump to any of vertices: 1, 2 and 4 (well, he can also jump to the\nvertex 5 itself). There are pairs of vertices (s, t) such that s < t. For 5 of\nthose pairs Limak would need two jumps: (1, 6), (3, 4), (3, 5), (3, 6), (5,\n6). For other 10 pairs one jump is enough. So, the answer is 5\u00b72 + 10\u00b71 = 20.\nIn the third sample, Limak can jump between every two vertices directly. There\nare 3 pairs of vertices (s < t), so the answer is 3\u00b71 = 3.\n\n",
        "cf_contest_id": 771,
        "cf_index": "C",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 2\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n4 6\r\n",
                "20"
            ],
            [
                "13 3\r\n1 2\r\n3 2\r\n4 2\r\n5 2\r\n3 6\r\n10 6\r\n6 7\r\n6 13\r\n5 8\r\n5 9\r\n9 11\r\n11 12\r\n",
                "114"
            ],
            [
                "3 5\r\n2 1\r\n3 1\r\n",
                "3"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1 2\r\n",
                "1"
            ],
            [
                "2 5\r\n2 1\r\n",
                "1"
            ],
            [
                "15 1\r\n12 9\r\n13 7\r\n1 3\r\n10 4\r\n9 2\r\n2 15\r\n11 4\r\n2 14\r\n10 8\r\n6 7\r\n12 5\r\n8 7\r\n3 10\r\n10 2\r\n",
                "346"
            ],
            [
                "4 2\r\n3 4\r\n2 4\r\n3 1\r\n",
                "7"
            ],
            [
                "12 3\r\n5 11\r\n10 11\r\n6 4\r\n8 9\r\n4 12\r\n10 7\r\n4 1\r\n3 1\r\n2 12\r\n9 4\r\n9 10\r\n",
                "88"
            ]
        ]
    }
]