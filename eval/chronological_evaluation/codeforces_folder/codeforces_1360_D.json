[
    {
        "name": "Buying Shovels",
        "description": "Polycarp wants to buy exactly \n    n\n shovels. The shop sells packages with\nshovels. The store has \n    k\n types of packages: the package of the\n\n    i\n-th type consists of exactly \n    i\n shovels (\n    1 \n    \u2264 i \n    \u2264 k\n).\nThe store has an infinite number of packages of each type. Polycarp wants to\nchoose one type of packages and then buy several (one or more) packages of\nthis type. What is the smallest number of packages Polycarp will have to buy\nto get exactly \n    n\n shovels? For example, if \n    n=8\n and \n    k=7\n, then\nPolycarp will buy \n    2\n packages of \n    4\n shovels. Help Polycarp find the\nminimum number of packages that he needs to buy, given that he: will buy\nexactly \n    n\n shovels in total; the sizes of all packages he will buy are\nall the same and the number of shovels in each package is an integer from\n\n    1\n to \n    k\n, inclusive. Input The first line contains an integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases in the input.\nThen, \n    t\n test cases follow, one per line. Each test case consists of two\npositive integers \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^9\n) and \n    k\n (\n    1 \n    \u2264\n    k \n    \u2264 10^9\n) \u2014 the number of shovels and the number of types of packages.\nOutput Print \n    t\n answers to the test cases. Each answer is a positive\ninteger \u2014 the minimum number of packages. Example Input 5 8 7 8 1 6 10\n999999733 999999732 999999733 999999733 Output 2 8 1 999999733 1 Note The\nanswer to the first test case was explained in the statement. In the second\ntest case, there is only one way to buy \n    8\n shovels \u2014 \n    8\n packages of\none shovel. In the third test case, you need to buy a \n    1\n package of\n\n    6\n shovels.\n\n",
        "cf_contest_id": 1360,
        "cf_index": "D",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n8 7\r\n8 1\r\n6 10\r\n999999733 999999732\r\n999999733 999999733\r\n",
                "2\r\n8\r\n1\r\n999999733\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n999999733 999999732\r\n999999733 999999732\r\n999999733 999999732\r\n999999733 999999732\r\n999999733 999999732\r\n",
                "999999733\r\n999999733\r\n999999733\r\n999999733\r\n999999733\r\n"
            ],
            [
                "1\r\n999999733 31623\r\n",
                "999999733\r\n"
            ],
            [
                "10\r\n999999733 31623\r\n999999733 31623\r\n999999733 31623\r\n999999733 31623\r\n999999733 31623\r\n999999733 31623\r\n999999733 31623\r\n999999733 31623\r\n999999733 31623\r\n999999733 31623\r\n",
                "999999733\r\n999999733\r\n999999733\r\n999999733\r\n999999733\r\n999999733\r\n999999733\r\n999999733\r\n999999733\r\n999999733\r\n"
            ],
            [
                "1\r\n1000000000 2\r\n",
                "500000000\r\n"
            ],
            [
                "2\r\n1000000000 2\r\n1000000000 2\r\n",
                "500000000\r\n500000000\r\n"
            ],
            [
                "5\r\n999999998 11\r\n999999998 11\r\n999999998 11\r\n999999998 11\r\n999999998 11\r\n",
                "499999999\r\n499999999\r\n499999999\r\n499999999\r\n499999999\r\n"
            ],
            [
                "1\r\n1000000000 3\r\n",
                "500000000\r\n"
            ],
            [
                "8\r\n1000000000 1000000000\r\n1000000000 2\r\n1000000000 100000001\r\n1000000000 7\r\n1000000000 1000000000\r\n1000000000 2\r\n1000000000 100000001\r\n1000000000 7\r\n",
                "1\r\n500000000\r\n10\r\n200000000\r\n1\r\n500000000\r\n10\r\n200000000\r\n"
            ],
            [
                "4\r\n1000000000 1000000000\r\n1000000000 2\r\n1000000000 100000001\r\n1000000000 7\r\n",
                "1\r\n500000000\r\n10\r\n200000000\r\n"
            ],
            [
                "1\r\n8 2\r\n",
                "4\r\n"
            ],
            [
                "10\r\n208790602 104395300\r\n208790602 104395300\r\n208790602 104395300\r\n208790602 104395300\r\n208790602 104395300\r\n208790602 104395300\r\n208790602 104395300\r\n208790602 104395300\r\n208790602 104395300\r\n208790602 104395300\r\n",
                "104395301\r\n104395301\r\n104395301\r\n104395301\r\n104395301\r\n104395301\r\n104395301\r\n104395301\r\n104395301\r\n104395301\r\n"
            ],
            [
                "10\r\n999002449 31606\r\n999002449 31606\r\n999002449 31606\r\n999002449 31606\r\n999002449 31606\r\n999002449 31606\r\n999002449 31606\r\n999002449 31606\r\n999002449 31606\r\n999002449 31606\r\n",
                "999002449\r\n999002449\r\n999002449\r\n999002449\r\n999002449\r\n999002449\r\n999002449\r\n999002449\r\n999002449\r\n999002449\r\n"
            ],
            [
                "10\r\n1000000000 2\r\n1 1\r\n1 1000000000\r\n1000000000 1000000000\r\n1000000000 1\r\n1000000000 123456789\r\n123456789 2\r\n123456789 123456780\r\n111111113 11\r\n1000000000 3\r\n",
                "500000000\r\n1\r\n1\r\n1\r\n1000000000\r\n10\r\n123456789\r\n3\r\n111111113\r\n500000000\r\n"
            ],
            [
                "1\r\n536870912 50\r\n",
                "16777216\r\n"
            ],
            [
                "1\r\n999999999 1\r\n",
                "999999999\r\n"
            ],
            [
                "1\r\n536870912 536870912\r\n",
                "1\r\n"
            ],
            [
                "13\r\n1000000000 2\r\n1 1\r\n1 1000000000\r\n1000000000 1000000000\r\n1000000000 1\r\n1000000000 123456789\r\n123456789 2\r\n123456789 123456780\r\n111111113 11\r\n1000000000 3\r\n2 100003679\r\n100003679 2\r\n100003679 100003679\r\n",
                "500000000\r\n1\r\n1\r\n1\r\n1000000000\r\n10\r\n123456789\r\n3\r\n111111113\r\n500000000\r\n1\r\n100003679\r\n1\r\n"
            ],
            [
                "1\r\n15060 2\r\n",
                "7530\r\n"
            ],
            [
                "1\r\n536870912 536870911\r\n",
                "2\r\n"
            ],
            [
                "6\r\n8 7\r\n8 1\r\n6 10\r\n999999733 999999732\r\n999999733 999999733\r\n150600 9\r\n",
                "2\r\n8\r\n1\r\n999999733\r\n1\r\n18825\r\n"
            ],
            [
                "1\r\n91 5\r\n",
                "91\r\n"
            ],
            [
                "1\r\n999999986 400000000\r\n",
                "499999993\r\n"
            ],
            [
                "1\r\n49 3\r\n",
                "49\r\n"
            ],
            [
                "1\r\n1234 1200\r\n",
                "2\r\n"
            ],
            [
                "10\r\n999999733 999999732\r\n999999733 999999733\r\n999999997 14084507\r\n999999997 14084506\r\n999999997 71\r\n999999997 2251\r\n999999997 2250\r\n21 6\r\n21 7\r\n1 1\r\n",
                "999999733\r\n1\r\n71\r\n2251\r\n14084507\r\n444247\r\n14084507\r\n7\r\n3\r\n1\r\n"
            ],
            [
                "1\r\n526870912 50\r\n",
                "13865024\r\n"
            ],
            [
                "1\r\n68816 139\r\n",
                "506\r\n"
            ],
            [
                "1\r\n8554 7\r\n",
                "1222\r\n"
            ],
            [
                "1\r\n8738 9\r\n",
                "4369\r\n"
            ]
        ]
    }
]