[
    {
        "name": "Milutin's Plums",
        "description": "As you all know, the plum harvesting season is on! Little Milutin had his\nplums planted in an orchard that can be represented as an \n    n\n by \n    m\n\nmatrix. While he was harvesting, he wrote the heights of all trees in a matrix\nof dimensions \n    n\n by \n    m\n. At night, when he has spare time, he likes\nto perform various statistics on his trees. This time, he is curious to find\nout the height of his lowest tree. So far, he has discovered some interesting\nproperties of his orchard. There is one particular property that he thinks is\nuseful for finding the tree with the smallest heigh. Formally, let \n    L(i)\n\nbe the leftmost tree with the smallest height in the \n    i\n-th row of his\norchard. He knows that \n    L(i) \n    \u2264 L(i+1)\n for all \n    1 \n    \u2264 i \n    \u2264 n -\n    1\n. Moreover, if he takes a submatrix induced by any subset of rows and any\nsubset of columns, \n    L(i) \n    \u2264 L(i+1)\n will hold for all \n    1 \n    \u2264 i\n    \n    \u2264 n'-1\n, where \n    n'\n is the number of rows in that submatrix. Since\nthe season is at its peak and he is short on time, he asks you to help him\nfind the plum tree with minimal height. Input This problem is interactive. The\nfirst line of input will contain two integers \n    n\n and \n    m\n,\nrepresenting the number of rows and the number of columns in Milutin's\norchard. It is guaranteed that \n    1 \n    \u2264 n, m \n    \u2264 10^6\n. The following\nlines will contain the answers to your queries. Output Once you know have\nfound the minimum value \n    r\n, you should print ! \n    r\n to the standard\noutput. Interaction Your code is allowed to query for an entry \n    (i, j)\n of\na matrix (i.e. get the height of the tree which is in the \n    i\n-th row and\n\n    j\n-th column). The query should be formatted as ? \n    i\n \n    j\n, so\nthat \n    1 \n    \u2264 i \n    \u2264 n\n and \n    1 \n    \u2264 j \n    \u2264 m\n. You may assume that\nthe entries of the matrix will be integers between \n    1\n and \n    10^9\n.\nYour solution should use not more than \n    4 \n    \u00b7 (\ud835\udc27 + \ud835\udc26)\n\nqueries. This is an interactive problem. You have to use a flush operation\nright after printing each line. For example, in C++ you should use the\nfunction fflush(stdout), in Java \u2014 System.out.flush(), in Pascal \u2014\nflush(output) and in Python \u2014 sys.stdout.flush(). Example Input 5 5 13 15 10 9\n15 15 17 12 11 17 10 12 7 6 12 17 19 14 13 19 16 18 13 12 18 Output\n\n",
        "cf_contest_id": 1423,
        "cf_index": "M",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "interactive"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "5 5\r\n13 15 10 9 15\r\n15 17 12 11 17\r\n10 12 7 6 12\r\n17 19 14 13 19\r\n16 18 13 12 18\r\n",
                null
            ]
        ],
        "private_cases": []
    }
]