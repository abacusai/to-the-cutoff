[
    {
        "name": "Fly Around the World",
        "description": "After hearing the story of Dr. Zhang, Wowo decides to plan his own flight\naround the world. He already chose \n    n\n checkpoints in the world map. Due\nto the landform and the clouds, he cannot fly too high or too low. Formally,\nlet \n    b_i\n be the height of Wowo's aircraft at checkpoint \n    i\n,\n\n    x_i^-\n    \u2264 b_i\n    \u2264 x_i^+\n should be satisfied for all integers \n    i\n\nbetween \n    1\n and \n    n\n, where \n    x_i^-\n and \n    x_i^+\n are given\nintegers. The angle of Wowo's aircraft is also limited. For example, it cannot\nmake a \n    90\n-degree climb. Formally, \n    y_i^-\n    \u2264 b_i-b_i-1\n    \u2264\n    y_i^+\n should be satisfied for all integers \n    i\n between \n    2\n and\n\n    n\n, where \n    y_i^-\n and \n    y_i^+\n are given integers. The final\nlimitation is the speed of angling up or angling down. An aircraft should\nchange its angle slowly for safety concerns. Formally, \n    z_i^- \n    \u2264 (b_i -\n    b_i-1) - (b_i-1 - b_i-2) \n    \u2264 z_i^+\n should be satisfied for all\nintegers \n    i\n between \n    3\n and \n    n\n, where \n    z_i^-\n and\n\n    z_i^+\n are given integers. Taking all these into consideration, Wowo\nfinds that the heights at checkpoints are too hard for him to choose. Please\nhelp Wowo decide whether there exists a sequence of real numbers \n    b_1,\n    \n    \u2026, b_n\n satisfying all the contraints above. Input Each test contains\nmultiple test cases. The first line contains the number of test cases \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 66\n     666\n). Description of the test cases follows. The\nfirst line of each test case contains a single integer \n    n\n (\n    3 \n    \u2264 n\n    \n    \u2264 100\n     000\n). The \n    i\n-th of the next \n    n\n lines contains two\nintegers \n    x_i^-\n, \n    x_i^+\n (\n    -10^8\n    \u2264 x_i^-\n    \u2264 x_i^+\n    \u2264\n    10^8\n) denoting the lower and upper bound of \n    b_i\n. The \n    i\n-th of\nthe next \n    n-1\n lines contains two integers \n    y_i+1^-\n,\n\n    y_i+1^+\n (\n    -10^8\n    \u2264 y_i+1^-\n    \u2264 y_i+1^+\n    \u2264 10^8\n) denoting\nthe lower and upper bound of \n    b_i+1-b_i\n. The \n    i\n-th of the next\n\n    n-2\n lines contains two integers \n    z_i+2^-\n, \n    z_i+2^+\n\n(\n    -10^8\n    \u2264 z_i+2^-\n    \u2264 z_i+2^+\n    \u2264 10^8\n) denoting the lower and\nupper bound of \n    (b_i+2-b_i+1) - (b_i+1-b_i)\n. It is guaranteed that\nthe sum of \n    n\n over all test cases does not exceed \n    200\n     000\n. It is\nguaranteed that relaxing every constraint by \n    10^-6\n (i.e., decrease\n\n    x_i^-, y_i^-, z_i^-\n by \n    10^-6\n and increase \n    x_i^+, y_i^+,\n    z_i^+\n by \n    10^-6\n) will not change the answer. Output For each test\ncase, output YES if a sequence \n    b_1,\n    \u2026, b_n\n satisfying the\nconstraints exists and NO otherwise. The sequence \n    b_1,\n    \u2026, b_n\n is\nnot required. Example Input 4 3 0 1 0 1 0 1 1 1 1 1 -100 100 3 -967 541 -500\n834 -724 669 -858 978 -964 962 -645 705 4 0 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0\n4 0 0 33 34 65 66 100 100 0 100 0 100 0 100 0 0 0 0 Output NO YES YES NO Note\nIn the first test case, all \n    b_i\n's are in \n    [0,1]\n. Because of the\nconstraints \n    1=y_2^-\n    \u2264 b_2-b_1\n    \u2264 y_2^+=1\n, \n    b_2-b_1\n must be\n\n    1\n. So \n    b_2=1\n and \n    b_1=0\n must hold. Then by \n    1=y_3^-\n    \u2264\n    b_3-b_2\n    \u2264 y_3^+=1\n, \n    b_3\n equals \n    2\n. This contradicts the\nconstraint of \n    b_3\n    \u2264 1\n. So no solution exists. In the second test\ncase, we can let all \n    b_i\n's be \n    0\n. In the third test case, one\npossible solution is \n    b_1=0\n, \n    b_2=1/3\n, \n    b_3=2/3\n, \n    b_4=1\n.\n\n",
        "cf_contest_id": 1517,
        "cf_index": "H",
        "cf_rating": 3500,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "geometry"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3\r\n0 1\r\n0 1\r\n0 1\r\n1 1\r\n1 1\r\n-100 100\r\n3\r\n-967 541\r\n-500 834\r\n-724 669\r\n-858 978\r\n-964 962\r\n-645 705\r\n4\r\n0 0\r\n0 1\r\n0 1\r\n1 1\r\n0 1\r\n0 1\r\n0 1\r\n0 0\r\n0 0\r\n4\r\n0 0\r\n33 34\r\n65 66\r\n100 100\r\n0 100\r\n0 100\r\n0 100\r\n0 0\r\n0 0\r\n",
                "NO\r\nYES\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n8\r\n-100000000 -1\r\n-100000000 100000000\r\n1 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n-100000000 -1\r\n-100000000 100000000\r\n1 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n1 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n1 100000000\r\n1 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n-100000000 -1\r\n-100000000 -1\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n8\r\n-100000000 -1\r\n-100000000 100000000\r\n0 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n-100000000 0\r\n-100000000 100000000\r\n0 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n0 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n0 100000000\r\n0 100000000\r\n-100000000 100000000\r\n-100000000 100000000\r\n-100000000 0\r\n-100000000 0\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n9\r\n0 1\r\n0 3\r\n0 3\r\n0 1\r\n0 3\r\n0 3\r\n1 2\r\n1 3\r\n0 3\r\n0 3\r\n-1 2\r\n-3 1\r\n-3 2\r\n-3 0\r\n-1 3\r\n1 3\r\n-1 2\r\n-5 -3\r\n-1 3\r\n-5 0\r\n-1 -1\r\n-5 6\r\n-4 0\r\n-2 2\r\n",
                "YES\r\n"
            ]
        ]
    }
]