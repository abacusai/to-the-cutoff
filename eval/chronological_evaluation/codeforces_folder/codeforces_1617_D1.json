[
    {
        "name": "Too Many Impostors (easy version)",
        "description": "This is an interactive problem. The only difference between the easy and hard\nversion is the limit on number of questions. There are \n    n\n players\nlabelled from \n    1\n to \n    n\n. It is guaranteed that \n    n\n is a multiple\nof \n    3\n. Among them, there are \n    k\n impostors and \n    n-k\n crewmates.\nThe number of impostors, \n    k\n, is not given to you. It is guaranteed that\n\n    n/3 < k < \n    2n/3\n. In each question, you can choose\nthree distinct integers \n    a\n, \n    b\n, \n    c\n (\n    1 \n    \u2264 a, b, c \n    \u2264\n    n\n) and ask: \"Among the players labelled \n    a\n, \n    b\n and \n    c\n, are\nthere more impostors or more crewmates?\" You will be given the integer \n    0\n\nif there are more impostors than crewmates, and \n    1\n otherwise. Find the\nnumber of impostors \n    k\n and the indices of players that are impostors\nafter asking at most \n    2n\n questions. The jury is adaptive, which means the\nindices of impostors may not be fixed beforehand and can depend on your\nquestions. It is guaranteed that there is at least one set of impostors which\nfulfills the constraints and the answers to your questions at any time. Input\nEach test contains multiple test cases. The first line contains the number of\ntest cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n). Description of the test cases\nfollows. The first and only line of each test case contains a single integer\n\n    n\n (\n    6 \n    \u2264 n < 10^4\n, \n    n\n is a multiple of \n    3\n) \u2014 the\nnumber of players. It is guaranteed that the sum of \n    n\n over all test\ncases does not exceed \n    2 \n    \u00b7 10^4\n. Interaction For each test case,\nthe interaction starts with reading \n    n\n. Then you are allowed to make at\nmost \n    2n\n questions in the following way: \"? a b c\" (\n    1 \n    \u2264 a, b, c\n    \n    \u2264 n\n, \n    a\n, \n    b\n and \n    c\n are pairwise distinct). After each\none, you should read an integer \n    r\n, which is equal to \n    0\n if there\nare more impostors than crewmates among players labelled \n    a\n, \n    b\n and\n\n    c\n, and equal to \n    1\n otherwise. Answer \n    -1\n instead of \n    0\n or\n\n    1\n means that you made an invalid query or exceeded the number of\nqueries. Exit immediately after receiving \n    -1\n and you will see Wrong\nanswer verdict. Otherwise you can get an arbitrary verdict because your\nsolution will continue to read from a closed stream. When you have found the\nindices of all impostors, print a single line \"! \" (without quotes), followed\nby the number of impostors \n    k\n, followed by \n    k\n integers representing\nthe indices of the impostors. Please note that you must print all this\ninformation on the same line. After printing the answer, your program must\nthen continue to solve the remaining test cases, or exit if all test cases\nhave been solved. After printing the queries and answers do not forget to\noutput end of line and flush the output buffer. Otherwise, you will get the\nIdleness limit exceeded verdict. To do flush use: fflush(stdout) or\ncout.flush() in C++; System.out.flush() in Java; flush(output) in Pascal;\nstdout.flush() in Python; Read documentation for other languages. Hacks You\ncannot make hacks in this problem. Example Input 2 6 0 1 9 1 Output ? 1 2 3 ?\n3 4 5 ! 3 4 1 2 ? 7 1 9 ! 4 2 3 6 8 Note Explanation for example interaction\n(note that this example only exists to demonstrate the interaction procedure\nand does not provide any hint for the solution): For the first test case:\nQuestion \"? 1 2 3\" returns \n    0\n, so there are more impostors than crewmates\namong players \n    1\n, \n    2\n and \n    3\n. Question \"? 3 4 5\" returns\n\n    1\n, so there are more crewmates than impostors among players \n    3\n,\n\n    4\n and \n    5\n. Outputting \"! 3 4 1 2\" means that one has found all the\nimpostors, by some miracle. There are \n    k = 3\n impostors. The players who\nare impostors are players \n    4\n, \n    1\n and \n    2\n. For the second test\ncase: Question \"? 7 1 9\" returns \n    1\n, so there are more crewmates than\nimpostors among players \n    7\n, \n    1\n and \n    9\n. Outputting \"! 4 2 3 6 8\"\nmeans that one has found all the impostors, by some miracle. There are \n    k =\n    4\n impostors. The players who are impostors are players \n    2\n, \n    3\n,\n\n    6\n and \n    8\n.\n\n",
        "cf_contest_id": 1617,
        "cf_index": "D1",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation",
            "interactive"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n6\r\n1\r\n9\r\n1\r\n",
                "6\r\n9\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n7620\r\n2\r\n3288\r\n1\r\n",
                "15236\r\n3289\r\n"
            ],
            [
                "2\r\n561\r\n1\r\n1167\r\n1\r\n",
                "561\r\n1168\r\n"
            ],
            [
                "2\r\n9579\r\n1\r\n4581\r\n3\r\n",
                "9582\r\n7429\r\n"
            ],
            [
                "35\r\n423\r\n3\r\n438\r\n1\r\n153\r\n2\r\n366\r\n1\r\n525\r\n2\r\n456\r\n1\r\n525\r\n3\r\n396\r\n3\r\n498\r\n2\r\n522\r\n3\r\n15\r\n2\r\n168\r\n1\r\n327\r\n1\r\n12\r\n3\r\n537\r\n3\r\n222\r\n1\r\n552\r\n3\r\n420\r\n3\r\n528\r\n2\r\n261\r\n2\r\n321\r\n1\r\n456\r\n1\r\n396\r\n2\r\n12\r\n1\r\n54\r\n1\r\n477\r\n2\r\n549\r\n1\r\n384\r\n1\r\n273\r\n1\r\n48\r\n3\r\n465\r\n1\r\n234\r\n3\r\n387\r\n2\r\n498\r\n3\r\n531\r\n1\r\n",
                "627\r\n440\r\n302\r\n377\r\n1046\r\n459\r\n754\r\n566\r\n992\r\n774\r\n26\r\n168\r\n327\r\n15\r\n856\r\n227\r\n809\r\n612\r\n1052\r\n518\r\n323\r\n459\r\n788\r\n15\r\n56\r\n950\r\n567\r\n389\r\n282\r\n76\r\n466\r\n360\r\n770\r\n809\r\n533\r\n"
            ],
            [
                "19\r\n897\r\n2\r\n639\r\n1\r\n960\r\n2\r\n1011\r\n1\r\n723\r\n1\r\n303\r\n2\r\n552\r\n1\r\n174\r\n3\r\n216\r\n3\r\n609\r\n1\r\n558\r\n1\r\n759\r\n2\r\n321\r\n3\r\n960\r\n1\r\n1014\r\n3\r\n210\r\n2\r\n300\r\n2\r\n381\r\n1\r\n990\r\n1\r\n",
                "1790\r\n640\r\n1916\r\n1012\r\n739\r\n602\r\n554\r\n258\r\n340\r\n619\r\n566\r\n1514\r\n447\r\n962\r\n1380\r\n416\r\n596\r\n384\r\n991\r\n"
            ],
            [
                "3\r\n3924\r\n1\r\n1551\r\n2\r\n966\r\n1\r\n",
                "3924\r\n3098\r\n967\r\n"
            ],
            [
                "2\r\n2286\r\n3\r\n3960\r\n3\r\n",
                "3696\r\n5373\r\n"
            ],
            [
                "2\r\n153\r\n1\r\n5250\r\n1\r\n",
                "158\r\n5273\r\n"
            ],
            [
                "48\r\n198\r\n3\r\n156\r\n2\r\n324\r\n3\r\n255\r\n3\r\n276\r\n3\r\n126\r\n2\r\n390\r\n3\r\n219\r\n2\r\n390\r\n1\r\n33\r\n1\r\n153\r\n1\r\n138\r\n2\r\n339\r\n1\r\n240\r\n2\r\n315\r\n2\r\n318\r\n3\r\n99\r\n2\r\n303\r\n3\r\n126\r\n2\r\n306\r\n2\r\n354\r\n1\r\n87\r\n2\r\n102\r\n3\r\n336\r\n3\r\n246\r\n1\r\n132\r\n3\r\n336\r\n1\r\n390\r\n3\r\n258\r\n2\r\n108\r\n2\r\n42\r\n2\r\n114\r\n1\r\n84\r\n3\r\n276\r\n3\r\n126\r\n2\r\n384\r\n2\r\n333\r\n1\r\n261\r\n3\r\n171\r\n3\r\n171\r\n3\r\n39\r\n1\r\n363\r\n3\r\n405\r\n1\r\n117\r\n3\r\n261\r\n2\r\n366\r\n3\r\n42\r\n2\r\n9\r\n2\r\n",
                "295\r\n308\r\n488\r\n400\r\n390\r\n248\r\n560\r\n434\r\n392\r\n38\r\n153\r\n272\r\n341\r\n476\r\n626\r\n514\r\n194\r\n430\r\n248\r\n608\r\n358\r\n170\r\n137\r\n496\r\n246\r\n204\r\n338\r\n599\r\n512\r\n212\r\n80\r\n115\r\n123\r\n438\r\n248\r\n764\r\n334\r\n364\r\n260\r\n270\r\n39\r\n539\r\n407\r\n159\r\n518\r\n589\r\n80\r\n14\r\n"
            ],
            [
                "26\r\n213\r\n3\r\n498\r\n1\r\n543\r\n1\r\n93\r\n2\r\n333\r\n1\r\n18\r\n3\r\n393\r\n2\r\n621\r\n3\r\n726\r\n1\r\n753\r\n3\r\n738\r\n1\r\n21\r\n3\r\n15\r\n1\r\n486\r\n2\r\n189\r\n1\r\n459\r\n1\r\n264\r\n2\r\n12\r\n3\r\n408\r\n3\r\n60\r\n2\r\n345\r\n2\r\n729\r\n1\r\n684\r\n2\r\n732\r\n3\r\n567\r\n3\r\n138\r\n1\r\n",
                "335\r\n498\r\n549\r\n182\r\n335\r\n23\r\n782\r\n990\r\n736\r\n1234\r\n746\r\n27\r\n22\r\n968\r\n194\r\n463\r\n524\r\n17\r\n576\r\n116\r\n686\r\n734\r\n1364\r\n1030\r\n773\r\n140\r\n"
            ],
            [
                "16\r\n177\r\n3\r\n651\r\n3\r\n219\r\n3\r\n891\r\n3\r\n99\r\n2\r\n894\r\n3\r\n42\r\n2\r\n858\r\n3\r\n132\r\n1\r\n933\r\n1\r\n633\r\n3\r\n942\r\n1\r\n900\r\n2\r\n381\r\n2\r\n108\r\n3\r\n891\r\n3\r\n",
                "253\r\n877\r\n347\r\n1247\r\n194\r\n1378\r\n80\r\n1202\r\n132\r\n934\r\n859\r\n953\r\n1796\r\n758\r\n147\r\n1390\r\n"
            ],
            [
                "10\r\n1155\r\n2\r\n1512\r\n2\r\n1725\r\n2\r\n1332\r\n1\r\n456\r\n1\r\n1176\r\n1\r\n795\r\n1\r\n990\r\n1\r\n126\r\n3\r\n1044\r\n3\r\n",
                "2306\r\n3020\r\n3446\r\n1334\r\n464\r\n1177\r\n798\r\n999\r\n192\r\n1503\r\n"
            ],
            [
                "9\r\n672\r\n1\r\n930\r\n3\r\n18\r\n2\r\n1761\r\n3\r\n174\r\n2\r\n156\r\n1\r\n1878\r\n1\r\n102\r\n1\r\n507\r\n2\r\n",
                "673\r\n1260\r\n32\r\n2760\r\n344\r\n161\r\n1884\r\n104\r\n1010\r\n"
            ],
            [
                "4\r\n3747\r\n3\r\n2796\r\n1\r\n3348\r\n2\r\n2703\r\n2\r\n",
                "5765\r\n2797\r\n6692\r\n5402\r\n"
            ],
            [
                "2\r\n2682\r\n3\r\n6912\r\n1\r\n",
                "3879\r\n6914\r\n"
            ],
            [
                "2\r\n9999\r\n2\r\n7764\r\n1\r\n",
                "19994\r\n7766\r\n"
            ],
            [
                "2\r\n1641\r\n2\r\n1557\r\n3\r\n",
                "3278\r\n2534\r\n"
            ],
            [
                "2\r\n5133\r\n3\r\n3225\r\n2\r\n",
                "8124\r\n6446\r\n"
            ],
            [
                "2\r\n9999\r\n1\r\n2598\r\n2\r\n",
                "10002\r\n5192\r\n"
            ]
        ]
    }
]