[
    {
        "name": "XOR Triangle",
        "description": "You are given a positive integer \n    n\n. Since \n    n\n may be very large, you\nare given its binary representation. You should compute the number of triples\n\n    (a,b,c)\n with \n    0 \n    \u2264 a,b,c \n    \u2264 n\n such that \n    a \n    \u2295 b\n,\n\n    b \n    \u2295 c\n, and \n    a \n    \u2295 c\n are the sides of a non-degenerate\ntriangle. Here, \n    \u2295\n denotes the bitwise XOR operation. You should\noutput the answer modulo \n    998\n     244\n     353\n. Three positive values\n\n    x\n, \n    y\n, and \n    z\n are the sides of a non-degenerate triangle if\nand only if \n    x+y>z\n, \n    x+z>y\n, and \n    y+z>x\n. Input The first and\nonly line contains the binary representation of an integer \n    n\n (\n    0 < n <\n    2^200\n     000\n) without leading zeros. For example, the string 10 is the\nbinary representation of the number \n    2\n, while the string 1010 represents\nthe number \n    10\n. Output Print one integer \u2014 the number of triples\n\n    (a,b,c)\n satisfying the conditions described in the statement modulo\n\n    998\n     244\n     353\n. Examples Input 101 Output 12 Input 1110 Output 780\nInput 11011111101010010 Output 141427753 Note In the first test case,\n\n    101_2=5\n. The triple \n    (a, b, c) = (0, 3, 5)\n is valid because\n\n    (a\n    \u2295 b, b\n    \u2295 c, c\n    \u2295 a) = (3, 6, 5)\n are the sides of a\nnon-degenerate triangle. The triple \n    (a, b, c) = (1, 2, 4)\n is valid\nbecause \n    (a\n    \u2295 b, b\n    \u2295 c, c\n    \u2295 a) = (3, 6, 5)\n are the\nsides of a non-degenerate triangle. The \n    6\n permutations of each of these\ntwo triples are all the valid triples, thus the answer is \n    12\n. In the\nthird test case, \n    11\n     011\n     111\n     101\n     010\n     010_2=114\n     514\n. The\nfull answer (before taking the modulo) is\n\n    1\n     466\n     408\n     118\n     808\n     164\n.\n\n",
        "cf_contest_id": 1710,
        "cf_index": "C",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force",
            "constructive algorithms",
            "dp",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "101\r\n",
                "12\r\n"
            ],
            [
                "1110\r\n",
                "780\r\n"
            ],
            [
                "11011111101010010\r\n",
                "141427753\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n",
                "0\r\n"
            ],
            [
                "1111111111111111111111111111111011111111111101101110111011111111010011111111111110111111111101011111\r\n",
                "148758249\r\n"
            ]
        ]
    }
]