[
    {
        "name": "Inna and Sequence ",
        "description": "Dima's spent much time thinking what present to give to Inna and gave her an\nempty sequence w. Now they want to fill sequence w with numbers zero and one.\nFor that, they decided to play an amusing game. Before the game begins, Dima\nchooses m integers a1, a2, ..., am (1 \u2264 a1 < a2 < ... < am). Then Inna and\nDima start playing, that is, adding numbers to sequence w. Each new number\nthey choose is added to the end of the sequence. At some moments of time Dima\nfeels that the game is going to end too soon (and he wants to play with Inna\nas long as possible), so he hits a table hard with his fist. At that the\na1-th, a2-th, a3-th, ..., ak-th numbers from the beginning simultaneously fall\nout of the sequence (the sequence gets k numbers less). Here k is such maximum\nnumber that value ak doesn't exceed the current length of the sequence. If\nnumber a1 is larger than the current length of w, then nothing falls out of\nthe sequence. You are given the chronological sequence of events in the game.\nEach event is either adding a number to the end of sequence w or Dima's hit on\nthe table. Calculate the sequence w after all these events happen. Input The\nfirst line of the input contains two integers n and m (1 \u2264 n, m \u2264 10^6)\nshowing how many events took place and how many numbers Dima chose. The next\nline contains m distinct integers ai (1 \u2264 ai \u2264 10^6) sorted in the increasing\norder. Next n lines describe the events in the chronological order. Each line\ncontains a single integer: -1, 0 or 1. Number -1 means that Dima hits the\ntable. Number 0 means that Inna and Dima add number 0 to the end of the\nsequence. Number 1 means that Inna and Dima add number 1 to the end of the\nsequence. Output In a single line print a sequence of numbers 0 and 1 \u2014 the\nelements of the sequence after all events happen. Print the elements of the\nsequence in the order from the beginning to the end of the sequence. If after\nall events the sequence ends up empty, print \"Poor stack!\". Examples Input 10\n3 1 3 6 -1 1 1 0 0 -1 0 1 -1 1 Output 011 Input 2 1 1 1 -1 Output Poor stack!\n\n",
        "cf_contest_id": 374,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10 3\r\n1 3 6\r\n-1\r\n1\r\n1\r\n0\r\n0\r\n-1\r\n0\r\n1\r\n-1\r\n1\r\n",
                "011"
            ],
            [
                "2 1\r\n1\r\n1\r\n-1\r\n",
                "Poor stack!\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1\r\n-1\r\n0\r\n",
                "0"
            ],
            [
                "11 2\r\n2 4\r\n1\r\n-1\r\n1\r\n-1\r\n0\r\n0\r\n-1\r\n1\r\n1\r\n1\r\n-1\r\n",
                "111"
            ],
            [
                "4 3\r\n1 2 4\r\n1\r\n0\r\n1\r\n-1\r\n",
                "1"
            ],
            [
                "14 3\r\n1 2 3\r\n1\r\n-1\r\n1\r\n1\r\n-1\r\n1\r\n1\r\n1\r\n-1\r\n0\r\n1\r\n0\r\n0\r\n-1\r\n",
                "0"
            ]
        ]
    }
]