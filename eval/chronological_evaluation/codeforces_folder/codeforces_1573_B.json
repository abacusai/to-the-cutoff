[
    {
        "name": "Swaps",
        "description": "You are given two arrays \n    a\n and \n    b\n of length \n    n\n. Array \n    a\n\ncontains each odd integer from \n    1\n to \n    2n\n in an arbitrary order, and\narray \n    b\n contains each even integer from \n    1\n to \n    2n\n in an\narbitrary order. You can perform the following operation on those arrays:\nchoose one of the two arrays pick an index \n    i\n from \n    1\n to \n    n-1\n\nswap the \n    i\n-th and the \n    (i+1)\n-th elements of the chosen array\nCompute the minimum number of operations needed to make array \n    a\n\nlexicographically smaller than array \n    b\n.For two different arrays \n    x\n\nand \n    y\n of the same length \n    n\n, we say that \n    x\n is\nlexicographically smaller than \n    y\n if in the first position where \n    x\n\nand \n    y\n differ, the array \n    x\n has a smaller element than the\ncorresponding element in \n    y\n. Input Each test contains multiple test\ncases. The first line contains the number of test cases \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^4\n). The first line of each test case contains a single integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the length of the arrays. The second\nline of each test case contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n\n(\n    1 \n    \u2264 a_i \n    \u2264 2n\n, all \n    a_i\n are odd and pairwise distinct) \u2014\narray \n    a\n. The third line of each test case contains \n    n\n integers\n\n    b_1, b_2, \n    \u2026, b_n\n (\n    1 \n    \u2264 b_i \n    \u2264 2n\n, all \n    b_i\n are\neven and pairwise distinct) \u2014 array \n    b\n. It is guaranteed that the sum of\n\n    n\n over all test cases does not exceed \n    10^5\n. Output For each test\ncase, print one integer: the minimum number of operations needed to make array\n\n    a\n lexicographically smaller than array \n    b\n. We can show that an\nanswer always exists. Example Input 3 2 3 1 4 2 3 5 3 1 2 4 6 5 7 5 9 1 3 2 4\n6 10 8 Output 0 2 3 Note In the first example, the array \n    a\n is already\nlexicographically smaller than array \n    b\n, so no operations are required.\nIn the second example, we can swap \n    5\n and \n    3\n and then swap \n    2\n\nand \n    4\n, which results in \n    [3, 5, 1]\n and \n    [4, 2, 6]\n. Another\ncorrect way is to swap \n    3\n and \n    1\n and then swap \n    5\n and \n    1\n,\nwhich results in \n    [1, 5, 3]\n and \n    [2, 4, 6]\n. Yet another correct way\nis to swap \n    4\n and \n    6\n and then swap \n    2\n and \n    6\n, which\nresults in \n    [5, 3, 1]\n and \n    [6, 2, 4]\n.\n\n",
        "cf_contest_id": 1573,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2\r\n3 1\r\n4 2\r\n3\r\n5 3 1\r\n2 4 6\r\n5\r\n7 5 9 1 3\r\n2 4 6 10 8\r\n",
                "0\r\n2\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]