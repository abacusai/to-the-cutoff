[
    {
        "name": "Table",
        "description": "The integer numbers from 1 to nm was put into rectangular table having n rows\nand m columns. The numbers was put from left to right, from top to bottom,\ni.e. the first row contains integers 1, 2, ..., m, the second \u2014 m + 1, m + 2,\n..., 2 * m and so on. After it these numbers was written on the paper in\nanother order: from top to bottom, from left to right. First, the numbers in\nthe first column was written (from top to bottom) and so on. Print the k-th\nnumber on the paper. Input The only line in the input contains three integer\nnumbers n, m and k (1 \u2264 n, m \u2264 20000, 1 \u2264 k \u2264 nm). Output Print the required\nnumber. Examples Input 3 4 11 Output 8 Input 20000 10000 200000000 Output\n200000000\n\n",
        "cf_contest_id": 64,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "3 4 11\r\n",
                "8\r\n"
            ],
            [
                "20000 10000 200000000\r\n",
                "200000000\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 3 6\r\n",
                "6\r\n"
            ],
            [
                "10 3 7\r\n",
                "19\r\n"
            ],
            [
                "11 1 8\r\n",
                "8\r\n"
            ],
            [
                "26 35 852\r\n",
                "698\r\n"
            ],
            [
                "49 39 62\r\n",
                "470\r\n"
            ],
            [
                "27 2 32\r\n",
                "10\r\n"
            ],
            [
                "2 20 13\r\n",
                "7\r\n"
            ],
            [
                "72 80 5142\r\n",
                "2392\r\n"
            ],
            [
                "107 26 781\r\n",
                "814\r\n"
            ],
            [
                "32 36 74\r\n",
                "327\r\n"
            ],
            [
                "153 159 23948\r\n",
                "12718\r\n"
            ],
            [
                "108 156 9864\r\n",
                "5552\r\n"
            ],
            [
                "150 212 13637\r\n",
                "28923\r\n"
            ],
            [
                "5 113 521\r\n",
                "105\r\n"
            ],
            [
                "281 137 36883\r\n",
                "9859\r\n"
            ],
            [
                "320 269 157\r\n",
                "41965\r\n"
            ],
            [
                "360 296 94349\r\n",
                "8551\r\n"
            ],
            [
                "272 373 86704\r\n",
                "77530\r\n"
            ],
            [
                "1 15234 15234\r\n",
                "15234\r\n"
            ],
            [
                "12345 17890 220852050\r\n",
                "220852050\r\n"
            ],
            [
                "12345 17890 220852049\r\n",
                "220834160\r\n"
            ],
            [
                "12345 17890 12345\r\n",
                "220834161\r\n"
            ],
            [
                "20000 20000 400000000\r\n",
                "400000000\r\n"
            ],
            [
                "20000 20000 200000000\r\n",
                "399990000\r\n"
            ],
            [
                "20000 20000 312345670\r\n",
                "113395618\r\n"
            ],
            [
                "20000 20000 313400000\r\n",
                "399995670\r\n"
            ],
            [
                "20000 20000 40000000\r\n",
                "399982000\r\n"
            ],
            [
                "20000 20000 1\r\n",
                "1\r\n"
            ]
        ]
    }
]