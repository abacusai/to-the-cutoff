[
    {
        "name": "Up the Strip",
        "description": "Note that the memory limit in this problem is lower than in others. You have a\nvertical strip with \n    n\n cells, numbered consecutively from \n    1\n to\n\n    n\n from top to bottom. You also have a token that is initially placed in\ncell \n    n\n. You will move the token up until it arrives at cell \n    1\n. Let\nthe token be in cell \n    x > 1\n at some moment. One shift of the token can\nhave either of the following kinds: Subtraction: you choose an integer \n    y\n\nbetween \n    1\n and \n    x-1\n, inclusive, and move the token from cell \n    x\n\nto cell \n    x - y\n. Floored division: you choose an integer \n    z\n between\n\n    2\n and \n    x\n, inclusive, and move the token from cell \n    x\n to cell\n\n    \u230a\n    x/z\n    \u230b\n (\n    x\n divided by \n    z\n rounded\ndown). Find the number of ways to move the token from cell \n    n\n to cell\n\n    1\n using one or more shifts, and print it modulo \n    m\n. Note that if\nthere are several ways to move the token from one cell to another in one\nshift, all these ways are considered distinct (check example explanation for a\nbetter understanding). Input The only line contains two integers \n    n\n and\n\n    m\n (\n    2 \n    \u2264 n \n    \u2264 4 \n    \u00b7 10^6\n; \n    10^8 < m < 10^9\n; \n    m\n\nis a prime number) \u2014 the length of the strip and the modulo. Output Print the\nnumber of ways to move the token from cell \n    n\n to cell \n    1\n, modulo\n\n    m\n. Examples Input 3 998244353 Output 5 Input 5 998244353 Output 25 Input\n42 998244353 Output 793019428 Input 787788 100000007 Output 94810539 Note In\nthe first test, there are three ways to move the token from cell \n    3\n to\ncell \n    1\n in one shift: using subtraction of \n    y = 2\n, or using division\nby \n    z = 2\n or \n    z = 3\n. There are also two ways to move the token from\ncell \n    3\n to cell \n    1\n via cell \n    2\n: first subtract \n    y = 1\n, and\nthen either subtract \n    y = 1\n again or divide by \n    z = 2\n. Therefore,\nthere are five ways in total.\n\n",
        "cf_contest_id": 1558,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "math",
            "number theory",
            "two pointers"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 128.0,
        "public_cases": [
            [
                "3 998244353\r\n",
                "5\r\n"
            ],
            [
                "5 998244353\r\n",
                "25\r\n"
            ],
            [
                "42 998244353\r\n",
                "793019428\r\n"
            ],
            [
                "787788 100000007\r\n",
                "94810539\r\n"
            ]
        ],
        "private_cases": [
            [
                "363 418169771\r\n",
                "65078475\r\n"
            ],
            [
                "103537 463252301\r\n",
                "242323213\r\n"
            ],
            [
                "4000000 810370681\r\n",
                "328403187\r\n"
            ],
            [
                "2 872207251\r\n",
                "2\r\n"
            ],
            [
                "3998017 100000007\r\n",
                "26756421\r\n"
            ],
            [
                "3999130 999999937\r\n",
                "310436673\r\n"
            ],
            [
                "2924225 234660347\r\n",
                "195688584\r\n"
            ],
            [
                "182550 383331199\r\n",
                "234598461\r\n"
            ],
            [
                "15260 936347479\r\n",
                "534567654\r\n"
            ],
            [
                "1851 248535541\r\n",
                "66118746\r\n"
            ],
            [
                "47 318786553\r\n",
                "134462650\r\n"
            ],
            [
                "16 879902963\r\n",
                "61715\r\n"
            ],
            [
                "4 539424923\r\n",
                "12\r\n"
            ],
            [
                "4000000 638439467\r\n",
                "595337260\r\n"
            ],
            [
                "3999992 135986881\r\n",
                "85093537\r\n"
            ],
            [
                "3999915 686455787\r\n",
                "528276430\r\n"
            ],
            [
                "3999103 726275063\r\n",
                "433687548\r\n"
            ],
            [
                "3994356 686802749\r\n",
                "43415427\r\n"
            ],
            [
                "3912472 178711691\r\n",
                "113174790\r\n"
            ],
            [
                "3205208 612881327\r\n",
                "177676343\r\n"
            ],
            [
                "69420 998244353\r\n",
                "279238034\r\n"
            ],
            [
                "4000000 100000037\r\n",
                "25315880\r\n"
            ],
            [
                "4000000 100000039\r\n",
                "42183279\r\n"
            ],
            [
                "4000000 100004291\r\n",
                "32586026\r\n"
            ],
            [
                "4000000 998244353\r\n",
                "710440601\r\n"
            ],
            [
                "4000000 100000007\r\n",
                "3494247\r\n"
            ],
            [
                "4000000 686455787\r\n",
                "385194408\r\n"
            ],
            [
                "4000000 100000801\r\n",
                "63677450\r\n"
            ],
            [
                "4000000 100054489\r\n",
                "71115185\r\n"
            ]
        ]
    }
]