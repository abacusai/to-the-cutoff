[
    {
        "name": "Yet Another Ball Problem",
        "description": "The king of Berland organizes a ball! \n    n\n pair are invited to the ball,\nthey are numbered from \n    1\n to \n    n\n. Each pair consists of one man and\none woman. Each dancer (either man or woman) has a monochrome costume. The\ncolor of each costume is represented by an integer from \n    1\n to \n    k\n,\ninclusive. Let \n    b_i\n be the color of the man's costume and \n    g_i\n be\nthe color of the woman's costume in the \n    i\n-th pair. You have to choose a\ncolor for each dancer's costume (i.e. values \n    b_1, b_2, \n    \u2026, b_n\n and\n\n    g_1, g_2, \n    \u2026 g_n\n) in such a way that: for every \n    i\n: \n    b_i\n\nand \n    g_i\n are integers between \n    1\n and \n    k\n, inclusive; there are\nno two completely identical pairs, i.e. no two indices \n    i, j\n (\n    i \n    \n    j\n) such that \n    b_i = b_j\n and \n    g_i = g_j\n at the same time; there is\nno pair such that the color of the man's costume is the same as the color of\nthe woman's costume in this pair, i.e. \n    b_i \n     g_i\n for every \n    i\n;\nfor each two consecutive (adjacent) pairs both man's costume colors and\nwoman's costume colors differ, i.e. for every \n    i\n from \n    1\n to\n\n    n-1\n the conditions \n    b_i \n     b_i + 1\n and \n    g_i \n     g_i +\n    1\n hold. Let's take a look at the examples of bad and good color choosing\n(for \n    n=4\n and \n    k=3\n, man is the first in a pair and woman is the\nsecond): Bad color choosing: \n    (1, 2)\n, \n    (2, 3)\n, \n    (3, 2)\n, \n    (1,\n    2)\n \u2014 contradiction with the second rule (there are equal pairs); \n    (2,\n    3)\n, \n    (1, 1)\n, \n    (3, 2)\n, \n    (1, 3)\n \u2014 contradiction with the third\nrule (there is a pair with costumes of the same color); \n    (1, 2)\n, \n    (2,\n    3)\n, \n    (1, 3)\n, \n    (2, 1)\n \u2014 contradiction with the fourth rule (there\nare two consecutive pairs such that colors of costumes of men/women are the\nsame). Good color choosing: \n    (1, 2)\n, \n    (2, 1)\n, \n    (1, 3)\n, \n    (3,\n    1)\n; \n    (1, 2)\n, \n    (3, 1)\n, \n    (2, 3)\n, \n    (3, 2)\n; \n    (3, 1)\n,\n\n    (1, 2)\n, \n    (2, 3)\n, \n    (3, 2)\n. You have to find any suitable color\nchoosing or say that no suitable choosing exists. Input The only line of the\ninput contains two integers \n    n\n and \n    k\n (\n    2 \n    \u2264 n, k \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the number of pairs and the number of colors. Output If it\nis impossible to find any suitable colors choosing, print \"NO\". Otherwise\nprint \"YES\" and then the colors of the costumes of pairs in the next \n    n\n\nlines. The \n    i\n-th line should contain two integers \n    b_i\n and \n    g_i\n\n\u2014 colors of costumes of man and woman in the \n    i\n-th pair, respectively.\nYou can print each letter in any case (upper or lower). For example, \"YeS\",\n\"no\" and \"yES\" are all acceptable. Examples Input 4 3 Output YES 3 1 1 3 3 2 2\n3 Input 10 4 Output YES 2 1 1 3 4 2 3 4 4 3 3 2 2 4 4 1 1 4 3 1 Input 13 4\nOutput NO\n\n",
        "cf_contest_id": 1118,
        "cf_index": "E",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 1\r\n1 3\r\n"
            ],
            [
                "10 4\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n1 3\r\n2 4\r\n3 1\r\n4 2\r\n1 4\r\n2 1\r\n"
            ],
            [
                "13 4\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n",
                "YES\r\n1 2\r\n2 1\r\n"
            ],
            [
                "3 2\r\n",
                "NO\r\n"
            ],
            [
                "4 2\r\n",
                "NO\r\n"
            ],
            [
                "3 3\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 1\r\n"
            ],
            [
                "6 3\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 1\r\n1 3\r\n2 1\r\n3 2\r\n"
            ],
            [
                "7 3\r\n",
                "NO\r\n"
            ],
            [
                "5 5\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n"
            ],
            [
                "6 5\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n1 3\r\n"
            ],
            [
                "10 5\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n1 3\r\n2 4\r\n3 5\r\n4 1\r\n5 2\r\n"
            ],
            [
                "20 5\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n1 3\r\n2 4\r\n3 5\r\n4 1\r\n5 2\r\n1 4\r\n2 5\r\n3 1\r\n4 2\r\n5 3\r\n1 5\r\n2 1\r\n3 2\r\n4 3\r\n5 4\r\n"
            ],
            [
                "21 5\r\n",
                "NO\r\n"
            ],
            [
                "10 10\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 1\r\n"
            ],
            [
                "11 10\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 1\r\n1 3\r\n"
            ],
            [
                "20 10\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 1\r\n1 3\r\n2 4\r\n3 5\r\n4 6\r\n5 7\r\n6 8\r\n7 9\r\n8 10\r\n9 1\r\n10 2\r\n"
            ],
            [
                "90 10\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 1\r\n1 3\r\n2 4\r\n3 5\r\n4 6\r\n5 7\r\n6 8\r\n7 9\r\n8 10\r\n9 1\r\n10 2\r\n1 4\r\n2 5\r\n3 6\r\n4 7\r\n5 8\r\n6 9\r\n7 10\r\n8 1\r\n9 2\r\n10 3\r\n1 5\r\n2 6\r\n3 7\r\n4 8\r\n5 9\r\n6 10\r\n7 1\r\n8 2\r\n9 3\r\n10 4\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n6 1\r\n7 2\r\n8 3\r\n9 4\r\n10 5\r\n1 7\r\n2 8\r\n3 9\r\n4 10\r\n5 1\r\n6 2\r\n7 3\r\n8 4\r\n9 5\r\n10 6\r\n1 8\r\n2 9\r\n3 10\r\n4 1\r\n5 2\r\n6 3\r\n7 4\r\n8 5\r\n9 6\r\n10 7\r\n1 9\r\n2 10\r\n3 1\r\n4 2\r\n5 3\r\n6 4\r\n7 5\r\n8 6\r\n9 7\r\n10 8\r\n1 10\r\n2 1\r\n3 2\r\n4 3\r\n5 4\r\n6 5\r\n7 6\r\n8 7\r\n9 8\r\n10 9\r\n"
            ],
            [
                "91 10\r\n",
                "NO\r\n"
            ],
            [
                "9901 100\r\n",
                "NO\r\n"
            ],
            [
                "39801 200\r\n",
                "NO\r\n"
            ],
            [
                "199363 447\r\n",
                "NO\r\n"
            ],
            [
                "42 69\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n11 12\r\n12 13\r\n13 14\r\n14 15\r\n15 16\r\n16 17\r\n17 18\r\n18 19\r\n19 20\r\n20 21\r\n21 22\r\n22 23\r\n23 24\r\n24 25\r\n25 26\r\n26 27\r\n27 28\r\n28 29\r\n29 30\r\n30 31\r\n31 32\r\n32 33\r\n33 34\r\n34 35\r\n35 36\r\n36 37\r\n37 38\r\n38 39\r\n39 40\r\n40 41\r\n41 42\r\n42 43\r\n"
            ],
            [
                "69 42\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n11 12\r\n12 13\r\n13 14\r\n14 15\r\n15 16\r\n16 17\r\n17 18\r\n18 19\r\n19 20\r\n20 21\r\n21 22\r\n22 23\r\n23 24\r\n24 25\r\n25 26\r\n26 27\r\n27 28\r\n28 29\r\n29 30\r\n30 31\r\n31 32\r\n32 33\r\n33 34\r\n34 35\r\n35 36\r\n36 37\r\n37 38\r\n38 39\r\n39 40\r\n40 41\r\n41 42\r\n42 1\r\n1 3\r\n2 4\r\n3 5\r\n4 6\r\n5 7\r\n6 8\r\n7 9\r\n8 10\r\n9 11\r\n10 12\r\n11 13\r\n12 14\r\n13 15\r\n14 16\r\n15 17\r\n16 18\r\n17 19\r\n18 20\r\n19 21\r\n20 22\r\n21 23\r\n22 24\r\n23 25\r\n24 26\r\n25 27\r\n26 28\r\n27 29\r\n"
            ],
            [
                "30 6\r\n",
                "YES\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 1\r\n1 3\r\n2 4\r\n3 5\r\n4 6\r\n5 1\r\n6 2\r\n1 4\r\n2 5\r\n3 6\r\n4 1\r\n5 2\r\n6 3\r\n1 5\r\n2 6\r\n3 1\r\n4 2\r\n5 3\r\n6 4\r\n1 6\r\n2 1\r\n3 2\r\n4 3\r\n5 4\r\n6 5\r\n"
            ]
        ]
    }
]