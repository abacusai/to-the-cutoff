[
    {
        "name": "Substring",
        "description": "You are given a graph with \n    n\n nodes and \n    m\n directed edges. One\nlowercase letter is assigned to each node. We define a path's value as the\nnumber of the most frequently occurring letter. For example, if letters on a\npath are \"abaca\", then the value of that path is \n    3\n. Your task is find a\npath whose value is the largest. Input The first line contains two positive\nintegers \n    n, m\n (\n    1 \n    \u2264 n, m \n    \u2264 300\n     000\n), denoting that the\ngraph has \n    n\n nodes and \n    m\n directed edges. The second line contains a\nstring \n    s\n with only lowercase English letters. The \n    i\n-th character\nis the letter assigned to the \n    i\n-th node. Then \n    m\n lines follow. Each\nline contains two integers \n    x, y\n (\n    1 \n    \u2264 x, y \n    \u2264 n\n),\ndescribing a directed edge from \n    x\n to \n    y\n. Note that \n    x\n can be\nequal to \n    y\n and there can be multiple edges between \n    x\n and \n    y\n.\nAlso the graph can be not connected. Output Output a single line with a single\ninteger denoting the largest value. If the value can be arbitrarily large,\noutput -1 instead. Examples Input 5 4 abaca 1 2 1 3 3 4 4 5 Output 3 Input 6 6\nxzyabc 1 2 3 1 2 3 5 4 4 3 6 4 Output -1 Input 10 14 xzyzyzyzqx 1 2 2 4 3 5 4\n5 2 6 6 8 6 5 2 10 3 9 10 9 4 6 1 10 2 8 3 7 Output 4 Note In the first\nsample, the path with largest value is \n    1 \n    \u2192 3 \n    \u2192 4 \n    \u2192 5\n. The\nvalue is \n    3\n because the letter 'a' appears \n    3\n times.\n\n",
        "cf_contest_id": 919,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4\r\nabaca\r\n1 2\r\n1 3\r\n3 4\r\n4 5\r\n",
                "3"
            ],
            [
                "6 6\r\nxzyabc\r\n1 2\r\n3 1\r\n2 3\r\n5 4\r\n4 3\r\n6 4\r\n",
                "-1"
            ],
            [
                "10 14\r\nxzyzyzyzqx\r\n1 2\r\n2 4\r\n3 5\r\n4 5\r\n2 6\r\n6 8\r\n6 5\r\n2 10\r\n3 9\r\n10 9\r\n4 6\r\n1 10\r\n2 8\r\n3 7\r\n",
                "4"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\nf\r\n1 1\r\n",
                "-1"
            ],
            [
                "10 50\r\nebibwbjihv\r\n1 10\r\n1 2\r\n5 4\r\n1 8\r\n9 7\r\n5 6\r\n1 8\r\n8 7\r\n2 6\r\n5 4\r\n1 9\r\n3 2\r\n8 3\r\n5 6\r\n5 9\r\n2 4\r\n2 7\r\n3 9\r\n1 2\r\n1 7\r\n1 10\r\n3 7\r\n1 8\r\n3 10\r\n8 6\r\n1 7\r\n10 6\r\n1 6\r\n5 8\r\n1 5\r\n2 10\r\n3 9\r\n5 8\r\n8 3\r\n3 7\r\n5 2\r\n1 10\r\n1 4\r\n5 3\r\n3 2\r\n1 2\r\n5 8\r\n10 4\r\n2 10\r\n8 2\r\n1 9\r\n1 8\r\n1 2\r\n3 4\r\n1 8\r\n",
                "2"
            ],
            [
                "13 37\r\ndwpzcppjmhkmz\r\n2 6\r\n3 6\r\n6 7\r\n6 7\r\n6 7\r\n6 7\r\n6 8\r\n6 8\r\n6 8\r\n6 8\r\n4 6\r\n4 6\r\n5 6\r\n4 6\r\n4 6\r\n6 9\r\n6 9\r\n6 10\r\n6 10\r\n6 10\r\n6 10\r\n4 6\r\n1 6\r\n1 6\r\n10 11\r\n6 11\r\n1 6\r\n6 12\r\n6 12\r\n6 12\r\n6 13\r\n6 13\r\n6 13\r\n6 13\r\n3 6\r\n2 6\r\n2 6\r\n",
                "3"
            ],
            [
                "5 8\r\ntetqw\r\n2 1\r\n4 4\r\n5 5\r\n5 2\r\n4 5\r\n1 5\r\n1 5\r\n1 1\r\n",
                "-1"
            ],
            [
                "5 8\r\nreeet\r\n4 3\r\n2 5\r\n4 2\r\n2 4\r\n4 2\r\n5 2\r\n3 3\r\n3 4\r\n",
                "-1"
            ]
        ]
    }
]