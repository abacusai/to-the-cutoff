[
    {
        "name": "Li Hua and Path",
        "description": "Li Hua has a tree of \n    n\n vertices and \n    n-1\n edges. The vertices are\nnumbered from \n    1\n to \n    n\n. A pair of vertices \n    (u,v)\n (\n    u < v\n)\nis considered cute if exactly one of the following two statements is true:\n\n    u\n is the vertex with the minimum index among all vertices on the path\n\n    (u,v)\n. \n    v\n is the vertex with the maximum index among all vertices\non the path \n    (u,v)\n.There will be \n    m\n operations. In each operation,\nhe decides an integer \n    k_j\n, then inserts a vertex numbered \n    n+j\n to\nthe tree, connecting with the vertex numbered \n    k_j\n. He wants to calculate\nthe number of cute pairs before operations and after each operation. Suppose\nyou were Li Hua, please solve this problem. Input The first line contains the\nsingle integer \n    n\n (\n    2\n    \u2264 n\n    \u2264 2\n    \u00b7 10^5\n) \u2014 the number of\nvertices in the tree. Next \n    n-1\n lines contain the edges of the tree. The\n\n    i\n-th line contains two integers \n    u_i\n and \n    v_i\n (\n    1\n    \u2264\n    u_i,v_i\n    \u2264 n\n; \n    u_i\n     v_i\n) \u2014 the corresponding edge. The given\nedges form a tree. The next line contains the single integer \n    m\n\n(\n    1\n    \u2264 m\n    \u2264 2\n    \u00b7 10^5\n) \u2014 the number of operations. Next \n    m\n\nlines contain operations \u2014 one operation per line. The \n    j\n-th operation\ncontains one integer \n    k_j\n (\n    1\n    \u2264 k_j < n+j\n) \u2014 a vertex. Output\nPrint \n    m+1\n integers \u2014 the number of cute pairs before operations and\nafter each operation. Example Input 7 2 1 1 3 1 4 4 6 4 7 6 5 2 5 6 Output 11\n15 19 Note The initial tree is shown in the following picture: There are\n\n    11\n cute pairs \u2014\n\n    (1,5),(2,3),(2,4),(2,6),(2,7),(3,4),(3,6),(3,7),(4,5),(5,7),(6,7)\n.\nSimilarly, we can count the cute pairs after each operation and the result is\n\n    15\n and \n    19\n.\n\n",
        "cf_contest_id": 1797,
        "cf_index": "F",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n2 1\r\n1 3\r\n1 4\r\n4 6\r\n4 7\r\n6 5\r\n2\r\n5\r\n6\r\n",
                "11\r\n15\r\n19\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n2 1\r\n1\r\n1\r\n",
                "0\r\n1\r\n"
            ]
        ]
    }
]