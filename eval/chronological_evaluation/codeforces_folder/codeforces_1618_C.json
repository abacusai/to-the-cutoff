[
    {
        "name": "Paint the Array",
        "description": "You are given an array \n    a\n consisting of \n    n\n positive integers. You\nhave to choose a positive integer \n    d\n and paint all elements into two\ncolors. All elements which are divisible by \n    d\n will be painted red, and\nall other elements will be painted blue. The coloring is called beautiful if\nthere are no pairs of adjacent elements with the same color in the array. Your\ntask is to find any value of \n    d\n which yields a beautiful coloring, or\nreport that it is impossible. Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of testcases. The first line\nof each testcase contains one integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 100\n) \u2014\nthe number of elements of the array. The second line of each testcase contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^18\n). Output For each testcase print a single integer. If there is no\nsuch value of \n    d\n that yields a beautiful coloring, print \n    0\n.\nOtherwise, print any suitable value of \n    d\n (\n    1 \n    \u2264 d \n    \u2264\n    10^18\n). Example Input 5 5 1 2 3 4 5 3 10 5 15 3 100 10 200 10 9 8 2 6 6 2\n8 6 5 4 2 1 3 Output 2 0 100 0 3\n\n",
        "cf_contest_id": 1618,
        "cf_index": "C",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n5\r\n1 2 3 4 5\r\n3\r\n10 5 15\r\n3\r\n100 10 200\r\n10\r\n9 8 2 6 6 2 8 6 5 4\r\n2\r\n1 3\r\n",
                "2\r\n0\r\n100\r\n0\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n5\r\n6 5 12 5 16\r\n",
                "2\r\n"
            ],
            [
                "1\r\n5\r\n3 5 6 11 2\r\n",
                "0\r\n"
            ]
        ]
    }
]