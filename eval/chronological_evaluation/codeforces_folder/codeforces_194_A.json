[
    {
        "name": "Exams",
        "description": "One day the Codeforces round author sat exams. He had n exams and he needed to\nget an integer from 2 to 5 for each exam. He will have to re-sit each failed\nexam, i.e. the exam that gets mark 2. The author would need to spend too much\ntime and effort to make the sum of his marks strictly more than k. That could\nhave spoilt the Codeforces round. On the other hand, if the sum of his marks\nis strictly less than k, the author's mum won't be pleased at all. The\nCodeforces authors are very smart and they always get the mark they choose\nthemselves. Also, the Codeforces authors just hate re-sitting exams. Help the\nauthor and find the minimum number of exams he will have to re-sit if he\npasses the exams in the way that makes the sum of marks for all n exams equal\nexactly k. Input The single input line contains space-separated integers n and\nk (1 \u2264 n \u2264 50, 1 \u2264 k \u2264 250) \u2014 the number of exams and the required sum of\nmarks. It is guaranteed that there exists a way to pass n exams in the way\nthat makes the sum of marks equal exactly k. Output Print the single number \u2014\nthe minimum number of exams that the author will get a 2 for, considering that\nthe sum of marks for all exams must equal k. Examples Input 4 8 Output 4 Input\n4 10 Output 2 Input 1 3 Output 0 Note In the first sample the author has to\nget a 2 for all his exams. In the second sample he should get a 3 for two\nexams and a 2 for two more. In the third sample he should get a 3 for one\nexam.\n\n",
        "cf_contest_id": 194,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 8\r\n",
                "4\r\n"
            ],
            [
                "4 10\r\n",
                "2\r\n"
            ],
            [
                "1 3\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 2\r\n",
                "1\r\n"
            ],
            [
                "4 9\r\n",
                "3\r\n"
            ],
            [
                "50 234\r\n",
                "0\r\n"
            ],
            [
                "50 100\r\n",
                "50\r\n"
            ],
            [
                "50 250\r\n",
                "0\r\n"
            ],
            [
                "29 116\r\n",
                "0\r\n"
            ],
            [
                "20 69\r\n",
                "0\r\n"
            ],
            [
                "46 127\r\n",
                "11\r\n"
            ],
            [
                "3 7\r\n",
                "2\r\n"
            ],
            [
                "36 99\r\n",
                "9\r\n"
            ],
            [
                "45 104\r\n",
                "31\r\n"
            ],
            [
                "13 57\r\n",
                "0\r\n"
            ],
            [
                "25 106\r\n",
                "0\r\n"
            ],
            [
                "8 19\r\n",
                "5\r\n"
            ],
            [
                "20 69\r\n",
                "0\r\n"
            ],
            [
                "13 32\r\n",
                "7\r\n"
            ],
            [
                "47 128\r\n",
                "13\r\n"
            ],
            [
                "17 73\r\n",
                "0\r\n"
            ],
            [
                "3 7\r\n",
                "2\r\n"
            ],
            [
                "16 70\r\n",
                "0\r\n"
            ],
            [
                "1 5\r\n",
                "0\r\n"
            ],
            [
                "38 137\r\n",
                "0\r\n"
            ],
            [
                "7 20\r\n",
                "1\r\n"
            ],
            [
                "1 5\r\n",
                "0\r\n"
            ],
            [
                "36 155\r\n",
                "0\r\n"
            ],
            [
                "5 15\r\n",
                "0\r\n"
            ],
            [
                "27 75\r\n",
                "6\r\n"
            ],
            [
                "21 73\r\n",
                "0\r\n"
            ],
            [
                "2 5\r\n",
                "1\r\n"
            ],
            [
                "49 177\r\n",
                "0\r\n"
            ],
            [
                "7 20\r\n",
                "1\r\n"
            ],
            [
                "44 173\r\n",
                "0\r\n"
            ],
            [
                "49 219\r\n",
                "0\r\n"
            ],
            [
                "16 70\r\n",
                "0\r\n"
            ],
            [
                "10 28\r\n",
                "2\r\n"
            ]
        ]
    }
]