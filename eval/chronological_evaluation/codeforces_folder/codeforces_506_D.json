[
    {
        "name": "Mr. Kitayuta's Colorful Graph",
        "description": "Mr. Kitayuta has just bought an undirected graph with n vertices and m edges.\nThe vertices of the graph are numbered from 1 to n. Each edge, namely edge i,\nhas a color ci, connecting vertex ai and bi. Mr. Kitayuta wants you to process\nthe following q queries. In the i-th query, he gives you two integers - ui and\nvi. Find the number of the colors that satisfy the following condition: the\nedges of that color connect vertex ui and vertex vi directly or indirectly.\nInput The first line of the input contains space-separated two integers - n\nand m(2 \u2264 n \u2264 10^5, 1 \u2264 m \u2264 10^5), denoting the number of the vertices and the\nnumber of the edges, respectively. The next m lines contain space-separated\nthree integers - ai, bi(1 \u2264 ai < bi \u2264 n) and ci(1 \u2264 ci \u2264 m). Note that there\ncan be multiple edges between two vertices. However, there are no multiple\nedges of the same color between two vertices, that is, if i \u2260 j, (ai, bi, ci)\n\u2260 (aj, bj, cj). The next line contains a integer- q(1 \u2264 q \u2264 10^5), denoting\nthe number of the queries. Then follows q lines, containing space-separated\ntwo integers - ui and vi(1 \u2264 ui, vi \u2264 n). It is guaranteed that ui \u2260 vi.\nOutput For each query, print the answer in a separate line. Examples Input 4 5\n1 2 1 1 2 2 2 3 1 2 3 3 2 4 3 3 1 2 3 4 1 4 Output 2 1 0 Input 5 7 1 5 1 2 5 1\n3 5 1 4 5 1 1 2 2 2 3 2 3 4 2 5 1 5 5 1 2 5 1 5 1 4 Output 1 1 1 1 2 Note\nLet's consider the first sample. The figure above shows the first sample.\nVertex 1 and vertex 2 are connected by color 1 and 2. Vertex 3 and vertex 4\nare connected by color 3. Vertex 1 and vertex 4 are not connected by any\nsingle color.\n\n",
        "cf_contest_id": 506,
        "cf_index": "D",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 5\r\n1 2 1\r\n1 2 2\r\n2 3 1\r\n2 3 3\r\n2 4 3\r\n3\r\n1 2\r\n3 4\r\n1 4\r\n",
                "2\r\n1\r\n0\r\n"
            ],
            [
                "5 7\r\n1 5 1\r\n2 5 1\r\n3 5 1\r\n4 5 1\r\n1 2 2\r\n2 3 2\r\n3 4 2\r\n5\r\n1 5\r\n5 1\r\n2 5\r\n1 5\r\n1 4\r\n",
                "1\r\n1\r\n1\r\n1\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1 2 1\r\n1\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "2 3\r\n1 2 3\r\n1 2 2\r\n1 2 1\r\n1\r\n1 2\r\n",
                "3\r\n"
            ]
        ]
    }
]