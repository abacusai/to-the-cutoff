[
    {
        "name": "Minimum Ties",
        "description": "A big football championship will occur soon! \n    n\n teams will compete in it,\nand each pair of teams will play exactly one game against each other. There\nare two possible outcomes of a game: the game may result in a tie, then both\nteams get \n    1\n point; one team might win in a game, then the winning team\ngets \n    3\n points and the losing team gets \n    0\n points. The score of a\nteam is the number of points it gained during all games that it played. You\nare interested in a hypothetical situation when all teams get the same score\nat the end of the championship. A simple example of that situation is when all\ngames result in ties, but you want to minimize the number of ties as well.\nYour task is to describe a situation (choose the result of each game) so that\nall teams get the same score, and the number of ties is the minimum possible.\nInput The first line contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n)\n\u2014 the number of test cases. Then the test cases follow. Each test case is\ndescribed by one line containing one integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264\n    100\n) \u2014 the number of teams. Output For each test case, print \n    n(n\n    - 1)/2\n integers describing the results of the games in the following\norder: the first integer should correspond to the match between team \n    1\n\nand team \n    2\n, the second \u2014 between team \n    1\n and team \n    3\n, then\n\n    1\n and \n    4\n, ..., \n    1\n and \n    n\n, \n    2\n and \n    3\n, \n    2\n\nand \n    4\n, ..., \n    2\n and \n    n\n, and so on, until the game between the\nteam \n    n - 1\n and the team \n    n\n. The integer corresponding to the game\nbetween the team \n    x\n and the team \n    y\n should be \n    1\n if \n    x\n\nwins, \n    -1\n if \n    y\n wins, or \n    0\n if the game results in a tie. All\nteams should get the same score, and the number of ties should be the minimum\npossible. If there are multiple optimal answers, print any of them. It can be\nshown that there always exists a way to make all teams have the same score.\nExample Input 2 2 3 Output 0 1 -1 1 Note In the first test case of the\nexample, both teams get \n    1\n point since the game between them is a tie. In\nthe second test case of the example, team \n    1\n defeats team \n    2\n (team\n\n    1\n gets \n    3\n points), team \n    1\n loses to team \n    3\n (team \n    3\n\ngets \n    3\n points), and team \n    2\n wins against team \n    3\n (team \n    2\n\ngets \n    3\n points).\n\n",
        "cf_contest_id": 1487,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n2\r\n3\r\n",
                "0 1 -1 1 "
            ]
        ],
        "private_cases": [
            [
                "1\r\n10\r\n",
                "1 1 1 1 0 -1 -1 -1 -1 1 1 1 1 0 -1 -1 -1 1 1 1 1 0 -1 -1 1 1 1 1 0 -1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 "
            ]
        ]
    }
]