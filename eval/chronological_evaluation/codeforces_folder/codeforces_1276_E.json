[
    {
        "name": "Four Stones",
        "description": "There are four stones on an infinite line in integer coordinates \n    a_1, a_2,\n    a_3, a_4\n. The goal is to have the stones in coordinates \n    b_1, b_2, b_3,\n    b_4\n. The order of the stones does not matter, that is, a stone from any\nposition \n    a_i\n can end up in at any position \n    b_j\n, provided there is\na required number of stones in each position (that is, if a coordinate \n    x\n\nappears \n    k\n times among numbers \n    b_1, \n    \u2026, b_4\n, there should be\nexactly \n    k\n stones at \n    x\n in the end). We are allowed to move stones\nwith the following operation: choose two stones at distinct positions \n    x\n\nand \n    y\n with at least one stone each, and move one stone from \n    x\n to\n\n    2y - x\n. In other words, the operation moves a stone to a symmetric\nposition relative to some other stone. At any moment it is allowed to have any\nnumber of stones at the same position. Find any sequence of operations that\nachieves the goal, or determine that it is impossible. The sequence does not\nhave to be shortest, but it may contain at most \n    1000\n operations. Input\nThe first line contains four integers \n    a_1, \n    \u2026, a_4\n (\n    -10^9\n    \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 initial coordinates of the stones. There may be\nmultiple stones sharing the same coordinate. The second line contains four\nintegers \n    b_1, \n    \u2026, b_4\n (\n    -10^9 \n    \u2264 b_i \n    \u2264 10^9\n) \u2014\ntarget coordinates of the stones. There may be multiple targets sharing the\nsame coordinate. Output If there is no sequence of operations that achieves\nthe goal, print a single integer \n    -1\n. Otherwise, on the first line print\na single integer \n    k\n (\n    0 \n    \u2264 k \n    \u2264 1000\n) \u2014 the number of\noperations in your sequence. On the next \n    k\n lines, describe the\noperations. The \n    i\n-th of these lines should contain two integers\n\n    x_i\n and \n    y_i\n (\n    x_i \n    \u2260 y_i\n) \u2014 coordinates of the moved\nstone and the center of symmetry stone for the \n    i\n-th operation. For each\noperation \n    i\n, there should at least one stone in each of the coordinates\n\n    x_i\n and \n    y_i\n, and the resulting coordinate \n    2y_i - x_i\n must\nnot exceed \n    10^18\n by absolute value. If there are multiple suitable\nsequences, print any of them. It is guaranteed that if there is a suitable\nsequence of operations, then there is also a suitable sequence that satisfies\nall the additional requirement. Examples Input 0 1 2 3 3 5 6 8 Output 3 1 3 2\n5 0 3 Input 0 0 0 0 1 1 1 1 Output -1 Input 0 0 0 1 0 1 0 1 Output -1\n\n",
        "cf_contest_id": 1276,
        "cf_index": "E",
        "cf_rating": 3500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "0 1 2 3\r\n3 5 6 8\r\n",
                "7\r\n3 2\r\n2 1\r\n0 1\r\n1 2\r\n1 3\r\n0 3\r\n2 5\r\n"
            ],
            [
                "0 0 0 0\r\n1 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "0 0 0 1\r\n0 1 0 1\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "0 0 0 0\r\n0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "-1 1 2 0\r\n1 1 0 -2\r\n",
                "6\r\n2 0\r\n1 0\r\n0 -1\r\n-2 -1\r\n-1 0\r\n-1 0\r\n"
            ],
            [
                "1 2 1 -2\r\n-1 0 -2 -3\r\n",
                "7\r\n2 1\r\n1 0\r\n1 -1\r\n0 -1\r\n-1 -2\r\n-3 -2\r\n-2 -1\r\n"
            ],
            [
                "0 2 -4 3\r\n2 4 0 0\r\n",
                "-1\r\n"
            ],
            [
                "-2 0 3 4\r\n-2 -2 4 0\r\n",
                "-1\r\n"
            ],
            [
                "5 -5 4 -2\r\n1 1 -2 1\r\n",
                "-1\r\n"
            ],
            [
                "413107524 -626279751 -525050751 922881954\r\n-762087096 -546123666 533051544 -748026141\r\n",
                "-1\r\n"
            ],
            [
                "-590590356 -591318711 387195369 928103889\r\n-818379195 -5497980 -609674625 -469571220\r\n",
                "-1\r\n"
            ],
            [
                "123 123 123 123\r\n456 456 456 456\r\n",
                "-1\r\n"
            ],
            [
                "34688642 -851839419 395784949 -667081997\r\n-155389155 -624068418 -758711821 119194510\r\n",
                "-1\r\n"
            ],
            [
                "-492673762 -496405053 764822338 111401587\r\n774345046 -588077735 -972693439 959995351\r\n",
                "-1\r\n"
            ],
            [
                "0 0 0 1\r\n-1000000000 -1000000000 -1000000000 999999999\r\n",
                "-1\r\n"
            ],
            [
                "0 1 2 1000000000\r\n0 1 999999999 1000000000\r\n",
                "-1\r\n"
            ],
            [
                "0 2 900000000 900000002\r\n0 2 2 2\r\n",
                "-1\r\n"
            ],
            [
                "1 1 1 3\r\n1 1 1 3\r\n",
                "0\r\n"
            ]
        ]
    }
]