[
    {
        "name": "Mages and Monsters",
        "description": "Vova plays a computer game known as Mages and Monsters. Vova's character is a\nmage. Though as he has just started, his character knows no spells. Vova's\ncharacter can learn new spells during the game. Every spell is characterized\nby two values xi and yi \u2014 damage per second and mana cost per second,\nrespectively. Vova doesn't have to use a spell for an integer amount of\nseconds. More formally, if he uses a spell with damage x and mana cost y for z\nseconds, then he will deal x\u00b7z damage and spend y\u00b7z mana (no rounding). If\nthere is no mana left (mana amount is set in the start of the game and it\nremains the same at the beginning of every fight), then character won't be\nable to use any spells. It is prohibited to use multiple spells\nsimultaneously. Also Vova can fight monsters. Every monster is characterized\nby two values tj and hj \u2014 monster kills Vova's character in tj seconds and has\nhj health points. Mana refills after every fight (or Vova's character revives\nwith full mana reserve), so previous fights have no influence on further ones.\nVova's character kills a monster, if he deals hj damage to it in no more than\ntj seconds using his spells (it is allowed to use more than one spell in a\nfight) and spending no more mana than he had at the beginning of the fight. If\nmonster's health becomes zero exactly in tj seconds (it means that the monster\nand Vova's character kill each other at the same time), then Vova wins the\nfight. You have to write a program which can answer two types of queries: 1 x\ny \u2014 Vova's character learns new spell which deals x damage per second and\ncosts y mana per second. 2 t h \u2014 Vova fights the monster which kills his\ncharacter in t seconds and has h health points. Note that queries are given in\na different form. Also remember that Vova's character knows no spells at the\nbeginning of the game. For every query of second type you have to determine if\nVova is able to win the fight with corresponding monster. Input The first line\ncontains two integer numbers q and m (2 \u2264 q \u2264 10^5, 1 \u2264 m \u2264 10^12) \u2014 the\nnumber of queries and the amount of mana at the beginning of every fight. i-th\nof each next q lines contains three numbers ki, ai and bi (1 \u2264 ki \u2264 2, 1 \u2264 ai,\nbi \u2264 10^6). Using them you can restore queries this way: let j be the index of\nthe last query of second type with positive answer (j = 0 if there were none\nof these). If ki = 1, then character learns spell with x = (ai + j) mod 10^6 +\n1, y = (bi + j) mod 10^6 + 1. If ki = 2, then you have to determine if Vova is\nable to win the fight against monster with t = (ai + j) mod 10^6 + 1, h = (bi\n+ j) mod 10^6 + 1. Output For every query of second type print YES if Vova is\nable to win the fight with corresponding monster and NO otherwise. Example\nInput 3 100 1 4 9 2 19 49 2 19 49 Output YES NO Note In first example Vova's\ncharacter at first learns the spell with 5 damage and 10 mana cost per second.\nNext query is a fight with monster which can kill character in 20 seconds and\nhas 50 health points. Vova kills it in 10 seconds (spending 100 mana). Next\nmonster has 52 health, so Vova can't deal that much damage with only 100 mana.\n\n",
        "cf_contest_id": 792,
        "cf_index": "F",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "geometry"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 100\r\n1 4 9\r\n2 19 49\r\n2 19 49\r\n",
                "YES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 442006988299\r\n2 10 47\r\n1 9 83\r\n1 15 24\r\n2 19 47\r\n2 75 99\r\n2 85 23\r\n2 8 33\r\n2 9 82\r\n1 86 49\r\n2 71 49\r\n",
                "NO\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "2 424978864039\r\n2 7 3\r\n2 10 8\r\n",
                "NO\r\nNO\r\n"
            ],
            [
                "2 1000000000000\r\n1 235726 255577\r\n1 959304 206090\r\n",
                ""
            ],
            [
                "3 10\r\n1 1 1\r\n2 1 1\r\n2 999999 999999\r\n",
                "YES\r\nYES\r\n"
            ],
            [
                "12 100\r\n1 8 8\r\n2 200 101\r\n2 10 99\r\n1 9 9\r\n2 10 99\r\n2 200 101\r\n1 14 4\r\n2 194 195\r\n2 194 194\r\n2 990 290\r\n2 999991 11\r\n2 999991 10\r\n",
                "NO\r\nNO\r\nYES\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nYES\r\n"
            ],
            [
                "15 100\r\n1 8 8\r\n2 200 101\r\n2 10 99\r\n1 9 9\r\n2 10 99\r\n2 200 101\r\n1 14 4\r\n2 194 195\r\n2 194 194\r\n2 990 290\r\n1 2 999992\r\n2 6 256\r\n2 7 256\r\n1 2 999988\r\n2 2 252\r\n",
                "NO\r\nNO\r\nYES\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\n"
            ],
            [
                "3 12\r\n1 99 9\r\n1 49 1\r\n2 1 149\r\n",
                "YES\r\n"
            ]
        ]
    }
]