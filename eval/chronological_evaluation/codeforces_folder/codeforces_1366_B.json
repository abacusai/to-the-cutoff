[
    {
        "name": "Shuffle",
        "description": "You are given an array consisting of \n    n\n integers \n    a_1\n, \n    a_2\n,\n..., \n    a_n\n. Initially \n    a_x = 1\n, all other elements are equal to\n\n    0\n. You have to perform \n    m\n operations. During the \n    i\n-th\noperation, you choose two indices \n    c\n and \n    d\n such that \n    l_i \n    \u2264\n    c, d \n    \u2264 r_i\n, and swap \n    a_c\n and \n    a_d\n. Calculate the number of\nindices \n    k\n such that it is possible to choose the operations so that\n\n    a_k = 1\n in the end. Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases. Then the\ndescription of \n    t\n testcases follow. The first line of each test case\ncontains three integers \n    n\n, \n    x\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264\n    10^9\n; \n    1 \n    \u2264 m \n    \u2264 100\n; \n    1 \n    \u2264 x \n    \u2264 n\n). Each of next\n\n    m\n lines contains the descriptions of the operations; the \n    i\n-th line\ncontains two integers \n    l_i\n and \n    r_i\n (\n    1 \n    \u2264 l_i \n    \u2264 r_i \n    \u2264\n    n\n). Output For each test case print one integer \u2014 the number of indices\n\n    k\n such that it is possible to choose the operations so that \n    a_k =\n    1\n in the end. Example Input 3 6 4 3 1 6 2 3 5 5 4 1 2 2 4 1 2 3 3 2 2 3 1 2\nOutput 6 2 3 Note In the first test case, it is possible to achieve \n    a_k =\n    1\n for every \n    k\n. To do so, you may use the following operations: swap\n\n    a_k\n and \n    a_4\n; swap \n    a_2\n and \n    a_2\n; swap \n    a_5\n and\n\n    a_5\n. In the second test case, only \n    k = 1\n and \n    k = 2\n are\npossible answers. To achieve \n    a_1 = 1\n, you have to swap \n    a_1\n and\n\n    a_1\n during the second operation. To achieve \n    a_2 = 1\n, you have to\nswap \n    a_1\n and \n    a_2\n during the second operation.\n\n",
        "cf_contest_id": 1366,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n6 4 3\r\n1 6\r\n2 3\r\n5 5\r\n4 1 2\r\n2 4\r\n1 2\r\n3 3 2\r\n2 3\r\n1 2\r\n",
                "6\r\n2\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "9\r\n100 50 6\r\n1 49\r\n51 100\r\n40 60\r\n30 70\r\n20 30\r\n70 80\r\n100 1 11\r\n1 1\r\n1 1\r\n1 1\r\n2 2\r\n2 100\r\n1 2\r\n2 3\r\n3 4\r\n5 6\r\n6 100\r\n4 5\r\n1 1 5\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n11 6 4\r\n6 6\r\n1 5\r\n7 11\r\n6 6\r\n3 3 2\r\n1 2\r\n2 3\r\n1000000000 1 1\r\n1 1000000000\r\n1000000000 1 1\r\n1 999999999\r\n1000000000 1 1\r\n2 1000000000\r\n1000000000 2 1\r\n1 1000000000\r\n",
                "61\r\n5\r\n1\r\n1\r\n2\r\n1000000000\r\n999999999\r\n1\r\n1000000000\r\n"
            ],
            [
                "1\r\n666 666 1\r\n228 666\r\n",
                "439\r\n"
            ]
        ]
    }
]