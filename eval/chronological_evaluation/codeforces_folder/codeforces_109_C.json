[
    {
        "name": "Lucky Tree",
        "description": "Petya loves lucky numbers. We all know that lucky numbers are the positive\nintegers whose decimal representations contain only the lucky digits 4 and 7.\nFor example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not. One day\nPetya encountered a tree with n vertexes. Besides, the tree was weighted, i.\ne. each edge of the tree has weight (a positive integer). An edge is lucky if\nits weight is a lucky number. Note that a tree with n vertexes is an\nundirected connected graph that has exactly n - 1 edges. Petya wondered how\nmany vertex triples (i, j, k) exists that on the way from i to j, as well as\non the way from i to k there must be at least one lucky edge (all three\nvertexes are pairwise distinct). The order of numbers in the triple matters,\nthat is, the triple (1, 2, 3) is not equal to the triple (2, 1, 3) and is not\nequal to the triple (1, 3, 2). Find how many such triples of vertexes exist.\nInput The first line contains the single integer n (1 \u2264 n \u2264 10^5) \u2014 the number\nof tree vertexes. Next n - 1 lines contain three integers each: ui vi wi (1 \u2264\nui, vi \u2264 n, 1 \u2264 wi \u2264 10^9) \u2014 the pair of vertexes connected by the edge and\nthe edge's weight. Output On the single line print the single number \u2014 the\nanswer. Please do not use the \nnumbers in \u0421++. It is recommended to use the cin, cout streams or the \nspecificator. Examples Input 4 1 2 4 3 1 2 1 4 7 Output 16 Input 4 1 2 4 1 3\n47 1 4 7447 Output 24 Note The 16 triples of vertexes from the first sample\nare: (1, 2, 4), (1, 4, 2), (2, 1, 3), (2, 1, 4), (2, 3, 1), (2, 3, 4), (2, 4,\n1), (2, 4, 3), (3, 2, 4), (3, 4, 2), (4, 1, 2), (4, 1, 3), (4, 2, 1), (4, 2,\n3), (4, 3, 1), (4, 3, 2). In the second sample all the triples should be\ncounted: 4\u00b73\u00b72 = 24.\n\n",
        "cf_contest_id": 109,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "dsu",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 2 4\r\n3 1 2\r\n1 4 7\r\n",
                "16"
            ],
            [
                "4\r\n1 2 4\r\n1 3 47\r\n1 4 7447\r\n",
                "24"
            ]
        ],
        "private_cases": [
            [
                "9\r\n1 2 7\r\n1 3 12\r\n4 1 2\r\n4 5 4\r\n4 6 47\r\n4 7 9\r\n5 8 2\r\n5 9 1\r\n",
                "282"
            ],
            [
                "2\r\n1 2 7\r\n",
                "0"
            ],
            [
                "2\r\n2 1 1000000000\r\n",
                "0"
            ],
            [
                "9\r\n1 2 1\r\n1 3 7\r\n3 4 19\r\n3 5 2\r\n4 6 46\r\n7 4 25\r\n5 8 64\r\n5 9 73\r\n",
                "98"
            ],
            [
                "7\r\n1 2 47\r\n1 3 9\r\n3 7 7\r\n3 4 2\r\n3 5 4\r\n3 6 1\r\n",
                "114"
            ],
            [
                "5\r\n1 2 1\r\n2 3 1\r\n3 4 1\r\n4 5 2\r\n",
                "0"
            ],
            [
                "7\r\n1 2 4\r\n2 3 7\r\n3 4 44\r\n4 5 47\r\n5 6 74\r\n6 7 77\r\n",
                "210"
            ],
            [
                "5\r\n1 2 1000000000\r\n2 3 747774\r\n3 4 4\r\n4 5 8447854\r\n",
                "36"
            ],
            [
                "5\r\n1 2 1\r\n2 3 4\r\n3 4 4\r\n4 5 1\r\n",
                "36"
            ],
            [
                "9\r\n9 7 4\r\n7 2 10\r\n2 3 28\r\n2 1 1\r\n1 6 47\r\n1 5 7\r\n1 4 4\r\n1 8 2\r\n",
                "284"
            ],
            [
                "10\r\n9 1 4\r\n9 2 7\r\n9 3 74447\r\n9 4 744\r\n9 5 777777777\r\n9 6 447477\r\n9 7 74\r\n9 8 777\r\n4 10 977\r\n",
                "688"
            ],
            [
                "10\r\n9 2 6\r\n5 3 7\r\n7 8 9\r\n2 1 7\r\n8 6 3\r\n1 4 5\r\n3 10 7\r\n7 4 3\r\n6 3 5\r\n",
                "328"
            ],
            [
                "10\r\n4 8 480392999\r\n3 4 32525297\r\n9 7 417904789\r\n6 2 836294777\r\n5 3 616099185\r\n1 7 830574407\r\n8 10 838073755\r\n6 10 547050646\r\n2 1 12607780\r\n",
                "0"
            ]
        ]
    }
]