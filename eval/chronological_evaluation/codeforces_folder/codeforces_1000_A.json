[
    {
        "name": "Codehorses T-shirts",
        "description": "Codehorses has just hosted the second Codehorses Cup. This year, the same as\nthe previous one, organizers are giving T-shirts for the winners. The valid\nsizes of T-shirts are either \"M\" or from \n    0\n to \n    3\n \"X\" followed by\n\"S\" or \"L\". For example, sizes \"M\", \"XXS\", \"L\", \"XXXL\" are valid and \"XM\",\n\"Z\", \"XXXXL\" are not. There are \n    n\n winners to the cup for both the\nprevious year and the current year. Ksenia has a list with the T-shirt sizes\nprinted for the last year cup and is yet to send the new list to the printing\noffice. Organizers want to distribute the prizes as soon as possible, so now\nKsenia is required not to write the whole list from the scratch but just make\nsome changes to the list of the previous year. In one second she can choose\narbitrary position in any word and replace its character with some uppercase\nLatin letter. Ksenia can't remove or add letters in any of the words. What is\nthe minimal number of seconds Ksenia is required to spend to change the last\nyear list to the current one? The lists are unordered. That means, two lists\nare considered equal if and only if the number of occurrences of any string is\nthe same in both lists. Input The first line contains one integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 100\n) \u2014 the number of T-shirts. The \n    i\n-th of the\nnext \n    n\n lines contains \n    a_i\n \u2014 the size of the \n    i\n-th T-shirt of\nthe list for the previous year. The \n    i\n-th of the next \n    n\n lines\ncontains \n    b_i\n \u2014 the size of the \n    i\n-th T-shirt of the list for the\ncurrent year. It is guaranteed that all the sizes in the input are valid. It\nis also guaranteed that Ksenia can produce list \n    b\n from the list \n    a\n.\nOutput Print the minimal number of seconds Ksenia is required to spend to\nchange the last year list to the current one. If the lists are already equal,\nprint 0. Examples Input 3 XS XS M XL S XS Output 2 Input 2 XXXL XXL XXL XXXS\nOutput 1 Input 2 M XS XS M Output 0 Note In the first example Ksenia can\nreplace \"M\" with \"S\" and \"S\" in one of the occurrences of \"XS\" with \"L\". In\nthe second example Ksenia should replace \"L\" in \"XXXL\" with \"S\". In the third\nexample lists are equal.\n\n",
        "cf_contest_id": 1000,
        "cf_index": "A",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\nXS\r\nXS\r\nM\r\nXL\r\nS\r\nXS\r\n",
                "2\r\n"
            ],
            [
                "2\r\nXXXL\r\nXXL\r\nXXL\r\nXXXS\r\n",
                "1\r\n"
            ],
            [
                "2\r\nM\r\nXS\r\nXS\r\nM\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nXXXL\r\nXXXL\r\n",
                "0\r\n"
            ],
            [
                "1\r\nM\r\nM\r\n",
                "0\r\n"
            ],
            [
                "4\r\nS\r\nL\r\nXXS\r\nXXS\r\nM\r\nL\r\nXXS\r\nXXL\r\n",
                "2\r\n"
            ],
            [
                "5\r\nXS\r\nXXXS\r\nL\r\nXS\r\nM\r\nXL\r\nS\r\nXS\r\nM\r\nXXXL\r\n",
                "3\r\n"
            ],
            [
                "1\r\nS\r\nM\r\n",
                "1\r\n"
            ],
            [
                "26\r\nS\r\nL\r\nM\r\nL\r\nS\r\nXXXS\r\nXXXS\r\nM\r\nXXXS\r\nXXXS\r\nM\r\nXXS\r\nM\r\nXXXL\r\nM\r\nXL\r\nXXXL\r\nXXXS\r\nXXL\r\nL\r\nM\r\nM\r\nL\r\nXL\r\nXS\r\nXXL\r\nXS\r\nXXXS\r\nXL\r\nXXXL\r\nXXXL\r\nL\r\nL\r\nXXXS\r\nL\r\nL\r\nXXL\r\nXXXS\r\nL\r\nM\r\nM\r\nXXL\r\nS\r\nL\r\nXXL\r\nXXXS\r\nL\r\nS\r\nL\r\nL\r\nXL\r\nXXXL\r\n",
                "7\r\n"
            ],
            [
                "43\r\nL\r\nXXXL\r\nM\r\nXS\r\nL\r\nXXL\r\nS\r\nL\r\nM\r\nXXXL\r\nXXS\r\nS\r\nXS\r\nS\r\nXS\r\nXL\r\nXXL\r\nXXL\r\nXS\r\nXXS\r\nXXL\r\nL\r\nXXXL\r\nL\r\nL\r\nXXL\r\nXXL\r\nM\r\nXXXS\r\nM\r\nXXL\r\nXXXS\r\nXXXL\r\nXXS\r\nL\r\nL\r\nXS\r\nL\r\nXS\r\nXS\r\nL\r\nXXL\r\nM\r\nXXXL\r\nXXL\r\nXXL\r\nXL\r\nL\r\nXS\r\nM\r\nXL\r\nXXXS\r\nXXXS\r\nS\r\nXXL\r\nXXXL\r\nXXL\r\nXS\r\nXXS\r\nL\r\nS\r\nXXXS\r\nXL\r\nL\r\nXL\r\nXXXS\r\nM\r\nL\r\nXXL\r\nL\r\nXL\r\nM\r\nM\r\nL\r\nXXS\r\nS\r\nXXS\r\nXS\r\nXXL\r\nL\r\nM\r\nS\r\nL\r\nXXS\r\nXXS\r\nM\r\n",
                "10\r\n"
            ],
            [
                "5\r\nXXXL\r\nXXL\r\nXL\r\nL\r\nM\r\nXXXS\r\nXXS\r\nXS\r\nS\r\nM\r\n",
                "4\r\n"
            ],
            [
                "1\r\nL\r\nM\r\n",
                "1\r\n"
            ],
            [
                "2\r\nL\r\nS\r\nS\r\nM\r\n",
                "1\r\n"
            ],
            [
                "13\r\nS\r\nM\r\nL\r\nS\r\nL\r\nL\r\nXL\r\nS\r\nXL\r\nXXL\r\nXL\r\nXXL\r\nM\r\nM\r\nXS\r\nM\r\nXXL\r\nL\r\nM\r\nXXS\r\nXS\r\nM\r\nS\r\nS\r\nXS\r\nL\r\n",
                "6\r\n"
            ],
            [
                "14\r\nXXL\r\nS\r\nS\r\nXXXL\r\nXL\r\nXXXS\r\nXS\r\nS\r\nS\r\nXL\r\nM\r\nXXXS\r\nM\r\nS\r\nL\r\nXXS\r\nXXXS\r\nS\r\nL\r\nXL\r\nL\r\nXXXL\r\nXS\r\nXL\r\nS\r\nM\r\nS\r\nXXXS\r\n",
                "4\r\n"
            ],
            [
                "2\r\nL\r\nM\r\nS\r\nL\r\n",
                "1\r\n"
            ],
            [
                "9\r\nM\r\nXXL\r\nXL\r\nL\r\nS\r\nXS\r\nXXL\r\nXL\r\nXXS\r\nS\r\nXXL\r\nXS\r\nXS\r\nS\r\nXXL\r\nXL\r\nXXS\r\nM\r\n",
                "2\r\n"
            ],
            [
                "6\r\nM\r\nXXS\r\nXXL\r\nXXL\r\nL\r\nL\r\nXXS\r\nXXL\r\nS\r\nXXS\r\nL\r\nL\r\n",
                "2\r\n"
            ],
            [
                "1\r\nL\r\nS\r\n",
                "1\r\n"
            ],
            [
                "11\r\nM\r\nS\r\nS\r\nXXXS\r\nS\r\nXXXS\r\nM\r\nM\r\nL\r\nXXXL\r\nXL\r\nXXXL\r\nM\r\nM\r\nL\r\nXXXS\r\nXXXS\r\nL\r\nM\r\nL\r\nM\r\nXS\r\n",
                "4\r\n"
            ],
            [
                "8\r\nXL\r\nXS\r\nS\r\nXXXL\r\nXXXL\r\nXL\r\nXXXL\r\nS\r\nXS\r\nXXXS\r\nXL\r\nL\r\nXXXS\r\nM\r\nXS\r\nXXXL\r\n",
                "5\r\n"
            ],
            [
                "2\r\nL\r\nL\r\nM\r\nM\r\n",
                "2\r\n"
            ],
            [
                "6\r\nL\r\nS\r\nXS\r\nM\r\nXL\r\nXXS\r\nXS\r\nM\r\nL\r\nXL\r\nXXL\r\nL\r\n",
                "2\r\n"
            ],
            [
                "2\r\nL\r\nS\r\nM\r\nL\r\n",
                "1\r\n"
            ],
            [
                "6\r\nXXL\r\nXXS\r\nXXXS\r\nL\r\nXXXS\r\nXXXL\r\nXXL\r\nL\r\nXXS\r\nXXXS\r\nXXXL\r\nXXXL\r\n",
                "1\r\n"
            ],
            [
                "5\r\nXXS\r\nXXS\r\nXXL\r\nXXXS\r\nL\r\nXXS\r\nXXXL\r\nS\r\nXXS\r\nXXS\r\n",
                "3\r\n"
            ],
            [
                "8\r\nXXL\r\nS\r\nXXS\r\nXXXS\r\nXXXL\r\nXL\r\nXXL\r\nS\r\nXXXS\r\nM\r\nXXS\r\nXXL\r\nXXS\r\nXXXL\r\nS\r\nXS\r\n",
                "3\r\n"
            ],
            [
                "3\r\nL\r\nL\r\nM\r\nL\r\nM\r\nS\r\n",
                "1\r\n"
            ],
            [
                "5\r\nXXXL\r\nXXXS\r\nXXXL\r\nXL\r\nL\r\nXXXS\r\nS\r\nXS\r\nXXXL\r\nXXXS\r\n",
                "3\r\n"
            ],
            [
                "10\r\nXXXS\r\nXXXL\r\nXXL\r\nM\r\nXXXS\r\nXS\r\nL\r\nXL\r\nXXS\r\nM\r\nM\r\nM\r\nXL\r\nXXL\r\nXXXS\r\nXL\r\nXXXS\r\nXXXS\r\nL\r\nXXS\r\n",
                "2\r\n"
            ],
            [
                "2\r\nM\r\nL\r\nM\r\nS\r\n",
                "1\r\n"
            ],
            [
                "1\r\nXXXS\r\nXXXL\r\n",
                "1\r\n"
            ],
            [
                "1\r\nXS\r\nXL\r\n",
                "1\r\n"
            ],
            [
                "5\r\nL\r\nS\r\nL\r\nXL\r\nXL\r\nXL\r\nXS\r\nM\r\nL\r\nM\r\n",
                "3\r\n"
            ]
        ]
    }
]