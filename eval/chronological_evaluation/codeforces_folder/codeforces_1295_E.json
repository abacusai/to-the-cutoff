[
    {
        "name": "Permutation Separation",
        "description": "You are given a permutation \n    p_1, p_2, \n    \u2026 , p_n\n (an array where each\ninteger from \n    1\n to \n    n\n appears exactly once). The weight of the\n\n    i\n-th element of this permutation is \n    a_i\n. At first, you separate\nyour permutation into two non-empty sets \u2014 prefix and suffix. More formally,\nthe first set contains elements \n    p_1, p_2, \n    \u2026 , p_k\n, the second \u2014\n\n    p_k+1, p_k+2, \n    \u2026 , p_n\n, where \n    1 \n    \u2264 k < n\n. After that,\nyou may move elements between sets. The operation you are allowed to do is to\nchoose some element of the first set and move it to the second set, or vice\nversa (move from the second set to the first). You have to pay \n    a_i\n\ndollars to move the element \n    p_i\n. Your goal is to make it so that each\nelement of the first set is less than each element of the second set. Note\nthat if one of the sets is empty, this condition is met. For example, if \n    p\n    = [3, 1, 2]\n and \n    a = [7, 1, 4]\n, then the optimal strategy is: separate\n\n    p\n into two parts \n    [3, 1]\n and \n    [2]\n and then move the\n\n    2\n-element into first set (it costs \n    4\n). And if \n    p = [3, 5, 1, 6,\n    2, 4]\n, \n    a = [9, 1, 9, 9, 1, 9]\n, then the optimal strategy is: separate\n\n    p\n into two parts \n    [3, 5, 1]\n and \n    [6, 2, 4]\n, and then move the\n\n    2\n-element into first set (it costs \n    1\n), and \n    5\n-element into\nsecond set (it also costs \n    1\n). Calculate the minimum number of dollars\nyou have to spend. Input The first line contains one integer \n    n\n (\n    2\n    \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of permutation. The second line\ncontains \n    n\n integers \n    p_1, p_2, \n    \u2026 , p_n\n (\n    1 \n    \u2264 p_i \n    \u2264\n    n\n). It's guaranteed that this sequence contains each element from \n    1\n\nto \n    n\n exactly once. The third line contains \n    n\n integers \n    a_1, a_2,\n    \n    \u2026 , a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n). Output Print one integer \u2014\nthe minimum number of dollars you have to spend. Examples Input 3 3 1 2 7 1 4\nOutput 4 Input 4 2 4 1 3 5 9 8 3 Output 3 Input 6 3 5 1 6 2 4 9 1 9 9 1 9\nOutput 2\n\n",
        "cf_contest_id": 1295,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "divide and conquer"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 1 2\r\n7 1 4\r\n",
                "4\r\n"
            ],
            [
                "4\r\n2 4 1 3\r\n5 9 8 3\r\n",
                "3\r\n"
            ],
            [
                "6\r\n3 5 1 6 2 4\r\n9 1 9 9 1 9\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "6\r\n2 6 1 4 3 5\r\n4 1 1 1 1 9\r\n",
                "1\r\n"
            ],
            [
                "2\r\n2 1\r\n9 5\r\n",
                "5\r\n"
            ],
            [
                "2\r\n1 2\r\n9 9\r\n",
                "0\r\n"
            ],
            [
                "6\r\n3 5 6 1 2 4\r\n7 5 4 5 9 2\r\n",
                "2\r\n"
            ]
        ]
    }
]