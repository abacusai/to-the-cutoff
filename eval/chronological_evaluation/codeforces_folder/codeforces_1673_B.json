[
    {
        "name": "A Perfectly Balanced String?",
        "description": "Let's call a string \n    s\n perfectly balanced if for all possible triplets\n\n    (t,u,v)\n such that \n    t\n is a non-empty substring of \n    s\n and\n\n    u\n and \n    v\n are characters present in \n    s\n, the difference between\nthe frequencies of \n    u\n and \n    v\n in \n    t\n is not more than \n    1\n.\nFor example, the strings \"aba\" and \"abc\" are perfectly balanced but \"abb\" is\nnot because for the triplet (\"bb\",'a','b'), the condition is not satisfied.\nYou are given a string \n    s\n consisting of lowercase English letters only.\nYour task is to determine whether \n    s\n is perfectly balanced or not. A\nstring \n    b\n is called a substring of another string \n    a\n if \n    b\n can\nbe obtained by deleting some characters (possibly \n    0\n) from the start and\nsome characters (possibly \n    0\n) from the end of \n    a\n. Input The first\nline of input contains a single integer \n    t\n (\n    1\n    \u2264 t\n    \u2264 2\n    \u00b7\n    10^4\n) denoting the number of testcases. Each of the next \n    t\n lines\ncontain a single string \n    s\n (\n    1\n    \u2264 |s|\n    \u2264 2\n    \u00b7 10^5\n),\nconsisting of lowercase English letters. It is guaranteed that the sum of\n\n    |s|\n over all testcases does not exceed \n    2\n    \u00b7 10^5\n. Output For\neach test case, print \"YES\" if \n    s\n is a perfectly balanced string, and\n\"NO\" otherwise. You may print each letter in any case (for example, \"YES\",\n\"Yes\", \"yes\", \"yEs\" will all be recognized as positive answer). Example Input\n5 aba abb abc aaaaa abcba Output YES NO YES YES NO Note Let \n    f_t(c)\n\nrepresent the frequency of character \n    c\n in string \n    t\n. For the first\ntestcase we have\n\n    t\n\n    f_t(a)\n\n    f_t(b)\n\n    a\n\n    1\n\n    0\n\n    ab\n\n    1\n\n    1\n\n    aba\n\n    2\n\n    1\n\n    b\n\n    0\n\n    1\n\n    ba\n\n    1\n\n    1\n\nIt can be seen that for any substring \n    t\n of \n    s\n, the difference\nbetween \n    f_t(a)\n and \n    f_t(b)\n is not more than \n    1\n. Hence the\nstring \n    s\n is perfectly balanced. For the second testcase we have\n\n    t\n\n    f_t(a)\n\n    f_t(b)\n\n    a\n\n    1\n\n    0\n\n    ab\n\n    1\n\n    1\n\n    abb\n\n    1\n\n    2\n\n    b\n\n    0\n\n    1\n\n    bb\n\n    0\n\n    2\n\nIt can be seen that for the substring \n    t=bb\n, the difference between\n\n    f_t(a)\n and \n    f_t(b)\n is \n    2\n which is greater than \n    1\n. Hence\nthe string \n    s\n is not perfectly balanced. For the third testcase we have\n\n    t\n\n    f_t(a)\n\n    f_t(b)\n\n    f_t(c)\n\n    a\n\n    1\n\n    0\n\n    0\n\n    ab\n\n    1\n\n    1\n\n    0\n\n    abc\n\n    1\n\n    1\n\n    1\n\n    b\n\n    0\n\n    1\n\n    0\n\n    bc\n\n    0\n\n    1\n\n    1\n\n    c\n\n    0\n\n    0\n\n    1\n\nIt can be seen that for any substring \n    t\n of \n    s\n and any two\ncharacters \n    u,v\n    \u2208\n    \n    a,b,c\n, the difference between \n    f_t(u)\n\nand \n    f_t(v)\n is not more than \n    1\n. Hence the string \n    s\n is\nperfectly balanced.\n\n",
        "cf_contest_id": 1673,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\naba\r\nabb\r\nabc\r\naaaaa\r\nabcba\r\n",
                "YES\r\nNO\r\nYES\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nabaabba\r\n",
                "NO\r\n"
            ]
        ]
    }
]