[
    {
        "name": "Serious Business",
        "description": "Dima is taking part in a show organized by his friend Peter. In this show Dima\nis required to cross a \n    3 \n    \u00d7 n\n rectangular field. Rows are numbered\nfrom \n    1\n to \n    3\n and columns are numbered from \n    1\n to \n    n\n. The\ncell in the intersection of the \n    i\n-th row and the \n    j\n-th column of\nthe field contains an integer \n    a_i,j\n. Initially Dima's score equals\nzero, and whenever Dima reaches a cell in the row \n    i\n and the column\n\n    j\n, his score changes by \n    a_i,j\n. Note that the score can become\nnegative. Initially all cells in the first and the third row are marked as\navailable, and all cells in the second row are marked as unavailable. However,\nPeter offered Dima some help: there are \n    q\n special offers in the show,\nthe \n    i\n-th special offer allows Dima to mark cells in the second row\nbetween \n    l_i\n and \n    r_i\n as available, though Dima's score reduces by\n\n    k_i\n whenever he accepts a special offer. Dima is allowed to use as many\nspecial offers as he wants, and might mark the same cell as available multiple\ntimes. Dima starts his journey in the cell \n    (1, 1)\n and would like to\nreach the cell \n    (3, n)\n. He can move either down to the next row or right\nto the next column (meaning he could increase the current row or column by 1),\nthus making \n    n + 1\n moves in total, out of which exactly \n    n - 1\n would\nbe horizontal and \n    2\n would be vertical. Peter promised Dima to pay him\nbased on his final score, so the sum of all numbers of all visited cells minus\nthe cost of all special offers used. Please help Dima to maximize his final\nscore. Input The first input line contains two integers \n    n\n and \n    q\n\n(\n    1 \n    \u2264 n, q \n    \u2264 500\n     000\n) \u2014 the number of columns in the field and\nthe number of special offers. The next three lines describe the field,\n\n    i\n-th of them contains \n    n\n integers \n    a_i1\n, \n    a_i2\n, ...,\n\n    a_in\n (\n    -10^9 \n    \u2264 a_ij\n    \u2264 10^9)\n \u2014 the values in the\n\n    i\n-th row. The next \n    q\n lines describe special offers: the \n    i\n-th\noffer is described by 3 integers \n    l_i\n, \n    r_i\n and \n    k_i\n (\n    1\n    \n    \u2264 l_i \n    \u2264 r_i \n    \u2264 n\n, \n    1\n    \u2264 k_i\n    \u2264 10^9\n) \u2014 the segment\nthat becomes unblocked and the cost of this special offer. Output Output one\ninteger \u2014 the maximum final score Dima can achieve. Examples Input 4 3 1 0 2\n-1 -3 1 9 2 3 2 4 1 1 2 5 2 3 4 1 4 14 Output 13 Input 5 4 -20 -10 -11 -10 1 1\n3 3 6 3 14 -20 3 6 2 1 5 13 1 2 2 3 5 3 2 3 1 Output -4 Note In the first\nexample, it is optimal to use Peter's second offer of \n    4\n rubles and go\nthrough the cells \n    (1, 1)\n, \n    (1, 2)\n, \n    (1, 3)\n, \n    (2, 3)\n,\n\n    (3, 3)\n, \n    (3, 4)\n, earning \n    1 + 0 + 2 + 9 + 4 + 1 - 4 = 13\n\nrubles in total. In the second example, it is optimal to use Peter's second\nand third offers of \n    2\n and \n    3\n rubles, respectively, and go through\nthe cells \n    (1, 1)\n, \n    (2, 1)\n, \n    (2, 2)\n, \n    (2, 3)\n, \n    (2,\n    4)\n, \n    (3, 4)\n, \n    (3, 5)\n, earning \n    -20 + 1 + 3 + 3 + 6 + 6 + 2 - 2\n    - 3= -4\n rubles.\n\n",
        "cf_contest_id": 1648,
        "cf_index": "D",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "divide and conquer",
            "dp",
            "implementation",
            "shortest paths"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4 3\r\n1 0 2 -1\r\n-3 1 9 2\r\n3 2 4 1\r\n1 2 5\r\n2 3 4\r\n1 4 14\r\n",
                "13\r\n"
            ],
            [
                "5 4\r\n-20 -10 -11 -10 1\r\n1 3 3 6 3\r\n14 -20 3 6 2\r\n1 5 13\r\n1 2 2\r\n3 5 3\r\n2 3 1\r\n",
                "-4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n-412448186\r\n61474040\r\n-885705437\r\n1 1 973941434\r\n",
                "-2210621017\r\n"
            ],
            [
                "4 4\r\n9 -10 -6 -2\r\n-8 -2 8 -3\r\n-1 -2 3 -10\r\n1 2 5\r\n1 2 5\r\n2 4 6\r\n2 4 10\r\n",
                "-8\r\n"
            ],
            [
                "4 4\r\n-2 4 8 -9\r\n9 6 -6 -5\r\n-3 9 -10 10\r\n2 2 3\r\n1 1 2\r\n1 4 8\r\n2 4 1\r\n",
                "19\r\n"
            ],
            [
                "4 2\r\n9 -10 -6 -2\r\n-8 -2 8 -3\r\n-1 -2 3 -10\r\n1 2 5\r\n2 4 6\r\n",
                "-8\r\n"
            ]
        ]
    }
]