[
    {
        "name": "Maximum Control (easy)",
        "description": "The Resistance is trying to take control over all planets in a particular\nsolar system. This solar system is shaped like a tree. More precisely, some\nplanets are connected by bidirectional hyperspace tunnels in such a way that\nthere is a path between every pair of the planets, but removing any tunnel\nwould disconnect some of them. The Resistance already has measures in place\nthat will, when the time is right, enable them to control every planet that is\nnot remote. A planet is considered to be remote if it is connected to the rest\nof the planets only via a single hyperspace tunnel. How much work is there\nleft to be done: that is, how many remote planets are there? Input The first\nline of the input contains an integer N (2 \u2264 N \u2264 1000) \u2013 the number of planets\nin the galaxy. The next N - 1 lines describe the hyperspace tunnels between\nthe planets. Each of the N - 1 lines contains two space-separated integers u\nand v (1 \u2264 u, v \u2264 N) indicating that there is a bidirectional hyperspace\ntunnel between the planets u and v. It is guaranteed that every two planets\nare connected by a path of tunnels, and that each tunnel connects a different\npair of planets. Output A single integer denoting the number of remote\nplanets. Examples Input 5 4 1 4 2 1 3 1 5 Output 3 Input 4 1 2 4 3 1 4 Output\n2 Note In the first example, only planets 2, 3 and 5 are connected by a single\ntunnel. In the second example, the remote planets are 2 and 3. Note that this\nproblem has only two versions \u2013 easy and medium.\n\n",
        "cf_contest_id": 958,
        "cf_index": "B1",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4 1\r\n4 2\r\n1 3\r\n1 5\r\n",
                "3"
            ],
            [
                "4\r\n1 2\r\n4 3\r\n1 4\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "10\r\n4 3\r\n2 6\r\n10 1\r\n5 7\r\n5 8\r\n10 6\r\n5 9\r\n9 3\r\n2 9\r\n",
                "4"
            ]
        ]
    }
]