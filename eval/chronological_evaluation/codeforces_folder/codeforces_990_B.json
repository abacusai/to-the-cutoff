[
    {
        "name": "Micro-World",
        "description": "You have a Petri dish with bacteria and you are preparing to dive into the\nharsh micro-world. But, unfortunately, you don't have any microscope nearby,\nso you can't watch them. You know that you have \n    n\n bacteria in the Petri\ndish and size of the \n    i\n-th bacteria is \n    a_i\n. Also you know\nintergalactic positive integer constant \n    K\n. The \n    i\n-th bacteria can\nswallow the \n    j\n-th bacteria if and only if \n    a_i > a_j\n and \n    a_i\n    \n    \u2264 a_j + K\n. The \n    j\n-th bacteria disappear, but the \n    i\n-th\nbacteria doesn't change its size. The bacteria can perform multiple swallows.\nOn each swallow operation any bacteria \n    i\n can swallow any bacteria\n\n    j\n if \n    a_i > a_j\n and \n    a_i \n    \u2264 a_j + K\n. The swallow operations\ngo one after another. For example, the sequence of bacteria sizes \n    a=[101,\n    53, 42, 102, 101, 55, 54]\n and \n    K=1\n. The one of possible sequences of\nswallows is: \n    [101, 53, 42, 102, \n    101, 55, 54]\n \n    \u2192\n\n\n    [101, \n    53, 42, 102, 55, 54]\n \n    \u2192\n\n\n    [\n    101, 42, 102, 55, 54]\n \n    \u2192\n \n    [42, 102, 55,\n    \n    54]\n \n    \u2192\n \n    [42, 102, 55]\n. In total there are\n\n    3\n bacteria remained in the Petri dish. Since you don't have a\nmicroscope, you can only guess, what the minimal possible number of bacteria\ncan remain in your Petri dish when you finally will find any microscope. Input\nThe first line contains two space separated positive integers \n    n\n and\n\n    K\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    1 \n    \u2264 K \n    \u2264 10^6\n) \u2014\nnumber of bacteria and intergalactic constant \n    K\n. The second line\ncontains \n    n\n space separated integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1\n    \n    \u2264 a_i \n    \u2264 10^6\n) \u2014 sizes of bacteria you have. Output Print the only\ninteger \u2014 minimal possible number of bacteria can remain. Examples Input 7 1\n101 53 42 102 101 55 54 Output 3 Input 6 5 20 15 10 15 20 25 Output 1 Input 7\n1000000 1 1 1 1 1 1 1 Output 7 Note The first example is clarified in the\nproblem statement. In the second example an optimal possible sequence of\nswallows is: \n    [20, 15, 10, 15, \n    20, 25]\n \n    \u2192\n \n    [20,\n    15, 10, \n    15, 25]\n \n    \u2192\n \n    [20, 15, \n    10,\n    25]\n \n    \u2192\n \n    [20, \n    15, 25]\n \n    \u2192\n\n\n    [\n    20, 25]\n \n    \u2192\n \n    [25]\n. In the third example no\nbacteria can swallow any other bacteria.\n\n",
        "cf_contest_id": 990,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 1\r\n101 53 42 102 101 55 54\r\n",
                "3\r\n"
            ],
            [
                "6 5\r\n20 15 10 15 20 25\r\n",
                "1\r\n"
            ],
            [
                "7 1000000\r\n1 1 1 1 1 1 1\r\n",
                "7\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1 4\r\n8\r\n",
                "1\r\n"
            ],
            [
                "10 1\r\n1 2 3 5 6 8 10 11 9 4\r\n",
                "2\r\n"
            ],
            [
                "9 2\r\n1 6 1 5 5 8 6 8 7\r\n",
                "4\r\n"
            ],
            [
                "15 1\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "15\r\n"
            ],
            [
                "2 1000000\r\n1 1000000\r\n",
                "1\r\n"
            ],
            [
                "7 2\r\n1 5 5 8 9 8 8\r\n",
                "4\r\n"
            ],
            [
                "10 1\r\n2 6 3 4 2 4 4 3 2 1\r\n",
                "4\r\n"
            ],
            [
                "4 1\r\n2 2 1 1\r\n",
                "2\r\n"
            ],
            [
                "10 1\r\n6 3 1 3 6 4 1 3 6 4\r\n",
                "7\r\n"
            ],
            [
                "2 1\r\n1 1\r\n",
                "2\r\n"
            ],
            [
                "2 1\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "8 2\r\n3 13 9 8 3 13 9 14\r\n",
                "5\r\n"
            ],
            [
                "8 1000000\r\n1 1 5 1000000 1000000 2 2 2\r\n",
                "2\r\n"
            ],
            [
                "2 1\r\n999152 999153\r\n",
                "1\r\n"
            ]
        ]
    }
]