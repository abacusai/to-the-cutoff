[
    {
        "name": "New Roads",
        "description": "There are n cities in Berland, each of them has a unique id \u2014 an integer from\n1 to n, the capital is the one with id 1. Now there is a serious problem in\nBerland with roads \u2014 there are no roads. That is why there was a decision to\nbuild n - 1 roads so that there will be exactly one simple path between each\npair of cities. In the construction plan t integers a1, a2, ..., at were\nstated, where t equals to the distance from the capital to the most distant\ncity, concerning new roads. ai equals the number of cities which should be at\nthe distance i from the capital. The distance between two cities is the number\nof roads one has to pass on the way from one city to another. Also, it was\ndecided that among all the cities except the capital there should be exactly k\ncities with exactly one road going from each of them. Such cities are dead-\nends and can't be economically attractive. In calculation of these cities the\ncapital is not taken into consideration regardless of the number of roads from\nit. Your task is to offer a plan of road's construction which satisfies all\nthe described conditions or to inform that it is impossible. Input The first\nline contains three positive numbers n, t and k (2 \u2264 n \u2264 2\u00b710^5, 1 \u2264 t, k < n)\n\u2014 the distance to the most distant city from the capital and the number of\ncities which should be dead-ends (the capital in this number is not taken into\nconsideration). The second line contains a sequence of t integers a1, a2, ...,\nat (1 \u2264 ai < n), the i-th number is the number of cities which should be at\nthe distance i from the capital. It is guaranteed that the sum of all the\nvalues ai equals n - 1. Output If it is impossible to built roads which\nsatisfy all conditions, print -1. Otherwise, in the first line print one\ninteger n \u2014 the number of cities in Berland. In the each of the next n - 1\nline print two integers \u2014 the ids of cities that are connected by a road. Each\nroad should be printed exactly once. You can print the roads and the cities\nconnected by a road in any order. If there are multiple answers, print any of\nthem. Remember that the capital has id 1. Examples Input 7 3 3 2 3 1 Output 7\n1 3 2 1 2 6 2 4 7 4 3 5 Input 14 5 6 4 4 2 2 1 Output 14 3 1 1 4 11 6 1 2 10\n13 6 10 10 12 14 12 8 4 5 1 3 7 2 6 5 9 Input 3 1 1 2 Output -1\n\n",
        "cf_contest_id": 746,
        "cf_index": "G",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 3 3\r\n2 3 1\r\n",
                "7\r\n1 2\r\n1 3\r\n2 4\r\n3 5\r\n2 6\r\n4 7\r\n"
            ],
            [
                "14 5 6\r\n4 4 2 2 1\r\n",
                "14\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 6\r\n3 7\r\n4 8\r\n5 9\r\n6 10\r\n6 11\r\n10 12\r\n10 13\r\n12 14\r\n"
            ],
            [
                "3 1 1\r\n2\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "6 3 3\r\n1 2 2\r\n",
                "6\r\n1 2\r\n2 3\r\n2 4\r\n3 5\r\n3 6\r\n"
            ],
            [
                "11 6 4\r\n1 2 2 1 3 1\r\n",
                "11\r\n1 2\r\n2 3\r\n2 4\r\n3 5\r\n4 6\r\n5 7\r\n7 8\r\n7 9\r\n7 10\r\n8 11\r\n"
            ],
            [
                "21 10 9\r\n2 1 3 1 1 1 3 2 3 3\r\n",
                "21\r\n1 2\r\n1 3\r\n2 4\r\n4 5\r\n4 6\r\n4 7\r\n5 8\r\n8 9\r\n9 10\r\n10 11\r\n10 12\r\n10 13\r\n11 14\r\n12 15\r\n14 16\r\n15 17\r\n14 18\r\n16 19\r\n16 20\r\n16 21\r\n"
            ],
            [
                "51 16 31\r\n1 3 3 3 4 4 3 5 4 1 3 3 3 2 3 5\r\n",
                "51\r\n1 2\r\n2 3\r\n2 4\r\n2 5\r\n3 6\r\n4 7\r\n5 8\r\n6 9\r\n7 10\r\n8 11\r\n9 12\r\n9 13\r\n9 14\r\n9 15\r\n12 16\r\n12 17\r\n12 18\r\n12 19\r\n16 20\r\n16 21\r\n16 22\r\n20 23\r\n20 24\r\n20 25\r\n20 26\r\n20 27\r\n23 28\r\n23 29\r\n23 30\r\n23 31\r\n28 32\r\n32 33\r\n32 34\r\n32 35\r\n33 36\r\n33 37\r\n33 38\r\n36 39\r\n36 40\r\n36 41\r\n39 42\r\n39 43\r\n42 44\r\n42 45\r\n42 46\r\n44 47\r\n44 48\r\n44 49\r\n44 50\r\n44 51\r\n"
            ],
            [
                "200000 4 90823\r\n63010 23084 77424 36481\r\n",
                "-1\r\n"
            ],
            [
                "6390 29 1740\r\n407 261 213 375 118 127 276 322 353 166 120 308 178 261 270 275 157 26 36 159 20 272 152 316 213 237 167 372 232\r\n",
                "-1\r\n"
            ],
            [
                "2 1 1\r\n1\r\n",
                "2\r\n1 2\r\n"
            ],
            [
                "4 2 3\r\n1 2\r\n",
                "-1\r\n"
            ],
            [
                "17 5 11\r\n5 3 2 5 1\r\n",
                "17\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n2 7\r\n3 8\r\n2 9\r\n7 10\r\n7 11\r\n10 12\r\n10 13\r\n10 14\r\n10 15\r\n10 16\r\n12 17\r\n"
            ],
            [
                "16 4 10\r\n2 3 5 5\r\n",
                "16\r\n1 2\r\n1 3\r\n2 4\r\n3 5\r\n2 6\r\n4 7\r\n5 8\r\n4 9\r\n5 10\r\n4 11\r\n7 12\r\n7 13\r\n7 14\r\n7 15\r\n7 16\r\n"
            ],
            [
                "2 1 1\r\n1\r\n",
                "2\r\n1 2\r\n"
            ],
            [
                "3 2 2\r\n1 1\r\n",
                "-1\r\n"
            ],
            [
                "3 2 2\r\n1 1\r\n",
                "-1\r\n"
            ],
            [
                "4 2 3\r\n2 1\r\n",
                "-1\r\n"
            ],
            [
                "4 1 1\r\n3\r\n",
                "-1\r\n"
            ],
            [
                "4 3 1\r\n1 1 1\r\n",
                "4\r\n1 2\r\n2 3\r\n3 4\r\n"
            ],
            [
                "5 4 3\r\n1 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "5 4 3\r\n1 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "5 4 4\r\n1 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "5 4 4\r\n1 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "6 4 5\r\n1 1 1 2\r\n",
                "-1\r\n"
            ]
        ]
    }
]