[
    {
        "name": "Sources and Sinks",
        "description": "You are given an acyclic directed graph, consisting of \n    n\n vertices and\n\n    m\n edges. The graph contains no multiple edges and no self-loops. The\nvertex is called a source if it has no incoming edges. The vertex is called a\nsink if it has no outgoing edges. These definitions imply that some vertices\ncan be both source and sink. The number of sources in the given graph is equal\nto the number of sinks in it, and each of these numbers doesn't exceed\n\n    20\n. The following algorithm is applied to the graph: if the graph has no\nsources and sinks then quit; choose arbitrary source \n    s\n, arbitrary sink\n\n    t\n, add an edge from \n    t\n to \n    s\n to the graph and go to step\n\n    1\n (that operation pops \n    s\n out of sources and \n    t\n out of sinks).\nNote that \n    s\n and \n    t\n may be the same vertex, then a self-loop is\nadded. At the end you check if the graph becomes strongly connected (that is,\nany vertex is reachable from any other vertex). Your task is to check that the\ngraph becomes strongly connected no matter the choice of sources and sinks on\nthe second step of the algorithm. Input The first line contains two integers\n\n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 10^6\n) \u2014 the number of vertices\nand the number of edges in the graph, respectively. Each of the next \n    m\n\nlines contains two integers \n    v_i, u_i\n (\n    1 \n    \u2264 v_i, u_i \n    \u2264 n\n,\n\n    v_i \n     u_i\n) \u2014 the description of the \n    i\n-th edge of the original\ngraph. It is guaranteed that the number of sources and the number of sinks in\nthe graph are the same and they don't exceed \n    20\n. It is guaranteed that\nthe given graph contains no multiple edges. It is guaranteed that the graph\ncontains no cycles. Output Print \"YES\" if the graph becomes strongly connected\nno matter the choice of sources and sinks on the second step of the algorithm.\nOtherwise print \"NO\". Examples Input 3 1 1 2 Output NO Input 3 3 1 2 1 3 2 3\nOutput YES Input 4 4 1 2 1 3 4 2 4 3 Output YES\n\n",
        "cf_contest_id": 1036,
        "cf_index": "G",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force",
            "dfs and similar"
        ],
        "time_limit_seconds": 7.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 1\r\n1 2\r\n",
                "NO\r\n"
            ],
            [
                "3 3\r\n1 2\r\n1 3\r\n2 3\r\n",
                "YES\r\n"
            ],
            [
                "4 4\r\n1 2\r\n1 3\r\n4 2\r\n4 3\r\n",
                "YES\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 5\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n",
                "NO\r\n"
            ],
            [
                "10 6\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n4 10\r\n",
                "NO\r\n"
            ],
            [
                "10 7\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n1 8\r\n1 10\r\n",
                "NO\r\n"
            ],
            [
                "10 8\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n2 9\r\n2 6\r\n5 8\r\n",
                "NO\r\n"
            ],
            [
                "10 9\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n2 9\r\n4 6\r\n2 10\r\n2 8\r\n",
                "NO\r\n"
            ],
            [
                "10 10\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n5 6\r\n3 9\r\n4 10\r\n2 8\r\n1 8\r\n",
                "NO\r\n"
            ],
            [
                "10 11\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n4 10\r\n1 7\r\n3 6\r\n1 9\r\n3 7\r\n2 9\r\n",
                "NO\r\n"
            ],
            [
                "10 12\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n2 8\r\n3 10\r\n5 8\r\n1 8\r\n3 6\r\n3 9\r\n5 9\r\n",
                "NO\r\n"
            ],
            [
                "10 13\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n2 6\r\n1 8\r\n1 7\r\n4 7\r\n5 7\r\n3 10\r\n2 10\r\n5 9\r\n",
                "YES\r\n"
            ],
            [
                "10 14\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n5 9\r\n3 10\r\n3 9\r\n1 9\r\n2 8\r\n4 6\r\n4 7\r\n4 10\r\n3 6\r\n",
                "YES\r\n"
            ],
            [
                "10 15\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n4 8\r\n3 9\r\n2 9\r\n5 7\r\n5 8\r\n5 9\r\n2 10\r\n1 9\r\n1 8\r\n2 8\r\n",
                "NO\r\n"
            ],
            [
                "10 16\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n3 7\r\n4 10\r\n3 6\r\n4 7\r\n3 10\r\n5 7\r\n2 6\r\n5 8\r\n4 6\r\n5 9\r\n3 9\r\n",
                "NO\r\n"
            ],
            [
                "10 17\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n1 8\r\n5 6\r\n2 6\r\n4 8\r\n3 10\r\n3 9\r\n2 10\r\n2 8\r\n4 6\r\n3 6\r\n5 8\r\n5 7\r\n",
                "YES\r\n"
            ],
            [
                "10 18\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n5 8\r\n3 9\r\n4 8\r\n5 9\r\n1 10\r\n1 8\r\n2 6\r\n1 9\r\n2 8\r\n4 7\r\n3 6\r\n4 10\r\n4 6\r\n",
                "YES\r\n"
            ],
            [
                "10 19\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n2 8\r\n5 7\r\n2 6\r\n5 8\r\n5 9\r\n1 7\r\n3 7\r\n4 7\r\n4 10\r\n2 10\r\n3 9\r\n1 9\r\n1 8\r\n4 6\r\n",
                "YES\r\n"
            ],
            [
                "10 20\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n3 9\r\n2 10\r\n4 8\r\n5 9\r\n3 6\r\n1 8\r\n5 8\r\n5 7\r\n2 8\r\n2 6\r\n5 6\r\n1 9\r\n4 10\r\n1 7\r\n3 10\r\n",
                "YES\r\n"
            ],
            [
                "10 21\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n4 7\r\n2 9\r\n3 10\r\n1 7\r\n5 9\r\n4 6\r\n3 6\r\n4 8\r\n2 6\r\n5 8\r\n3 9\r\n1 8\r\n3 7\r\n1 9\r\n1 10\r\n5 6\r\n",
                "YES\r\n"
            ],
            [
                "10 22\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n5 9\r\n2 10\r\n5 6\r\n4 7\r\n4 6\r\n4 8\r\n4 10\r\n3 7\r\n3 9\r\n3 6\r\n2 9\r\n2 6\r\n5 8\r\n2 8\r\n1 7\r\n5 7\r\n1 10\r\n",
                "YES\r\n"
            ],
            [
                "10 23\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n4 6\r\n5 9\r\n2 8\r\n5 8\r\n2 6\r\n3 6\r\n1 7\r\n2 9\r\n5 7\r\n1 9\r\n4 7\r\n1 8\r\n3 9\r\n1 10\r\n5 6\r\n4 8\r\n3 7\r\n2 10\r\n",
                "YES\r\n"
            ],
            [
                "10 24\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n4 10\r\n3 7\r\n5 6\r\n1 9\r\n1 8\r\n3 10\r\n5 7\r\n2 9\r\n4 8\r\n3 9\r\n4 7\r\n2 6\r\n5 8\r\n2 10\r\n5 9\r\n1 7\r\n3 6\r\n2 8\r\n1 10\r\n",
                "YES\r\n"
            ],
            [
                "10 25\r\n1 6\r\n2 7\r\n3 8\r\n4 9\r\n5 10\r\n1 7\r\n3 10\r\n5 7\r\n4 7\r\n3 7\r\n2 10\r\n4 8\r\n4 6\r\n3 9\r\n3 6\r\n2 6\r\n1 9\r\n1 8\r\n5 6\r\n4 10\r\n5 9\r\n1 10\r\n2 8\r\n2 9\r\n5 8\r\n",
                "YES\r\n"
            ],
            [
                "40 20\r\n1 21\r\n2 22\r\n3 23\r\n4 24\r\n5 25\r\n6 26\r\n7 27\r\n8 28\r\n9 29\r\n10 30\r\n11 31\r\n12 32\r\n13 33\r\n14 34\r\n15 35\r\n16 36\r\n17 37\r\n18 38\r\n19 39\r\n20 40\r\n",
                "NO\r\n"
            ],
            [
                "40 40\r\n1 21\r\n2 22\r\n3 23\r\n4 24\r\n5 25\r\n6 26\r\n7 27\r\n8 28\r\n9 29\r\n10 30\r\n11 31\r\n12 32\r\n13 33\r\n14 34\r\n15 35\r\n16 36\r\n17 37\r\n18 38\r\n19 39\r\n20 40\r\n19 34\r\n17 39\r\n7 37\r\n7 35\r\n2 34\r\n9 38\r\n6 21\r\n5 27\r\n12 36\r\n15 23\r\n15 33\r\n3 40\r\n14 35\r\n13 32\r\n13 40\r\n2 27\r\n4 36\r\n18 27\r\n13 26\r\n13 22\r\n",
                "NO\r\n"
            ],
            [
                "40 60\r\n1 21\r\n2 22\r\n3 23\r\n4 24\r\n5 25\r\n6 26\r\n7 27\r\n8 28\r\n9 29\r\n10 30\r\n11 31\r\n12 32\r\n13 33\r\n14 34\r\n15 35\r\n16 36\r\n17 37\r\n18 38\r\n19 39\r\n20 40\r\n2 24\r\n11 32\r\n9 38\r\n17 33\r\n10 28\r\n12 39\r\n7 36\r\n16 23\r\n20 30\r\n15 31\r\n1 37\r\n9 22\r\n12 21\r\n15 24\r\n2 38\r\n6 22\r\n4 31\r\n11 37\r\n1 39\r\n5 31\r\n11 23\r\n19 37\r\n1 23\r\n16 28\r\n14 21\r\n7 34\r\n6 35\r\n1 31\r\n1 22\r\n18 31\r\n17 22\r\n20 34\r\n12 22\r\n13 28\r\n6 24\r\n15 25\r\n15 26\r\n6 40\r\n1 26\r\n12 26\r\n",
                "NO\r\n"
            ],
            [
                "2 1\r\n1 2\r\n",
                "YES\r\n"
            ],
            [
                "40 40\r\n1 21\r\n1 22\r\n2 22\r\n2 23\r\n3 23\r\n3 24\r\n4 24\r\n4 25\r\n5 25\r\n5 26\r\n6 26\r\n6 27\r\n7 27\r\n7 28\r\n8 28\r\n8 29\r\n9 29\r\n9 30\r\n10 30\r\n10 31\r\n11 31\r\n11 32\r\n12 32\r\n12 33\r\n13 33\r\n13 34\r\n14 34\r\n14 35\r\n15 35\r\n15 36\r\n16 36\r\n16 37\r\n17 37\r\n17 38\r\n18 38\r\n18 39\r\n19 39\r\n19 40\r\n20 40\r\n20 21\r\n",
                "YES\r\n"
            ],
            [
                "40 60\r\n1 21\r\n1 22\r\n1 23\r\n2 22\r\n2 23\r\n2 24\r\n3 23\r\n3 24\r\n3 25\r\n4 24\r\n4 25\r\n4 26\r\n5 25\r\n5 26\r\n5 27\r\n6 26\r\n6 27\r\n6 28\r\n7 27\r\n7 28\r\n7 29\r\n8 28\r\n8 29\r\n8 30\r\n9 29\r\n9 30\r\n9 31\r\n10 30\r\n10 31\r\n10 32\r\n11 31\r\n11 32\r\n11 33\r\n12 32\r\n12 33\r\n12 34\r\n13 33\r\n13 34\r\n13 35\r\n14 34\r\n14 35\r\n14 36\r\n15 35\r\n15 36\r\n15 37\r\n16 36\r\n16 37\r\n16 38\r\n17 37\r\n17 38\r\n17 39\r\n18 38\r\n18 39\r\n18 40\r\n19 39\r\n19 40\r\n19 21\r\n20 40\r\n20 21\r\n20 22\r\n",
                "YES\r\n"
            ],
            [
                "40 58\r\n1 21\r\n2 22\r\n2 23\r\n2 24\r\n3 23\r\n3 24\r\n3 25\r\n4 24\r\n4 25\r\n4 26\r\n5 25\r\n5 26\r\n5 27\r\n6 26\r\n6 27\r\n6 28\r\n7 27\r\n7 28\r\n7 29\r\n8 28\r\n8 29\r\n8 30\r\n9 29\r\n9 30\r\n9 31\r\n10 30\r\n10 31\r\n10 32\r\n11 31\r\n11 32\r\n11 33\r\n12 32\r\n12 33\r\n12 34\r\n13 33\r\n13 34\r\n13 35\r\n14 34\r\n14 35\r\n14 36\r\n15 35\r\n15 36\r\n15 37\r\n16 36\r\n16 37\r\n16 38\r\n17 37\r\n17 38\r\n17 39\r\n18 38\r\n18 39\r\n18 40\r\n19 39\r\n19 40\r\n19 21\r\n20 40\r\n20 21\r\n20 22\r\n",
                "NO\r\n"
            ]
        ]
    }
]