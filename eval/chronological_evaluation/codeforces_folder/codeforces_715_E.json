[
    {
        "name": "Complete the Permutations",
        "description": "ZS the Coder is given two permutations p and q of 1, 2, ..., n, but some of\ntheir elements are replaced with 0. The distance between two permutations p\nand q is defined as the minimum number of moves required to turn p into q. A\nmove consists of swapping exactly 2 elements of p. ZS the Coder wants to\ndetermine the number of ways to replace the zeros with positive integers from\nthe set 1, 2, ..., n such that p and q are permutations of 1, 2, ..., n\nand the distance between p and q is exactly k. ZS the Coder wants to find the\nanswer for all 0 \u2264 k \u2264 n - 1. Can you help him? Input The first line of the\ninput contains a single integer n (1 \u2264 n \u2264 250) \u2014 the number of elements in\nthe permutations. The second line contains n integers, p1, p2, ..., pn (0 \u2264 pi\n\u2264 n) \u2014 the permutation p. It is guaranteed that there is at least one way to\nreplace zeros such that p is a permutation of 1, 2, ..., n. The third line\ncontains n integers, q1, q2, ..., qn (0 \u2264 qi \u2264 n) \u2014 the permutation q. It is\nguaranteed that there is at least one way to replace zeros such that q is a\npermutation of 1, 2, ..., n. Output Print n integers, i-th of them should\ndenote the answer for k = i - 1. Since the answer may be quite large, and ZS\nthe Coder loves weird primes, print them modulo 998244353 = 2^23\u00b77\u00b717 + 1,\nwhich is a prime. Examples Input 3 1 0 0 0 2 0 Output 1 2 1 Input 4 1 0 0 3 0\n0 0 4 Output 0 2 6 4 Input 6 1 3 2 5 4 6 6 4 5 1 0 0 Output 0 0 0 0 1 1 Input\n4 1 2 3 4 2 3 4 1 Output 0 0 0 1 Note In the first sample case, there is the\nonly way to replace zeros so that it takes 0 swaps to convert p into q, namely\np = (1, 2, 3), q = (1, 2, 3). There are two ways to replace zeros so that it\ntakes 1 swap to turn p into q. One of these ways is p = (1, 2, 3), q = (3, 2,\n1), then swapping 1 and 3 from p transform it into q. The other way is p = (1,\n3, 2), q = (1, 2, 3). Swapping 2 and 3 works in this case. Finally, there is\none way to replace zeros so that it takes 2 swaps to turn p into q, namely p =\n(1, 3, 2), q = (3, 2, 1). Then, we can transform p into q like following: .\n\n",
        "cf_contest_id": 715,
        "cf_index": "E",
        "cf_rating": 3400,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "fft",
            "graphs",
            "math"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 0 0\r\n0 2 0\r\n",
                "1 2 1 "
            ],
            [
                "4\r\n1 0 0 3\r\n0 0 0 4\r\n",
                "0 2 6 4 "
            ],
            [
                "6\r\n1 3 2 5 4 6\r\n6 4 5 1 0 0\r\n",
                "0 0 0 0 1 1 "
            ],
            [
                "4\r\n1 2 3 4\r\n2 3 4 1\r\n",
                "0 0 0 1 "
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n0\r\n",
                "1 "
            ],
            [
                "6\r\n0 0 0 0 0 0\r\n0 0 0 0 0 0\r\n",
                "720 10800 61200 162000 197280 86400 "
            ],
            [
                "7\r\n0 0 0 3 0 0 0\r\n0 0 0 0 0 0 0\r\n",
                "720 15120 126000 529200 1169280 1270080 518400 "
            ],
            [
                "10\r\n1 2 0 0 0 10 9 6 0 0\r\n2 3 1 0 0 0 8 5 7 0\r\n",
                "0 0 0 0 6 78 390 930 1044 432 "
            ],
            [
                "1\r\n1\r\n1\r\n",
                "1 "
            ],
            [
                "1\r\n0\r\n0\r\n",
                "1 "
            ],
            [
                "8\r\n0 0 0 0 3 2 8 1\r\n1 2 8 3 0 0 0 0\r\n",
                "0 0 0 0 24 144 264 144 "
            ],
            [
                "8\r\n0 0 0 0 4 5 6 7\r\n1 2 8 3 0 0 0 0\r\n",
                "1 12 58 144 193 132 36 0 "
            ],
            [
                "8\r\n0 0 0 0 0 0 0 0\r\n7 6 3 2 5 4 1 8\r\n",
                "1 28 322 1960 6769 13132 13068 5040 "
            ],
            [
                "8\r\n1 2 3 0 0 0 0 0\r\n4 3 2 0 0 0 0 0\r\n",
                "0 0 120 1200 4200 6000 2880 0 "
            ],
            [
                "6\r\n3 4 5 2 6 1\r\n1 4 3 6 0 2\r\n",
                "0 0 0 0 1 0 "
            ]
        ]
    }
]