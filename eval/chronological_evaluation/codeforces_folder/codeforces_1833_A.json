[
    {
        "name": "Musical Puzzle",
        "description": "Vlad decided to compose a melody on his guitar. Let's represent the melody as\na sequence of notes corresponding to the characters 'a', 'b', 'c', 'd', 'e',\n'f', and 'g'. However, Vlad is not very experienced in playing the guitar and\ncan only record exactly two notes at a time. Vlad wants to obtain the melody\n\n    s\n, and to do this, he can merge the recorded melodies together. In this\ncase, the last sound of the first melody must match the first sound of the\nsecond melody. For example, if Vlad recorded the melodies \"ab\" and \"ba\", he\ncan merge them together and obtain the melody \"aba\", and then merge the result\nwith \"ab\" to get \"abab\". Help Vlad determine the minimum number of melodies\nconsisting of two notes that he needs to record in order to obtain the melody\n\n    s\n. Input The first line of input contains an integer \n    t\n (\n    1 \n    \u2264\n    t \n    \u2264 10^4\n) \u2014 the number of test cases. Following that are the\ndescriptions of the test cases. The first line of each test case contains an\ninteger \n    n\n (\n    2 \n    \u2264 n \n    \u2264 50\n) \u2014 the length of the melody \n    s\n.\nThe second line of each test case contains a string \n    s\n of length \n    n\n,\nconsisting of characters 'a', 'b', 'c', 'd', 'e', 'f', 'g'. Output Output\n\n    t\n integers, each representing the answer for the corresponding test\ncase. As the answer output minimum number of melodies consisting of two notes\nthat Vlad needs to record. Example Input 5 4 abab 7 abacaba 6 aaaaaa 7 abcdefg\n5 babdd Output 2 4 1 6 4 Note In the first sample, you need to record the\nmelodies \"ab\" and \"ba\", as described in the problem statement. In the second\nsample, you need to record the melodies \"ab\", \"ba\", \"ac\", and \"ca\". In the\nthird sample, the only necessary melody is \"aa\".\n\n",
        "cf_contest_id": 1833,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4\r\nabab\r\n7\r\nabacaba\r\n6\r\naaaaaa\r\n7\r\nabcdefg\r\n5\r\nbabdd\r\n",
                "2\r\n4\r\n1\r\n6\r\n4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n32\r\naaaaaaaaaadaaaaaaaaaaaaaacaaaaab\r\n",
                "6\r\n"
            ],
            [
                "1\r\n12\r\naaaaaaaaaaaa\r\n",
                "1\r\n"
            ],
            [
                "1\r\n13\r\naaaaaaaaaaaaa\r\n",
                "1\r\n"
            ]
        ]
    }
]