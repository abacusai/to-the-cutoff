[
    {
        "name": "Love Triangles",
        "description": "There are many anime that are about \"love triangles\": Alice loves Bob, and\nCharlie loves Bob as well, but Alice hates Charlie. You are thinking about an\nanime which has n characters. The characters are labeled from 1 to n. Every\npair of two characters can either mutually love each other or mutually hate\neach other (there is no neutral state). You hate love triangles (A-B are in\nlove and B-C are in love, but A-C hate each other), and you also hate it when\nnobody is in love. So, considering any three characters, you will be happy if\nexactly one pair is in love (A and B love each other, and C hates both A and\nB), or if all three pairs are in love (A loves B, B loves C, C loves A). You\nare given a list of m known relationships in the anime. You know for sure that\ncertain pairs love each other, and certain pairs hate each other. You're\nwondering how many ways you can fill in the remaining relationships so you are\nhappy with every triangle. Two ways are considered different if two characters\nare in love in one way but hate each other in the other. Print this count\nmodulo 1 000 000 007. Input The first line of input will contain two integers\nn, m (3 \u2264 n \u2264 100 000, 0 \u2264 m \u2264 100 000). The next m lines will contain the\ndescription of the known relationships. The i-th line will contain three\nintegers ai, bi, ci. If ci is 1, then ai and bi are in love, otherwise, they\nhate each other (1 \u2264 ai, bi \u2264 n, ai \u2260 bi, ). Each pair of people will be\ndescribed no more than once. Output Print a single integer equal to the number\nof ways to fill in the remaining pairs so that you are happy with every\ntriangle modulo 1 000 000 007. Examples Input 3 0 Output 4 Input 4 4 1 2 1 2 3\n1 3 4 0 4 1 0 Output 1 Input 4 4 1 2 1 2 3 1 3 4 0 4 1 1 Output 0 Note In the\nfirst sample, the four ways are to: Make everyone love each other Make 1 and 2\nlove each other, and 3 hate 1 and 2 (symmetrically, we get 3 ways from this).\nIn the second sample, the only possible solution is to make 1 and 3 love each\nother and 2 and 4 hate each other.\n\n",
        "cf_contest_id": 553,
        "cf_index": "C",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 0\r\n",
                "4\r\n"
            ],
            [
                "4 4\r\n1 2 1\r\n2 3 1\r\n3 4 0\r\n4 1 0\r\n",
                "1\r\n"
            ],
            [
                "4 4\r\n1 2 1\r\n2 3 1\r\n3 4 0\r\n4 1 1\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "100000 0\r\n",
                "303861760\r\n"
            ],
            [
                "100 3\r\n1 2 0\r\n2 3 0\r\n3 1 0\r\n",
                "0\r\n"
            ],
            [
                "9 2\r\n1 2 0\r\n2 3 0\r\n",
                "64\r\n"
            ],
            [
                "28567 13\r\n28079 24675 1\r\n18409 26720 1\r\n980 10815 1\r\n20794 16571 1\r\n7376 19861 1\r\n11146 706 1\r\n4255 16391 1\r\n27376 18263 1\r\n10019 28444 1\r\n6574 28053 1\r\n5036 16610 1\r\n3543 7122 1\r\n512 9554 1\r\n",
                "928433852\r\n"
            ],
            [
                "4 4\r\n1 2 0\r\n2 3 0\r\n2 4 0\r\n3 4 0\r\n",
                "0\r\n"
            ],
            [
                "4 3\r\n2 3 0\r\n3 4 0\r\n2 4 0\r\n",
                "0\r\n"
            ],
            [
                "6 6\r\n1 2 0\r\n2 3 1\r\n3 4 0\r\n4 5 1\r\n5 6 0\r\n6 1 1\r\n",
                "0\r\n"
            ],
            [
                "5 5\r\n1 2 0\r\n2 3 0\r\n3 4 0\r\n4 5 0\r\n1 5 0\r\n",
                "0\r\n"
            ]
        ]
    }
]