[
    {
        "name": "Flag",
        "description": "Innokenty works at a flea market and sells some random stuff rare items.\nRecently he found an old rectangular blanket. It turned out that the blanket\nis split in \n    n \n    \u00b7 m\n colored pieces that form a rectangle with\n\n    n\n rows and \n    m\n columns. The colored pieces attracted Innokenty's\nattention so he immediately came up with the following business plan. If he\ncuts out a subrectangle consisting of three colored stripes, he can sell it as\na flag of some country. Innokenty decided that a subrectangle is similar\nenough to a flag of some country if it consists of three stripes of equal\nheights placed one above another, where each stripe consists of cells of equal\ncolor. Of course, the color of the top stripe must be different from the color\nof the middle stripe; and the color of the middle stripe must be different\nfrom the color of the bottom stripe. Innokenty has not yet decided what part\nhe will cut out, but he is sure that the flag's boundaries should go along\ngrid lines. Also, Innokenty won't rotate the blanket. Please help Innokenty\nand count the number of different subrectangles Innokenty can cut out and sell\nas a flag. Two subrectangles located in different places but forming the same\nflag are still considered different. These subrectangles are flags. These\nsubrectangles are not flags. Input The first line contains two integers\n\n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 1\n     000\n) \u2014 the number of rows\nand the number of columns on the blanket. Each of the next \n    n\n lines\ncontains \n    m\n lowercase English letters from 'a' to 'z' and describes a row\nof the blanket. Equal letters correspond to equal colors, different letters\ncorrespond to different colors. Output In the only line print the number of\nsubrectangles which form valid flags. Examples Input 4 3 aaa bbb ccb ddd\nOutput 6 Input 6 1 a a b b c c Output 1 Note The selected subrectangles are\nflags in the first example.\n\n",
        "cf_contest_id": 1181,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "combinatorics",
            "dp",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4 3\r\naaa\r\nbbb\r\nccb\r\nddd\r\n",
                "6"
            ],
            [
                "6 1\r\na\r\na\r\nb\r\nb\r\nc\r\nc\r\n",
                "1"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\na\r\n",
                "0"
            ],
            [
                "10 10\r\naaaaarpppp\r\nbbbbsssssu\r\ncciiiiiiqq\r\nddmmgggggg\r\neeebbbbbbb\r\nfffffqoooo\r\ngxxxxrrrrr\r\nhhfuuuuuuu\r\niiillqqqqq\r\njjjjjppwww\r\n",
                "138"
            ],
            [
                "10 10\r\naaaaaaaaaa\r\nbbbbbbbbbb\r\ncccccccccc\r\ndddddddddd\r\neeeeeeeeee\r\nffffffffff\r\ngggggggggg\r\nhhhhhhhhhh\r\niiiiiiiiii\r\njjjjjjjjjj\r\n",
                "440"
            ],
            [
                "10 10\r\nitttrrrnnn\r\nbbbbpppkdv\r\nbbbbpppkzv\r\nbbbbpppkzv\r\nbbbbpppbbv\r\nippeerrsss\r\nippeerrsss\r\nibbeeeesss\r\niiieeeeeef\r\nllorrrrvzz\r\n",
                "14"
            ],
            [
                "9 8\r\nwmmmmrww\r\nwmmmmrww\r\nwxxxxgww\r\nggggxgww\r\nssssmcww\r\nxxxxzcww\r\nwkwwwkww\r\nwcccccww\r\nwwwwwwww\r\n",
                "45"
            ]
        ]
    }
]