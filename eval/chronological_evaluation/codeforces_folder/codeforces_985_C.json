[
    {
        "name": "Liebig's Barrels",
        "description": "You have m = n\u00b7k wooden staves. The i-th stave has length ai. You have to\nassemble n barrels consisting of k staves each, you can use any k staves to\nconstruct a barrel. Each stave must belong to exactly one barrel. Let volume\nvj of barrel j be equal to the length of the minimal stave in it. You want to\nassemble exactly n barrels with the maximal total sum of volumes. But you have\nto make them equal enough, so a difference between volumes of any pair of the\nresulting barrels must not exceed l, i.e. |vx - vy| \u2264 l for any 1 \u2264 x \u2264 n and\n1 \u2264 y \u2264 n. Print maximal total sum of volumes of equal enough barrels or 0 if\nit's impossible to satisfy the condition above. Input The first line contains\nthree space-separated integers n, k and l (1 \u2264 n, k \u2264 10^5, 1 \u2264 n\u00b7k \u2264 10^5, 0\n\u2264 l \u2264 10^9). The second line contains m = n\u00b7k space-separated integers a1, a2,\n..., am (1 \u2264 ai \u2264 10^9) \u2014 lengths of staves. Output Print single integer \u2014\nmaximal total sum of the volumes of barrels or 0 if it's impossible to\nconstruct exactly n barrels satisfying the condition |vx - vy| \u2264 l for any 1 \u2264\nx \u2264 n and 1 \u2264 y \u2264 n. Examples Input 4 2 1 2 2 1 2 3 2 2 3 Output 7 Input 2 1 0\n10 10 Output 20 Input 1 2 1 5 2 Output 2 Input 3 2 1 1 2 3 4 5 6 Output 0 Note\nIn the first example you can form the following barrels: [1, 2], [2, 2], [2,\n3], [2, 3]. In the second example you can form the following barrels: [10],\n[10]. In the third example you can form the following barrels: [2, 5]. In the\nfourth example difference between volumes of barrels in any partition is at\nleast 2 so it is impossible to make barrels equal enough.\n\n",
        "cf_contest_id": 985,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2 1\r\n2 2 1 2 3 2 2 3\r\n",
                "7\r\n"
            ],
            [
                "2 1 0\r\n10 10\r\n",
                "20\r\n"
            ],
            [
                "1 2 1\r\n5 2\r\n",
                "2\r\n"
            ],
            [
                "3 2 1\r\n1 2 3 4 5 6\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 3 189\r\n267 697 667 4 52 128 85 616 142 344 413 660 962 194 618 329 266 593 558 447 89 983 964 716 32 890 267 164 654 71\r\n",
                "0\r\n"
            ],
            [
                "10 3 453\r\n277 706 727 812 692 686 196 507 911 40 498 704 573 381 463 759 704 381 693 640 326 405 47 834 962 521 463 740 520 494\r\n",
                "2979\r\n"
            ],
            [
                "10 3 795\r\n398 962 417 307 760 534 536 450 421 280 608 111 687 726 941 903 630 900 555 403 795 122 814 188 234 976 679 539 525 104\r\n",
                "5045\r\n"
            ],
            [
                "6 2 29\r\n1 2 3 3 4 5 5 6 7 7 8 9\r\n",
                "28\r\n"
            ],
            [
                "2 1 2\r\n1 2\r\n",
                "3\r\n"
            ]
        ]
    }
]