[
    {
        "name": "Game with modulo",
        "description": "This is an interactive problem. Vasya and Petya are going to play the\nfollowing game: Petya has some positive integer number \n    a\n. After that\nVasya should guess this number using the following questions. He can say a\npair of non-negative integer numbers \n    (x, y)\n. Petya will answer him: \"x\",\nif \n    (x \n     a) \n    \u2265 (y \n     a)\n. \"y\", if \n    (x \n     a) < (y\n    \n     a)\n. We define \n    (x \n     a)\n as a remainder of division\n\n    x\n by \n    a\n. Vasya should guess the number \n    a\n using no more, than\n60 questions. It's guaranteed that Petya has a number, that satisfies the\ninequality \n    1 \n    \u2264 a \n    \u2264 10^9\n. Help Vasya playing this game and\nwrite a program, that will guess the number \n    a\n. Interaction Your program\nshould play several games. Before the start of any game your program should\nread the string: \"start\" (without quotes) \u2014 the start of the new game.\n\"mistake\" (without quotes) \u2014 in the previous game, you found the wrong answer.\nYour program should terminate after reading this string and it will get\nverdict \"Wrong answer\". \"end\" (without quotes) \u2014 all games finished. Your\nprogram should terminate after reading this string. After reading the string\n\"start\" (without quotes) the new game starts. At the beginning, your program\nshould ask several questions about pairs of non-negative integer numbers\n\n    (x, y)\n. You can only ask the numbers, that satisfy the inequalities \n    0\n    \n    \u2264 x, y \n    \u2264 2 \n    \u00b7 10^9\n. To ask a question print \"? x y\" (without\nquotes). As the answer, you should read one symbol: \"x\" (without quotes), if\n\n    (x \n     a) \n    \u2265 (y \n     a)\n. \"y\" (without quotes), if \n    (x\n    \n     a) < (y \n     a)\n. \"e\" (without quotes) \u2014 you asked more than\n\n    60\n questions. Your program should terminate after reading this string\nand it will get verdict \"Wrong answer\". After your program asked several\nquestions your program should print the answer in form \"! a\" (without quotes).\nYou should print the number \n    a\n satisfying the inequalities \n    1 \n    \u2264 a\n    \n    \u2264 10^9\n. It's guaranteed that Petya's number \n    a\n satisfied this\ncondition. After that, the current game will finish. We recall that your\nprogram can't ask more than \n    60\n questions during one game. If your\nprogram doesn't terminate after reading \"mistake\" (without quotes), \"end\"\n(without quotes) or \"e\" (without quotes), it can get any verdict, because it\nwill continue reading from closed input. Also, if your program prints answer\nor question in the incorrect format it can get any verdict, too. Be careful.\nDon't forget to flush the output after printing questions and answers. To\nflush the output, you can use: fflush(stdout) in C++. System.out.flush() in\nJava. stdout.flush() in Python. flush(output) in Pascal. See the documentation\nfor other languages. It's guaranteed that you should play at least \n    1\n and\nno more than \n    100\n games. Hacks: In hacks, you can use only one game. To\nhack a solution with Petya's number \n    a\n (\n    1 \n    \u2264 a \n    \u2264 10^9\n) in\nthe first line you should write a single number \n    1\n and in the second line\nyou should write a single number \n    a\n. Example Input start x x start x x y\nstart x x y y end Output ? 0 0 ? 10 1 ! 1 ? 0 0 ? 3 4 ? 2 5 ! 2 ? 2 4 ? 2 5 ?\n3 10 ? 9 1 ! 3 Note In the first test, you should play \n    3\n games with\nPetya's numbers \n    1\n, \n    2\n and \n    3\n. In the first game, Petya will\nanswer \"x\" (without quotes) to any question, because \n    (x \n     1) = 0\n\nfor any integer \n    x\n. In the second game, if you will ask pair \n    (0,\n    0)\n, the answer will be \"x\" (without quotes), because \n    (0 \n     2)\n    \n    \u2265 (0 \n     2)\n. But if you will ask pair \n    (2, 5)\n, the answer\nwill be \"y\" (without quotes), because \n    (2 \n     2) < (5 \n     2)\n,\nbecause \n    (2 \n     2) = 0\n and \n    (5 \n     2) = 1\n.\n\n",
        "cf_contest_id": 1103,
        "cf_index": "B",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1\r\n2\r\n3\r\n",
                "1\r\n2\r\n4\r\n"
            ]
        ],
        "private_cases": [
            [
                "100\r\n60\r\n76\r\n89\r\n77\r\n41\r\n81\r\n42\r\n49\r\n39\r\n37\r\n48\r\n56\r\n26\r\n38\r\n85\r\n50\r\n40\r\n13\r\n20\r\n24\r\n79\r\n21\r\n22\r\n9\r\n92\r\n11\r\n45\r\n58\r\n55\r\n62\r\n69\r\n82\r\n97\r\n67\r\n18\r\n32\r\n88\r\n84\r\n19\r\n96\r\n7\r\n36\r\n83\r\n95\r\n52\r\n98\r\n44\r\n53\r\n12\r\n75\r\n90\r\n87\r\n28\r\n3\r\n1\r\n6\r\n15\r\n65\r\n68\r\n94\r\n30\r\n99\r\n78\r\n63\r\n46\r\n86\r\n47\r\n73\r\n72\r\n66\r\n74\r\n80\r\n35\r\n70\r\n51\r\n33\r\n16\r\n93\r\n34\r\n10\r\n23\r\n71\r\n17\r\n5\r\n2\r\n64\r\n43\r\n100\r\n29\r\n8\r\n27\r\n31\r\n14\r\n25\r\n59\r\n54\r\n4\r\n57\r\n61\r\n91\r\n",
                "12\r\n14\r\n14\r\n14\r\n12\r\n14\r\n12\r\n12\r\n12\r\n12\r\n12\r\n12\r\n10\r\n12\r\n14\r\n12\r\n12\r\n8\r\n10\r\n10\r\n14\r\n10\r\n10\r\n8\r\n14\r\n8\r\n12\r\n12\r\n12\r\n12\r\n14\r\n14\r\n14\r\n14\r\n10\r\n10\r\n14\r\n14\r\n10\r\n14\r\n6\r\n12\r\n14\r\n14\r\n12\r\n14\r\n12\r\n12\r\n8\r\n14\r\n14\r\n14\r\n10\r\n4\r\n1\r\n6\r\n8\r\n14\r\n14\r\n14\r\n10\r\n14\r\n14\r\n12\r\n12\r\n14\r\n12\r\n14\r\n14\r\n14\r\n14\r\n14\r\n12\r\n14\r\n12\r\n12\r\n8\r\n14\r\n12\r\n8\r\n10\r\n14\r\n10\r\n6\r\n2\r\n12\r\n12\r\n14\r\n10\r\n6\r\n10\r\n10\r\n8\r\n10\r\n12\r\n12\r\n4\r\n12\r\n12\r\n14\r\n"
            ],
            [
                "1\r\n1000000000\r\n",
                "60\r\n"
            ],
            [
                "100\r\n5\r\n39\r\n106\r\n1676\r\n328\r\n100\r\n1255\r\n896\r\n110\r\n3\r\n2\r\n256\r\n423\r\n194\r\n13\r\n6\r\n87\r\n2\r\n25\r\n3\r\n105\r\n13\r\n22\r\n274\r\n1512\r\n136\r\n117\r\n38\r\n2\r\n32\r\n1399\r\n283\r\n476\r\n13\r\n864\r\n16\r\n213\r\n259\r\n4\r\n686\r\n6\r\n41\r\n12\r\n9\r\n68\r\n604\r\n1604\r\n108\r\n5\r\n115\r\n365\r\n358\r\n54\r\n561\r\n26\r\n114\r\n1319\r\n99\r\n52\r\n3\r\n23\r\n305\r\n1250\r\n929\r\n91\r\n820\r\n1021\r\n2\r\n26\r\n2\r\n65\r\n139\r\n204\r\n13\r\n12\r\n2\r\n5\r\n55\r\n22\r\n1526\r\n37\r\n3\r\n2\r\n122\r\n1782\r\n99\r\n81\r\n32\r\n3\r\n134\r\n1348\r\n47\r\n270\r\n5\r\n2\r\n13\r\n1401\r\n5\r\n113\r\n5\r\n",
                "6\r\n12\r\n14\r\n22\r\n18\r\n14\r\n22\r\n20\r\n14\r\n4\r\n2\r\n16\r\n18\r\n16\r\n8\r\n6\r\n14\r\n2\r\n10\r\n4\r\n14\r\n8\r\n10\r\n18\r\n22\r\n16\r\n14\r\n12\r\n2\r\n10\r\n22\r\n18\r\n18\r\n8\r\n20\r\n8\r\n16\r\n18\r\n4\r\n20\r\n6\r\n12\r\n8\r\n8\r\n14\r\n20\r\n22\r\n14\r\n6\r\n14\r\n18\r\n18\r\n12\r\n20\r\n10\r\n14\r\n22\r\n14\r\n12\r\n4\r\n10\r\n18\r\n22\r\n20\r\n14\r\n20\r\n20\r\n2\r\n10\r\n2\r\n14\r\n16\r\n16\r\n8\r\n8\r\n2\r\n6\r\n12\r\n10\r\n22\r\n12\r\n4\r\n2\r\n14\r\n22\r\n14\r\n14\r\n10\r\n4\r\n16\r\n22\r\n12\r\n18\r\n6\r\n2\r\n8\r\n22\r\n6\r\n14\r\n6\r\n"
            ],
            [
                "100\r\n144\r\n179\r\n239\r\n192\r\n164\r\n176\r\n212\r\n218\r\n166\r\n222\r\n203\r\n184\r\n143\r\n147\r\n220\r\n193\r\n230\r\n157\r\n201\r\n173\r\n185\r\n205\r\n196\r\n181\r\n187\r\n145\r\n215\r\n232\r\n175\r\n177\r\n224\r\n211\r\n219\r\n198\r\n213\r\n148\r\n227\r\n228\r\n194\r\n178\r\n141\r\n174\r\n156\r\n231\r\n200\r\n186\r\n226\r\n225\r\n210\r\n214\r\n199\r\n237\r\n221\r\n171\r\n209\r\n154\r\n152\r\n208\r\n150\r\n233\r\n159\r\n142\r\n190\r\n168\r\n188\r\n151\r\n204\r\n229\r\n172\r\n140\r\n158\r\n161\r\n180\r\n207\r\n217\r\n183\r\n170\r\n202\r\n146\r\n163\r\n162\r\n167\r\n206\r\n223\r\n238\r\n236\r\n189\r\n169\r\n165\r\n216\r\n153\r\n182\r\n195\r\n149\r\n191\r\n197\r\n234\r\n235\r\n160\r\n155\r\n",
                "16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n"
            ],
            [
                "100\r\n103\r\n130\r\n138\r\n126\r\n157\r\n164\r\n185\r\n120\r\n109\r\n137\r\n123\r\n147\r\n124\r\n178\r\n183\r\n155\r\n146\r\n169\r\n156\r\n153\r\n196\r\n152\r\n145\r\n110\r\n184\r\n168\r\n170\r\n177\r\n190\r\n128\r\n108\r\n182\r\n102\r\n101\r\n159\r\n150\r\n117\r\n106\r\n187\r\n194\r\n167\r\n151\r\n171\r\n195\r\n127\r\n115\r\n192\r\n114\r\n125\r\n165\r\n118\r\n113\r\n189\r\n199\r\n180\r\n139\r\n135\r\n181\r\n198\r\n116\r\n149\r\n162\r\n119\r\n132\r\n172\r\n176\r\n197\r\n143\r\n136\r\n193\r\n105\r\n154\r\n158\r\n121\r\n107\r\n175\r\n111\r\n122\r\n173\r\n160\r\n104\r\n163\r\n112\r\n191\r\n188\r\n131\r\n161\r\n148\r\n142\r\n129\r\n134\r\n140\r\n200\r\n166\r\n174\r\n179\r\n186\r\n141\r\n144\r\n133\r\n",
                "14\r\n16\r\n16\r\n14\r\n16\r\n16\r\n16\r\n14\r\n14\r\n16\r\n14\r\n16\r\n14\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n14\r\n16\r\n16\r\n16\r\n16\r\n16\r\n14\r\n14\r\n16\r\n14\r\n14\r\n16\r\n16\r\n14\r\n14\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n14\r\n14\r\n16\r\n14\r\n14\r\n16\r\n14\r\n14\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n14\r\n16\r\n16\r\n14\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n14\r\n16\r\n16\r\n14\r\n14\r\n16\r\n14\r\n14\r\n16\r\n16\r\n14\r\n16\r\n14\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n16\r\n"
            ],
            [
                "100\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n"
            ]
        ]
    }
]