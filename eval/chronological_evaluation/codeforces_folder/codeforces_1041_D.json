[
    {
        "name": "Glider",
        "description": "A plane is flying at a constant height of \n    h\n meters above the ground\nsurface. Let's consider that it is flying from the point \n    (-10^9, h)\n to\nthe point \n    (10^9, h)\n parallel with \n    Ox\n axis. A glider is inside the\nplane, ready to start his flight at any moment (for the sake of simplicity\nlet's consider that he may start only when the plane's coordinates are\nintegers). After jumping from the plane, he will fly in the same direction as\nthe plane, parallel to \n    Ox\n axis, covering a unit of distance every\nsecond. Naturally, he will also descend; thus his second coordinate will\ndecrease by one unit every second. There are ascending air flows on certain\nsegments, each such segment is characterized by two numbers \n    x_1\n and\n\n    x_2\n (\n    x_1 < x_2\n) representing its endpoints. No two segments share\nany common points. When the glider is inside one of such segments, he doesn't\ndescend, so his second coordinate stays the same each second. The glider still\nflies along \n    Ox\n axis, covering one unit of distance every second. If the\nglider jumps out at \n    1\n, he will stop at \n    10\n. Otherwise, if he jumps\nout at \n    2\n, he will stop at \n    12\n. Determine the maximum distance along\n\n    Ox\n axis from the point where the glider's flight starts to the point\nwhere his flight ends if the glider can choose any integer coordinate to jump\nfrom the plane and start his flight. After touching the ground the glider\nstops altogether, so he cannot glide through an ascending airflow segment if\nhis second coordinate is \n    0\n. Input The first line contains two integers\n\n    n\n and \n    h\n \n    (1 \n    \u2264 n \n    \u2264 2\n    \u00b710^5, 1 \n    \u2264 h \n    \u2264\n    10^9)\n \u2014 the number of ascending air flow segments and the altitude at\nwhich the plane is flying, respectively. Each of the next \n    n\n lines\ncontains two integers \n    x_i1\n and \n    x_i2\n \n    (1 \n    \u2264 x_i1 <\n    x_i2\n    \u2264 10^9)\n \u2014 the endpoints of the \n    i\n-th ascending air flow\nsegment. No two segments intersect, and they are given in ascending order.\nOutput Print one integer \u2014 the maximum distance along \n    Ox\n axis that the\nglider can fly from the point where he jumps off the plane to the point where\nhe lands if he can start his flight at any integer coordinate. Examples Input\n3 4 2 5 7 9 10 11 Output 10 Input 5 10 5 7 11 12 16 20 25 26 30 33 Output 18\nInput 1 1000000000 1 1000000000 Output 1999999999 Note In the first example if\nthe glider can jump out at \n    (2, 4)\n, then the landing point is \n    (12,\n    0)\n, so the distance is \n    12-2 = 10\n. In the second example the glider\ncan fly from \n    (16,10)\n to \n    (34,0)\n, and the distance is\n\n    34-16=18\n. In the third example the glider can fly from\n\n    (-100,1000000000)\n to \n    (1999999899,0)\n, so the distance is\n\n    1999999899-(-100)=1999999999\n.\n\n",
        "cf_contest_id": 1041,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 4\r\n2 5\r\n7 9\r\n10 11\r\n",
                "10"
            ],
            [
                "5 10\r\n5 7\r\n11 12\r\n16 20\r\n25 26\r\n30 33\r\n",
                "18"
            ],
            [
                "1 1000000000\r\n1 1000000000\r\n",
                "1999999999"
            ]
        ],
        "private_cases": [
            [
                "1 1000000000\r\n999999999 1000000000\r\n",
                "1000000001"
            ],
            [
                "5 10\r\n3 4\r\n10 11\r\n12 13\r\n14 16\r\n18 20\r\n",
                "16"
            ],
            [
                "5 10\r\n2 4\r\n5 6\r\n7 9\r\n16 18\r\n19 20\r\n",
                "17"
            ],
            [
                "5 10\r\n2 4\r\n7 9\r\n11 12\r\n16 17\r\n18 19\r\n",
                "16"
            ],
            [
                "5 10\r\n1 2\r\n3 4\r\n7 8\r\n9 13\r\n15 17\r\n",
                "19"
            ],
            [
                "5 10\r\n1 6\r\n7 8\r\n11 13\r\n14 17\r\n18 19\r\n",
                "22"
            ],
            [
                "5 10\r\n5 6\r\n7 11\r\n13 14\r\n16 17\r\n18 20\r\n",
                "19"
            ],
            [
                "5 10\r\n2 4\r\n7 11\r\n13 15\r\n16 17\r\n19 20\r\n",
                "20"
            ],
            [
                "5 10\r\n2 4\r\n7 8\r\n11 14\r\n15 18\r\n19 20\r\n",
                "20"
            ],
            [
                "5 10\r\n2 5\r\n6 8\r\n9 10\r\n12 14\r\n18 19\r\n",
                "19"
            ],
            [
                "5 10\r\n2 3\r\n4 5\r\n6 7\r\n10 14\r\n16 20\r\n",
                "21"
            ],
            [
                "5 10\r\n4 5\r\n6 8\r\n9 10\r\n11 13\r\n16 17\r\n",
                "17"
            ],
            [
                "5 10\r\n3 5\r\n6 10\r\n12 13\r\n15 16\r\n19 20\r\n",
                "19"
            ],
            [
                "5 10\r\n3 4\r\n5 7\r\n8 11\r\n13 14\r\n16 17\r\n",
                "18"
            ],
            [
                "5 10\r\n2 3\r\n4 5\r\n8 11\r\n14 18\r\n19 20\r\n",
                "20"
            ],
            [
                "5 10\r\n4 5\r\n6 8\r\n11 14\r\n15 16\r\n18 20\r\n",
                "19"
            ],
            [
                "5 10\r\n2 4\r\n8 9\r\n10 12\r\n13 14\r\n15 19\r\n",
                "20"
            ],
            [
                "5 10\r\n1 3\r\n6 7\r\n8 11\r\n12 14\r\n15 19\r\n",
                "22"
            ],
            [
                "5 10\r\n1 5\r\n9 11\r\n13 14\r\n16 17\r\n18 19\r\n",
                "19"
            ],
            [
                "5 10\r\n1 3\r\n5 9\r\n11 13\r\n14 15\r\n18 20\r\n",
                "21"
            ],
            [
                "5 10\r\n2 4\r\n5 6\r\n8 12\r\n13 16\r\n17 19\r\n",
                "22"
            ],
            [
                "2 1000000000\r\n226784468 315989706\r\n496707105 621587047\r\n",
                "1214085180"
            ],
            [
                "2 1000000000\r\n227369287 404867892\r\n744314358 920400305\r\n",
                "1353584552"
            ],
            [
                "2 1000000000\r\n317863203 547966061\r\n582951316 659405050\r\n",
                "1306556592"
            ],
            [
                "2 1000000000\r\n186379343 253185604\r\n466067444 573595538\r\n",
                "1174334355"
            ],
            [
                "2 1000000000\r\n304257720 349183572\r\n464960891 551998862\r\n",
                "1131963823"
            ],
            [
                "2 1000000000\r\n291003607 333477032\r\n475111390 822234292\r\n",
                "1389596327"
            ],
            [
                "2 1000000000\r\n205773571 705350420\r\n884784161 907025876\r\n",
                "1521818564"
            ],
            [
                "2 1000000000\r\n231403049 328821611\r\n335350528 883433844\r\n",
                "1645501878"
            ],
            [
                "2 1000000000\r\n61517268 203866669\r\n627634868 962065230\r\n",
                "1476779763"
            ],
            [
                "2 1000000000\r\n51849859 200853213\r\n912517537 986564647\r\n",
                "1223050464"
            ],
            [
                "1 1000000000\r\n1 2\r\n",
                "1000000001"
            ],
            [
                "2 3\r\n1 2\r\n3 4\r\n",
                "5"
            ]
        ]
    }
]