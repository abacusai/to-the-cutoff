[
    {
        "name": "Game of the Year",
        "description": "Monocarp and Polycarp are playing a computer game. This game features \n    n\n\nbosses for the playing to kill, numbered from \n    1\n to \n    n\n. They will\nfight each boss the following way: Monocarp makes \n    k\n attempts to kill the\nboss; Polycarp makes \n    k\n attempts to kill the boss; Monocarp makes \n    k\n\nattempts to kill the boss; Polycarp makes \n    k\n attempts to kill the boss;\n... Monocarp kills the \n    i\n-th boss on his \n    a_i\n-th attempt. Polycarp\nkills the \n    i\n-th boss on his \n    b_i\n-th attempt. After one of them kills\nthe \n    i\n-th boss, they move on to the \n    (i+1)\n-st boss. The attempt\ncounters reset for both of them. Once one of them kills the \n    n\n-th boss,\nthe game ends. Find all values of \n    k\n from \n    1\n to \n    n\n such that\nMonocarp kills all bosses. Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of testcases. The first line\nof each testcase contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the number of bosses. The second line contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014 the index\nof attempt Monocarp kills each boss on. The third line contains \n    n\n\nintegers \n    b_1, b_2, \n    \u2026, b_n\n (\n    1 \n    \u2264 b_i \n    \u2264 n\n) \u2014 the index\nof attempt Polycarp kills each boss on. The sum of \n    n\n over all testcases\ndoesn't exceed \n    2 \n    \u00b7 10^5\n. Output For each testcase, print two\nlines. The first line should contain a single integer \n    \ud835\udc50\ud835\udc5b\ud835\udc61\n \u2014\nthe number of values of \n    k\n from \n    1\n to \n    n\n such that Monocarp\nkills all bosses. The second line should contain \n    \ud835\udc50\ud835\udc5b\ud835\udc61\n distinct\nintegers \u2014 the values of \n    k\n themselves. Example Input 3 3 1 1 1 2 3 1 1 1\n1 4 1 4 3 2 3 3 4 1 Output 3 1 2 3 1 1 2 2 4 Note Consider the last testcase\nof the example. Let \n    k = 1\n. First, Monocarp makes one attempt to kill the\nfirst boss. It's successful, since \n    a_1 = 1\n. Then, Monocarp makes one\nattempt to kill the second boss. It's unsuccessful, since \n    a_2 > 1\n. So,\nPolycarp makes an attempt then. It's also unsuccessful, since \n    b_2 > 1\n.\nThen, Monocarp makes another attempt. It's still unsuccessful, since \n    a_2 >\n    2\n. This goes on until Polycarp finally kills the boss on his third attempt.\nMonocarp didn't kill this boss, thus, \n    k = 1\n isn't the answer. Let \n    k =\n    2\n. Monocarp still kills the first boss on his first attempt. Then, he makes\ntwo unsuccessful attempts for the second boss. Then, Polycarp makes two\nunsuccessful attempts. Then, Monocarp makes two more attempts and kills the\nboss on his fourth attempt. The third boss is similar. First, two unsuccessful\nattempts by Monocarp. Then, two unsuccessful attempts by Polycarp. Then,\nMonocarp has two more attempts, but even his first one is successful, since\n\n    a_3 = 3\n. The fourth boss is also killed by Monocarp. Thus, \n    k = 2\n\nis the answer.\n\n",
        "cf_contest_id": 1783,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n1 1 1\r\n2 3 1\r\n1\r\n1\r\n1\r\n4\r\n1 4 3 2\r\n3 3 4 1\r\n",
                "3\r\n1 2 3 \r\n1\r\n1 \r\n2\r\n2 4 \r\n"
            ]
        ],
        "private_cases": []
    }
]