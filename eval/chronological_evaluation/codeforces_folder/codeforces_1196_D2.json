[
    {
        "name": "RGB Substring (hard version)",
        "description": "The only difference between easy and hard versions is the size of the input.\nYou are given a string \n    s\n consisting of \n    n\n characters, each\ncharacter is 'R', 'G' or 'B'. You are also given an integer \n    k\n. Your task\nis to change the minimum number of characters in the initial string \n    s\n so\nthat after the changes there will be a string of length \n    k\n that is a\nsubstring of \n    s\n, and is also a substring of the infinite string\n\"RGBRGBRGB ...\". A string \n    a\n is a substring of string \n    b\n if there\nexists a positive integer \n    i\n such that \n    a_1 = b_i\n, \n    a_2 = b_i +\n    1\n, \n    a_3 = b_i + 2\n, ..., \n    a_|a| = b_i + |a| - 1\n. For\nexample, strings \"GBRG\", \"B\", \"BR\" are substrings of the infinite string\n\"RGBRGBRGB ...\" while \"GR\", \"RGR\" and \"GGG\" are not. You have to answer\n\n    q\n independent queries. Input The first line of the input contains one\ninteger \n    q\n (\n    1 \n    \u2264 q \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of\nqueries. Then \n    q\n queries follow. The first line of the query contains two\nintegers \n    n\n and \n    k\n (\n    1 \n    \u2264 k \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014\nthe length of the string \n    s\n and the length of the substring. The second\nline of the query contains a string \n    s\n consisting of \n    n\n characters\n'R', 'G' and 'B'. It is guaranteed that the sum of \n    n\n over all queries\ndoes not exceed \n    2 \n    \u00b7 10^5\n (\n    \u2211 n \n    \u2264 2 \n    \u00b7 10^5\n).\nOutput For each query print one integer \u2014 the minimum number of characters you\nneed to change in the initial string \n    s\n so that after changing there will\nbe a substring of length \n    k\n in \n    s\n that is also a substring of the\ninfinite string \"RGBRGBRGB ...\". Example Input 3 5 2 BGGGG 5 3 RBRGR 5 5 BBBRR\nOutput 1 0 3 Note In the first example, you can change the first character to\n'R' and obtain the substring \"RG\", or change the second character to 'R' and\nobtain \"BR\", or change the third, fourth or fifth character to 'B' and obtain\n\"GB\". In the second example, the substring is \"BRG\".\n\n",
        "cf_contest_id": 1196,
        "cf_index": "D2",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "implementation",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n5 2\r\nBGGGG\r\n5 3\r\nRBRGR\r\n5 5\r\nBBBRR\r\n",
                "1\r\n0\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]