[
    {
        "name": "0-1-Tree",
        "description": "You are given a tree (an undirected connected acyclic graph) consisting of\n\n    n\n vertices and \n    n - 1\n edges. A number is written on each edge, each\nnumber is either \n    0\n (let's call such edges \n    0\n-edges) or \n    1\n\n(those are \n    1\n-edges). Let's call an ordered pair of vertices \n    (x, y)\n\n(\n    x \n     y\n) valid if, while traversing the simple path from \n    x\n to\n\n    y\n, we never go through a \n    0\n-edge after going through a\n\n    1\n-edge. Your task is to calculate the number of valid pairs in the tree.\nInput The first line contains one integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264\n    200000\n) \u2014 the number of vertices in the tree. Then \n    n - 1\n lines\nfollow, each denoting an edge of the tree. Each edge is represented by three\nintegers \n    x_i\n, \n    y_i\n and \n    c_i\n (\n    1 \n    \u2264 x_i, y_i \n    \u2264 n\n,\n\n    0 \n    \u2264 c_i \n    \u2264 1\n, \n    x_i \n     y_i\n) \u2014 the vertices connected by\nthis edge and the number written on it, respectively. It is guaranteed that\nthe given edges form a tree. Output Print one integer \u2014 the number of valid\npairs of vertices. Example Input 7 2 1 1 3 2 0 4 2 1 5 2 0 6 7 1 7 2 1 Output\n34 Note The picture corresponding to the first example:\n\n",
        "cf_contest_id": 1156,
        "cf_index": "D",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "divide and conquer",
            "dp",
            "dsu",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n2 1 1\r\n3 2 0\r\n4 2 1\r\n5 2 0\r\n6 7 1\r\n7 2 1\r\n",
                "34\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 2 1\r\n",
                "2\r\n"
            ],
            [
                "2\r\n1 2 0\r\n",
                "2\r\n"
            ]
        ]
    }
]