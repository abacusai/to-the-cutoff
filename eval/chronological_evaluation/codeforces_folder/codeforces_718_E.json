[
    {
        "name": "Matvey's Birthday",
        "description": "Today is Matvey's birthday. He never knows what to ask as a present so friends\ngave him a string s of length n. This string consists of only first eight\nEnglish letters: 'a', 'b', ..., 'h'. First question that comes to mind is: who\nmight ever need some string? Matvey is a special boy so he instantly found\nwhat to do with this string. He used it to build an undirected graph where\nvertices correspond to position in the string and there is an edge between\ndistinct positions a and b (1 \u2264 a, b \u2264 n) if at least one of the following\nconditions hold: a and b are neighbouring, i.e. |a - b| = 1. Positions a and b\ncontain equal characters, i.e. sa = sb. Then Matvey decided to find the\ndiameter of this graph. Diameter is a maximum distance (length of the shortest\npath) among all pairs of vertices. Also, Matvey wants to find the number of\npairs of vertices such that the distance between them is equal to the diameter\nof the graph. As he is very cool and experienced programmer he managed to\nsolve this problem very fast. Will you do the same? Input The first line of\nthe input contains a single integer n (2 \u2264 n \u2264 100 000) \u2014 the length of the\nstring. The second line contains the string s itself. It's guaranteed that s\nconsists of only first eight letters of English alphabet. Output Print two\nintegers \u2014 the diameter of the graph and the number of pairs of positions with\nthe distance equal to the diameter. Examples Input 3 abc Output 2 1 Input 7\naaabaaa Output 2 4 Note Consider the second sample. The maximum distance is 2.\nIt's obtained for pairs (1, 4), (2, 4), (4, 6) and (4, 7).\n\n",
        "cf_contest_id": 718,
        "cf_index": "E",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\nabc\r\n",
                "2 1"
            ],
            [
                "7\r\naaabaaa\r\n",
                "2 4"
            ]
        ],
        "private_cases": [
            [
                "8\r\nabaaacac\r\n",
                "3 2"
            ],
            [
                "9\r\ncdaccaadc\r\n",
                "3 1"
            ],
            [
                "7\r\naaaaaaa\r\n",
                "1 21"
            ],
            [
                "95\r\ncfaafabfcfcccebdbfcdefdfedbaccdfbebedbdccffbccceebbcefcdebeedcfbfbceabdffaebeccfbfdceacecbefebb\r\n",
                "4 19"
            ],
            [
                "59\r\needecdbacbcdhhaggefgfbcagcbbafggdhcdbfhcgbehhhcfcffcacfchgh\r\n",
                "4 60"
            ],
            [
                "15\r\nefddbbggghaaccc\r\n",
                "12 2"
            ],
            [
                "61\r\nfaaabceffdbbfcdbdecfefbfbbcbbedcdccabcebcefccefcbfdffbdffabaf\r\n",
                "4 36"
            ],
            [
                "8\r\nabcdefgh\r\n",
                "7 1"
            ],
            [
                "16\r\naabbccddeeffgghh\r\n",
                "15 1"
            ],
            [
                "32\r\naabbccddeeffgghhhhggffeeddccbbaa\r\n",
                "15 4"
            ],
            [
                "14\r\naacbbbbbcdefgh\r\n",
                "8 1"
            ],
            [
                "8\r\nhgadbecf\r\n",
                "7 1"
            ],
            [
                "66\r\nbbbbbaabbaaaabbbbbbbbbbbaaaaaabbaaaabbbbbaabbbbbbbbbbaaaaaaaaabbba\r\n",
                "3 375"
            ],
            [
                "98\r\nbaaabbaaababbbbaababbabaaabababbaaaabbaabaabababaaabaabbabbaabbabbaabaaaabbbaaabbbaababbaabbbbbaba\r\n",
                "3 63"
            ],
            [
                "2\r\ncc\r\n",
                "1 1"
            ],
            [
                "2\r\nea\r\n",
                "1 1"
            ],
            [
                "10\r\nffffffffff\r\n",
                "1 45"
            ]
        ]
    }
]