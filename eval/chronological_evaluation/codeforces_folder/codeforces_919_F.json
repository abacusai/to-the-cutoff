[
    {
        "name": "A Game With Numbers",
        "description": "Imagine that Alice is playing a card game with her friend Bob. They both have\nexactly \n    8\n cards and there is an integer on each card, ranging from\n\n    0\n to \n    4\n. In each round, Alice or Bob in turns choose two cards from\ndifferent players, let them be \n    a\n and \n    b\n, where \n    a\n is the\nnumber on the player's card, and \n    b\n is the number on the opponent's card.\nIt is necessary that \n    a \n    \u00b7 b \n     0\n. Then they calculate \n    c = (a\n    + b) \n     5\n and replace the number \n    a\n with \n    c\n. The player who\nends up with numbers on all \n    8\n cards being \n    0\n, wins. Now Alice wants\nto know who wins in some situations. She will give you her cards' numbers,\nBob's cards' numbers and the person playing the first round. Your task is to\ndetermine who wins if both of them choose the best operation in their rounds.\nInput The first line contains one positive integer \n    T\n (\n    1 \n    \u2264 T\n    \n    \u2264 100\n     000\n), denoting the number of situations you need to consider.\nThe following lines describe those \n    T\n situations. For each situation: The\nfirst line contains a non-negative integer \n    f\n (\n    0 \n    \u2264 f \n    \u2264\n    1\n), where \n    f = 0\n means that Alice plays first and \n    f = 1\n means\nBob plays first. The second line contains \n    8\n non-negative integers\n\n    a_1, a_2, \n    \u2026, a_8\n (\n    0 \n    \u2264 a_i \n    \u2264 4\n), describing\nAlice's cards. The third line contains \n    8\n non-negative integers \n    b_1,\n    b_2, \n    \u2026, b_8\n (\n    0 \n    \u2264 b_i \n    \u2264 4\n), describing Bob's cards.\nWe guarantee that if \n    f=0\n, we have \n    \u2211_i=1^8a_i \n     0\n.\nAlso when \n    f=1\n, \n    \u2211_i=1^8b_i \n     0\n holds. Output Output\n\n    T\n lines. For each situation, determine who wins. Output \"Alice\" (without\nquotes) if Alice wins. \"Bob\" (without quotes) if Bob wins. \"Deal\" (without\nquotes) if it gets into a deal, i.e. no one wins. Example Input 4 1 0 0 0 0 0\n0 0 0 1 2 3 4 1 2 3 4 1 0 0 0 1 0 0 0 0 0 0 0 0 4 0 0 0 0 1 0 0 0 0 0 0 0 0 0\n0 4 0 0 2 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 Output Alice Bob Alice Deal Note\nIn the first situation, Alice has all her numbers \n    0\n. So she wins\nimmediately. In the second situation, Bob picks the numbers \n    4\n and\n\n    1\n. Because we have \n    (4 + 1) \n     5 = 0\n, Bob wins after this\noperation. In the third situation, Alice picks the numbers \n    1\n and\n\n    4\n. She wins after this operation. In the fourth situation, we can prove\nthat it falls into a loop.\n\n",
        "cf_contest_id": 919,
        "cf_index": "F",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n1\r\n0 0 0 0 0 0 0 0\r\n1 2 3 4 1 2 3 4\r\n1\r\n0 0 0 1 0 0 0 0\r\n0 0 0 0 4 0 0 0\r\n0\r\n1 0 0 0 0 0 0 0\r\n0 0 0 4 0 0 2 0\r\n1\r\n1 1 1 1 1 1 1 1\r\n1 1 1 1 1 1 1 1\r\n",
                "Alice\r\nBob\r\nAlice\r\nDeal\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0\r\n0 2 2 0 1 2 1 2\r\n1 2 4 3 2 1 1 0\r\n",
                "Alice\r\n"
            ]
        ]
    }
]