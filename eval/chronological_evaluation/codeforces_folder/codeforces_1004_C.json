[
    {
        "name": "Sonya and Robots",
        "description": "Since Sonya is interested in robotics too, she decided to construct robots\nthat will read and recognize numbers. Sonya has drawn \n    n\n numbers in a\nrow, \n    a_i\n is located in the \n    i\n-th position. She also has put a robot\nat each end of the row (to the left of the first number and to the right of\nthe last number). Sonya will give a number to each robot (they can be either\nsame or different) and run them. When a robot is running, it is moving toward\nto another robot, reading numbers in the row. When a robot is reading a number\nthat is equal to the number that was given to that robot, it will turn off and\nstay in the same position. Sonya does not want robots to break, so she will\ngive such numbers that robots will stop before they meet. That is, the girl\nwants them to stop at different positions so that the first robot is to the\nleft of the second one. For example, if the numbers \n    [1, 5, 4, 1, 3]\n are\nwritten, and Sonya gives the number \n    1\n to the first robot and the number\n\n    4\n to the second one, the first robot will stop in the \n    1\n-st\nposition while the second one in the \n    3\n-rd position. In that case, robots\nwill not meet each other. As a result, robots will not be broken. But if Sonya\ngives the number \n    4\n to the first robot and the number \n    5\n to the\nsecond one, they will meet since the first robot will stop in the \n    3\n-rd\nposition while the second one is in the \n    2\n-nd position. Sonya understands\nthat it does not make sense to give a number that is not written in the row\nbecause a robot will not find this number and will meet the other robot. Sonya\nis now interested in finding the number of different pairs that she can give\nto robots so that they will not meet. In other words, she wants to know the\nnumber of pairs (\n    p\n, \n    q\n), where she will give \n    p\n to the first\nrobot and \n    q\n to the second one. Pairs (\n    p_i\n, \n    q_i\n) and\n(\n    p_j\n, \n    q_j\n) are different if \n    p_i\n    \u2260 p_j\n or \n    q_i\n    \u2260\n    q_j\n. Unfortunately, Sonya is busy fixing robots that broke after a failed\nlaunch. That is why she is asking you to find the number of pairs that she can\ngive to robots so that they will not meet. Input The first line contains a\nsingle integer \n    n\n (\n    1\n    \u2264 n\n    \u2264 10^5\n) \u2014 the number of numbers in\na row. The second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n\n(\n    1\n    \u2264 a_i\n    \u2264 10^5\n) \u2014 the numbers in a row. Output Print one number\n\u2014 the number of possible pairs that Sonya can give to robots so that they will\nnot meet. Examples Input 5 1 5 4 1 3 Output 9 Input 7 1 2 1 1 1 3 2 Output 7\nNote In the first example, Sonya can give pairs (\n    1\n, \n    1\n), (\n    1\n,\n\n    3\n), (\n    1\n, \n    4\n), (\n    1\n, \n    5\n), (\n    4\n, \n    1\n),\n(\n    4\n, \n    3\n), (\n    5\n, \n    1\n), (\n    5\n, \n    3\n), and (\n    5\n,\n\n    4\n). In the second example, Sonya can give pairs (\n    1\n, \n    1\n),\n(\n    1\n, \n    2\n), (\n    1\n, \n    3\n), (\n    2\n, \n    1\n), (\n    2\n,\n\n    2\n), (\n    2\n, \n    3\n), and (\n    3\n, \n    2\n).\n\n",
        "cf_contest_id": 1004,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 5 4 1 3\r\n",
                "9\r\n"
            ],
            [
                "7\r\n1 2 1 1 1 3 2\r\n",
                "7\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n2 2 4 4 3 1 1 2 3 2\r\n",
                "14\r\n"
            ],
            [
                "15\r\n1 2 2 1 2 4 2 1 1 6 6 4 2 5 4\r\n",
                "20\r\n"
            ],
            [
                "1\r\n1\r\n",
                "0\r\n"
            ]
        ]
    }
]