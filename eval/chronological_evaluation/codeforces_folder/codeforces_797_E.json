[
    {
        "name": "Array Queries",
        "description": "a is an array of n positive integers, all of which are not greater than n. You\nhave to process q queries to this array. Each query is represented by two\nnumbers p and k. Several operations are performed in each query; each\noperation changes p to p + ap + k. There operations are applied until p\nbecomes greater than n. The answer to the query is the number of performed\noperations. Input The first line contains one integer n (1 \u2264 n \u2264 100000). The\nsecond line contains n integers \u2014 elements of a (1 \u2264 ai \u2264 n for each i from 1\nto n). The third line containts one integer q (1 \u2264 q \u2264 100000). Then q lines\nfollow. Each line contains the values of p and k for corresponding query (1 \u2264\np, k \u2264 n). Output Print q integers, ith integer must be equal to the answer to\nith query. Example Input 3 1 1 1 3 1 1 2 1 3 1 Output 2 1 1 Note Consider\nfirst example: In first query after first operation p = 3, after second\noperation p = 5. In next two queries p is greater than n after the first\noperation.\n\n",
        "cf_contest_id": 797,
        "cf_index": "E",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "dp"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 1 1\r\n3\r\n1 1\r\n2 1\r\n3 1\r\n",
                "2\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n3 5 4 3 7 10 6 7 2 3\r\n10\r\n4 5\r\n2 10\r\n4 6\r\n9 9\r\n9 2\r\n5 1\r\n6 4\r\n1 1\r\n5 6\r\n6 4\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n2\r\n1\r\n1\r\n"
            ],
            [
                "50\r\n6 2 5 6 10 2 5 8 9 2 9 5 10 4 3 6 10 6 1 1 3 7 2 1 7 8 5 9 6 2 7 6 1 7 2 10 10 2 4 2 8 4 3 10 7 1 7 8 6 3\r\n50\r\n23 8\r\n12 8\r\n3 3\r\n46 3\r\n21 6\r\n7 4\r\n26 4\r\n12 1\r\n25 4\r\n18 7\r\n29 8\r\n27 5\r\n47 1\r\n50 2\r\n46 7\r\n13 6\r\n44 8\r\n12 2\r\n18 3\r\n35 10\r\n38 1\r\n7 10\r\n4 2\r\n22 8\r\n36 3\r\n25 2\r\n47 3\r\n33 5\r\n10 5\r\n12 9\r\n7 4\r\n26 4\r\n19 4\r\n3 8\r\n12 3\r\n35 8\r\n31 4\r\n25 5\r\n3 5\r\n46 10\r\n37 6\r\n8 9\r\n20 5\r\n36 1\r\n41 9\r\n6 7\r\n40 5\r\n24 4\r\n41 10\r\n14 8\r\n",
                "3\r\n4\r\n6\r\n2\r\n4\r\n5\r\n3\r\n8\r\n3\r\n3\r\n2\r\n2\r\n1\r\n1\r\n1\r\n3\r\n1\r\n6\r\n5\r\n2\r\n3\r\n3\r\n7\r\n2\r\n2\r\n4\r\n1\r\n3\r\n4\r\n3\r\n5\r\n3\r\n5\r\n5\r\n6\r\n2\r\n3\r\n2\r\n4\r\n1\r\n1\r\n3\r\n4\r\n2\r\n1\r\n5\r\n2\r\n4\r\n1\r\n3\r\n"
            ],
            [
                "50\r\n49 21 50 31 3 19 10 40 20 5 47 12 12 30 5 4 5 2 11 23 5 39 3 30 19 3 23 40 4 14 39 50 45 14 33 37 1 15 43 30 45 23 32 3 9 17 9 5 14 12\r\n50\r\n36 29\r\n44 24\r\n38 22\r\n30 43\r\n15 19\r\n39 2\r\n13 8\r\n29 50\r\n37 18\r\n32 19\r\n42 39\r\n20 41\r\n14 11\r\n4 25\r\n14 35\r\n17 23\r\n1 29\r\n3 19\r\n8 6\r\n26 31\r\n9 46\r\n36 31\r\n21 49\r\n17 38\r\n47 27\r\n5 21\r\n42 22\r\n36 34\r\n50 27\r\n11 45\r\n26 41\r\n1 16\r\n21 39\r\n18 43\r\n21 37\r\n12 16\r\n22 32\r\n7 18\r\n10 14\r\n43 37\r\n18 50\r\n21 32\r\n27 32\r\n48 16\r\n5 6\r\n5 11\r\n5 6\r\n39 29\r\n40 13\r\n14 6\r\n",
                "1\r\n1\r\n1\r\n1\r\n2\r\n1\r\n2\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n2\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n2\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n2\r\n1\r\n2\r\n3\r\n1\r\n1\r\n1\r\n1\r\n1\r\n3\r\n3\r\n3\r\n1\r\n1\r\n2\r\n"
            ]
        ]
    }
]