[
    {
        "name": "MST Company",
        "description": "The MST (Meaningless State Team) company won another tender for an important\nstate reform in Berland. There are n cities in Berland, some pairs of the\ncities are connected by roads. Each road has its price. One can move along any\nroad in any direction. The MST team should carry out the repair works on some\nset of roads such that one can get from any city to any other one moving only\nalong the repaired roads. Moreover, this set should contain exactly k capital\nroads (that is, the roads that start or finish in the capital). The number of\nthe capital is 1. As the budget has already been approved, the MST Company\nwill profit by finding the set with minimum lengths of roads. Input The first\ninput line contains three integers n, m, k (1 \u2264 n \u2264 5000;0 \u2264 m \u2264 10^5;0 \u2264 k <\n5000), where n is the number of cities in the country, m is the number of\nroads in the country, k is the number of capital roads in the required set.\nThen m lines enumerate the roads in question. Each road is specified by three\nnumbers ai, bi, wi (1 \u2264 ai, bi \u2264 n; 1 \u2264 w \u2264 10^5), where ai, bi are the\nnumbers of cities linked by a road and wi is its length. Between each pair of\ncities no more than one road exists. There are no roads that start and finish\nin one city. The capital's number is 1. Output In the first line print the\nnumber of roads in the required set. The second line should contain the\nnumbers of roads included in the sought set. If the sought set does not exist,\nprint -1. Examples Input 4 5 2 1 2 1 2 3 1 3 4 1 1 3 3 1 4 2 Output 3 1 5 2\n\n",
        "cf_contest_id": 125,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "graphs"
        ],
        "time_limit_seconds": 8.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 5 2\r\n1 2 1\r\n2 3 1\r\n3 4 1\r\n1 3 3\r\n1 4 2\r\n",
                "3\r\n1 5 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 0 0\r\n",
                "0\r\n"
            ],
            [
                "2 1 1\r\n2 1 1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "3 3 2\r\n1 3 2\r\n1 2 3\r\n2 3 3\r\n",
                "2\r\n1 2\r\n"
            ],
            [
                "10 13 0\r\n4 5 3\r\n8 5 6\r\n4 3 8\r\n1 4 5\r\n6 4 1\r\n4 9 4\r\n9 5 8\r\n2 4 1\r\n10 2 9\r\n6 2 3\r\n5 3 4\r\n9 2 4\r\n2 7 10\r\n",
                "-1\r\n"
            ],
            [
                "10 20 0\r\n6 7 9\r\n8 9 10\r\n3 1 1\r\n5 2 10\r\n2 10 7\r\n10 5 9\r\n1 2 8\r\n9 7 8\r\n6 3 10\r\n2 4 5\r\n9 1 3\r\n5 3 10\r\n3 9 10\r\n4 10 7\r\n4 1 4\r\n6 1 8\r\n5 1 6\r\n6 9 5\r\n8 5 7\r\n8 2 10\r\n",
                "-1\r\n"
            ],
            [
                "10 30 4\r\n3 5 7\r\n8 5 1\r\n3 6 5\r\n6 8 10\r\n5 6 4\r\n7 10 7\r\n4 3 4\r\n6 7 7\r\n3 1 4\r\n7 1 4\r\n9 8 5\r\n2 7 5\r\n9 10 1\r\n8 4 2\r\n10 8 5\r\n8 1 6\r\n3 2 4\r\n4 1 5\r\n7 3 2\r\n1 2 1\r\n10 5 1\r\n10 2 7\r\n7 5 1\r\n4 5 9\r\n10 6 10\r\n5 9 7\r\n10 3 7\r\n2 4 10\r\n1 9 5\r\n10 1 2\r\n",
                "9\r\n20 30 9 10 21 13 2 14 5\r\n"
            ],
            [
                "25 50 3\r\n5 19 10\r\n8 10 21\r\n14 9 25\r\n12 3 22\r\n8 6 12\r\n6 14 20\r\n25 8 22\r\n6 23 7\r\n7 9 4\r\n23 2 20\r\n4 21 10\r\n25 13 7\r\n12 17 1\r\n14 23 10\r\n10 14 12\r\n13 15 1\r\n6 21 15\r\n14 11 13\r\n25 18 14\r\n5 7 11\r\n1 21 7\r\n20 3 20\r\n21 11 3\r\n20 13 22\r\n10 23 21\r\n15 18 24\r\n22 11 23\r\n20 10 18\r\n24 17 1\r\n19 11 11\r\n25 15 24\r\n21 25 22\r\n23 19 21\r\n25 17 6\r\n2 12 18\r\n3 8 4\r\n24 1 7\r\n15 19 9\r\n22 14 13\r\n9 4 20\r\n16 21 23\r\n16 6 6\r\n16 1 25\r\n24 18 22\r\n6 17 1\r\n24 12 5\r\n15 6 6\r\n16 25 17\r\n16 14 9\r\n2 24 15\r\n",
                "24\r\n37 21 43 16 29 45 13 23 9 36 34 47 8 38 49 1 11 20 15 5 39 19 50 28\r\n"
            ],
            [
                "25 50 0\r\n8 18 25\r\n14 21 6\r\n7 18 4\r\n23 18 17\r\n18 9 23\r\n18 20 22\r\n20 4 5\r\n2 13 6\r\n10 14 19\r\n23 13 15\r\n4 2 4\r\n14 20 24\r\n20 5 23\r\n13 18 6\r\n9 3 10\r\n4 19 13\r\n23 4 14\r\n7 16 3\r\n6 5 14\r\n8 2 21\r\n21 3 12\r\n8 15 22\r\n13 8 3\r\n15 13 4\r\n19 25 3\r\n24 19 19\r\n11 24 1\r\n7 25 17\r\n1 5 4\r\n20 3 22\r\n3 17 4\r\n20 25 10\r\n11 10 24\r\n23 16 3\r\n5 15 15\r\n5 19 17\r\n10 4 24\r\n4 3 12\r\n12 24 24\r\n2 20 21\r\n18 1 17\r\n21 19 16\r\n9 19 2\r\n5 21 5\r\n3 12 5\r\n2 6 9\r\n17 16 22\r\n12 20 12\r\n1 10 22\r\n17 22 15\r\n",
                "-1\r\n"
            ],
            [
                "25 51 4\r\n19 22 5\r\n20 25 8\r\n9 18 19\r\n15 2 19\r\n8 4 24\r\n21 10 15\r\n11 15 9\r\n19 14 12\r\n10 2 15\r\n2 3 5\r\n23 7 13\r\n7 1 16\r\n13 12 3\r\n9 16 7\r\n5 4 19\r\n24 25 21\r\n22 2 13\r\n17 10 14\r\n13 18 18\r\n3 13 11\r\n6 4 20\r\n4 23 8\r\n22 11 5\r\n4 9 17\r\n12 9 17\r\n13 21 5\r\n5 20 16\r\n12 2 1\r\n18 2 13\r\n6 3 8\r\n13 5 6\r\n20 21 24\r\n14 15 8\r\n25 22 5\r\n3 11 19\r\n19 1 18\r\n18 19 24\r\n19 5 6\r\n10 16 13\r\n18 20 13\r\n16 23 25\r\n19 7 24\r\n13 16 18\r\n12 23 13\r\n18 7 22\r\n13 1 8\r\n22 23 10\r\n17 16 12\r\n21 25 19\r\n4 1 12\r\n19 3 23\r\n",
                "24\r\n46 50 12 36 28 13 26 23 1 34 10 38 14 33 2 30 22 7 48 29 39 9 16 5\r\n"
            ],
            [
                "25 37 5\r\n12 21 4\r\n1 7 2\r\n23 1 7\r\n4 20 22\r\n23 13 2\r\n19 24 6\r\n10 15 12\r\n24 8 18\r\n22 8 10\r\n12 6 10\r\n17 5 7\r\n4 25 3\r\n2 11 17\r\n25 24 25\r\n22 19 10\r\n6 11 6\r\n1 18 14\r\n5 11 20\r\n13 24 21\r\n4 16 20\r\n2 21 17\r\n23 20 1\r\n17 6 21\r\n1 4 3\r\n3 9 20\r\n11 4 7\r\n20 13 25\r\n1 24 23\r\n9 19 21\r\n16 19 14\r\n5 20 7\r\n18 3 3\r\n1 14 8\r\n24 7 24\r\n21 4 3\r\n8 2 5\r\n22 10 7\r\n",
                "24\r\n22 2 5 35 32 24 12 1 36 16 6 37 31 26 3 11 33 15 9 7 17 30 13 25\r\n"
            ],
            [
                "10 20 2\r\n5 10 6\r\n9 4 3\r\n8 7 1\r\n6 9 5\r\n7 2 8\r\n6 1 4\r\n1 8 10\r\n7 10 9\r\n8 3 6\r\n4 3 9\r\n10 1 6\r\n2 9 8\r\n5 7 4\r\n8 10 5\r\n3 6 2\r\n4 10 2\r\n1 2 6\r\n10 2 7\r\n1 3 6\r\n4 6 10\r\n",
                "9\r\n3 16 15 2 6 13 4 14 17\r\n"
            ],
            [
                "10 20 4\r\n1 4 6\r\n3 9 3\r\n8 9 9\r\n2 10 10\r\n6 4 5\r\n8 7 1\r\n8 4 2\r\n10 1 3\r\n4 7 5\r\n10 3 10\r\n2 1 10\r\n10 9 1\r\n10 4 10\r\n2 5 8\r\n5 8 5\r\n7 1 5\r\n3 1 6\r\n8 1 2\r\n6 3 6\r\n10 7 5\r\n",
                "9\r\n18 8 6 12 7 17 5 15 11\r\n"
            ],
            [
                "10 20 5\r\n1 3 4\r\n7 5 3\r\n2 6 2\r\n1 7 6\r\n4 3 9\r\n4 10 2\r\n9 6 4\r\n9 10 10\r\n10 2 1\r\n4 1 5\r\n1 2 2\r\n5 4 7\r\n8 5 10\r\n7 9 9\r\n9 1 10\r\n4 6 5\r\n3 6 10\r\n2 4 3\r\n7 3 8\r\n1 10 9\r\n",
                "9\r\n11 1 10 4 9 3 15 2 13\r\n"
            ]
        ]
    }
]