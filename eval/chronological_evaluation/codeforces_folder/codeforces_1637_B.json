[
    {
        "name": "MEX and Array",
        "description": "Let there be an array \n    b_1, b_2, \n    \u2026, b_k\n. Let there be a partition\nof this array into segments \n    [l_1; r_1], [l_2; r_2], \n    \u2026, [l_c;\n    r_c]\n, where \n    l_1 = 1\n, \n    r_c = k\n, and for any \n    2 \n    \u2264 i \n    \u2264\n    c\n holds that \n    r_i-1 + 1 = l_i\n. In other words, each element of the\narray belongs to exactly one segment. Let's define the cost of a partition as\n\n    \n\n    c + \n    \u2211_i = 1^c\n    mex(\n    \n    b_l_i, b_l_i + 1,\n    \n    \u2026, b_r_i\n    \n    ),\n\n    \n where \n    mex\n of a set of\nnumbers \n    S\n is the smallest non-negative integer that does not occur in\nthe set \n    S\n. In other words, the cost of a partition is the number of\nsegments plus the sum of MEX over all segments. Let's define the value of an\narray \n    b_1, b_2, \n    \u2026, b_k\n as the maximum possible cost over all\npartitions of this array. You are given an array \n    a\n of size \n    n\n. Find\nthe sum of values of all its subsegments. An array \n    x\n is a subsegment of\nan array \n    y\n if \n    x\n can be obtained from \n    y\n by deletion of\nseveral (possibly, zero or all) elements from the beginning and several\n(possibly, zero or all) elements from the end. Input The input contains\nseveral test cases. The first line contains one integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 30\n) \u2014 the number of test cases. The first line for each test case\ncontains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n) \u2014 the length of the\narray. The second line contains a sequence of integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the array elements. It is guaranteed\nthat the sum of the values \n    n\n over all test cases does not exceed\n\n    100\n. Output For each test case print a single integer \u2014 the answer to\nthe problem. Example Input 4 2 1 2 3 2 0 1 4 2 0 5 1 5 0 1 1 0 1 Output 4 14\n26 48 Note In the second test case: The best partition for the subsegment\n\n    [2, 0, 1]\n: \n    [2], [0, 1]\n. The cost of this partition equals to \n    2\n    + \n    mex(\n    \n    2\n    \n    ) + \n    mex(\n    \n    0, 1\n    \n    ) = 2\n    + 0 + 2 = 4\n. The best partition for the subsegment \n    [2, 0]\n: \n    [2],\n    [0]\n. The cost of this partition equals to \n    2 +\n    \n    mex(\n    \n    2\n    \n    ) + \n    mex(\n    \n    0\n    \n    ) = 2 + 0\n    + 1 = 3\n The best partition for the subsegment \n    [2]\n: \n    [2]\n. The\ncost of this partition equals to \n    1 + \n    mex(\n    \n    2\n    \n    ) = 1\n    + 0 = 1\n. The best partition for the subsegment \n    [0, 1]\n: \n    [0, 1]\n.\nThe cost of this partition equals to \n    1 + \n    mex(\n    \n    0,\n    1\n    \n    ) = 1 + 2 = 3\n. The best partition for the subsegment \n    [0]\n:\n\n    [0]\n. The cost of this partition equals to \n    1 +\n    \n    mex(\n    \n    0\n    \n    ) = 1 + 1 = 2\n. The best partition for the\nsubsegment \n    [1]\n: \n    [1]\n. The cost of this partition equals to \n    1 +\n    \n    mex(\n    \n    1\n    \n    ) = 1 + 0 = 1\n. The sum of values over all\nsubsegments equals to \n    4 + 3 + 1 + 3 + 2 + 1 = 14\n.\n\n",
        "cf_contest_id": 1637,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2\r\n1 2\r\n3\r\n2 0 1\r\n4\r\n2 0 5 1\r\n5\r\n0 1 1 0 1\r\n",
                "4\r\n14\r\n26\r\n48\r\n"
            ]
        ],
        "private_cases": [
            [
                "30\r\n1\r\n0\r\n2\r\n0 0\r\n2\r\n0 1\r\n2\r\n1 0\r\n1\r\n1000000000\r\n2\r\n1000000000 1000000000\r\n2\r\n999999999 1000000000\r\n2\r\n1000000000 999999999\r\n5\r\n0 1 2 3 4\r\n5\r\n4 3 2 1 0\r\n5\r\n1 0 0 0 2\r\n1\r\n0\r\n5\r\n0 0 0 3 0\r\n1\r\n1\r\n1\r\n0\r\n1\r\n0\r\n1\r\n1\r\n2\r\n2 2\r\n5\r\n4 4 5 5 3\r\n4\r\n2 1 1 1\r\n5\r\n2 1 2 0 2\r\n1\r\n0\r\n1\r\n0\r\n4\r\n0 1 0 0\r\n2\r\n0 0\r\n4\r\n1 0 0 0\r\n4\r\n0 1 0 2\r\n3\r\n1 0 2\r\n4\r\n0 2 0 0\r\n22\r\n16 4 12 14 0 17 19 21 15 12 5 10 20 3 14 12 1 20 17 5 10 15\r\n",
                "2\r\n8\r\n6\r\n6\r\n1\r\n4\r\n4\r\n4\r\n40\r\n40\r\n60\r\n2\r\n62\r\n1\r\n2\r\n2\r\n1\r\n4\r\n35\r\n20\r\n43\r\n2\r\n2\r\n34\r\n8\r\n36\r\n30\r\n14\r\n34\r\n2114\r\n"
            ],
            [
                "28\r\n3\r\n0 0 0\r\n3\r\n0 1 2\r\n5\r\n3 3 0 4 3\r\n3\r\n3 0 0\r\n6\r\n0 6 2 1 0 0\r\n2\r\n2 2\r\n4\r\n1 1 3 0\r\n5\r\n0 2 0 1 0\r\n3\r\n0 1 2\r\n1\r\n1\r\n1\r\n0\r\n6\r\n0 0 2 0 1 0\r\n2\r\n2 2\r\n4\r\n2 2 2 1\r\n3\r\n0 0 0\r\n6\r\n2 1 4 5 2 1\r\n2\r\n2 2\r\n1\r\n1\r\n6\r\n0 1 1 0 1 2\r\n5\r\n2 2 1 0 2\r\n4\r\n0 2 1 1\r\n2\r\n2 2\r\n2\r\n2 0\r\n2\r\n1 1\r\n5\r\n1 2 0 2 2\r\n5\r\n1 1 2 1 2\r\n3\r\n3 3 0\r\n6\r\n1 2 1 0 0 0\r\n",
                "20\r\n13\r\n44\r\n17\r\n78\r\n4\r\n24\r\n54\r\n13\r\n1\r\n2\r\n90\r\n4\r\n20\r\n20\r\n56\r\n4\r\n1\r\n74\r\n43\r\n24\r\n4\r\n6\r\n4\r\n44\r\n35\r\n13\r\n84\r\n"
            ],
            [
                "1\r\n100\r\n1 4 1 2 0 3 0 3 1 2 2 0 3 3 4 4 0 1 3 3 3 0 3 3 0 1 1 0 2 0 4 3 0 2 2 2 2 4 4 3 1 0 4 3 0 4 3 4 0 1 0 0 2 3 1 4 2 3 4 3 0 4 4 1 3 0 2 2 4 4 4 0 2 1 0 4 3 3 2 0 1 3 3 0 0 3 1 0 1 0 4 4 4 2 0 1 2 0 0 2\r\n",
                "214486\r\n"
            ],
            [
                "20\r\n11\r\n2 2 0 2 2 0 2 1 1 1 2\r\n2\r\n1 0\r\n3\r\n2 0 1\r\n1\r\n2\r\n4\r\n2 0 0 1\r\n10\r\n1 1 2 0 0 2 2 1 1 0\r\n3\r\n2 0 0\r\n3\r\n2 0 2\r\n5\r\n2 0 0 2 0\r\n12\r\n2 0 2 0 1 0 2 1 0 0 1 0\r\n3\r\n1 2 2\r\n3\r\n2 0 0\r\n5\r\n2 2 0 2 2\r\n1\r\n2\r\n2\r\n2 0\r\n5\r\n0 0 2 2 1\r\n3\r\n1 1 1\r\n10\r\n1 1 0 1 1 2 0 2 2 2\r\n4\r\n2 2 1 2\r\n10\r\n1 1 0 2 2 1 1 1 0 0\r\n",
                "349\r\n6\r\n14\r\n1\r\n32\r\n288\r\n17\r\n14\r\n57\r\n542\r\n10\r\n17\r\n44\r\n1\r\n6\r\n48\r\n10\r\n272\r\n20\r\n272\r\n"
            ],
            [
                "20\r\n6\r\n2 1 0 0 2 0\r\n6\r\n0 1 0 3 2 1\r\n1\r\n1\r\n5\r\n0 0 1 3 1\r\n3\r\n3 0 1\r\n3\r\n3 1 2\r\n12\r\n0 0 0 0 3 0 0 1 3 0 0 3\r\n13\r\n3 0 0 0 0 0 3 3 0 0 0 1 2\r\n2\r\n0 2\r\n6\r\n0 3 0 1 0 0\r\n3\r\n1 3 1\r\n2\r\n0 1\r\n8\r\n1 0 2 0 0 3 2 0\r\n6\r\n1 2 0 3 3 1\r\n2\r\n0 0\r\n3\r\n0 0 0\r\n2\r\n0 0\r\n5\r\n2 0 2 3 0\r\n10\r\n0 0 3 0 0 2 1 0 0 0\r\n2\r\n0 1\r\n",
                "86\r\n74\r\n1\r\n48\r\n14\r\n10\r\n600\r\n763\r\n6\r\n90\r\n10\r\n6\r\n182\r\n68\r\n8\r\n20\r\n8\r\n48\r\n358\r\n6\r\n"
            ],
            [
                "10\r\n1\r\n2\r\n7\r\n0 2 2 1 0 4 3\r\n12\r\n3 1 0 2 4 0 4 2 0 4 2 0\r\n4\r\n2 0 1 4\r\n14\r\n3 0 2 4 0 3 4 2 0 2 0 0 4 1\r\n8\r\n3 1 2 4 3 0 1 4\r\n12\r\n4 3 3 4 4 0 3 3 2 4 4 0\r\n20\r\n2 3 0 1 2 2 2 2 2 1 4 4 0 1 3 0 0 1 0 2\r\n20\r\n2 2 3 0 4 1 1 3 4 4 2 3 0 3 0 0 0 1 2 1\r\n2\r\n1 3\r\n",
                "1\r\n106\r\n484\r\n26\r\n770\r\n138\r\n418\r\n1884\r\n1950\r\n4\r\n"
            ],
            [
                "10\r\n16\r\n0 0 1 2 4 0 5 0 0 0 0 3 0 0 0 0\r\n5\r\n0 5 4 0 5\r\n23\r\n1 0 0 4 2 0 1 4 0 0 2 3 5 0 5 4 5 0 1 5 0 0 5\r\n11\r\n1 0 2 3 3 2 1 0 0 0 5\r\n13\r\n0 2 2 0 0 0 4 0 0 5 0 0 5\r\n5\r\n3 5 3 0 0\r\n4\r\n1 2 0 0\r\n8\r\n4 0 0 0 5 0 0 3\r\n1\r\n0\r\n14\r\n5 3 3 1 5 0 1 4 0 0 1 1 2 5\r\n",
                "1348\r\n48\r\n3145\r\n385\r\n751\r\n48\r\n30\r\n204\r\n2\r\n718\r\n"
            ],
            [
                "1\r\n100\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "343400\r\n"
            ],
            [
                "1\r\n100\r\n1 1 1 0 1 0 0 1 0 1 0 1 1 0 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 0 1 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 0 0 1 0 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 0 0\r\n",
                "246154\r\n"
            ],
            [
                "1\r\n100\r\n2 3 3 1 2 2 3 1 0 2 1 3 3 1 3 0 1 0 1 3 2 0 3 1 1 0 1 2 2 1 2 3 2 2 2 2 2 0 3 1 1 3 1 3 1 3 2 1 2 1 3 2 3 3 0 0 2 3 0 1 0 1 3 3 3 0 2 0 3 0 3 3 2 3 2 1 0 0 1 0 3 3 0 0 3 0 2 1 0 0 3 2 3 2 0 2 1 3 2 1\r\n",
                "210318\r\n"
            ],
            [
                "1\r\n100\r\n6 0 0 3 2 6 1 6 1 6 0 1 1 0 6 2 2 0 0 5 5 5 1 4 3 4 4 2 6 0 4 3 5 1 2 6 1 4 3 2 4 3 4 3 5 2 5 0 3 0 5 0 4 5 2 4 2 5 2 2 6 3 6 2 3 1 6 5 0 1 3 0 2 3 6 0 4 2 4 5 1 4 3 6 4 0 5 3 3 0 4 0 6 3 4 3 6 4 1 2\r\n",
                "196528\r\n"
            ],
            [
                "1\r\n100\r\n3 7 3 4 5 0 6 2 0 4 6 6 5 3 7 2 3 6 7 1 1 4 2 2 4 7 7 3 7 4 0 4 6 7 6 0 2 4 4 0 0 7 7 7 2 5 4 6 4 1 2 2 0 0 3 1 3 5 0 1 5 6 2 1 5 5 2 6 3 7 1 0 4 1 0 2 2 6 2 5 1 2 5 5 3 2 5 3 5 2 1 1 0 6 4 1 1 1 5 7\r\n",
                "194850\r\n"
            ]
        ]
    }
]