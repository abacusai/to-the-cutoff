[
    {
        "name": "Vasya and Array",
        "description": "Vasya has got an array consisting of \n    n\n integers, and two integers\n\n    k\n and \n    len\n in addition. All numbers in the array are either between\n\n    1\n and \n    k\n (inclusive), or equal to \n    -1\n. The array is good if\nthere is no segment of \n    len\n consecutive equal numbers. Vasya will replace\neach \n    -1\n with some number from \n    1\n to \n    k\n (inclusive) in such a\nway that the resulting array is good. Tell him the number of ways to do this\nreplacement. Since the answer may be large, print it modulo \n    998244353\n.\nInput The first line contains three integers \n    n, k\n and \n    len\n (\n    1\n    \n    \u2264 n \n    \u2264 10^5, 1 \n    \u2264 k \n    \u2264 100, 1 \n    \u2264 len \n    \u2264 n\n). The second\nline contains \n    n\n numbers \u2014 the array. Each number is either \n    -1\n or\nbetween \n    1\n and \n    k\n (inclusive). Output Print one integer \u2014 the number\nof ways to replace each \n    -1\n with some number from \n    1\n to \n    k\n\n(inclusive) so the array is good. The answer may be large, so print it modulo\n\n    998244353\n. Examples Input 5 2 3 1 -1 1 -1 2 Output 2 Input 6 3 2 1 1 -1\n-1 -1 -1 Output 0 Input 10 42 7 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 Output 645711643\nNote Possible answers in the first test: \n    [1, 2, 1, 1, 2]\n; \n    [1, 2, 1,\n    2, 2]\n. There is no way to make the array good in the second test, since\nfirst two elements are equal. There are too many answers in the third test, so\nwe won't describe any of them.\n\n",
        "cf_contest_id": 1093,
        "cf_index": "F",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5 2 3\r\n1 -1 1 -1 2\r\n",
                "2\r\n"
            ],
            [
                "6 3 2\r\n1 1 -1 -1 -1 -1\r\n",
                "0\r\n"
            ],
            [
                "10 42 7\r\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1\r\n",
                "645711643\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 100 1\r\n-1\r\n",
                "0\r\n"
            ]
        ]
    }
]