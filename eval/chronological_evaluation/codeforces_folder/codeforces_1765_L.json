[
    {
        "name": "Project Manager",
        "description": "There are \n    n\n employees at Bersoft company, numbered from \n    1\n to\n\n    n\n. Each employee works on some days of the week and rests on the other\ndays. You are given the lists of working days of the week for each employee.\nThere are regular days and holidays. On regular days, only those employees\nwork that have the current day of the week on their list. On holidays, no one\nworks. You are provided with a list of days that are holidays. The days are\nnumbered from \n    1\n onwards, day \n    1\n is Monday. The company receives\n\n    k\n project offers they have to complete. The projects are numbered from\n\n    1\n to \n    k\n in the order of decreasing priority. Each project consists\nof multiple parts, where the \n    i\n-th part must be completed by the\n\n    a_i\n-th employee. The parts must be completed in order (i. e. the\n\n    (i+1)\n-st part can only be started when the \n    i\n-th part is\ncompleted). Each part takes the corresponding employee a day to complete. The\nprojects can be worked on simultaneously. However, one employee can complete a\npart of only one project during a single day. If they have a choice of what\nproject to complete a part on, they always go for the project with the highest\npriority (the lowest index). For each project, output the day that project\nwill be completed on. Input The first line contains three integers \n    n, m\n\nand \n    k\n (\n    1 \n    \u2264 n, m, k \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of\nemployees, the number of holidays and the number of projects. The \n    i\n-th\nof the next \n    n\n lines contains the list of working days of the \n    i\n-th\nemployee. First, a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 7\n) \u2014 the\nnumber of working days. Then \n    t\n days of the week in the increasing order.\nThe possible days are: \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\",\n\"Saturday\", \"Sunday\". The next line contains \n    m\n integers \n    h_1, h_2,\n    \n    \u2026, h_m\n (\n    1 \n    \u2264 h_1 < h_2 < \n    \u2026 < h_m \n    \u2264 10^9\n) \u2014 the\nlist of holidays. The \n    j\n-th of the next \n    k\n lines contains a\ndescription of the \n    j\n-th project. It starts with an integer \n    p\n (\n    1\n    \n    \u2264 p \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of parts in the project. Then\n\n    p\n integers \n    a_1, a_2, \n    \u2026, a_p\n (\n    1 \n    \u2264 a_x \n    \u2264 n\n)\nfollow, where \n    p_i\n is the index of the employee that must complete the\n\n    i\n-th part. The total number of parts in all projects doesn't exceed \n    2\n    \n    \u00b7 10^5\n. Output Print \n    k\n integers \u2014 the \n    j\n-th value should\nbe equal to the day the \n    j\n-th project is completed on. Example Input 3 5\n4 2 Saturday Sunday 2 Tuesday Thursday 4 Monday Wednesday Friday Saturday 4 7\n13 14 15 5 1 1 3 3 2 3 2 3 2 5 3 3 3 1 1 8 3 3 3 3 3 3 3 3 Output 25 9 27 27\n\n",
        "cf_contest_id": 1765,
        "cf_index": "L",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 5 4\r\n2 Saturday Sunday\r\n2 Tuesday Thursday\r\n4 Monday Wednesday Friday Saturday\r\n4 7 13 14 15\r\n5 1 1 3 3 2\r\n3 2 3 2\r\n5 3 3 3 1 1\r\n8 3 3 3 3 3 3 3 3\r\n",
                "25\r\n9\r\n27\r\n27\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n4 Monday Tuesday Friday Sunday\r\n1\r\n1 1\r\n",
                "2\r\n"
            ],
            [
                "5 5 5\r\n5 Tuesday Wednesday Thursday Saturday Sunday\r\n3 Wednesday Friday Sunday\r\n4 Monday Thursday Saturday Sunday\r\n2 Tuesday Saturday\r\n3 Tuesday Wednesday Sunday\r\n1 5 7 8 10\r\n3 4 3 5\r\n1 1\r\n1 1\r\n1 1\r\n4 1 2 1 3\r\n",
                "9\r\n2\r\n3\r\n4\r\n14\r\n"
            ],
            [
                "1 1 1\r\n1 Monday\r\n1000000000\r\n1 1\r\n",
                "1\r\n"
            ]
        ]
    }
]