[
    {
        "name": "Tavas in Kansas",
        "description": "Tavas lives in Kansas. Kansas has n cities numbered from 1 to n connected with\nm bidirectional roads. We can travel from any city to any other city via these\nroads. Kansas is as strange as Tavas. So there may be a road between a city\nand itself or more than one road between two cities. Tavas invented a game and\ncalled it \"Dashti\". He wants to play Dashti with his girlfriends, Nafas. In\nthis game, they assign an arbitrary integer value to each city of Kansas. The\nvalue of i-th city equals to pi. During the game, Tavas is in city s and Nafas\nis in city t. They play in turn and Tavas goes first. A player in his/her\nturn, must choose a non-negative integer x and his/her score increases by the\nsum of values of all cities with (shortest) distance no more than x from\nhis/her city. Each city may be used once, or in the other words, after first\ntime a player gets score from a city, city score becomes zero. There is an\nadditional rule: the player must choose x such that he/she gets the point of\nat least one city that was not used before. Note that city may initially have\nvalue 0, such city isn't considered as been used at the beginning of the game,\ni. e. each player may use it to fullfill this rule. The game ends when nobody\ncan make a move. A player's score is the sum of the points he/she earned\nduring the game. The winner is the player with greater score, or there is a\ndraw if players score the same value. Both players start game with zero\npoints. If Tavas wins, he'll break his girlfriend's heart, and if Nafas wins,\nTavas will cry. But if their scores are equal, they'll be happy and Tavas will\ngive Nafas flowers. They're not too emotional after all, so they'll play\noptimally. Your task is to tell Tavas what's going to happen after the game\nends. Input The first line of input contains two integers n and m (2 \u2264 n \u2264\n2000, n - 1 \u2264 m \u2264 10^5). The second line of input contains two integers s and\nt (1 \u2264 s, t \u2264 n, s \u2260 t). The next line contains n integers p1, p2, ..., pn\nseparated by spaces (|pi| \u2264 10^9). The next m lines contain the roads. Each\nline contains three integers v, u, w and it means that there's an road with\nlength w between cities v and u (1 \u2264 u, v \u2264 n and 0 \u2264 w \u2264 10^9). The road may\nlead from the city to itself, there may be several roads between each pair of\ncities. Output If Tavas wins, print \"Break a heart\". If Nafas wins print \"Cry\"\nand if nobody wins (i. e. the game ended with draw) print \"Flowers\". Examples\nInput 4 4 1 2 3 2 5 -11 1 4 2 3 4 2 3 1 5 3 2 1 Output Cry Input 5 4 1 2 2 2\n-5 -4 6 1 2 4 2 3 5 2 4 2 4 5 2 Output Break a heart Input 2 1 1 2 -5 -5 1 2\n10 Output Flowers\n\n",
        "cf_contest_id": 536,
        "cf_index": "D",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "games"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4 4\r\n1 2\r\n3 2 5 -11\r\n1 4 2\r\n3 4 2\r\n3 1 5\r\n3 2 1\r\n",
                "Cry"
            ],
            [
                "5 4\r\n1 2\r\n2 2 -5 -4 6\r\n1 2 4\r\n2 3 5\r\n2 4 2\r\n4 5 2\r\n",
                "Break a heart"
            ],
            [
                "2 1\r\n1 2\r\n-5 -5\r\n1 2 10\r\n",
                "Flowers"
            ]
        ],
        "private_cases": [
            [
                "2 3\r\n1 2\r\n1 3\r\n1 2 1\r\n1 2 5\r\n1 2 1000\r\n",
                "Break a heart"
            ],
            [
                "2 3\r\n1 2\r\n1 -3\r\n1 2 1\r\n1 2 5\r\n1 2 1000\r\n",
                "Break a heart"
            ],
            [
                "2 3\r\n1 2\r\n-1 2\r\n1 2 1\r\n1 2 5\r\n1 2 1000\r\n",
                "Break a heart"
            ],
            [
                "2 3\r\n1 2\r\n-1 -3\r\n1 2 1\r\n1 2 5\r\n1 2 1000\r\n",
                "Break a heart"
            ],
            [
                "2 3\r\n1 2\r\n-3 -1\r\n1 2 1\r\n1 2 5\r\n1 2 1000\r\n",
                "Cry"
            ],
            [
                "2 3\r\n1 2\r\n10 10\r\n1 2 1\r\n1 2 5\r\n1 2 1000\r\n",
                "Break a heart"
            ],
            [
                "2 3\r\n1 2\r\n-10 -10\r\n1 2 1\r\n1 2 5\r\n1 2 1000\r\n",
                "Flowers"
            ]
        ]
    }
]