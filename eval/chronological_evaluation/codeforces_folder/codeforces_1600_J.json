[
    {
        "name": "Robot Factory",
        "description": "You have received data from a Bubble bot. You know your task is to make\nfactory facilities, but before you even start, you need to know how big the\nfactory is and how many rooms it has. When you look at the data you see that\nyou have the dimensions of the construction, which is in rectangle shape: N x\nM. Then in the next N lines you have M numbers. These numbers represent\nfactory tiles and they can go from 0 to 15. Each of these numbers should be\nlooked in its binary form. Because from each number you know on which side the\ntile has walls. For example number 10 in it's binary form is 1010, which means\nthat it has a wall from the North side, it doesn't have a wall from the East,\nit has a wall on the South side and it doesn't have a wall on the West side.\nSo it goes North, East, South, West. It is guaranteed that the construction\nalways has walls on it's edges. The input will be correct. Your task is to\nprint the size of the rooms from biggest to smallest. Input The first line has\ntwo numbers which are N and M, the size of the construction. Both are\nintegers: \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^3\n) \n    m\n (\n    1 \n    \u2264 m \n    \u2264\n    10^3\n) Next N x M numbers represent each tile of construction. Output Once\nyou finish processing the data your output consists of one line sorted from\nbiggest to smallest room sizes. Example Input 4 5 9 14 11 12 13 5 15 11 6 7 5\n9 14 9 14 3 2 14 3 14 Output 9 4 4 2 1\n\n",
        "cf_contest_id": 1600,
        "cf_index": "J",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dfs and similar"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 5\r\n9 14 11 12 13\r\n5 15 11 6 7\r\n5 9 14 9 14\r\n3 2 14 3 14\r\n",
                "9 4 4 2 1 "
            ]
        ],
        "private_cases": [
            [
                "6 1\r\n13\r\n5\r\n7\r\n15\r\n13\r\n7\r\n",
                "3 2 1 "
            ]
        ]
    }
]