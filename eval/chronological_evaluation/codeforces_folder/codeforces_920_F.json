[
    {
        "name": "SUM and REPLACE",
        "description": "Let D(x) be the number of positive divisors of a positive integer x. For\nexample, D(2) = 2 (2 is divisible by 1 and 2), D(6) = 4 (6 is divisible by 1,\n2, 3 and 6). You are given an array a of n integers. You have to process two\ntypes of queries: REPLACE l r \u2014 for every replace ai with D(ai); SUM l r \u2014\ncalculate . Print the answer for each SUM query. Input The first line contains\ntwo integers n and m (1 \u2264 n, m \u2264 3\u00b710^5) \u2014 the number of elements in the array\nand the number of queries to process, respectively. The second line contains n\nintegers a1, a2, ..., an (1 \u2264 ai \u2264 10^6) \u2014 the elements of the array. Then m\nlines follow, each containing 3 integers ti, li, ri denoting i-th query. If ti\n= 1, then i-th query is REPLACE li ri, otherwise it's SUM li ri (1 \u2264 ti \u2264 2, 1\n\u2264 li \u2264 ri \u2264 n). There is at least one SUM query. Output For each SUM query\nprint the answer to it. Example Input 7 6 6 4 1 10 3 2 4 2 1 7 2 4 5 1 3 5 2 4\n4 1 5 7 2 1 7 Output 30 13 4 22\n\n",
        "cf_contest_id": 920,
        "cf_index": "F",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "dsu",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 6\r\n6 4 1 10 3 2 4\r\n2 1 7\r\n2 4 5\r\n1 3 5\r\n2 4 4\r\n1 5 7\r\n2 1 7\r\n",
                "30\r\n13\r\n4\r\n22\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 2\r\n1 1 1 3\r\n1 1 4\r\n2 1 4\r\n",
                "5\r\n"
            ],
            [
                "10 2\r\n1 1 1 1 1 1 1 1 1 9\r\n1 1 10\r\n2 1 10\r\n",
                "12\r\n"
            ],
            [
                "4 2\r\n1 1 3 1\r\n1 1 4\r\n2 1 4\r\n",
                "5\r\n"
            ],
            [
                "5 3\r\n1 1 1 1 3\r\n2 1 5\r\n1 1 5\r\n2 1 5\r\n",
                "7\r\n6\r\n"
            ],
            [
                "7 10\r\n1 1 1 1 1 1 1\r\n1 1 7\r\n1 1 7\r\n1 1 7\r\n1 1 7\r\n1 1 7\r\n1 1 7\r\n1 1 7\r\n1 1 7\r\n1 1 7\r\n2 1 7\r\n",
                "7\r\n"
            ]
        ]
    }
]