[
    {
        "name": "Trouble Sort",
        "description": "Ashish has \n    n\n elements arranged in a line. These elements are represented\nby two integers \n    a_i\n \u2014 the value of the element and \n    b_i\n \u2014 the type\nof the element (there are only two possible types: \n    0\n and \n    1\n). He\nwants to sort the elements in non-decreasing values of \n    a_i\n. He can\nperform the following operation any number of times: Select any two elements\n\n    i\n and \n    j\n such that \n    b_i \n     b_j\n and swap them. That is, he\ncan only swap two elements of different types in one move. Tell him if he can\nsort the elements in non-decreasing values of \n    a_i\n after performing any\nnumber of operations. Input The first line contains one integer \n    t\n \n    (1\n    \n    \u2264 t \n    \u2264 100)\n \u2014 the number of test cases. The description of the test\ncases follows. The first line of each test case contains one integer \n    n\n\n\n    (1 \n    \u2264 n \n    \u2264 500)\n \u2014 the size of the arrays. The second line contains\n\n    n\n integers \n    a_i\n \n    (1 \n    \u2264 a_i \n    \u2264 10^5)\n \u2014 the value of the\n\n    i\n-th element. The third line containts \n    n\n integers \n    b_i\n\n\n    (b_i \n    \u2208\n    \n    0, 1\n    \n    )\n \u2014 the type of the \n    i\n-th element. Output\nFor each test case, print \"Yes\" or \"No\" (without quotes) depending on whether\nit is possible to sort elements in non-decreasing order of their value. You\nmay print each letter in any case (upper or lower). Example Input 5 4 10 20 20\n30 0 1 0 1 3 3 1 2 0 1 1 4 2 2 4 8 1 1 1 1 3 5 15 4 0 0 0 4 20 10 100 50 1 0 0\n1 Output Yes Yes Yes No Yes Note For the first case: The elements are already\nin sorted order. For the second case: Ashish may first swap elements at\npositions \n    1\n and \n    2\n, then swap elements at positions \n    2\n and\n\n    3\n. For the third case: The elements are already in sorted order. For the\nfourth case: No swap operations may be performed as there is no pair of\nelements \n    i\n and \n    j\n such that \n    b_i \n     b_j\n. The elements\ncannot be sorted. For the fifth case: Ashish may swap elements at positions\n\n    3\n and \n    4\n, then elements at positions \n    1\n and \n    2\n.\n\n",
        "cf_contest_id": 1365,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4\r\n10 20 20 30\r\n0 1 0 1\r\n3\r\n3 1 2\r\n0 1 1\r\n4\r\n2 2 4 8\r\n1 1 1 1\r\n3\r\n5 15 4\r\n0 0 0\r\n4\r\n20 10 100 50\r\n1 0 0 1\r\n",
                "Yes\r\nYes\r\nYes\r\nNo \r\nYes\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n4\r\n61984 85101 45152 74839\r\n1 0 0 1\r\n4\r\n4214 35436 84747 99946\r\n0 0 1 1\r\n3\r\n79565 44828 8501\r\n1 0 1\r\n1\r\n38344\r\n0\r\n2\r\n34421 26750\r\n1 0\r\n3\r\n16298 12276 30423\r\n0 1 1\r\n5\r\n54423 7612 48964 84655 21084\r\n0 0 1 1 0\r\n4\r\n3815 47682 5788 98926\r\n0 1 0 0\r\n1\r\n89288\r\n1\r\n7\r\n45399 99669 77314 13900 19409 12543 79739\r\n0 0 1 1 1 1 1\r\n",
                "Yes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\n"
            ],
            [
                "10\r\n8\r\n94616 28275 43594 47466 68030 82703 84250 96281\r\n1 0 0 0 0 0 0 0\r\n5\r\n28821 83833 51486 69723 77684\r\n1 1 0 1 1\r\n8\r\n63740 94805 71389 67802 43519 34364 17842 98783\r\n0 1 0 1 0 1 0 0\r\n3\r\n63630 83145 89435\r\n1 1 1\r\n5\r\n66195 67879 10777 54269 80789\r\n1 1 1 1 0\r\n8\r\n42696 26113 2424 33997 2628 77835 8119 87993\r\n0 1 1 0 0 1 1 0\r\n4\r\n12043 20141 28370 33127\r\n0 0 0 0\r\n1\r\n86894\r\n1\r\n4\r\n62312 76162 27967 1669\r\n0 0 0 1\r\n7\r\n39602 70448 91043 84454 6842 78123 1745\r\n0 1 1 1 1 1 1\r\n",
                "Yes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\n"
            ],
            [
                "10\r\n10\r\n79157 10816 27516 4264 82803 55031 21388 53097 13750 14774\r\n0 0 0 1 1 1 1 1 1 1\r\n3\r\n78096 19790 97350\r\n1 1 0\r\n5\r\n53345 1237 93185 81914 99554\r\n0 1 1 0 1\r\n1\r\n45755\r\n1\r\n2\r\n23697 18534\r\n1 0\r\n10\r\n5883 54094 20203 28874 43558 49167 67122 76337 87814 93429\r\n0 1 0 0 0 0 0 0 0 0\r\n3\r\n42382 43132 41825\r\n0 1 0\r\n7\r\n6050 75658 73118 35165 45893 74906 28786\r\n1 0 1 0 0 1 0\r\n6\r\n78030 4753 11803 64918 72597 81641\r\n1 0 0 0 0 0\r\n2\r\n59113 34611\r\n0 1\r\n",
                "Yes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\n"
            ],
            [
                "10\r\n1\r\n87421\r\n0\r\n8\r\n49341 47270 44414 46680 40565 75990 53751 48505\r\n0 0 0 0 0 0 0 0\r\n3\r\n39115 51045 93732\r\n0 0 0\r\n5\r\n82871 64531 57574 7313 11254\r\n1 1 0 0 0\r\n8\r\n98037 79382 52002 83398 66173 74055 9870 67224\r\n1 1 0 0 0 0 1 1\r\n4\r\n66234 16883 96640 67905\r\n1 1 1 0\r\n10\r\n8478 77136 1011 13903 67101 97074 87618 3889 36329 13704\r\n0 0 0 1 0 0 1 0 0 1\r\n2\r\n12611 54217\r\n0 0\r\n8\r\n55937 97158 31523 61684 58842 47400 44594 73790\r\n1 1 1 1 1 1 1 1\r\n1\r\n79712\r\n0\r\n",
                "Yes\r\nNo \r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo \r\nYes\r\n"
            ]
        ]
    }
]