[
    {
        "name": "Casimir's String Solitaire",
        "description": "Casimir has a string \n    s\n which consists of capital Latin letters 'A', 'B',\nand 'C' only. Each turn he can choose to do one of the two following actions:\nhe can either erase exactly one letter 'A' and exactly one letter 'B' from\narbitrary places of the string (these letters don't have to be adjacent); or\nhe can erase exactly one letter 'B' and exactly one letter 'C' from arbitrary\nplaces in the string (these letters don't have to be adjacent). Therefore,\neach turn the length of the string is decreased exactly by \n    2\n. All turns\nare independent so for each turn, Casimir can choose any of two possible\nactions. For example, with \n    s\n \n    =\n \"ABCABC\" he can obtain a string\n\n    s\n \n    =\n \"ACBC\" in one turn (by erasing the first occurrence of 'B' and\nthe second occurrence of 'A'). There are also many other options for a turn\naside from this particular example. For a given string \n    s\n determine\nwhether there is a sequence of actions leading to an empty string. In other\nwords, Casimir's goal is to erase all letters from the string. Is there a way\nto do this? Input The first line contains an integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 1000\n) \u2014 the number of test cases. Each test case is described by one\nstring \n    s\n, for which you need to determine if it can be fully erased by\nsome sequence of turns. The string \n    s\n consists of capital letters 'A',\n'B', 'C' and has a length from \n    1\n to \n    50\n letters, inclusive. Output\nPrint \n    t\n lines, each line containing the answer to the corresponding test\ncase. The answer to a test case should be YES if there is a way to fully erase\nthe corresponding string and NO otherwise. You may print every letter in any\ncase you want (so, for example, the strings yEs, yes, Yes, and YES will all be\nrecognized as positive answers). Example Input 6 ABACAB ABBA AC ABC CABCBB\nBCBCBCBCBCBCBCBC Output NO YES NO NO YES YES\n\n",
        "cf_contest_id": 1579,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\nABACAB\r\nABBA\r\nAC\r\nABC\r\nCABCBB\r\nBCBCBCBCBCBCBCBC\r\n",
                "NO\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\n"
            ]
        ],
        "private_cases": []
    }
]