[
    {
        "name": "AGAGA XOOORRR",
        "description": "Baby Ehab is known for his love for a certain operation. He has an array\n\n    a\n of length \n    n\n, and he decided to keep doing the following\noperation on it: he picks \n    2\n adjacent elements; he then removes them and\nplaces a single integer in their place: their bitwise XOR. Note that the\nlength of the array decreases by one. Now he asks you if he can make all\nelements of the array equal. Since babies like to make your life harder, he\nrequires that you leave at least \n    2\n elements remaining. Input The first\nline contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 15\n) \u2014 the number of\ntest cases you need to solve. The first line of each test case contains an\nintegers \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2000\n) \u2014 the number of elements in the\narray \n    a\n. The second line contains \n    n\n space-separated integers\n\n    a_1\n, \n    a_2\n, \n    \u2026\n, \n    a_n\n (\n    0 \n    \u2264 a_i < 2^30\n)\n\u2014 the elements of the array \n    a\n. Output If Baby Ehab can make all elements\nequal while leaving at least \n    2\n elements standing, print \"YES\".\nOtherwise, print \"NO\". Example Input 2 3 0 2 2 4 2 3 1 10 Output YES NO Note\nIn the first sample, he can remove the first \n    2\n elements, \n    0\n and\n\n    2\n, and replace them by \n    0 \n    \u2295 2=2\n. The array will be\n\n    [2,2]\n, so all the elements are equal. In the second sample, there's no\nway to make all the elements equal.\n\n",
        "cf_contest_id": 1516,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n3\r\n0 2 2\r\n4\r\n2 3 1 10\r\n",
                "YES\r\nNO \r\n"
            ]
        ],
        "private_cases": [
            [
                "15\r\n2\r\n660632533 660632533\r\n2\r\n774306959 774306959\r\n2\r\n971739496 784083784\r\n2\r\n775353256 672614891\r\n2\r\n403290217 403290217\r\n2\r\n651261320 651261320\r\n2\r\n894672621 894672621\r\n2\r\n46281693 620415865\r\n2\r\n92929999 409128591\r\n2\r\n26890011 630323358\r\n2\r\n443724284 443724284\r\n2\r\n308822599 308822599\r\n2\r\n895967167 895967167\r\n2\r\n278739659 278739659\r\n2\r\n899274539 899274539\r\n",
                "YES\r\nYES\r\nNO \r\nNO \r\nYES\r\nYES\r\nYES\r\nNO \r\nNO \r\nNO \r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "1\r\n5\r\n1 8 7 7 1\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n4\r\n3 3 3 0\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n5\r\n3 3 3 2 2\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n4\r\n0 3 3 3\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n3\r\n0 0 0\r\n",
                "YES\r\n"
            ]
        ]
    }
]