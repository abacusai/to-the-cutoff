[
    {
        "name": "Magic Stick",
        "description": "Recently Petya walked in the forest and found a magic stick. Since Petya\nreally likes numbers, the first thing he learned was spells for changing\nnumbers. So far, he knows only two spells that can be applied to a positive\ninteger: If the chosen number \n    a\n is even, then the spell will turn it\ninto \n    3a/2\n; If the chosen number \n    a\n is greater than one,\nthen the spell will turn it into \n    a-1\n. Note that if the number is even\nand greater than one, then Petya can choose which spell to apply. Petya now\nhas only one number \n    x\n. He wants to know if his favorite number \n    y\n\ncan be obtained from \n    x\n using the spells he knows. The spells can be used\nany number of times in any order. It is not required to use spells, Petya can\nleave \n    x\n as it is. Input The first line contains single integer \n    T\n\n(\n    1 \n    \u2264 T \n    \u2264 10^4\n) \u2014 the number of test cases. Each test case\nconsists of two lines. The first line of each test case contains two integers\n\n    x\n and \n    y\n (\n    1 \n    \u2264 x, y \n    \u2264 10^9\n) \u2014 the current number and\nthe number that Petya wants to get. Output For the \n    i\n-th test case print\nthe answer on it \u2014 YES if Petya can get the number \n    y\n from the number\n\n    x\n using known spells, and NO otherwise. You may print every letter in\nany case you want (so, for example, the strings yEs, yes, Yes and YES will all\nbe recognized as positive answer). Example Input 7 2 3 1 1 3 6 6 8 1 2 4 1\n31235 6578234 Output YES YES NO YES NO YES YES\n\n",
        "cf_contest_id": 1257,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n2 3\r\n1 1\r\n3 6\r\n6 8\r\n1 2\r\n4 1\r\n31235 6578234\r\n",
                "YES\r\nYES\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2 3\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n5 1000000000\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n4 1000000000\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n98989876 98989877\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n858993461 1000000000\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n1000 23222\r\n",
                "YES\r\n"
            ]
        ]
    }
]