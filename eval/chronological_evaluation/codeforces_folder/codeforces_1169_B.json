[
    {
        "name": "Pairs",
        "description": "Toad Ivan has \n    m\n pairs of integers, each integer is between \n    1\n and\n\n    n\n, inclusive. The pairs are \n    (a_1, b_1), (a_2, b_2), \n    \u2026, (a_m,\n    b_m)\n. He asks you to check if there exist two integers \n    x\n and \n    y\n\n(\n    1 \n    \u2264 x < y \n    \u2264 n\n) such that in each given pair at least one\ninteger is equal to \n    x\n or \n    y\n. Input The first line contains two\nspace-separated integers \n    n\n and \n    m\n (\n    2 \n    \u2264 n \n    \u2264\n    300\n     000\n, \n    1 \n    \u2264 m \n    \u2264 300\n     000\n) \u2014 the upper bound on the\nvalues of integers in the pairs, and the number of given pairs. The next\n\n    m\n lines contain two integers each, the \n    i\n-th of them contains two\nspace-separated integers \n    a_i\n and \n    b_i\n (\n    1 \n    \u2264 a_i, b_i \n    \u2264\n    n, a_i \n    \u2260 b_i\n) \u2014 the integers in the \n    i\n-th pair. Output Output\n\"YES\" if there exist two integers \n    x\n and \n    y\n (\n    1 \n    \u2264 x < y\n    \n    \u2264 n\n) such that in each given pair at least one integer is equal to\n\n    x\n or \n    y\n. Otherwise, print \"NO\". You can print each letter in any\ncase (upper or lower). Examples Input 4 6 1 2 1 3 1 4 2 3 2 4 3 4 Output NO\nInput 5 4 1 2 2 3 3 4 4 5 Output YES Input 300000 5 1 2 1 2 1 2 1 2 1 2 Output\nYES Note In the first example, you can't choose any \n    x\n, \n    y\n because\nfor each such pair you can find a given pair where both numbers are different\nfrom chosen integers. In the second example, you can choose \n    x=2\n and\n\n    y=4\n. In the third example, you can choose \n    x=1\n and \n    y=2\n.\n\n",
        "cf_contest_id": 1169,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "graphs",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 6\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n3 4\r\n",
                "NO\r\n"
            ],
            [
                "5 4\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n",
                "YES\r\n"
            ],
            [
                "300000 5\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n",
                "YES\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1 2\r\n",
                "YES\r\n"
            ],
            [
                "6 9\r\n6 2\r\n4 2\r\n3 6\r\n4 6\r\n2 6\r\n1 4\r\n2 6\r\n4 5\r\n4 2\r\n",
                "YES\r\n"
            ],
            [
                "4 6\r\n3 4\r\n4 2\r\n3 2\r\n2 1\r\n1 2\r\n3 1\r\n",
                "YES\r\n"
            ],
            [
                "5 8\r\n3 2\r\n5 3\r\n1 4\r\n4 5\r\n3 1\r\n4 2\r\n3 5\r\n2 4\r\n",
                "YES\r\n"
            ],
            [
                "4 8\r\n1 4\r\n1 3\r\n3 2\r\n4 3\r\n2 3\r\n1 3\r\n2 4\r\n4 1\r\n",
                "YES\r\n"
            ],
            [
                "9 10\r\n6 5\r\n9 8\r\n7 8\r\n4 5\r\n5 8\r\n3 5\r\n7 8\r\n9 8\r\n8 5\r\n1 5\r\n",
                "YES\r\n"
            ],
            [
                "7 5\r\n6 5\r\n1 4\r\n6 5\r\n4 5\r\n7 4\r\n",
                "YES\r\n"
            ],
            [
                "7 5\r\n6 4\r\n1 4\r\n6 4\r\n2 4\r\n6 4\r\n",
                "YES\r\n"
            ],
            [
                "7 5\r\n6 1\r\n1 3\r\n2 1\r\n7 3\r\n7 1\r\n",
                "YES\r\n"
            ],
            [
                "7 5\r\n7 1\r\n5 1\r\n2 7\r\n1 3\r\n6 7\r\n",
                "YES\r\n"
            ],
            [
                "7 5\r\n1 6\r\n1 3\r\n7 3\r\n7 1\r\n2 1\r\n",
                "YES\r\n"
            ],
            [
                "4 1\r\n1 2\r\n",
                "YES\r\n"
            ],
            [
                "4 2\r\n1 2\r\n3 4\r\n",
                "YES\r\n"
            ],
            [
                "4 4\r\n1 2\r\n3 4\r\n1 4\r\n2 3\r\n",
                "YES\r\n"
            ],
            [
                "4 5\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n",
                "YES\r\n"
            ],
            [
                "4 3\r\n1 2\r\n1 3\r\n1 4\r\n",
                "YES\r\n"
            ],
            [
                "4 3\r\n1 2\r\n2 3\r\n3 1\r\n",
                "YES\r\n"
            ],
            [
                "4 2\r\n1 2\r\n2 3\r\n",
                "YES\r\n"
            ],
            [
                "4 4\r\n1 2\r\n2 3\r\n3 1\r\n1 4\r\n",
                "YES\r\n"
            ],
            [
                "4 3\r\n1 2\r\n2 3\r\n3 4\r\n",
                "YES\r\n"
            ],
            [
                "5 10\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 3\r\n2 4\r\n2 5\r\n3 4\r\n3 5\r\n4 5\r\n",
                "NO\r\n"
            ],
            [
                "5 9\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 4\r\n2 5\r\n3 4\r\n3 5\r\n4 5\r\n",
                "NO\r\n"
            ],
            [
                "5 8\r\n1 2\r\n1 3\r\n2 3\r\n2 4\r\n2 5\r\n3 4\r\n3 5\r\n4 5\r\n",
                "NO\r\n"
            ],
            [
                "10 10\r\n1 3\r\n1 3\r\n1 3\r\n1 3\r\n1 3\r\n2 3\r\n1 5\r\n2 6\r\n2 7\r\n2 9\r\n",
                "YES\r\n"
            ],
            [
                "5 7\r\n1 5\r\n1 5\r\n5 2\r\n5 2\r\n5 2\r\n3 2\r\n1 4\r\n",
                "YES\r\n"
            ],
            [
                "100 2\r\n1 2\r\n1 2\r\n",
                "YES\r\n"
            ]
        ]
    }
]