[
    {
        "name": "Bricks and Bags",
        "description": "There are \n    n\n bricks numbered from \n    1\n to \n    n\n. Brick \n    i\n has a\nweight of \n    a_i\n. Pak Chanek has \n    3\n bags numbered from \n    1\n to\n\n    3\n that are initially empty. For each brick, Pak Chanek must put it into\none of the bags. After this, each bag must contain at least one brick. After\nPak Chanek distributes the bricks, Bu Dengklek will take exactly one brick\nfrom each bag. Let \n    w_j\n be the weight of the brick Bu Dengklek takes from\nbag \n    j\n. The score is calculated as \n    |w_1 - w_2| + |w_2 - w_3|\n, where\n\n    |x|\n denotes the absolute value of \n    x\n. It is known that Bu Dengklek\nwill take the bricks in such a way that minimises the score. What is the\nmaximum possible final score if Pak Chanek distributes the bricks optimally?\nInput Each test contains multiple test cases. The first line contains an\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2 \n    \u00b7 10^4\n) \u2014 the number of test\ncases. The following lines contain the description of each test case. The\nfirst line of each test case contains an integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264\n    2 \n    \u00b7 10^5\n) \u2014 the number of bricks. The second line of each test case\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 10^9\n) \u2014 the weights of the bricks. It is guaranteed that the sum of\n\n    n\n over all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For\neach test case, output a line containing an integer representing the maximum\npossible final score if Pak Chanek distributes the bricks optimally. Example\nInput 3 5 3 1 5 2 3 4 17 8 19 45 8 265 265 265 265 265 265 265 265 Output 6 63\n0 Note In the first test case, one way of achieving a final score of \n    6\n\nis to do the following: Put bricks \n    1\n, \n    4\n, and \n    5\n into bag\n\n    1\n. Put brick \n    3\n into bag \n    2\n. Put brick \n    2\n into bag\n\n    3\n. If Pak Chanek distributes the bricks that way, a way Bu Dengklek can\ntake the bricks is: Take brick \n    5\n from bag \n    1\n. Take brick \n    3\n\nfrom bag \n    2\n. Take brick \n    2\n from bag \n    3\n. The score is \n    |a_5 -\n    a_3| + |a_3 - a_2| = |3 - 5| + |5 - 1| = 6\n. It can be shown that Bu\nDengklek cannot get a smaller score from this distribution. It can be shown\nthat there is no other distribution that results in a final score bigger than\n\n    6\n.\n\n",
        "cf_contest_id": 1740,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "games",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n5\r\n3 1 5 2 3\r\n4\r\n17 8 19 45\r\n8\r\n265 265 265 265 265 265 265 265\r\n",
                "6\r\n63\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]