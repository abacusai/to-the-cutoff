[
    {
        "name": "Chaotic Merge",
        "description": "You are given two strings \n    x\n and \n    y\n, both consist only of lowercase\nLatin letters. Let \n    |s|\n be the length of string \n    s\n. Let's call a\nsequence \n    a\n a merging sequence if it consists of exactly \n    |x|\n zeros\nand exactly \n    |y|\n ones in some order. A merge \n    z\n is produced from a\nsequence \n    a\n by the following rules: if \n    a_i=0\n, then remove a letter\nfrom the beginning of \n    x\n and append it to the end of \n    z\n; if\n\n    a_i=1\n, then remove a letter from the beginning of \n    y\n and append it\nto the end of \n    z\n. Two merging sequences \n    a\n and \n    b\n are different\nif there is some position \n    i\n such that \n    a_i \n    \u2260 b_i\n. Let's call a\nstring \n    z\n chaotic if for all \n    i\n from \n    2\n to \n    |z|\n \n    z_i-1\n    \u2260 z_i\n. Let \n    s[l,r]\n for some \n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 |s|\n be\na substring of consecutive letters of \n    s\n, starting from position \n    l\n\nand ending at position \n    r\n inclusive. Let \n    f(l_1, r_1, l_2, r_2)\n be\nthe number of different merging sequences of \n    x[l_1,r_1]\n and\n\n    y[l_2,r_2]\n that produce chaotic merges. Note that only non-empty\nsubstrings of \n    x\n and \n    y\n are considered. Calculate \n    \u2211\n    _1 \n    \u2264 l_1 \n    \u2264 r_1 \n    \u2264 |x| \n    \n    \n     1 \n    \u2264 l_2 \n    \u2264 r_2 \n    \u2264\n    |y| f(l_1, r_1, l_2, r_2)\n. Output the answer modulo\n\n    998\n     244\n     353\n. Input The first line contains a string \n    x\n (\n    1\n    \n    \u2264 |x| \n    \u2264 1000\n). The second line contains a string \n    y\n (\n    1\n    \n    \u2264 |y| \n    \u2264 1000\n). Both strings consist only of lowercase Latin\nletters. Output Print a single integer \u2014 the sum of \n    f(l_1, r_1, l_2,\n    r_2)\n over \n    1 \n    \u2264 l_1 \n    \u2264 r_1 \n    \u2264 |x|\n and \n    1 \n    \u2264 l_2 \n    \u2264\n    r_2 \n    \u2264 |y|\n modulo \n    998\n     244\n     353\n. Examples Input aaa bb Output\n24 Input code forces Output 1574 Input aaaaa aaa Output 0 Input\njustamassivetesttocheck howwellyouhandlemodulooperations Output 667387032 Note\nIn the first example there are: \n    6\n pairs of substrings \"a\" and \"b\", each\nwith valid merging sequences \"01\" and \"10\"; \n    3\n pairs of substrings \"a\"\nand \"bb\", each with a valid merging sequence \"101\"; \n    4\n pairs of\nsubstrings \"aa\" and \"b\", each with a valid merging sequence \"010\"; \n    2\n\npairs of substrings \"aa\" and \"bb\", each with valid merging sequences \"0101\"\nand \"1010\"; \n    2\n pairs of substrings \"aaa\" and \"b\", each with no valid\nmerging sequences; \n    1\n pair of substrings \"aaa\" and \"bb\" with a valid\nmerging sequence \"01010\"; Thus, the answer is \n    6 \n    \u00b7 2 + 3 \n    \u00b7 1 + 4\n    \n    \u00b7 1 + 2 \n    \u00b7 2 + 2 \n    \u00b7 0 + 1 \n    \u00b7 1 = 24\n.\n\n",
        "cf_contest_id": 1499,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "math",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "aaa\r\nbb\r\n",
                "24"
            ],
            [
                "code\r\nforces\r\n",
                "1574"
            ],
            [
                "aaaaa\r\naaa\r\n",
                "0"
            ],
            [
                "justamassivetesttocheck\r\nhowwellyouhandlemodulooperations\r\n",
                "667387032"
            ]
        ],
        "private_cases": [
            [
                "abbbaabbba\r\nbaaaababbb\r\n",
                "847"
            ],
            [
                "aaaccabcbc\r\nabcbabbbaa\r\n",
                "14352"
            ],
            [
                "zkccmpbrfadhkukfvkci\r\nfopwpsbztb\r\n",
                "202670160"
            ],
            [
                "nclmevhtio\r\nefnepwqphvwxiyguotuk\r\n",
                "252708203"
            ]
        ]
    }
]