[
    {
        "name": "Postcards and photos",
        "description": "Polycarpus has postcards and photos hung in a row on the wall. He decided to\nput them away to the closet and hang on the wall a famous painter's picture.\nPolycarpus does it like that: he goes from the left to the right and removes\nthe objects consecutively. As Polycarpus doesn't want any mix-ups to happen,\nhe will not carry in his hands objects of two different types. In other words,\nPolycarpus can't carry both postcards and photos simultaneously. Sometimes he\ngoes to the closet and puts the objects there, thus leaving his hands free.\nPolycarpus must put all the postcards and photos to the closet. He cannot skip\nobjects. What minimum number of times he should visit the closet if he cannot\ncarry more than 5 items? Input The only line of the input data contains a non-\nempty string consisting of letters \"\u0421\" and \"P\" whose length does not exceed\n100 characters. If the i-th character in the string is the letter \"\u0421\", that\nmeans that the i-th object (the numbering goes from the left to the right) on\nPolycarpus' wall is a postcard. And if the i-th character is the letter \"P\",\nthan the i-th object on the wall is a photo. Output Print the only number \u2014\nthe minimum number of times Polycarpus has to visit the closet. Examples Input\nCPCPCPC Output 7 Input CCCCCCPPPPPP Output 4 Input CCCCCCPPCPPPPPPPPPP Output\n6 Input CCCCCCCCCC Output 2 Note In the first sample Polycarpus needs to take\none item to the closet 7 times. In the second sample Polycarpus can first take\n3 postcards to the closet; then 3 more. He can take the 6 photos that are left\nin the similar way, going to the closet twice. In the third sample Polycarpus\ncan visit the closet twice, both times carrying 3 postcards. Then he can take\nthere 2 photos at once, then one postcard and finally, he can carry the last\n10 photos if he visits the closet twice. In the fourth sample Polycarpus can\nvisit the closet twice and take there all 10 postcards (5 items during each\ngo).\n\n",
        "cf_contest_id": 137,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "CPCPCPC\r\n",
                "7\r\n"
            ],
            [
                "CCCCCCPPPPPP\r\n",
                "4\r\n"
            ],
            [
                "CCCCCCPPCPPPPPPPPPP\r\n",
                "6\r\n"
            ],
            [
                "CCCCCCCCCC\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\r\n",
                "20\r\n"
            ],
            [
                "CPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCPCP\r\n",
                "100\r\n"
            ],
            [
                "CCCCCCPPPPPPCCCCCCPPPPPPCCCCCCPPPPPPCCCCCCPPPPPPCCCCCCPPPPPPCCCCCCPPPPPPCCCCCCPPPPPP\r\n",
                "28\r\n"
            ],
            [
                "P\r\n",
                "1\r\n"
            ],
            [
                "C\r\n",
                "1\r\n"
            ],
            [
                "PC\r\n",
                "2\r\n"
            ],
            [
                "PPPPP\r\n",
                "1\r\n"
            ],
            [
                "PPPP\r\n",
                "1\r\n"
            ],
            [
                "CCCCCCCCCC\r\n",
                "2\r\n"
            ],
            [
                "CP\r\n",
                "2\r\n"
            ],
            [
                "CPCCPCPPPC\r\n",
                "7\r\n"
            ],
            [
                "PPCPCCPCPPCCPPPPPPCP\r\n",
                "12\r\n"
            ],
            [
                "PCPCCPCPPCCPCPCCPPPPPCPCPCPCCC\r\n",
                "20\r\n"
            ],
            [
                "CCPPPPPCPCCPPPCCPPCPCCPCPPCPPCCCPPCPPPCC\r\n",
                "21\r\n"
            ],
            [
                "CPPCCCCCCPCCCCPCCPCPPPCPCCCCCCCPCCPPCCCPCCCCCPPCCC\r\n",
                "23\r\n"
            ],
            [
                "PPCCCCPPCCPPPCCCCPPPPPCPPPCPPPCCCPCCCPCPPPCPCCCPCCPPCCPPPPPC\r\n",
                "26\r\n"
            ],
            [
                "PPCPPCCCCCPCCCPCCPCCCCPPPCCCCPCPCCPCPCPCPPPPCCPPPPPPPCPCPPPCPCPCPCPPPC\r\n",
                "39\r\n"
            ],
            [
                "CCPCPPPPCPPPPCCCCPCCPCPCCPPCPCCCPPCCCCPCCCPCPCCPPPCPPPCPCPPPPPCPCCPCCPPCCCPCPPPC\r\n",
                "43\r\n"
            ],
            [
                "CCPPCPCPCPPCCCPCPPPCCCCCPCPPCCCPPCPCPPPPCPPCPPPPCCCPCCPCPPPCPCPPCCCPCCCCCCPCCCCPCCPPPPCCPP\r\n",
                "47\r\n"
            ],
            [
                "PPCPPPPCCCCPPPPCPPPPPPPPCPCPPCCPPPPPPPPCPPPPCCCCPPPPCPPCPCPPPCCPPCPPCCCPCPPCCCCCCPCPCPCPPCPCPCPPPCCC\r\n",
                "49\r\n"
            ],
            [
                "CCPCCCPPCPPCPCCCPCPPCPPCPPCCCCCCCPCPPCPCCPCCPCPCPCCCPCCCPPPCCPCCPPCCCCCPPPPCPCPPCPCPCCPCPPP\r\n",
                "53\r\n"
            ],
            [
                "PCPCPPPPCPCPPPCPPCCCPCPCPCPPCPPPPCCPPPCPPPCPPPPCCPPCCCPCCPCCCCPCCPCPPCPCCCPCPPCP\r\n",
                "47\r\n"
            ],
            [
                "PCCPPCCCPPCPPCC\r\n",
                "8\r\n"
            ],
            [
                "CCCPPPPPPCCCCPCCPCCCCCCPCCCPPPCPC\r\n",
                "15\r\n"
            ],
            [
                "CPPCCPPCCPPPCCCPPPPCPPPPPPPCCPCPCCPPPPCCCPPCCPCCPPCCCPCCPCPPPPCCPP\r\n",
                "31\r\n"
            ],
            [
                "CCCCCPPPCCPCPCCPPPPCPCCCPCPPCPCPPPPPCCPCPCPC\r\n",
                "25\r\n"
            ],
            [
                "PPPPPPPPPCPCP\r\n",
                "6\r\n"
            ],
            [
                "PPPCPCPCCCPPCPCCPPPPCCCPCCP\r\n",
                "15\r\n"
            ],
            [
                "PCPCCPCPPPPPPCPCCPCPCPCCPPPCPCPCPPCPPCCPCPCCCPCCCPPCPCPCCPCPPPPCCCCCCPPCCPCCCCCPCCCCPPPCPCCCCCPCPCP\r\n",
                "59\r\n"
            ],
            [
                "PCCPCPPCCCCCPCCCPCCCPPCCCCCPPPCCPPPPPPPPCPPPCCPPCPPCPCP\r\n",
                "26\r\n"
            ],
            [
                "CPCPCCPPPPCCPPCPPCPPCCCCCCPCCPPPCPPCPCCCCCCPCPCCCCCPCCCCCCPCCPPCCP\r\n",
                "35\r\n"
            ],
            [
                "PPCCCCCCPP\r\n",
                "4\r\n"
            ],
            [
                "CCCCCCCCCCCCPPCCCCPP\r\n",
                "6\r\n"
            ],
            [
                "PPPPPPPPPPPCCCCCCCCCCCCCCCCCCP\r\n",
                "8\r\n"
            ],
            [
                "PPPPPPPPPPPPPPPPPPPPPCCCCCCCCCCCPPPPCCCC\r\n",
                "10\r\n"
            ],
            [
                "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCCCCCPPPC\r\n",
                "12\r\n"
            ],
            [
                "CCCCCCCCCPPPPPPPPPPPPPPPPPPPPCCCCCCCCCCCCCCCCCCCCCCCCPPPPPCC\r\n",
                "13\r\n"
            ],
            [
                "CCCCCCCCCCCCCCCCCCCCCCCCCPPPCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\r\n",
                "15\r\n"
            ],
            [
                "CCCCCPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCCCCCCCCCPPPPPPPCCPPP\r\n",
                "18\r\n"
            ],
            [
                "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCCCCCCCCCCCCCCCCCCCCCCCPPPPPPPPPPPPPPPPPPP\r\n",
                "19\r\n"
            ],
            [
                "PPPPPPPPPPPPPPPPPPPPPPPCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCPPPPPCCCPPPPCCCCCPCC\r\n",
                "23\r\n"
            ]
        ]
    }
]