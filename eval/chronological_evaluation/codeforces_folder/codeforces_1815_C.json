[
    {
        "name": "Between",
        "description": "You are given an integer \n    n\n, as well as \n    m\n pairs of integers\n\n    (a_i,b_i)\n, where \n    1\n    \u2264 a_i , b_i \n    \u2264 n\n, \n    a_i \n     b_i\n.\nYou want to construct a sequence satisfying the following requirements: All\nelements in the sequence are integers between \n    1\n and \n    n\n. There is\nexactly one element with value \n    1\n in the sequence. For each \n    i\n (\n    1\n    \n    \u2264 i \n    \u2264 m\n), between any two elements (on different positions) in the\nsequence with value \n    a_i\n, there is at least one element with value\n\n    b_i\n. The sequence constructed has the maximum length among all possible\nsequences satisfying the above properties. Sometimes, it is possible that such\na sequence can be arbitrarily long, in which case you should output\n\"INFINITE\". Otherwise, you should output \"FINITE\" and the sequence itself. If\nthere are multiple possible constructions that yield the maximum length,\noutput any. Input Each test consists of multiple test cases. The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 300\n) \u2014 the number of\ntest cases. The description of test cases follows. The first line of each test\ncase contains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 1500\n,\n\n    0 \n    \u2264 m \n    \u2264 5000\n) \u2014 the maximum possible value of the element of the\nsequence and the number of pairs. The \n    i\n-th of the next \n    m\n lines\ncontain two integers \n    a_i\n and \n    b_i\n (\n    1 \n    \u2264 a_i , b_i \n    \u2264 n\n,\n\n    a_i \n     b_i\n). \n    (a_i, b_i) \n     (a_j, b_j)\n for all \n    1 \n    \u2264 i <\n    j \n    \u2264 m\n. It is guaranteed that sum of \n    n\n over all test cases doesn't\nexceed \n    1500\n and the sum of \n    m\n over all test cases doesn't exceed\n\n    5000\n. Output For each test case, on the first line output \"INFINITE\" if\nthe sequence can be arbitrarily long, and \"FINITE\" otherwise. If you have\noutputted \"FINITE\", then your output should be followed by \n    2\n lines. The\nfirst line contains an integer \n    s\n, the maximum length of the sequence.\nThe second line contains \n    s\n integers, each are between \n    1\n and\n\n    n\n inclusive, representing the elements of the sequence. If there are\nmultiple sequences with the maximum length, output any of them. It can be\nshown that, for all test cases with answer \"FINITE\", then under the\nconstraints, the maximum possible sum of sequence lengths of those test cases\ndoes not exceed \n    2\n    \u00b710^6\n. Example Input 5 3 2 3 1 2 1 1 0 2 0 2 2 1\n2 2 1 5 5 2 1 3 1 4 2 4 5 5 1 Output FINITE 5 2 3 1 2 3 FINITE 1 1 INFINITE\nFINITE 3 2 1 2 FINITE 10 4 2 3 5 4 1 3 2 5 4 Note In the first test case,\nthere is an element \n    1\n between two elements with value \n    3\n and an\nelement \n    1\n between two elements with value \n    2\n. It can be shown that\nthere is no suitable sequences of length more than \n    5\n. In the second\ncase, \n    [1]\n is the only possible sequence because there should be exactly\none element with value \n    1\n in the sequence. In the third case, we can get\nan arbitrary long sequence like \n    1, 2, 2, 2, \n    \u2026\n.\n\n",
        "cf_contest_id": 1815,
        "cf_index": "C",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3 2\r\n3 1\r\n2 1\r\n1 0\r\n2 0\r\n2 2\r\n1 2\r\n2 1\r\n5 5\r\n2 1\r\n3 1\r\n4 2\r\n4 5\r\n5 1\r\n",
                "FINITE\r\n5\r\n3 2 1 3 2 \r\nFINITE\r\n1\r\n1 \r\nINFINITE\r\nFINITE\r\n3\r\n2 1 2 \r\nFINITE\r\n10\r\n4 2 3 5 4 1 2 3 5 4 \r\n"
            ]
        ],
        "private_cases": []
    }
]