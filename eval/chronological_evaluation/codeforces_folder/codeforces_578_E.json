[
    {
        "name": "Walking!",
        "description": "There is a sand trail in front of Alice's home. In daytime, people walk over\nit and leave a footprint on the trail for their every single step. Alice\ncannot distinguish the order of the footprints, but she can tell whether each\nfootprint is made by left foot or right foot. Also she's certain that all\npeople are walking by alternating left foot and right foot. For example,\nsuppose that one person walked through the trail and left some footprints. The\nfootprints are RRLRL in order along the trail ('R' means right foot and 'L'\nmeans left foot). You might think the outcome of the footprints is strange.\nBut in fact, some steps are resulting from walking backwards! There are some\npossible order of steps that produce these footprints such as 1 \u2192 3 \u2192 2 \u2192 5 \u2192\n4 or 2 \u2192 3 \u2192 4 \u2192 5 \u2192 1 (we suppose that the distance between two consecutive\nsteps can be arbitrarily long). The number of backward steps from above two\nexamples are 2 and 1 separately. Alice is interested in these footprints.\nWhenever there is a person walking trough the trail, she takes a picture of\nall these footprints along the trail and erase all of them so that next person\nwill leave a new set of footprints. We know that people walk by alternating\nright foot and left foot, but we don't know if the first step is made by left\nfoot or right foot. Alice wants to know the minimum possible number of\nbackward steps made by a person. But it's a little hard. Please help Alice to\ncalculate it. You also need to construct one possible history of these\nfootprints. Input Only one line containing the string S (1 \u2264 |S| \u2264 100 000)\ncontaining all footprints in order along the trail from entrance to exit. It\nis guaranteed that there is at least one possible footprint history. Output\nYou should output 2 lines. The first line should contain a number denoting the\nminimum number of backward steps. The second line should contain a permutation\nof integers from 1 to |S|. This permutation should denote the order of\nfootprints that may possible be used by person walked there. If there are\nseveral possible answers, you may output any of them. Examples Input RRLRL\nOutput 1 2 5 1 3 4 Input RLRLRLRLR Output 0 1 2 3 4 5 6 7 8 9 Input RRRRRLLLL\nOutput 4 4 9 3 8 2 7 1 6 5 Note For the first sample, one possible order is 2\n\u2192 5 \u2192 1 \u2192 3 \u2192 4, among them only the step 5 \u2192 1 is backward step so the answer\nis 1. For the second example one possible order is just to follow the order of\ninput, thus there are no backward steps. For the third sample, there will be 4\nbackward steps because every step from L to R will be a backward step.\n\n",
        "cf_contest_id": 578,
        "cf_index": "E",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "RRLRL\r\n",
                "1\r\n1 3 4 5 2 "
            ],
            [
                "RLRLRLRLR\r\n",
                "0\r\n1 2 3 4 5 6 7 8 9 "
            ],
            [
                "RRRRRLLLL\r\n",
                "4\r\n1 6 2 7 3 8 4 9 5 "
            ]
        ],
        "private_cases": [
            [
                "RRLLRRRRLLRRLLRRLLLLRRLL\r\n",
                "3\r\n1 3 6 9 12 13 16 17 2 4 5 10 11 14 15 18 7 19 22 23 8 20 21 24 "
            ],
            [
                "RRLRRRLLRRLRRRLRLLRRLLLRRRLLRLRRRLRLLRRRRRLLLLRLRRRLRRRLRLRLLLRLLLLLRRLRLLLRRLLLLLRLRRLRRLLLRLLRRLRL\r\n",
                "11\r\n1 3 4 7 10 11 12 15 16 17 20 21 26 27 32 34 35 36 39 43 54 56 57 58 59 60 2 8 9 18 19 22 25 28 29 30 31 37 38 44 51 52 53 61 5 23 24 45 50 62 63 64 6 46 47 48 49 65 13 66 14 67 70 71 72 73 33 68 69 74 77 78 40 75 76 79 41 80 89 90 42 81 86 87 88 91 97 98 99 100 55 82 83 84 85 92 93 94 96 95 "
            ],
            [
                "L\r\n",
                "0\r\n1 "
            ],
            [
                "R\r\n",
                "0\r\n1 "
            ],
            [
                "LLLLRRRRRRLLLLLLRRRRR\r\n",
                "5\r\n9 15 18 1 5 14 19 2 6 13 20 3 7 12 21 4 8 11 10 16 17 "
            ],
            [
                "RLRRLLLRLRLRR\r\n",
                "2\r\n1 2 3 5 13 7 4 6 8 9 10 11 12 "
            ],
            [
                "LR\r\n",
                "0\r\n1 2 "
            ],
            [
                "RL\r\n",
                "0\r\n1 2 "
            ],
            [
                "LLRRRLLRRRLL\r\n",
                "3\r\n1 3 7 8 12 5 2 4 6 9 11 10 "
            ],
            [
                "RRLLLRRLLLRR\r\n",
                "3\r\n5 1 3 7 8 12 10 2 4 6 9 11 "
            ],
            [
                "RRLLR\r\n",
                "1\r\n1 3 2 4 5 "
            ],
            [
                "LLRRL\r\n",
                "1\r\n1 3 2 4 5 "
            ]
        ]
    }
]