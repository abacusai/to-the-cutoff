[
    {
        "name": "Sum of Paths",
        "description": "There are \n    n\n cells, numbered \n    1,2,\n    \u2026, n\n from left to right. You\nhave to place a robot at any cell initially. The robot must make exactly\n\n    k\n moves. In one move, the robot must move one cell to the left or right,\nprovided that it doesn't move out of bounds. In other words, if the robot was\nin the cell \n    i\n, it must move to either the cell \n    i-1\n or the cell\n\n    i+1\n, as long as it lies between \n    1\n and \n    n\n (endpoints\ninclusive). The cells, in the order they are visited (including the cell the\nrobot is placed), together make a good path. Each cell \n    i\n has a value\n\n    a_i\n associated with it. Let \n    c_0, c_1, \n    \u2026, c_k\n be the sequence\nof cells in a good path in the order they are visited (\n    c_0\n is the cell\nrobot is initially placed, \n    c_1\n is the cell where the robot is after its\nfirst move, and so on; more formally, \n    c_i\n is the cell that the robot is\nat after \n    i\n moves). Then the value of the path is calculated as\n\n    a_c_0 + a_c_1 + \n    \u2026 + a_c_k\n. Your task is to calculate the sum\nof values over all possible good paths. Since this number can be very large,\noutput it modulo \n    10^9 + 7\n. Two good paths are considered different if\nthe starting cell differs or there exists an integer \n    i \n    \u2208 [1, k]\n such\nthat the current cell of the robot after exactly \n    i\n moves is different in\nthose paths. You must process \n    q\n updates to \n    a\n and print the updated\nsum each time. Each update changes the value of exactly one cell. See the\ninput format and the sample input-output for more details. Input The first\nline of the input contains three space-separated integers \n    n\n, \n    k\n and\n\n    q\n (\n    2 \n    \u2264 n \n    \u2264 5000\n; \n    1 \n    \u2264 k \n    \u2264 5000\n; \n    1 \n    \u2264 q\n    \n    \u2264 2 \n    \u00b7 10^5\n). The second line of the input contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n). \n    q\n\nlines follow. Each line contains two space-separated integers \n    i\n and\n\n    x\n (\n    1 \n    \u2264 i \n    \u2264 n\n; \n    1 \n    \u2264 x \n    \u2264 10^9\n) indicating that\nyou must change the value of \n    a_i\n to \n    x\n. Output Print \n    q\n\nintegers. The \n    i\n-th integer should be the sum of values over all good\npaths after the first \n    i\n updates are performed. Since the answers may be\nlarge, print them modulo \n    10^9 + 7\n. Examples Input 5 1 5 3 5 1 4 2 1 9 2\n4 3 6 4 6 5 2 Output 62 58 78 86 86 Input 5 2 5 3 5 1 4 2 1 9 2 4 3 6 4 6 5 2\nOutput 157 147 207 227 227 Input 4 40 6 92 21 82 46 3 56 1 72 4 28 1 97 2 49 2\n88 Output 239185261 666314041 50729936 516818968 766409450 756910476 Note In\nthe first example, the good paths are \n    (1, 2), (2, 1), (2, 3), (3, 2), (3,\n    4), (4, 3), (4, 5), (5, 4)\n. Initially the values of \n    a\n are \n    [3, 5,\n    1, 4, 2]\n. After the first update, they become \n    [9, 5, 1, 4, 2]\n. After\nthe second update, they become \n    [9, 4, 1, 4, 2]\n, and so on.\n\n",
        "cf_contest_id": 1467,
        "cf_index": "D",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "5 1 5\r\n3 5 1 4 2\r\n1 9\r\n2 4\r\n3 6\r\n4 6\r\n5 2\r\n",
                "62\r\n58\r\n78\r\n86\r\n86\r\n"
            ],
            [
                "5 2 5\r\n3 5 1 4 2\r\n1 9\r\n2 4\r\n3 6\r\n4 6\r\n5 2\r\n",
                "157\r\n147\r\n207\r\n227\r\n227\r\n"
            ],
            [
                "4 40 6\r\n92 21 82 46\r\n3 56\r\n1 72\r\n4 28\r\n1 97\r\n2 49\r\n2 88\r\n",
                "239185261\r\n666314041\r\n50729936\r\n516818968\r\n766409450\r\n756910476\r\n"
            ]
        ],
        "private_cases": []
    }
]