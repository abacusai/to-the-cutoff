[
    {
        "name": "Need For Brake",
        "description": "Vasya plays the Need For Brake. He plays because he was presented with a new\ncomputer wheel for birthday! Now he is sure that he will win the first place\nin the championship in his favourite racing computer game! n racers take part\nin the championship, which consists of a number of races. After each race\nracers are arranged from place first to n-th (no two racers share the same\nplace) and first m places are awarded. Racer gains bi points for i-th awarded\nplace, which are added to total points, obtained by him for previous races. It\nis known that current summary score of racer i is ai points. In the final\nstandings of championship all the racers will be sorted in descending order of\npoints. Racers with an equal amount of points are sorted by increasing of the\nname in lexicographical order. Unfortunately, the championship has come to an\nend, and there is only one race left. Vasya decided to find out what the\nhighest and lowest place he can take up as a result of the championship. Input\nThe first line contains number n (1 \u2264 n \u2264 10^5) \u2014 number of racers. Each of\nthe next n lines contains si and ai \u2014 nick of the racer (nonempty string,\nwhich consist of no more than 20 lowercase Latin letters) and the racer's\npoints (0 \u2264 ai \u2264 10^6). Racers are given in the arbitrary order. The next line\ncontains the number m (0 \u2264 m \u2264 n). Then m nonnegative integer numbers bi\nfollow. i-th number is equal to amount of points for the i-th awarded place (0\n\u2264 bi \u2264 10^6). The last line contains Vasya's racer nick. Output Output two\nnumbers \u2014 the highest and the lowest place Vasya can take up as a result of\nthe championship. Examples Input 3 teama 10 teamb 20 teamc 40 2 10 20 teama\nOutput 2 3 Input 2 teama 10 teamb 10 2 10 10 teamb Output 2 2\n\n",
        "cf_contest_id": 73,
        "cf_index": "B",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\nteama 10\r\nteamb 20\r\nteamc 40\r\n2\r\n10 20\r\nteama\r\n",
                "2 3\r\n"
            ],
            [
                "2\r\nteama 10\r\nteamb 10\r\n2\r\n10 10\r\nteamb\r\n",
                "2 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\nteamc 8\r\nteamd 7\r\nteame 15\r\nteama 3\r\nteamb 21\r\n3\r\n1 2 3\r\nteamb\r\n",
                "1 1\r\n"
            ],
            [
                "10\r\njcfdh 1000000\r\nchk 1000000\r\nkga 1000000\r\nbeh 1000000\r\ngeg 1000000\r\nhaj 1000000\r\nagah 1000000\r\ndhk 1000000\r\nhj 1000000\r\ndb 1000000\r\n5\r\n1000000 1000000 1000000 1000000 1000000\r\ndb\r\n",
                "1 9\r\n"
            ]
        ]
    }
]