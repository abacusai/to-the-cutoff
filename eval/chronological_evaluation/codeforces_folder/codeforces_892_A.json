[
    {
        "name": "Greed",
        "description": "Jafar has n cans of cola. Each can is described by two integers: remaining\nvolume of cola ai and can's capacity bi (ai \u2264 bi). Jafar has decided to pour\nall remaining cola into just 2 cans, determine if he can do this or not! Input\nThe first line of the input contains one integer n (2 \u2264 n \u2264 100 000) \u2014 number\nof cola cans. The second line contains n space-separated integers a1, a2, ...,\nan (0 \u2264 ai \u2264 10^9) \u2014 volume of remaining cola in cans. The third line contains\nn space-separated integers that b1, b2, ..., bn (ai \u2264 bi \u2264 10^9) \u2014 capacities\nof the cans. Output Print \"YES\" (without quotes) if it is possible to pour all\nremaining cola in 2 cans. Otherwise print \"NO\" (without quotes). You can print\neach letter in any case (upper or lower). Examples Input 2 3 5 3 6 Output YES\nInput 3 6 8 9 6 10 12 Output NO Input 5 0 0 5 0 0 1 1 8 10 5 Output YES Input\n4 4 1 0 3 5 2 2 3 Output YES Note In the first sample, there are already 2\ncans, so the answer is \"YES\".\n\n",
        "cf_contest_id": 892,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n3 5\r\n3 6\r\n",
                "YES\r\n"
            ],
            [
                "3\r\n6 8 9\r\n6 10 12\r\n",
                "NO\r\n"
            ],
            [
                "5\r\n0 0 5 0 0\r\n1 1 8 10 5\r\n",
                "YES\r\n"
            ],
            [
                "4\r\n4 1 0 3\r\n5 2 2 3\r\n",
                "YES\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n9 10 24 11 1 7 8 3 28 14\r\n86 20 34 11 22 94 8 16 73 85\r\n",
                "YES\r\n"
            ],
            [
                "4\r\n25 35 7 31\r\n70 37 43 35\r\n",
                "YES\r\n"
            ],
            [
                "10\r\n15 26 15 14 14 39 40 4 25 39\r\n27 72 16 44 69 48 53 17 63 42\r\n",
                "NO\r\n"
            ],
            [
                "5\r\n22 5 19 16 32\r\n26 10 43 38 37\r\n",
                "NO\r\n"
            ],
            [
                "5\r\n32 4 22 40 26\r\n39 20 36 98 44\r\n",
                "YES\r\n"
            ],
            [
                "6\r\n18 25 3 10 13 37\r\n38 73 19 35 24 37\r\n",
                "YES\r\n"
            ],
            [
                "2\r\n2 2\r\n2 2\r\n",
                "YES\r\n"
            ],
            [
                "2\r\n2 5\r\n2 5\r\n",
                "YES\r\n"
            ],
            [
                "2\r\n1000 1008\r\n10000 2352\r\n",
                "YES\r\n"
            ],
            [
                "5\r\n1 2 3 4 5\r\n1 2 3 4 11\r\n",
                "YES\r\n"
            ],
            [
                "4\r\n1 0 0 0\r\n2 0 0 0\r\n",
                "YES\r\n"
            ],
            [
                "2\r\n0 0\r\n1 2\r\n",
                "YES\r\n"
            ],
            [
                "3\r\n9 13 4\r\n10 14 5\r\n",
                "NO\r\n"
            ],
            [
                "2\r\n0 0\r\n1 1\r\n",
                "YES\r\n"
            ],
            [
                "5\r\n1 1 2 3 1\r\n1 1 2 3 4\r\n",
                "NO\r\n"
            ],
            [
                "2\r\n0 0\r\n0 0\r\n",
                "YES\r\n"
            ],
            [
                "3\r\n5 1 1\r\n5 5 5\r\n",
                "YES\r\n"
            ]
        ]
    }
]