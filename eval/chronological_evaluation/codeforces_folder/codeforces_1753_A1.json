[
    {
        "name": "Make Nonzero Sum (easy version)",
        "description": "This is the easy version of the problem. The difference is that in this\nversion the array can not contain zeros. You can make hacks only if both\nversions of the problem are solved. You are given an array \n    [a_1, a_2,\n    \n    \u2026 a_n]\n consisting of integers \n    -1\n and \n    1\n. You have to\nbuild a partition of this array into the set of segments \n    [l_1, r_1], [l_2,\n    r_2], \n    \u2026, [l_k, r_k]\n with the following property: Denote the\nalternating sum of all elements of the \n    i\n-th segment as \n    s_i\n:\n\n    s_i\n = \n    a_l_i - a_l_i+1 + a_l_i+2 - a_l_i+3 + \n    \u2026\n    \u00b1\n    a_r_i\n. For example, the alternating sum of elements of segment \n    [2,\n    4]\n in array \n    [1, 0, -1, 1, 1]\n equals to \n    0 - (-1) + 1 = 2\n. The\nsum of \n    s_i\n over all segments of partition should be equal to zero. Note\nthat each \n    s_i\n does not have to be equal to zero, this property is about\nsum of \n    s_i\n over all segments of partition. The set of segments \n    [l_1,\n    r_1], [l_2, r_2], \n    \u2026, [l_k, r_k]\n is called a partition of the array\n\n    a\n of length \n    n\n if \n    1 = l_1 \n    \u2264 r_1, l_2 \n    \u2264 r_2, \n    \u2026,\n    l_k \n    \u2264 r_k = n\n and \n    r_i + 1 = l_i+1\n for all \n    i = 1, 2, \n    \u2026\n    k-1\n. In other words, each element of the array must belong to exactly one\nsegment. You have to build a partition of the given array with properties\ndescribed above or determine that such partition does not exist. Note that it\nis not required to minimize the number of segments in the partition. Input\nEach test contains multiple test cases. The first line contains the number of\ntest cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n     000\n). Description of the test\ncases follows. The first line of each test case contains an integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 200\n     000\n) \u2014 the length of the array \n    a\n. The\nsecond line of each test case contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    a_i\n is \n    -1\n or \n    1\n) \u2014 the elements of the given array.\nIt's guaranteed that the sum of \n    n\n over all test cases does not exceed\n\n    200\n     000\n. Output For each test case, if required partition does not\nexist, print \n    -1\n. Otherwise, print an integer \n    k\n \u2014 the number of\nsegments in the partition. Then in the \n    i\n-th of the following \n    k\n\nlines print two integers \n    l_i\n and \n    r_i\n \u2014 description of the\n\n    i\n-th segment. The following conditions should be satisfied: \n    l_i \n    \u2264\n    r_i\n for each \n    i\n from \n    1\n to \n    k\n. \n    l_i + 1 = r_i + 1\n for\neach \n    i\n from \n    1\n to \n    (k - 1)\n. \n    l_1 = 1, r_k = n\n. If there\nare multiple correct partitions of the array, print any of them. Example Input\n4 4 1 1 1 1 6 -1 1 1 1 1 1 3 1 -1 1 1 1 Output 1 1 4 2 1 3 4 6 -1 -1 Note In\nthe first test case we can build a partition of one segment of length \n    4\n.\nThe sum of this segment will be equal to \n    1 - 1 + 1 - 1 = 0\n. In the\nsecond test case we can build a partition of two segments of length \n    3\n.\nThe sum of the first segment will be equal to \n    -1 -1 + 1 = -1\n, and the\nsum of the second segment: \n    1 - 1 + 1 = 1\n. So, the total sum will be\nequal to \n    -1 + 1 = 0\n. In the third and in the fourth test cases it can be\nproved that there are no required partition.\n\n",
        "cf_contest_id": 1753,
        "cf_index": "A1",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n4\r\n1 1 1 1\r\n6\r\n-1 1 1 1 1 1\r\n3\r\n1 -1 1\r\n1\r\n1\r\n",
                "2\r\n1 2\r\n3 4\r\n4\r\n1 1\r\n2 2\r\n3 4\r\n5 6\r\n-1\r\n-1\r\n"
            ]
        ],
        "private_cases": []
    }
]