[
    {
        "name": "Neatness",
        "description": "Simon loves neatness. So before he goes to bed, Simon wants to complete all\nchores in the house. Simon's house looks like a rectangular table consisting\nof n rows and n columns from above. All rows of the table are numbered from 1\nto n from top to bottom. All columns of the table are numbered from 1 to n\nfrom left to right. Each cell of the table is a room. Pair (x, y) denotes the\nroom, located at the intersection of the x-th row and the y-th column. For\neach room we know if the light is on or not there. Initially Simon is in room\n(x0, y0). He wants to turn off the lights in all the rooms in the house, and\nthen return to room (x0, y0). Suppose that at the current moment Simon is in\nthe room (x, y). To reach the desired result, he can perform the following\nsteps: The format of the action is \"1\". The action is to turn on the light in\nroom (x, y). Simon cannot do it if the room already has light on. The format\nof the action is \"2\". The action is to turn off the light in room (x, y).\nSimon cannot do it if the room already has light off. The format of the action\nis \"dir\" (dir is a character). The action is to move to a side-adjacent room\nin direction dir. The direction can be left, right, up or down (the\ncorresponding dir is L, R, U or D). Additionally, Simon can move only if he\nsee a light in the direction dir. More formally, if we represent the room,\nSimon wants to go, as (nx, ny), there shold be an integer k (k > 0), that room\n(x + (nx - x)k, y + (ny - y)k) has a light. Of course, Simon cannot move out\nof his house. Help Simon, find the sequence of actions that lets him achieve\nthe desired result. Input The first line contains three positive integers n,\nx0, y0 (2 \u2264 n \u2264 500, 1 \u2264 x0, y0 \u2264 n). Next n lines contain the description of\nrooms in the house. The i-th line contains n space-separated integers ai1,\nai2, ..., ain. If number aij equals zero, then room (i, j) has light off, and\nif number aij equals one, then room (i, j) has light on. It is guaranteed that\nat least one room has light on. Output If there is no desired sequence of\nactions, print \"NO\" (without the quotes). Otherwise, print \"YES\" (without the\nquotes) and the description of the required sequence of actions as a string.\nNote that you do not have to minimize the length of the sequence of actions\nbut you shouldn't use more than 3\u00b710^6 actions. Examples Input 3 1 1 1 0 0 0 1\n0 1 0 0 Output YES D1R2L2D2UU2 Input 3 1 1 1 0 0 0 1 0 0 0 1 Output NO\n\n",
        "cf_contest_id": 359,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 1 1\r\n1 0 0\r\n0 1 0\r\n1 0 0\r\n",
                "YES\r\nD1R2LD2U2U2\r\n"
            ],
            [
                "3 1 1\r\n1 0 0\r\n0 1 0\r\n0 0 1\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 3 2\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n0 1 0 0 0\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n",
                "YES\r\n2\r\n"
            ],
            [
                "10 7 4\r\n0 0 0 0 0 0 0 0 0 0\r\n0 0 0 1 1 1 0 0 0 0\r\n0 0 0 1 1 1 0 0 0 0\r\n0 0 0 1 1 1 0 0 0 0\r\n0 0 0 1 0 0 0 0 0 0\r\n0 0 0 1 0 0 0 0 0 0\r\n0 1 1 1 0 0 0 0 0 0\r\n0 1 1 1 0 0 0 0 0 0\r\n0 1 1 1 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0\r\n",
                "YES\r\nLLDRRDLL2R2R2U2L2L2U2R2RUUURRULLURR2L2L2D2R2R2D2L2L2D2D2D2\r\n"
            ]
        ]
    }
]