[
    {
        "name": "Good Matrix Elements",
        "description": "The Smart Beaver from ABBYY got hooked on square matrices. Now he is busy\nstudying an n \u00d7 n size matrix, where n is odd. The Smart Beaver considers the\nfollowing matrix elements good: Elements of the main diagonal. Elements of the\nsecondary diagonal. Elements of the \"middle\" row \u2014 the row which has exactly\nrows above it and the same number of rows below it. Elements of the \"middle\"\ncolumn \u2014 the column that has exactly columns to the left of it and the same\nnumber of columns to the right of it. The figure shows a 5 \u00d7 5 matrix. The\ngood elements are marked with green. Help the Smart Beaver count the sum of\ngood elements of the given matrix. Input The first line of input data contains\na single odd integer n. Each of the next n lines contains n integers aij (0 \u2264\naij \u2264 100) separated by single spaces \u2014 the elements of the given matrix. The\ninput limitations for getting 30 points are: 1 \u2264 n \u2264 5 The input limitations\nfor getting 100 points are: 1 \u2264 n \u2264 101 Output Print a single integer \u2014 the\nsum of good matrix elements. Examples Input 3 1 2 3 4 5 6 7 8 9 Output 45\nInput 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 Output 17 Note In\nthe first sample all matrix elements will be good. Good elements in the second\nsample are shown on the figure.\n\n",
        "cf_contest_id": 177,
        "cf_index": "A2",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n",
                "45"
            ],
            [
                "5\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n",
                "17"
            ]
        ],
        "private_cases": [
            [
                "1\r\n3\r\n",
                "3"
            ],
            [
                "5\r\n27 7 3 11 72\r\n19 49 68 19 59\r\n41 25 37 64 65\r\n8 39 96 62 90\r\n13 37 43 26 33\r\n",
                "756"
            ],
            [
                "3\r\n19 7 16\r\n12 15 5\r\n15 15 5\r\n",
                "109"
            ],
            [
                "3\r\n36 4 33\r\n11 46 32\r\n20 49 34\r\n",
                "265"
            ],
            [
                "3\r\n79 91 74\r\n33 82 22\r\n18 28 54\r\n",
                "481"
            ],
            [
                "5\r\n7 0 8 1 7\r\n5 1 1 0 4\r\n4 2 8 1 6\r\n1 2 3 2 7\r\n6 0 1 9 6\r\n",
                "65"
            ],
            [
                "5\r\n27 20 28 11 17\r\n25 21 1 20 14\r\n14 22 28 1 6\r\n1 2 23 2 7\r\n6 0 1 29 6\r\n",
                "225"
            ],
            [
                "5\r\n57 50 58 41 17\r\n25 21 1 50 44\r\n44 22 28 31 36\r\n31 32 23 32 37\r\n6 0 31 59 6\r\n",
                "495"
            ],
            [
                "5\r\n57 80 28 41 47\r\n85 51 61 50 74\r\n44 82 28 31 36\r\n31 32 23 32 37\r\n66 60 31 59 6\r\n",
                "705"
            ],
            [
                "5\r\n13 58 10 17 43\r\n61 73 100 0 9\r\n52 38 16 22 96\r\n11 4 14 67 62\r\n70 89 7 98 83\r\n",
                "708"
            ],
            [
                "5\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n",
                "0"
            ],
            [
                "5\r\n0 0 0 0 0\r\n1 0 0 0 0\r\n0 0 0 0 0\r\n1 0 0 0 0\r\n0 0 0 0 0\r\n",
                "0"
            ],
            [
                "5\r\n0 1 0 1 0\r\n0 0 0 0 1\r\n0 0 5 0 0\r\n0 0 0 0 1\r\n0 0 0 0 0\r\n",
                "5"
            ],
            [
                "5\r\n0 0 0 0 1\r\n0 1 0 0 0\r\n0 0 0 0 0\r\n0 1 0 0 0\r\n0 1 0 0 0\r\n",
                "3"
            ],
            [
                "3\r\n0 0 0\r\n0 0 0\r\n0 0 0\r\n",
                "0"
            ],
            [
                "11\r\n0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0\r\n",
                "0"
            ],
            [
                "15\r\n0 2 1 2 1 0 2 0 2 2 2 2 2 0 2\r\n2 0 1 0 1 1 2 2 0 2 2 0 3 0 1\r\n3 3 2 2 2 1 2 3 2 3 1 2 3 3 2\r\n0 3 0 3 3 3 2 1 0 2 3 2 3 3 2\r\n3 0 0 2 1 2 3 1 1 1 2 2 2 1 0\r\n1 3 2 3 3 0 3 2 0 3 1 2 3 0 3\r\n2 2 3 2 0 0 2 3 0 1 2 1 1 2 1\r\n2 1 3 2 3 3 2 2 2 0 3 3 1 1 3\r\n0 2 1 3 1 2 0 0 1 0 0 2 0 0 0\r\n3 1 2 1 2 3 2 3 2 1 0 2 2 0 3\r\n0 0 1 3 3 0 1 1 0 0 2 3 0 3 0\r\n2 3 0 3 1 1 2 2 1 3 2 3 0 0 2\r\n3 0 2 2 3 3 0 2 2 2 0 1 0 0 3\r\n2 2 2 1 2 2 2 0 2 2 2 2 0 2 3\r\n2 2 3 0 0 0 0 2 1 1 1 3 2 2 0\r\n",
                "97"
            ]
        ]
    }
]