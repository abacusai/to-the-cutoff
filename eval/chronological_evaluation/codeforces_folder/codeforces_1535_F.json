[
    {
        "name": "String Distance",
        "description": "Suppose you are given two strings \n    a\n and \n    b\n. You can apply the\nfollowing operation any number of times: choose any contiguous substring of\n\n    a\n or \n    b\n, and sort the characters in it in non-descending order. Let\n\n    f(a, b)\n the minimum number of operations you have to apply in order to\nmake them equal (or \n    f(a, b) = 1337\n if it is impossible to make \n    a\n\nand \n    b\n equal using these operations). For example: \n    f(\n    ab,\n    \n    ab) = 0\n; \n    f(\n    ba, \n    ab) = 1\n (in one operation,\nwe can sort the whole first string); \n    f(\n    ebcda, \n    ecdba) =\n    1\n (in one operation, we can sort the substring of the second string\nstarting from the \n    2\n-nd character and ending with the \n    4\n-th\ncharacter); \n    f(\n    a, \n    b) = 1337\n. You are given \n    n\n\nstrings \n    s_1, s_2, \n    \u2026, s_k\n having equal length. Calculate \n    \u2211\n    _i = 1^n\n    \u2211\n    _j = i + 1^n f(s_i, s_j)\n. Input\nThe first line contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n) \u2014 the number of strings. Then \n    n\n lines follow, each line\ncontains one of the strings \n    s_i\n, consisting of lowercase Latin letters.\n\n    |s_1| = |s_2| = \n    \u2026 = |s_n|\n, and \n    n \n    \u00b7 |s_1| \n    \u2264 2 \n    \u00b7\n    10^5\n. All these strings are pairwise distinct. Output Print one integer:\n\n    \u2211\n    _i = 1^n\n    \u2211\n    _j = i + 1^n f(s_i,\n    s_j)\n. Examples Input 4 zzz bac abc acb Output 4015 Input 2 a b Output 1337\n\n",
        "cf_contest_id": 1535,
        "cf_index": "F",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "data structures",
            "hashing",
            "implementation",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "4\r\nzzz\r\nbac\r\nabc\r\nacb\r\n",
                "4015"
            ],
            [
                "2\r\na\r\nb\r\n",
                "1337"
            ]
        ],
        "private_cases": [
            [
                "1\r\na\r\n",
                "0"
            ],
            [
                "2\r\nba\r\nab\r\n",
                "1"
            ],
            [
                "6\r\nacb\r\nabc\r\ncba\r\nbac\r\ncab\r\nbca\r\n",
                "21"
            ],
            [
                "24\r\nbcda\r\nacdb\r\nbcad\r\ncbad\r\nabcd\r\nbacd\r\nadcb\r\nbdac\r\ncbda\r\ndbca\r\ncdab\r\ncabd\r\ndabc\r\ncdba\r\nadbc\r\ndcba\r\ndcab\r\ndacb\r\nbdca\r\ndbac\r\ncadb\r\nbadc\r\nacbd\r\nabdc\r\n",
                "478"
            ],
            [
                "2\r\ncbb\r\nbcb\r\n",
                "1"
            ]
        ]
    }
]