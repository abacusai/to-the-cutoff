[
    {
        "name": "Tree",
        "description": "The Main Martian Tree grows on Mars. It is a binary tree (a rooted tree, with\nno more than two sons at each vertex) with \n    n\n vertices, where the root\nvertex has the number \n    1\n. Its fruits are the Main Martian Fruits. It's\nsummer now, so this tree does not have any fruit yet. Autumn is coming soon,\nand leaves and branches will begin to fall off the tree. It is clear, that if\na vertex falls off the tree, then its entire subtree will fall off too. In\naddition, the root will remain on the tree. Formally: the tree will have some\nconnected subset of vertices containing the root. After that, the fruits will\ngrow on the tree (only at those vertices which remain). Exactly \n    x\n fruits\nwill grow in the root. The number of fruits in each remaining vertex will be\nnot less than the sum of the numbers of fruits in the remaining sons of this\nvertex. It is allowed, that some vertices will not have any fruits. Natasha\nwondered how many tree configurations can be after the described changes.\nSince this number can be very large, output it modulo \n    998244353\n. Two\nconfigurations of the resulting tree are considered different if one of these\ntwo conditions is true: they have different subsets of remaining vertices;\nthey have the same subset of remaining vertices, but there is a vertex in this\nsubset where they have a different amount of fruits. Input The first line\ncontains two integers: \n    n\n and \n    x\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n, \n    0\n    \n    \u2264 x \n    \u2264 10^18\n) \u2014 the size of the tree and the number of fruits in\nthe root. The \n    i\n-th of the following \n    (n-1)\n lines contains two\nintegers \n    a_i\n and \n    b_i\n (\n    1 \n    \u2264 a_i, b_i \n    \u2264 n\n) \u2014 vertices\nconnected by the \n    i\n-th edge of the tree. It is guaranteed that the input\ndata describes a correct binary tree with the root at the vertex \n    1\n.\nOutput Print one number \u2014 the number of configurations of the resulting tree\nmodulo \n    998244353\n. Examples Input 3 2 1 2 1 3 Output 13 Input 2 5 1 2\nOutput 7 Input 4 10 1 2 1 3 3 4 Output 441 Note Consider the first example.\nThere are \n    2\n fruits at the vertex \n    1\n. The following \n    13\n options\nare possible: there is no vertex \n    2\n, there is no vertex \n    3\n; there is\nno vertex \n    2\n, there are no fruits at the vertex \n    3\n; there is no\nvertex \n    2\n, there is \n    1\n fruit at the vertex \n    3\n; there is no\nvertex \n    2\n, there are \n    2\n fruits at the vertex \n    3\n; there are no\nfruits at the vertex \n    2\n, there is no vertex \n    3\n; there are no fruits\nat the vertex \n    2\n, there are no fruits at the vertex \n    3\n; there are no\nfruits at the vertex \n    2\n, there is \n    1\n fruit at the vertex \n    3\n;\nthere are no fruits at the vertex \n    2\n, there are \n    2\n fruits at the\nvertex \n    3\n; there is \n    1\n fruit at the vertex \n    2\n, there is no\nvertex \n    3\n; there is \n    1\n fruit at the vertex \n    2\n, there are no\nfruits at the vertex \n    3\n; there is \n    1\n fruit at the vertex \n    2\n,\nthere is \n    1\n fruit at the vertex \n    3\n; there are \n    2\n fruits at the\nvertex \n    2\n, there is no vertex \n    3\n; there are \n    2\n fruits at the\nvertex \n    2\n, there are no fruits at the vertex \n    3\n. Consider the second\nexample. There are \n    5\n fruits at the vertex \n    1\n. The following \n    7\n\noptions are possible: there is no vertex \n    2\n; there are no fruits at the\nvertex \n    2\n; there is \n    1\n fruit at the vertex \n    2\n; there are\n\n    2\n fruits at the vertex \n    2\n; there are \n    3\n fruits at the vertex\n\n    2\n; there are \n    4\n fruits at the vertex \n    2\n; there are \n    5\n\nfruits at the vertex \n    2\n.\n\n",
        "cf_contest_id": 1010,
        "cf_index": "F",
        "cf_rating": 3400,
        "difficulty": 0,
        "cf_tags": [
            "fft",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 7.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n1 2\r\n1 3\r\n",
                "13\r\n"
            ],
            [
                "2 5\r\n1 2\r\n",
                "7\r\n"
            ],
            [
                "4 10\r\n1 2\r\n1 3\r\n3 4\r\n",
                "441\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n",
                "1\r\n"
            ],
            [
                "2 2\r\n1 2\r\n",
                "4\r\n"
            ],
            [
                "3 3\r\n2 3\r\n3 1\r\n",
                "15\r\n"
            ],
            [
                "3 3\r\n1 2\r\n3 1\r\n",
                "19\r\n"
            ],
            [
                "4 4\r\n2 4\r\n2 1\r\n4 3\r\n",
                "56\r\n"
            ],
            [
                "4 4\r\n4 3\r\n2 1\r\n4 1\r\n",
                "76\r\n"
            ],
            [
                "5 5\r\n2 1\r\n4 5\r\n3 2\r\n3 5\r\n",
                "210\r\n"
            ],
            [
                "5 5\r\n2 4\r\n1 5\r\n5 4\r\n4 3\r\n",
                "266\r\n"
            ],
            [
                "5 5\r\n1 3\r\n1 4\r\n4 2\r\n5 4\r\n",
                "370\r\n"
            ],
            [
                "10 20\r\n9 4\r\n1 8\r\n5 3\r\n9 2\r\n5 8\r\n6 4\r\n7 6\r\n10 3\r\n10 2\r\n",
                "14307150\r\n"
            ],
            [
                "10 30\r\n2 5\r\n10 5\r\n2 9\r\n1 7\r\n10 3\r\n5 7\r\n7 8\r\n4 2\r\n1 6\r\n",
                "603890727\r\n"
            ],
            [
                "50 40\r\n26 42\r\n11 37\r\n2 10\r\n10 21\r\n43 34\r\n18 3\r\n24 2\r\n36 17\r\n38 23\r\n12 9\r\n22 20\r\n13 39\r\n15 50\r\n15 9\r\n48 26\r\n17 18\r\n25 37\r\n30 5\r\n16 34\r\n49 1\r\n28 4\r\n6 29\r\n41 35\r\n31 33\r\n8 50\r\n45 31\r\n33 32\r\n7 36\r\n11 3\r\n5 22\r\n16 13\r\n48 40\r\n21 23\r\n43 32\r\n24 6\r\n42 25\r\n30 19\r\n4 7\r\n8 44\r\n39 44\r\n46 38\r\n47 28\r\n46 27\r\n27 19\r\n47 29\r\n14 40\r\n49 35\r\n14 45\r\n12 41\r\n",
                "569586511\r\n"
            ],
            [
                "50 50\r\n43 1\r\n18 39\r\n17 49\r\n50 10\r\n10 27\r\n32 24\r\n12 39\r\n2 44\r\n20 13\r\n13 19\r\n37 27\r\n23 46\r\n41 9\r\n6 14\r\n5 34\r\n22 32\r\n21 35\r\n17 5\r\n46 12\r\n44 33\r\n43 28\r\n30 18\r\n47 14\r\n23 7\r\n50 3\r\n47 5\r\n11 49\r\n48 3\r\n41 36\r\n26 31\r\n7 25\r\n40 38\r\n28 4\r\n11 38\r\n44 16\r\n32 17\r\n42 14\r\n6 15\r\n49 33\r\n34 8\r\n29 4\r\n16 35\r\n19 43\r\n13 30\r\n29 48\r\n24 45\r\n21 37\r\n9 6\r\n31 22\r\n",
                "140968931\r\n"
            ],
            [
                "50 60\r\n14 7\r\n16 25\r\n28 37\r\n35 30\r\n35 27\r\n27 9\r\n3 8\r\n47 4\r\n16 11\r\n37 39\r\n12 13\r\n44 32\r\n5 42\r\n4 22\r\n36 6\r\n40 3\r\n8 26\r\n45 19\r\n40 19\r\n32 42\r\n11 41\r\n5 7\r\n10 36\r\n12 19\r\n29 34\r\n23 31\r\n49 28\r\n48 15\r\n31 3\r\n28 10\r\n40 48\r\n38 42\r\n24 2\r\n21 43\r\n16 2\r\n33 48\r\n22 5\r\n34 27\r\n39 35\r\n26 38\r\n18 43\r\n7 20\r\n17 12\r\n34 47\r\n26 2\r\n1 24\r\n50 22\r\n36 43\r\n47 46\r\n",
                "950740650\r\n"
            ],
            [
                "50 70\r\n9 23\r\n9 42\r\n35 25\r\n38 23\r\n24 3\r\n19 21\r\n24 36\r\n30 40\r\n2 32\r\n48 44\r\n39 18\r\n45 27\r\n7 8\r\n36 22\r\n2 47\r\n4 29\r\n44 11\r\n29 19\r\n7 38\r\n27 28\r\n48 28\r\n33 5\r\n44 15\r\n20 38\r\n37 19\r\n8 4\r\n35 41\r\n29 43\r\n33 37\r\n23 12\r\n10 4\r\n50 36\r\n21 6\r\n9 34\r\n25 2\r\n28 8\r\n1 6\r\n40 49\r\n26 27\r\n25 7\r\n16 37\r\n39 22\r\n35 17\r\n1 13\r\n22 6\r\n14 24\r\n33 31\r\n21 40\r\n46 39\r\n",
                "161333141\r\n"
            ],
            [
                "1 1000\r\n",
                "1\r\n"
            ],
            [
                "1 0\r\n",
                "1\r\n"
            ],
            [
                "10 0\r\n2 6\r\n8 4\r\n1 8\r\n2 9\r\n8 10\r\n3 10\r\n6 1\r\n2 7\r\n5 6\r\n",
                "77\r\n"
            ],
            [
                "1 822981260158260522\r\n",
                "1\r\n"
            ],
            [
                "10 822981260158260522\r\n5 1\r\n1 4\r\n2 3\r\n3 9\r\n10 2\r\n8 7\r\n4 6\r\n3 4\r\n2 8\r\n",
                "891706731\r\n"
            ]
        ]
    }
]