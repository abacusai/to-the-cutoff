[
    {
        "name": "Group Photo 2 (online mirror version)",
        "description": "Many years have passed, and n friends met at a party again. Technologies have\nleaped forward since the last meeting, cameras with timer appeared and now it\nis not obligatory for one of the friends to stand with a camera, and, thus,\nbeing absent on the photo. Simply speaking, the process of photographing can\nbe described as follows. Each friend occupies a rectangle of pixels on the\nphoto: the i-th of them in a standing state occupies a wi pixels wide and a hi\npixels high rectangle. But also, each person can lie down for the photo, and\nthen he will occupy a hi pixels wide and a wi pixels high rectangle. The total\nphoto will have size W \u00d7 H, where W is the total width of all the people\nrectangles, and H is the maximum of the heights. The friends want to determine\nwhat minimum area the group photo can they obtain if no more than n / 2 of\nthem can lie on the ground (it would be strange if more than n / 2 gentlemen\nlie on the ground together, isn't it?..) Help them to achieve this goal. Input\nThe first line contains integer n (1 \u2264 n \u2264 1000) \u2014 the number of friends. The\nnext n lines have two integers wi, hi (1 \u2264 wi, hi \u2264 1000) each, representing\nthe size of the rectangle, corresponding to the i-th friend. Output Print a\nsingle integer equal to the minimum possible area of the photo containing all\nfriends if no more than n / 2 of them can lie on the ground. Examples Input 3\n10 1 20 2 30 3 Output 180 Input 3 3 1 2 2 4 3 Output 21 Input 1 5 10 Output 50\n\n",
        "cf_contest_id": 529,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n10 1\r\n20 2\r\n30 3\r\n",
                "180"
            ],
            [
                "3\r\n3 1\r\n2 2\r\n4 3\r\n",
                "21"
            ],
            [
                "1\r\n5 10\r\n",
                "50"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 1\r\n",
                "1"
            ],
            [
                "1\r\n1000 1000\r\n",
                "1000000"
            ],
            [
                "1\r\n1 1000\r\n",
                "1000"
            ],
            [
                "2\r\n1 1000\r\n1000 1\r\n",
                "2000"
            ],
            [
                "2\r\n1 1\r\n1000 1000\r\n",
                "1001000"
            ],
            [
                "1\r\n1000 1\r\n",
                "1000"
            ],
            [
                "5\r\n407 830\r\n12 199\r\n768 215\r\n668 28\r\n628 310\r\n",
                "1070700"
            ],
            [
                "3\r\n379 820\r\n923 407\r\n916 853\r\n",
                "1570946"
            ],
            [
                "3\r\n99 768\r\n477 885\r\n169 118\r\n",
                "614190"
            ],
            [
                "3\r\n227 612\r\n223 259\r\n423 895\r\n",
                "781335"
            ],
            [
                "3\r\n651 161\r\n480 32\r\n485 672\r\n",
                "756672"
            ],
            [
                "3\r\n779 301\r\n34 214\r\n442 937\r\n",
                "728049"
            ],
            [
                "3\r\n203 145\r\n780 692\r\n992 713\r\n",
                "1366821"
            ],
            [
                "3\r\n627 286\r\n37 65\r\n53 490\r\n",
                "235752"
            ],
            [
                "3\r\n755 938\r\n487 543\r\n307 459\r\n",
                "1307660"
            ],
            [
                "3\r\n475 487\r\n41 20\r\n368 236\r\n",
                "366224"
            ],
            [
                "3\r\n922 71\r\n719 26\r\n462 700\r\n",
                "1013790"
            ],
            [
                "2\r\n881 4\r\n788 2\r\n",
                "6676"
            ],
            [
                "2\r\n1 304\r\n8 892\r\n",
                "8028"
            ],
            [
                "3\r\n227 2\r\n223 9\r\n423 5\r\n",
                "7857"
            ],
            [
                "3\r\n7 612\r\n3 259\r\n3 895\r\n",
                "11635"
            ],
            [
                "4\r\n573 7\r\n169 9\r\n447 7\r\n947 3\r\n",
                "19224"
            ],
            [
                "10\r\n864 874\r\n534 702\r\n73 363\r\n856 895\r\n827 72\r\n435 468\r\n888 921\r\n814 703\r\n648 715\r\n384 781\r\n",
                "4909752"
            ],
            [
                "10\r\n489 685\r\n857 870\r\n736 221\r\n687 697\r\n166 360\r\n265 200\r\n738 519\r\n393 760\r\n66 176\r\n798 160\r\n",
                "3231747"
            ],
            [
                "1\r\n1 1\r\n",
                "1"
            ],
            [
                "1\r\n1000 1000\r\n",
                "1000000"
            ],
            [
                "1\r\n1 1000\r\n",
                "1000"
            ],
            [
                "2\r\n1 1000\r\n1000 1\r\n",
                "2000"
            ],
            [
                "2\r\n1 1\r\n1000 1000\r\n",
                "1001000"
            ],
            [
                "1\r\n1000 1\r\n",
                "1000"
            ],
            [
                "2\r\n1 1\r\n1 1\r\n",
                "2"
            ],
            [
                "4\r\n3 817\r\n9 729\r\n7 407\r\n7 433\r\n",
                "21242"
            ],
            [
                "3\r\n500 500\r\n2 1\r\n10 5\r\n",
                "253500"
            ]
        ]
    }
]