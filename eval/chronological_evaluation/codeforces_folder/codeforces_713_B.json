[
    {
        "name": "Searching Rectangles",
        "description": "Filya just learned new geometry object \u2014 rectangle. He is given a field\nconsisting of n \u00d7 n unit cells. Rows are numbered from bottom to top with\ninteger from 1 to n. Columns are numbered from left to right with integers\nfrom 1 to n. Cell, located at the intersection of the row r and column c is\ndenoted as (r, c). Filya has painted two rectangles, such that their sides are\nparallel to coordinate axes and each cell lies fully inside or fully outside\neach of them. Moreover, no cell lies in both rectangles. Later, hedgehog Filya\nbecame interested in the location of his rectangles but was unable to find the\nsheet of paper they were painted on. They were taken by Sonya and now she\nwants to play a little game with Filya. He tells her a query rectangle and she\nreplies with the number of initial rectangles that lie fully inside the given\nquery rectangle. The query rectangle should match the same conditions as\ninitial rectangles. Rectangle lies fully inside the query if each o its cells\nlies inside the query. Filya knows Sonya really well, so is sure that if he\nasks more than 200 questions she will stop to reply. Input The first line of\nthe input contains an integer n (2 \u2264 n \u2264 2^16) \u2014 size of the field. For each\nquery an integer between 0 and 2 is returned \u2014 the number of initial\nrectangles that lie fully inside the query rectangle. Output To make a query\nyou have to print \"? x1 y1 x2 y2\" (without quotes) (1 \u2264 x1 \u2264 x2 \u2264 n, 1 \u2264 y1 \u2264\ny2 \u2264 n), where (x1, y1) stands for the position of the bottom left cell of the\nquery and (x2, y2) stands for the up right cell of the query. You are allowed\nto ask no more than 200 queries. After each query you should perform \"flush\"\noperation and read the answer. In case you suppose you've already determined\nthe location of two rectangles (or run out of queries) you should print \"! x11\ny11 x12 y12 x21 y21 x22 y22\" (without quotes), where first four integers\ndescribe the bottom left and up right cells of the first rectangle, and\nfollowing four describe the corresponding cells of the second rectangle. You\ncan print the rectangles in an arbitrary order. After you have printed the\nanswer, print the end of the line and perform \"flush\". Your program should\nterminate immediately after it print the answer. Interaction To flush you can\nuse (just after printing an integer and end-of-line): fflush(stdout) in C++;\nSystem.out.flush() in Java; stdout.flush() in Python; flush(output) in Pascal;\nSee the documentation for other languages. You will get the Wrong Answer\nverdict if you ask more than 200 queries, or if you print an incorrect\ncoordinates. You will get the Idleness Limit Exceeded verdict if you don't\nprint anything (but you should) or if you forget about flushing the output\n(more info below). Hacking. The first line should contain an integer n (2 \u2264 n\n\u2264 2^16). The second line should contain four integers x1, y1, x2, y2 (1 \u2264 x1 \u2264\nx2 \u2264 n, 1 \u2264 y1 \u2264 y2 \u2264 n) \u2014 the description of the first rectangle. The third\nline contains the description of the second rectangle in the similar way.\nExample Input 5 2 1 0 1 1 1 0 1 Output ? 1 1 5 5 ? 1 1 3 3 ? 1 1 3 1 ? 2 2 2 2\n? 3 3 5 5 ? 3 3 3 5 ? 3 3 3 4 ? 3 4 3 5 ! 2 2 2 2 3 4 3 5\n\n",
        "cf_contest_id": 713,
        "cf_index": "B",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 2 2 2\r\n3 4 3 5\r\n",
                "22\r\n2 2 2 2 3 4 3 5\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 2 4 2\r\n1 6 4 9\r\n",
                "29\r\n1 2 4 2 1 6 4 9\r\n"
            ],
            [
                "10\r\n2 2 4 4\r\n7 10 9 10\r\n",
                "28\r\n2 2 4 4 7 10 9 10\r\n"
            ],
            [
                "10\r\n1 1 10 1\r\n5 5 5 10\r\n",
                "36\r\n1 1 10 1 5 5 5 10\r\n"
            ],
            [
                "10\r\n3 4 10 4\r\n1 1 10 1\r\n",
                "33\r\n1 1 10 1 3 4 10 4\r\n"
            ],
            [
                "100\r\n8 7 90 37\r\n4 64 4 100\r\n",
                "57\r\n8 7 90 37 4 64 4 100\r\n"
            ],
            [
                "10\r\n1 3 1 3\r\n5 6 5 6\r\n",
                "30\r\n1 3 1 3 5 6 5 6\r\n"
            ],
            [
                "8\r\n5 5 5 5\r\n7 7 7 7\r\n",
                "26\r\n5 5 5 5 7 7 7 7\r\n"
            ],
            [
                "65536\r\n56677 37631 57096 58131\r\n37503 6356 53664 37172\r\n",
                "130\r\n37503 6356 53664 37172 56677 37631 57096 58131\r\n"
            ],
            [
                "32768\r\n17828 4528 27798 14063\r\n19889 15555 23469 23334\r\n",
                "125\r\n17828 4528 27798 14063 19889 15555 23469 23334\r\n"
            ],
            [
                "65536\r\n1 1 1 1\r\n65536 65536 65536 65536\r\n",
                "134\r\n1 1 1 1 65536 65536 65536 65536\r\n"
            ],
            [
                "65536\r\n10000 10000 65536 20000\r\n1 1 9999 9999\r\n",
                "133\r\n1 1 9999 9999 10000 10000 65536 20000\r\n"
            ],
            [
                "65536\r\n1 1 1 1\r\n2 1 2 1\r\n",
                "133\r\n1 1 1 1 2 1 2 1\r\n"
            ],
            [
                "65536\r\n1 1 1 1\r\n65536 65533 65536 65534\r\n",
                "133\r\n1 1 1 1 65536 65533 65536 65534\r\n"
            ],
            [
                "65536\r\n1 1 35536 35536\r\n35537 35537 65536 65536\r\n",
                "134\r\n1 1 35536 35536 35537 35537 65536 65536\r\n"
            ],
            [
                "65536\r\n65536 65535 65536 65535\r\n65535 65536 65535 65536\r\n",
                "133\r\n65536 65535 65536 65535 65535 65536 65535 65536\r\n"
            ],
            [
                "65536\r\n2 2 65536 65536\r\n1 1 1 1\r\n",
                "134\r\n1 1 1 1 2 2 65536 65536\r\n"
            ],
            [
                "65536\r\n65536 65536 65536 65536\r\n1 1 1 1\r\n",
                "134\r\n1 1 1 1 65536 65536 65536 65536\r\n"
            ],
            [
                "65536\r\n1 65536 1 65536\r\n65536 1 65536 1\r\n",
                "135\r\n65536 1 65536 1 1 65536 1 65536\r\n"
            ],
            [
                "100\r\n45 67 89 90\r\n3 4 6 75\r\n",
                "57\r\n3 4 6 75 45 67 89 90\r\n"
            ],
            [
                "65536\r\n65536 65536 65536 65536\r\n65535 65535 65535 65535\r\n",
                "132\r\n65535 65535 65535 65535 65536 65536 65536 65536\r\n"
            ],
            [
                "65536\r\n1 2 1 2\r\n2 1 2 1\r\n",
                "133\r\n2 1 2 1 1 2 1 2\r\n"
            ],
            [
                "65536\r\n406 5764 16570 33442\r\n6167 61342 10305 65256\r\n",
                "133\r\n406 5764 16570 33442 6167 61342 10305 65256\r\n"
            ],
            [
                "65536\r\n39235 60239 60844 61310\r\n734 4630 35003 28918\r\n",
                "130\r\n734 4630 35003 28918 39235 60239 60844 61310\r\n"
            ],
            [
                "65536\r\n25633 6000 45095 36812\r\n7134 43330 26516 61810\r\n",
                "132\r\n25633 6000 45095 36812 7134 43330 26516 61810\r\n"
            ],
            [
                "65536\r\n57837 9982 62234 60010\r\n14205 9254 19852 49347\r\n",
                "131\r\n14205 9254 19852 49347 57837 9982 62234 60010\r\n"
            ],
            [
                "65535\r\n27509 43826 63611 52595\r\n8620 8098 59547 19624\r\n",
                "131\r\n8620 8098 59547 19624 27509 43826 63611 52595\r\n"
            ],
            [
                "65535\r\n8954 26504 22410 59426\r\n31023 21131 45504 44500\r\n",
                "133\r\n31023 21131 45504 44500 8954 26504 22410 59426\r\n"
            ],
            [
                "10000\r\n4937 5137 9011 6326\r\n2224 5663 2565 9554\r\n",
                "112\r\n4937 5137 9011 6326 2224 5663 2565 9554\r\n"
            ],
            [
                "65536\r\n1 1 32768 32768\r\n32769 32769 65536 65536\r\n",
                "134\r\n1 1 32768 32768 32769 32769 65536 65536\r\n"
            ],
            [
                "65536\r\n1 1 32768 32768\r\n32768 32769 65536 65536\r\n",
                "135\r\n1 1 32768 32768 32768 32769 65536 65536\r\n"
            ],
            [
                "65536\r\n1 32769 32768 65536\r\n32769 1 65536 32768\r\n",
                "135\r\n32769 1 65536 32768 1 32769 32768 65536\r\n"
            ],
            [
                "65536\r\n20903 30909 20903 30909\r\n20904 30910 20904 30910\r\n",
                "130\r\n20903 30909 20903 30909 20904 30910 20904 30910\r\n"
            ],
            [
                "65536\r\n21755 18195 21758 18198\r\n21753 18198 21754 18199\r\n",
                "133\r\n21755 18195 21758 18198 21753 18198 21754 18199\r\n"
            ],
            [
                "65536\r\n21814 15058 21817 15061\r\n21817 15056 21818 15057\r\n",
                "132\r\n21817 15056 21818 15057 21814 15058 21817 15061\r\n"
            ],
            [
                "65536\r\n1 1 1 65536\r\n2 1 2 65536\r\n",
                "135\r\n1 1 1 65536 2 1 2 65536\r\n"
            ],
            [
                "65536\r\n65536 1 65536 65536\r\n65535 1 65535 65536\r\n",
                "135\r\n65535 1 65535 65536 65536 1 65536 65536\r\n"
            ],
            [
                "65536\r\n1 65536 65536 65536\r\n1 65535 65536 65535\r\n",
                "135\r\n1 65535 65536 65535 1 65536 65536 65536\r\n"
            ],
            [
                "65536\r\n1 2 65536 2\r\n1 1 65536 1\r\n",
                "135\r\n1 1 65536 1 1 2 65536 2\r\n"
            ],
            [
                "65536\r\n1 32768 65536 32768\r\n1 32769 65536 32769\r\n",
                "134\r\n1 32768 65536 32768 1 32769 65536 32769\r\n"
            ],
            [
                "65536\r\n32768 1 32768 65536\r\n32769 1 32769 65536\r\n",
                "134\r\n32768 1 32768 65536 32769 1 32769 65536\r\n"
            ],
            [
                "65536\r\n41 1 41 65536\r\n42 1 42 65536\r\n",
                "134\r\n41 1 41 65536 42 1 42 65536\r\n"
            ],
            [
                "65536\r\n1 245 65536 245\r\n1 246 65536 246\r\n",
                "134\r\n1 245 65536 245 1 246 65536 246\r\n"
            ],
            [
                "65536\r\n617 24698 617 24698\r\n618 24698 618 24698\r\n",
                "130\r\n617 24698 617 24698 618 24698 618 24698\r\n"
            ],
            [
                "65536\r\n774 16333 774 16333\r\n774 16334 774 16334\r\n",
                "130\r\n774 16333 774 16333 774 16334 774 16334\r\n"
            ],
            [
                "65536\r\n32768 32768 32768 32768\r\n32768 32769 32768 32769\r\n",
                "130\r\n32768 32768 32768 32768 32768 32769 32768 32769\r\n"
            ],
            [
                "65536\r\n32768 32768 32768 32768\r\n32769 32768 32769 32768\r\n",
                "130\r\n32768 32768 32768 32768 32769 32768 32769 32768\r\n"
            ],
            [
                "65536\r\n32771 32771 32771 32771\r\n32772 32771 32772 32771\r\n",
                "130\r\n32771 32771 32771 32771 32772 32771 32772 32771\r\n"
            ],
            [
                "65536\r\n32771 32771 32771 32771\r\n32771 32772 32771 32772\r\n",
                "130\r\n32771 32771 32771 32771 32771 32772 32771 32772\r\n"
            ],
            [
                "65536\r\n1 1 1 1\r\n2 2 65536 65536\r\n",
                "134\r\n1 1 1 1 2 2 65536 65536\r\n"
            ],
            [
                "65536\r\n65536 1 65536 1\r\n1 2 65535 65536\r\n",
                "135\r\n65536 1 65536 1 1 2 65535 65536\r\n"
            ],
            [
                "65536\r\n1 1 1 1\r\n2 1 65536 65536\r\n",
                "135\r\n1 1 1 1 2 1 65536 65536\r\n"
            ],
            [
                "65536\r\n1 1 1 1\r\n1 2 65536 65536\r\n",
                "135\r\n1 1 1 1 1 2 65536 65536\r\n"
            ],
            [
                "65536\r\n65536 65536 65536 65536\r\n1 1 65535 65536\r\n",
                "136\r\n1 1 65535 65536 65536 65536 65536 65536\r\n"
            ],
            [
                "65536\r\n65536 65536 65536 65536\r\n1 1 65536 65535\r\n",
                "136\r\n1 1 65536 65535 65536 65536 65536 65536\r\n"
            ],
            [
                "10\r\n4 2 9 6\r\n8 7 10 9\r\n",
                "30\r\n4 2 9 6 8 7 10 9\r\n"
            ]
        ]
    }
]