[
    {
        "name": "New Year Transportation",
        "description": "New Year is coming in Line World! In this world, there are n cells numbered by\nintegers from 1 to n, as a 1 \u00d7 n board. People live in cells. However, it was\nhard to move between distinct cells, because of the difficulty of escaping the\ncell. People wanted to meet people who live in other cells. So, user tncks0121\nhas made a transportation system to move between these cells, to celebrate the\nNew Year. First, he thought of n - 1 positive integers a1, a2, ..., an - 1.\nFor every integer i where 1 \u2264 i \u2264 n - 1 the condition 1 \u2264 ai \u2264 n - i holds.\nNext, he made n - 1 portals, numbered by integers from 1 to n - 1. The i-th (1\n\u2264 i \u2264 n - 1) portal connects cell i and cell (i + ai), and one can travel from\ncell i to cell (i + ai) using the i-th portal. Unfortunately, one cannot use\nthe portal backwards, which means one cannot move from cell (i + ai) to cell i\nusing the i-th portal. It is easy to see that because of condition 1 \u2264 ai \u2264 n\n- i one can't leave the Line World using portals. Currently, I am standing at\ncell 1, and I want to go to cell t. However, I don't know whether it is\npossible to go there. Please determine whether I can go to cell t by only\nusing the construted transportation system. Input The first line contains two\nspace-separated integers n (3 \u2264 n \u2264 3 \u00d7 10^4) and t (2 \u2264 t \u2264 n) \u2014 the number\nof cells, and the index of the cell which I want to go to. The second line\ncontains n - 1 space-separated integers a1, a2, ..., an - 1 (1 \u2264 ai \u2264 n - i).\nIt is guaranteed, that using the given transportation system, one cannot leave\nthe Line World. Output If I can go to cell t using the transportation system,\nprint \"YES\". Otherwise, print \"NO\". Examples Input 8 4 1 2 1 2 1 2 1 Output\nYES Input 8 5 1 2 1 2 1 1 1 Output NO Note In the first sample, the visited\ncells are: 1, 2, 4; so we can successfully visit the cell 4. In the second\nsample, the possible cells to visit are: 1, 2, 4, 6, 7, 8; so we can't visit\nthe cell 5, which we want to visit.\n\n",
        "cf_contest_id": 500,
        "cf_index": "A",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8 4\r\n1 2 1 2 1 2 1\r\n",
                "YES\r\n"
            ],
            [
                "8 5\r\n1 2 1 2 1 1 1\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "20 19\r\n13 16 7 6 12 1 5 7 8 6 5 7 5 5 3 3 2 2 1\r\n",
                "YES\r\n"
            ],
            [
                "50 49\r\n11 7 1 41 26 36 19 16 38 14 36 35 37 27 20 27 3 6 21 2 27 11 18 17 19 16 22 8 8 9 1 7 5 12 5 6 13 6 11 2 6 3 1 5 1 1 2 2 1\r\n",
                "YES\r\n"
            ],
            [
                "120 104\r\n41 15 95 85 34 11 25 42 65 39 77 80 74 17 66 73 21 14 36 63 63 79 45 24 65 7 63 80 51 21 2 19 78 28 71 2 15 23 17 68 62 18 54 39 43 70 3 46 34 23 41 65 32 10 13 18 10 3 16 48 54 18 57 28 3 24 44 50 15 2 20 22 45 44 3 29 2 27 11 2 12 25 25 31 1 2 32 4 11 30 13 16 26 21 1 13 21 8 15 5 18 13 5 15 3 8 13 6 5 1 9 7 1 2 4 1 1 2 1\r\n",
                "NO\r\n"
            ],
            [
                "10 3\r\n8 3 5 4 2 3 2 2 1\r\n",
                "NO\r\n"
            ],
            [
                "10 9\r\n8 3 5 4 2 3 2 2 1\r\n",
                "YES\r\n"
            ],
            [
                "3 2\r\n1 1\r\n",
                "YES\r\n"
            ],
            [
                "3 2\r\n2 1\r\n",
                "NO\r\n"
            ],
            [
                "4 2\r\n2 1 1\r\n",
                "NO\r\n"
            ],
            [
                "4 4\r\n2 2 1\r\n",
                "YES\r\n"
            ],
            [
                "8 8\r\n1 2 1 2 1 2 1\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n1 1\r\n",
                "YES\r\n"
            ],
            [
                "8 8\r\n1 2 1 2 1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n2 1\r\n",
                "YES\r\n"
            ],
            [
                "4 4\r\n1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "8 8\r\n1 1 1 1 1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "5 5\r\n1 1 1 1\r\n",
                "YES\r\n"
            ]
        ]
    }
]