[
    {
        "name": "Merge Sort",
        "description": "Merge sort is a well-known sorting algorithm. The main function that sorts the\nelements of array a with indices from [l, r) can be implemented as follows: If\nthe segment [l, r) is already sorted in non-descending order (that is, for any\ni such that l \u2264 i < r - 1 a[i] \u2264 a[i + 1]), then end the function call; Let ;\nCall mergesort(a, l, mid); Call mergesort(a, mid, r); Merge segments [l, mid)\nand [mid, r), making the segment [l, r) sorted in non-descending order. The\nmerge algorithm doesn't call any other functions. The array in this problem is\n0-indexed, so to sort the whole array, you need to call mergesort(a, 0, n).\nThe number of calls of function mergesort is very important, so Ivan has\ndecided to calculate it while sorting the array. For example, if a = 1, 2, 3,\n4, then there will be 1 call of mergesort \u2014 mergesort(0, 4), which will check\nthat the array is sorted and then end. If a = 2, 1, 3, then the number of\ncalls is 3: first of all, you call mergesort(0, 3), which then sets mid = 1\nand calls mergesort(0, 1) and mergesort(1, 3), which do not perform any\nrecursive calls because segments (0, 1) and (1, 3) are sorted. Ivan has\nimplemented the program that counts the number of mergesort calls, but now he\nneeds to test it. To do this, he needs to find an array a such that a is a\npermutation of size n (that is, the number of elements in a is n, and every\ninteger number from [1, n] can be found in this array), and the number of\nmergesort calls when sorting the array is exactly k. Help Ivan to find an\narray he wants! Input The first line contains two numbers n and k (1 \u2264 n \u2264\n100000, 1 \u2264 k \u2264 200000) \u2014 the size of a desired permutation and the number of\nmergesort calls required to sort it. Output If a permutation of size n such\nthat there will be exactly k calls of mergesort while sorting it doesn't\nexist, output - 1. Otherwise output n integer numbers a[0], a[1], ..., a[n -\n1] \u2014 the elements of a permutation that would meet the required conditions. If\nthere are multiple answers, print any of them. Examples Input 3 3 Output 2 1 3\nInput 4 1 Output 1 2 3 4 Input 5 6 Output -1\n\n",
        "cf_contest_id": 873,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "divide and conquer"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n",
                "2 1 3 "
            ],
            [
                "4 1\r\n",
                "1 2 3 4 "
            ],
            [
                "5 6\r\n",
                "-1"
            ]
        ],
        "private_cases": [
            [
                "100 100\r\n",
                "-1"
            ],
            [
                "10000 20001\r\n",
                "-1"
            ],
            [
                "10000 30001\r\n",
                "-1"
            ],
            [
                "10 17\r\n",
                "3 1 4 6 2 8 5 9 7 10 "
            ]
        ]
    }
]