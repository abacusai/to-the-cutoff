[
    {
        "name": "Potions (Easy Version)",
        "description": "This is the easy version of the problem. The only difference is that in this\nversion \n    n \n    \u2264 2000\n. You can make hacks only if both versions of the\nproblem are solved. There are \n    n\n potions in a line, with potion \n    1\n\non the far left and potion \n    n\n on the far right. Each potion will increase\nyour health by \n    a_i\n when drunk. \n    a_i\n can be negative, meaning that\npotion will decrease will health. You start with \n    0\n health and you will\nwalk from left to right, from first potion to the last one. At each potion,\nyou may choose to drink it or ignore it. You must ensure that your health is\nalways non-negative. What is the largest number of potions you can drink?\nInput The first line contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    2000\n) \u2014 the number of potions. The next line contains \n    n\n integers\n\n    a_1\n, \n    a_2\n, ... ,\n    a_n\n (\n    -10^9 \n    \u2264 a_i \n    \u2264 10^9\n)\nwhich represent the change in health after drinking that potion. Output Output\na single integer, the maximum number of potions you can drink without your\nhealth becoming negative. Example Input 6 4 -4 1 -3 1 -3 Output 5 Note For the\nsample, you can drink \n    5\n potions by taking potions \n    1\n, \n    3\n,\n\n    4\n, \n    5\n and \n    6\n. It is not possible to drink all \n    6\n potions\nbecause your health will go negative at some point\n\n",
        "cf_contest_id": 1526,
        "cf_index": "C1",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n4 -4 1 -3 1 -3\r\n",
                "5\r\n"
            ]
        ],
        "private_cases": [
            [
                "12\r\n-3 -3 -7 -7 -1 -7 3 3 -2 -1 0 -7\r\n",
                "5\r\n"
            ],
            [
                "1\r\n0\r\n",
                "1\r\n"
            ]
        ]
    }
]