[
    {
        "name": "Two Heaps",
        "description": "Valera has 2\u00b7n cubes, each cube contains an integer from 10 to 99. He\narbitrarily chooses n cubes and puts them in the first heap. The remaining\ncubes form the second heap. Valera decided to play with cubes. During the game\nhe takes a cube from the first heap and writes down the number it has. Then he\ntakes a cube from the second heap and write out its two digits near two digits\nhe had written (to the right of them). In the end he obtained a single\nfourdigit integer \u2014 the first two digits of it is written on the cube from the\nfirst heap, and the second two digits of it is written on the second cube from\nthe second heap. Valera knows arithmetic very well. So, he can easily count\nthe number of distinct fourdigit numbers he can get in the game. The other\nquestion is: how to split cubes into two heaps so that this number (the number\nof distinct fourdigit integers Valera can get) will be as large as possible?\nInput The first line contains integer n (1 \u2264 n \u2264 100). The second line\ncontains 2\u00b7n space-separated integers ai (10 \u2264 ai \u2264 99), denoting the numbers\non the cubes. Output In the first line print a single number \u2014 the maximum\npossible number of distinct four-digit numbers Valera can obtain. In the\nsecond line print 2\u00b7n numbers bi (1 \u2264 bi \u2264 2). The numbers mean: the i-th cube\nbelongs to the bi-th heap in your division. If there are multiple optimal ways\nto split the cubes into the heaps, print any of them. Examples Input 1 10 99\nOutput 1 2 1 Input 2 13 24 13 45 Output 4 1 2 2 1 Note In the first test case\nValera can put the first cube in the first heap, and second cube \u2014 in second\nheap. In this case he obtain number 1099. If he put the second cube in the\nfirst heap, and the first cube in the second heap, then he can obtain number\n9910. In both cases the maximum number of distinct integers is equal to one.\nIn the second test case Valera can obtain numbers 1313, 1345, 2413, 2445.\nNote, that if he put the first and the third cubes in the first heap, he can\nobtain only two numbers 1324 and 1345.\n\n",
        "cf_contest_id": 353,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "constructive algorithms",
            "greedy",
            "implementation",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n10 99\r\n",
                "1\r\n2 1\r\n"
            ],
            [
                "2\r\n13 24 13 45\r\n",
                "4\r\n1 2 2 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n21 60 18 21 17 39 58 74 62 34\r\n",
                "25\r\n1 2 1 2 2 1 2 1 2 1\r\n"
            ],
            [
                "10\r\n26 43 29 92 22 27 95 56 72 55 93 51 91 30 70 77 32 69 87 98\r\n",
                "100\r\n2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1\r\n"
            ],
            [
                "20\r\n80 56 58 61 75 60 25 49 59 15 43 39 21 73 67 13 75 31 18 87 32 44 53 15 53 76 79 94 85 80 27 25 48 78 32 18 20 78 46 37\r\n",
                "400\r\n1 2 1 2 1 1 1 2 1 1 2 1 2 1 2 1 2 2 1 1 1 2 1 2 2 1 2 1 2 2 1 2 2 1 2 2 1 2 2 1\r\n"
            ],
            [
                "50\r\n49 13 81 20 73 62 19 49 65 95 32 84 24 96 51 57 53 83 40 44 26 65 78 80 92 87 87 95 56 46 22 44 69 80 41 61 97 92 58 53 42 78 53 19 47 36 25 77 65 81 14 61 38 99 27 58 67 37 67 80 77 51 32 43 31 48 19 79 31 91 46 97 91 71 27 63 22 84 73 73 89 44 34 84 70 23 45 31 56 73 83 38 68 45 99 33 83 86 87 80\r\n",
                "1936\r\n1 2 1 1 1 2 1 2 1 1 1 1 1 2 1 1 1 1 2 1 1 2 1 1 1 1 2 2 1 1 1 2 2 2 1 1 1 2 1 2 2 2 2 2 1 2 1 1 1 2 2 2 1 1 1 2 1 1 2 2 2 2 2 2 1 1 1 2 2 1 2 2 2 1 2 2 2 2 2 2 1 1 2 2 1 2 1 1 2 2 2 2 1 2 2 2 1 1 2 1\r\n"
            ],
            [
                "2\r\n10 10 10 11\r\n",
                "2\r\n1 2 2 1\r\n"
            ]
        ]
    }
]