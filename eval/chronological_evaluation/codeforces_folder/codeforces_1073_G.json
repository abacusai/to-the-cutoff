[
    {
        "name": "Yet Another LCP Problem",
        "description": "Let \n    LCP(s, t)\n be the length of the longest common prefix of\nstrings \n    s\n and \n    t\n. Also let \n    s[x \n    \u2026 y]\n be the substring of\n\n    s\n from index \n    x\n to index \n    y\n (inclusive). For example, if \n    s\n    =\n \"abcde\", then \n    s[1 \n    \u2026 3] =\n \"abc\", \n    s[2 \n    \u2026 5] =\n\n\"bcde\". You are given a string \n    s\n of length \n    n\n and \n    q\n queries.\nEach query is a pair of integer sets \n    a_1, a_2, \n    \u2026, a_k\n and \n    b_1,\n    b_2, \n    \u2026, b_l\n. Calculate \n    \u2211\n    _i = 1^i = k\n    \u2211\n    _j = 1^j = l\n    LCP(s[a_i \n    \u2026 n], s[b_j \n    \u2026\n    n])\n for each query. Input The first line contains two integers \n    n\n and\n\n    q\n (\n    1 \n    \u2264 n, q \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of string\n\n    s\n and the number of queries, respectively. The second line contains a\nstring \n    s\n consisting of lowercase Latin letters (\n    |s| = n\n). Next\n\n    3q\n lines contains descriptions of queries \u2014 three lines per query. The\nfirst line of each query contains two integers \n    k_i\n and \n    l_i\n (\n    1\n    \n    \u2264 k_i, l_i \n    \u2264 n\n) \u2014 sizes of sets \n    a\n and \n    b\n respectively.\nThe second line of each query contains \n    k_i\n integers \n    a_1, a_2, \n    \u2026\n    a_k_i\n (\n    1 \n    \u2264 a_1 < a_2 < \n    \u2026 < a_k_i\n    \u2264 n\n) \u2014 set\n\n    a\n. The third line of each query contains \n    l_i\n integers \n    b_1, b_2,\n    \n    \u2026 b_l_i\n (\n    1 \n    \u2264 b_1 < b_2 < \n    \u2026 < b_l_i\n    \u2264 n\n) \u2014 set\n\n    b\n. It is guaranteed that \n    \u2211\n    _i = 1^i = qk_i\n    \u2264 2\n    \n    \u00b7 10^5\n and \n    \u2211\n    _i = 1^i = ql_i\n    \u2264 2 \n    \u00b7\n    10^5\n. Output Print \n    q\n integers \u2014 answers for the queries in the same\norder queries are given in the input. Example Input 7 4 abacaba 2 2 1 2 1 2 3\n1 1 2 3 7 1 7 1 1 2 3 4 5 6 7 2 2 1 5 1 5 Output 13 2 12 16 Note Description\nof queries: In the first query \n    s[1 \n    \u2026 7] = \n    abacaba\n and\n\n    s[2 \n    \u2026 7] = \n    bacaba\n are considered. The answer for the\nquery is \n    LCP(\n    abacaba, \n    abacaba) +\n    \n    LCP(\n    abacaba, \n    bacaba) +\n    \n    LCP(\n    bacaba, \n    abacaba) +\n    \n    LCP(\n    bacaba, \n    bacaba) = 7 + 0 + 0 + 6 = 13\n. In the\nsecond query \n    s[1 \n    \u2026 7] = \n    abacaba\n, \n    s[2 \n    \u2026 7] =\n    \n    bacaba\n, \n    s[3 \n    \u2026 7] = \n    acaba\n and \n    s[7 \n    \u2026\n    7] = \n    a\n are considered. The answer for the query is\n\n    LCP(\n    abacaba, \n    a) + \n    LCP(\n    bacaba,\n    \n    a) + \n    LCP(\n    acaba, \n    a) = 1 + 0 + 1 = 2\n. In\nthe third query \n    s[1 \n    \u2026 7] = \n    abacaba\n are compared with all\nsuffixes. The answer is the sum of non-zero values:\n\n    LCP(\n    abacaba, \n    abacaba) +\n    \n    LCP(\n    abacaba, \n    acaba) +\n    \n    LCP(\n    abacaba, \n    aba) + \n    LCP(\n    abacaba,\n    \n    a) = 7 + 1 + 3 + 1 = 12\n. In the fourth query \n    s[1 \n    \u2026 7] =\n    \n    abacaba\n and \n    s[5 \n    \u2026 7] = \n    aba\n are considered.\nThe answer for the query is \n    LCP(\n    abacaba,\n    \n    abacaba) + \n    LCP(\n    abacaba, \n    aba) +\n    \n    LCP(\n    aba, \n    abacaba) + \n    LCP(\n    aba,\n    \n    aba) = 7 + 3 + 3 + 3 = 16\n.\n\n",
        "cf_contest_id": 1073,
        "cf_index": "G",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "string suffix structures"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 4\r\nabacaba\r\n2 2\r\n1 2\r\n1 2\r\n3 1\r\n1 2 3\r\n7\r\n1 7\r\n1\r\n1 2 3 4 5 6 7\r\n2 2\r\n1 5\r\n1 5\r\n",
                "13\r\n2\r\n12\r\n16\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\nz\r\n1 1\r\n1\r\n1\r\n",
                "1\r\n"
            ]
        ]
    }
]