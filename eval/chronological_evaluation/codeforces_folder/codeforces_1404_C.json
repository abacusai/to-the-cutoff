[
    {
        "name": "Fixed Point Removal",
        "description": "Let \n    a_1, \n    \u2026, a_n\n be an array of \n    n\n positive integers. In one\noperation, you can choose an index \n    i\n such that \n    a_i = i\n, and remove\n\n    a_i\n from the array (after the removal, the remaining parts are\nconcatenated). The weight of \n    a\n is defined as the maximum number of\nelements you can remove. You must answer \n    q\n independent queries \n    (x,\n    y)\n: after replacing the \n    x\n first elements of \n    a\n and the \n    y\n\nlast elements of \n    a\n by \n    n+1\n (making them impossible to remove), what\nwould be the weight of \n    a\n? Input The first line contains two integers\n\n    n\n and \n    q\n (\n    1 \n    \u2264 n, q \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the length of\nthe array and the number of queries. The second line contains \n    n\n integers\n\n    a_1\n, \n    a_2\n, ..., \n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014 elements\nof the array. The \n    i\n-th of the next \n    q\n lines contains two integers\n\n    x\n and \n    y\n (\n    x, y \n    \u2265 0\n and \n    x+y < n\n). Output Print\n\n    q\n lines, \n    i\n-th line should contain a single integer \u2014 the answer to\nthe \n    i\n-th query. Examples Input 13 5 2 2 3 9 5 4 6 5 7 8 3 11 13 3 1 0 0\n2 4 5 0 0 12 Output 5 11 6 1 0 Input 5 2 1 4 1 2 4 0 0 1 0 Output 2 0 Note\nExplanation of the first query: After making first \n    x = 3\n and last \n    y =\n    1\n elements impossible to remove, \n    a\n becomes \n    [\n    \u00d7, \n    \u00d7,\n    \n    \u00d7, 9, 5, 4, 6, 5, 7, 8, 3, 11, \n    \u00d7]\n (we represent \n    14\n as\n\n    \u00d7\n for clarity). Here is a strategy that removes \n    5\n elements\n(the element removed is colored in red): \n    [\n    \u00d7, \n    \u00d7, \n    \u00d7, 9,\n    \n    5, 4, 6, 5, 7, 8, 3, 11, \n    \u00d7]\n \n    [\n    \u00d7, \n    \u00d7,\n    \n    \u00d7, 9, 4, 6, 5, 7, 8, 3, \n    11, \n    \u00d7]\n \n    [\n    \u00d7,\n    \n    \u00d7, \n    \u00d7, 9, 4, \n    6, 5, 7, 8, 3, \n    \u00d7]\n\n\n    [\n    \u00d7, \n    \u00d7, \n    \u00d7, 9, 4, 5, 7, \n    8, 3,\n    \n    \u00d7]\n \n    [\n    \u00d7, \n    \u00d7, \n    \u00d7, 9, 4, 5, \n    7, 3,\n    \n    \u00d7]\n \n    [\n    \u00d7, \n    \u00d7, \n    \u00d7, 9, 4, 5, 3, \n    \u00d7]\n (final\nstate) It is impossible to remove more than \n    5\n elements, hence the weight\nis \n    5\n.\n\n",
        "cf_contest_id": 1404,
        "cf_index": "C",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "13 5\r\n2 2 3 9 5 4 6 5 7 8 3 11 13\r\n3 1\r\n0 0\r\n2 4\r\n5 0\r\n0 12\r\n",
                "5\r\n11\r\n6\r\n1\r\n0\r\n"
            ],
            [
                "5 2\r\n1 4 1 2 4\r\n0 0\r\n1 0\r\n",
                "2\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n0 0\r\n",
                "1\r\n"
            ],
            [
                "30 10\r\n1 1 3 3 5 2 1 8 2 6 11 5 2 6 12 11 8 5 11 3 14 8 16 13 14 25 16 2 8 17\r\n6 3\r\n0 15\r\n1 0\r\n9 2\r\n12 16\r\n1 0\r\n17 3\r\n14 13\r\n0 22\r\n3 10\r\n",
                "3\r\n15\r\n16\r\n2\r\n0\r\n16\r\n0\r\n0\r\n8\r\n4\r\n"
            ],
            [
                "2 1\r\n1 1\r\n0 0\r\n",
                "2\r\n"
            ]
        ]
    }
]