[
    {
        "name": "Dish Shopping",
        "description": "There are \n    m\n people living in a city. There are \n    n\n dishes sold in\nthe city. Each dish \n    i\n has a price \n    p_i\n, a standard \n    s_i\n and a\nbeauty \n    b_i\n. Each person \n    j\n has an income of \n    inc_j\n and a\npreferred beauty \n    pref_j\n. A person would never buy a dish whose standard\nis less than the person's income. Also, a person can't afford a dish with a\nprice greater than the income of the person. In other words, a person \n    j\n\ncan buy a dish \n    i\n only if \n    p_i \n    \u2264 inc_j \n    \u2264 s_i\n. Also, a\nperson \n    j\n can buy a dish \n    i\n, only if \n    |b_i-pref_j| \n    \u2264 (inc_j-\n    p_i)\n. In other words, if the price of the dish is less than the person's\nincome by \n    k\n, the person will only allow the absolute difference of at\nmost \n    k\n between the beauty of the dish and his/her preferred beauty.\nPrint the number of dishes that can be bought by each person in the city.\nInput The first line contains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n\n    \n    \u2264 10^5\n, \n    1 \n    \u2264 m \n    \u2264 10^5\n), the number of dishes available\nin the city and the number of people living in the city. The second line\ncontains \n    n\n integers \n    p_i\n (\n    1 \n    \u2264 p_i \n    \u2264 10^9\n), the\nprice of each dish. The third line contains \n    n\n integers \n    s_i\n (\n    1\n    \n    \u2264 s_i \n    \u2264 10^9\n), the standard of each dish. The fourth line\ncontains \n    n\n integers \n    b_i\n (\n    1 \n    \u2264 b_i \n    \u2264 10^9\n), the\nbeauty of each dish. The fifth line contains \n    m\n integers \n    inc_j\n\n(\n    1 \n    \u2264 inc_j \n    \u2264 10^9\n), the income of every person. The sixth line\ncontains \n    m\n integers \n    pref_j\n (\n    1 \n    \u2264 pref_j \n    \u2264 10^9\n),\nthe preferred beauty of every person. It is guaranteed that for all integers\n\n    i\n from \n    1\n to \n    n\n, the following condition holds: \n    p_i \n    \u2264\n    s_i\n. Output Print \n    m\n integers, the number of dishes that can be bought\nby every person living in the city. Examples Input 3 3 2 1 3 2 4 4 2 1 1 2 2 3\n1 2 4 Output 1 2 0 Input 4 3 1 2 1 1 3 3 1 3 2 1 3 2 1 1 3 1 2 1 Output 0 2 3\nNote In the first example, the first person can buy dish \n    2\n, the second\nperson can buy dishes \n    1\n and \n    2\n and the third person can buy no\ndishes. In the second example, the first person can buy no dishes, the second\nperson can buy dishes \n    1\n and \n    4\n, and the third person can buy dishes\n\n    1\n, \n    2\n and \n    4\n.\n\n",
        "cf_contest_id": 1139,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "divide and conquer"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n2 1 3\r\n2 4 4\r\n2 1 1\r\n2 2 3\r\n1 2 4\r\n",
                "1 2 0 "
            ],
            [
                "4 3\r\n1 2 1 1\r\n3 3 1 3\r\n2 1 3 2\r\n1 1 3\r\n1 2 1\r\n",
                "0 2 3 "
            ]
        ],
        "private_cases": [
            [
                "5 5\r\n33 89 71 7 63\r\n33 89 90 45 63\r\n29 71 67 78 81\r\n87 27 31 52 11\r\n75 23 36 52 71\r\n",
                "1 0 0 0 0 "
            ],
            [
                "5 5\r\n221509973 221509955 221509891 221509947 221509951\r\n221509973 221509974 221509929 221509947 221509951\r\n32818611 32818614 32818620 32818560 32818564\r\n221509936 221509895 221509959 221509907 221509920\r\n32818585 32818604 32818611 32818575 32818610\r\n",
                "0 0 1 0 1 "
            ],
            [
                "1 1\r\n164624305\r\n164624305\r\n782766006\r\n676933777\r\n993103463\r\n",
                "0 "
            ],
            [
                "1 1\r\n1000000000\r\n1000000000\r\n1000000000\r\n1000000000\r\n1000000000\r\n",
                "1 "
            ]
        ]
    }
]