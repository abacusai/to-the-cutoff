[
    {
        "name": "Detect Robots",
        "description": "You successfully found poor Arkady near the exit of the station you've\nperfectly predicted. You sent him home on a taxi and suddenly came up with a\nquestion. There are \n    n\n crossroads in your city and several bidirectional\nroads connecting some of them. A taxi ride is a path from some crossroads to\nanother one without passing the same crossroads twice. You have a collection\nof rides made by one driver and now you wonder if this driver can be a robot\nor they are definitely a human. You think that the driver can be a robot if\nfor every two crossroads \n    a\n and \n    b\n the driver always chooses the\nsame path whenever he drives from \n    a\n to \n    b\n. Note that \n    a\n and\n\n    b\n here do not have to be the endpoints of a ride and that the path from\n\n    b\n to \n    a\n can be different. On the contrary, if the driver ever has\ndriven two different paths from \n    a\n to \n    b\n, they are definitely a\nhuman. Given the system of roads and the description of all rides available to\nyou, determine if the driver can be a robot or not. Input Each test contains\none or more test cases. The first line contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the number of test cases. The first line of\neach test case contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 3 \n    \u00b7\n    10^5\n) \u2014 the number of crossroads in the city. The next line contains a\nsingle integer \n    q\n (\n    1 \n    \u2264 q \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the number of\nrides available to you. Each of the following \n    q\n lines starts with a\nsingle integer \n    k\n (\n    2 \n    \u2264 k \n    \u2264 n\n) \u2014 the number of crossroads\nvisited by the driver on this ride. It is followed by \n    k\n integers\n\n    c_1\n, \n    c_2\n, ..., \n    c_k\n (\n    1 \n    \u2264 c_i \n    \u2264 n\n) \u2014 the\ncrossroads in the order the driver visited them. It is guaranteed that all\ncrossroads in one ride are distinct. It is guaranteed that the sum of values\n\n    k\n among all rides of all test cases does not exceed \n    3 \n    \u00b7\n    10^5\n. It is guaranteed that the sum of values \n    n\n and the sum of values\n\n    q\n doesn't exceed \n    3 \n    \u00b7 10^5\n among all test cases. Output\nOutput a single line for each test case. If the driver can be a robot, output\n\"Robot\" in a single line. Otherwise, output \"Human\". You can print each letter\nin any case (upper or lower). Examples Input 1 5 2 4 1 2 3 5 3 1 4 3 Output\nHuman Input 1 4 4 3 1 2 3 3 2 3 4 3 3 4 1 3 4 1 2 Output Robot Note In the\nfirst example it is clear that the driver used two different ways to get from\ncrossroads \n    1\n to crossroads \n    3\n. It must be a human. In the second\nexample the driver always drives the cycle \n    1 \n    \u2192 2 \n    \u2192 3 \n    \u2192 4 \n    \u2192\n    1\n until he reaches destination.\n\n",
        "cf_contest_id": 1056,
        "cf_index": "H",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "1\r\n5\r\n2\r\n4 1 2 3 5\r\n3 1 4 3\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n4\r\n4\r\n3 1 2 3\r\n3 2 3 4\r\n3 3 4 1\r\n3 4 1 2\r\n",
                "Robot\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n5\r\n4\r\n2 5 2\r\n2 1 2\r\n3 1 3 4\r\n2 3 4\r\n5\r\n4\r\n2 2 3\r\n2 2 3\r\n2 5 3\r\n2 2 3\r\n",
                "Robot\r\nRobot\r\n"
            ],
            [
                "1\r\n20\r\n20\r\n8 14 1 3 2 12 18 19 4\r\n9 10 17 19 2 7 6 20 14 11\r\n8 5 10 3 2 8 7 1 17\r\n7 5 19 2 9 16 11 17\r\n7 13 3 14 4 9 8 17\r\n9 3 12 6 16 2 1 18 4 14\r\n8 12 16 3 20 6 8 17 13\r\n3 12 3 15\r\n8 16 11 2 6 3 19 17 13\r\n7 1 10 5 4 6 15 2\r\n3 10 18 3\r\n5 17 20 6 16 12\r\n10 14 18 17 8 1 16 6 5 2 7\r\n10 1 5 12 16 14 2 11 7 15 3\r\n5 5 3 15 1 2\r\n10 16 8 5 13 20 14 18 1 15 12\r\n2 13 7\r\n7 2 20 19 14 10 5 12\r\n8 15 1 4 7 2 3 12 19\r\n8 1 12 17 16 3 4 5 18\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n300\r\n7\r\n17 164 162 128 239 246 103 238 157 226 286 180 166 223 182 172 161 256\r\n17 33 110 87 27 203 100 239 65 246 44 54 42 266 202 41 140 108\r\n17 153 241 100 74 132 166 265 172 208 293 189 176 221 109 35 162 231\r\n17 256 66 207 202 70 277 294 90 2 75 17 181 231 219 233 215 94\r\n17 231 204 240 199 138 180 264 189 153 160 208 90 104 190 116 295 293\r\n17 216 180 176 261 219 90 276 116 59 25 179 109 172 24 73 74 171\r\n17 259 90 55 116 205 227 177 288 298 154 128 19 20 114 212 153 133\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n3000\r\n1\r\n2 2265 627\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300\r\n1\r\n2 185 85\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300\r\n1\r\n5 208 276 241 149 95\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300\r\n3\r\n2 80 209\r\n2 5 211\r\n5 80 209 297 5 211\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300\r\n3\r\n5 132 137 39 300 3\r\n2 132 137\r\n5 132 137 157 300 3\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n300\r\n5\r\n2 138 291\r\n5 136 97 168 138 291\r\n2 138 291\r\n2 136 97\r\n2 138 291\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300\r\n5\r\n2 189 295\r\n2 141 1\r\n5 189 295 275 141 1\r\n2 189 295\r\n2 189 295\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300\r\n7\r\n2 79 172\r\n2 79 172\r\n2 121 278\r\n5 121 278 4 79 172\r\n2 79 172\r\n5 121 278 25 79 172\r\n5 79 172 110 121 278\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n300\r\n7\r\n5 227 54 86 261 191\r\n2 227 54\r\n5 227 54 239 261 191\r\n2 227 54\r\n5 261 191 154 227 54\r\n2 261 191\r\n5 227 54 100 261 191\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n300\r\n1\r\n17 286 246 299 12 203 59 234 7 150 211 50 179 14 133 67 209 254\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300\r\n1\r\n17 159 119 7 213 33 128 251 57 268 58 201 172 246 203 113 120 74\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300\r\n3\r\n17 271 91 241 80 224 187 151 280 141 122 184 234 180 37 199 170 104\r\n17 226 163 262 205 276 35 138 91 42 178 209 152 6 191 271 230 14\r\n17 9 117 99 270 186 192 224 207 20 152 65 151 177 26 209 127 136\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n300\r\n3\r\n17 62 257 248 200 198 85 95 68 235 17 147 67 279 42 125 259 160\r\n17 226 94 230 151 275 218 43 44 293 41 248 147 224 68 175 22 132\r\n17 62 257 248 200 198 85 95 68 235 17 147 67 279 42 125 259 160\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n300\r\n5\r\n17 30 113 210 234 53 140 189 28 26 77 200 190 295 124 273 101 294\r\n17 1 300 176 111 23 87 202 224 95 107 270 43 29 72 47 190 277\r\n17 175 196 72 137 38 144 239 25 195 111 146 106 50 245 158 37 140\r\n17 1 300 176 111 23 87 202 224 95 107 270 43 29 72 47 190 277\r\n17 211 86 136 123 124 41 271 187 31 251 38 240 83 158 245 107 98\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n300\r\n5\r\n17 100 281 152 33 287 83 139 162 291 84 171 40 273 191 298 45 138\r\n17 217 80 207 257 144 63 28 68 240 127 104 122 244 275 223 112 246\r\n17 8 159 121 281 237 157 52 17 139 15 196 217 81 284 219 42 153\r\n35 153 12 172 76 72 157 17 138 161 70 257 232 169 239 249 131 159 297 298 75 59 21 121 246 54 10 151 250 93 111 27 196 136 56 114\r\n35 153 12 172 76 72 157 17 138 161 70 257 232 169 239 249 131 159 141 100 52 50 66 291 207 211 168 252 185 24 230 110 98 275 268 58\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n3000\r\n1\r\n2 1359 2226\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n3000\r\n3\r\n2 2533 2717\r\n2 905 2395\r\n2 2533 2717\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n3000\r\n3\r\n5 1219 1838 515 2314 518\r\n2 2314 518\r\n5 2314 518 1602 1219 1838\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n3000\r\n5\r\n2 2981 1321\r\n5 2981 1321 2700 1345 1613\r\n5 2981 1321 2741 1345 1613\r\n5 2981 1321 161 1345 1613\r\n2 1345 1613\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n3000\r\n5\r\n2 2577 2935\r\n2 2577 2935\r\n2 2250 1520\r\n5 2577 2935 1822 2250 1520\r\n2 2250 1520\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n3000\r\n7\r\n5 1652 2733 1997 1267 1798\r\n2 1267 1798\r\n2 1267 1798\r\n2 1652 2733\r\n2 1267 1798\r\n2 1267 1798\r\n2 1652 2733\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n3000\r\n7\r\n5 163 2537 2425 1185 723\r\n5 1185 723 104 163 2537\r\n2 1185 723\r\n5 1185 723 176 163 2537\r\n5 1185 723 2406 163 2537\r\n2 1185 723\r\n2 163 2537\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n3000\r\n1\r\n35 458 755 2197 2960 2450 98 562 252 2798 140 987 2194 2211 2989 100 959 1502 1278 1476 1120 486 1302 2273 1628 702 5 947 1497 302 1397 2834 1442 1071 2327 356\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n3000\r\n1\r\n53 273 2455 348 2303 1174 300 336 1102 2362 647 978 2494 67 1873 2585 2120 1150 343 783 1749 2510 1385 1627 2936 689 1350 1572 714 1362 1838 403 184 2674 2988 870 2408 2888 2827 2511 1189 2616 1997 2185 33 247 1312 2432 652 3 2148 2927 258 2411\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n3000\r\n3\r\n17 1179 2524 2619 113 2556 2108 1703 1735 1783 1853 1430 768 2915 836 182 2859 2038\r\n35 1364 554 1822 970 812 205 2262 2992 1073 2091 2380 1992 407 2324 86 1747 807 2338 1559 2550 2887 768 80 1159 2585 2755 2517 676 1101 2129 939 1580 1312 2819 737\r\n17 1179 2524 2619 113 2556 2108 1703 1735 1783 1853 1430 768 2915 836 182 2859 2038\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n3000\r\n3\r\n35 2043 284 2482 331 1559 2466 2844 602 477 470 1790 740 588 1545 2240 352 1735 2082 224 2026 2220 995 2165 2467 161 1548 2656 1241 1267 2440 526 51 410 159 90\r\n17 2252 1906 1401 2988 909 915 2506 3000 295 2736 2105 2272 2671 2914 865 1462 2642\r\n53 1156 1908 2355 941 2348 2556 310 2873 1036 1603 2112 1736 1665 857 1476 2278 2920 2255 1913 440 2830 2424 479 450 1959 2937 2635 1952 1035 1107 1926 597 1506 131 2084 1209 1395 170 2601 1382 1274 2895 790 211 1833 1176 544 1820 2068 1303 277 536 78\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n30000\r\n1\r\n5 4811 2977 15160 24555 12862\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n30000\r\n1\r\n2 21841 16340\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n30000\r\n3\r\n2 5673 23530\r\n2 5673 23530\r\n2 11215 505\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n30000\r\n3\r\n5 13569 5922 29910 21284 2498\r\n5 21284 2498 21328 13569 5922\r\n2 13569 5922\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n30000\r\n5\r\n5 9927 16559 22939 62 17906\r\n2 9927 16559\r\n2 62 17906\r\n2 9927 16559\r\n5 62 17906 4337 9927 16559\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n30000\r\n5\r\n2 421 13373\r\n2 421 13373\r\n2 26161 8338\r\n5 26161 8338 14978 421 13373\r\n5 421 13373 25123 26161 8338\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n30000\r\n7\r\n5 21431 1007 24928 16115 18093\r\n2 16115 18093\r\n2 21431 1007\r\n5 21431 1007 10940 16115 18093\r\n5 16115 18093 26408 21431 1007\r\n2 16115 18093\r\n2 21431 1007\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n30000\r\n7\r\n2 27195 10175\r\n2 27195 10175\r\n5 26378 22140 10372 27195 10175\r\n5 26378 22140 22274 27195 10175\r\n5 26378 22140 16525 27195 10175\r\n2 26378 22140\r\n5 26378 22140 12392 27195 10175\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n30000\r\n1\r\n35 28094 20676 24380 27979 23113 12933 25784 6046 28712 27552 10563 15294 15196 28779 24121 18841 27504 16980 7414 11850 4685 8189 28606 9747 29898 15521 9171 10364 12370 9787 11840 7987 21766 22307 25621\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n30000\r\n1\r\n17 8236 22899 29898 6362 8635 22504 4787 7398 16005 20442 25322 103 5178 7864 13558 27579 14883\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300000\r\n1\r\n5 138205 255806 3115 255376 168072\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300000\r\n1\r\n5 241285 182472 187769 49030 179709\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300000\r\n3\r\n5 78105 260055 172459 31566 289389\r\n5 31566 289389 7363 78105 260055\r\n5 78105 260055 260447 31566 289389\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n300000\r\n3\r\n2 154463 7434\r\n2 154463 7434\r\n5 252038 83579 271161 154463 7434\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300000\r\n5\r\n2 32949 226874\r\n2 32949 226874\r\n5 32949 226874 149914 270140 197733\r\n2 32949 226874\r\n2 32949 226874\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300000\r\n5\r\n2 16358 18500\r\n2 16358 18500\r\n2 78783 25409\r\n2 78783 25409\r\n2 78783 25409\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300000\r\n7\r\n5 291809 279227 265237 138822 19961\r\n5 138822 19961 281144 291809 279227\r\n2 291809 279227\r\n5 291809 279227 82938 138822 19961\r\n5 291809 279227 29111 138822 19961\r\n2 291809 279227\r\n2 138822 19961\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n300000\r\n7\r\n2 81410 142640\r\n5 109969 261749 17157 81410 142640\r\n5 81410 142640 16632 109969 261749\r\n2 109969 261749\r\n2 109969 261749\r\n2 81410 142640\r\n5 81410 142640 207476 109969 261749\r\n",
                "Human\r\n"
            ],
            [
                "1\r\n300000\r\n1\r\n17 214705 15860 217740 65518 63937 6379 297838 106326 8220 168405 140587 239575 220170 98627 173371 11334 206768\r\n",
                "Robot\r\n"
            ],
            [
                "1\r\n300000\r\n1\r\n53 50405 98026 13462 52503 25543 229581 234145 108980 96136 87628 18802 250309 268550 152173 96376 96930 23132 67973 205038 79947 252014 48318 123513 105756 284616 19934 122478 48429 68187 240248 143873 124206 251727 121928 152341 1527 292229 286701 114432 112340 128630 38481 135952 216197 235926 63709 13563 298394 246130 211781 116487 230826 209799\r\n",
                "Robot\r\n"
            ]
        ]
    }
]