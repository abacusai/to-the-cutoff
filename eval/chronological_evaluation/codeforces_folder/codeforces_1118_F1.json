[
    {
        "name": "Tree Cutting (Easy Version)",
        "description": "You are given an undirected tree of \n    n\n vertices. Some vertices are\ncolored blue, some are colored red and some are uncolored. It is guaranteed\nthat the tree contains at least one red vertex and at least one blue vertex.\nYou choose an edge and remove it from the tree. Tree falls apart into two\nconnected components. Let's call an edge nice if neither of the resulting\ncomponents contain vertices of both red and blue colors. How many nice edges\nare there in the given tree? Input The first line contains a single integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the number of vertices in the\ntree. The second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n\n(\n    0 \n    \u2264 a_i \n    \u2264 2\n) \u2014 the colors of the vertices. \n    a_i = 1\n means\nthat vertex \n    i\n is colored red, \n    a_i = 2\n means that vertex \n    i\n is\ncolored blue and \n    a_i = 0\n means that vertex \n    i\n is uncolored. The\n\n    i\n-th of the next \n    n - 1\n lines contains two integers \n    v_i\n and\n\n    u_i\n (\n    1 \n    \u2264 v_i, u_i \n    \u2264 n\n, \n    v_i \n     u_i\n) \u2014 the edges of\nthe tree. It is guaranteed that the given edges form a tree. It is guaranteed\nthat the tree contains at least one red vertex and at least one blue vertex.\nOutput Print a single integer \u2014 the number of nice edges in the given tree.\nExamples Input 5 2 0 0 1 2 1 2 2 3 2 4 2 5 Output 1 Input 5 1 0 0 0 2 1 2 2 3\n3 4 4 5 Output 4 Input 3 1 1 2 2 3 1 3 Output 0 Note Here is the tree from the\nfirst example: The only nice edge is edge \n    (2, 4)\n. Removing it makes the\ntree fall apart into components \n    4\n and \n    1, 2, 3,\n    5\n. The first component only includes a red vertex and the second\ncomponent includes blue vertices and uncolored vertices. Here is the tree from\nthe second example: Every edge is nice in it. Here is the tree from the third\nexample: Edge \n    (1, 3)\n splits the into components \n    1\n and\n\n    3, 2\n, the latter one includes both red and blue vertex, thus\nthe edge isn't nice. Edge \n    (2, 3)\n splits the into components \n    1,\n    3\n and \n    2\n, the former one includes both red and blue\nvertex, thus the edge also isn't nice. So the answer is 0.\n\n",
        "cf_contest_id": 1118,
        "cf_index": "F1",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 0 0 1 2\r\n1 2\r\n2 3\r\n2 4\r\n2 5\r\n",
                "1\r\n"
            ],
            [
                "5\r\n1 0 0 0 2\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n",
                "4\r\n"
            ],
            [
                "3\r\n1 1 2\r\n2 3\r\n1 3\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n2 1\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "2\r\n1 2\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 2 1\r\n1 3\r\n2 3\r\n",
                "1\r\n"
            ],
            [
                "5\r\n1 2 2 0 2\r\n1 2\r\n1 5\r\n3 5\r\n4 5\r\n",
                "0\r\n"
            ],
            [
                "6\r\n1 2 1 2 1 0\r\n1 5\r\n2 3\r\n3 5\r\n3 6\r\n4 5\r\n",
                "0\r\n"
            ],
            [
                "10\r\n1 2 0 0 1 1 1 1 0 1\r\n1 3\r\n1 5\r\n2 10\r\n3 4\r\n3 8\r\n4 6\r\n4 7\r\n6 9\r\n9 10\r\n",
                "1\r\n"
            ],
            [
                "20\r\n1 2 1 1 0 0 0 1 1 1 0 0 0 1 0 2 0 2 1 1\r\n1 20\r\n2 3\r\n2 4\r\n2 14\r\n2 18\r\n3 10\r\n5 15\r\n5 16\r\n6 17\r\n7 15\r\n8 15\r\n9 17\r\n9 20\r\n11 14\r\n12 18\r\n12 20\r\n13 19\r\n15 17\r\n18 19\r\n",
                "0\r\n"
            ]
        ]
    }
]