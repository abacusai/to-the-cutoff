[
    {
        "name": "Replace To Make Regular Bracket Sequence",
        "description": "You are given string s consists of opening and closing brackets of four kinds\n<>, , [], (). There are two types of brackets: opening and closing. You can\nreplace any bracket by another of the same type. For example, you can replace\n< by the bracket , but you can't replace it by ) or >. The following\ndefinition of a regular bracket sequence is well-known, so you can be familiar\nwith it. Let's define a regular bracket sequence (RBS). Empty string is RBS.\nLet s1 and s2 be a RBS then the strings s2, s1s2, [s1]s2, (s1)s2 are also\nRBS. For example the string \"[[()]<>]\" is RBS, but the strings \"[)()\" and\n\"][()()\" are not. Determine the least number of replaces to make the string s\nRBS. Input The only line contains a non empty string s, consisting of only\nopening and closing brackets of four kinds. The length of s does not exceed\n10^6. Output If it's impossible to get RBS from s print Impossible. Otherwise\nprint the least number of replaces needed to get RBS from s. Examples Input\n[<) Output 2 Input ()[] Output 0 Input ]] Output Impossible\n\n",
        "cf_contest_id": 612,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "expression parsing",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "[<}){}\r\n",
                "2\r\n"
            ],
            [
                "{()}[]\r\n",
                "0\r\n"
            ],
            [
                "]]\r\n",
                "Impossible\r\n"
            ]
        ],
        "private_cases": [
            [
                ">\r\n",
                "Impossible\r\n"
            ],
            [
                "{}\r\n",
                "0\r\n"
            ],
            [
                "{}\r\n",
                "0\r\n"
            ],
            [
                "{]\r\n",
                "1\r\n"
            ],
            [
                "{]\r\n",
                "1\r\n"
            ],
            [
                "{]\r\n",
                "1\r\n"
            ],
            [
                "[]{[]({)([\r\n",
                "Impossible\r\n"
            ],
            [
                "(([{>}{[{[)]]>>]\r\n",
                "7\r\n"
            ],
            [
                "((<>)[]<]><]\r\n",
                "3\r\n"
            ],
            [
                "[[([[(>]>)))[<)>\r\n",
                "6\r\n"
            ],
            [
                "({)[}<)](}\r\n",
                "5\r\n"
            ],
            [
                "(}{)[<][)(]}\r\n",
                "6\r\n"
            ],
            [
                ">}({>]{[}<{<{{)[]]{)]>]]]<(][{)<<<{<<)>)()[>{<]]{}<>}}}}(>}<})(][>{((<{<)]}>)))][>[}[])<]){]]][<[)([\r\n",
                "Impossible\r\n"
            ],
            [
                "<<[<{{<([({<<[)<>(]]){})>[](])[)))[[}>]<)>[[>{>>>[<]}<>>)[>]<{)<[><(<]][>(>]>][(<][{]}(()<[()[>><<])<]})]<]}{)\r\n",
                "45\r\n"
            ],
            [
                "[<<{{((}[}<<)<)>})(][{>}})((>)<[)[>}[})[)>()[()[((}<<(>)<>](<>(}[>})[[[{)<}<<(}{>>}[<([[])<><)]<{>}[>>>{({>)}]})>)\r\n",
                "42\r\n"
            ],
            [
                "(<[([(<({>(}{]>[(})])}])()<<}{]{[>]>(>>[(>>}[){(}<[{(()]{{<(<{][[{<><{<{)<>>]}}}{)(}{})}[<))>>}((({>){({}{{]}]>>}})>))\r\n",
                "43\r\n"
            ],
            [
                "{(]}<([]<]{>]<{<({{{<>))}[({(}{)[}({>]}}<<)}<]))(<>(>{>{{{)<}({<]<>{)(>[)>{({}<([<[[)]><>{]}}(>]{}<)[})]}]]}]}>}\r\n",
                "40\r\n"
            ],
            [
                "<(([)]<[}>{)>][[(<()({{{>>((]<}<{{<>}><<[)}[[)([[)[)}<]<{(<>){([)><{[([[][({])})<][(}]}>>[){)[({>){(}[}})>}>]>)]}))})>}]\r\n",
                "45\r\n"
            ],
            [
                ")(\r\n",
                "Impossible\r\n"
            ],
            [
                "[[[[[[[[\r\n",
                "Impossible\r\n"
            ]
        ]
    }
]