[
    {
        "name": "Work Group",
        "description": "One Big Software Company has n employees numbered from 1 to n. The director is\nassigned number 1. Every employee of the company except the director has\nexactly one immediate superior. The director, of course, doesn't have a\nsuperior. We will call person a a subordinates of another person b, if either\nb is an immediate supervisor of a, or the immediate supervisor of a is a\nsubordinate to person b. In particular, subordinates of the head are all other\nemployees of the company. To solve achieve an Important Goal we need to form a\nworkgroup. Every person has some efficiency, expressed by a positive integer\nai, where i is the person's number. The efficiency of the workgroup is defined\nas the total efficiency of all the people included in it. The employees of the\nbig software company are obsessed with modern ways of work process\norganization. Today pair programming is at the peak of popularity, so the\nworkgroup should be formed with the following condition. Each person entering\nthe workgroup should be able to sort all of his subordinates who are also in\nthe workgroup into pairs. In other words, for each of the members of the\nworkgroup the number of his subordinates within the workgroup should be even.\nYour task is to determine the maximum possible efficiency of the workgroup\nformed at observing the given condition. Any person including the director of\ncompany can enter the workgroup. Input The first line contains integer n (1 \u2264\nn \u2264 2\u00b710^5) \u2014 the number of workers of the Big Software Company. Then n lines\nfollow, describing the company employees. The i-th line contains two integers\npi, ai (1 \u2264 ai \u2264 10^5) \u2014 the number of the person who is the i-th employee's\nimmediate superior and i-th employee's efficiency. For the director p1 = - 1,\nfor all other people the condition 1 \u2264 pi < i is fulfilled. Output Print a\nsingle integer \u2014 the maximum possible efficiency of the workgroup. Examples\nInput 7 -1 3 1 2 1 1 1 4 4 5 4 3 5 2 Output 17 Note In the sample test the\nmost effective way is to make a workgroup from employees number 1, 2, 4, 5, 6.\n\n",
        "cf_contest_id": 533,
        "cf_index": "B",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "strings",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n-1 3\r\n1 2\r\n1 1\r\n1 4\r\n4 5\r\n4 3\r\n5 2\r\n",
                "17\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n-1 42\r\n",
                "42\r\n"
            ],
            [
                "2\r\n-1 3\r\n1 2\r\n",
                "3\r\n"
            ],
            [
                "3\r\n-1 3\r\n1 1\r\n1 2\r\n",
                "6\r\n"
            ],
            [
                "3\r\n-1 1\r\n1 2\r\n1 3\r\n",
                "6\r\n"
            ],
            [
                "3\r\n-1 3\r\n1 2\r\n2 1\r\n",
                "3\r\n"
            ],
            [
                "20\r\n-1 100\r\n1 10\r\n2 26\r\n2 33\r\n3 31\r\n2 28\r\n1 47\r\n6 18\r\n6 25\r\n9 2\r\n4 17\r\n6 18\r\n6 2\r\n6 30\r\n13 7\r\n5 25\r\n7 11\r\n11 7\r\n17 40\r\n12 43\r\n",
                "355\r\n"
            ],
            [
                "20\r\n-1 100\r\n1 35\r\n2 22\r\n3 28\r\n3 2\r\n4 8\r\n3 17\r\n2 50\r\n5 37\r\n5 25\r\n4 29\r\n9 21\r\n10 16\r\n10 39\r\n11 41\r\n9 28\r\n9 30\r\n12 36\r\n13 26\r\n19 17\r\n",
                "459\r\n"
            ],
            [
                "20\r\n-1 100\r\n1 35\r\n1 22\r\n1 28\r\n1 2\r\n1 8\r\n1 17\r\n1 50\r\n5 37\r\n1 25\r\n1 29\r\n5 21\r\n4 16\r\n2 39\r\n1 41\r\n3 28\r\n3 30\r\n2 36\r\n2 26\r\n14 17\r\n",
                "548\r\n"
            ],
            [
                "3\r\n-1 1\r\n1 42\r\n1 42\r\n",
                "85\r\n"
            ],
            [
                "2\r\n-1 1\r\n1 2\r\n",
                "2\r\n"
            ],
            [
                "3\r\n-1 1\r\n1 2\r\n2 3\r\n",
                "3\r\n"
            ],
            [
                "4\r\n-1 1\r\n1 42\r\n1 42\r\n1 42\r\n",
                "126\r\n"
            ],
            [
                "4\r\n-1 1\r\n1 100\r\n1 100\r\n1 100\r\n",
                "300\r\n"
            ]
        ]
    }
]