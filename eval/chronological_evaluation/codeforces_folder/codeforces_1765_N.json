[
    {
        "name": "Number Reduction",
        "description": "You are given a positive integer \n    x\n. You can apply the following\noperation to the number: remove one occurrence of any digit in such a way that\nthe resulting number does not contain any leading zeroes and is still a\npositive integer. For example, \n    10142\n can be converted to \n    1142\n,\n\n    1042\n, \n    1012\n or \n    1014\n (note that \n    0142\n is not a valid\noutcome); \n    10\n can be converted to \n    1\n (but not to \n    0\n since it is\nnot positive). Your task is to find the minimum positive integer that you can\nobtain from \n    x\n if you can apply the aforementioned operation exactly\n\n    k\n times. Input The first line contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^5\n) \u2014 the number of test cases. The first line of each test\ncase contains a single integer \n    x\n (\n    1 \n    \u2264 x < 10^500000\n). The\nsecond line contains a single integer \n    k\n (\n    0 \n    \u2264 k < |x|\n), where\n\n    |x|\n is the length of the number \n    x\n. The sum of \n    |x|\n over all\ntest cases does not exceed \n    5 \n    \u00b7 10^5\n. Output For each test case,\nprint one integer \u2014 the minimum positive number that you can obtain from\n\n    x\n if you can apply the operation exactly \n    k\n times. Example Input 5\n10000 4 1337 0 987654321 6 66837494128 5 7808652 3 Output 1 1337 321 344128\n7052\n\n",
        "cf_contest_id": 1765,
        "cf_index": "N",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n10000\r\n4\r\n1337\r\n0\r\n987654321\r\n6\r\n66837494128\r\n5\r\n7808652\r\n3\r\n",
                "1\r\n1337\r\n321\r\n344128\r\n7052\r\n"
            ]
        ],
        "private_cases": []
    }
]