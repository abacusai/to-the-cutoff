[
    {
        "name": "Into Blocks (hard version)",
        "description": "This is a harder version of the problem. In this version \n    q \n    \u2264\n    200\n     000\n. A sequence of integers is called nice if its elements are\narranged in blocks like in \n    [3, 3, 3, 4, 1, 1]\n. Formally, if two elements\nare equal, everything in between must also be equal. Let's define difficulty\nof a sequence as a minimum possible number of elements to change to get a nice\nsequence. However, if you change at least one element of value \n    x\n to\nvalue \n    y\n, you must also change all other elements of value \n    x\n into\n\n    y\n as well. For example, for \n    [3, 3, 1, 3, 2, 1, 2]\n it isn't allowed\nto change first \n    1\n to \n    3\n and second \n    1\n to \n    2\n. You need to\nleave \n    1\n's untouched or change them to the same value. You are given a\nsequence of integers \n    a_1, a_2, \n    \u2026, a_n\n and \n    q\n updates. Each\nupdate is of form \"\n    i\n \n    x\n\" \u2014 change \n    a_i\n to \n    x\n. Updates are\nnot independent (the change stays for the future). Print the difficulty of the\ninitial sequence and of the sequence after every update. Input The first line\ncontains integers \n    n\n and \n    q\n (\n    1 \n    \u2264 n \n    \u2264 200\n     000\n, \n    0\n    \n    \u2264 q \n    \u2264 200\n     000\n), the length of the sequence and the number of the\nupdates. The second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 200\n     000\n), the initial sequence. Each of the\nfollowing \n    q\n lines contains integers \n    i_t\n and \n    x_t\n (\n    1 \n    \u2264\n    i_t \n    \u2264 n\n, \n    1 \n    \u2264 x_t \n    \u2264 200\n     000\n), the position and the new\nvalue for this position. Output Print \n    q+1\n integers, the answer for the\ninitial sequence and the answer after every update. Example Input 5 6 1 2 1 2\n1 2 1 4 1 5 3 2 3 4 2 2 1 Output 2 1 0 0 2 3 0\n\n",
        "cf_contest_id": 1209,
        "cf_index": "G2",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 6\r\n1 2 1 2 1\r\n2 1\r\n4 1\r\n5 3\r\n2 3\r\n4 2\r\n2 1\r\n",
                "2\r\n1\r\n0\r\n0\r\n2\r\n3\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 0\r\n3 7 3 7 3\r\n",
                "2\r\n"
            ],
            [
                "10 0\r\n1 2 1 2 3 1 1 1 50 1\r\n",
                "4\r\n"
            ],
            [
                "6 0\r\n6 6 3 3 4 4\r\n",
                "0\r\n"
            ],
            [
                "7 0\r\n3 3 1 3 2 1 2\r\n",
                "4\r\n"
            ],
            [
                "5 0\r\n2 3 2 3 3\r\n",
                "2\r\n"
            ]
        ]
    }
]