[
    {
        "name": "Typical Interview Problem",
        "description": "The FB-string is formed as follows. Initially, it is empty. We go through all\npositive integers, starting from \n    1\n, in ascending order, and do the\nfollowing for each integer: if the current integer is divisible by \n    3\n,\nappend F to the end of the FB-string; if the current integer is divisible by\n\n    5\n, append B to the end of the FB-string. Note that if an integer is\ndivisible by both \n    3\n and \n    5\n, we append F, and then B, not in the\nopposite order. The first \n    10\n characters of the FB-string are FBFFBFFBFB:\nthe first F comes from the integer \n    3\n, the next character (B) comes from\n\n    5\n, the next F comes from the integer \n    6\n, and so on. It's easy to\nsee that this string is infinitely long. Let \n    f_i\n be the \n    i\n-th\ncharacter of FB-string; so, \n    f_1\n is F, \n    f_2\n is B, \n    f_3\n is F,\n\n    f_4\n is F, and so on. You are given a string \n    s\n, consisting of\ncharacters F and/or B. You have to determine whether it is a substring\n(contiguous subsequence) of the FB-string. In other words, determine if it is\npossible to choose two integers \n    l\n and \n    r\n (\n    1 \n    \u2264 l \n    \u2264 r\n)\nso that the string \n    f_l f_l+1 f_l+2\n    \u2026 f_r\n is exactly \n    s\n.\nFor example: FFB is a substring of the FB-string: if we pick \n    l = 3\n and\n\n    r = 5\n, the string \n    f_3 f_4 f_5\n is exactly FFB; BFFBFFBF is a\nsubstring of the FB-string: if we pick \n    l = 2\n and \n    r = 9\n, the string\n\n    f_2 f_3 f_4 \n    \u2026 f_9\n is exactly BFFBFFBF; BBB is not a substring of\nthe FB-string. Input The first line contains one integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 2046\n) \u2014 the number of test cases. Each test case consists of two\nlines. The first line contains one integer \n    k\n (\n    1 \n    \u2264 k \n    \u2264 10\n)\n\u2014 the number of characters in \n    s\n. The second line contains \n    s\n, which\nis a string of exactly \n    k\n characters. Each character of \n    s\n is either\nF or B. Output For each test case, print YES if \n    s\n is a substring of the\nFB-string, or NO otherwise. You may print each letter in any case (YES, yes,\nYes will all be recognized as positive answer, NO, no and nO will all be\nrecognized as negative answer). Example Input 3 3 FFB 8 BFFBFFBF 3 BBB Output\nYES YES NO\n\n",
        "cf_contest_id": 1796,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n3\r\nFFB\r\n8\r\nBFFBFFBF\r\n3\r\nBBB\r\n",
                "YES\r\nYES\r\nNO \r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\nF\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n2\r\nBF\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n1\r\nB\r\n",
                "YES\r\n"
            ]
        ]
    }
]