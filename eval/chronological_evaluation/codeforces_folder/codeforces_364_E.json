[
    {
        "name": "Empty Rectangles",
        "description": "You've got an n \u00d7 m table (n rows and m columns), each cell of the table\ncontains a \"0\" or a \"1\". Your task is to calculate the number of rectangles\nwith the sides that are parallel to the sides of the table and go along the\ncell borders, such that the number one occurs exactly k times in the\nrectangle. Input The first line contains three space-separated integers n, m\nand k (1 \u2264 n, m \u2264 2500, 0 \u2264 k \u2264 6) \u2014 the sizes of the table and the required\nnumber of numbers one. Next n lines each contains m characters \"0\" or \"1\". The\ni-th character of the j-th line corresponds to the character that is in the\nj-th row and the i-th column of the table. Output Print a single number \u2014 the\nnumber of rectangles that contain exactly k numbers one. Please, do not write\nthe \nuse the cin, cout streams or the \n101 Output 8 Input 5 5 1 00000 00000 00100 00000 00000 Output 81 Input 5 5 6\n01010 10101 01010 10101 01010 Output 12 Input 3 3 0 001 010 000 Output 15\nInput 4 4 0 0000 0101 0000 0000 Output 52\n\n",
        "cf_contest_id": 364,
        "cf_index": "E",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "divide and conquer",
            "two pointers"
        ],
        "time_limit_seconds": 12.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 3 2\r\n101\r\n000\r\n101\r\n",
                "8\r\n"
            ],
            [
                "5 5 1\r\n00000\r\n00000\r\n00100\r\n00000\r\n00000\r\n",
                "81\r\n"
            ],
            [
                "5 5 6\r\n01010\r\n10101\r\n01010\r\n10101\r\n01010\r\n",
                "12\r\n"
            ],
            [
                "3 3 0\r\n001\r\n010\r\n000\r\n",
                "15\r\n"
            ],
            [
                "4 4 0\r\n0000\r\n0101\r\n0000\r\n0000\r\n",
                "52\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 10 6\r\n0101010111\r\n0101010111\r\n0101010111\r\n0101010111\r\n0101010111\r\n0101011010\r\n1010110111\r\n0101101110\r\n1010100011\r\n0000000111\r\n",
                "231\r\n"
            ],
            [
                "1 1 2\r\n1\r\n",
                "0\r\n"
            ],
            [
                "1 1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1 1 0\r\n0\r\n",
                "1\r\n"
            ]
        ]
    }
]