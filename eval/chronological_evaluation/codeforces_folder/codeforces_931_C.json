[
    {
        "name": "Laboratory Work",
        "description": "Anya and Kirill are doing a physics laboratory work. In one of the tasks they\nhave to measure some value n times, and then compute the average value to\nlower the error. Kirill has already made his measurements, and has got the\nfollowing integer values: x1, x2, ..., xn. It is important that the values are\nclose to each other, namely, the difference between the maximum value and the\nminimum value is at most 2. Anya does not want to make the measurements,\nhowever, she can't just copy the values from Kirill's work, because the error\nof each measurement is a random value, and this coincidence will be noted by\nthe teacher. Anya wants to write such integer values y1, y2, ..., yn in her\nwork, that the following conditions are met: the average value of x1, x2, ...,\nxn is equal to the average value of y1, y2, ..., yn; all Anya's measurements\nare in the same bounds as all Kirill's measurements, that is, the maximum\nvalue among Anya's values is not greater than the maximum value among Kirill's\nvalues, and the minimum value among Anya's values is not less than the minimum\nvalue among Kirill's values; the number of equal measurements in Anya's work\nand Kirill's work is as small as possible among options with the previous\nconditions met. Formally, the teacher goes through all Anya's values one by\none, if there is equal value in Kirill's work and it is not strike off yet, he\nstrikes off this Anya's value and one of equal values in Kirill's work. The\nnumber of equal measurements is then the total number of strike off values in\nAnya's work. Help Anya to write such a set of measurements that the conditions\nabove are met. Input The first line contains a single integer n (1 \u2264 n \u2264 100\n000) \u2014 the numeber of measurements made by Kirill. The second line contains a\nsequence of integers x1, x2, ..., xn ( - 100 000 \u2264 xi \u2264 100 000) \u2014 the\nmeasurements made by Kirill. It is guaranteed that the difference between the\nmaximum and minimum values among values x1, x2, ..., xn does not exceed 2.\nOutput In the first line print the minimum possible number of equal\nmeasurements. In the second line print n integers y1, y2, ..., yn \u2014 the values\nAnya should write. You can print the integers in arbitrary order. Keep in mind\nthat the minimum value among Anya's values should be not less that the minimum\namong Kirill's values, and the maximum among Anya's values should be not\ngreater than the maximum among Kirill's values. If there are multiple answers,\nprint any of them. Examples Input 6 -1 1 1 0 0 -1 Output 2 0 0 0 0 0 0 Input 3\n100 100 101 Output 3 101 100 100 Input 7 -10 -9 -10 -8 -10 -9 -9 Output 5 -10\n-10 -9 -9 -9 -9 -9 Note In the first example Anya can write zeros as here\nmeasurements results. The average value is then equal to the average value of\nKirill's values, and there are only two equal measurements. In the second\nexample Anya should write two values 100 and one value 101 (in any order),\nbecause it is the only possibility to make the average be the equal to the\naverage of Kirill's values. Thus, all three measurements are equal. In the\nthird example the number of equal measurements is 5.\n\n",
        "cf_contest_id": 931,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n-1 1 1 0 0 -1\r\n",
                "2\r\n0 0 0 0 0 0 "
            ],
            [
                "3\r\n100 100 101\r\n",
                "3\r\n100 100 101 "
            ],
            [
                "7\r\n-10 -9 -10 -8 -10 -9 -9\r\n",
                "5\r\n-10 -10 -10 -10 -9 -8 -8 "
            ]
        ],
        "private_cases": [
            [
                "60\r\n-8536 -8536 -8536 -8535 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8535 -8536 -8535 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8535 -8536 -8536 -8535 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8535 -8536 -8536 -8536 -8535 -8535 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8535\r\n",
                "60\r\n-8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8536 -8535 -8535 -8535 -8535 -8535 -8535 -8535 -8535 -8535 "
            ],
            [
                "9\r\n-71360 -71359 -71360 -71360 -71359 -71359 -71359 -71359 -71359\r\n",
                "9\r\n-71360 -71360 -71360 -71359 -71359 -71359 -71359 -71359 -71359 "
            ],
            [
                "10\r\n100 100 100 100 100 100 100 100 100 100\r\n",
                "10\r\n100 100 100 100 100 100 100 100 100 100 "
            ],
            [
                "100\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "100\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
            ],
            [
                "5\r\n-399 -399 -400 -399 -400\r\n",
                "5\r\n-400 -400 -399 -399 -399 "
            ],
            [
                "10\r\n1001 1000 1000 1001 1000 1000 1001 1001 1000 1001\r\n",
                "10\r\n1000 1000 1000 1000 1000 1001 1001 1001 1001 1001 "
            ],
            [
                "20\r\n-100000 -99999 -100000 -99999 -99999 -100000 -99999 -100000 -99999 -100000 -99999 -99999 -99999 -100000 -100000 -99999 -100000 -100000 -100000 -99999\r\n",
                "20\r\n-100000 -100000 -100000 -100000 -100000 -100000 -100000 -100000 -100000 -100000 -99999 -99999 -99999 -99999 -99999 -99999 -99999 -99999 -99999 -99999 "
            ],
            [
                "50\r\n99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 100000 99999 99999 99999 99999 99999 100000 99999 99999 99999 100000 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 100000 99999 99999 99999 100000 99999 99999 99999\r\n",
                "50\r\n99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 99999 100000 100000 100000 100000 100000 "
            ],
            [
                "100\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "100\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 "
            ],
            [
                "1\r\n-100000\r\n",
                "1\r\n-100000 "
            ],
            [
                "1\r\n-1\r\n",
                "1\r\n-1 "
            ],
            [
                "1\r\n0\r\n",
                "1\r\n0 "
            ],
            [
                "1\r\n1\r\n",
                "1\r\n1 "
            ],
            [
                "1\r\n100000\r\n",
                "1\r\n100000 "
            ],
            [
                "5\r\n2 2 1 1 2\r\n",
                "5\r\n1 1 2 2 2 "
            ],
            [
                "10\r\n0 -1 0 1 1 1 1 -1 0 0\r\n",
                "6\r\n-1 -1 -1 -1 1 1 1 1 1 1 "
            ],
            [
                "20\r\n-4344 -4342 -4344 -4342 -4343 -4343 -4344 -4344 -4342 -4343 -4344 -4343 -4344 -4344 -4344 -4342 -4344 -4343 -4342 -4344\r\n",
                "10\r\n-4344 -4344 -4344 -4344 -4344 -4343 -4343 -4343 -4343 -4343 -4343 -4343 -4343 -4343 -4343 -4343 -4343 -4343 -4343 -4343 "
            ],
            [
                "40\r\n113 113 112 112 112 112 112 112 112 112 112 113 113 112 113 112 113 112 112 112 111 112 112 113 112 112 112 112 112 112 112 112 113 112 113 112 112 113 112 113\r\n",
                "12\r\n111 111 111 111 111 111 111 111 111 111 111 111 111 111 111 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 113 "
            ],
            [
                "5\r\n-94523 -94523 -94523 -94524 -94524\r\n",
                "5\r\n-94524 -94524 -94523 -94523 -94523 "
            ],
            [
                "10\r\n-35822 -35823 -35823 -35823 -35821 -35823 -35823 -35821 -35822 -35821\r\n",
                "4\r\n-35823 -35823 -35822 -35822 -35822 -35822 -35822 -35822 -35822 -35822 "
            ],
            [
                "11\r\n-50353 -50353 -50353 -50353 -50353 -50352 -50353 -50353 -50353 -50353 -50352\r\n",
                "11\r\n-50353 -50353 -50353 -50353 -50353 -50353 -50353 -50353 -50353 -50352 -50352 "
            ],
            [
                "20\r\n46795 46795 46795 46795 46795 46795 46795 46793 46794 46795 46794 46795 46795 46795 46795 46795 46795 46795 46795 46795\r\n",
                "18\r\n46793 46793 46795 46795 46795 46795 46795 46795 46795 46795 46795 46795 46795 46795 46795 46795 46795 46795 46795 46795 "
            ],
            [
                "40\r\n72263 72261 72262 72263 72263 72263 72263 72263 72263 72262 72263 72263 72263 72263 72263 72262 72263 72262 72263 72262 72262 72263 72263 72262 72263 72263 72262 72262 72263 72262 72263 72263 72263 72263 72263 72263 72263 72263 72263 72262\r\n",
                "30\r\n72261 72261 72261 72261 72261 72261 72262 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 72263 "
            ],
            [
                "50\r\n-46992 -46992 -46992 -46991 -46992 -46991 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46991 -46991 -46991 -46992 -46990 -46991 -46991 -46991 -46991 -46992 -46992 -46991 -46992 -46992 -46992 -46990 -46992 -46991 -46991 -46992 -46992 -46992 -46991 -46991 -46991 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992\r\n",
                "36\r\n-46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46992 -46991 -46990 -46990 -46990 -46990 -46990 -46990 -46990 -46990 -46990 "
            ],
            [
                "60\r\n-86077 -86075 -86076 -86076 -86077 -86077 -86075 -86075 -86075 -86077 -86075 -86076 -86075 -86075 -86075 -86076 -86075 -86076 -86075 -86075 -86076 -86076 -86076 -86075 -86075 -86075 -86075 -86077 -86075 -86076 -86075 -86075 -86075 -86076 -86075 -86076 -86077 -86075 -86075 -86075 -86076 -86075 -86076 -86075 -86076 -86076 -86075 -86076 -86076 -86075 -86075 -86075 -86077 -86076 -86075 -86075 -86075 -86075 -86075 -86075\r\n",
                "42\r\n-86077 -86077 -86077 -86077 -86077 -86077 -86077 -86077 -86077 -86077 -86077 -86077 -86077 -86077 -86077 -86077 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 -86075 "
            ],
            [
                "70\r\n-87 -86 -88 -86 -87 -86 -88 -88 -87 -86 -86 -88 -86 -86 -88 -87 -87 -87 -86 -87 -87 -87 -88 -88 -88 -87 -88 -87 -88 -87 -88 -86 -86 -86 -88 -86 -87 -87 -86 -86 -88 -86 -88 -87 -88 -87 -87 -86 -88 -87 -86 -88 -87 -86 -87 -87 -86 -88 -87 -86 -87 -88 -87 -88 -86 -87 -88 -88 -87 -87\r\n",
                "28\r\n-88 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 -87 "
            ],
            [
                "2\r\n0 2\r\n",
                "0\r\n1 1 "
            ],
            [
                "4\r\n1 1 3 3\r\n",
                "0\r\n2 2 2 2 "
            ],
            [
                "6\r\n1 1 1 3 3 3\r\n",
                "0\r\n2 2 2 2 2 2 "
            ],
            [
                "2\r\n1 3\r\n",
                "0\r\n2 2 "
            ],
            [
                "7\r\n0 1 1 1 1 1 2\r\n",
                "3\r\n0 0 0 1 2 2 2 "
            ],
            [
                "6\r\n1 1 1 -1 -1 -1\r\n",
                "0\r\n0 0 0 0 0 0 "
            ],
            [
                "3\r\n1 1 3\r\n",
                "1\r\n1 2 2 "
            ],
            [
                "2\r\n2 0\r\n",
                "0\r\n1 1 "
            ],
            [
                "10\r\n1 3 3 3 3 3 3 3 3 3\r\n",
                "8\r\n2 2 3 3 3 3 3 3 3 3 "
            ],
            [
                "7\r\n1 3 3 3 3 3 3\r\n",
                "5\r\n2 2 3 3 3 3 3 "
            ],
            [
                "7\r\n1 2 2 2 2 2 3\r\n",
                "3\r\n1 1 1 2 3 3 3 "
            ],
            [
                "5\r\n-8 -8 -8 -10 -10\r\n",
                "1\r\n-9 -9 -9 -9 -8 "
            ],
            [
                "3\r\n1 2 3\r\n",
                "1\r\n2 2 2 "
            ],
            [
                "4\r\n2 2 4 4\r\n",
                "0\r\n3 3 3 3 "
            ],
            [
                "4\r\n1 1 -1 -1\r\n",
                "0\r\n0 0 0 0 "
            ]
        ]
    }
]