[
    {
        "name": "Mirror Grid",
        "description": "You are given a square grid with \n    n\n rows and \n    n\n columns. Each cell\ncontains either \n    0\n or \n    1\n. In an operation, you can select a cell of\nthe grid and flip it (from \n    0 \n    \u2192 1\n or \n    1 \n    \u2192 0\n). Find the\nminimum number of operations you need to obtain a square that remains the same\nwhen rotated \n    0^\n    \u2218\n, \n    90^\n    \u2218\n, \n    180^\n    \u2218\n and\n\n    270^\n    \u2218\n. The picture below shows an example of all rotations of a\ngrid. Input The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 100\n) \u2014 the number of test cases. The first line of each test case\ncontains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n) \u2014 the size of\nthe grid. Then \n    n\n lines follow, each with \n    n\n characters\n\n    a_i,j\n (\n    0 \n    \u2264 a_i,j\n    \u2264 1\n) \u2014 the number written in each\ncell. Output For each test case output a single integer \u2014 the minimum number\nof operations needed to make the square look the same rotated\n\n    0^\n    \u2218\n, \n    90^\n    \u2218\n, \n    180^\n    \u2218\n and\n\n    270^\n    \u2218\n. Example Input 5 3 010 110 010 1 0 5 11100 11011 01011\n10011 11000 5 01000 10101 01010 00010 01001 5 11001 00000 11111 10110 01111\nOutput 1 0 9 7 6 Note In the first test case, we can perform one operations to\nmake the grid \n    0     1     0\n    \n    \n     1     1    \n    1\n    \n    \n     0     1     0\n. Now, all rotations of the\nsquare are the same. In the second test case, all rotations of the square are\nalready the same, so we don't need any flips.\n\n",
        "cf_contest_id": 1703,
        "cf_index": "E",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3\r\n010\r\n110\r\n010\r\n1\r\n0\r\n5\r\n11100\r\n11011\r\n01011\r\n10011\r\n11000\r\n5\r\n01000\r\n10101\r\n01010\r\n00010\r\n01001\r\n5\r\n11001\r\n00000\r\n11111\r\n10110\r\n01111\r\n",
                "1\r\n0\r\n9\r\n7\r\n6\r\n"
            ]
        ],
        "private_cases": []
    }
]