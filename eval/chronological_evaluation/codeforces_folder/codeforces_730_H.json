[
    {
        "name": "Delete Them",
        "description": "Polycarp is a beginner programmer. He is studying how to use a command line.\nPolycarp faced the following problem. There are n files in a directory and he\nneeds to delete some of them. Polycarp wants to run a single delete command\nwith filename pattern as an argument. All the files to be deleted should match\nthe pattern and all other files shouldn't match the pattern. Polycarp doesn't\nknow about an asterisk '*', the only special character he knows is a question\nmark '?' which matches any single character. All other characters in the\npattern match themselves only. Formally, a pattern matches a filename if and\nonly if they have equal lengths and all characters in the corresponding\npositions are equal except when the character in the pattern is '?', in which\ncase the corresponding filename character does not matter. For example, the\nfilename pattern \"a?ba?\": matches filenames \"aabaa\", \"abba.\", \"a.ba9\" and\n\"a.ba.\"; does not match filenames \"aaba\", \"abaab\", \"aabaaa\" and \"aabaa.\". Help\nPolycarp find a pattern which matches files to be deleted and only them or\nreport if there is no such pattern. Input The first line of the input contains\ntwo integers n and m (1 \u2264 m \u2264 n \u2264 100) \u2014 the total number of files and the\nnumber of files to be deleted. The following n lines contain filenames, single\nfilename per line. All filenames are non-empty strings containing only\nlowercase English letters, digits and dots ('.'). The length of each filename\ndoesn't exceed 100. It is guaranteed that all filenames are distinct. The last\nline of the input contains m distinct integer numbers in ascending order a1,\na2, ..., am (1 \u2264 ai \u2264 n) \u2014 indices of files to be deleted. All files are\nindexed from 1 to n in order of their appearance in the input. Output If the\nrequired pattern exists, print \"Yes\" in the first line of the output. The\nsecond line should contain the required pattern. If there are multiple\nsolutions, print any of them. If the required pattern doesn't exist, print the\nonly line containing \"No\". Examples Input 3 2 ab ac cd 1 2 Output Yes a? Input\n5 3 test tezt test. .est tes. 1 4 5 Output Yes ?es? Input 4 4 a b c dd 1 2 3 4\nOutput No Input 6 3 .svn .git .... ... .. . 1 2 3 Output Yes .???\n\n",
        "cf_contest_id": 730,
        "cf_index": "H",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 2\r\nab\r\nac\r\ncd\r\n1 2\r\n",
                "Yes\r\na?\r\n"
            ],
            [
                "5 3\r\ntest\r\ntezt\r\ntest.\r\n.est\r\ntes.\r\n1 4 5\r\n",
                "Yes\r\n?es?\r\n"
            ],
            [
                "4 4\r\na\r\nb\r\nc\r\ndd\r\n1 2 3 4\r\n",
                "No\r\n"
            ],
            [
                "6 3\r\n.svn\r\n.git\r\n....\r\n...\r\n..\r\n.\r\n1 2 3\r\n",
                "Yes\r\n.???\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 2\r\n.b\r\n.c\r\ndbt\r\ne.\r\n2 4\r\n",
                "No\r\n"
            ],
            [
                "27 27\r\na\r\nb\r\nc\r\nd\r\ne\r\nf\r\ng\r\nh\r\ni\r\nj\r\nk\r\nl\r\nm\r\nn\r\no\r\np\r\nq\r\nr\r\ns\r\nt\r\nu\r\nv\r\nw\r\nx\r\ny\r\nz\r\n.\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27\r\n",
                "Yes\r\n?\r\n"
            ],
            [
                "27 26\r\na\r\nb\r\nc\r\nd\r\nee\r\nf\r\ng\r\nh\r\ni\r\nj\r\nk\r\nl\r\nm\r\nn\r\no\r\np\r\nq\r\nr\r\ns\r\nt\r\nu\r\nv\r\nw\r\nx\r\ny\r\nz\r\n.\r\n1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27\r\n",
                "Yes\r\n?\r\n"
            ],
            [
                "27 26\r\na\r\nb\r\nc\r\nd\r\ne\r\nf\r\ng\r\nh\r\ni\r\nj\r\nkq\r\nl\r\nm\r\nn\r\no\r\np\r\nq\r\nr\r\ns\r\nt\r\nu\r\nv\r\nw\r\nx\r\ny\r\nz\r\n.\r\n1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27\r\n",
                "No\r\n"
            ],
            [
                "1 1\r\nuevim.mrr\r\n1\r\n",
                "Yes\r\nuevim.mrr\r\n"
            ],
            [
                "2 1\r\nkbfyvezmy\r\nsbfammwcy\r\n1\r\n",
                "Yes\r\nkbfyvezmy\r\n"
            ],
            [
                "5 3\r\nlmljeqklg\r\nlclydkkxj\r\nuylscbk.g\r\neplpqakme\r\nablibhkfg\r\n1 3 5\r\n",
                "Yes\r\n??l???k?g\r\n"
            ],
            [
                "5 4\r\nabacaba\r\naaaaaaa\r\naaaaaab\r\naaaaaac\r\naaaaaad\r\n2 3 4 5\r\n",
                "Yes\r\naaaaaa?\r\n"
            ],
            [
                "5 4\r\nabacaba\r\naaaaaaa\r\nbaaaaab\r\ncaaaaac\r\ndaaaaad\r\n2 3 4 5\r\n",
                "Yes\r\n?aaaaa?\r\n"
            ],
            [
                "5 5\r\nabacaba\r\naaaaaaa\r\nbaaaaab\r\ncaaaaac\r\ndaaaaad\r\n1 2 3 4 5\r\n",
                "Yes\r\n??a?a??\r\n"
            ],
            [
                "5 3\r\nabacaba\r\naaaaaaa\r\nbaaaaab\r\ncaaaaac\r\ndaaaaad\r\n2 3 4\r\n",
                "No\r\n"
            ],
            [
                "5 4\r\naaaaaaa\r\nbaaaaab\r\ncaaaaac\r\ndaaaaad\r\nabacaba\r\n1 2 3 4\r\n",
                "Yes\r\n?aaaaa?\r\n"
            ],
            [
                "5 3\r\naaaaaaaaaa\r\nbbbbbbbbbb\r\ncccccccccc\r\ndddddddddd\r\neeeeeeeeee\r\n1 3 5\r\n",
                "No\r\n"
            ],
            [
                "5 4\r\naaaaaaaaaa\r\nbbbbbbbbbb\r\ncccccccccc\r\ndddddddddd\r\neeeeeeeeee\r\n1 3 4 5\r\n",
                "No\r\n"
            ],
            [
                "5 5\r\naaaaaaaaaa\r\nbbbbbbbbbb\r\ncccccccccc\r\ndddddddddd\r\neeeeeeeeee\r\n1 2 3 4 5\r\n",
                "Yes\r\n??????????\r\n"
            ],
            [
                "5 4\r\naaaaaaaaaa\r\nbbbbbbbbbb\r\ncccccccccc\r\ndddddddddd\r\neeeeeeeee\r\n1 2 3 4\r\n",
                "Yes\r\n??????????\r\n"
            ],
            [
                "5 4\r\naaaaaaaaaa\r\nbbbbbbbbbb\r\ncccccccccc\r\neeeeeeeee\r\ndddddddddd\r\n1 2 3 5\r\n",
                "Yes\r\n??????????\r\n"
            ],
            [
                "5 4\r\naaaaaaaaaa\r\nbbbbbbbbbb\r\neeeeeeeee\r\ncccccccccc\r\ndddddddddd\r\n1 2 4 5\r\n",
                "Yes\r\n??????????\r\n"
            ],
            [
                "5 4\r\naaaaaaaaaa\r\neeeeeeeee\r\nbbbbbbbbbb\r\ncccccccccc\r\ndddddddddd\r\n1 3 4 5\r\n",
                "Yes\r\n??????????\r\n"
            ],
            [
                "5 4\r\neeeeeeeee\r\naaaaaaaaaa\r\nbbbbbbbbbb\r\ncccccccccc\r\ndddddddddd\r\n2 3 4 5\r\n",
                "Yes\r\n??????????\r\n"
            ],
            [
                "2 1\r\na\r\nb\r\n1\r\n",
                "Yes\r\na\r\n"
            ],
            [
                "2 1\r\na\r\nb\r\n2\r\n",
                "Yes\r\nb\r\n"
            ],
            [
                "2 2\r\na\r\nb\r\n1 2\r\n",
                "Yes\r\n?\r\n"
            ],
            [
                "2 1\r\naa\r\nb\r\n1\r\n",
                "Yes\r\naa\r\n"
            ],
            [
                "2 1\r\naa\r\nb\r\n2\r\n",
                "Yes\r\nb\r\n"
            ],
            [
                "2 2\r\naa\r\nb\r\n1 2\r\n",
                "No\r\n"
            ],
            [
                "2 1\r\nb\r\naa\r\n1\r\n",
                "Yes\r\nb\r\n"
            ],
            [
                "2 1\r\nb\r\naa\r\n2\r\n",
                "Yes\r\naa\r\n"
            ],
            [
                "2 2\r\nb\r\naa\r\n1 2\r\n",
                "No\r\n"
            ],
            [
                "2 1\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaac\r\n1\r\n",
                "Yes\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab\r\n"
            ]
        ]
    }
]