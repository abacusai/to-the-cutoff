[
    {
        "name": "Vasya and Basketball",
        "description": "Vasya follows a basketball game and marks the distances from which each team\nmakes a throw. He knows that each successful throw has value of either 2 or 3\npoints. A throw is worth 2 points if the distance it was made from doesn't\nexceed some value of d meters, and a throw is worth 3 points if the distance\nis larger than d meters, where d is some non-negative integer. Vasya would\nlike the advantage of the points scored by the first team (the points of the\nfirst team minus the points of the second team) to be maximum. For that he can\nmentally choose the value of d. Help him to do that. Input The first line\ncontains integer n (1 \u2264 n \u2264 2\u00b710^5) \u2014 the number of throws of the first team.\nThen follow n integer numbers \u2014 the distances of throws ai (1 \u2264 ai \u2264 2\u00b710^9).\nThen follows number m (1 \u2264 m \u2264 2\u00b710^5) \u2014 the number of the throws of the\nsecond team. Then follow m integer numbers \u2014 the distances of throws of bi (1\n\u2264 bi \u2264 2\u00b710^9). Output Print two numbers in the format a:b \u2014 the score that is\npossible considering the problem conditions where the result of subtraction a\n- b is maximum. If there are several such scores, find the one in which number\na is maximum. Examples Input 3 1 2 3 2 5 6 Output 9:6 Input 5 6 7 8 9 10 5 1 2\n3 4 5 Output 15:10\n\n",
        "cf_contest_id": 493,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "data structures",
            "implementation",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 3\r\n2\r\n5 6\r\n",
                "9:6\r\n"
            ],
            [
                "5\r\n6 7 8 9 10\r\n5\r\n1 2 3 4 5\r\n",
                "15:10\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n1 2 3 4 5\r\n5\r\n6 7 8 9 10\r\n",
                "15:15\r\n"
            ],
            [
                "3\r\n1 2 3\r\n3\r\n6 4 5\r\n",
                "9:9\r\n"
            ],
            [
                "10\r\n1 2 3 4 5 6 7 8 9 10\r\n1\r\n11\r\n",
                "30:3\r\n"
            ],
            [
                "10\r\n1 2 3 4 5 6 7 8 9 11\r\n1\r\n10\r\n",
                "30:3\r\n"
            ],
            [
                "3\r\n1 2 3\r\n3\r\n1 2 3\r\n",
                "9:9\r\n"
            ],
            [
                "3\r\n1 2 3\r\n3\r\n3 4 5\r\n",
                "9:9\r\n"
            ],
            [
                "4\r\n2 5 3 2\r\n4\r\n1 5 6 2\r\n",
                "12:11\r\n"
            ],
            [
                "2\r\n3 3\r\n3\r\n1 3 3\r\n",
                "6:8\r\n"
            ],
            [
                "3\r\n1 1 1\r\n4\r\n1 3 1 1\r\n",
                "6:8\r\n"
            ],
            [
                "4\r\n4 2 1 1\r\n4\r\n3 2 2 2\r\n",
                "9:8\r\n"
            ],
            [
                "3\r\n3 9 4\r\n2\r\n10 1\r\n",
                "9:5\r\n"
            ],
            [
                "14\r\n4336 24047 24846 25681 28597 30057 32421 34446 48670 67750 68185 69661 85721 89013\r\n30\r\n8751 10576 14401 22336 22689 35505 38649 43073 43176 44359 44777 50210 50408 51361 53181 60095 65554 68201 68285 68801 72501 75881 80251 80509 83306 93167 95365 95545 97201 97731\r\n",
                "28:60\r\n"
            ],
            [
                "1\r\n1\r\n2\r\n1 2\r\n",
                "2:4\r\n"
            ],
            [
                "18\r\n450 3726 12063 27630 29689 30626 33937 35015 45951 46217 53004 59541 75551 75836 78996 81297 93876 96211\r\n47\r\n3393 5779 6596 7935 9549 10330 11145 13121 14801 15578 24104 24125 25871 31280 35036 38969 40077 41342 42708 46033 47491 48451 49152 51905 55002 55689 56565 57901 59481 60017 66075 67081 68397 71122 74961 78501 84098 87083 87893 89281 89739 90321 92046 95821 96717 96921 96951\r\n",
                "36:94\r\n"
            ],
            [
                "3\r\n3 3 4\r\n6\r\n2 2 3 3 3 3\r\n",
                "7:12\r\n"
            ],
            [
                "3\r\n2 2 2\r\n3\r\n1 1 1\r\n",
                "9:6\r\n"
            ],
            [
                "2\r\n2 2\r\n2\r\n2 2\r\n",
                "6:6\r\n"
            ],
            [
                "1\r\n7\r\n6\r\n6 7 8 9 10 11\r\n",
                "2:12\r\n"
            ],
            [
                "1\r\n1\r\n2\r\n1 1\r\n",
                "2:4\r\n"
            ],
            [
                "3\r\n1 2 3\r\n1\r\n1\r\n",
                "9:3\r\n"
            ],
            [
                "3\r\n3 3 4\r\n6\r\n3 2 2 2 3 2\r\n",
                "9:14\r\n"
            ],
            [
                "1\r\n3\r\n1\r\n3\r\n",
                "3:3\r\n"
            ],
            [
                "1\r\n1\r\n5\r\n1 1 1 1 1\r\n",
                "2:10\r\n"
            ],
            [
                "2\r\n1 999999999\r\n2\r\n2 4\r\n",
                "5:4\r\n"
            ]
        ]
    }
]