[
    {
        "name": "Permutations",
        "description": "Happy PMP is freshman and he is learning about algorithmic problems. He enjoys\nplaying algorithmic games a lot. One of the seniors gave Happy PMP a nice\ngame. He is given two permutations of numbers 1 through n and is asked to\nconvert the first one to the second. In one move he can remove the last number\nfrom the permutation of numbers and inserts it back in an arbitrary position.\nHe can either insert last number between any two consecutive numbers, or he\ncan place it at the beginning of the permutation. Happy PMP has an algorithm\nthat solves the problem. But it is not fast enough. He wants to know the\nminimum number of moves to convert the first permutation to the second. Input\nThe first line contains a single integer n (1 \u2264 n \u2264 2\u00b710^5) \u2014 the quantity of\nthe numbers in the both given permutations. Next line contains n space-\nseparated integers \u2014 the first permutation. Each number between 1 to n will\nappear in the permutation exactly once. Next line describe the second\npermutation in the same format. Output Print a single integer denoting the\nminimum number of moves required to convert the first permutation to the\nsecond. Examples Input 3 3 2 1 1 2 3 Output 2 Input 5 1 2 3 4 5 1 5 2 3 4\nOutput 1 Input 5 1 5 2 3 4 1 2 3 4 5 Output 3 Note In the first sample, he\nremoves number 1 from end of the list and places it at the beginning. After\nthat he takes number 2 and places it between 1 and 3. In the second sample, he\nremoves number 5 and inserts it after 1. In the third sample, the sequence of\nchanges are like this: 1 5 2 3 4 1 4 5 2 3 1 3 4 5 2 1 2 3 4 5 So he needs\nthree moves.\n\n",
        "cf_contest_id": 187,
        "cf_index": "A",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 2 1\r\n1 2 3\r\n",
                "2\r\n"
            ],
            [
                "5\r\n1 2 3 4 5\r\n1 5 2 3 4\r\n",
                "1\r\n"
            ],
            [
                "5\r\n1 5 2 3 4\r\n1 2 3 4 5\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "7\r\n6 1 7 3 4 5 2\r\n6 1 7 3 4 5 2\r\n",
                "0\r\n"
            ],
            [
                "10\r\n5 8 1 10 3 6 2 9 7 4\r\n4 2 6 3 1 9 10 5 8 7\r\n",
                "8\r\n"
            ],
            [
                "10\r\n1 6 10 3 4 9 2 5 8 7\r\n7 5 1 6 10 3 4 8 9 2\r\n",
                "3\r\n"
            ],
            [
                "10\r\n2 1 10 3 7 8 5 6 9 4\r\n6 9 2 4 1 10 3 7 8 5\r\n",
                "3\r\n"
            ],
            [
                "10\r\n8 2 10 3 4 6 1 7 9 5\r\n8 2 10 3 4 6 1 7 9 5\r\n",
                "0\r\n"
            ],
            [
                "20\r\n1 12 9 6 11 13 2 8 20 7 16 19 4 18 3 15 10 17 14 5\r\n5 14 17 10 15 3 18 4 19 16 7 20 8 2 13 11 6 9 12 1\r\n",
                "19\r\n"
            ]
        ]
    }
]