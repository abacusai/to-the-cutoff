[
    {
        "name": "Mister B and Boring Game",
        "description": "Sometimes Mister B has free evenings when he doesn't know what to do.\nFortunately, Mister B found a new game, where the player can play against\naliens. All characters in this game are lowercase English letters. There are\ntwo players: Mister B and his competitor. Initially the players have a string\ns consisting of the first a English letters in alphabetical order (for\nexample, if a = 5, then s equals to \"abcde\"). The players take turns appending\nletters to string s. Mister B moves first. Mister B must append exactly b\nletters on each his move. He can arbitrary choose these letters. His opponent\nadds exactly a letters on each move. Mister B quickly understood that his\nopponent was just a computer that used a simple algorithm. The computer on\neach turn considers the suffix of string s of length a and generates a string\nt of length a such that all letters in the string t are distinct and don't\nappear in the considered suffix. From multiple variants of t lexicographically\nminimal is chosen (if a = 4 and the suffix is \"bfdd\", the computer chooses\nstring t equal to \"aceg\"). After that the chosen string t is appended to the\nend of s. Mister B soon found the game boring and came up with the following\nquestion: what can be the minimum possible number of different letters in\nstring s on the segment between positions l and r, inclusive. Letters of\nstring s are numerated starting from 1. Input First and only line contains\nfour space-separated integers: a, b, l and r (1 \u2264 a, b \u2264 12, 1 \u2264 l \u2264 r \u2264 10^9)\n\u2014 the numbers of letters each player appends and the bounds of the segment.\nOutput Print one integer \u2014 the minimum possible number of different letters in\nthe segment from position l to position r, inclusive, in string s. Examples\nInput 1 1 1 8 Output 2 Input 4 2 2 6 Output 3 Input 3 7 4 6 Output 1 Note In\nthe first sample test one of optimal strategies generate string s =\n\"abababab...\", that's why answer is 2. In the second sample test string s =\n\"abcdbcaefg...\" can be obtained, chosen segment will look like \"bcdbc\", that's\nwhy answer is 3. In the third sample test string s = \"abczzzacad...\" can be\nobtained, chosen, segment will look like \"zzz\", that's why answer is 1.\n\n",
        "cf_contest_id": 819,
        "cf_index": "A",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 1 1 8\r\n",
                "2"
            ],
            [
                "4 2 2 6\r\n",
                "3"
            ],
            [
                "3 7 4 6\r\n",
                "1"
            ]
        ],
        "private_cases": [
            [
                "4 5 1 1\r\n",
                "1"
            ],
            [
                "12 12 1 1000\r\n",
                "13"
            ],
            [
                "12 1 1000 1000\r\n",
                "1"
            ],
            [
                "3 4 701 703\r\n",
                "3"
            ],
            [
                "12 12 13 1000000000\r\n",
                "13"
            ],
            [
                "3 4 999999999 1000000000\r\n",
                "1"
            ],
            [
                "5 6 1000000000 1000000000\r\n",
                "1"
            ],
            [
                "1 1 1 1\r\n",
                "1"
            ],
            [
                "12 1 100000011 100000024\r\n",
                "13"
            ],
            [
                "10 12 220000011 220000032\r\n",
                "11"
            ],
            [
                "1 1 1 1000000000\r\n",
                "2"
            ],
            [
                "1 1 999999999 1000000000\r\n",
                "1"
            ],
            [
                "1 1 1000000000 1000000000\r\n",
                "1"
            ],
            [
                "12 12 1 24\r\n",
                "12"
            ],
            [
                "12 12 876543210 1000000000\r\n",
                "13"
            ],
            [
                "5 11 654321106 654321117\r\n",
                "4"
            ],
            [
                "5 11 654321117 654321140\r\n",
                "6"
            ],
            [
                "9 12 654321114 654321128\r\n",
                "4"
            ],
            [
                "5 12 654321101 654321140\r\n",
                "6"
            ],
            [
                "2 12 654321104 654321122\r\n",
                "3"
            ],
            [
                "6 1 654321100 654321115\r\n",
                "11"
            ],
            [
                "2 1 654321122 654321129\r\n",
                "3"
            ],
            [
                "6 2 654321100 654321140\r\n",
                "10"
            ],
            [
                "6 2 654321113 654321123\r\n",
                "7"
            ],
            [
                "1 7 654321103 654321105\r\n",
                "2"
            ],
            [
                "5 3 654321111 654321117\r\n",
                "6"
            ],
            [
                "1 3 654321122 654321140\r\n",
                "2"
            ],
            [
                "5 8 654321118 654321137\r\n",
                "6"
            ],
            [
                "5 8 654321103 654321106\r\n",
                "1"
            ],
            [
                "9 8 654321109 654321126\r\n",
                "10"
            ],
            [
                "2 2 987654333 987654335\r\n",
                "2"
            ],
            [
                "4 8 987654341 987654343\r\n",
                "1"
            ],
            [
                "3 12 987654345 987654347\r\n",
                "3"
            ],
            [
                "8 1 987654349 987654354\r\n",
                "6"
            ],
            [
                "6 8 987654322 987654327\r\n",
                "3"
            ],
            [
                "6 10 987654330 987654337\r\n",
                "2"
            ],
            [
                "11 4 987654330 987654343\r\n",
                "12"
            ],
            [
                "10 7 987654339 987654340\r\n",
                "2"
            ],
            [
                "12 12 987654321 987654328\r\n",
                "4"
            ],
            [
                "3 10 498103029 647879228\r\n",
                "4"
            ],
            [
                "11 3 378541409 796916287\r\n",
                "19"
            ],
            [
                "3 3 240953737 404170887\r\n",
                "4"
            ],
            [
                "3 8 280057261 834734290\r\n",
                "4"
            ],
            [
                "7 8 305686738 573739036\r\n",
                "8"
            ],
            [
                "3 8 36348920 167519590\r\n",
                "4"
            ],
            [
                "10 2 1 1000000000\r\n",
                "18"
            ],
            [
                "4 1 1 100000\r\n",
                "7"
            ],
            [
                "2 1 288 300\r\n",
                "3"
            ],
            [
                "5 1 1 100\r\n",
                "9"
            ],
            [
                "3 3 3 8\r\n",
                "3"
            ],
            [
                "5 1 1 100000\r\n",
                "9"
            ],
            [
                "5 1 1 1000\r\n",
                "9"
            ],
            [
                "6 1 1 10000\r\n",
                "11"
            ],
            [
                "12 1 1 100\r\n",
                "23"
            ],
            [
                "2 1 1 1000000\r\n",
                "3"
            ],
            [
                "10 1 100 1000000000\r\n",
                "19"
            ],
            [
                "2 2 7 12\r\n",
                "3"
            ],
            [
                "12 1 1 1000\r\n",
                "23"
            ],
            [
                "4 1 1 9\r\n",
                "7"
            ],
            [
                "5 2 5 1000\r\n",
                "8"
            ],
            [
                "3 1 4 10\r\n",
                "4"
            ],
            [
                "12 1 1 1000000\r\n",
                "23"
            ],
            [
                "10 5 1 1000000000\r\n",
                "15"
            ],
            [
                "10 10 1999 3998\r\n",
                "11"
            ],
            [
                "3 1 1 1000\r\n",
                "5"
            ],
            [
                "10 1 1 21\r\n",
                "19"
            ],
            [
                "5 3 15 18\r\n",
                "3"
            ],
            [
                "4 4 2 10\r\n",
                "4"
            ]
        ]
    }
]