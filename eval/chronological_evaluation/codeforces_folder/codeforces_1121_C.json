[
    {
        "name": "System Testing",
        "description": "Vasya likes taking part in Codeforces contests. When a round is over, Vasya\nfollows all submissions in the system testing tab. There are \n    n\n\nsolutions, the \n    i\n-th of them should be tested on \n    a_i\n tests, testing\none solution on one test takes \n    1\n second. The solutions are judged in the\norder from \n    1\n to \n    n\n. There are \n    k\n testing processes which test\nsolutions simultaneously. Each of them can test at most one solution at a\ntime. At any time moment \n    t\n when some testing process is not judging any\nsolution, it takes the first solution from the queue and tests it on each test\nin increasing order of the test ids. Let this solution have id \n    i\n, then\nit is being tested on the first test from time moment \n    t\n till time moment\n\n    t + 1\n, then on the second test till time moment \n    t + 2\n and so on.\nThis solution is fully tested at time moment \n    t + a_i\n, and after that the\ntesting process immediately starts testing another solution. Consider some\ntime moment, let there be exactly \n    m\n fully tested solutions by this\nmoment. There is a caption \"System testing: \n    d\n\nsolutions, where \n    d\n is calculated as \n    \n\n    d =\n    round\n    (100\n    \u00b7\n    m/n\n    ),\n\n    \n where \n    round(x) =\n    \n    \u230ax + 0.5\n    \u230b\n is a function which maps every real to the\nnearest integer. Vasya calls a submission interesting if there is a time\nmoment (possibly, non-integer) when the solution is being tested on some test\n\n    q\n, and the caption says \"System testing: \n    q\n\ninteresting solutions. Please note that in case when multiple processes\nattempt to take the first submission from the queue at the same moment (for\ninstance, at the initial moment), the order they take the solutions does not\nmatter. Input The first line contains two positive integers \n    n\n and\n\n    k\n (\n    1 \n    \u2264 n \n    \u2264 1000\n, \n    1 \n    \u2264 k \n    \u2264 100\n) standing for\nthe number of submissions and the number of testing processes respectively.\nThe second line contains \n    n\n positive integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 150\n), where \n    a_i\n is equal to the number\nof tests the \n    i\n-th submission is to be run on. Output Output the only\ninteger \u2014 the number of interesting submissions. Examples Input 2 2 49 100\nOutput 1 Input 4 2 32 100 33 1 Output 2 Input 14 5 48 19 6 9 50 20 3 42 38 43\n36 21 44 6 Output 5 Note Consider the first example. At time moment \n    0\n\nboth solutions start testing. At time moment \n    49\n the first solution is\nfully tested, so at time moment \n    49.5\n the second solution is being tested\non the test \n    50\n, and the caption says \"System testing: \n    50\n\n(because there is one fully tested solution out of two). So, the second\nsolution is interesting. Consider the second example. At time moment \n    0\n\nthe first and the second solutions start testing. At time moment \n    32\n the\nfirst solution is fully tested, the third solution starts testing, the caption\nsays \"System testing: \n    25\n\nthird solutions is being tested on test \n    25\n, the caption is still the\nsame, thus this solution is interesting. After that the third solution is\nfully tested at time moment \n    32 + 33 = 65\n, the fourth solution is fully\ntested at time moment \n    65 + 1 = 66\n. The captions becomes \"System testing:\n\n    75\n\non test \n    75\n. So, this solution is also interesting. Overall, there are\ntwo interesting solutions.\n\n",
        "cf_contest_id": 1121,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2\r\n49 100\r\n",
                "1\r\n"
            ],
            [
                "4 2\r\n32 100 33 1\r\n",
                "2\r\n"
            ],
            [
                "14 5\r\n48 19 6 9 50 20 3 42 38 43 36 21 44 6\r\n",
                "5\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n50 100\r\n",
                "0\r\n"
            ],
            [
                "18 6\r\n22 8 11 27 37 19 18 49 47 18 15 25 8 3 5 11 32 47\r\n",
                "2\r\n"
            ],
            [
                "11 4\r\n28 31 12 19 3 26 15 25 47 19 6\r\n",
                "3\r\n"
            ],
            [
                "19 3\r\n43 47 64 91 51 88 22 66 48 48 92 91 16 1 2 38 38 91 91\r\n",
                "10\r\n"
            ],
            [
                "10 2\r\n69 4 43 36 33 27 59 5 86 55\r\n",
                "4\r\n"
            ],
            [
                "44 4\r\n58 39 131 78 129 35 93 61 123 25 40 9 50 9 93 66 99 115 28 45 32 31 137 114 140 85 138 12 98 53 75 29 15 17 74 87 36 62 43 132 37 103 116 142\r\n",
                "25\r\n"
            ],
            [
                "50 3\r\n33 7 96 30 68 37 44 50 100 71 12 100 72 43 17 75 59 96 16 34 25 3 90 45 7 55 92 59 30 25 96 23 40 41 95 99 93 79 89 11 76 60 4 100 75 14 37 39 87 47\r\n",
                "24\r\n"
            ],
            [
                "100 10\r\n3 114 77 78 105 87 6 122 141 100 75 118 64 18 88 37 109 72 31 101 36 10 62 18 52 17 149 115 22 150 138 48 46 42 104 8 63 21 117 58 87 80 7 131 125 118 67 13 144 43 59 67 74 13 124 77 86 148 107 11 51 9 87 52 147 22 7 22 143 12 121 123 17 35 33 87 91 140 92 38 106 10 66 26 40 100 121 42 134 127 116 111 52 139 88 30 28 106 49 19\r\n",
                "59\r\n"
            ],
            [
                "1 100\r\n79\r\n",
                "0\r\n"
            ],
            [
                "111 11\r\n20 83 25 94 8 2 29 54 36 74 63 85 27 40 84 3 86 83 18 88 92 82 87 38 47 54 14 37 46 51 61 24 17 19 81 50 24 75 97 65 59 100 7 42 83 79 57 19 24 66 57 63 73 5 30 38 60 53 1 99 99 40 41 64 12 39 75 69 70 79 79 73 93 46 69 32 58 31 60 11 32 24 11 11 8 35 3 46 35 17 42 72 7 22 67 84 41 52 96 89 46 36 95 69 1 79 97 81 47 91 90\r\n",
                "50\r\n"
            ],
            [
                "100 100\r\n1 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "98\r\n"
            ],
            [
                "5 2\r\n3 13 33 45 53\r\n",
                "0\r\n"
            ],
            [
                "10 3\r\n12 21 26 32 40 51 56 57 67 75\r\n",
                "3\r\n"
            ],
            [
                "30 4\r\n4 6 10 15 20 22 27 29 30 31 34 38 39 42 47 50 54 58 62 63 65 66 68 73 74 79 83 86 91 95\r\n",
                "16\r\n"
            ],
            [
                "50 5\r\n1 2 4 6 8 9 10 11 14 16 19 20 23 24 26 29 30 33 36 38 41 44 45 46 48 51 53 56 59 61 62 64 65 66 68 70 72 73 76 79 80 83 86 87 90 93 96 97 98 101\r\n",
                "35\r\n"
            ],
            [
                "100 10\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "90\r\n"
            ]
        ]
    }
]