[
    {
        "name": "Teleporters (Hard Version)",
        "description": "The only difference between the easy and hard versions are the locations you\ncan teleport to. Consider the points \n    0,1,\n    \u2026,n+1\n on the number line.\nThere is a teleporter located on each of the points \n    1,2,\n    \u2026,n\n. At\npoint \n    i\n, you can do the following: Move left one unit: it costs \n    1\n\ncoin. Move right one unit: it costs \n    1\n coin. Use a teleporter at point\n\n    i\n, if it exists: it costs \n    a_i\n coins. As a result, you can choose\nwhether to teleport to point \n    0\n or point \n    n+1\n. Once you use a\nteleporter, you can't use it again. You have \n    c\n coins, and you start at\npoint \n    0\n. What's the most number of teleporters you can use? Input The\ninput consists of multiple test cases. The first line contains an integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The\ndescriptions of the test cases follow. The first line of each test case\ncontains two integers \n    n\n and \n    c\n (\n    1 \n    \u2264 n \n    \u2264\n    2\n    \u00b710^5\n; \n    1 \n    \u2264 c \n    \u2264 10^9\n) \u2014 the length of the array and\nthe number of coins you have respectively. The following line contains \n    n\n\nspace-separated positive integers \n    a_1,a_2,\n    \u2026,a_n\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 10^9\n) \u2014 the costs to use the teleporters. It is guaranteed that the\nsum of \n    n\n over all test cases does not exceed \n    2\n    \u00b710^5\n. Output\nFor each test case, output the maximum number of teleporters you can use.\nExample Input 10 5 6 1 1 1 1 1 8 32 100 52 13 6 9 4 100 35 1 1 5 4 5 4 3 2 1 5\n9 2 3 1 4 1 5 8 2 3 1 4 1 4 3 2 3 4 1 4 9 5 4 3 3 2 14 7 5 5 600000000\n500000000 400000000 300000000 200000000 100000000 Output 2 3 0 1 3 2 1 1 2 2\nNote In the first test case, you can move one unit to the right, use the\nteleporter at index \n    1\n and teleport to point \n    n+1\n, move one unit to\nthe left and use the teleporter at index \n    5\n. You are left with\n\n    6-1-1-1-1 = 2\n coins, and wherever you teleport, you won't have enough\ncoins to use another teleporter. You have used two teleporters, so the answer\nis two. In the second test case, you go four units to the right and use the\nteleporter to go to \n    n+1\n, then go three units left and use the teleporter\nat index \n    6\n to go to \n    n+1\n, and finally, you go left four times and\nuse the teleporter. The total cost will be \n    4+6+3+4+4+9 = 30\n, and you\nused three teleporters. In the third test case, you don't have enough coins to\nuse any teleporter, so the answer is zero.\n\n",
        "cf_contest_id": 1791,
        "cf_index": "G2",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10\r\n5 6\r\n1 1 1 1 1\r\n8 32\r\n100 52 13 6 9 4 100 35\r\n1 1\r\n5\r\n4 5\r\n4 3 2 1\r\n5 9\r\n2 3 1 4 1\r\n5 8\r\n2 3 1 4 1\r\n4 3\r\n2 3 4 1\r\n4 9\r\n5 4 3 3\r\n2 14\r\n7 5\r\n5 600000000\r\n500000000 400000000 300000000 200000000 100000000\r\n",
                "2\r\n3\r\n0\r\n1\r\n3\r\n2\r\n1\r\n1\r\n2\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n5 5\r\n7 7 9 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n10 5\r\n100 100 100 100 100 100 100 100 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n8 5\r\n1000 1000 1000 1000 1 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n7 14\r\n100 4 100 100 1 2 4\r\n",
                "3\r\n"
            ],
            [
                "1\r\n6 5\r\n1000 1000 1000 1000 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n6 5\r\n5 4 3 10 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n100 123\r\n398 282 403 364 468 174 143 360 217 340 354 195 84 253 114 421 494 370 104 214 149 469 446 362 108 106 115 402 253 461 483 59 365 94 281 84 248 321 228 196 96 360 321 357 151 250 496 207 425 397 114 345 252 489 30 345 182 310 440 392 111 361 49 307 328 84 201 339 351 459 372 50 72 223 246 215 467 203 194 83 15 123 21 101 464 187 333 70 310 376 487 65 184 79 491 405 136 435 143 156\r\n",
                "2\r\n"
            ],
            [
                "1\r\n4 9\r\n10000000 10000000 4 1\r\n",
                "2\r\n"
            ],
            [
                "1\r\n6 114518\r\n9999999 9999999 9999999 9999999 114514 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n10 5\r\n100 100 100 100 100 1 1 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10 5\r\n11 11 11 11 11 11 11 11 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n7 10\r\n10 10 10 1 1 1 1\r\n",
                "3\r\n"
            ],
            [
                "1\r\n6 5\r\n10 10 10 10 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n8 17\r\n100 100 100 100 3 1 1 1\r\n",
                "4\r\n"
            ],
            [
                "1\r\n10 14\r\n9 9 9 9 9 1 1 9 9 1\r\n",
                "3\r\n"
            ],
            [
                "1\r\n10 58\r\n100 100 100 100 100 100 100 50 1 1\r\n",
                "2\r\n"
            ],
            [
                "1\r\n13 9\r\n8 10000 10000 10000 10000 10000 10000 10000 10000 10000 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n10 5\r\n100 100 100 100 100 100 100 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n12 19\r\n100 100 100 100 100 100 100 100 100 10 2 1\r\n",
                "2\r\n"
            ],
            [
                "1\r\n6 5\r\n90 90 90 90 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n50 402\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 27 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "26\r\n"
            ],
            [
                "1\r\n20 19\r\n999 999 999 999 999 999 9999 999 999 999 6 999 999 999 999 999 999 999 999 1\r\n",
                "2\r\n"
            ],
            [
                "1\r\n8 14\r\n10 100 100 100 100 100 1 9\r\n",
                "2\r\n"
            ],
            [
                "1\r\n8 5\r\n7 7 7 7 7 7 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n9 5\r\n9 8 4 4 1 1 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n20 116\r\n50 49 48 47 46 45 44 43 42 41 1 1 1 1 1 1 1 1 1 1\r\n",
                "11\r\n"
            ],
            [
                "1\r\n10 9\r\n999999 999999 999999 999999 999999 99999 9999999 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n100 1426\r\n100 99 98 97 96 95 94 93 92 91 90 89 88 87 86 85 84 83 82 81 80 79 78 77 76 75 74 73 72 71 70 69 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "51\r\n"
            ]
        ]
    }
]