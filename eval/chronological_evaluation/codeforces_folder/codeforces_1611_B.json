[
    {
        "name": "Team Composition: Programmers and Mathematicians",
        "description": "The All-Berland Team Programming Contest will take place very soon. This year,\nteams of four are allowed to participate. There are \n    a\n programmers and\n\n    b\n mathematicians at Berland State University. How many maximum teams can\nbe made if: each team must consist of exactly \n    4\n students, teams of\n\n    4\n mathematicians or \n    4\n programmers are unlikely to perform well, so\nthe decision was made not to compose such teams. Thus, each team must have at\nleast one programmer and at least one mathematician. Print the required\nmaximum number of teams. Each person can be a member of no more than one team.\nInput The first line contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n)\n\u2014the number of test cases. This is followed by descriptions of \n    t\n sets,\none per line. Each set is given by two integers \n    a\n and \n    b\n (\n    0\n    \n    \u2264 a,b \n    \u2264 10^9\n). Output Print \n    t\n lines. Each line must contain\nthe answer to the corresponding set of input data \u2014 the required maximum\nnumber of teams. Example Input 6 5 5 10 1 2 3 0 0 17 2 1000000000 1000000000\nOutput 2 1 1 0 2 500000000 Note In the first test case of the example, two\nteams can be composed. One way to compose two teams is to compose two teams of\n\n    2\n programmers and \n    2\n mathematicians. In the second test case of the\nexample, only one team can be composed: \n    3\n programmers and \n    1\n\nmathematician in the team.\n\n",
        "cf_contest_id": 1611,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n5 5\r\n10 1\r\n2 3\r\n0 0\r\n17 2\r\n1000000000 1000000000\r\n",
                "2\r\n1\r\n1\r\n0\r\n2\r\n500000000\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n841409 1\r\n",
                "1\r\n"
            ]
        ]
    }
]