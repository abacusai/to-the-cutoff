[
    {
        "name": "Hossam and (sub-)palindromic tree",
        "description": "Hossam has an unweighted tree \n    G\n with letters in vertices. Hossam defines\n\n    s(v, \n      u)\n as a string that is obtained by writing down all the\nletters on the unique simple path from the vertex \n    v\n to the vertex\n\n    u\n in the tree \n    G\n. A string \n    a\n is a subsequence of a string\n\n    s\n if \n    a\n can be obtained from \n    s\n by deletion of several\n(possibly, zero) letters. For example, \"dores\", \"cf\", and \"for\" are\nsubsequences of \"codeforces\", while \"decor\" and \"fork\" are not. A palindrome\nis a string that reads the same from left to right and from right to left. For\nexample, \"abacaba\" is a palindrome, but \"abac\" is not. Hossam defines a sub-\npalindrome of a string \n    s\n as a subsequence of \n    s\n, that is a\npalindrome. For example, \"k\", \"abba\" and \"abhba\" are sub-palindromes of the\nstring \"abhbka\", but \"abka\" and \"cat\" are not. Hossam defines a maximal sub-\npalindrome of a string \n    s\n as a sub-palindrome of \n    s\n, which has the\nmaximal length among all sub-palindromes of \n    s\n. For example, \"abhbka\" has\nonly one maximal sub-palindrome \u2014 \"abhba\". But it may also be that the string\nhas several maximum sub-palindromes: the string \"abcd\" has \n    4\n maximum\nsub-palindromes. Help Hossam find the length of the longest maximal sub-\npalindrome among all \n    s(v, \n      u)\n in the tree \n    G\n. Note that the\nsub-palindrome is a subsequence, not a substring. Input The first line\ncontains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 200\n) \u2014 the number of test\ncases. The first line of each test case has one integer number \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^3\n) \u2014 the number of vertices in the graph. The\nsecond line contains a string \n    s\n of length \n    n\n, the \n    i\n-th symbol\nof which denotes the letter on the vertex \n    i\n. It is guaranteed that all\ncharacters in this string are lowercase English letters. The next \n    n - 1\n\nlines describe the edges of the tree. Each edge is given by two integers\n\n    v\n and \n    u\n (\n    1 \n    \u2264 v, \n      u \n    \u2264 n\n, \n    v \n    \u2260 u\n). These\ntwo numbers mean that there is an edge \n    (v, \n      u)\n in the tree. It is\nguaranteed that the given edges form a tree. It is guaranteed that sum of all\n\n    n\n doesn't exceed \n    2 \n    \u00b7 10^3\n. Output For each test case output\none integer \u2014 the length of the longest maximal sub-palindrome among all\n\n    s(v, \n      u)\n. Example Input 2 5 abaca 1 2 1 3 3 4 4 5 9 caabadedb 1 2 2\n3 2 4 1 5 5 6 5 7 5 8 8 9 Output 3 5 Note In the first example the maximal\nsubpalindromes are \"aaa\" with letters in vertices \n    1, \n      3, \n      5\n, or\n\"aca\" with letters in vertices \n    1, \n      4, \n      5\n. The tree from the\nfirst example. In the second example there is only one maximal palindrome\n\"bacab\" with letters in vertices \n    4, \n      2, \n      1, \n      5, \n      9\n. The\ntree from the second example.\n\n",
        "cf_contest_id": 1771,
        "cf_index": "D",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "strings",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n5\r\nabaca\r\n1 2\r\n1 3\r\n3 4\r\n4 5\r\n9\r\ncaabadedb\r\n1 2\r\n2 3\r\n2 4\r\n1 5\r\n5 6\r\n5 7\r\n5 8\r\n8 9\r\n",
                "3\r\n5\r\n"
            ]
        ],
        "private_cases": []
    }
]