[
    {
        "name": "Move and Swap",
        "description": "You are given \n    n - 1\n integers \n    a_2, \n    \u2026, a_n\n and a tree with\n\n    n\n vertices rooted at vertex \n    1\n. The leaves are all at the same\ndistance \n    d\n from the root. Recall that a tree is a connected undirected\ngraph without cycles. The distance between two vertices is the number of edges\non the simple path between them. All non-root vertices with degree \n    1\n are\nleaves. If vertices \n    s\n and \n    f\n are connected by an edge and the\ndistance of \n    f\n from the root is greater than the distance of \n    s\n from\nthe root, then \n    f\n is called a child of \n    s\n. Initially, there are a\nred coin and a blue coin on the vertex \n    1\n. Let \n    r\n be the vertex\nwhere the red coin is and let \n    b\n be the vertex where the blue coin is.\nYou should make \n    d\n moves. A move consists of three steps: Move the red\ncoin to any child of \n    r\n. Move the blue coin to any vertex \n    b'\n such\nthat \n    dist(1, b') = dist(1, b) + 1\n. Here \n    dist(x, y)\n indicates the\nlength of the simple path between \n    x\n and \n    y\n. Note that \n    b\n and\n\n    b'\n are not necessarily connected by an edge. You can optionally swap the\ntwo coins (or skip this step). Note that \n    r\n and \n    b\n can be equal at\nany time, and there is no number written on the root. After each move, you\ngain \n    |a_r - a_b|\n points. What's the maximum number of points you can\ngain after \n    d\n moves? Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The first\nline of each test case contains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264\n    2 \n    \u00b7 10^5\n) \u2014 the number of vertices in the tree. The second line of\neach test case contains \n    n-1\n integers \n    v_2, v_3, \n    \u2026, v_n\n (\n    1\n    \n    \u2264 v_i \n    \u2264 n\n, \n    v_i \n    \u2260 i\n) \u2014 the \n    i\n-th of them indicates\nthat there is an edge between vertices \n    i\n and \n    v_i\n. It is\nguaranteed, that these edges form a tree. The third line of each test case\ncontains \n    n-1\n integers \n    a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^9\n) \u2014 the numbers written on the vertices. It is guaranteed that the sum\nof \n    n\n for all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For\neach test case, print a single integer: the maximum number of points you can\ngain after \n    d\n moves. Example Input 4 14 1 1 1 2 3 4 4 5 5 6 7 8 8 2 3 7 7\n6 9 5 9 7 3 6 6 5 6 1 2 2 3 4 32 78 69 5 41 15 1 15 1 10 4 9 11 2 4 1 8 6 10\n11 62 13 12 43 39 65 42 86 25 38 19 19 43 62 15 11 2 7 6 9 8 10 1 1 1 5 3 15 2\n50 19 30 35 9 45 13 24 8 44 16 26 10 40 Output 14 45 163 123 Note In the first\ntest case, an optimal solution is to: move \n    1\n: \n    r = 4\n, \n    b = 2\n;\nno swap; move \n    2\n: \n    r = 7\n, \n    b = 6\n; swap (after it \n    r = 6\n,\n\n    b = 7\n); move \n    3\n: \n    r = 11\n, \n    b = 9\n; no swap. The total\nnumber of points is \n    |7 - 2| + |6 - 9| + |3 - 9| = 14\n. In the second test\ncase, an optimal solution is to: move \n    1\n: \n    r = 2\n, \n    b = 2\n; no\nswap; move \n    2\n: \n    r = 3\n, \n    b = 4\n; no swap; move \n    3\n: \n    r =\n    5\n, \n    b = 6\n; no swap. The total number of points is \n    |32 - 32| + |78 -\n    69| + |5 - 41| = 45\n.\n\n",
        "cf_contest_id": 1485,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n14\r\n1 1 1 2 3 4 4 5 5 6 7 8 8\r\n2 3 7 7 6 9 5 9 7 3 6 6 5\r\n6\r\n1 2 2 3 4\r\n32 78 69 5 41\r\n15\r\n1 15 1 10 4 9 11 2 4 1 8 6 10 11\r\n62 13 12 43 39 65 42 86 25 38 19 19 43 62\r\n15\r\n11 2 7 6 9 8 10 1 1 1 5 3 15 2\r\n50 19 30 35 9 45 13 24 8 44 16 26 10 40\r\n",
                "14\r\n45\r\n163\r\n123\r\n"
            ]
        ],
        "private_cases": []
    }
]