[
    {
        "name": "Running Student",
        "description": "And again a misfortune fell on Poor Student. He is being late for an exam.\nHaving rushed to a bus stop that is in point (0, 0), he got on a minibus and\nthey drove along a straight line, parallel to axis OX, in the direction of\nincreasing x. Poor Student knows the following: during one run the minibus\nmakes n stops, the i-th stop is in point (xi, 0) coordinates of all the stops\nare different the minibus drives at a constant speed, equal to vb it can be\nassumed the passengers get on and off the minibus at a bus stop momentarily\nStudent can get off the minibus only at a bus stop Student will have to get\noff the minibus at a terminal stop, if he does not get off earlier the\nUniversity, where the exam will be held, is in point (xu, yu) Student can run\nfrom a bus stop to the University at a constant speed vs as long as needed a\ndistance between two points can be calculated according to the following\nformula: Student is already on the minibus, so, he cannot get off at the first\nbus stop Poor Student wants to get to the University as soon as possible. Help\nhim to choose the bus stop, where he should get off. If such bus stops are\nmultiple, choose the bus stop closest to the University. Input The first line\ncontains three integer numbers: 2 \u2264 n \u2264 100, 1 \u2264 vb, vs \u2264 1000. The second\nline contains n non-negative integers in ascending order: coordinates xi of\nthe bus stop with index i. It is guaranteed that x1 equals to zero, and xn \u2264\n10^5. The third line contains the coordinates of the University, integers xu\nand yu, not exceeding 10^5 in absolute value. Output In the only line output\nthe answer to the problem \u2014 index of the optimum bus stop. Examples Input 4 5\n2 0 2 4 6 4 1 Output 3 Input 2 1 1 0 100000 100000 100000 Output 2 Note As you\nknow, students are a special sort of people, and minibuses usually do not\nhurry. That's why you should not be surprised, if Student's speed is higher\nthan the speed of the minibus.\n\n",
        "cf_contest_id": 9,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "geometry",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "4 5 2\r\n0 2 4 6\r\n4 1\r\n",
                "3\r\n"
            ],
            [
                "2 1 1\r\n0 100000\r\n100000 100000\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "6 5 1\r\n0 1 2 3 4 5\r\n0 0\r\n",
                "2\r\n"
            ],
            [
                "4 100 10\r\n0 118 121 178\r\n220 220\r\n",
                "4\r\n"
            ],
            [
                "4 3 3\r\n0 6 8 10\r\n7 -4\r\n",
                "2\r\n"
            ],
            [
                "5 900 1\r\n0 37474 80030 85359 97616\r\n-1 -1\r\n",
                "2\r\n"
            ],
            [
                "5 200 400\r\n0 8068 28563 51720 66113\r\n5423 -34\r\n",
                "2\r\n"
            ],
            [
                "6 10 3\r\n0 12 14 16 19 20\r\n14 0\r\n",
                "3\r\n"
            ],
            [
                "6 13 11\r\n0 16 27 31 39 42\r\n54 3\r\n",
                "6\r\n"
            ],
            [
                "11 853 721\r\n0 134 1971 2369 3381 3997 4452 6875 8983 9360 9399\r\n7345 333\r\n",
                "8\r\n"
            ],
            [
                "35 35 12\r\n0 90486 90543 90763 91127 91310 92047 92405 93654 93814 94633 94752 94969 94994 95287 96349 96362 96723 96855 96883 97470 97482 97683 97844 97926 98437 98724 98899 98921 99230 99253 99328 99444 99691 99947\r\n96233 -7777\r\n",
                "9\r\n"
            ],
            [
                "55 11 44\r\n0 3343 3387 3470 3825 3832 3971 4026 4043 4389 4492 4886 5015 5084 5161 5436 5595 5616 5677 5987 6251 6312 6369 6469 6487 6493 6507 6641 6928 7067 7159 7280 7303 7385 7387 7465 7536 7572 7664 7895 7921 7955 8110 8191 8243 8280 8523 8525 8581 8877 9221 9462 9505 9594 9596\r\n8000 0\r\n",
                "2\r\n"
            ],
            [
                "72 1000 777\r\n0 215 2814 5104 5226 5925 6734 9213 11697 13739 14015 16101 17234 19013 19566 19683 20283 20837 21332 21432 25490 26284 27728 29911 30112 30133 31494 31595 32499 32932 33289 36611 37736 43548 44440 44537 47656 47699 48327 50942 52178 53759 56925 57671 62024 65441 67958 70346 71606 75235 75466 75553 75905 76173 76512 77784 78183 80425 81339 81543 84537 88384 89953 90214 92107 92274 93328 93550 93987 97546 99459 99532\r\n63421 35\r\n",
                "45\r\n"
            ],
            [
                "76 1 1\r\n0 1000 1754 2749 3687 4983 8121 10299 11043 12986 14125 15910 17070 17189 17551 17953 17973 20816 25436 26150 27446 27788 28466 28941 29537 33965 37566 40845 40930 41304 41614 41615 43042 45098 45844 49878 50453 50936 55480 58410 59258 59287 62789 64127 64333 64450 64862 65404 66451 67626 69294 69804 71988 72165 74196 74560 75407 76611 77055 77344 79470 83566 84550 87458 87627 88205 89880 90255 90586 91970 93795 95308 99032 99442 99547 99549\r\n0 0\r\n",
                "2\r\n"
            ],
            [
                "94 2 1\r\n0 5000 5001 5002 5003 5004 5005 5006 5007 5008 5009 5010 5011 5012 5013 5014 5015 5016 5017 5018 5019 5020 5021 5022 5023 5024 5025 5026 5027 5028 5029 5030 5031 5032 5033 5034 5035 5036 5037 5038 5040 5041 5042 5043 5044 5045 5046 5047 5048 5049 5050 5051 5052 5053 5054 5055 5056 5057 5058 5059 5060 5061 5062 5063 5064 5065 5066 5067 5068 5069 5070 5071 5072 5073 5074 5075 5076 5077 5078 5079 5080 5081 5082 5083 5084 5085 5086 5087 5088 5089 5090 5091 5092 5093\r\n5050 -100000\r\n",
                "2\r\n"
            ],
            [
                "100 1 2\r\n0 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n100 0\r\n",
                "2\r\n"
            ],
            [
                "100 1000 1\r\n0 505 506 514 515 520 523 527 529 530 538 547 550 554 559 562 566 568 569 580 582 584 588 597 609 621 624 629 630 631 634 641 646 653 657 666 673 678 680 683 685 690 695 698 699 700 705 709 716 731 734 735 736 738 756 761 762 765 769 772 776 779 784 790 794 812 814 816 833 837 842 845 850 854 855 863 868 872 882 892 893 898 899 900 901 902 915 916 917 932 936 954 962 968 975 978 983 992 996 998\r\n600 7778\r\n",
                "23\r\n"
            ],
            [
                "2 1 1\r\n0 100000\r\n-100000 -100000\r\n",
                "2\r\n"
            ],
            [
                "2 1000 1000\r\n0 1\r\n1 0\r\n",
                "2\r\n"
            ],
            [
                "3 1 1\r\n0 1 2\r\n2 0\r\n",
                "3\r\n"
            ]
        ]
    }
]