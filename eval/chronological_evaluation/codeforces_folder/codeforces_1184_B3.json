[
    {
        "name": "The Doctor Meets Vader (Hard)",
        "description": "The rebels have saved enough gold to launch a full-scale attack. Now the\nsituation is flipped, the rebels will send out the spaceships to attack the\nEmpire bases! The galaxy can be represented as an undirected graph with\n\n    n\n planets (nodes) and \n    m\n wormholes (edges), each connecting two\nplanets. A total of \n    s\n rebel spaceships and \n    b\n empire bases are\nlocated at different planets in the galaxy. Each spaceship is given a location\n\n    x\n, denoting the index of the planet on which it is located, an attacking\nstrength \n    a\n, a certain amount of fuel \n    f\n, and a price to operate\n\n    p\n. Each base is given a location \n    x\n, a defensive strength \n    d\n,\nand a certain amount of gold \n    g\n. A spaceship can attack a base if both of\nthese conditions hold: the spaceship's attacking strength is greater or equal\nthan the defensive strength of the base the spaceship's fuel is greater or\nequal to the shortest distance, computed as the number of wormholes, between\nthe spaceship's node and the base's node The rebels are very proud fighters.\nSo, if a spaceship cannot attack any base, no rebel pilot will accept to\noperate it. If a spaceship is operated, the profit generated by that spaceship\nis equal to the gold of the base it attacks minus the price to operate the\nspaceship. Note that this might be negative. A spaceship that is operated will\nattack the base that maximizes its profit. Darth Vader likes to appear rich at\nall times. Therefore, whenever a base is attacked and its gold stolen, he\nmakes sure to immediately refill that base with gold. Therefore, for the\npurposes of the rebels, multiple spaceships can attack the same base, in which\ncase each spaceship will still receive all the gold of that base. The rebels\nhave tasked Heidi and the Doctor to decide which set of spaceships to operate\nin order to maximize the total profit. However, as the war has been going on\nfor a long time, the pilots have formed unbreakable bonds, and some of them\nrefuse to operate spaceships if their friends are not also operating\nspaceships. They have a list of \n    k\n dependencies of the form \n    s_1,\n    s_2\n, denoting that spaceship \n    s_1\n can be operated only if spaceship\n\n    s_2\n is also operated. Input The first line of input contains integers\n\n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 100\n, \n    0 \n    \u2264 m \n    \u2264\n    10000\n), the number of nodes and the number of edges, respectively. The next\n\n    m\n lines contain integers \n    u\n and \n    v\n (\n    1 \n    \u2264 u, v \n    \u2264\n    n\n) denoting an undirected edge between the two nodes. The next line\ncontains integers \n    s\n, \n    b\n and \n    k\n (\n    1 \n    \u2264 s, b \n    \u2264\n    10^5\n, \n    0 \n    \u2264 k \n    \u2264 1000\n), the number of spaceships, bases, and\ndependencies, respectively. The next \n    s\n lines contain integers \n    x, a,\n    f, p\n (\n    1 \n    \u2264 x \n    \u2264 n\n, \n    0 \n    \u2264 a, f, p \n    \u2264 10^9\n),\ndenoting the location, attack, fuel, and price of the spaceship. Ships are\nnumbered from \n    1\n to \n    s\n. The next \n    b\n lines contain integers\n\n    x, d, g\n (\n    1 \n    \u2264 x \n    \u2264 n\n, \n    0 \n    \u2264 d, g \n    \u2264 10^9\n),\ndenoting the location, defence, and gold of the base. The next \n    k\n lines\ncontain integers \n    s_1\n and \n    s_2\n (\n    1 \n    \u2264 s_1, s_2 \n    \u2264 s\n),\ndenoting a dependency of \n    s_1\n on \n    s_2\n. Output Print a single\ninteger, the maximum total profit that can be achieved. Example Input 6 7 1 2\n2 3 3 4 4 6 6 5 4 4 3 6 4 2 2 1 10 2 5 3 8 2 7 5 1 0 2 6 5 4 1 3 7 6 5 2 3 4 2\n3 2 Output 2 Note The optimal strategy is to operate spaceships 1, 2, and 4,\nwhich will attack bases 1, 1, and 2, respectively.\n\n",
        "cf_contest_id": 1184,
        "cf_index": "B3",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "flows",
            "shortest paths"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "6 7\r\n1 2\r\n2 3\r\n3 4\r\n4 6\r\n6 5\r\n4 4\r\n3 6\r\n4 2 2\r\n1 10 2 5\r\n3 8 2 7\r\n5 1 0 2\r\n6 5 4 1\r\n3 7 6\r\n5 2 3\r\n4 2\r\n3 2\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1 1\r\n1 2 0\r\n1 424550512 267535146 337021959\r\n1 340728578 862017405\r\n1 296016606 901537974\r\n",
                "564516015\r\n"
            ],
            [
                "1 1\r\n1 1\r\n2 1 1\r\n1 977821005 511405192 843598992\r\n1 638564514 680433292 994431111\r\n1 452689372 642414314\r\n2 1\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n1 1\r\n2 2 0\r\n1 531091498 755275238 645143315\r\n1 936400451 457379982 948257592\r\n1 45309968 181471857\r\n1 558039453 931056469\r\n",
                "0\r\n"
            ],
            [
                "1 0\r\n1 1 1\r\n1 393719043 515372386 379329282\r\n1 446687639 688441074\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "1 0\r\n1 1 0\r\n1 309612754 148757376 932599775\r\n1 953264671 466422620\r\n",
                "0\r\n"
            ],
            [
                "1 0\r\n1 1 0\r\n1 446844829 77109657 780837560\r\n1 754808995 539371459\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n1 1\r\n2 1 1\r\n1 629075344 435788130 187757098\r\n1 464180683 238039721 270559705\r\n1 512723125 959796342\r\n2 1\r\n",
                "772039244\r\n"
            ],
            [
                "1 1\r\n1 1\r\n2 2 1\r\n1 182345837 974625469 989301423\r\n1 762016619 720019121 224386186\r\n1 105343720 162417396\r\n1 598490187 99799082\r\n2 1\r\n",
                "0\r\n"
            ],
            [
                "1 0\r\n1 1 0\r\n1 710831619 862166501 30583621\r\n1 790845747 504719880\r\n",
                "0\r\n"
            ],
            [
                "1 0\r\n1 1 0\r\n1 258129110 790518782 878821407\r\n1 297422778 577668719\r\n",
                "0\r\n"
            ],
            [
                "2 0\r\n3 2 2\r\n1 1 1 10\r\n2 1 1 0\r\n2 1 1 0\r\n1 1 0\r\n2 1 7\r\n2 1\r\n3 1\r\n",
                "4\r\n"
            ]
        ]
    }
]