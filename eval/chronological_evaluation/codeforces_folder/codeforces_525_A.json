[
    {
        "name": "Vitaliy and Pie",
        "description": "After a hard day Vitaly got very hungry and he wants to eat his favorite\npotato pie. But it's not that simple. Vitaly is in the first room of the house\nwith n room located in a line and numbered starting from one from left to\nright. You can go from the first room to the second room, from the second room\nto the third room and so on \u2014 you can go from the (n - 1)-th room to the n-th\nroom. Thus, you can go to room x only from room x - 1. The potato pie is\nlocated in the n-th room and Vitaly needs to go there. Each pair of\nconsecutive rooms has a door between them. In order to go to room x from room\nx - 1, you need to open the door between the rooms with the corresponding key.\nIn total the house has several types of doors (represented by uppercase Latin\nletters) and several types of keys (represented by lowercase Latin letters).\nThe key of type t can open the door of type T if and only if t and T are the\nsame letter, written in different cases. For example, key f can open door F.\nEach of the first n - 1 rooms contains exactly one key of some type that\nVitaly can use to get to next rooms. Once the door is open with some key,\nVitaly won't get the key from the keyhole but he will immediately run into the\nnext room. In other words, each key can open no more than one door. Vitaly\nrealizes that he may end up in some room without the key that opens the door\nto the next room. Before the start his run for the potato pie Vitaly can buy\nany number of keys of any type that is guaranteed to get to room n. Given the\nplan of the house, Vitaly wants to know what is the minimum number of keys he\nneeds to buy to surely get to the room n, which has a delicious potato pie.\nWrite a program that will help Vitaly find out this number. Input The first\nline of the input contains a positive integer n (2 \u2264 n \u2264 10^5) \u2014 the number of\nrooms in the house. The second line of the input contains string s of length\n2\u00b7n - 2. Let's number the elements of the string from left to right, starting\nfrom one. The odd positions in the given string s contain lowercase Latin\nletters \u2014 the types of the keys that lie in the corresponding rooms. Thus,\neach odd position i of the given string s contains a lowercase Latin letter \u2014\nthe type of the key that lies in room number (i + 1) / 2. The even positions\nin the given string contain uppercase Latin letters \u2014 the types of doors\nbetween the rooms. Thus, each even position i of the given string s contains\nan uppercase letter \u2014 the type of the door that leads from room i / 2 to room\ni / 2 + 1. Output Print the only integer \u2014 the minimum number of keys that\nVitaly needs to buy to surely get from room one to room n. Examples Input 3\naAbB Output 0 Input 4 aBaCaB Output 3 Input 5 xYyXzZaZ Output 2\n\n",
        "cf_contest_id": 525,
        "cf_index": "A",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "hashing",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\naAbB\r\n",
                "0"
            ],
            [
                "4\r\naBaCaB\r\n",
                "3"
            ],
            [
                "5\r\nxYyXzZaZ\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "26\r\naAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyY\r\n",
                "0"
            ],
            [
                "26\r\nzAyBxCwDvEuFtGsHrIqJpKoLnMmNlOkPjQiRhSgTfUeVdWcXbY\r\n",
                "13"
            ],
            [
                "5\r\naArRaRaR\r\n",
                "2"
            ],
            [
                "2\r\ndA\r\n",
                "1"
            ],
            [
                "2\r\ncB\r\n",
                "1"
            ],
            [
                "10\r\nhNcMeXsSlHsUwYeMcA\r\n",
                "7"
            ],
            [
                "100\r\nqDpInBmCrFwXpDbFgOzVvOcEmJrUcToAdEwEgTvBvBfWwRpGyEaXgDdRwVlQnYgWmWhMrHaIzPyXvGaFlRsVzHhZrOuVpXrKxFzAmWwPlFtNfPtJxVmLuHjKfYyArHrEnSwSzOvDpQhCgCqLlAcNpGhXrEeFuCmAqIkXyYtSsQwIxJzNiIuTgEbVuWrMwPrAlLyKaZ\r\n",
                "42"
            ],
            [
                "2\r\ndD\r\n",
                "0"
            ],
            [
                "2\r\ndE\r\n",
                "1"
            ],
            [
                "3\r\ndDdD\r\n",
                "0"
            ],
            [
                "3\r\ndEdD\r\n",
                "1"
            ],
            [
                "3\r\ndEeD\r\n",
                "1"
            ],
            [
                "3\r\ndEeF\r\n",
                "2"
            ]
        ]
    }
]