[
    {
        "name": "Maximize Mex",
        "description": "There are \n    n\n students and \n    m\n clubs in a college. The clubs are\nnumbered from \n    1\n to \n    m\n. Each student has a potential \n    p_i\n and\nis a member of the club with index \n    c_i\n. Initially, each student is a\nmember of exactly one club. A technical fest starts in the college, and it\nwill run for the next \n    d\n days. There is a coding competition every day in\nthe technical fest. Every day, in the morning, exactly one student of the\ncollege leaves their club. Once a student leaves their club, they will never\njoin any club again. Every day, in the afternoon, the director of the college\nwill select one student from each club (in case some club has no members,\nnobody is selected from that club) to form a team for this day's coding\ncompetition. The strength of a team is the mex of potentials of the students\nin the team. The director wants to know the maximum possible strength of the\nteam for each of the coming \n    d\n days. Thus, every day the director chooses\nsuch team, that the team strength is maximized. The mex of the multiset\n\n    S\n is the smallest non-negative integer that is not present in \n    S\n.\nFor example, the mex of the \n    0, 1, 1, 2, 4, 5, 9\n is \n    3\n,\nthe mex of \n    1, 2, 3\n is \n    0\n and the mex of\n\n    \u2205\n (empty set) is \n    0\n. Input The first line contains two\nintegers \n    n\n and \n    m\n (\n    1 \n    \u2264 m \n    \u2264 n \n    \u2264 5000\n), the\nnumber of students and the number of clubs in college. The second line\ncontains \n    n\n integers \n    p_1, p_2, \n    \u2026, p_n\n (\n    0 \n    \u2264 p_i <\n    5000\n), where \n    p_i\n is the potential of the \n    i\n-th student. The\nthird line contains \n    n\n integers \n    c_1, c_2, \n    \u2026, c_n\n (\n    1\n    \n    \u2264 c_i \n    \u2264 m\n), which means that \n    i\n-th student is initially a\nmember of the club with index \n    c_i\n. The fourth line contains an integer\n\n    d\n (\n    1 \n    \u2264 d \n    \u2264 n\n), number of days for which the director\nwants to know the maximum possible strength of the team. Each of the next\n\n    d\n lines contains an integer \n    k_i\n (\n    1 \n    \u2264 k_i \n    \u2264 n\n),\nwhich means that \n    k_i\n-th student lefts their club on the \n    i\n-th day.\nIt is guaranteed, that the \n    k_i\n-th student has not left their club\nearlier. Output For each of the \n    d\n days, print the maximum possible\nstrength of the team on that day. Examples Input 5 3 0 1 2 2 0 1 2 2 3 2 5 3 2\n4 5 1 Output 3 1 1 1 0 Input 5 3 0 1 2 2 1 1 3 2 3 2 5 4 2 3 5 1 Output 3 2 2\n1 0 Input 5 5 0 1 2 4 5 1 2 3 4 5 4 2 3 5 4 Output 1 1 1 1 Note Consider the\nfirst example: On the first day, student \n    3\n leaves their club. Now, the\nremaining students are \n    1\n, \n    2\n, \n    4\n and \n    5\n. We can select\nstudents \n    1\n, \n    2\n and \n    4\n to get maximum possible strength, which\nis \n    3\n. Note, that we can't select students \n    1\n, \n    2\n and \n    5\n,\nas students \n    2\n and \n    5\n belong to the same club. Also, we can't select\nstudents \n    1\n, \n    3\n and \n    4\n, since student \n    3\n has left their\nclub. On the second day, student \n    2\n leaves their club. Now, the remaining\nstudents are \n    1\n, \n    4\n and \n    5\n. We can select students \n    1\n,\n\n    4\n and \n    5\n to get maximum possible strength, which is \n    1\n. On the\nthird day, the remaining students are \n    1\n and \n    5\n. We can select\nstudents \n    1\n and \n    5\n to get maximum possible strength, which is\n\n    1\n. On the fourth day, the remaining student is \n    1\n. We can select\nstudent \n    1\n to get maximum possible strength, which is \n    1\n. On the\nfifth day, no club has students and so the maximum possible strength is\n\n    0\n.\n\n",
        "cf_contest_id": 1139,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "flows",
            "graph matchings",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 3\r\n0 1 2 2 0\r\n1 2 2 3 2\r\n5\r\n3\r\n2\r\n4\r\n5\r\n1\r\n",
                "3\r\n1\r\n1\r\n1\r\n0\r\n"
            ],
            [
                "5 3\r\n0 1 2 2 1\r\n1 3 2 3 2\r\n5\r\n4\r\n2\r\n3\r\n5\r\n1\r\n",
                "3\r\n2\r\n2\r\n1\r\n0\r\n"
            ],
            [
                "5 5\r\n0 1 2 4 5\r\n1 2 3 4 5\r\n4\r\n2\r\n3\r\n5\r\n4\r\n",
                "1\r\n1\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 10\r\n8 5 1 3 9 2 7 0 6 4\r\n6 4 8 2 7 9 5 1 10 3\r\n10\r\n9\r\n2\r\n1\r\n7\r\n5\r\n6\r\n8\r\n3\r\n10\r\n4\r\n",
                "6\r\n5\r\n5\r\n5\r\n5\r\n2\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "10 10\r\n2 0 3 5 6 1 9 4 7 8\r\n9 2 5 7 1 6 4 10 8 3\r\n5\r\n9\r\n5\r\n4\r\n10\r\n7\r\n",
                "7\r\n6\r\n5\r\n5\r\n5\r\n"
            ],
            [
                "10 5\r\n5 1 9 7 3 2 8 0 6 4\r\n1 1 1 5 4 3 2 5 2 4\r\n10\r\n9\r\n3\r\n5\r\n7\r\n10\r\n6\r\n1\r\n4\r\n2\r\n8\r\n",
                "4\r\n4\r\n3\r\n3\r\n3\r\n2\r\n2\r\n2\r\n1\r\n0\r\n"
            ],
            [
                "10 5\r\n9 7 8 0 1 4 5 2 6 3\r\n5 5 4 4 2 2 1 3 4 5\r\n5\r\n9\r\n6\r\n10\r\n5\r\n1\r\n",
                "4\r\n4\r\n3\r\n1\r\n1\r\n"
            ],
            [
                "20 8\r\n1 17 10 12 13 7 14 9 16 15 6 3 11 18 19 8 4 2 0 5\r\n8 6 3 4 4 8 5 8 3 7 4 2 4 5 7 1 4 6 4 1\r\n8\r\n13\r\n17\r\n20\r\n11\r\n3\r\n16\r\n2\r\n4\r\n",
                "4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n"
            ],
            [
                "20 20\r\n10 13 3 14 17 19 0 7 16 5 9 8 12 2 18 6 11 4 15 1\r\n20 8 17 11 2 10 12 4 19 7 6 3 1 18 16 5 14 13 9 15\r\n15\r\n9\r\n15\r\n6\r\n5\r\n13\r\n2\r\n19\r\n4\r\n11\r\n17\r\n12\r\n1\r\n10\r\n18\r\n16\r\n",
                "16\r\n16\r\n16\r\n16\r\n12\r\n12\r\n12\r\n12\r\n9\r\n9\r\n8\r\n8\r\n5\r\n4\r\n4\r\n"
            ],
            [
                "10 5\r\n0 1 1 0 3 1 3 0 2 0\r\n5 4 3 4 3 4 1 2 3 3\r\n10\r\n1\r\n2\r\n8\r\n7\r\n3\r\n9\r\n6\r\n5\r\n10\r\n4\r\n",
                "4\r\n4\r\n2\r\n2\r\n2\r\n2\r\n1\r\n1\r\n1\r\n0\r\n"
            ],
            [
                "20 5\r\n0 1 418 1718 2027 0 1 2 2 1 433 227 0 1 0 2 0 114 1 1329\r\n4 5 4 2 4 1 3 1 2 4 5 1 5 2 3 5 3 2 3 4\r\n10\r\n20\r\n12\r\n11\r\n18\r\n5\r\n3\r\n4\r\n9\r\n16\r\n8\r\n",
                "3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n2\r\n"
            ],
            [
                "20 20\r\n0 0 3 2 1 2 2 3 2 2 1 1 0 3 0 0 1 1 1 3\r\n15 1 20 13 6 12 16 8 3 14 10 5 18 17 4 9 2 11 7 19\r\n20\r\n2\r\n10\r\n7\r\n4\r\n6\r\n5\r\n14\r\n8\r\n9\r\n18\r\n13\r\n11\r\n19\r\n1\r\n16\r\n20\r\n17\r\n12\r\n15\r\n3\r\n",
                "4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n1\r\n0\r\n0\r\n"
            ],
            [
                "1 1\r\n0\r\n1\r\n1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "5 5\r\n0 0 1 1 2\r\n1 2 2 3 2\r\n2\r\n2\r\n3\r\n",
                "3\r\n3\r\n"
            ],
            [
                "5 3\r\n0 0 1 1 2\r\n1 2 2 3 2\r\n2\r\n2\r\n3\r\n",
                "3\r\n3\r\n"
            ],
            [
                "10 5\r\n1 2 0 4 2 4 1 3 4 4\r\n2 4 4 3 5 1 1 4 4 2\r\n10\r\n1\r\n8\r\n2\r\n9\r\n10\r\n3\r\n5\r\n4\r\n6\r\n7\r\n",
                "3\r\n3\r\n3\r\n3\r\n3\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "10 5\r\n3 1 4 3 4 2 3 1 0 1\r\n2 5 3 5 2 5 4 4 1 4\r\n5\r\n4\r\n2\r\n10\r\n7\r\n1\r\n",
                "5\r\n5\r\n5\r\n5\r\n3\r\n"
            ],
            [
                "10 5\r\n1 0 1 4 2 4 4 0 1 1\r\n4 4 4 5 2 1 4 2 3 5\r\n5\r\n1\r\n6\r\n3\r\n2\r\n7\r\n",
                "3\r\n3\r\n3\r\n2\r\n2\r\n"
            ],
            [
                "20 5\r\n6 3 8 0 0 2 7 5 7 1059 9 4 9 3457 1 3 8 988 6 8\r\n1 4 2 3 2 2 4 1 1 5 1 5 1 3 1 5 2 5 3 4\r\n10\r\n3\r\n11\r\n12\r\n19\r\n18\r\n10\r\n17\r\n13\r\n8\r\n14\r\n",
                "5\r\n5\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n"
            ]
        ]
    }
]