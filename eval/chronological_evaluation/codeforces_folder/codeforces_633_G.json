[
    {
        "name": "Yash And Trees",
        "description": "Yash loves playing with trees and gets especially excited when they have\nsomething to do with prime numbers. On his 20th birthday he was granted with a\nrooted tree of n nodes to answer queries on. Hearing of prime numbers on\ntrees, Yash gets too intoxicated with excitement and asks you to help out and\nanswer queries on trees for him. Tree is rooted at node 1. Each node i has\nsome value ai associated with it. Also, integer m is given. There are queries\nof two types: for given node v and integer value x, increase all ai in the\nsubtree of node v by value x for given node v, find the number of prime\nnumbers p less than m, for which there exists a node u in the subtree of v and\na non-negative integer value k, such that au = p + m\u00b7k. Input The first of the\ninput contains two integers n and m (1 \u2264 n \u2264 100 000, 1 \u2264 m \u2264 1000) \u2014 the\nnumber of nodes in the tree and value m from the problem statement,\nrespectively. The second line consists of n integers ai (0 \u2264 ai \u2264 10^9) \u2014\ninitial values of the nodes. Then follow n - 1 lines that describe the tree.\nEach of them contains two integers ui and vi (1 \u2264 ui, vi \u2264 n) \u2014 indices of\nnodes connected by the i-th edge. Next line contains a single integer q (1 \u2264 q\n\u2264 100 000) \u2014 the number of queries to proceed. Each of the last q lines is\neither 1 v x or 2 v (1 \u2264 v \u2264 n, 0 \u2264 x \u2264 10^9), giving the query of the first\nor the second type, respectively. It's guaranteed that there will be at least\none query of the second type. Output For each of the queries of the second\ntype print the number of suitable prime numbers. Examples Input 8 20 3 7 9 8 4\n11 7 3 1 2 1 3 3 4 4 5 4 6 4 7 5 8 4 2 1 1 1 1 2 5 2 4 Output 3 1 1 Input 5 10\n8 7 5 1 0 1 2 2 3 1 5 2 4 3 1 1 0 1 1 2 2 2 Output 2\n\n",
        "cf_contest_id": 633,
        "cf_index": "G",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "data structures",
            "dfs and similar",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "8 20\r\n3 7 9 8 4 11 7 3\r\n1 2\r\n1 3\r\n3 4\r\n4 5\r\n4 6\r\n4 7\r\n5 8\r\n4\r\n2 1\r\n1 1 1\r\n2 5\r\n2 4\r\n",
                "3\r\n1\r\n1\r\n"
            ],
            [
                "5 10\r\n8 7 5 1 0\r\n1 2\r\n2 3\r\n1 5\r\n2 4\r\n3\r\n1 1 0\r\n1 1 2\r\n2 2\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 7\r\n11 1 2 3 4\r\n1 2\r\n1 3\r\n3 4\r\n3 5\r\n1\r\n2 1\r\n",
                "2\r\n"
            ]
        ]
    }
]