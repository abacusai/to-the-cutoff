[
    {
        "name": "Party",
        "description": "To celebrate the second ABBYY Cup tournament, the Smart Beaver decided to\nthrow a party. The Beaver has a lot of acquaintances, some of them are friends\nwith each other, and some of them dislike each other. To make party\nsuccessful, the Smart Beaver wants to invite only those of his friends who are\nconnected by friendship relations, and not to invite those who dislike each\nother. Both friendship and dislike are mutual feelings. More formally, for\neach invited person the following conditions should be fulfilled: all his\nfriends should also be invited to the party; the party shouldn't have any\npeople he dislikes; all people who are invited to the party should be\nconnected with him by friendship either directly or through a chain of common\nfriends of arbitrary length. We'll say that people a1 and ap are connected\nthrough a chain of common friends if there exists a sequence of people a2, a3,\n..., ap - 1 such that all pairs of people ai and ai + 1 (1 \u2264 i < p) are\nfriends. Help the Beaver find the maximum number of acquaintances he can\ninvite. Input The first line of input contains an integer n \u2014 the number of\nthe Beaver's acquaintances. The second line contains an integer k \u2014 the number\nof pairs of friends. Next k lines contain space-separated pairs of integers\nui, vi \u2014 indices of people who form the i-th pair of friends. The next line\ncontains an integer m \u2014 the number of pairs of people who dislike each other.\nNext m lines describe pairs of people who dislike each other in the same\nformat as the pairs of friends were described. Each pair of people is\nmentioned in the input at most once . In particular, two persons cannot be\nfriends and dislike each other at the same time. The input limitations for\ngetting 30 points are: 2 \u2264 n \u2264 14 The input limitations for getting 100 points\nare: 2 \u2264 n \u2264 2000 Output Output a single number \u2014 the maximum number of people\nthat can be invited to the party. If a group of people that meets all the\nrequirements is impossible to select, output 0. Examples Input 9 8 1 2 1 3 2 3\n4 5 6 7 7 8 8 9 9 6 2 1 6 7 9 Output 3 Note Let's have a look at the example.\nTwo groups of people can be invited: 1, 2, 3 and 4, 5, thus the answer\nwill be the size of the largest of these groups. Group 6, 7, 8, 9 doesn't\nfit, since it includes people 7 and 9 who dislike each other. Group 1, 2, 3,\n4, 5 also doesn't fit, because not all of its members are connected by a\nchain of common friends (for example, people 2 and 5 aren't connected).\n\n",
        "cf_contest_id": 177,
        "cf_index": "C2",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9\r\n8\r\n1 2\r\n1 3\r\n2 3\r\n4 5\r\n6 7\r\n7 8\r\n8 9\r\n9 6\r\n2\r\n1 6\r\n7 9\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1\r\n1 2\r\n0\r\n",
                "2\r\n"
            ],
            [
                "2\r\n0\r\n1\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "3\r\n2\r\n1 2\r\n1 3\r\n1\r\n2 3\r\n",
                "0\r\n"
            ],
            [
                "3\r\n3\r\n1 3\r\n2 1\r\n2 3\r\n0\r\n",
                "3\r\n"
            ],
            [
                "4\r\n3\r\n1 2\r\n2 3\r\n3 1\r\n3\r\n1 4\r\n4 2\r\n3 4\r\n",
                "3\r\n"
            ],
            [
                "7\r\n8\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 4\r\n2 5\r\n3 4\r\n5 6\r\n3\r\n2 6\r\n5 7\r\n6 7\r\n",
                "1\r\n"
            ],
            [
                "14\r\n20\r\n1 2\r\n4 5\r\n4 6\r\n4 11\r\n5 7\r\n5 8\r\n5 13\r\n5 14\r\n7 8\r\n7 14\r\n8 9\r\n8 11\r\n8 12\r\n8 14\r\n10 11\r\n10 12\r\n10 14\r\n11 13\r\n11 14\r\n12 14\r\n5\r\n1 8\r\n1 13\r\n2 10\r\n7 12\r\n8 10\r\n",
                "2\r\n"
            ],
            [
                "2\r\n0\r\n0\r\n",
                "1\r\n"
            ],
            [
                "14\r\n0\r\n0\r\n",
                "1\r\n"
            ],
            [
                "14\r\n6\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n8 9\r\n9 10\r\n3\r\n5 6\r\n6 7\r\n7 8\r\n",
                "5\r\n"
            ],
            [
                "14\r\n10\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n1 7\r\n2 3\r\n2 4\r\n2 5\r\n2 6\r\n1\r\n2 7\r\n",
                "1\r\n"
            ],
            [
                "2\r\n0\r\n1\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "13\r\n78\r\n11 1\r\n10 6\r\n6 2\r\n10 1\r\n11 6\r\n11 3\r\n5 3\r\n8 1\r\n12 11\r\n4 2\r\n10 3\r\n13 8\r\n9 8\r\n11 7\r\n7 5\r\n11 2\r\n7 1\r\n4 1\r\n11 10\r\n8 3\r\n13 11\r\n9 6\r\n13 9\r\n12 7\r\n12 8\r\n12 9\r\n10 2\r\n5 2\r\n12 10\r\n9 2\r\n9 7\r\n3 2\r\n7 4\r\n11 4\r\n13 1\r\n10 5\r\n11 5\r\n8 5\r\n10 4\r\n8 2\r\n10 9\r\n4 3\r\n9 5\r\n13 12\r\n13 5\r\n7 2\r\n12 4\r\n9 1\r\n10 8\r\n6 3\r\n6 4\r\n7 6\r\n7 3\r\n12 3\r\n5 4\r\n6 1\r\n12 5\r\n8 4\r\n13 3\r\n12 1\r\n9 3\r\n8 6\r\n11 9\r\n9 4\r\n8 7\r\n12 6\r\n5 1\r\n13 10\r\n13 6\r\n10 7\r\n13 4\r\n13 7\r\n13 2\r\n2 1\r\n6 5\r\n12 2\r\n11 8\r\n3 1\r\n0\r\n",
                "13\r\n"
            ],
            [
                "13\r\n0\r\n78\r\n11 8\r\n8 4\r\n13 9\r\n6 1\r\n10 5\r\n5 1\r\n9 8\r\n11 3\r\n13 12\r\n6 2\r\n10 9\r\n9 1\r\n10 3\r\n13 6\r\n8 1\r\n11 10\r\n11 1\r\n11 9\r\n12 4\r\n12 11\r\n11 4\r\n8 6\r\n9 6\r\n13 10\r\n13 8\r\n7 2\r\n8 3\r\n10 1\r\n12 10\r\n6 5\r\n8 2\r\n5 4\r\n9 2\r\n13 1\r\n4 1\r\n13 2\r\n12 5\r\n10 7\r\n7 4\r\n8 5\r\n12 6\r\n4 3\r\n13 3\r\n12 2\r\n9 3\r\n11 7\r\n7 3\r\n2 1\r\n10 2\r\n13 7\r\n7 5\r\n13 4\r\n12 7\r\n4 2\r\n12 9\r\n11 5\r\n10 8\r\n11 2\r\n12 3\r\n3 1\r\n7 6\r\n10 6\r\n12 1\r\n10 4\r\n5 2\r\n9 4\r\n11 6\r\n9 7\r\n5 3\r\n7 1\r\n8 7\r\n6 3\r\n13 5\r\n12 8\r\n6 4\r\n13 11\r\n9 5\r\n3 2\r\n",
                "1\r\n"
            ]
        ]
    }
]