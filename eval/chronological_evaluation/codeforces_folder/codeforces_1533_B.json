[
    {
        "name": "Nearest Point Function",
        "description": "Your friend has created a nearest point function. For a given array of integer\npoints \n    x\n (sorted in ascending order, without any duplicates) and a point\n\n    y\n it can find the nearest point from \n    x\n to the point \n    y\n. In\nother words, it will find such a point \n    x_i\n that \n    |y - x_i|\n is the\nminimum possible, where \n    |a|\n is the absolute value of \n    a\n. For\nexample, if \n    x = [1, 2, 5, 7, 9, 11]\n, the answer for \n    y=3\n will be\n\n    2\n, the answer for \n    y=5\n will be \n    5\n and the answer for\n\n    y=100\n will be \n    11\n. This function is a bit buggy, though. If there\nare several nearest points to the given one, the function crashes. For\nexample, if \n    x = [1, 2, 5, 7, 9, 11]\n (as above) and \n    y=6\n, the\nfunction will crash, since points \n    5\n and \n    7\n are both the nearest\npoints for \n    6\n. Your task is, for a given array of integer points \n    x\n\n(sorted in ascending order, without any duplicates), determine if it is\npossible to cause the function to crash by choosing some integer point\n\n    y\n. You have to answer \n    t\n independent test cases. Input The first\nline of the input contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014\nthe number of test cases. The first line of the test case contains one integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of points in the\narray \n    x\n. The second line of the test case contains \n    n\n integers\n\n    x_1, x_2, \n    \u2026, x_n\n (\n    1 \n    \u2264 x_i \n    \u2264 10^9\n), where \n    x_i\n\nis the \n    i\n-th point in the array \n    x\n. All points in the array \n    x\n\nare distinct, and the array \n    x\n is sorted in ascending order (in other\nwords, \n    x_1 < x_2 < \n    \u2026 < x_n\n). The sum of \n    n\n over the test\ncases in the input does not exceed \n    2 \n    \u00b7 10^5\n (\n    \u2211 n \n    \u2264 2\n    \n    \u00b7 10^5\n). Output For each test case, print YES if it is possible to\nfind some integer point \n    y\n that will crash the function and NO otherwise.\nExample Input 7 2 1 3 2 1 100 3 1 50 101 2 1 1000000000 2 1 999999999 6 1 2 5\n7 9 11 6 1 2 5 8 9 12 Output YES NO NO NO YES YES NO Note In the first test\ncase of the example, the function crashes if \n    y = 2\n is chosen. In the\nfifth test case of the example, the function crashes if \n    y = 500000000\n is\nchosen. In the sixth test case of the example, the function crashes if \n    y =\n    10\n is chosen.\n\n",
        "cf_contest_id": 1533,
        "cf_index": "B",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n2\r\n1 3\r\n2\r\n1 100\r\n3\r\n1 50 101\r\n2\r\n1 1000000000\r\n2\r\n1 999999999\r\n6\r\n1 2 5 7 9 11\r\n6\r\n1 2 5 8 9 12\r\n",
                "YES\r\nNO\r\nNO\r\nNO\r\nYES\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": []
    }
]