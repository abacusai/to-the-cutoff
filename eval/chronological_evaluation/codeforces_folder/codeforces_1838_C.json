[
    {
        "name": "No Prime Differences",
        "description": "You are given integers \n    n\n and \n    m\n. Fill an \n    n\n by \n    m\n grid\nwith the integers \n    1\n through \n    n\n    \u00b7 m\n, in such a way that for any\ntwo adjacent cells in the grid, the absolute difference of the values in those\ncells is not a prime number. Two cells in the grid are considered adjacent if\nthey share a side. It can be shown that under the given constraints, there is\nalways a solution. Input The first line of the input contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The\ndescription of the test cases follows. The first and only line of each test\ncase contains two integers \n    n\n and \n    m\n (\n    4 \n    \u2264 n, m \n    \u2264 1000\n)\n\u2014 the dimensions of the grid. It is guaranteed that the sum of \n    n\n    \u00b7\n    m\n over all test cases does not exceed \n    10^6\n. Output For each test\ncase, output \n    n\n lines of \n    m\n integers each, representing the final\ngrid. Every number from \n    1\n to \n    n\n    \u00b7 m\n should appear exactly once\nin the grid. The extra spaces and blank lines in the sample output below are\nonly present to make the output easier to read, and are not required. If there\nare multiple solutions, print any of them. Example Input 3 4 4 5 7 6 4 Output\n16 7 1 9 12 8 2 3 13 4 10 11 14 5 6 15 29 23 17 9 5 6 2 33 27 21 15 11 7 1 32\n31 25 19 20 16 10 26 30 24 18 14 8 4 35 34 28 22 13 12 3 2 3 7 11 8 9 1 10 17\n13 5 4 18 14 6 12 19 23 15 21 20 24 16 22 Note The first sample case\ncorresponds to the picture above. The only absolute differences between\nadjacent elements in this grid are \n    1\n, \n    4\n, \n    6\n, \n    8\n, and\n\n    9\n, none of which are prime.\n\n",
        "cf_contest_id": 1838,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4 4\r\n5 7\r\n6 4\r\n",
                "5 6 7 8\r\n13 14 15 16\r\n1 2 3 4\r\n9 10 11 12\r\n8 9 10 11 12 13 14\r\n22 23 24 25 26 27 28\r\n1 2 3 4 5 6 7\r\n15 16 17 18 19 20 21\r\n29 30 31 32 33 34 35\r\n5 6 7 8\r\n13 14 15 16\r\n21 22 23 24\r\n1 2 3 4\r\n9 10 11 12\r\n17 18 19 20\r\n"
            ]
        ],
        "private_cases": []
    }
]