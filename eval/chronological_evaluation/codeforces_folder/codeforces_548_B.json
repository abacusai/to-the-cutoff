[
    {
        "name": "Mike and Fun",
        "description": "Mike and some bears are playing a game just for fun. Mike is the judge. All\nbears except Mike are standing in an n \u00d7 m grid, there's exactly one bear in\neach cell. We denote the bear standing in column number j of row number i by\n(i, j). Mike's hands are on his ears (since he's the judge) and each bear\nstanding in the grid has hands either on his mouth or his eyes. They play for\nq rounds. In each round, Mike chooses a bear (i, j) and tells him to change\nhis state i. e. if his hands are on his mouth, then he'll put his hands on his\neyes or he'll put his hands on his mouth otherwise. After that, Mike wants to\nknow the score of the bears. Score of the bears is the maximum over all rows\nof number of consecutive bears with hands on their eyes in that row. Since\nbears are lazy, Mike asked you for help. For each round, tell him the score of\nthese bears after changing the state of a bear selected in that round. Input\nThe first line of input contains three integers n, m and q (1 \u2264 n, m \u2264 500 and\n1 \u2264 q \u2264 5000). The next n lines contain the grid description. There are m\nintegers separated by spaces in each line. Each of these numbers is either 0\n(for mouth) or 1 (for eyes). The next q lines contain the information about\nthe rounds. Each of them contains two integers i and j (1 \u2264 i \u2264 n and 1 \u2264 j \u2264\nm), the row number and the column number of the bear changing his state.\nOutput After each round, print the current score of the bears. Examples Input\n5 4 5 0 1 1 0 1 0 0 1 0 1 1 0 1 0 0 1 0 0 0 0 1 1 1 4 1 1 4 2 4 3 Output 3 4 3\n3 4\n\n",
        "cf_contest_id": 548,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4 5\r\n0 1 1 0\r\n1 0 0 1\r\n0 1 1 0\r\n1 0 0 1\r\n0 0 0 0\r\n1 1\r\n1 4\r\n1 1\r\n4 2\r\n4 3\r\n",
                "3\r\n4\r\n3\r\n3\r\n4\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2 10\r\n1 1\r\n0 1\r\n1 1\r\n2 1\r\n1 1\r\n2 2\r\n1 1\r\n2 1\r\n2 2\r\n2 2\r\n1 1\r\n1 1\r\n",
                "1\r\n2\r\n2\r\n2\r\n1\r\n1\r\n1\r\n1\r\n2\r\n1\r\n"
            ],
            [
                "2 2 10\r\n1 1\r\n0 1\r\n2 2\r\n2 2\r\n1 1\r\n2 1\r\n2 1\r\n1 1\r\n1 1\r\n2 1\r\n1 1\r\n2 1\r\n",
                "2\r\n2\r\n1\r\n2\r\n1\r\n2\r\n1\r\n2\r\n2\r\n2\r\n"
            ],
            [
                "5 5 30\r\n0 1 1 1 0\r\n1 1 0 1 1\r\n0 1 1 1 1\r\n0 0 1 1 0\r\n0 0 0 0 0\r\n3 2\r\n2 2\r\n2 2\r\n4 3\r\n1 4\r\n3 2\r\n4 1\r\n2 4\r\n1 4\r\n2 1\r\n5 2\r\n4 1\r\n4 1\r\n5 1\r\n2 4\r\n2 4\r\n4 4\r\n1 2\r\n3 1\r\n4 5\r\n1 2\r\n2 3\r\n1 1\r\n5 1\r\n3 4\r\n1 1\r\n5 4\r\n1 5\r\n5 4\r\n2 2\r\n",
                "3\r\n3\r\n3\r\n3\r\n3\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n5\r\n5\r\n5\r\n5\r\n5\r\n5\r\n4\r\n3\r\n3\r\n4\r\n4\r\n4\r\n"
            ],
            [
                "1 1 10\r\n0\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n"
            ],
            [
                "1 1 3\r\n1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "0\r\n1\r\n0\r\n"
            ],
            [
                "1 5 5\r\n0 0 0 0 0\r\n1 2\r\n1 1\r\n1 4\r\n1 5\r\n1 3\r\n",
                "1\r\n2\r\n2\r\n2\r\n5\r\n"
            ],
            [
                "5 1 5\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1 1\r\n2 1\r\n3 1\r\n4 1\r\n5 1\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "1 1 1\r\n0\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "2 2 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "2\r\n"
            ]
        ]
    }
]