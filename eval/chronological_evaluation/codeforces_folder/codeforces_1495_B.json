[
    {
        "name": "Let's Go Hiking",
        "description": "On a weekend, Qingshan suggests that she and her friend Daniel go hiking.\nUnfortunately, they are busy high school students, so they can only go hiking\non scratch paper. A permutation \n    p\n is written from left to right on the\npaper. First Qingshan chooses an integer index \n    x\n (\n    1\n    \u2264 x\n    \u2264 n\n)\nand tells it to Daniel. After that, Daniel chooses another integer index\n\n    y\n (\n    1\n    \u2264 y\n    \u2264 n\n, \n    y \n     x\n). The game progresses turn by\nturn and as usual, Qingshan moves first. The rules follow: If it is Qingshan's\nturn, Qingshan must change \n    x\n to such an index \n    x'\n that \n    1\n    \u2264\n    x'\n    \u2264 n\n, \n    |x'-x|=1\n, \n    x'\n     y\n, and \n    p_x'p_y\n at the same\ntime. The person who can't make her or his move loses, and the other wins.\nYou, as Qingshan's fan, are asked to calculate the number of possible \n    x\n\nto make Qingshan win in the case both players play optimally. Input The first\nline contains a single integer \n    n\n (\n    2\n    \u2264 n\n    \u2264 10^5\n) \u2014 the length\nof the permutation. The second line contains \n    n\n distinct integers\n\n    p_1,p_2,\n    \u2026,p_n\n (\n    1\n    \u2264 p_i\n    \u2264 n\n) \u2014 the permutation. Output\nPrint the number of possible values of \n    x\n that Qingshan can choose to\nmake her win. Examples Input 5 1 2 5 4 3 Output 1 Input 7 1 2 4 6 5 3 7 Output\n0 Note In the first test case, Qingshan can only choose \n    x=3\n to win, so\nthe answer is \n    1\n. In the second test case, if Qingshan will choose\n\n    x=4\n, Daniel can choose \n    y=1\n. In the first turn (Qingshan's)\nQingshan chooses \n    x'=3\n and changes \n    x\n to \n    3\n. In the second turn\n(Daniel's) Daniel chooses \n    y'=2\n and changes \n    y\n to \n    2\n. Qingshan\ncan't choose \n    x'=2\n because \n    y=2\n at this time. Then Qingshan loses.\n\n",
        "cf_contest_id": 1495,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2 5 4 3\r\n",
                "1\r\n"
            ],
            [
                "7\r\n1 2 4 6 5 3 7\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n2 5 7 3 1 4 6\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "0\r\n"
            ],
            [
                "7\r\n7 3 5 6 4 2 1\r\n",
                "0\r\n"
            ],
            [
                "50\r\n3 10 13 26 31 27 22 20 9 8 33 30 12 21 16 7 17 11 6 24 14 5 19 25 29 36 37 40 41 44 45 46 47 48 49 50 43 42 39 38 35 34 32 28 23 18 15 4 2 1\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 3 2\r\n",
                "0\r\n"
            ],
            [
                "3\r\n1 2 3\r\n",
                "0\r\n"
            ],
            [
                "9\r\n1 2 3 5 4 8 9 7 6\r\n",
                "0\r\n"
            ],
            [
                "9\r\n6 7 9 8 4 5 3 2 1\r\n",
                "0\r\n"
            ],
            [
                "7\r\n6 4 1 3 7 5 2\r\n",
                "0\r\n"
            ],
            [
                "9\r\n9 8 2 5 7 3 1 4 6\r\n",
                "0\r\n"
            ],
            [
                "9\r\n1 2 8 5 3 7 9 6 4\r\n",
                "0\r\n"
            ],
            [
                "5\r\n1 2 4 3 5\r\n",
                "0\r\n"
            ],
            [
                "5\r\n5 3 4 2 1\r\n",
                "0\r\n"
            ],
            [
                "15\r\n13 9 5 1 2 3 12 15 14 7 6 4 8 10 11\r\n",
                "1\r\n"
            ],
            [
                "9\r\n9 5 3 2 1 4 6 7 8\r\n",
                "0\r\n"
            ],
            [
                "11\r\n5 6 9 8 1 2 3 11 10 7 4\r\n",
                "0\r\n"
            ],
            [
                "11\r\n4 9 11 8 3 7 2 6 10 5 1\r\n",
                "0\r\n"
            ],
            [
                "7\r\n1 7 2 3 6 5 4\r\n",
                "1\r\n"
            ],
            [
                "4\r\n1 4 3 2\r\n",
                "0\r\n"
            ],
            [
                "11\r\n9 10 11 6 3 5 4 7 8 2 1\r\n",
                "0\r\n"
            ],
            [
                "40\r\n5 29 12 16 25 36 18 37 27 32 34 40 20 3 1 24 26 19 33 9 6 22 8 13 15 21 28 7 11 2 31 39 14 38 4 17 30 35 10 23\r\n",
                "0\r\n"
            ],
            [
                "9\r\n3 4 5 6 7 8 9 2 1\r\n",
                "0\r\n"
            ],
            [
                "7\r\n1 2 7 6 5 4 3\r\n",
                "0\r\n"
            ],
            [
                "8\r\n1 2 3 8 7 6 5 4\r\n",
                "0\r\n"
            ],
            [
                "17\r\n3 1 2 15 16 7 6 5 4 8 9 14 17 13 12 11 10\r\n",
                "0\r\n"
            ]
        ]
    }
]