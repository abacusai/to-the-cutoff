[
    {
        "name": "Buses and People",
        "description": "The main Bertown street is represented by a straight line. There are 10^9 bus\nstops located on the line. The stops are numbered with integers from 1 to 10^9\nin the order in which they follow on the road. The city has n buses. Every day\nthe i-th bus drives from stop number si to stop number fi (si < fi), it stops\non all intermediate stops and returns only at night. The bus starts driving at\ntime ti and drives so fast that it finishes driving also at time ti. The time\nti is different for all buses. The buses have infinite capacity. Bertown has m\ncitizens. Today the i-th person should get from stop number li to stop number\nri (li < ri); the i-th citizen comes to his initial stop (li) at time bi. Each\nperson, on the one hand, wants to get to the destination point as quickly as\npossible, and on the other hand, definitely does not want to change the buses\nas he rides. More formally: the i-th person chooses bus j, with minimum time\ntj, such that sj \u2264 li, ri \u2264 fj and bi \u2264 tj. Your task is to determine for each\ncitizen whether he can ride to the destination point today and if he can, find\nthe number of the bus on which the citizen will ride. Input The first line\ncontains two integers n and m (1 \u2264 n, m \u2264 10^5) \u2014 the number of buses and the\nnumber of people. Then n lines follow, each of them contains three integers:\nsi, fi, ti (1 \u2264 si, fi, ti \u2264 10^9, si < fi) \u2014 the description of the buses. It\nis guaranteed that all ti-s are different. Then m lines follow, each of them\ncontains three integers: li, ri, bi (1 \u2264 li, ri, bi \u2264 10^9, li < ri) \u2014 the\nBertown citizens' description. Some bi-s could coincide. Output In the first\nline print m space-separated integers: the i-th number should be equal either\nto -1, if the person number i can't get to the destination point, or to the\nnumber of the bus that will ride the person number i. The buses are numbered\nwith integers from 1 to n in the input order. Examples Input 4 3 1 10 10 5 6 2\n6 7 3 5 7 4 5 7 1 1 2 1 1 10 11 Output 4 1 -1 Input 1 1 1 1000000000\n1000000000 1 1000000000 1000000000 Output 1\n\n",
        "cf_contest_id": 160,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3\r\n1 10 10\r\n5 6 2\r\n6 7 3\r\n5 7 4\r\n5 7 1\r\n1 2 1\r\n1 10 11\r\n",
                "4 1 -1 "
            ],
            [
                "1 1\r\n1 1000000000 1000000000\r\n1 1000000000 1000000000\r\n",
                "1 "
            ]
        ],
        "private_cases": [
            [
                "10 10\r\n2 5 986214363\r\n1 2 781201673\r\n1 5 644142615\r\n1 3 763531510\r\n3 5 820385107\r\n2 3 895170353\r\n2 3 359397940\r\n1 3 373910642\r\n2 3 493218144\r\n1 2 616153357\r\n1 3 3\r\n2 5 781201673\r\n3 4 1\r\n2 3 1\r\n3 4 4\r\n3 5 359397940\r\n1 2 5\r\n2 5 493218144\r\n2 3 493218144\r\n1 3 1\r\n",
                "8 1 3 7 3 3 8 3 9 8 "
            ],
            [
                "11 5\r\n4 6 962055261\r\n2 5 445969446\r\n2 3 71438646\r\n4 5 426207769\r\n1 2 295201402\r\n5 6 50680021\r\n4 6 796548188\r\n2 6 829499359\r\n2 3 894548233\r\n4 6 555826002\r\n1 4 743203615\r\n2 4 2\r\n4 6 2\r\n3 4 445969446\r\n1 4 2\r\n1 5 6\r\n",
                "2 10 2 11 -1 "
            ],
            [
                "5 11\r\n3 4 844265341\r\n2 4 654427741\r\n2 5 91148924\r\n5 6 853092965\r\n2 5 783210631\r\n4 5 91148924\r\n4 6 3\r\n4 5 2\r\n1 5 783210631\r\n2 3 3\r\n2 7 4\r\n1 4 2\r\n6 7 7\r\n3 7 654427741\r\n2 4 91148924\r\n5 6 654427741\r\n",
                "3 -1 3 -1 3 -1 -1 -1 -1 3 4 "
            ],
            [
                "20 12\r\n5 8 290485158\r\n5 7 59134808\r\n4 8 386488105\r\n3 5 523343770\r\n3 7 38594219\r\n1 8 961031284\r\n1 3 915857973\r\n2 5 114096715\r\n5 8 393418328\r\n1 3 944637002\r\n4 8 228321614\r\n2 6 863451725\r\n1 2 321556955\r\n3 4 178010464\r\n2 8 623913520\r\n2 6 33459183\r\n4 5 786606429\r\n4 7 432068681\r\n3 7 540770771\r\n5 8 637858645\r\n6 7 2\r\n1 3 290485158\r\n1 6 7\r\n1 5 7\r\n4 8 3\r\n2 7 915857973\r\n3 7 2\r\n1 6 228321614\r\n2 3 2\r\n2 8 2\r\n4 5 786606429\r\n4 6 321556955\r\n",
                "5 7 6 6 11 6 5 6 16 15 17 3 "
            ],
            [
                "3 3\r\n500 50000000 1000000000\r\n500 1000000000 999999999\r\n500 50000000 999999998\r\n1 1000000000 999999998\r\n500 501 999999999\r\n999999999 1000000000 999999999\r\n",
                "-1 2 2 "
            ],
            [
                "3 3\r\n500 50000000 1000000000\r\n500 1000000000 999999999\r\n500 50000000 999999998\r\n1 1000000000 1000000000\r\n500 501 1000000000\r\n999999999 1000000000 1000000000\r\n",
                "-1 1 -1 "
            ]
        ]
    }
]