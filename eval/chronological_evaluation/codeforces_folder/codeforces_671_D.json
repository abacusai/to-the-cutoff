[
    {
        "name": "Roads in Yusland",
        "description": "Mayor of Yusland just won the lottery and decided to spent money on something\ngood for town. For example, repair all the roads in the town. Yusland consists\nof n intersections connected by n - 1 bidirectional roads. One can travel from\nany intersection to any other intersection using only these roads. There is\nonly one road repairing company in town, named \"RC company\". Company's center\nis located at the intersection 1. RC company doesn't repair roads you tell\nthem. Instead, they have workers at some intersections, who can repair only\nsome specific paths. The i-th worker can be paid ci coins and then he repairs\nall roads on a path from ui to some vi that lies on the path from ui to\nintersection 1. Mayor asks you to choose the cheapest way to hire some subset\nof workers in order to repair all the roads in Yusland. It's allowed that some\nroads will be repaired more than once. If it's impossible to repair all roads\nprint - 1. Input The first line of the input contains two integers n and m (1\n\u2264 n, m \u2264 300 000) \u2014 the number of cities in Yusland and the number of workers\nrespectively. Then follow n\u22121 line, each of them contains two integers xi and\nyi (1 \u2264 xi, yi \u2264 n) \u2014 indices of intersections connected by the i-th road.\nLast m lines provide the description of workers, each line containing three\nintegers ui, vi and ci (1 \u2264 ui, vi \u2264 n, 1 \u2264 ci \u2264 10^9). This means that the\ni-th worker can repair all roads on the path from vi to ui for ci coins. It's\nguaranteed that vi lies on the path from ui to 1. Note that vi and ui may\ncoincide. Output If it's impossible to repair all roads then print - 1.\nOtherwise print a single integer \u2014 minimum cost required to repair all roads\nusing \"RC company\" workers. Example Input 6 5 1 2 1 3 3 4 4 5 4 6 2 1 2 3 1 4\n4 1 3 5 3 1 6 3 2 Output 8 Note In the first sample, we should choose workers\nwith indices 1, 3, 4 and 5, some roads will be repaired more than once but it\nis OK. The cost will be equal to 2 + 3 + 1 + 2 = 8 coins.\n\n",
        "cf_contest_id": 671,
        "cf_index": "D",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 5\r\n1 2\r\n1 3\r\n3 4\r\n4 5\r\n4 6\r\n2 1 2\r\n3 1 4\r\n4 1 3\r\n5 3 1\r\n6 3 2\r\n",
                "8"
            ]
        ],
        "private_cases": [
            [
                "10 20\r\n4 8\r\n6 7\r\n4 10\r\n9 4\r\n8 1\r\n3 1\r\n5 10\r\n7 10\r\n6 2\r\n2 7 9\r\n10 4 1\r\n10 4 4\r\n3 1 8\r\n7 8 3\r\n7 1 9\r\n2 4 2\r\n6 4 9\r\n4 1 9\r\n4 1 1\r\n4 1 9\r\n1 1 6\r\n6 8 7\r\n4 1 4\r\n5 10 5\r\n8 1 3\r\n5 10 6\r\n4 8 9\r\n3 1 4\r\n9 1 7\r\n",
                "18"
            ],
            [
                "10 15\r\n2 5\r\n1 7\r\n5 3\r\n4 8\r\n2 9\r\n5 6\r\n1 10\r\n1 4\r\n9 4\r\n7 1 3\r\n1 1 1\r\n7 1 6\r\n2 1 9\r\n5 4 9\r\n6 9 4\r\n4 1 2\r\n10 1 1\r\n10 1 9\r\n7 1 7\r\n3 4 6\r\n3 1 10\r\n1 1 8\r\n8 1 5\r\n7 1 1\r\n",
                "17"
            ],
            [
                "10 7\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n9 10\r\n2 1 5\r\n2 1 100\r\n4 2 2\r\n3 2 1\r\n6 3 7\r\n10 4 9\r\n10 6 5\r\n",
                "16"
            ],
            [
                "5 15\r\n1 5\r\n3 2\r\n5 2\r\n4 3\r\n4 5 12\r\n4 2 11\r\n5 1 16\r\n2 1 14\r\n3 5 9\r\n2 1 6\r\n3 1 11\r\n5 1 5\r\n4 1 12\r\n2 1 1\r\n5 1 9\r\n3 5 16\r\n4 1 5\r\n2 1 10\r\n1 1 13\r\n",
                "5"
            ],
            [
                "1 1\r\n1 1 1\r\n",
                "0"
            ],
            [
                "2 1\r\n1 2\r\n1 1 1\r\n",
                "-1"
            ],
            [
                "2 1\r\n1 2\r\n2 2 1\r\n",
                "-1"
            ],
            [
                "3 3\r\n1 2\r\n1 3\r\n1 1 1\r\n2 2 1\r\n3 3 1\r\n",
                "-1"
            ],
            [
                "4 4\r\n1 2\r\n1 3\r\n3 4\r\n4 1 5\r\n3 1 2\r\n4 3 2\r\n2 1 1\r\n",
                "5"
            ],
            [
                "7 5\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n5 1 3\r\n2 1 1\r\n6 2 4\r\n7 4 3\r\n7 6 2\r\n",
                "6"
            ]
        ]
    }
]