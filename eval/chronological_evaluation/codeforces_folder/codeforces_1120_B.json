[
    {
        "name": "Once in a casino",
        "description": "One player came to a casino and found a slot machine where everything depends\nonly on how he plays. The rules follow. A positive integer \n    a\n is\ninitially on the screen. The player can put a coin into the machine and then\nadd \n    1\n to or subtract \n    1\n from any two adjacent digits. All digits\nmust remain from \n    0\n to \n    9\n after this operation, and the leading\ndigit must not equal zero. In other words, it is forbidden to add \n    1\n to\n\n    9\n, to subtract \n    1\n from \n    0\n and to subtract \n    1\n from the\nleading \n    1\n. Once the number on the screen becomes equal to \n    b\n, the\nplayer wins the jackpot. \n    a\n and \n    b\n have the same number of digits.\nHelp the player to determine the minimal number of coins he needs to spend in\norder to win the jackpot and tell how to play. Input The first line contains a\nsingle integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^5\n) standing for the length of\nnumbers \n    a\n and \n    b\n. The next two lines contain numbers \n    a\n and\n\n    b\n, each one on a separate line (\n    10^n-1\n    \u2264 a, b < 10^n\n).\nOutput If it is impossible to win the jackpot, print a single integer\n\n    -1\n. Otherwise, the first line must contain the minimal possible number\n\n    c\n of coins the player has to spend. \n    min(c, 10^5)\n lines should\nfollow, \n    i\n-th of them containing two integers \n    d_i\n and \n    s_i\n\n(\n    1\n    \u2264 d_i\n    \u2264 n - 1\n, \n    s_i = \n    \u00b1 1\n) denoting that on the\n\n    i\n-th step the player should add \n    s_i\n to the \n    d_i\n-th and\n\n    (d_i + 1)\n-st digits from the left (e. g. \n    d_i = 1\n means that two\nleading digits change while \n    d_i = n - 1\n means that there are two\ntrailing digits which change). Please notice that the answer may be very big\nand in case \n    c > 10^5\n you should print only the first \n    10^5\n moves.\nYour answer is considered correct if it is possible to finish your printed\nmoves to win the jackpot in the minimal possible number of coins. In\nparticular, if there are multiple ways to do this, you can output any of them.\nExamples Input 3 223 322 Output 2 1 1 2 -1 Input 2 20 42 Output 2 1 1 1 1\nInput 2 35 44 Output -1 Note In the first example, we can make a +1 operation\non the two first digits, transforming number \n    223\n into\n\n    333\n, and then make a -1 operation on the last two digits,\ntransforming \n    3\n    33\n into \n    3\n    22\n. It's also\npossible to do these operations in reverse order, which makes another correct\nanswer. In the last example, one can show that it's impossible to transform\n\n    35\n into \n    44\n.\n\n",
        "cf_contest_id": 1120,
        "cf_index": "B",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n223\r\n322\r\n",
                "2\r\n1 1\r\n2 -1\r\n"
            ],
            [
                "2\r\n20\r\n42\r\n",
                "2\r\n1 1\r\n1 1\r\n"
            ],
            [
                "2\r\n35\r\n44\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n99\r\n11\r\n",
                "8\r\n1 -1\r\n1 -1\r\n1 -1\r\n1 -1\r\n1 -1\r\n1 -1\r\n1 -1\r\n1 -1\r\n"
            ],
            [
                "2\r\n85\r\n96\r\n",
                "1\r\n1 1\r\n"
            ],
            [
                "2\r\n37\r\n97\r\n",
                "-1\r\n"
            ],
            [
                "28\r\n1467667189658578897086606309\r\n4558932538274887201553067079\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n7972\r\n7092\r\n",
                "-1\r\n"
            ],
            [
                "100\r\n8089764625697650091223132375349870611728630464931601901362210777083214671357960568717257055725808124\r\n9512358653418449264455421855641556162252709608519133283842896597058892151122487184664631033189307143\r\n",
                "-1\r\n"
            ],
            [
                "100\r\n9953193386677068656613259318876668712379728264442641118985565124997863365094967466749358773230804023\r\n8091280541105944531036832503933946712379728264442641118985565124997863365094967466749358285078040833\r\n",
                "-1\r\n"
            ],
            [
                "2\r\n28\r\n94\r\n",
                "-1\r\n"
            ],
            [
                "72\r\n965163527472953255338345764036476021934360945764464062344647103353749065\r\n372568474736462416171613673826141727582556693945162947273839050948355408\r\n",
                "-1\r\n"
            ],
            [
                "100\r\n2908390908193827080719193819090807182908181818190719252809190619181919190829170919080919291718191927\r\n2817182917394829094615163908183408282718051819180808290729591738291918272728373717180807070717070838\r\n",
                "-1\r\n"
            ]
        ]
    }
]