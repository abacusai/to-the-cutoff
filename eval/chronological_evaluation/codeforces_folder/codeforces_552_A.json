[
    {
        "name": "Vanya and Table",
        "description": "Vanya has a table consisting of 100 rows, each row contains 100 cells. The\nrows are numbered by integers from 1 to 100 from bottom to top, the columns\nare numbered from 1 to 100 from left to right. In this table, Vanya chose n\nrectangles with sides that go along borders of squares (some rectangles\nprobably occur multiple times). After that for each cell of the table he\ncounted the number of rectangles it belongs to and wrote this number into it.\nNow he wants to find the sum of values in all cells of the table and as the\ntable is too large, he asks you to help him find the result. Input The first\nline contains integer n (1 \u2264 n \u2264 100) \u2014 the number of rectangles. Each of the\nfollowing n lines contains four integers x1, y1, x2, y2 (1 \u2264 x1 \u2264 x2 \u2264 100, 1\n\u2264 y1 \u2264 y2 \u2264 100), where x1 and y1 are the number of the column and row of the\nlower left cell and x2 and y2 are the number of the column and row of the\nupper right cell of a rectangle. Output In a single line print the sum of all\nvalues in the cells of the table. Examples Input 2 1 1 2 3 2 2 3 3 Output 10\nInput 2 1 1 3 3 1 1 3 3 Output 18 Note Note to the first sample test: Values\nof the table in the first three rows and columns will be as follows: 121 121\n110 So, the sum of values will be equal to 10. Note to the second sample test:\nValues of the table in the first three rows and columns will be as follows:\n222 222 222 So, the sum of values will be equal to 18.\n\n",
        "cf_contest_id": 552,
        "cf_index": "A",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1 1 2 3\r\n2 2 3 3\r\n",
                "10\r\n"
            ],
            [
                "2\r\n1 1 3 3\r\n1 1 3 3\r\n",
                "18\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n4 11 20 15\r\n7 5 12 20\r\n10 8 16 12\r\n7 5 12 15\r\n2 2 20 13\r\n",
                "510\r\n"
            ],
            [
                "5\r\n4 11 20 20\r\n6 11 20 16\r\n5 2 19 15\r\n11 3 18 15\r\n3 2 14 11\r\n",
                "694\r\n"
            ],
            [
                "5\r\n1 1 1 100\r\n1 1 1 100\r\n1 1 1 100\r\n1 1 1 100\r\n1 1 1 100\r\n",
                "500\r\n"
            ],
            [
                "1\r\n1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n100 100 100 100\r\n",
                "1\r\n"
            ],
            [
                "1\r\n1 1 1 100\r\n",
                "100\r\n"
            ],
            [
                "3\r\n1 1 1 1\r\n1 2 1 2\r\n1 3 1 3\r\n",
                "3\r\n"
            ],
            [
                "1\r\n1 1 100 100\r\n",
                "10000\r\n"
            ]
        ]
    }
]