[
    {
        "name": "STL",
        "description": "Vasya used to be an accountant before the war began and he is one of the few\nwho knows how to operate a computer, so he was assigned as the programmer. We\nall know that programs often store sets of integers. For example, if we have a\nproblem about a weighted directed graph, its edge can be represented by three\nintegers: the number of the starting vertex, the number of the final vertex\nand the edge's weight. So, as Vasya was trying to represent characteristics of\na recently invented robot in his program, he faced the following problem.\nVasya is not a programmer, so he asked his friend Gena, what the convenient\nway to store n integers is. Gena used to code in language X\u2013 and so he can\nuse only the types that occur in this language. Let's define, what a \"type\" is\nin language X\u2013: First, a type is a string \"int\". Second, a type is a string\nthat starts with \"pair\", then followed by angle brackets listing exactly two\ncomma-separated other types of language X\u2013. This record contains no spaces.\nNo other strings can be regarded as types. More formally: type := int | pair.\nFor example, Gena uses the following type for graph edges: pair>. Gena was\npleased to help Vasya, he dictated to Vasya a type of language X\u2013, that\nstores n integers. Unfortunately, Gena was in a hurry, so he omitted the\npunctuation. Now Gena has already left and Vasya can't find the correct\npunctuation, resulting in a type of language X\u2013, however hard he tries. Help\nVasya and add the punctuation marks so as to receive the valid type of\nlanguage X\u2013. Otherwise say that the task is impossible to perform. Input The\nfirst line contains a single integer n (1 \u2264 n \u2264 10^5), showing how many\nnumbers the type dictated by Gena contains. The second line contains space-\nseparated words, said by Gena. Each of them is either \"pair\" or \"int\" (without\nthe quotes). It is guaranteed that the total number of words does not exceed\n10^5 and that among all the words that Gena said, there are exactly n words\n\"int\". Output If it is possible to add the punctuation marks so as to get a\ncorrect type of language X\u2013 as a result, print a single line that represents\nthe resulting type. Otherwise, print \"Error occurred\" (without the quotes).\nInside the record of a type should not be any extra spaces and other\ncharacters. It is guaranteed that if such type exists, then it is unique. Note\nthat you should print the type dictated by Gena (if such type exists) and not\nany type that can contain n values. Examples Input 3 pair pair int int int\nOutput pair,int> Input 1 pair int Output Error occurred\n\n",
        "cf_contest_id": 190,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\npair pair int int int\r\n",
                "pair<pair<int,int>,int>\r\n"
            ],
            [
                "1\r\npair int\r\n",
                "Error occurred\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\npair pair int int pair int int\r\n",
                "pair<pair<int,int>,pair<int,int>>\r\n"
            ],
            [
                "4\r\npair pair pair int int int int\r\n",
                "pair<pair<pair<int,int>,int>,int>\r\n"
            ],
            [
                "5\r\npair pair int pair int pair int int int\r\n",
                "pair<pair<int,pair<int,pair<int,int>>>,int>\r\n"
            ],
            [
                "2\r\nint int\r\n",
                "Error occurred\r\n"
            ],
            [
                "1\r\nint\r\n",
                "int\r\n"
            ],
            [
                "2\r\npair int int\r\n",
                "pair<int,int>\r\n"
            ],
            [
                "3\r\npair pair int int int\r\n",
                "pair<pair<int,int>,int>\r\n"
            ],
            [
                "5\r\npair pair pair pair int int int int int\r\n",
                "pair<pair<pair<pair<int,int>,int>,int>,int>\r\n"
            ],
            [
                "6\r\npair pair pair pair pair int int int int int int\r\n",
                "pair<pair<pair<pair<pair<int,int>,int>,int>,int>,int>\r\n"
            ],
            [
                "10\r\npair pair pair pair pair pair pair pair pair int int int int int int int int int int\r\n",
                "pair<pair<pair<pair<pair<pair<pair<pair<pair<int,int>,int>,int>,int>,int>,int>,int>,int>,int>\r\n"
            ],
            [
                "40\r\npair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair pair int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int\r\n",
                "pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<pair<int,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>,int>\r\n"
            ],
            [
                "9\r\npair pair pair int int pair pair pair int int pair int pair int int int pair int\r\n",
                "Error occurred\r\n"
            ],
            [
                "9\r\npair int int int pair pair int int int int int pair pair pair pair pair pair int\r\n",
                "Error occurred\r\n"
            ],
            [
                "9\r\npair pair int int int int pair int pair int pair pair pair pair int pair int int\r\n",
                "Error occurred\r\n"
            ],
            [
                "10\r\npair pair pair int pair int pair int int pair int int pair int int pair int pair int\r\n",
                "Error occurred\r\n"
            ],
            [
                "10\r\npair int pair int pair int pair int pair int pair int pair int pair int pair int int\r\n",
                "pair<int,pair<int,pair<int,pair<int,pair<int,pair<int,pair<int,pair<int,pair<int,int>>>>>>>>>\r\n"
            ],
            [
                "1\r\nint\r\n",
                "int\r\n"
            ],
            [
                "2\r\npair int int\r\n",
                "pair<int,int>\r\n"
            ],
            [
                "3\r\npair int pair int int\r\n",
                "pair<int,pair<int,int>>\r\n"
            ],
            [
                "10\r\npair pair int pair int int pair int pair int pair int pair pair int int pair int int\r\n",
                "pair<pair<int,pair<int,int>>,pair<int,pair<int,pair<int,pair<pair<int,int>,pair<int,int>>>>>>\r\n"
            ],
            [
                "10\r\npair pair pair int pair int pair pair pair pair pair int int int int int int int int\r\n",
                "pair<pair<pair<int,pair<int,pair<pair<pair<pair<pair<int,int>,int>,int>,int>,int>>>,int>,int>\r\n"
            ],
            [
                "10\r\npair int int int pair pair pair int int pair int pair int int int pair pair pair int\r\n",
                "Error occurred\r\n"
            ],
            [
                "3\r\npair int int int\r\n",
                "Error occurred\r\n"
            ],
            [
                "4\r\npair int int int int\r\n",
                "Error occurred\r\n"
            ],
            [
                "4\r\npair int pair int int int\r\n",
                "Error occurred\r\n"
            ],
            [
                "3\r\npair pair int int int\r\n",
                "pair<pair<int,int>,int>\r\n"
            ],
            [
                "4\r\npair pair int int int int\r\n",
                "Error occurred\r\n"
            ],
            [
                "1\r\npair int pair\r\n",
                "Error occurred\r\n"
            ],
            [
                "2\r\nint pair int\r\n",
                "Error occurred\r\n"
            ],
            [
                "1\r\nint pair pair\r\n",
                "Error occurred\r\n"
            ]
        ]
    }
]