[
    {
        "name": "Strange LCS",
        "description": "You are given \n    n\n strings \n    s_1, s_2, \n    \u2026, s_n\n, each consisting\nof lowercase and uppercase English letters. In addition, it's guaranteed that\neach character occurs in each string at most twice. Find the longest common\nsubsequence of these strings. A string \n    t\n is a subsequence of a string\n\n    s\n if \n    t\n can be obtained from \n    s\n by deletion of several\n(possibly, zero or all) symbols. Input Each test consists of multiple test\ncases. The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    5\n) \u2014 the number of test cases. Description of the test cases follows. The\nfirst line of each test case contains a single integer \n    n\n (\n    2 \n    \u2264 n\n    \n    \u2264 10\n) \u2014 the number of strings. Each of the next \n    n\n lines contains\nthe corresponding string \n    s_i\n. Each \n    s_i\n is non-empty, consists only\nof uppercase and lowercase English letters, and no character appears more than\ntwice in each string. Output For each test case print the answer in two lines:\nIn the first line print the length of the longest common subsequence. In the\nsecond line print the longest common subsequence. If there are multiple such\nsubsequences, print any of them. Example Input 4 2 ABC CBA 2 bacab defed 3\nabcde aBcDe ace 2 codeforces technocup Output 1 A 0 3 ace 3 coc Note In the\nfirst test case, the longest common subsequence is \"A\". There are no common\nsubsequences of length \n    2\n. In the second test case, sets of characters of\nstrings don't intersect, so any non-empty string can't be a common\nsubsequence.\n\n",
        "cf_contest_id": 1584,
        "cf_index": "F",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dp",
            "graphs",
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2\r\nABC\r\nCBA\r\n2\r\nbacab\r\ndefed\r\n3\r\nabcde\r\naBcDe\r\nace\r\n2\r\ncodeforces\r\ntechnocup\r\n",
                "1\r\nA\r\n0\r\n\r\n3\r\nace\r\n3\r\ncoc\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n3\r\nabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba\r\nzyxwvutsrqponmlkjihgfedcbaABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n3\r\nazAZ\r\naAzZ\r\naazz\r\n2\r\nZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba\r\nZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba\r\n2\r\nabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\r\nabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n",
                "1\r\na\r\n2\r\naz\r\n52\r\nZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjihgfedcba\r\n52\r\nabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n"
            ],
            [
                "5\r\n2\r\nAbacabA\r\nAbabA\r\n2\r\nyasya\r\naysay\r\n2\r\nabcdef\r\nbadcfe\r\n2\r\nabcdefghijklmnopqrstuvwxyz\r\nABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n2\r\nbeautiful\r\ntestcase\r\n",
                "5\r\nAbabA\r\n3\r\nyay\r\n3\r\nace\r\n0\r\n\r\n2\r\nea\r\n"
            ]
        ]
    }
]