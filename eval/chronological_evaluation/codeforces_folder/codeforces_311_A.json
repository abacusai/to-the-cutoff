[
    {
        "name": "The Closest Pair",
        "description": "Currently Tiny is learning Computational Geometry. When trying to solve a\nproblem called \"The Closest Pair Of Points In The Plane\", he found that a code\nwhich gave a wrong time complexity got Accepted instead of Time Limit\nExceeded. The problem is the follows. Given n points in the plane, find a pair\nof points between which the distance is minimized. Distance between (x1, y1)\nand (x2, y2) is . The pseudo code of the unexpected code is as follows: input\nn for i from 1 to n input the i-th point's coordinates into p[i] sort array\np[] by increasing of x coordinate first and increasing of y coordinate second\nd=INF //here INF is a number big enough tot=0 for i from 1 to n for j from\n(i+1) to n ++tot if (p[j].x-p[i].x>=d) then break //notice that \"break\" is\nonly to be //out of the loop \"for j\" d=min(d,distance(p[i],p[j])) output d\nHere, tot can be regarded as the running time of the code. Due to the fact\nthat a computer can only run a limited number of operations per second, tot\nshould not be more than k in order not to get Time Limit Exceeded. You are a\ngreat hacker. Would you please help Tiny generate a test data and let the code\nget Time Limit Exceeded? Input A single line which contains two space-\nseparated integers n and k (2 \u2264 n \u2264 2000, 1 \u2264 k \u2264 10^9). Output If there\ndoesn't exist such a data which let the given code get TLE, print \"no\nsolution\" (without quotes); else print n lines, and the i-th line contains two\nintegers xi, yi (|xi|, |yi| \u2264 10^9) representing the coordinates of the i-th\npoint. The conditions below must be held: All the points must be distinct.\n|xi|, |yi| \u2264 10^9. After running the given code, the value of tot should be\nlarger than k. Examples Input 4 3 Output 0 0 0 1 1 0 1 1 Input 2 100 Output no\nsolution\n\n",
        "cf_contest_id": 311,
        "cf_index": "A",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3\r\n",
                "0 0 0 1 0 2 0 3 "
            ],
            [
                "2 100\r\n",
                "no solution"
            ]
        ],
        "private_cases": [
            [
                "5 6\r\n",
                "0 0 0 1 0 2 0 3 0 4 "
            ],
            [
                "8 20\r\n",
                "0 0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 "
            ],
            [
                "6 15\r\n",
                "no solution"
            ],
            [
                "1808 505823289\r\n",
                "no solution"
            ],
            [
                "1850 507001807\r\n",
                "no solution"
            ],
            [
                "1892 948371814\r\n",
                "no solution"
            ],
            [
                "1788 94774524\r\n",
                "no solution"
            ],
            [
                "1947 944738707\r\n",
                "no solution"
            ],
            [
                "2000 1000000000\r\n",
                "no solution"
            ],
            [
                "2 1\r\n",
                "no solution"
            ],
            [
                "3 2\r\n",
                "0 0 0 1 0 2 "
            ],
            [
                "5 1\r\n",
                "0 0 0 1 0 2 0 3 0 4 "
            ]
        ]
    }
]