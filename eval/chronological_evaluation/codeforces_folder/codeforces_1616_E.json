[
    {
        "name": "Lexicographically Small Enough",
        "description": "You are given two strings \n    s\n and \n    t\n of equal length \n    n\n. In one\nmove, you can swap any two adjacent characters of the string \n    s\n. You need\nto find the minimal number of operations you need to make string \n    s\n\nlexicographically smaller than string \n    t\n. A string \n    a\n is\nlexicographically smaller than a string \n    b\n if and only if one of the\nfollowing holds: \n    a\n is a prefix of \n    b\n, but \n    a \n     b\n; in the\nfirst position where \n    a\n and \n    b\n differ, the string \n    a\n has a\nletter that appears earlier in the alphabet than the corresponding letter in\n\n    b\n. Input The first line of input contains one integer \n    q\n (\n    1\n    \n    \u2264 q \n    \u2264 10\n     000\n): the number of test cases. The first line of each\ntest case contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n). The\nsecond line of each test case contains the string \n    s\n consisting of\n\n    n\n lowercase English letters. The third line of each test case contains\nthe string \n    t\n consisting of \n    n\n lowercase English letters. It is\nguaranteed that the sum of \n    n\n over all test cases does not exceed \n    2\n    \n    \u00b7 10^5\n. Output For each test case, print in a separate line the\nminimal number of operations you need to make string \n    s\n lexicographically\nsmaller than string \n    t\n, or \n    -1\n, if it's impossible. Example Input 4\n1 a a 3 rll rrr 3 caa aca 5 ababa aabba Output -1 0 2 2\n\n",
        "cf_contest_id": 1616,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1\r\na\r\na\r\n3\r\nrll\r\nrrr\r\n3\r\ncaa\r\naca\r\n5\r\nababa\r\naabba\r\n",
                "-1\r\n0\r\n2\r\n2\r\n"
            ]
        ],
        "private_cases": []
    }
]