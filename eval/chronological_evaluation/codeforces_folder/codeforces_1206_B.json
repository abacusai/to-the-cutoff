[
    {
        "name": "Make Product Equal One",
        "description": "You are given \n    n\n numbers \n    a_1, a_2, \n    \u2026, a_n\n. With a cost of one\ncoin you can perform the following operation: Choose one of these numbers and\nadd or subtract \n    1\n from it. In particular, we can apply this operation to\nthe same number several times. We want to make the product of all these\nnumbers equal to \n    1\n, in other words, we want \n    a_1 \n    \u00b7 a_2\n\n\n    \u2026\n \n    \u00b7 a_n = 1\n. For example, for \n    n = 3\n and numbers\n\n    [1, -3, 0]\n we can make product equal to \n    1\n in \n    3\n coins: add\n\n    1\n to second element, add \n    1\n to second element again, subtract\n\n    1\n from third element, so that array becomes \n    [1, -1, -1]\n. And\n\n    1\n    \u00b7 (-1) \n    \u00b7 (-1) = 1\n. What is the minimum cost we will have to\npay to do that? Input The first line contains a single integer \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of numbers. The second line contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    -10^9 \n    \u2264 a_i \n    \u2264\n    10^9\n) \u2014 the numbers. Output Output a single number \u2014 the minimal number of\ncoins you need to pay to make the product equal to \n    1\n. Examples Input 2\n-1 1 Output 2 Input 4 0 0 0 0 Output 4 Input 5 -5 -3 5 3 0 Output 13 Note In\nthe first example, you can change \n    1\n to \n    -1\n or \n    -1\n to \n    1\n\nin \n    2\n coins. In the second example, you have to apply at least \n    4\n\noperations for the product not to be \n    0\n. In the third example, you can\nchange \n    -5\n to \n    -1\n in \n    4\n coins, \n    -3\n to \n    -1\n in \n    2\n\ncoins, \n    5\n to \n    1\n in \n    4\n coins, \n    3\n to \n    1\n in \n    2\n\ncoins, \n    0\n to \n    1\n in \n    1\n coin.\n\n",
        "cf_contest_id": 1206,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n-1 1\r\n",
                "2\r\n"
            ],
            [
                "4\r\n0 0 0 0\r\n",
                "4\r\n"
            ],
            [
                "5\r\n-5 -3 5 3 0\r\n",
                "13\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n-1000000000\r\n",
                "1000000001\r\n"
            ],
            [
                "1\r\n1000000000\r\n",
                "999999999\r\n"
            ],
            [
                "3\r\n-525187879 0 425880698\r\n",
                "951068576\r\n"
            ],
            [
                "20\r\n459151683 279504854 500320491 715966379 484152147 179708763 -312314917 -468953627 -816236061 -171030930 902332207 -4832598 -28162448 239469235 -142309467 -836437664 -658075191 -748965205 483598661 348267125\r\n",
                "8779789633\r\n"
            ],
            [
                "21\r\n-302243520 63294374 -424314405 -870258491 110759377 321300735 569988467 -852033606 -987112183 -475943648 -819355234 638293308 -994532751 429802893 835649195 87211677 777780027 -153917281 38936757 -554828220 -179853036\r\n",
                "10487409166\r\n"
            ],
            [
                "22\r\n99039804 -580368436 -694542422 231508622 -490965348 958087037 -570157955 560902976 -840005981 -837792364 -708462966 468364483 443419189 -631099451 -154223559 102960509 -225552439 507250810 -712228569 989896753 965939784 0\r\n",
                "11772769437\r\n"
            ],
            [
                "3\r\n-1 0 0\r\n",
                "2\r\n"
            ],
            [
                "3\r\n0 0 -2\r\n",
                "3\r\n"
            ],
            [
                "7\r\n0 0 -3 -4 -5 6 7\r\n",
                "22\r\n"
            ],
            [
                "4\r\n1 -1 0 0\r\n",
                "2\r\n"
            ],
            [
                "2\r\n-1 -1\r\n",
                "0\r\n"
            ],
            [
                "5\r\n-2 -2 -2 -2 -2\r\n",
                "7\r\n"
            ],
            [
                "4\r\n-1 0 0 0\r\n",
                "3\r\n"
            ],
            [
                "10\r\n-2 -2 -2 0 0 0 0 2 2 2\r\n",
                "10\r\n"
            ],
            [
                "5\r\n-1 -1 -1 0 0\r\n",
                "2\r\n"
            ],
            [
                "3\r\n0 0 -1\r\n",
                "2\r\n"
            ],
            [
                "4\r\n-3 -3 -3 1\r\n",
                "8\r\n"
            ],
            [
                "3\r\n-100 -100 -100\r\n",
                "299\r\n"
            ],
            [
                "4\r\n0 0 -1 1\r\n",
                "2\r\n"
            ],
            [
                "5\r\n-1003430 -10000 -100000 -100 -100\r\n",
                "1113627\r\n"
            ],
            [
                "3\r\n-5 -5 -5\r\n",
                "14\r\n"
            ],
            [
                "5\r\n0 0 -1 -1 -1\r\n",
                "2\r\n"
            ]
        ]
    }
]