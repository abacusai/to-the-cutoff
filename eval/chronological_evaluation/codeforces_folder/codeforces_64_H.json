[
    {
        "name": "Table Bowling",
        "description": "Table bowling tournament participant completed the competition according to\nthe given final standings table. The table is given as a sequence of lines,\neach line has a format \"name score\". Your task is to prepare another table\nconsisting of lines in the form \"place name\". Sort participant by score\n(desc.) and by the name lexicographically in the case of a tie. Places are\nnumerated from 1. If more than one participant has some score, all of them\nshare the places and you should output something like \"12-14 john\". Please,\nlook into the samples for clarification. Input The first line contains n (1 \u2264\nn \u2264 100) \u2014 the number of rows in the table. Following n lines contain the\ngiven table. Each line has the form \"name score\", where \"name\" is a sequence\nof lowercase Latin letters, and \"score\" \u2014 is an integer number between 0 and\n1000, inclusive. All the names are distinct. The length of each name is\nbetween 1 and 10 characters, inclusive. There is single space between the name\nand the score in each line. Output Print the required table. Look at the\nsample outputs for clarifications. Examples Input 5 vasya 10 ted 11 petya 10\nkatya 33 mike 44 Output 1 mike 2 katya 3 ted 4-5 petya 4-5 vasya Input 3 a 1 b\n13 c 1 Output 1 b 2-3 a 2-3 c\n\n",
        "cf_contest_id": 64,
        "cf_index": "H",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "5\r\nvasya 10\r\nted 11\r\npetya 10\r\nkatya 33\r\nmike 44\r\n",
                "1 mike\r\n2 katya\r\n3 ted\r\n4-5 petya\r\n4-5 vasya\r\n"
            ],
            [
                "3\r\na 1\r\nb 13\r\nc 1\r\n",
                "1 b\r\n2-3 a\r\n2-3 c\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nhz 7\r\n",
                "1 hz\r\n"
            ],
            [
                "2\r\nryhob 7\r\nieebl 7\r\n",
                "1-2 ieebl\r\n1-2 ryhob\r\n"
            ],
            [
                "2\r\nnxriicl 13\r\nhmtb 13\r\n",
                "1-2 hmtb\r\n1-2 nxriicl\r\n"
            ],
            [
                "3\r\naxglfqdd 26\r\nhel 26\r\nqccyxl 26\r\n",
                "1-3 axglfqdd\r\n1-3 hel\r\n1-3 qccyxl\r\n"
            ],
            [
                "3\r\neerwbc 28\r\nostnqntg 28\r\nazid 25\r\n",
                "1-2 eerwbc\r\n1-2 ostnqntg\r\n3 azid\r\n"
            ],
            [
                "3\r\ndnasxxe 6\r\nhncgyl 6\r\nxnbh 26\r\n",
                "1 xnbh\r\n2-3 dnasxxe\r\n2-3 hncgyl\r\n"
            ],
            [
                "4\r\nszjebdoad 12\r\nchz 12\r\nkudljmxcse 12\r\na 12\r\n",
                "1-4 a\r\n1-4 chz\r\n1-4 kudljmxcse\r\n1-4 szjebdoad\r\n"
            ],
            [
                "4\r\nx 5\r\nvnrjuab 5\r\nsrhk 5\r\nqfoe 5\r\n",
                "1-4 qfoe\r\n1-4 srhk\r\n1-4 vnrjuab\r\n1-4 x\r\n"
            ],
            [
                "4\r\nfprsq 32\r\nfnenjnaz 6\r\nn 6\r\nhdej 40\r\n",
                "1 hdej\r\n2 fprsq\r\n3-4 fnenjnaz\r\n3-4 n\r\n"
            ],
            [
                "4\r\nlelon 5\r\ns 33\r\nzn 33\r\npjrbf 10\r\n",
                "1-2 s\r\n1-2 zn\r\n3 pjrbf\r\n4 lelon\r\n"
            ]
        ]
    }
]