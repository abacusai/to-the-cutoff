[
    {
        "name": "Binary Period",
        "description": "Let's say string \n    s\n has period \n    k\n if \n    s_i = s_i + k\n for all\n\n    i\n from \n    1\n to \n    |s| - k\n (\n    |s|\n means length of string\n\n    s\n) and \n    k\n is the minimum positive integer with this property. Some\nexamples of a period: for \n    s\n=\"0101\" the period is \n    k=2\n, for\n\n    s\n=\"0000\" the period is \n    k=1\n, for \n    s\n=\"010\" the period is\n\n    k=2\n, for \n    s\n=\"0011\" the period is \n    k=4\n. You are given string\n\n    t\n consisting only of 0's and 1's and you need to find such string\n\n    s\n that: String \n    s\n consists only of 0's and 1's; The length of\n\n    s\n doesn't exceed \n    2 \n    \u00b7 |t|\n; String \n    t\n is a subsequence of\nstring \n    s\n; String \n    s\n has smallest possible period among all strings\nthat meet conditions 1\u20143. Let us recall that \n    t\n is a subsequence of\n\n    s\n if \n    t\n can be derived from \n    s\n by deleting zero or more\nelements (any) without changing the order of the remaining elements. For\nexample, \n    t\n=\"011\" is a subsequence of \n    s\n=\"10101\". Input The first\nline contains single integer \n    T\n (\n    1 \n    \u2264 T \n    \u2264 100\n) \u2014 the number\nof test cases. Next \n    T\n lines contain test cases \u2014 one per line. Each line\ncontains string \n    t\n (\n    1 \n    \u2264 |t| \n    \u2264 100\n) consisting only of 0's\nand 1's. Output Print one string for each test case \u2014 string \n    s\n you\nneeded to find. If there are multiple solutions print any one of them. Example\nInput 4 00 01 111 110 Output 00 01 11111 1010 Note In the first and second\ntest cases, \n    s = t\n since it's already one of the optimal solutions.\nAnswers have periods equal to \n    1\n and \n    2\n, respectively. In the third\ntest case, there are shorter optimal solutions, but it's okay since we don't\nneed to minimize the string \n    s\n. String \n    s\n has period equal to\n\n    1\n.\n\n",
        "cf_contest_id": 1342,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n00\r\n01\r\n111\r\n110\r\n",
                "00\r\n0101\r\n111\r\n101010\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0001010000\r\n",
                "01010101010101010101\r\n"
            ],
            [
                "5\r\n0\r\n1\r\n00\r\n01\r\n10\r\n",
                "0\r\n1\r\n00\r\n0101\r\n1010\r\n"
            ]
        ]
    }
]