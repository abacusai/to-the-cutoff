[
    {
        "name": "Replace and Keep Sorted",
        "description": "Given a positive integer \n    k\n, two arrays are called \n    k\n-similar if:\nthey are strictly increasing; they have the same length; all their elements\nare positive integers between \n    1\n and \n    k\n (inclusive); they differ in\nexactly one position. You are given an integer \n    k\n, a strictly increasing\narray \n    a\n and \n    q\n queries. For each query, you are given two integers\n\n    l_i \n    \u2264 r_i\n. Your task is to find how many arrays \n    b\n exist, such\nthat \n    b\n is \n    k\n-similar to array\n\n    [a_l_i,a_l_i+1\n    \u2026,a_r_i]\n. Input The first line contains three\nintegers \n    n\n, \n    q\n and \n    k\n (\n    1\n    \u2264 n, q \n    \u2264 10^5\n,\n\n    n\n    \u2264 k \n    \u2264 10^9\n) \u2014 the length of array \n    a\n, the number of\nqueries and number \n    k\n. The second line contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026,a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 k\n). This array is strictly\nincreasing \u2014 \n    a_1 < a_2 < \n    \u2026 < a_n\n. Each of the following \n    q\n\nlines contains two integers \n    l_i\n, \n    r_i\n (\n    1 \n    \u2264 l_i \n    \u2264 r_i\n    \n    \u2264 n\n). Output Print \n    q\n lines. The \n    i\n-th of them should\ncontain the answer to the \n    i\n-th query. Examples Input 4 2 5 1 2 4 5 2 3 3\n4 Output 4 3 Input 6 5 10 2 4 6 7 8 9 1 4 1 2 3 5 1 6 5 5 Output 8 9 7 6 9\nNote In the first example: In the first query there are \n    4\n arrays that\nare \n    5\n-similar to \n    [2,4]\n: \n    [1,4],[3,4],[2,3],[2,5]\n. In the\nsecond query there are \n    3\n arrays that are \n    5\n-similar to \n    [4,5]\n:\n\n    [1,5],[2,5],[3,5]\n.\n\n",
        "cf_contest_id": 1485,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2 5\r\n1 2 4 5\r\n2 3\r\n3 4\r\n",
                "4\r\n3\r\n"
            ],
            [
                "6 5 10\r\n2 4 6 7 8 9\r\n1 4\r\n1 2\r\n3 5\r\n1 6\r\n5 5\r\n",
                "8\r\n9\r\n7\r\n6\r\n9\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 5 10\r\n3\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "9\r\n9\r\n9\r\n9\r\n9\r\n"
            ],
            [
                "1 1 20\r\n3\r\n1 1\r\n",
                "19\r\n"
            ]
        ]
    }
]