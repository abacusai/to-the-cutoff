[
    {
        "name": "Kavi on Pairing Duty",
        "description": "Kavi has \n    2n\n points lying on the \n    OX\n axis, \n    i\n-th of which is\nlocated at \n    x = i\n. Kavi considers all ways to split these \n    2n\n points\ninto \n    n\n pairs. Among those, he is interested in good pairings, which are\ndefined as follows: Consider \n    n\n segments with ends at the points in\ncorrespondent pairs. The pairing is called good, if for every \n    2\n\ndifferent segments \n    A\n and \n    B\n among those, at least one of the\nfollowing holds: One of the segments \n    A\n and \n    B\n lies completely\ninside the other. \n    A\n and \n    B\n have the same length. Consider the\nfollowing example: \n    A\n is a good pairing since the red segment lies\ncompletely inside the blue segment. \n    B\n is a good pairing since the red\nand the blue segment have the same length. \n    C\n is not a good pairing since\nnone of the red or blue segments lies inside the other, neither do they have\nthe same size. Kavi is interested in the number of good pairings, so he wants\nyou to find it for him. As the result can be large, find this number modulo\n\n    998244353\n. Two pairings are called different, if some two points are in\none pair in some pairing and in different pairs in another. Input The single\nline of the input contains a single integer \n    n\n \n    (1\n    \u2264 n \n    \u2264\n    10^6)\n. Output Print the number of good pairings modulo \n    998244353\n.\nExamples Input 1 Output 1 Input 2 Output 3 Input 3 Output 6 Input 100 Output\n688750769 Note The good pairings for the second example are: In the third\nexample, the good pairings are:\n\n",
        "cf_contest_id": 1528,
        "cf_index": "B",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n",
                "1\r\n"
            ],
            [
                "2\r\n",
                "3\r\n"
            ],
            [
                "3\r\n",
                "6\r\n"
            ],
            [
                "100\r\n",
                "688750769\r\n"
            ]
        ],
        "private_cases": [
            [
                "333625\r\n",
                "668510586\r\n"
            ],
            [
                "1000000\r\n",
                "126330412\r\n"
            ],
            [
                "757606\r\n",
                "162462618\r\n"
            ],
            [
                "443013\r\n",
                "95736273\r\n"
            ],
            [
                "489857\r\n",
                "498405873\r\n"
            ],
            [
                "160945\r\n",
                "650435832\r\n"
            ],
            [
                "693549\r\n",
                "721751076\r\n"
            ],
            [
                "563368\r\n",
                "170858430\r\n"
            ],
            [
                "825195\r\n",
                "937989636\r\n"
            ],
            [
                "999228\r\n",
                "996260068\r\n"
            ]
        ]
    }
]