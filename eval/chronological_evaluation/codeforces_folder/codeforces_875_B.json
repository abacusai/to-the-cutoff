[
    {
        "name": "Sorting the Coins",
        "description": "Recently, Dima met with Sasha in a philatelic store, and since then they are\ncollecting coins together. Their favorite occupation is to sort collections of\ncoins. Sasha likes having things in order, that is why he wants his coins to\nbe arranged in a row in such a way that firstly come coins out of circulation,\nand then come coins still in circulation. For arranging coins Dima uses the\nfollowing algorithm. One step of his algorithm looks like the following: He\nlooks through all the coins from left to right; If he sees that the i-th coin\nis still in circulation, and (i + 1)-th coin is already out of circulation, he\nexchanges these two coins and continues watching coins from (i + 1)-th. Dima\nrepeats the procedure above until it happens that no two coins were exchanged\nduring this procedure. Dima calls hardness of ordering the number of steps\nrequired for him according to the algorithm above to sort the sequence, e.g.\nthe number of times he looks through the coins from the very beginning. For\nexample, for the ordered sequence hardness of ordering equals one. Today Sasha\ninvited Dima and proposed him a game. First he puts n coins in a row, all of\nthem are out of circulation. Then Sasha chooses one of the coins out of\ncirculation and replaces it with a coin in circulation for n times. During\nthis process Sasha constantly asks Dima what is the hardness of ordering of\nthe sequence. The task is more complicated because Dima should not touch the\ncoins and he should determine hardness of ordering in his mind. Help Dima with\nthis task. Input The first line contains single integer n (1 \u2264 n \u2264 300 000) \u2014\nnumber of coins that Sasha puts behind Dima. Second line contains n distinct\nintegers p1, p2, ..., pn (1 \u2264 pi \u2264 n) \u2014 positions that Sasha puts coins in\ncirculation to. At first Sasha replaces coin located at position p1, then coin\nlocated at position p2 and so on. Coins are numbered from left to right.\nOutput Print n + 1 numbers a0, a1, ..., an, where a0 is a hardness of ordering\nat the beginning, a1 is a hardness of ordering after the first replacement and\nso on. Examples Input 4 1 3 4 2 Output 1 2 3 2 1 Input 8 6 8 3 4 7 2 1 5\nOutput 1 2 2 3 4 3 4 5 1 Note Let's denote as O coin out of circulation, and\nas X \u2014 coin is circulation. At the first sample, initially in row there are\ncoins that are not in circulation, so Dima will look through them from left to\nright and won't make any exchanges. After replacement of the first coin with a\ncoin in circulation, Dima will exchange this coin with next three times and\nafter that he will finally look through the coins and finish the process. XOOO\n\u2192 OOOX After replacement of the third coin, Dima's actions look this way: XOXO\n\u2192 OXOX \u2192 OOXX After replacement of the fourth coin, Dima's actions look this\nway: XOXX \u2192 OXXX Finally, after replacement of the second coin, row becomes\nconsisting of coins that are in circulation and Dima will look through coins\nfrom left to right without any exchanges.\n\n",
        "cf_contest_id": 875,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "dsu",
            "implementation",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n1 3 4 2\r\n",
                "1 2 3 2 1\r\n"
            ],
            [
                "8\r\n6 8 3 4 7 2 1 5\r\n",
                "1 2 2 3 4 3 4 5 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n",
                "1 1\r\n"
            ],
            [
                "11\r\n10 8 9 4 6 3 5 1 11 7 2\r\n",
                "1 2 3 4 5 6 7 8 9 6 2 1\r\n"
            ],
            [
                "11\r\n10 8 9 4 3 5 1 11 7 2 6\r\n",
                "1 2 3 4 5 6 7 8 5 5 6 1\r\n"
            ],
            [
                "100\r\n1 72 43 50 58 87 10 94 29 51 99 86 92 80 36 31 9 100 85 59 66 30 3 78 17 73 93 37 57 71 45 15 24 2 64 44 65 22 38 79 23 8 16 52 98 97 96 95 91 90 89 88 84 83 82 81 77 76 75 74 70 69 68 67 63 62 61 60 56 55 54 53 49 48 47 46 42 41 40 39 35 34 33 32 28 27 26 25 21 20 19 18 14 13 12 11 7 6 5 4\r\n",
                "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 43 43 43 40 40 40 40 37 37 37 37 34 34 34 34 31 31 31 31 28 28 28 28 25 25 25 25 22 22 22 22 19 19 19 19 16 16 16 16 13 13 13 13 10 10 10 10 7 7 7 7 4 4 4 4 1\r\n"
            ],
            [
                "100\r\n98 52 63 2 18 96 31 58 84 40 41 45 66 100 46 71 26 48 81 20 73 91 68 76 13 93 17 29 64 95 79 21 55 75 19 85 54 51 89 78 15 87 43 59 36 1 90 35 65 56 62 28 86 5 82 49 3 99 33 9 92 32 74 69 27 22 77 16 44 94 34 6 57 70 23 12 61 25 8 11 67 47 83 88 10 14 30 7 97 60 42 37 24 38 53 50 4 80 72 39\r\n",
                "1 2 3 4 5 6 7 8 9 10 11 12 13 14 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 70 71 72 73 74 75 76 77 78 71 39 1\r\n"
            ]
        ]
    }
]