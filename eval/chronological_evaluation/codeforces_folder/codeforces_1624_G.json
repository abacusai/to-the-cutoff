[
    {
        "name": "MinOr Tree",
        "description": "Recently, Vlad has been carried away by spanning trees, so his friends,\nwithout hesitation, gave him a connected weighted undirected graph of \n    n\n\nvertices and \n    m\n edges for his birthday. Vlad defined the ority of a\nspanning tree as the bitwise OR of all its weights, and now he is interested\nin what is the minimum possible ority that can be achieved by choosing a\ncertain spanning tree. A spanning tree is a connected subgraph of a given\ngraph that does not contain cycles. In other words, you want to keep \n    n-1\n\nedges so that the graph remains connected and the bitwise OR weights of the\nedges are as small as possible. You have to find the minimum bitwise OR\nitself. Input The first line of the input contains an integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases in the input. An empty line\nis written in front of each test case. This is followed by two numbers \n    n\n\nand \n    m\n (\n    3 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5, n - 1 \n    \u2264 m \n    \u2264 2 \n    \u00b7\n    10^5\n) \u2014 the number of vertices and edges of the graph, respectively. The\nnext \n    m\n lines contain the description of the edges. Line \n    i\n contains\nthree numbers \n    v_i\n, \n    u_i\n and \n    w_i\n (\n    1 \n    \u2264 v_i, u_i \n    \u2264\n    n\n, \n    1 \n    \u2264 w_i \n    \u2264 10^9\n, \n    v_i \n    \u2260 u_i\n) \u2014 the vertices that\nthe edge connects and its weight. It is guaranteed that the sum \n    m\n and\nthe sum \n    n\n over all test cases does not exceed \n    2 \n    \u00b7 10^5\n and\neach test case contains a connected graph. Output Print \n    t\n lines, each of\nwhich contains the answer to the corresponding set of input data \u2014 the minimum\npossible spanning tree ority. Example Input 3 3 3 1 2 1 2 3 2 1 3 2 5 7 4 2 7\n2 5 8 3 4 2 3 2 1 2 4 2 4 1 2 1 2 2 3 4 1 2 1 2 3 2 1 3 3 3 1 4 Output 2 10 3\nNote Graph from the first test case. Ority of this tree equals to 2 or 2 = 2\nand it's minimal. Without excluding edge with weight \n    1\n ority is 1 or 2 =\n3.\n\n",
        "cf_contest_id": 1624,
        "cf_index": "G",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n\r\n3 3\r\n1 2 1\r\n2 3 2\r\n1 3 2\r\n\r\n5 7\r\n4 2 7\r\n2 5 8\r\n3 4 2\r\n3 2 1\r\n2 4 2\r\n4 1 2\r\n1 2 2\r\n\r\n3 4\r\n1 2 1\r\n2 3 2\r\n1 3 3\r\n3 1 4\r\n",
                "2\r\n10\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n\r\n3 2\r\n1 2 4534\r\n1 3 128\r\n\r\n3 2\r\n1 2 1\r\n2 3 2\r\n\r\n3 2\r\n2 3 13\r\n1 3 5\r\n\r\n4 3\r\n1 2 1\r\n2 3 3\r\n3 4 4\r\n",
                "4534\r\n3\r\n13\r\n7\r\n"
            ]
        ]
    }
]