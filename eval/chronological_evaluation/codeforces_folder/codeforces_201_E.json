[
    {
        "name": "Thoroughly Bureaucratic Organization",
        "description": "Once n people simultaneously signed in to the reception at the recently\nopened, but already thoroughly bureaucratic organization (abbreviated TBO). As\nthe organization is thoroughly bureaucratic, it can accept and cater for\nexactly one person per day. As a consequence, each of n people made an\nappointment on one of the next n days, and no two persons have an appointment\non the same day. However, the organization workers are very irresponsible\nabout their job, so none of the signed in people was told the exact date of\nthe appointment. The only way to know when people should come is to write some\nrequests to TBO. The request form consists of m empty lines. Into each of\nthese lines the name of a signed in person can be written (it can be left\nblank as well). Writing a person's name in the same form twice is forbidden,\nsuch requests are ignored. TBO responds very quickly to written requests, but\nthe reply format is of very poor quality \u2014 that is, the response contains the\ncorrect appointment dates for all people from the request form, but the dates\nare in completely random order. Responds to all requests arrive simultaneously\nat the end of the day (each response specifies the request that it answers).\nFortunately, you aren't among these n lucky guys. As an observer, you have the\nfollowing task \u2014 given n and m, determine the minimum number of requests to\nsubmit to TBO to clearly determine the appointment date for each person. Input\nThe first line contains a single integer t (1 \u2264 t \u2264 1000) \u2014 the number of test\ncases. Each of the following t lines contains two integers n and m (1 \u2264 n, m \u2264\n10^9) \u2014 the number of people who have got an appointment at TBO and the number\nof empty lines in the request form, correspondingly. Output Print t lines,\neach containing an answer for the corresponding test case (in the order they\nare given in the input) \u2014 the minimum number of requests to submit to TBO.\nExamples Input 5 4 1 4 2 7 3 1 1 42 7 Output 3 2 3 0 11 Note In the first\nsample, you need to submit three requests to TBO with three different names.\nWhen you learn the appointment dates of three people out of four, you can find\nout the fourth person's date by elimination, so you do not need a fourth\nrequest. In the second sample you need only two requests. Let's number the\npersons from 1 to 4 and mention persons 1 and 2 in the first request and\npersons 1 and 3 in the second request. It is easy to see that after that we\ncan clearly determine each person's appointment date regardless of the answers\nobtained from TBO. In the fourth sample only one person signed up for an\nappointment. He doesn't need to submit any requests \u2014 his appointment date is\ntomorrow.\n\n",
        "cf_contest_id": 201,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "combinatorics"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4 1\r\n4 2\r\n7 3\r\n1 1\r\n42 7\r\n",
                "3\r\n2\r\n3\r\n0\r\n11\r\n"
            ]
        ],
        "private_cases": [
            [
                "12\r\n11 4\r\n9 2\r\n10000 100\r\n1000000000 2345\r\n123456 1234567\r\n123456 65536\r\n5 55\r\n5 3\r\n2323 10\r\n999111000 232323\r\n999888777 777888999\r\n999888777 777\r\n",
                "4\r\n6\r\n198\r\n852515\r\n17\r\n17\r\n3\r\n3\r\n423\r\n12562\r\n30\r\n2570409\r\n"
            ],
            [
                "17\r\n1 1000000000\r\n1000000000 1\r\n1000000000 1000000000\r\n1000000000 999999999\r\n999999999 1000000000\r\n1 2\r\n2 1\r\n2 3\r\n3 2\r\n2 1000000000\r\n1000000000 2\r\n1000000000 999999998\r\n999999998 1000000000\r\n1000000000 500000000\r\n500000000 1000000000\r\n1000000000 500000001\r\n500000001 1000000000\r\n",
                "0\r\n999999999\r\n30\r\n30\r\n30\r\n0\r\n1\r\n1\r\n2\r\n1\r\n666666666\r\n30\r\n30\r\n30\r\n29\r\n30\r\n29\r\n"
            ]
        ]
    }
]