[
    {
        "name": "Save More Mice",
        "description": "There are one cat, \n    k\n mice, and one hole on a coordinate line. The cat is\nlocated at the point \n    0\n, the hole is located at the point \n    n\n. All\nmice are located between the cat and the hole: the \n    i\n-th mouse is located\nat the point \n    x_i\n (\n    0 < x_i < n\n). At each point, many mice can be\nlocated. In one second, the following happens. First, exactly one mouse moves\nto the right by \n    1\n. If the mouse reaches the hole, it hides (i.e. the\nmouse will not any more move to any point and will not be eaten by the cat).\nThen (after that the mouse has finished its move) the cat moves to the right\nby \n    1\n. If at the new cat's position, some mice are located, the cat eats\nthem (they will not be able to move after that). The actions are performed\nuntil any mouse hasn't been hidden or isn't eaten. In other words, the first\nmove is made by a mouse. If the mouse has reached the hole, it's saved. Then\nthe cat makes a move. The cat eats the mice located at the pointed the cat has\nreached (if the cat has reached the hole, it eats nobody). Each second, you\ncan select a mouse that will make a move. What is the maximum number of mice\nthat can reach the hole without being eaten? Input The first line contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. Then\n\n    t\n test cases follow. Each test case consists of two lines. The first\nline contains two integers \n    n\n and \n    k\n (\n    2 \n    \u2264 n \n    \u2264 10^9\n,\n\n    1 \n    \u2264 k \n    \u2264 4 \n    \u00b7 10^5\n). The second line contains \n    k\n\nintegers \n    x_1, x_2, \n    \u2026 x_k\n (\n    1 \n    \u2264 x_i < n\n) \u2014 the initial\ncoordinates of the mice. It is guaranteed that the sum of all \n    k\n given in\nthe input doesn't exceed \n    4 \n    \u00b7 10^5\n. Output For each test case\noutput on a separate line an integer \n    m\n (\n    m \n    \u2265 0\n) \u2014 the maximum\nnumber of mice that can reach the hole without being eaten. Example Input 3 10\n6 8 7 5 4 9 4 2 8 1 1 1 1 1 1 1 1 12 11 1 2 3 4 5 6 7 8 9 10 11 Output 3 1 4\n\n",
        "cf_contest_id": 1593,
        "cf_index": "C",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "greedy"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n10 6\r\n8 7 5 4 9 4\r\n2 8\r\n1 1 1 1 1 1 1 1\r\n12 11\r\n1 2 3 4 5 6 7 8 9 10 11\r\n",
                "3\r\n1\r\n4\r\n"
            ]
        ],
        "private_cases": []
    }
]