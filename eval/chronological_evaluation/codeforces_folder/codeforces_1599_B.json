[
    {
        "name": "Restaurant Game",
        "description": "Alice and Bob always had hard time choosing restaurant for the dinner.\nPreviously they performed Eenie Meenie Miney Mo game, but eventually as their\nrestaurant list grew, they had to create a new game. This new game starts as\nthey write restaurant names on \n    N\n cards and align the cards in one line.\nBefore the game begins, they both choose starting card and starting direction\nthey are going to. They take turns in order one after another. After each\nturn, they move one card in their current direction. If they reach the end or\nbeginning of the line of cards they change direction. Once they meet in a\ncard, the card is marked for removal and is removed the first moment they both\nleave the card. Example of how card is removed They repeat this process until\nthere is only one restaurant card left. Since there are a lot of restaurant\ncards, they are bored to simulate this process over and over and need your\nhelp to determine the last card that remains. Can you help them? Input The\nfirst line of the input is one integer \n    T\n (\n    1\n \n    \u2264\n \n    T\n\n\n    \u2264\n \n    10^4\n) representing number of test cases. Each test case\ncontains 3 lines: The first line contains an integer \n    N\n representing\ninitial number of cards. Next line contains two integer values \n    A,B\n\n(\n    0\n \n    \u2264\n \n    A, B\n < \n    N\n, \n    2\n \n    \u2264\n \n    N\n\n\n    \u2264\n \n    10^18\n) representing starting 0-based index of the card in\nthe array. Last line contains two strings \n    D_A, D_B\n \n    \u2208\n \"left\",\n\"right\" representing starting direction of their movement. Output The output\ncontains \n    T\n integer number \u2013 the 0-based index of the last card that\nremains for every test case in order. Example Input 1 4 0 1 left right Output\n0 Note Note that since Alice is starting at the beginning of the line even\nthough her initial direction is left, on her next move she will go right.\n\n",
        "cf_contest_id": 1599,
        "cf_index": "B",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n4\r\n0 1\r\nleft right\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n429\r\n41 20\r\nleft left\r\n977\r\n606 92\r\nleft left\r\n874\r\n742 866\r\nright right\r\n774\r\n61 573\r\nright right\r\n315\r\n160 287\r\nright left\r\n985\r\n871 814\r\nleft right\r\n73\r\n0 45\r\nright left\r\n880\r\n358 535\r\nright left\r\n842\r\n457 592\r\nright left\r\n599\r\n509 542\r\nright left\r\n",
                "428\r\n0\r\n873\r\n773\r\n0\r\n984\r\n0\r\n0\r\n0\r\n0\r\n"
            ]
        ]
    }
]