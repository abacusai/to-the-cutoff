[
    {
        "name": "Filling the Grid",
        "description": "Suppose there is a \n    h \n    \u00d7 w\n grid consisting of empty or full cells.\nLet's make some definitions: \n    r_i\n is the number of consecutive full\ncells connected to the left side in the \n    i\n-th row (\n    1 \n    \u2264 i \n    \u2264\n    h\n). In particular, \n    r_i=0\n if the leftmost cell of the \n    i\n-th row\nis empty. \n    c_j\n is the number of consecutive full cells connected to the\ntop end in the \n    j\n-th column (\n    1 \n    \u2264 j \n    \u2264 w\n). In particular,\n\n    c_j=0\n if the topmost cell of the \n    j\n-th column is empty. In other\nwords, the \n    i\n-th row starts exactly with \n    r_i\n full cells. Similarly,\nthe \n    j\n-th column starts exactly with \n    c_j\n full cells. These are the\n\n    r\n and \n    c\n values of some \n    3 \n    \u00d7 4\n grid. Black cells are\nfull and white cells are empty. You have values of \n    r\n and \n    c\n.\nInitially, all cells are empty. Find the number of ways to fill grid cells to\nsatisfy values of \n    r\n and \n    c\n. Since the answer can be very large,\nfind the answer modulo \n    1000000007\n     (10^9 + 7)\n. In other words, find\nthe remainder after division of the answer by \n    1000000007\n     (10^9 +\n    7)\n. Input The first line contains two integers \n    h\n and \n    w\n (\n    1\n    \n    \u2264 h, w \n    \u2264 10^3\n) \u2014 the height and width of the grid. The second\nline contains \n    h\n integers \n    r_1, r_2, \n    \u2026, r_h\n (\n    0 \n    \u2264\n    r_i\n    \u2264 w\n) \u2014 the values of \n    r\n. The third line contains \n    w\n\nintegers \n    c_1, c_2, \n    \u2026, c_w\n (\n    0 \n    \u2264 c_j\n    \u2264 h\n) \u2014\nthe values of \n    c\n. Output Print the answer modulo \n    1000000007\n     (10^9\n    + 7)\n. Examples Input 3 4 0 3 1 0 2 3 0 Output 2 Input 1 1 0 1 Output 0\nInput 19 16 16 16 16 16 15 15 0 5 0 4 9 9 1 4 4 0 8 16 12 6 12 19 15 8 6 19 19\n14 6 9 16 10 11 15 4 Output 797922655 Note In the first example, this is the\nother possible case. In the second example, it's impossible to make a grid to\nsatisfy such \n    r\n, \n    c\n values. In the third example, make sure to print\nanswer modulo \n    (10^9 + 7)\n.\n\n",
        "cf_contest_id": 1228,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 4\r\n0 3 1\r\n0 2 3 0\r\n",
                "2\r\n"
            ],
            [
                "1 1\r\n0\r\n1\r\n",
                "0\r\n"
            ],
            [
                "19 16\r\n16 16 16 16 15 15 0 5 0 4 9 9 1 4 4 0 8 16 12\r\n6 12 19 15 8 6 19 19 14 6 9 16 10 11 15 4\r\n",
                "797922655\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 4\r\n2 0 3 1\r\n1 3 0 3\r\n",
                "0\r\n"
            ],
            [
                "3 6\r\n0 0 0\r\n0 0 0 0 0 0\r\n",
                "1024\r\n"
            ],
            [
                "4 5\r\n2 5 2 2\r\n4 4 0 2 2\r\n",
                "4\r\n"
            ],
            [
                "9 9\r\n9 9 9 9 9 9 9 9 9\r\n9 9 9 9 9 9 9 9 9\r\n",
                "1\r\n"
            ],
            [
                "4 4\r\n3 0 0 0\r\n0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "3 4\r\n4 4 4\r\n0 3 3 3\r\n",
                "0\r\n"
            ],
            [
                "2 2\r\n1 1\r\n1 0\r\n",
                "0\r\n"
            ],
            [
                "3 5\r\n4 3 2\r\n3 2 2 1 0\r\n",
                "0\r\n"
            ],
            [
                "2 2\r\n1 1\r\n0 0\r\n",
                "0\r\n"
            ],
            [
                "3 3\r\n3 3 3\r\n0 0 0\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\n4 4 3 3\r\n4 4 4 1\r\n",
                "0\r\n"
            ],
            [
                "2 4\r\n2 2\r\n0 0 0 2\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "2 2\r\n2 1\r\n1 1\r\n",
                "0\r\n"
            ]
        ]
    }
]