[
    {
        "name": "Fafa and Ancient Alphabet",
        "description": "Ancient Egyptians are known to have used a large set of symbols to write on\nthe walls of the temples. Fafa and Fifa went to one of the temples and found\ntwo non-empty words S1 and S2 of equal lengths on the wall of temple written\none below the other. Since this temple is very ancient, some symbols from the\nwords were erased. The symbols in the set have equal probability for being in\nthe position of any erased symbol. Fifa challenged Fafa to calculate the\nprobability that S1 is lexicographically greater than S2. Can you help Fafa\nwith this task? You know that , i. e. there were m distinct characters in\nEgyptians' alphabet, in this problem these characters are denoted by integers\nfrom 1 to m in alphabet order. A word x is lexicographically greater than a\nword y of the same length, if the words are same up to some position, and then\nthe word x has a larger character, than the word y. We can prove that the\nprobability equals to some fraction , where P and Q are coprime integers, and\n. Print as the answer the value , i. e. such a non-negative integer less than\n10^9 + 7, such that , where means that a and b give the same remainders when\ndivided by m. Input The first line contains two integers n and m (1 \u2264 n, m \u2264\n10^5) \u2014 the length of each of the two words and the size of the alphabet ,\nrespectively. The second line contains n integers a1, a2, ..., an (0 \u2264 ai \u2264 m)\n\u2014 the symbols of S1. If ai = 0, then the symbol at position i was erased. The\nthird line contains n integers representing S2 with the same format as S1.\nOutput Print the value , where P and Q are coprime and is the answer to the\nproblem. Examples Input 1 2 0 1 Output 500000004 Input 1 2 1 0 Output 0 Input\n7 26 0 15 12 9 13 0 14 11 1 0 13 15 12 0 Output 230769233 Note In the first\nsample, the first word can be converted into (1) or (2). The second option is\nthe only one that will make it lexicographically larger than the second word.\nSo, the answer to the problem will be , that is 500000004, because . In the\nsecond example, there is no replacement for the zero in the second word that\nwill make the first one lexicographically larger. So, the answer to the\nproblem is , that is 0.\n\n",
        "cf_contest_id": 935,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "probabilities"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 2\r\n0\r\n1\r\n",
                "500000004\r\n"
            ],
            [
                "1 2\r\n1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "7 26\r\n0 15 12 9 13 0 14\r\n11 1 0 13 15 12 0\r\n",
                "230769233\r\n"
            ]
        ],
        "private_cases": [
            [
                "6 26\r\n14 5 19 18 9 14\r\n0 0 0 0 0 0\r\n",
                "182369325\r\n"
            ],
            [
                "4 26\r\n0 0 0 0\r\n13 15 18 1\r\n",
                "306407779\r\n"
            ],
            [
                "5 100\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n",
                "907142864\r\n"
            ],
            [
                "7 30\r\n11 1 0 13 15 12 0\r\n0 15 12 9 13 0 14\r\n",
                "333333336\r\n"
            ],
            [
                "4 50\r\n19 1 19 1\r\n19 1 19 15\r\n",
                "0\r\n"
            ],
            [
                "4 50\r\n19 1 19 15\r\n19 1 19 1\r\n",
                "1\r\n"
            ],
            [
                "107 100000\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "771105300\r\n"
            ],
            [
                "34 20\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "591011954\r\n"
            ],
            [
                "10 100000\r\n0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0\r\n",
                "715785945\r\n"
            ],
            [
                "100 100000\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "792381120\r\n"
            ],
            [
                "5 27\r\n25 0 6 0 0\r\n0 24 2 0 14\r\n",
                "832647469\r\n"
            ],
            [
                "5 27\r\n0 24 2 0 14\r\n25 0 6 0 0\r\n",
                "167352539\r\n"
            ],
            [
                "8 27\r\n20 5 6 1 6 1 6 1\r\n20 5 6 1 6 1 6 1\r\n",
                "0\r\n"
            ],
            [
                "10 100000\r\n0 0 0 0 0 0 0 0 0 0\r\n17249 88822 85448 44244 91609 68248 2971 11280 92940 19585\r\n",
                "290890611\r\n"
            ],
            [
                "10 100000\r\n74605 69376 14926 60793 94578 72935 86959 78140 97122 47320\r\n0 0 0 0 0 0 0 0 0 0\r\n",
                "86514169\r\n"
            ],
            [
                "10 100000\r\n65970 55981 23160 61003 12898 65502 60210 86706 29731 95712\r\n23450 82634 77108 10047 40650 69111 70947 44999 1304 7760\r\n",
                "1\r\n"
            ],
            [
                "10 85645\r\n7599 0 0 0 21264 0 0 0 68545 0\r\n67886 24576 72894 0 0 59979 14715 0 12822 6265\r\n",
                "0\r\n"
            ],
            [
                "10 87817\r\n86287 30778 0 66706 25545 59637 0 81488 47915 63800\r\n30067 4553 0 0 0 26765 81163 24777 16517 32518\r\n",
                "1\r\n"
            ],
            [
                "10 95854\r\n1879 78538 0 34766 1893 89997 69204 94054 0 0\r\n62148 62838 62104 88228 6930 57539 9897 37830 7336 95377\r\n",
                "0\r\n"
            ],
            [
                "10 98026\r\n68996 54116 0 21132 18444 0 24468 49121 55132 67144\r\n12505 0 39174 63502 0 6134 95276 64690 74791 47771\r\n",
                "1\r\n"
            ],
            [
                "10 90086\r\n41910 22500 6101 0 0 0 34790 9614 0 83351\r\n11155 21861 0 19394 81349 53888 33712 3834 17500 48357\r\n",
                "1\r\n"
            ],
            [
                "10 92258\r\n49583 2716 75176 0 90723 67482 14300 72653 56300 73929\r\n12163 619 44775 73277 80327 39278 0 0 0 71268\r\n",
                "1\r\n"
            ],
            [
                "10 70294\r\n0 0 22537 42830 0 65446 0 23427 60461 13653\r\n8888 69738 9505 29182 32466 18003 49610 192 7905 12002\r\n",
                "389886462\r\n"
            ],
            [
                "10 96602\r\n90709 0 10976 18427 0 13508 8299 7659 69934 0\r\n80891 15064 7805 4204 52322 10621 3779 7261 14059 90207\r\n",
                "1\r\n"
            ],
            [
                "5 1\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "8 1\r\n0 0 0 0 0 0 0 0\r\n0 1 0 0 0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "5 1\r\n1 1 1 1 1\r\n0 0 0 0 0\r\n",
                "0\r\n"
            ]
        ]
    }
]