[
    {
        "name": "Optimal Partition",
        "description": "You are given an array \n    a\n consisting of \n    n\n integers. You should\ndivide \n    a\n into continuous non-empty subarrays (there are \n    2^n-1\n\nways to do that). Let \n    s=a_l+a_l+1+\n    \u2026+a_r\n. The value of a\nsubarray \n    a_l, a_l+1, \n    \u2026, a_r\n is: \n    (r-l+1)\n if \n    s>0\n,\n\n    0\n if \n    s=0\n, \n    -(r-l+1)\n if \n    s<0\n. What is the maximum sum of\nvalues you can get with a partition? Input The input consists of multiple test\ncases. The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 5\n    \n    \u00b7 10^5\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 5 \n    \u00b7 10^5\n). The second line of each test case\ncontains \n    n\n integers \n    a_1\n, \n    a_2\n, ..., \n    a_n\n (\n    -10^9 \n    \u2264\n    a_i \n    \u2264 10^9\n). It is guaranteed that the sum of \n    n\n over all test\ncases does not exceed \n    5 \n    \u00b7 10^5\n. Output For each test case print a\nsingle integer \u2014 the maximum sum of values you can get with an optimal\nparition. Example Input 5 3 1 2 -3 4 0 -2 3 -4 5 -1 -2 3 -1 -1 6 -1 2 -3 4 -5\n6 7 1 -1 -1 1 -1 -1 1 Output 1 2 1 6 -1 Note Test case \n    1\n: one optimal\npartition is \n    [1, 2]\n, \n    [-3]\n. \n    1+2>0\n so the value of \n    [1,\n    2]\n is \n    2\n. \n    -3<0\n, so the value of \n    [-3]\n is \n    -1\n.\n\n    2+(-1)=1\n. Test case \n    2\n: the optimal partition is \n    [0, -2, 3]\n,\n\n    [-4]\n, and the sum of values is \n    3+(-1)=2\n.\n\n",
        "cf_contest_id": 1667,
        "cf_index": "B",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3\r\n1 2 -3\r\n4\r\n0 -2 3 -4\r\n5\r\n-1 -2 3 -1 -1\r\n6\r\n-1 2 -3 4 -5 6\r\n7\r\n1 -1 -1 1 -1 -1 1\r\n",
                "1\r\n2\r\n1\r\n6\r\n-1\r\n"
            ]
        ],
        "private_cases": []
    }
]