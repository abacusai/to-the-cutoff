[
    {
        "name": "Letter",
        "description": "A boy Bob likes to draw. Not long ago he bought a rectangular graph (checked)\nsheet with n rows and m columns. Bob shaded some of the squares on the sheet.\nHaving seen his masterpiece, he decided to share it with his elder brother,\nwho lives in Flatland. Now Bob has to send his picture by post, but because of\nthe world economic crisis and high oil prices, he wants to send his creation,\nbut to spend as little money as possible. For each sent square of paper (no\nmatter whether it is shaded or not) Bob has to pay 3.14 burles. Please, help\nBob cut out of his masterpiece a rectangle of the minimum cost, that will\ncontain all the shaded squares. The rectangle's sides should be parallel to\nthe sheet's sides. Input The first line of the input data contains numbers n\nand m (1 \u2264 n, m \u2264 50), n \u2014 amount of lines, and m \u2014 amount of columns on Bob's\nsheet. The following n lines contain m characters each. Character \u00ab.\u00bb stands\nfor a non-shaded square on the sheet, and \u00ab*\u00bb \u2014 for a shaded square. It is\nguaranteed that Bob has shaded at least one square. Output Output the required\nrectangle of the minimum cost. Study the output data in the sample tests to\nunderstand the output format better. Examples Input 6 7 ....... ..***..\n..*.... ..***.. ..*.... ..***.. Output *** *.. *** *.. *** Input 3 3 *** *.*\n*** Output *** *.* ***\n\n",
        "cf_contest_id": 14,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "6 7\r\n.......\r\n..***..\r\n..*....\r\n..***..\r\n..*....\r\n..***..\r\n",
                "***\r\n*..\r\n***\r\n*..\r\n***\r\n"
            ],
            [
                "3 3\r\n***\r\n*.*\r\n***\r\n",
                "***\r\n*.*\r\n***\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n*\r\n",
                "*\r\n"
            ],
            [
                "2 1\r\n*\r\n*\r\n",
                "*\r\n*\r\n"
            ],
            [
                "5 1\r\n.\r\n*\r\n.\r\n.\r\n.\r\n",
                "*\r\n"
            ],
            [
                "1 6\r\n*****.\r\n",
                "*****\r\n"
            ],
            [
                "2 2\r\n..\r\n*.\r\n",
                "*\r\n"
            ],
            [
                "8 2\r\n..\r\n..\r\n..\r\n..\r\n..\r\n*.\r\n..\r\n..\r\n",
                "*\r\n"
            ],
            [
                "50 1\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n*\r\n.\r\n*\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n*\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n",
                "*\r\n.\r\n*\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n*\r\n"
            ],
            [
                "2 1\r\n*\r\n.\r\n",
                "*\r\n"
            ],
            [
                "5 1\r\n*\r\n*\r\n*\r\n*\r\n*\r\n",
                "*\r\n*\r\n*\r\n*\r\n*\r\n"
            ],
            [
                "2 2\r\n*.\r\n..\r\n",
                "*\r\n"
            ],
            [
                "8 2\r\n**\r\n**\r\n**\r\n**\r\n**\r\n**\r\n**\r\n**\r\n",
                "**\r\n**\r\n**\r\n**\r\n**\r\n**\r\n**\r\n**\r\n"
            ],
            [
                "50 1\r\n.\r\n*\r\n*\r\n*\r\n.\r\n.\r\n*\r\n.\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n.\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n.\r\n.\r\n.\r\n.\r\n*\r\n*\r\n.\r\n*\r\n*\r\n.\r\n.\r\n.\r\n.\r\n*\r\n*\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n",
                "*\r\n*\r\n*\r\n.\r\n.\r\n*\r\n.\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n.\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n*\r\n.\r\n.\r\n.\r\n.\r\n*\r\n*\r\n.\r\n*\r\n*\r\n.\r\n.\r\n.\r\n.\r\n*\r\n*\r\n"
            ]
        ]
    }
]