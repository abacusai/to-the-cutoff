[
    {
        "name": "Two Circles",
        "description": "Let's assume that we are given an n \u00d7 m table filled by integers. We'll mark a\ncell in the i-th row and j-th column as (i, j). Thus, (1, 1) is the upper left\ncell of the table and (n, m) is the lower right cell. We'll assume that a\ncircle of radius r with the center in cell (i0, j0) is a set of such cells (i,\nj) that . We'll consider only the circles that do not go beyond the limits of\nthe table, that is, for which r + 1 \u2264 i0 \u2264 n - r and r + 1 \u2264 j0 \u2264 m - r. A\ncircle of radius 3 with the center at (4, 5). Find two such non-intersecting\ncircles of the given radius r that the sum of numbers in the cells that belong\nto these circles is maximum. Two circles intersect if there is a cell that\nbelongs to both circles. As there can be more than one way to choose a pair of\ncircles with the maximum sum, we will also be interested in the number of such\npairs. Calculate the number of unordered pairs of circles, for instance, a\npair of circles of radius 2 with centers at (3, 4) and (7, 7) is the same pair\nas the pair of circles of radius 2 with centers at (7, 7) and (3, 4). Input\nThe first line contains three integers n, m and r (2 \u2264 n, m \u2264 500, r \u2265 0).\nEach of the following n lines contains m integers from 1 to 1000 each \u2014 the\nelements of the table. The rows of the table are listed from top to bottom at\nthe elements in the rows are listed from left to right. It is guaranteed that\nthere is at least one circle of radius r, not going beyond the table limits.\nOutput Print two integers \u2014 the maximum sum of numbers in the cells that are\nlocated into two non-intersecting circles and the number of pairs of non-\nintersecting circles with the maximum sum. If there isn't a single pair of\nnon-intersecting circles, print 0 0. Examples Input 2 2 0 1 2 2 4 Output 6 2\nInput 5 6 1 4 2 1 3 2 6 2 3 2 4 7 2 5 2 2 1 1 3 1 4 3 3 6 4 5 1 4 2 3 2 Output\n34 3 Input 3 3 1 1 2 3 4 5 6 7 8 9 Output 0 0\n\n",
        "cf_contest_id": 363,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2 0\r\n1 2\r\n2 4\r\n",
                "6 2\r\n"
            ],
            [
                "5 6 1\r\n4 2 1 3 2 6\r\n2 3 2 4 7 2\r\n5 2 2 1 1 3\r\n1 4 3 3 6 4\r\n5 1 4 2 3 2\r\n",
                "34 3\r\n"
            ],
            [
                "3 3 1\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n",
                "0 0\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 3 0\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n",
                "2 36\r\n"
            ],
            [
                "3 13 1\r\n1 2 1 2 1 2 1 2 1 2 1 2 1\r\n2 1 2 1 2 1 2 1 2 1 2 1 2\r\n1 2 1 2 1 2 1 2 1 2 1 2 1\r\n",
                "18 10\r\n"
            ],
            [
                "8 8 1\r\n9 10 2 3 10 10 5 9\r\n9 2 5 6 4 8 9 8\r\n6 7 10 7 7 7 7 1\r\n9 2 7 5 2 7 5 2\r\n4 3 4 10 6 9 10 6\r\n7 9 10 10 8 8 8 10\r\n7 2 8 1 3 10 4 1\r\n10 3 10 5 1 9 3 3\r\n",
                "84 1\r\n"
            ],
            [
                "10 5 1\r\n10 9 8 9 1\r\n6 1 6 10 8\r\n3 1 7 4 10\r\n7 8 7 3 9\r\n3 8 9 4 7\r\n6 7 5 9 3\r\n8 3 10 1 5\r\n6 4 10 5 3\r\n1 7 3 8 6\r\n4 8 4 5 7\r\n",
                "77 1\r\n"
            ],
            [
                "10 10 0\r\n6 5 7 2 5 6 5 8 2 5\r\n3 5 7 5 7 9 9 4 6 3\r\n2 2 9 7 6 4 5 8 1 10\r\n5 6 10 3 5 9 8 10 10 1\r\n9 2 4 9 6 1 6 1 4 8\r\n6 7 2 3 7 4 8 10 5 10\r\n6 9 1 6 6 8 7 3 4 9\r\n6 6 3 2 3 10 5 7 6 5\r\n1 10 10 1 2 5 2 10 6 3\r\n2 2 9 2 5 6 7 6 1 5\r\n",
                "20 45\r\n"
            ],
            [
                "10 10 2\r\n2 7 1 10 6 5 7 9 6 2\r\n2 2 7 2 4 10 10 2 9 4\r\n6 1 6 8 5 9 4 7 3 8\r\n9 3 10 3 9 5 6 1 7 8\r\n2 1 10 3 1 9 2 7 4 4\r\n8 8 1 1 1 4 1 7 1 5\r\n3 6 9 1 9 1 6 7 6 6\r\n4 5 9 6 7 10 10 8 10 2\r\n1 10 3 2 8 5 4 10 3 5\r\n3 2 6 1 9 4 5 4 7 6\r\n",
                "178 1\r\n"
            ],
            [
                "10 10 3\r\n8 3 8 6 1 9 7 3 7 10\r\n4 9 3 7 10 1 5 9 9 10\r\n8 8 10 2 9 8 6 1 1 7\r\n10 1 2 6 3 10 4 2 2 8\r\n3 3 1 2 1 4 8 10 10 4\r\n4 2 1 9 3 6 5 8 3 5\r\n2 8 4 1 2 9 2 7 1 2\r\n3 5 4 5 5 8 9 7 10 5\r\n7 9 3 6 4 9 10 9 6 8\r\n3 7 5 6 10 4 4 2 10 5\r\n",
                "0 0\r\n"
            ],
            [
                "10 10 1\r\n2 10 6 5 8 1 9 6 7 1\r\n7 10 6 10 3 6 5 5 4 10\r\n3 3 2 3 3 3 7 3 6 7\r\n8 6 2 9 9 8 7 6 1 5\r\n2 2 3 7 2 9 8 4 9 9\r\n10 9 3 5 8 3 10 1 5 3\r\n6 9 6 8 1 4 8 10 5 6\r\n1 5 9 2 4 10 4 8 4 6\r\n7 9 9 3 2 9 1 9 3 8\r\n4 6 4 7 4 4 9 1 3 2\r\n",
                "74 2\r\n"
            ],
            [
                "8 7 0\r\n6 4 7 4 2 3 5\r\n3 5 6 3 10 9 1\r\n1 9 3 5 2 1 2\r\n9 1 5 10 5 8 8\r\n1 7 1 7 9 8 8\r\n1 3 9 1 10 3 9\r\n8 4 3 3 5 6 5\r\n6 10 7 6 3 8 2\r\n",
                "20 6\r\n"
            ],
            [
                "100 2 0\r\n2 3\r\n3 2\r\n1 1\r\n2 3\r\n2 3\r\n1 3\r\n1 1\r\n3 2\r\n1 2\r\n1 2\r\n2 2\r\n1 1\r\n1 3\r\n2 2\r\n3 1\r\n3 2\r\n3 1\r\n1 3\r\n2 2\r\n3 2\r\n1 3\r\n2 2\r\n3 2\r\n3 2\r\n1 2\r\n3 1\r\n2 3\r\n1 3\r\n3 3\r\n2 3\r\n1 2\r\n3 2\r\n3 1\r\n2 3\r\n2 2\r\n2 3\r\n2 1\r\n1 3\r\n1 1\r\n3 2\r\n3 3\r\n1 3\r\n3 3\r\n2 1\r\n3 1\r\n2 1\r\n1 3\r\n3 1\r\n2 1\r\n1 1\r\n1 1\r\n3 3\r\n3 3\r\n2 3\r\n3 3\r\n3 1\r\n1 1\r\n2 1\r\n1 1\r\n1 2\r\n3 2\r\n3 1\r\n1 1\r\n1 3\r\n1 3\r\n1 2\r\n2 3\r\n3 1\r\n3 1\r\n1 2\r\n2 2\r\n1 2\r\n2 3\r\n3 3\r\n1 2\r\n3 3\r\n1 1\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n3 2\r\n1 3\r\n3 2\r\n3 2\r\n1 2\r\n2 3\r\n2 3\r\n3 2\r\n1 3\r\n1 1\r\n2 3\r\n3 3\r\n2 3\r\n1 2\r\n3 3\r\n2 2\r\n2 2\r\n3 1\r\n2 2\r\n",
                "6 2415\r\n"
            ],
            [
                "2 100 0\r\n3 1 3 2 2 1 2 2 3 3 1 3 2 2 3 3 1 2 2 1 3 2 1 2 2 1 1 2 3 2 2 3 2 1 1 3 1 3 1 1 1 1 2 3 1 3 1 3 2 1 3 2 3 2 1 3 2 2 3 2 2 2 2 2 3 3 2 3 3 3 3 3 3 2 2 2 3 3 2 2 3 2 3 1 3 2 2 2 2 2 3 1 3 3 1 3 1 2 2 3\r\n2 2 1 3 1 3 2 1 3 2 3 1 3 2 2 2 3 1 3 1 1 2 1 3 1 1 2 3 3 2 3 2 3 3 1 1 3 3 2 3 1 1 3 1 1 1 3 2 1 1 3 1 2 2 1 2 3 2 2 3 2 2 1 1 2 1 1 3 3 2 3 1 1 1 2 3 1 1 3 3 1 3 2 2 1 2 3 3 2 1 1 1 1 1 3 2 1 2 3 1\r\n",
                "6 2346\r\n"
            ]
        ]
    }
]