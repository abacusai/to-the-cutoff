[
    {
        "name": "BRT Contract ",
        "description": "In the last war of PMP, he defeated all his opponents and advanced to the\nfinal round. But after the end of semi-final round evil attacked him from\nbehind and killed him! God bless him. Before his death, PMP signed a contract\nwith the bus rapid transit (BRT) that improves public transportations by\noptimizing time of travel estimation. You should help PMP finish his last\ncontract. Each BRT line is straight line that passes n intersecting on its\nways. At each intersection there is traffic light that periodically cycles\nbetween green and red. It starts illuminating green at time zero. During the\ngreen phase which lasts for g seconds, traffic is allowed to proceed. After\nthe green phase the light changes to red and remains in this color for r\nseconds. During the red phase traffic is prohibited from proceeding. If a\nvehicle reaches the intersection exactly at a time when the light changes to\nred, it should stop, but the vehicle is clear to proceed if the light has just\nchanged to green. All traffic lights have the same timing and are\nsynchronized. In other words the period of red (and green) phase is the same\nfor all of traffic lights and they all start illuminating green at time zero.\nThe BRT Company has calculated the time that a bus requires to pass each road\nsegment. A road segment is the distance between two consecutive traffic lights\nor between a traffic light and source (or destination) station. More precisely\nBRT specialists provide n + 1 positive integers li, the time in seconds that a\nbus needs to traverse i-th road segment in the path from source to\ndestination. The l1 value denotes the time that a bus needs to pass the\ndistance between source and the first intersection. The ln + 1 value denotes\nthe time between the last intersection and destination. In one day q buses\nleave the source station. The i-th bus starts from source at time ti (in\nseconds). Decision makers of BRT Company want to know what time a bus gets to\ndestination? The bus is considered as point. A bus will always move if it can.\nThe buses do not interfere with each other. Input The first line of input\ncontains three space-separated positive integers n, g, r (1 \u2264 n \u2264 10^5, 2 \u2264 g\n+ r \u2264 10^9) \u2014 the number of intersections, duration of green phase and\nduration of red phase. Next line contains n + 1 integers li (1 \u2264 li \u2264 10^9) \u2014\nthe time to pass the i-th road segment in the path from source to destination.\nNext line contains a single integer q (1 \u2264 q \u2264 10^5) \u2014 the number of buses in\na day. The i-th of next q lines contains a single integer ti (1 \u2264 ti \u2264 10^9) \u2014\nthe time when i-th bus leaves the source station. Output In the i-th line of\noutput you should print a single integer \u2014 the time that i-th bus gets to\ndestination. Please do not use the \nintegers in \u0421++. It is preferred to use cin, cout streams or the \nspecifier. Examples Input 1 3 2 5 2 5 1 2 3 4 5 Output 8 9 12 12 12 Input 5 3\n7 10 1 1 8 900000005 1000000000 3 1 10 1000000000 Output 1900000040 1900000040\n2900000030 Note In the first sample, buses #1, #2 and #5 will reach the\ndestination without waiting behind the red light. But buses #3 and #4 should\nwait. In the second sample, first bus should wait at third, fourth and fifth\nintersections. Second and third buses should wait only at the fifth\nintersection.\n\n",
        "cf_contest_id": 187,
        "cf_index": "D",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 3 2\r\n5 2\r\n5\r\n1\r\n2\r\n3\r\n4\r\n5\r\n",
                "8\r\n9\r\n12\r\n12\r\n12\r\n"
            ],
            [
                "5 3 7\r\n10 1 1 8 900000005 1000000000\r\n3\r\n1\r\n10\r\n1000000000\r\n",
                "1900000040\r\n1900000040\r\n2900000030\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 2 3\r\n19 42 23 36 49 18\r\n3\r\n34\r\n24\r\n20\r\n",
                "228\r\n218\r\n213\r\n"
            ],
            [
                "5 3 3\r\n24 29 19 27 13 18\r\n3\r\n2\r\n17\r\n15\r\n",
                "133\r\n151\r\n151\r\n"
            ],
            [
                "5 20 3\r\n45 43 50 40 4 19\r\n3\r\n42\r\n41\r\n26\r\n",
                "243\r\n242\r\n230\r\n"
            ]
        ]
    }
]