[
    {
        "name": "Making Anti-Palindromes",
        "description": "You are given a string \n    s\n, consisting of lowercase English letters. In\none operation, you are allowed to swap any two characters of the string\n\n    s\n. A string \n    s\n of length \n    n\n is called an anti-palindrome, if\n\n    s[i] \n     s[n - i + 1]\n for every \n    i\n (\n    1 \n    \u2264 i \n    \u2264 n\n). For\nexample, the strings \"codeforces\", \"string\" are anti-palindromes, but the\nstrings \"abacaba\", \"abc\", \"test\" are not. Determine the minimum number of\noperations required to make the string \n    s\n an anti-palindrome, or output\n\n    -1\n, if this is not possible. Input The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The\ndescription of the test cases follows. Each test case consists of two lines.\nThe first line contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n) \u2014 the length of the string \n    s\n. The second line contains the\nstring \n    s\n, consisting of \n    n\n lowercase English letters. The sum of\n\n    n\n over all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For\neach test case, output a single integer \u2014 the minimum number of operations\nrequired to make the string \n    s\n an anti-palindrome, or \n    -1\n if this is\nnot possible. Example Input 10 10 codeforces 3 abc 10 taarrrataa 10 dcbdbdcccc\n4 wwww 12 cabbaccabaac 10 aadaaaaddc 14 aacdaaaacadcdc 6 abccba 12\ndcbcaebacccd Output 0 -1 1 1 -1 3 -1 2 2 2 Note In the first test case, the\nstring \"codeforces\" is already an anti-palindrome, so the answer is \n    0\n.\nIn the second test case, it can be shown that the string \"abc\" cannot be\ntransformed into an anti-palindrome by performing the allowed operations, so\nthe answer is \n    -1\n. In the third test case, it is enough to swap the\nsecond and the fifth characters of the string \"taarrrataa\", and the new string\n\"trararataa\" will be an anti-palindrome, so the answer is \n    1\n.\n\n",
        "cf_contest_id": 1822,
        "cf_index": "E",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10\r\n10\r\ncodeforces\r\n3\r\nabc\r\n10\r\ntaarrrataa\r\n10\r\ndcbdbdcccc\r\n4\r\nwwww\r\n12\r\ncabbaccabaac\r\n10\r\naadaaaaddc\r\n14\r\naacdaaaacadcdc\r\n6\r\nabccba\r\n12\r\ndcbcaebacccd\r\n",
                "0\r\n-1\r\n1\r\n1\r\n-1\r\n3\r\n-1\r\n2\r\n2\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n16\r\naaabbbccccbbbaaa\r\n",
                "4\r\n"
            ],
            [
                "1\r\n12\r\naabbccccbbaa\r\n",
                "3\r\n"
            ],
            [
                "1\r\n12\r\naabbddddbbaa\r\n",
                "3\r\n"
            ],
            [
                "1\r\n58\r\nbbaaaaccaabccacbcaaccccacacbacbcbcacabaaabbbccabaacaaccbca\r\n",
                "7\r\n"
            ],
            [
                "1\r\n18\r\naaabbbccccccbbbaaa\r\n",
                "5\r\n"
            ],
            [
                "1\r\n18\r\nxxxyyyzzzzzzyyyxxx\r\n",
                "5\r\n"
            ],
            [
                "1\r\n32\r\naabcabcbbcacbcabaccbcacbccbcbbab\r\n",
                "5\r\n"
            ],
            [
                "1\r\n18\r\neeebbbccccccbbbeee\r\n",
                "5\r\n"
            ],
            [
                "1\r\n18\r\nfffbbbccccccbbbfff\r\n",
                "5\r\n"
            ],
            [
                "1\r\n18\r\njjjbbbccccccbbbjjj\r\n",
                "5\r\n"
            ],
            [
                "1\r\n34\r\naaaaaaabbbbbbccccccccbbbbbbaaaaaaa\r\n",
                "9\r\n"
            ],
            [
                "1\r\n246\r\nskuezpagiasjzmwgljpnbpjhygwwclkcsmpmxmsllvdqzozgcpbtfrcpqmywxuayoexphdqonilsxtefqlgzqvxweitzplnbyksnwsyiolrvalyrestwyyhdbacllfcmuvedjehjvvontrnawizoyuurxpuevflipyzuyszmcgxfnpsxxuenmhbyskdmuzpivivpghddvwoewizqgcyjtbxypfkuvvegefqbbsuzspdrttiunzehhn\r\n",
                "3\r\n"
            ],
            [
                "1\r\n18\r\nzzzbbbccccccbbbzzz\r\n",
                "5\r\n"
            ],
            [
                "1\r\n18\r\npppbbbccccccbbbppp\r\n",
                "5\r\n"
            ],
            [
                "1\r\n18\r\nqqqbbbccccccbbbqqq\r\n",
                "5\r\n"
            ],
            [
                "1\r\n18\r\nrrrbbbccccccbbbrrr\r\n",
                "5\r\n"
            ],
            [
                "1\r\n200\r\nimqmaxbrinzhmjddpkehecovpcmjolhbqqqowktadpoyxrqdzevylyqxgmluovhoymfsrdwqydhjeouiofgaadvkeomwnpomawfoimqmaxbrinzhmjddpkehecovpcmjolhbqqqowktadpoyxrqdzevylyqxgmluovhoymfsrdwqydhjeouiofgaadvkeomwnpomawfo\r\n",
                "3\r\n"
            ],
            [
                "1\r\n20\r\naaabbbccccccccbbbaaa\r\n",
                "5\r\n"
            ],
            [
                "1\r\n20\r\nababababccccbabababa\r\n",
                "5\r\n"
            ],
            [
                "18\r\n12\r\naabbccccbbaa\r\n12\r\naabbddddbbaa\r\n12\r\naabbeeeebbaa\r\n12\r\naabcbccbcbaa\r\n12\r\naabccbbccbaa\r\n12\r\naabdbddbdbaa\r\n12\r\naabddbbddbaa\r\n12\r\naabebeebebaa\r\n12\r\naabeebbeebaa\r\n12\r\naacbbccbbcaa\r\n12\r\naacbcbbcbcaa\r\n12\r\naaccbbbbccaa\r\n12\r\naaccddddccaa\r\n12\r\naacceeeeccaa\r\n12\r\naacdcddcdcaa\r\n12\r\naacddccddcaa\r\n12\r\naaceceececaa\r\n12\r\naaceecceecaa\r\n",
                "3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n"
            ],
            [
                "1\r\n50\r\naaaaaaaabbbbbbbbccccccccccccccccccbbbbbbbbaaaaaaaa\r\n",
                "13\r\n"
            ],
            [
                "10\r\n8\r\nbeaabadd\r\n16\r\ncdcabababbbebdca\r\n32\r\ncddcbebccaeadedbdacddaebddddddba\r\n16\r\neebbaddaedaeddcd\r\n16\r\nbcdaddbdbbdedbbc\r\n36\r\needccdccebbbbeedeaeedcabbceeadceeddb\r\n16\r\naecdcdabdacaebac\r\n16\r\nbaaceccebbeedcce\r\n40\r\nabeccedebecddabdbaadcbceabeeddabebddbdee\r\n36\r\nbadbbceceaeacacaebbcbcdccbadaaddcbcd\r\n",
                "1\r\n1\r\n2\r\n1\r\n1\r\n3\r\n1\r\n1\r\n2\r\n2\r\n"
            ],
            [
                "10\r\n28\r\naccaebbeedbdbbdadaaaabadedce\r\n28\r\neccdceadceacadedbbddcdadadad\r\n36\r\neaeeedbddbdcbaebbeadcaccbccbcaeeabdb\r\n20\r\nbcccabbaaeebecdceaab\r\n12\r\nbbedaceadaba\r\n40\r\ndcabdcbedaddecaeaedddddaeabebbacecdeeede\r\n12\r\nbebaebcabbde\r\n8\r\nbacceadb\r\n32\r\nedbaeaddcbebdaedaabdbcbbbdcceded\r\n36\r\naecdeccdbddbebdbcbccdaddeacecdcccecd\r\n",
                "2\r\n0\r\n1\r\n1\r\n2\r\n4\r\n1\r\n1\r\n2\r\n2\r\n"
            ],
            [
                "1\r\n30\r\naaaaabbbbbccccccccccbbbbbaaaaa\r\n",
                "8\r\n"
            ]
        ]
    }
]