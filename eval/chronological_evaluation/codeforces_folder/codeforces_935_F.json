[
    {
        "name": "Fafa and Array",
        "description": "Fafa has an array A of n positive integers, the function f(A) is defined as .\nHe wants to do q queries of two types: 1 l r x \u2014 find the maximum possible\nvalue of f(A), if x is to be added to one element in the range [l, r]. You can\nchoose to which element to add x. 2 l r x \u2014 increase all the elements in the\nrange [l, r] by value x. Note that queries of type 1 don't affect the array\nelements. Input The first line contains one integer n (3 \u2264 n \u2264 10^5) \u2014 the\nlength of the array. The second line contains n positive integers a1, a2, ...,\nan (0 < ai \u2264 10^9) \u2014 the array elements. The third line contains an integer q\n(1 \u2264 q \u2264 10^5) \u2014 the number of queries. Then q lines follow, line i describes\nthe i-th query and contains four integers ti li ri xi . It is guaranteed that\nat least one of the queries is of type 1. Output For each query of type 1,\nprint the answer to the query. Examples Input 5 1 1 1 1 1 5 1 2 4 1 2 2 3 1 2\n4 4 2 2 3 4 1 1 3 3 2 Output 2 8 Input 5 1 2 3 4 5 4 1 2 4 2 2 2 4 1 2 3 4 1 1\n2 4 2 Output 6 10\n\n",
        "cf_contest_id": 935,
        "cf_index": "F",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 1 1 1 1\r\n5\r\n1 2 4 1\r\n2 2 3 1\r\n2 4 4 2\r\n2 3 4 1\r\n1 3 3 2\r\n",
                "2\r\n8\r\n"
            ],
            [
                "5\r\n1 2 3 4 5\r\n4\r\n1 2 4 2\r\n2 2 4 1\r\n2 3 4 1\r\n1 2 4 2\r\n",
                "6\r\n10\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n1000 100 1 100 10000\r\n4\r\n1 2 4 10\r\n1 2 4 1000\r\n1 2 4 100\r\n1 2 4 59\r\n",
                "10998\r\n12602\r\n10998\r\n10998\r\n"
            ],
            [
                "4\r\n4 3 2 1\r\n1\r\n1 2 3 2\r\n",
                "5\r\n"
            ],
            [
                "7\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n11\r\n2 2 3 1000000000\r\n2 5 6 1000000000\r\n2 2 2 1000000000\r\n2 6 6 1000000000\r\n1 2 6 1000000000\r\n1 2 6 1\r\n2 2 6 1000000000\r\n1 2 6 1000000000\r\n1 2 6 1\r\n1 3 5 1000000000\r\n1 4 4 1000000000\r\n",
                "10000000000\r\n8000000002\r\n12000000000\r\n10000000002\r\n10000000000\r\n8000000000\r\n"
            ],
            [
                "7\r\n20 10 3 1 7 10 20\r\n25\r\n1 4 4 2\r\n1 4 4 3\r\n1 4 4 4\r\n1 4 4 5\r\n1 4 4 7\r\n1 4 4 100\r\n1 2 6 2\r\n1 2 6 3\r\n1 2 6 4\r\n1 2 6 5\r\n1 2 6 7\r\n1 2 6 100\r\n2 3 3 4\r\n1 4 4 2\r\n1 4 4 3\r\n1 4 4 4\r\n1 4 4 5\r\n1 4 4 7\r\n1 4 4 100\r\n1 2 6 2\r\n1 2 6 3\r\n1 2 6 4\r\n1 2 6 5\r\n1 2 6 7\r\n1 2 6 100\r\n",
                "34\r\n34\r\n34\r\n34\r\n36\r\n222\r\n38\r\n38\r\n40\r\n42\r\n46\r\n232\r\n34\r\n32\r\n30\r\n28\r\n28\r\n214\r\n38\r\n38\r\n40\r\n42\r\n46\r\n232\r\n"
            ],
            [
                "3\r\n1 2 3\r\n3\r\n1 2 2 3\r\n2 2 2 5\r\n1 2 2 3\r\n",
                "6\r\n16\r\n"
            ],
            [
                "3\r\n5 1 10\r\n15\r\n1 2 2 1\r\n1 2 2 2\r\n1 2 2 3\r\n1 2 2 4\r\n1 2 2 5\r\n1 2 2 6\r\n1 2 2 7\r\n1 2 2 8\r\n1 2 2 9\r\n1 2 2 10\r\n1 2 2 11\r\n1 2 2 12\r\n1 2 2 13\r\n1 2 2 14\r\n1 2 2 1000000000\r\n",
                "11\r\n9\r\n7\r\n5\r\n5\r\n5\r\n5\r\n5\r\n5\r\n7\r\n9\r\n11\r\n13\r\n15\r\n1999999987\r\n"
            ],
            [
                "8\r\n1 3 5 7 8 10 12 14\r\n15\r\n1 3 7 1\r\n1 3 7 2\r\n1 3 7 3\r\n1 3 7 4\r\n2 2 3 3\r\n1 3 7 1\r\n1 3 7 2\r\n1 3 7 3\r\n1 3 7 4\r\n2 2 2 4\r\n1 3 7 1\r\n1 3 7 2\r\n1 3 7 3\r\n1 3 7 4\r\n2 2 2 4\r\n",
                "13\r\n15\r\n17\r\n19\r\n17\r\n19\r\n21\r\n23\r\n19\r\n19\r\n21\r\n23\r\n"
            ],
            [
                "6\r\n10 7 6 6 8 11\r\n5\r\n1 2 5 1\r\n1 2 5 2\r\n1 2 5 3\r\n1 2 5 4\r\n1 3 4 2\r\n",
                "9\r\n11\r\n13\r\n15\r\n11\r\n"
            ],
            [
                "30\r\n1000 990 980 970 960 950 940 930 920 910 900 890 880 870 869 870 880 890 900 910 920 930 940 950 960 970 980 990 1000 1010\r\n1\r\n1 2 29 1000\r\n",
                "2268\r\n"
            ]
        ]
    }
]