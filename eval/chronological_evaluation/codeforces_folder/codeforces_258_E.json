[
    {
        "name": "Little Elephant and Tree",
        "description": "The Little Elephant loves trees very much, he especially loves root trees.\nHe's got a tree consisting of n nodes (the nodes are numbered from 1 to n),\nwith root at node number 1. Each node of the tree contains some list of\nnumbers which initially is empty. The Little Elephant wants to apply m\noperations. On the i-th operation (1 \u2264 i \u2264 m) he first adds number i to lists\nof all nodes of a subtree with the root in node number ai, and then he adds\nnumber i to lists of all nodes of the subtree with root in node bi. After\napplying all operations the Little Elephant wants to count for each node i\nnumber ci \u2014 the number of integers j (1 \u2264 j \u2264 n; j \u2260 i), such that the lists\nof the i-th and the j-th nodes contain at least one common number. Help the\nLittle Elephant, count numbers ci for him. Input The first line contains two\nintegers n and m (1 \u2264 n, m \u2264 10^5) \u2014 the number of the tree nodes and the\nnumber of operations. Each of the following n - 1 lines contains two space-\nseparated integers, ui and vi (1 \u2264 ui, vi \u2264 n, ui \u2260 vi), that mean that there\nis an edge between nodes number ui and vi. Each of the following m lines\ncontains two space-separated integers, ai and bi (1 \u2264 ai, bi \u2264 n, ai \u2260 bi),\nthat stand for the indexes of the nodes in the i-th operation. It is\nguaranteed that the given graph is an undirected tree. Output In a single line\nprint n space-separated integers \u2014 c1, c2, ..., cn. Examples Input 5 1 1 2 1 3\n3 5 3 4 2 3 Output 0 3 3 3 3 Input 11 3 1 2 2 3 2 4 1 5 5 6 5 7 5 8 6 9 8 10 8\n11 2 9 3 6 2 8 Output 0 6 7 6 0 2 0 5 4 5 5\n\n",
        "cf_contest_id": 258,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 1\r\n1 2\r\n1 3\r\n3 5\r\n3 4\r\n2 3\r\n",
                "0 3 3 3 3 \r\n"
            ],
            [
                "11 3\r\n1 2\r\n2 3\r\n2 4\r\n1 5\r\n5 6\r\n5 7\r\n5 8\r\n6 9\r\n8 10\r\n8 11\r\n2 9\r\n3 6\r\n2 8\r\n",
                "0 6 7 6 0 2 0 5 4 5 5 \r\n"
            ]
        ],
        "private_cases": []
    }
]