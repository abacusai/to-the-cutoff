[
    {
        "name": "Dreamoon and Strings",
        "description": "Dreamoon has a string s and a pattern string p. He first removes exactly x\ncharacters from s obtaining string s' as a result. Then he calculates that is\ndefined as the maximal number of non-overlapping substrings equal to p that\ncan be found in s'. He wants to make this number as big as possible. More\nformally, let's define as maximum value of over all s' that can be obtained by\nremoving exactly x characters from s. Dreamoon wants to know for all x from 0\nto |s| where |s| denotes the length of string s. Input The first line of the\ninput contains the string s (1 \u2264 |s| \u2264 2 000). The second line of the input\ncontains the string p (1 \u2264 |p| \u2264 500). Both strings will only consist of lower\ncase English letters. Output Print |s| + 1 space-separated integers in a\nsingle line representing the for all x from 0 to |s|. Examples Input aaaaa aa\nOutput 2 2 1 1 0 0 Input axbaxxb ab Output 0 1 1 2 1 1 0 0 Note For the first\nsample, the corresponding optimal values of s' after removal 0 through |s| = 5\ncharacters from s are \"aaaaa\", \"aaaa\", \"aaa\", \"aa\", \"a\", \"\". For the second\nsample, possible corresponding optimal values of s' are \"axbaxxb\", \"abaxxb\",\n\"axbab\", \"abab\", \"aba\", \"ab\", \"a\", \"\".\n\n",
        "cf_contest_id": 476,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "aaaaa\r\naa\r\n",
                "2 2 1 1 0 0\n"
            ],
            [
                "axbaxxb\r\nab\r\n",
                "0 1 1 2 1 1 0 0\n"
            ]
        ],
        "private_cases": [
            [
                "aabb\r\nab\r\n",
                "1 1 1 0 0\n"
            ],
            [
                "aaaaaaaaaaaaaaa\r\na\r\n",
                "15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0\n"
            ],
            [
                "aaaaaaaaaaa\r\nb\r\n",
                "0 0 0 0 0 0 0 0 0 0 0 0\n"
            ],
            [
                "ababababababababa\r\naba\r\n",
                "4 4 4 4 4 4 3 3 3 2 2 2 1 1 1 0 0 0\n"
            ],
            [
                "axxbaxxbaxxb\r\nab\r\n",
                "0 0 1 1 2 2 3 2 2 1 1 0 0\n"
            ],
            [
                "axaxxbaxabxbaxxbxb\r\nab\r\n",
                "1 1 2 2 3 3 3 3 3 3 3 3 3 2 2 1 1 0 0\n"
            ],
            [
                "ababcc\r\nabc\r\n",
                "1 1 1 1 0 0 0\n"
            ],
            [
                "a\r\na\r\n",
                "1 0\n"
            ],
            [
                "a\r\nb\r\n",
                "0 0\n"
            ],
            [
                "a\r\naa\r\n",
                "0 0\n"
            ],
            [
                "a\r\nab\r\n",
                "0 0\n"
            ],
            [
                "a\r\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\r\n",
                "0 0\n"
            ],
            [
                "a\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n",
                "0 0\n"
            ],
            [
                "abxxxaxbxaxxxba\r\naba\r\n",
                "0 0 1 1 1 1 2 2 2 2 1 1 1 0 0 0\n"
            ]
        ]
    }
]