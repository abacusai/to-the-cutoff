[
    {
        "name": "Frequency Problem (Hard Version)",
        "description": "This is the hard version of the problem. The difference between the versions\nis in the constraints on the array elements. You can make hacks only if all\nversions of the problem are solved. You are given an array \n    [a_1, a_2,\n    \n    \u2026, a_n]\n. Your goal is to find the length of the longest subarray of\nthis array such that the most frequent value in it is not unique. In other\nwords, you are looking for a subarray such that if the most frequent value\noccurs \n    f\n times in this subarray, then at least \n    2\n different values\nshould occur exactly \n    f\n times. An array \n    c\n is a subarray of an array\n\n    d\n if \n    c\n can be obtained from \n    d\n by deletion of several\n(possibly, zero or all) elements from the beginning and several (possibly,\nzero or all) elements from the end. Input The first line contains a single\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 200\n     000\n) \u2014 the length of the array.\nThe second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1\n    \n    \u2264 a_i \n    \u2264 n\n) \u2014 elements of the array. Output You should output\nexactly one integer \u2014 the length of the longest subarray of the array whose\nmost frequent value is not unique. If there is no such subarray, output\n\n    0\n. Examples Input 7 1 1 2 2 3 3 3 Output 6 Input 10 1 1 1 5 4 1 3 1 2 2\nOutput 7 Input 1 1 Output 0 Note In the first sample, the subarray \n    [1, 1,\n    2, 2, 3, 3]\n is good, but \n    [1, 1, 2, 2, 3, 3, 3]\n isn't: in the latter\nthere are \n    3\n occurrences of number \n    3\n, and no other element appears\n\n    3\n times.\n\n",
        "cf_contest_id": 1446,
        "cf_index": "D2",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n1 1 2 2 3 3 3\r\n",
                "6\r\n"
            ],
            [
                "10\r\n1 1 1 5 4 1 3 1 2 2\r\n",
                "7\r\n"
            ],
            [
                "1\r\n1\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "20\r\n13 16 6 13 19 7 18 5 17 8 11 13 19 11 19 18 18 13 14 1\r\n",
                "19\r\n"
            ],
            [
                "20\r\n15 12 19 6 5 11 2 5 18 3 17 15 17 7 9 18 19 17 18 15\r\n",
                "20\r\n"
            ],
            [
                "20\r\n9 2 12 10 2 9 13 14 11 16 9 1 9 13 5 11 12 19 20 1\r\n",
                "14\r\n"
            ],
            [
                "100\r\n92 53 86 41 77 68 80 54 17 96 89 53 64 55 2 80 28 58 77 43 70 91 71 71 78 3 25 2 15 47 60 70 95 19 47 58 57 47 91 2 23 80 86 98 98 98 57 98 98 25 98 98 57 98 98 98 98 98 25 98 98 98 98 98 57 98 98 25 98 98 57 98 98 57 98 98 25 98 98 34 98 98 34 98 98 25 98 98 24 98 98 25 89 34 76 71 91 92 22 13\r\n",
                "47\r\n"
            ],
            [
                "100\r\n77 95 91 95 77 54 91 77 77 42 63 48 97 85 54 63 42 70 42 97 75 77 93 64 56 88 91 85 85 64 64 88 54 70 6 3 20 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 18 48 85 75 97 20 54 64 20 85 56 77 75 42\r\n",
                "41\r\n"
            ],
            [
                "100\r\n94 77 52 53 56 88 23 46 33 28 11 96 68 84 4 91 57 20 98 75 89 83 22 67 80 16 54 41 27 34 62 69 5 50 32 42 45 55 36 59 60 18 37 63 90 1 64 7 81 29 39 93 82 48 43 61 17 66 8 79 2 26 6 44 31 86 40 73 3 65 12 78 74 25 87 95 24 92 13 58 85 76 100 70 38 71 10 19 97 14 47 72 99 35 9 21 51 49 30 15\r\n",
                "100\r\n"
            ],
            [
                "100\r\n6 20 18 88 48 85 77 70 93 90 91 54 97 75 3 56 63 95 64 42 76 19 52 45 83 96 7 60 71 58 34 2 98 66 69 43 67 46 89 13 81 1 59 8 10 26 14 86 99 4 41 32 92 5 84 65 62 50 36 74 16 73 35 27 9 38 72 23 15 17 30 33 11 53 24 82 79 57 49 21 68 22 39 47 25 61 51 31 6 37 78 94 44 100 29 87 12 55 80 40\r\n",
                "99\r\n"
            ],
            [
                "100\r\n53 53 53 53 53 53 53 53 53 53 53 53 53 53 53 53 53 53 53 53 88 88 88 88 88 88 88 88 88 88 88 88 88 88 88 28 28 28 28 28 28 28 28 28 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 57 57 57 57 57 57 57 57 57 57 57 57 57 96 57 94 94 94 94 94 94 94 94 94 94 94 22 22 22 22 22 22 22 22 22 22 22 22 22 22\r\n",
                "96\r\n"
            ],
            [
                "100\r\n44 80 26 88 24 37 4 96 23 25 5 5 7 41 54 35 25 57 88 91 20 78 98 64 57 60 86 91 67 63 32 100 91 34 26 41 34 98 5 80 3 57 57 25 42 98 25 88 5 5 24 67 98 34 47 84 62 31 71 91 98 57 35 57 24 34 13 79 2 73 38 57 73 5 98 100 4 23 42 7 25 34 18 91 25 26 53 32 57 25 91 8 4 16 23 91 34 53 42 98\r\n",
                "82\r\n"
            ],
            [
                "100\r\n92 42 58 62 24 59 62 100 92 62 54 100 62 82 91 62 100 100 62 100 100 62 92 92 92 62 92 92 62 92 62 92 88 100 100 36 62 92 16 92 62 100 62 92 35 62 100 92 92 62 93 100 100 62 76 100 62 62 92 62 92 50 100 8 7 62 100 18 92 62 92 92 100 62 32 92 92 62 37 76 100 39 62 92 62 41 62 62 19 57 100 37 92 99 100 47 62 92 62 62\r\n",
                "79\r\n"
            ],
            [
                "20\r\n2 3 5 4 3 2 1 2 2 2 2 3 2 5 2 1 1 4 5 3\r\n",
                "9\r\n"
            ]
        ]
    }
]