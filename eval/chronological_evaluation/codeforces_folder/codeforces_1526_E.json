[
    {
        "name": "Oolimry and Suffix Array",
        "description": "Once upon a time, Oolimry saw a suffix array. He wondered how many strings can\nproduce this suffix array. More formally, given a suffix array of length\n\n    n\n and having an alphabet size \n    k\n, count the number of strings that\nproduce such a suffix array. Let \n    s\n be a string of length \n    n\n. Then\nthe \n    i\n-th suffix of \n    s\n is the substring \n    s[i \n    \u2026 n-1]\n. A\nsuffix array is the array of integers that represent the starting indexes of\nall the suffixes of a given string, after the suffixes are sorted in the\nlexicographic order. For example, the suffix array of oolimry is\n\n    [3,2,4,1,0,5,6]\n as the array of sorted suffixes is\n\n    [\n    ,\n    ,\n    ,\n    ,\n    ,\n    ,\n    ]\n.\nA string \n    x\n is lexicographically smaller than string \n    y\n, if either\n\n    x\n is a prefix of \n    y\n (and \n    x\n    \u2260 y\n), or there exists such\n\n    i\n that \n    x_i < y_i\n, and for any \n    1\n    \u2264 j < i\n , \n    x_j =\n    y_j\n. Input The first line contain 2 integers \n    n\n and \n    k\n (\n    1\n    \n    \u2264 n \n    \u2264 200000,1 \n    \u2264 k \n    \u2264 200000\n) \u2014 the length of the suffix\narray and the alphabet size respectively. The second line contains \n    n\n\nintegers \n    s_0, s_1, s_2, \n    \u2026, s_n-1\n (\n    0 \n    \u2264 s_i \n    \u2264\n    n-1\n) where \n    s_i\n is the \n    i\n-th element of the suffix array i.e. the\nstarting position of the \n    i\n-th lexicographically smallest suffix. It is\nguaranteed that for all \n    0 \n    \u2264 i< j \n    \u2264 n-1\n, \n    s_i \n    \u2260 s_j\n.\nOutput Print how many strings produce such a suffix array. Since the number\ncan be very large, print the answer modulo \n    998244353\n. Examples Input 3 2\n0 2 1 Output 1 Input 5 1 0 1 2 3 4 Output 0 Input 6 200000 0 1 2 3 4 5 Output\n822243495 Input 7 6 3 2 4 1 0 5 6 Output 36 Note In the first test case, \"abb\"\nis the only possible solution. In the second test case, it can be easily shown\nno possible strings exist as all the letters have to be equal. In the fourth\ntest case, one possible string is \"ddbacef\". Please remember to print your\nanswers modulo \n    998244353\n.\n\n",
        "cf_contest_id": 1526,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n0 2 1\r\n",
                "1\r\n"
            ],
            [
                "5 1\r\n0 1 2 3 4\r\n",
                "0\r\n"
            ],
            [
                "6 200000\r\n0 1 2 3 4 5\r\n",
                "822243495\r\n"
            ],
            [
                "7 6\r\n3 2 4 1 0 5 6\r\n",
                "36\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n0\r\n",
                "1\r\n"
            ],
            [
                "1 200000\r\n0\r\n",
                "200000\r\n"
            ],
            [
                "73 95\r\n4 53 37 9 45 54 16 34 12 10 13 24 2 36 33 48 50 43 15 11 47 42 46 30 27 52 67 72 66 19 56 61 69 21 68 1 70 49 64 62 3 51 44 65 29 25 38 28 8 5 39 59 17 6 26 20 63 7 41 23 22 32 40 14 57 60 55 31 35 58 18 0 71\r\n",
                "423380456\r\n"
            ],
            [
                "4 199473\r\n1 3 2 0\r\n",
                "827777353\r\n"
            ],
            [
                "2 132707\r\n1 0\r\n",
                "819685454\r\n"
            ],
            [
                "1 86803\r\n0\r\n",
                "86803\r\n"
            ],
            [
                "7 129714\r\n5 6 0 2 1 4 3\r\n",
                "300654263\r\n"
            ],
            [
                "1 69258\r\n0\r\n",
                "69258\r\n"
            ],
            [
                "1 195078\r\n0\r\n",
                "195078\r\n"
            ]
        ]
    }
]