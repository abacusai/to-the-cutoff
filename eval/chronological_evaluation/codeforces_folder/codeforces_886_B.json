[
    {
        "name": "Vlad and Cafes",
        "description": "Vlad likes to eat in cafes very much. During his life, he has visited cafes n\ntimes. Unfortunately, Vlad started to feel that his last visits are not any\ndifferent from each other. To fix that Vlad had a small research. First of\nall, Vlad assigned individual indices to all cafes. Then, he wrote down\nindices of cafes he visited in a row, in order of visiting them. Now, Vlad\nwants to find such a cafe that his last visit to that cafe was before his last\nvisits to every other cafe. In other words, he wants to find such a cafe that\nhe hasn't been there for as long as possible. Help Vlad to find that cafe.\nInput In first line there is one integer n (1 \u2264 n \u2264 2\u00b710^5) \u2014 number of cafes\nindices written by Vlad. In second line, n numbers a1, a2, ..., an (0 \u2264 ai \u2264\n2\u00b710^5) are written \u2014 indices of cafes in order of being visited by Vlad. Vlad\ncould visit some cafes more than once. Note that in numeration, some indices\ncould be omitted. Output Print one integer \u2014 index of the cafe that Vlad\nhasn't visited for as long as possible. Examples Input 5 1 3 2 1 2 Output 3\nInput 6 2 1 2 2 4 1 Output 2 Note In first test, there are three cafes, and\nthe last visits to cafes with indices 1 and 2 were after the last visit to\ncafe with index 3; so this cafe is the answer. In second test case, there are\nalso three cafes, but with indices 1, 2 and 4. Cafes with indices 1 and 4 were\nvisited after the last visit of cafe with index 2, so the answer is 2. Note\nthat Vlad could omit some numbers while numerating the cafes.\n\n",
        "cf_contest_id": 886,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 3 2 1 2\r\n",
                "3\r\n"
            ],
            [
                "6\r\n2 1 2 2 4 1\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1\r\n200000\r\n",
                "200000\r\n"
            ],
            [
                "2\r\n2018 2017\r\n",
                "2018\r\n"
            ],
            [
                "5\r\n100 1000 1000 1000 1000\r\n",
                "100\r\n"
            ],
            [
                "8\r\n200000 1 200000 1 200000 1 200000 2\r\n",
                "1\r\n"
            ],
            [
                "5\r\n20000 1 2 3 4\r\n",
                "20000\r\n"
            ],
            [
                "2\r\n200000 1\r\n",
                "200000\r\n"
            ],
            [
                "3\r\n2 100 2\r\n",
                "100\r\n"
            ],
            [
                "2\r\n10 1\r\n",
                "10\r\n"
            ],
            [
                "11\r\n1 1 1 1 1 1 1 1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "3\r\n5 5 5\r\n",
                "5\r\n"
            ],
            [
                "2\r\n5 1\r\n",
                "5\r\n"
            ]
        ]
    }
]