[
    {
        "name": "BA-String",
        "description": "You are given an integer \n    k\n and a string \n    s\n that consists only of\ncharacters 'a' (a lowercase Latin letter) and '*' (an asterisk). Each asterisk\nshould be replaced with several (from \n    0\n to \n    k\n inclusive) lowercase\nLatin letters 'b'. Different asterisk can be replaced with different counts of\nletter 'b'. The result of the replacement is called a BA-string. Two strings\n\n    a\n and \n    b\n are different if they either have different lengths or\nthere exists such a position \n    i\n that \n    a_i \n    \u2260 b_i\n. A string\n\n    a\n is lexicographically smaller than a string \n    b\n if and only if one\nof the following holds: \n    a\n is a prefix of \n    b\n, but \n    a \n     b\n;\nin the first position where \n    a\n and \n    b\n differ, the string \n    a\n has\na letter that appears earlier in the alphabet than the corresponding letter in\n\n    b\n. Now consider all different BA-strings and find the \n    x\n-th\nlexicographically smallest of them. Input The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2000\n) \u2014 the number of testcases. The\nfirst line of each testcase contains three integers \n    n\n, \n    k\n and\n\n    x\n (\n    1 \n    \u2264 n \n    \u2264 2000\n; \n    0 \n    \u2264 k \n    \u2264 2000\n; \n    1 \n    \u2264 x\n    \n    \u2264 10^18\n). \n    n\n is the length of string \n    s\n. The second line of\neach testcase is a string \n    s\n. It consists of \n    n\n characters, each of\nthem is either 'a' (a lowercase Latin letter) or '*' (an asterisk). The sum of\n\n    n\n over all testcases doesn't exceed \n    2000\n. For each testcase\n\n    x\n doesn't exceed the total number of different BA-strings. String\n\n    s\n contains at least one character 'a'. Output For each testcase, print a\nsingle string, consisting only of characters 'b' and 'a' (lowercase Latin\nletters) \u2014 the \n    x\n-th lexicographically smallest BA-string. Example Input\n3 2 4 3 a* 4 1 3 a**a 6 3 20 **a*** Output abb abba babbbbbbbbb Note In the\nfirst testcase of the example, BA-strings ordered lexicographically are: a ab\nabb abbb abbbb In the second testcase of the example, BA-strings ordered\nlexicographically are: aa aba abba Note that string \"aba\" is only counted\nonce, even though there are two ways to replace asterisks with characters 'b'\nto get it.\n\n",
        "cf_contest_id": 1620,
        "cf_index": "C",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2 4 3\r\na*\r\n4 1 3\r\na**a\r\n6 3 20\r\n**a***\r\n",
                "abb\r\nabba\r\nbabbbbbbbbb\r\n"
            ]
        ],
        "private_cases": []
    }
]