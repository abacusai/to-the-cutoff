[
    {
        "name": "Stones on the Table",
        "description": "There are n stones on the table in a row, each of them can be red, green or\nblue. Count the minimum number of stones to take from the table so that any\ntwo neighboring stones had different colors. Stones in a row are considered\nneighboring if there are no other stones between them. Input The first line\ncontains integer n (1 \u2264 n \u2264 50) \u2014 the number of stones on the table. The next\nline contains string s, which represents the colors of the stones. We'll\nconsider the stones in the row numbered from 1 to n from left to right. Then\nthe i-th character s equals \"R\", if the i-th stone is red, \"G\", if it's green\nand \"B\", if it's blue. Output Print a single integer \u2014 the answer to the\nproblem. Examples Input 3 RRG Output 1 Input 5 RRRRR Output 4 Input 4 BRBG\nOutput 0\n\n",
        "cf_contest_id": 266,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\nRRG\r\n",
                "1"
            ],
            [
                "5\r\nRRRRR\r\n",
                "4"
            ],
            [
                "4\r\nBRBG\r\n",
                "0"
            ]
        ],
        "private_cases": [
            [
                "1\r\nB\r\n",
                "0"
            ],
            [
                "2\r\nBG\r\n",
                "0"
            ],
            [
                "3\r\nBGB\r\n",
                "0"
            ],
            [
                "4\r\nRBBR\r\n",
                "1"
            ],
            [
                "5\r\nRGGBG\r\n",
                "1"
            ],
            [
                "10\r\nGGBRBRGGRB\r\n",
                "2"
            ],
            [
                "50\r\nGRBGGRBRGRBGGBBBBBGGGBBBBRBRGBRRBRGBBBRBBRRGBGGGRB\r\n",
                "18"
            ],
            [
                "15\r\nBRRBRGGBBRRRRGR\r\n",
                "6"
            ],
            [
                "20\r\nRRGBBRBRGRGBBGGRGRRR\r\n",
                "6"
            ],
            [
                "25\r\nBBGBGRBGGBRRBGRRBGGBBRBRB\r\n",
                "6"
            ],
            [
                "30\r\nGRGGGBGGRGBGGRGRBGBGBRRRRRRGRB\r\n",
                "9"
            ],
            [
                "35\r\nGBBGBRGBBGGRBBGBRRGGRRRRRRRBRBBRRGB\r\n",
                "14"
            ],
            [
                "40\r\nGBBRRGBGGGRGGGRRRRBRBGGBBGGGBGBBBBBRGGGG\r\n",
                "20"
            ],
            [
                "45\r\nGGGBBRBBRRGRBBGGBGRBRGGBRBRGBRRGBGRRBGRGRBRRG\r\n",
                "11"
            ],
            [
                "50\r\nRBGGBGGRBGRBBBGBBGRBBBGGGRBBBGBBBGRGGBGGBRBGBGRRGG\r\n",
                "17"
            ],
            [
                "50\r\nGGGBBRGGGGGRRGGRBGGRGBBRBRRBGRGBBBGBRBGRGBBGRGGBRB\r\n",
                "16"
            ],
            [
                "50\r\nGBGRGRRBRRRRRGGBBGBRRRBBBRBBBRRGRBBRGBRBGGRGRBBGGG\r\n",
                "19"
            ],
            [
                "10\r\nGRRBRBRBGR\r\n",
                "1"
            ],
            [
                "10\r\nBRBGBGRRBR\r\n",
                "1"
            ],
            [
                "20\r\nGBGBGGRRRRGRBBGRGRGR\r\n",
                "5"
            ],
            [
                "20\r\nRRGGRBBGBBRBGRRBRRBG\r\n",
                "6"
            ],
            [
                "30\r\nBGBRGBBBGRGBBRGBGRBBBRGGRRGRRB\r\n",
                "8"
            ],
            [
                "30\r\nBBBBGGBRBGBBGBGBGBGGGRGRRGGBBB\r\n",
                "11"
            ],
            [
                "40\r\nGBRRGRBGBRRGBRGGGBRGBGBRGBBRRGRGGBBGBGBB\r\n",
                "9"
            ],
            [
                "40\r\nBRGRGGRGGRBBRRRBRBBGGGRRGBGBBGRBBRGBRRGG\r\n",
                "13"
            ],
            [
                "50\r\nRBGBGGRRGGRGGBGBGRRBGGBGBRRBBGBBGBBBGBBRBBRBRBRGRG\r\n",
                "13"
            ],
            [
                "50\r\nRBRRGBGRRRBGRRBGRRGRBBRBBRRBRGGBRBRRBGGRBGGBRBRGRB\r\n",
                "12"
            ],
            [
                "2\r\nBB\r\n",
                "1"
            ],
            [
                "50\r\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\r\n",
                "49"
            ],
            [
                "50\r\nRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\r\n",
                "47"
            ],
            [
                "50\r\nRRRRRRRRRRRRGGRRRRRRRRRBRRRRRRRRRRRRRRBBRRRRRRRRRR\r\n",
                "43"
            ]
        ]
    }
]