[
    {
        "name": "Painting Pebbles",
        "description": "There are n piles of pebbles on the table, the i-th pile contains ai pebbles.\nYour task is to paint each pebble using one of the k given colors so that for\neach color c and any two piles i and j the difference between the number of\npebbles of color c in pile i and number of pebbles of color c in pile j is at\nmost one. In other words, let's say that bi, c is the number of pebbles of\ncolor c in the i-th pile. Then for any 1 \u2264 c \u2264 k, 1 \u2264 i, j \u2264 n the following\ncondition must be satisfied |bi, c - bj, c| \u2264 1. It isn't necessary to use all\nk colors: if color c hasn't been used in pile i, then bi, c is considered to\nbe zero. Input The first line of the input contains positive integers n and k\n(1 \u2264 n, k \u2264 100), separated by a space \u2014 the number of piles and the number of\ncolors respectively. The second line contains n positive integers a1, a2, ...,\nan (1 \u2264 ai \u2264 100) denoting number of pebbles in each of the piles. Output If\nthere is no way to paint the pebbles satisfying the given condition, output\n\"NO\" (without quotes) . Otherwise in the first line output \"YES\" (without\nquotes). Then n lines should follow, the i-th of them should contain ai space-\nseparated integers. j-th (1 \u2264 j \u2264 ai) of these integers should be equal to the\ncolor of the j-th pebble in the i-th pile. If there are several possible\nanswers, you may output any of them. Examples Input 4 4 1 2 3 4 Output YES 1 1\n4 1 2 4 1 2 3 4 Input 5 2 3 2 4 1 3 Output NO Input 5 4 3 2 4 3 5 Output YES 1\n2 3 1 3 1 2 3 4 1 3 4 1 1 2 3 4\n\n",
        "cf_contest_id": 509,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 4\r\n1 2 3 4\r\n",
                "YES\r\n1\r\n1 2\r\n1 2 3\r\n1 2 3 4\r\n"
            ],
            [
                "5 2\r\n3 2 4 1 3\r\n",
                "NO\r\n"
            ],
            [
                "5 4\r\n3 2 4 3 5\r\n",
                "YES\r\n1 2 3\r\n1 2\r\n1 2 3 4\r\n1 2 3\r\n1 2 3 4 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 3\r\n5 6 7 8\r\n",
                "YES\r\n1 2 3 1 2\r\n1 2 3 1 2 3\r\n1 2 3 1 2 3 1\r\n1 2 3 1 2 3 1 2\r\n"
            ],
            [
                "5 6\r\n3 7 2 1 2\r\n",
                "YES\r\n1 2 3\r\n1 2 3 4 5 6 1\r\n1 2\r\n1\r\n1 2\r\n"
            ],
            [
                "9 5\r\n5 8 7 3 10 1 4 6 3\r\n",
                "NO\r\n"
            ],
            [
                "2 1\r\n7 2\r\n",
                "NO\r\n"
            ],
            [
                "56 97\r\n96 81 39 97 2 75 85 17 9 90 2 31 32 10 42 87 71 100 39 81 2 38 90 81 96 7 57 23 2 25 5 62 22 61 47 94 63 83 91 51 8 93 33 65 38 50 5 64 76 57 96 19 13 100 56 39\r\n",
                "NO\r\n"
            ],
            [
                "87 71\r\n44 88 67 57 57 80 69 69 40 32 92 54 64 51 69 54 31 53 29 42 32 85 100 90 46 56 40 46 68 81 60 42 99 89 61 96 48 42 78 95 71 67 30 42 57 82 41 76 29 79 32 62 100 89 81 55 88 90 86 54 54 31 28 67 69 49 45 54 68 77 64 32 60 60 66 66 83 57 56 89 57 82 73 86 60 61 62\r\n",
                "NO\r\n"
            ],
            [
                "100 67\r\n82 34 100 55 38 32 97 34 100 49 49 41 48 100 74 51 53 50 46 38 35 69 93 61 96 86 43 59 90 45 52 100 48 45 63 60 52 66 83 46 66 47 74 37 56 48 42 88 39 68 38 66 77 40 60 60 92 38 45 57 63 91 85 85 89 53 64 66 99 89 49 54 48 58 94 65 78 34 78 62 95 47 64 50 84 52 98 79 57 69 39 61 92 46 63 45 90 51 79 39\r\n",
                "NO\r\n"
            ],
            [
                "1 1\r\n1\r\n",
                "YES\r\n1\r\n"
            ],
            [
                "1 100\r\n1\r\n",
                "YES\r\n1\r\n"
            ]
        ]
    }
]