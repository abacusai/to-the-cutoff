[
    {
        "name": "Omkar and Circle",
        "description": "Danny, the local Math Maniac, is fascinated by circles, Omkar's most recent\ncreation. Help him solve this circle problem! You are given \n    n\n\nnonnegative integers \n    a_1, a_2, \n    \u2026, a_n\n arranged in a circle, where\n\n    n\n must be odd (ie. \n    n-1\n is divisible by \n    2\n). Formally, for all\n\n    i\n such that \n    2 \n    \u2264 i \n    \u2264 n\n, the elements \n    a_i - 1\n and\n\n    a_i\n are considered to be adjacent, and \n    a_n\n and \n    a_1\n are also\nconsidered to be adjacent. In one operation, you pick a number on the circle,\nreplace it with the sum of the two elements adjacent to it, and then delete\nthe two adjacent elements from the circle. This is repeated until only one\nnumber remains in the circle, which we call the circular value. Help Danny\nfind the maximum possible circular value after some sequences of operations.\nInput The first line contains one odd integer \n    n\n (\n    1 \n    \u2264 n < 2\n    \n    \u00b7 10^5\n, \n    n\n is odd) \u2014 the initial size of the circle. The second\nline contains \n    n\n integers \n    a_1,a_2,\n    \u2026,a_n\n (\n    0 \n    \u2264\n    a_i\n    \u2264 10^9\n) \u2014 the initial numbers in the circle. Output Output the\nmaximum possible circular value after applying some sequence of operations to\nthe given circle. Examples Input 3 7 10 2 Output 17 Input 1 4 Output 4 Note\nFor the first test case, here's how a circular value of \n    17\n is obtained:\nPick the number at index \n    3\n. The sum of adjacent elements equals\n\n    17\n. Delete \n    7\n and \n    10\n from the circle and replace \n    2\n with\n\n    17\n. Note that the answer may not fit in a \n    32\n-bit integer.\n\n",
        "cf_contest_id": 1372,
        "cf_index": "D",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "games",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n7 10 2\r\n",
                "17\r\n"
            ],
            [
                "1\r\n4\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n9 0 7 6 5 6 6\r\n",
                "28\r\n"
            ],
            [
                "9\r\n817044745 436084671 891247464 3109902 841573457 970042015 521926123 412995388 852139532\r\n",
                "3932903069\r\n"
            ],
            [
                "5\r\n638276462 315720570 182863609 770736280 493952628\r\n",
                "1724733312\r\n"
            ],
            [
                "13\r\n1 3 1 0 0 1 0 2 4 1 4 1 2\r\n",
                "16\r\n"
            ],
            [
                "3\r\n0 1 0\r\n",
                "1\r\n"
            ],
            [
                "1\r\n477717775\r\n",
                "477717775\r\n"
            ],
            [
                "3\r\n154902717 425474163 967981877\r\n",
                "1393456040\r\n"
            ],
            [
                "7\r\n951687915 550759260 933929681 580374484 775897492 877087876 462104028\r\n",
                "3538602964\r\n"
            ],
            [
                "3\r\n14582607 32862855 5029052\r\n",
                "47445462\r\n"
            ],
            [
                "11\r\n17609742 77443132 82953011 40092560 2095822 69915096 74105118 47130007 92558668 64725803 96196592\r\n",
                "450311166\r\n"
            ],
            [
                "41\r\n67695023 47580738 52676259 26530025 83455112 9118634 23011073 86422683 89065733 42852564 97383338 95729385 6219705 42027049 79082264 1205076 1191075 18025596 75651485 93690196 63851880 23817841 79285846 9296266 60979868 62770176 40911517 96687661 35967137 55930828 78662969 51939718 99402988 89044881 66646045 15910278 17992482 24324235 95677246 88143844 62885616\r\n",
                "1302952889\r\n"
            ],
            [
                "41\r\n4 1 0 5 5 4 3 1 5 0 4 4 5 0 0 3 5 1 2 1 3 1 1 4 5 0 4 1 1 3 1 1 0 3 4 2 5 2 4 2 3\r\n",
                "66\r\n"
            ],
            [
                "51\r\n3 3 2 3 1 1 3 1 0 2 1 3 1 3 0 2 0 0 1 1 2 0 3 3 1 3 0 3 0 3 0 0 0 0 0 0 0 3 0 3 1 2 1 1 0 2 1 1 1 0 0\r\n",
                "46\r\n"
            ],
            [
                "17\r\n0 1 2 1 2 1 1 1 2 0 2 0 1 0 2 0 0\r\n",
                "13\r\n"
            ],
            [
                "19\r\n1 1 1 0 0 0 0 0 1 1 0 0 1 1 0 1 1 1 1\r\n",
                "7\r\n"
            ],
            [
                "77\r\n7 2 8 5 8 1 4 7 5 10 4 4 0 1 5 3 9 9 10 4 10 6 2 4 10 6 2 3 0 1 3 0 7 2 10 2 6 7 1 2 9 4 4 9 4 0 3 5 8 3 8 2 2 7 7 2 10 7 5 0 3 10 9 1 1 9 10 9 0 6 10 2 2 2 10 5 3\r\n",
                "221\r\n"
            ],
            [
                "79\r\n9 1 3 0 6 7 3 9 3 3 7 1 8 0 0 8 10 10 1 5 5 5 1 6 10 3 4 8 6 10 8 9 0 8 5 3 4 10 0 10 0 2 5 2 0 6 7 7 4 6 8 1 10 4 9 10 2 5 0 3 6 9 1 10 7 3 2 0 1 8 10 0 8 10 4 1 2 4 3\r\n",
                "227\r\n"
            ],
            [
                "79\r\n4 2 2 0 1 9 7 4 8 10 3 2 5 1 10 3 2 1 6 1 1 5 3 4 5 2 0 5 10 1 5 2 9 8 2 8 3 5 8 6 8 3 1 8 4 9 8 4 8 6 1 4 8 7 5 9 6 10 1 1 7 6 0 9 7 2 10 2 4 9 8 0 5 7 4 1 1 7 8\r\n",
                "212\r\n"
            ],
            [
                "5\r\n10 9 6 2 9\r\n",
                "25\r\n"
            ],
            [
                "3\r\n10 1 11\r\n",
                "21\r\n"
            ],
            [
                "3\r\n5 1 5\r\n",
                "10\r\n"
            ]
        ]
    }
]