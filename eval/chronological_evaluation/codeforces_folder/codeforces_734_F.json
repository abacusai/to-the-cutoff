[
    {
        "name": "Anton and School",
        "description": "Anton goes to school, his favorite lessons are arraystudying. He usually\nsolves all the tasks pretty fast, but this time the teacher gave him a\ncomplicated one: given two arrays b and c of length n, find array a, such\nthat: where a and b means bitwise AND, while a or b means bitwise OR. Usually\nAnton is good in arraystudying, but this problem is too hard, so Anton asks\nyou to help. Input The first line of the input contains a single integers n (1\n\u2264 n \u2264 200 000) \u2014 the size of arrays b and c. The second line contains n\nintegers bi (0 \u2264 bi \u2264 10^9) \u2014 elements of the array b. Third line contains n\nintegers ci (0 \u2264 ci \u2264 10^9) \u2014 elements of the array c. Output If there is no\nsolution, print - 1. Otherwise, the only line of the output should contain n\nnon-negative integers ai \u2014 elements of the array a. If there are multiple\npossible solutions, you may print any of them. Examples Input 4 6 8 4 4 16 22\n10 10 Output 3 5 1 1 Input 5 8 25 14 7 16 19 6 9 4 25 Output -1\n\n",
        "cf_contest_id": 734,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n6 8 4 4\r\n16 22 10 10\r\n",
                "3 5 1 1 "
            ],
            [
                "5\r\n8 25 14 7 16\r\n19 6 9 4 25\r\n",
                "-1"
            ]
        ],
        "private_cases": [
            [
                "10\r\n0 24 18 29 24 23 15 10 15 5\r\n47 103 89 108 103 94 62 57 62 52\r\n",
                "0 8 6 9 8 7 3 2 3 1 "
            ],
            [
                "50\r\n788 465 450 333 877 59 409 611 336 775 55 910 389 659 59 584 242 211 778 818 180 216 603 496 98 1 737 107 123 455 329 860 681 521 251 265 289 559 763 930 646 927 389 814 839 401 626 636 706 153\r\n282 905 199 166 905 160 588 515 746 44 336 754 59 353 835 419 151 939 50 726 697 879 371 243 539 114 683 125 0 319 80 756 19 920 564 976 636 969 463 194 985 888 638 172 198 962 402 144 936 199\r\n",
                "-1"
            ],
            [
                "1\r\n3\r\n5\r\n",
                "-1"
            ],
            [
                "1\r\n1000000000\r\n1000000000\r\n",
                "1000000000 "
            ],
            [
                "2\r\n1000000000 1000000000\r\n1000000000 1000000000\r\n",
                "500000000 500000000 "
            ],
            [
                "4\r\n4 4 4 4\r\n4 4 4 4\r\n",
                "1 1 1 1 "
            ],
            [
                "10\r\n900000000 900000000 900000000 0 900000000 900000000 900000000 900000000 900000000 900000000\r\n1000000000 1000000000 1000000000 900000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n",
                "100000000 100000000 100000000 0 100000000 100000000 100000000 100000000 100000000 100000000 "
            ],
            [
                "2\r\n715057532 207331847\r\n868849705 436282485\r\n",
                "-1"
            ],
            [
                "5\r\n194675096 269940880 196492048 235537320 377795100\r\n511234680 560594321 521511633 571899361 638613721\r\n",
                "59616072 84541157 62034853 79921453 121715881 "
            ],
            [
                "10\r\n232686074 72393012 68917908 232351054 262557767 289343576 127901682 6556646 232920378 91756628\r\n601680476 482784198 984656632 592965296 489480863 683718124 549335158 465739174 593978012 527558342\r\n",
                "-1"
            ],
            [
                "1\r\n463129088\r\n1000000000\r\n",
                "-1"
            ],
            [
                "2\r\n805426284 880920771\r\n880929115 956423602\r\n",
                "402715228 478209715 "
            ],
            [
                "2\r\n1 0\r\n2 1\r\n",
                "1 0 "
            ],
            [
                "22\r\n0 1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576\r\n2097151 2097172 2097193 2097235 2097319 2097487 2097823 2098495 2099839 2102527 2107903 2118655 2140159 2183167 2269183 2441215 2785279 3473407 4849663 7602175 13107199 24117247\r\n",
                "0 1 2 4 8 16 32 64 128 256 512 1024 2048 4096 8192 16384 32768 65536 131072 262144 524288 1048576 "
            ],
            [
                "15\r\n0 234 512 994 106 50 72 96 32 448 520 296 178 88 62315960\r\n62317186 62317582 62320514 62321877 62317290 62317241 62317249 62317270 62317214 62318358 62324361 62318045 62317533 62317413 934736861\r\n",
                "0 42 256 379 14 7 9 12 4 108 513 77 35 21 62315709 "
            ],
            [
                "1\r\n0\r\n2\r\n",
                "-1"
            ],
            [
                "5\r\n1 2 3 4 5\r\n9 8 7 6 5\r\n",
                "-1"
            ],
            [
                "4\r\n6 8 4 3\r\n16 22 10 11\r\n",
                "-1"
            ]
        ]
    }
]