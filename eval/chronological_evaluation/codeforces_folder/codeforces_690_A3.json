[
    {
        "name": "Collective Mindsets (hard)",
        "description": "Heidi got one brain, thumbs up! But the evening isn't over yet and one more\nchallenge awaits our dauntless agent: after dinner, at precisely midnight, the\nN attendees love to play a very risky game... Every zombie gets a number ni (1\n\u2264 ni \u2264 N) written on his forehead. Although no zombie can see his own number,\nhe can see the numbers written on the foreheads of all N - 1 fellows. Note\nthat not all numbers have to be unique (they can even all be the same). From\nthis point on, no more communication between zombies is allowed. Observation\nis the only key to success. When the cuckoo clock strikes midnight, all\nattendees have to simultaneously guess the number on their own forehead. If at\nleast one of them guesses his number correctly, all zombies survive and go\nhome happily. On the other hand, if not a single attendee manages to guess his\nnumber correctly, all of them are doomed to die! Zombies aren't very bright\ncreatures though, and Heidi has to act fast if she does not want to jeopardize\nher life. She has one single option: by performing some quick surgery on the\nbrain she managed to get from the chest, she has the ability to remotely\nreprogram the decision-making strategy of all attendees for their upcoming\nmidnight game! Can you suggest a sound strategy to Heidi which, given the\nrules of the game, ensures that at least one attendee will guess his own\nnumber correctly, for any possible sequence of numbers on the foreheads? Given\na zombie's rank R and the N - 1 numbers ni on the other attendees' foreheads,\nyour program will have to return the number that the zombie of rank R shall\nguess. Those answers define your strategy, and we will check if it is flawless\nor not. Input The first line of input contains a single integer T (1 \u2264 T \u2264\n50000): the number of scenarios for which you have to make a guess. The T\nscenarios follow, described on two lines each: The first line holds two\nintegers, N (2 \u2264 N \u2264 6), the number of attendees, and R (1 \u2264 R \u2264 N), the rank\nof the zombie who has to make the guess. The second line lists N - 1 integers:\nthe numbers on the foreheads of all other attendees, listed in increasing\norder of the attendees' rank. (Every zombie knows the rank of every other\nzombie.) Output For every scenario, output a single integer: the number that\nthe zombie of rank R shall guess, based on the numbers ni on his N - 1\nfellows' foreheads. Examples Input 4 2 1 1 2 2 1 2 1 2 2 2 2 Output 1 2 2 1\nInput 2 5 2 2 2 2 2 6 4 3 2 6 1 2 Output 5 2 Note For instance, if there were\nN = 2 two attendees, a successful strategy could be: The zombie of rank 1\nalways guesses the number he sees on the forehead of the zombie of rank 2. The\nzombie of rank 2 always guesses the opposite of the number he sees on the\nforehead of the zombie of rank 1.\n\n",
        "cf_contest_id": 690,
        "cf_index": "A3",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2 1\r\n1\r\n2 2\r\n1\r\n2 1\r\n2\r\n2 2\r\n2\r\n",
                "1\r\n2\r\n2\r\n1\r\n"
            ],
            [
                "4\r\n2 1\r\n1\r\n2 2\r\n1\r\n2 1\r\n2\r\n2 2\r\n2\r\n",
                "1\r\n2\r\n2\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "27\r\n3 1\r\n1 1\r\n3 2\r\n1 1\r\n3 3\r\n1 1\r\n3 1\r\n2 1\r\n3 2\r\n2 1\r\n3 3\r\n2 1\r\n3 1\r\n3 1\r\n3 2\r\n3 1\r\n3 3\r\n3 1\r\n3 1\r\n1 2\r\n3 2\r\n1 2\r\n3 3\r\n1 2\r\n3 1\r\n2 2\r\n3 2\r\n2 2\r\n3 3\r\n2 2\r\n3 1\r\n3 2\r\n3 2\r\n3 2\r\n3 3\r\n3 2\r\n3 1\r\n1 3\r\n3 2\r\n1 3\r\n3 3\r\n1 3\r\n3 1\r\n2 3\r\n3 2\r\n2 3\r\n3 3\r\n2 3\r\n3 1\r\n3 3\r\n3 2\r\n3 3\r\n3 3\r\n3 3\r\n",
                "3\r\n1\r\n2\r\n2\r\n3\r\n1\r\n1\r\n2\r\n3\r\n2\r\n3\r\n1\r\n1\r\n2\r\n3\r\n3\r\n1\r\n2\r\n1\r\n2\r\n3\r\n3\r\n1\r\n2\r\n2\r\n3\r\n1\r\n"
            ]
        ]
    }
]