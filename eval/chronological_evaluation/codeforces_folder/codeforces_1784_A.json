[
    {
        "name": "Monsters (easy version)",
        "description": "This is the easy version of the problem. In this version, you only need to\nfind the answer once. In this version, hacks are not allowed. In a computer\ngame, you are fighting against \n    n\n monsters. Monster number \n    i\n has\n\n    a_i\n health points, all \n    a_i\n are integers. A monster is alive while\nit has at least \n    1\n health point. You can cast spells of two types: Deal\n\n    1\n damage to any single alive monster of your choice. Deal \n    1\n damage\nto all alive monsters. If at least one monster dies (ends up with \n    0\n\nhealth points) as a result of this action, then repeat it (and keep repeating\nwhile at least one monster dies every time). Dealing \n    1\n damage to a\nmonster reduces its health by \n    1\n. Spells of type 1 can be cast any number\nof times, while a spell of type 2 can be cast at most once during the game.\nWhat is the smallest number of times you need to cast spells of type 1 to kill\nall monsters? Input Each test contains multiple test cases. The first line\ncontains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n). The\ndescription of the test cases follows. Each test case consists of two lines.\nThe first line contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n) \u2014 the number of monsters. The second line contains \n    n\n integers\n\n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014 monsters' health\npoints. It is guaranteed that the sum of \n    n\n over all test cases does not\nexceed \n    2 \n    \u00b7 10^5\n. Output For each test case, print a single integer\n\u2014 the smallest number of times you need to cast spells of type 1 to kill all\nmonsters. Example Input 2 3 3 1 2 6 4 1 5 4 1 1 Output 0 4 Note In the first\ntest case, the initial health points of the monsters are \n    [3, 1, 2]\n. It\nis enough to cast a spell of type 2: Monsters' health points change to \n    [2,\n    0, 1]\n. Since monster number \n    2\n dies, the spell is repeated. Monsters'\nhealth points change to \n    [1, 0, 0]\n. Since monster number \n    3\n dies,\nthe spell is repeated. Monsters' health points change to \n    [0, 0, 0]\n.\nSince monster number \n    1\n dies, the spell is repeated. Monsters' health\npoints change to \n    [0, 0, 0]\n. Since it is possible to use no spells of\ntype 1 at all, the answer is \n    0\n. In the second test case, the initial\nhealth points of the monsters are \n    [4, 1, 5, 4, 1, 1]\n. Here is one of the\noptimal action sequences: Using a spell of type 1, deal \n    1\n damage to\nmonster number \n    1\n. Monsters' health points change to \n    [3, 1, 5, 4, 1,\n    1]\n. Using a spell of type 1, deal \n    1\n damage to monster number \n    4\n.\nMonsters' health points change to \n    [3, 1, 5, 3, 1, 1]\n. Using a spell of\ntype 1, deal \n    1\n damage to monster number \n    4\n again. Monsters' health\npoints change to \n    [3, 1, 5, 2, 1, 1]\n. Use a spell of type 2: Monsters'\nhealth points change to \n    [2, 0, 4, 1, 0, 0]\n. Since monsters number\n\n    2\n, \n    5\n, and \n    6\n die, the spell is repeated. Monsters' health\npoints change to \n    [1, 0, 3, 0, 0, 0]\n. Since monster number \n    4\n dies,\nthe spell is repeated. Monsters' health points change to \n    [0, 0, 2, 0, 0,\n    0]\n. Since monster number \n    1\n dies, the spell is repeated. Monsters'\nhealth points change to \n    [0, 0, 1, 0, 0, 0]\n. Using a spell of type 1,\ndeal \n    1\n damage to monster number \n    3\n. Monsters' health points change\nto \n    [0, 0, 0, 0, 0, 0]\n. Spells of type 1 are cast \n    4\n times in total.\nIt can be shown that this is the smallest possible number.\n\n",
        "cf_contest_id": 1784,
        "cf_index": "A",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n3\r\n3 1 2\r\n6\r\n4 1 5 4 1 1\r\n",
                "0\r\n4\r\n"
            ]
        ],
        "private_cases": []
    }
]