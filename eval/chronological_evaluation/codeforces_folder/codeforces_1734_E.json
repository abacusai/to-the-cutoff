[
    {
        "name": "Rectangular Congruence",
        "description": "You are given a prime number \n    n\n, and an array of \n    n\n integers\n\n    b_1,b_2,\n    \u2026, b_n\n, where \n    0 \n    \u2264 b_i < n\n for each \n    1 \n    \u2264\n    i \n    \u2264 n\n. You have to find a matrix \n    a\n of size \n    n \n    \u00d7 n\n\nsuch that all of the following requirements hold: \n    0 \n    \u2264 a_i,j < n\n\nfor all \n    1 \n    \u2264 i, j \n    \u2264 n\n. \n    a_r_1, c_1 + a_r_2, c_2\n    \u2261 a_r_1, c_2 + a_r_2, c_1\n     n\n for all positive\nintegers \n    r_1\n, \n    r_2\n, \n    c_1\n, and \n    c_2\n such that \n    1 \n    \u2264\n    r_1 < r_2 \n    \u2264 n\n and \n    1 \n    \u2264 c_1 < c_2 \n    \u2264 n\n. \n    a_i,i = b_i\n\nfor all \n    1 \n    \u2264 i \n    \u2264 n\n. Here \n    x \n    \u2261 y \n     m\n\ndenotes that \n    x\n and \n    y\n give different remainders when divided by\n\n    m\n. If there are multiple solutions, output any. It can be shown that\nsuch a matrix always exists under the given constraints. Input The first line\ncontains a single positive integer \n    n\n (\n    2 \n    \u2264 n < 350\n). The second\nline contains \n    n\n integers \n    b_1, b_2, \n    \u2026, b_n\n (\n    0 \n    \u2264 b_i <\n    n\n) \u2014 the required values on the main diagonal of the matrix. It is\nguaranteed that \n    n\n is prime. Output Print \n    n\n lines. On the\n\n    i\n-th line, print \n    n\n integers \n    a_i, 1, a_i, 2, \n    \u2026, a_i,\n    n\n, each separated with a space. If there are multiple solutions, output\nany. Examples Input 2 0 0 Output 0 1 0 0 Input 3 1 1 1 Output 1 2 2 1 1 0 1 0\n1 Input 5 1 4 1 2 4 Output 1 0 1 3 4 1 4 3 1 0 2 4 1 0 2 1 2 2 2 2 2 2 0 1 4\nNote In the first example, the answer is valid because all entries are non-\nnegative integers less than \n    n = 2\n, and \n    a_1,1+a_2,2\n    \u2261\n    a_1,2+a_2,1\n     2\n (because \n    a_1,1+a_2,2 = 0 + 0 \n    \u2261 0\n    \n     2\n and \n    a_1,2+a_2,1 = 1 + 0 \n    \u2261 1 \n     2\n).\nMoreover, the values on the main diagonals are equal to \n    0,0\n as required.\nIn the second example, the answer is correct because all entries are non-\nnegative integers less than \n    n = 3\n, and the second condition is satisfied\nfor all quadruplets \n    (r_1, r_2, c_1, c_2)\n. For example: When \n    r_1=1\n,\n\n    r_2=2\n, \n    c_1=1\n and \n    c_2=2\n, \n    a_1,1+a_2,2\n    \u2261\n    a_1,2+a_2,1\n     3\n because \n    a_1,1+a_2,2 = 1 + 1 \n    \u2261 2\n    \n     3\n and \n    a_1,2+a_2,1 = 2 + 1 \n    \u2261 0 \n     3\n. When\n\n    r_1=2\n, \n    r_2=3\n, \n    c_1=1\n, and \n    c_2=3\n, \n    a_2,1+a_3,3\n    \u2261 a_2,3+a_3,1\n     3\n because \n    a_2,1+a_3,3 = 1 + 1\n    \n    \u2261 2 \n     3\n and \n    a_2,3+a_3,1 = 0 + 1 \n    \u2261 1 \n     3\n. Moreover, the values on the main diagonal are equal to \n    1,1,1\n as\nrequired.\n\n",
        "cf_contest_id": 1734,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n0 0\r\n",
                "0 1\r\n0 0\r\n"
            ],
            [
                "3\r\n1 1 1\r\n",
                "1 0 0\r\n1 1 2\r\n1 2 1\r\n"
            ],
            [
                "5\r\n1 4 1 2 4\r\n",
                "1 0 2 2 0\r\n4 4 2 3 2\r\n1 2 1 3 3\r\n2 4 4 2 3\r\n4 2 3 2 4\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n3 6 5 1 5 4 5\r\n",
                "3 2 6 1 1 6 2\r\n6 6 4 0 1 0 4\r\n5 6 5 2 4 4 2\r\n1 3 3 1 4 5 4\r\n5 1 2 1 5 0 0\r\n4 1 3 3 1 4 5\r\n5 3 6 0 6 3 5\r\n"
            ],
            [
                "11\r\n1 0 7 3 9 9 4 7 8 3 4\r\n",
                "1 0 8 3 7 9 9 7 3 8 0\r\n0 0 9 5 10 2 3 2 10 5 9\r\n7 8 7 4 10 3 5 5 3 10 4\r\n3 5 5 3 10 4 7 8 7 4 10\r\n9 1 2 1 9 4 8 10 10 8 4\r\n9 2 4 4 2 9 3 6 7 6 3\r\n4 9 1 2 1 9 4 8 10 10 8\r\n7 2 6 8 8 6 2 7 10 0 10\r\n8 4 9 1 2 1 9 4 8 10 10\r\n3 0 6 10 1 1 10 6 0 3 4\r\n4 2 9 3 6 7 6 3 9 2 4\r\n"
            ],
            [
                "13\r\n1 9 11 3 5 5 7 1 2 5 10 4 4\r\n",
                "1 0 10 5 11 2 4 4 2 11 5 10 0\r\n9 9 7 3 10 2 5 6 5 2 10 3 7\r\n11 12 11 8 3 9 0 2 2 0 9 3 8\r\n3 5 5 3 12 6 11 1 2 1 11 6 12\r\n5 8 9 8 5 0 6 10 12 12 10 6 0\r\n5 9 11 11 9 5 12 4 7 8 7 4 12\r\n7 12 2 3 2 12 7 0 4 6 6 4 0\r\n1 7 11 0 0 11 7 1 6 9 10 9 6\r\n2 9 1 4 5 4 1 9 2 6 8 8 6\r\n5 0 6 10 12 12 10 6 0 5 8 9 8\r\n10 6 0 5 8 9 8 5 0 6 10 12 12\r\n4 1 9 2 6 8 8 6 2 9 1 4 5\r\n4 2 11 5 10 0 1 0 10 5 11 2 4\r\n"
            ],
            [
                "2\r\n1 0\r\n",
                "1 0\r\n0 0\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "1 0\r\n1 1\r\n"
            ]
        ]
    }
]