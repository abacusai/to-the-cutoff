[
    {
        "name": "Omkar and Bed Wars",
        "description": "Omkar is playing his favorite pixelated video game, Bed Wars! In Bed Wars,\nthere are \n    n\n players arranged in a circle, so that for all \n    j\n such\nthat \n    2 \n    \u2264 j \n    \u2264 n\n, player \n    j - 1\n is to the left of the\nplayer \n    j\n, and player \n    j\n is to the right of player \n    j - 1\n.\nAdditionally, player \n    n\n is to the left of player \n    1\n, and player\n\n    1\n is to the right of player \n    n\n. Currently, each player is attacking\neither the player to their left or the player to their right. This means that\neach player is currently being attacked by either \n    0\n, \n    1\n, or \n    2\n\nother players. A key element of Bed Wars strategy is that if a player is being\nattacked by exactly \n    1\n other player, then they should logically attack\nthat player in response. If instead a player is being attacked by \n    0\n or\n\n    2\n other players, then Bed Wars strategy says that the player can\nlogically attack either of the adjacent players. Unfortunately, it might be\nthat some players in this game are not following Bed Wars strategy correctly.\nOmkar is aware of whom each player is currently attacking, and he can talk to\nany amount of the \n    n\n players in the game to make them instead attack\nanother player \u2014 i. e. if they are currently attacking the player to their\nleft, Omkar can convince them to instead attack the player to their right; if\nthey are currently attacking the player to their right, Omkar can convince\nthem to instead attack the player to their left. Omkar would like all players\nto be acting logically. Calculate the minimum amount of players that Omkar\nneeds to talk to so that after all players he talked to (if any) have changed\nwhich player they are attacking, all players are acting logically according to\nBed Wars strategy. Input Each test contains multiple test cases. The first\nline contains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n).\nThe descriptions of the test cases follows. The first line of each test case\ncontains one integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the\namount of players (and therefore beds) in this game of Bed Wars. The second\nline of each test case contains a string \n    s\n of length \n    n\n. The\n\n    j\n-th character of \n    s\n is equal to L if the \n    j\n-th player is\nattacking the player to their left, and R if the \n    j\n-th player is\nattacking the player to their right. It is guaranteed that the sum of \n    n\n\nover all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test\ncase, output one integer: the minimum number of players Omkar needs to talk to\nto make it so that all players are acting logically according to Bed Wars\nstrategy. It can be proven that it is always possible for Omkar to achieve\nthis under the given constraints. Example Input 5 4 RLRL 6 LRRRRL 8 RLLRRRLL\n12 LLLLRRLRRRLL 5 RRRRR Output 0 1 1 3 2 Note In the first test case, players\n\n    1\n and \n    2\n are attacking each other, and players \n    3\n and \n    4\n\nare attacking each other. Each player is being attacked by exactly \n    1\n\nother player, and each player is attacking the player that is attacking them,\nso all players are already being logical according to Bed Wars strategy and\nOmkar does not need to talk to any of them, making the answer \n    0\n. In the\nsecond test case, not every player acts logically: for example, player \n    3\n\nis attacked only by player \n    2\n, but doesn't attack him in response. Omkar\ncan talk to player \n    3\n to convert the attack arrangement to LRLRRL, in\nwhich you can see that all players are being logical according to Bed Wars\nstrategy, making the answer \n    1\n.\n\n",
        "cf_contest_id": 1392,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4\r\nRLRL\r\n6\r\nLRRRRL\r\n8\r\nRLLRRRLL\r\n12\r\nLLLLRRLRRRLL\r\n5\r\nRRRRR\r\n",
                "0\r\n1\r\n1\r\n3\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n27\r\nLLLLRRLRLRRRRLRLLLLLLLLLLLL\r\n",
                "6\r\n"
            ],
            [
                "1\r\n31\r\nLLLLRRLRLRRRRLRLLLLLLRRRRLLLLLL\r\n",
                "7\r\n"
            ],
            [
                "1\r\n27\r\nLLLLRRLRRLRLLLLLLRRRRLLLLLL\r\n",
                "6\r\n"
            ],
            [
                "1\r\n28\r\nLLLLLLLLLLLLLLLRRRRLRRLLRLRL\r\n",
                "6\r\n"
            ]
        ]
    }
]