[
    {
        "name": "LIS or Reverse LIS?",
        "description": "You are given an array \n    a\n of \n    n\n positive integers. Let\n\n    LIS(a)\n denote the length of longest strictly increasing\nsubsequence of \n    a\n. For example, \n    LIS([2, \n    1, 1,\n    \n    3])\n = \n    2\n. \n    LIS([\n    3,\n    \n    5, \n    10, \n    20])\n = \n    4\n.\n\n    LIS([3, \n    1, \n    2, \n    4])\n =\n\n    3\n. We define array \n    a'\n as the array obtained after reversing the\narray \n    a\n i.e. \n    a' = [a_n, a_n-1, \n    \u2026 , a_1]\n. The beauty of\narray \n    a\n is defined as \n    min(\n    LIS(a),\n    LIS(a'))\n. Your\ntask is to determine the maximum possible beauty of the array \n    a\n if you\ncan rearrange the array \n    a\n arbitrarily. Input The input consists of\nmultiple test cases. The first line contains a single integer \n    t\n \n    (1\n    \n    \u2264 t \n    \u2264 10^4)\n \u2014 the number of test cases. Description of the test\ncases follows. The first line of each test case contains a single integer\n\n    n\n \n    (1 \n    \u2264 n \n    \u2264 2\n    \u00b7 10^5)\n \u2014 the length of array \n    a\n.\nThe second line of each test case contains \n    n\n integers \n    a_1,a_2,\n    \n    \u2026 ,a_n\n \n    (1 \n    \u2264 a_i \n    \u2264 10^9)\n \u2014 the elements of the array\n\n    a\n. It is guaranteed that the sum of \n    n\n over all test cases does not\nexceed \n    2\n    \u00b7 10^5\n. Output For each test case, output a single integer\n\u2014 the maximum possible beauty of \n    a\n after rearranging its elements\narbitrarily. Example Input 3 3 6 6 6 6 2 5 4 5 2 4 4 1 3 2 2 Output 1 3 2 Note\nIn the first test case, \n    a\n = \n    [6, 6, 6]\n and \n    a'\n = \n    [6, 6,\n    6]\n. \n    LIS(a) = \n    LIS(a')\n = \n    1\n. Hence the beauty is\n\n    min(1, 1) = 1\n. In the second test case, \n    a\n can be rearranged to\n\n    [2, 5, 4, 5, 4, 2]\n. Then \n    a'\n = \n    [2, 4, 5, 4, 5, 2]\n.\n\n    LIS(a) = \n    LIS(a') = 3\n. Hence the beauty is \n    3\n and\nit can be shown that this is the maximum possible beauty. In the third test\ncase, \n    a\n can be rearranged to \n    [1, 2, 3, 2]\n. Then \n    a'\n = \n    [2,\n    3, 2, 1]\n. \n    LIS(a) = 3\n, \n    LIS(a') = 2\n. Hence the\nbeauty is \n    min(3, 2) = 2\n and it can be shown that \n    2\n is the maximum\npossible beauty.\n\n",
        "cf_contest_id": 1682,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n6 6 6\r\n6\r\n2 5 4 5 2 4\r\n4\r\n1 3 2 2\r\n",
                "1\r\n3\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n5\r\n3 1 2 3 1000000000\r\n",
                "3\r\n"
            ]
        ]
    }
]