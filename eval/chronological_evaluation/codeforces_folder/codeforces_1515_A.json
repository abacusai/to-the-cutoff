[
    {
        "name": "Phoenix and Gold",
        "description": "Phoenix has collected \n    n\n pieces of gold, and he wants to weigh them\ntogether so he can feel rich. The \n    i\n-th piece of gold has weight\n\n    w_i\n. All weights are distinct. He will put his \n    n\n pieces of gold on\na weight scale, one piece at a time. The scale has an unusual defect: if the\ntotal weight on it is exactly \n    x\n, it will explode. Can he put all \n    n\n\ngold pieces onto the scale in some order, without the scale exploding during\nthe process? If so, help him find some possible order. Formally, rearrange the\narray \n    w\n so that for each \n    i\n \n    (1 \n    \u2264 i \n    \u2264 n)\n,\n\n    \u2211\n    _j = 1^iw_j \n     x\n. Input The input consists of\nmultiple test cases. The first line contains an integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 1000\n) \u2014 the number of test cases. The first line of each test case\ncontains two integers \n    n\n and \n    x\n (\n    1 \n    \u2264 n \n    \u2264 100\n; \n    1\n    \n    \u2264 x \n    \u2264 10^4\n) \u2014 the number of gold pieces that Phoenix has and the\nweight to avoid, respectively. The second line of each test case contains\n\n    n\n space-separated integers \n    (1 \n    \u2264 w_i \n    \u2264 100)\n \u2014 the weights\nof the gold pieces. It is guaranteed that the weights are pairwise distinct.\nOutput For each test case, if Phoenix cannot place all \n    n\n pieces without\nthe scale exploding, print NO. Otherwise, print YES followed by the rearranged\narray \n    w\n. If there are multiple solutions, print any. Example Input 3 3 2\n3 2 1 5 3 1 2 3 4 8 1 5 5 Output YES 3 2 1 YES 8 1 2 3 4 NO Note In the first\ntest case, Phoenix puts the gold piece with weight \n    3\n on the scale first,\nthen the piece with weight \n    2\n, and finally the piece with weight \n    1\n.\nThe total weight on the scale is \n    3\n, then \n    5\n, then \n    6\n. The\nscale does not explode because the total weight on the scale is never \n    2\n.\nIn the second test case, the total weight on the scale is \n    8\n, \n    9\n,\n\n    11\n, \n    14\n, then \n    18\n. It is never \n    3\n. In the third test\ncase, Phoenix must put the gold piece with weight \n    5\n on the scale, and\nthe scale will always explode.\n\n",
        "cf_contest_id": 1515,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 2\r\n3 2 1\r\n5 3\r\n1 2 3 4 8\r\n1 5\r\n5\r\n",
                "YES 3 2 1\r\nYES 1 3 2 4 8\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n6 46\r\n10 11 12 13 21 25\r\n",
                "YES 10 11 12 21 13 25\r\n"
            ]
        ]
    }
]