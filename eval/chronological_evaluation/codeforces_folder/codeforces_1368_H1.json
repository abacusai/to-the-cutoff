[
    {
        "name": "Breadboard Capacity (easy version)",
        "description": "This is an easier version of the problem H without modification queries.\nLester and Delbert work at an electronics company. They are currently working\non a microchip component serving to connect two independent parts of a large\nsupercomputer. The component is built on top of a breadboard \u2014 a grid-like\nbase for a microchip. The breadboard has \n    n\n rows and \n    m\n columns, and\neach row-column intersection contains a node. Also, on each side of the\nbreadboard there are ports that can be attached to adjacent nodes. Left and\nright side have \n    n\n ports each, and top and bottom side have \n    m\n ports\neach. Each of the ports is connected on the outside to one of the parts\nbridged by the breadboard, and is colored red or blue respectively. Ports can\nbe connected by wires going inside the breadboard. However, there are a few\nrules to follow: Each wire should connect a red port with a blue port, and\neach port should be connected to at most one wire. Each part of the wire\nshould be horizontal or vertical, and turns are only possible at one of the\nnodes. To avoid interference, wires can not have common parts of non-zero\nlength (but may have common nodes). Also, a wire can not cover the same\nsegment of non-zero length twice.The capacity of the breadboard is the largest\nnumber of red-blue wire connections that can be made subject to the rules\nabove. For example, the breadboard above has capacity \n    7\n, and one way to\nmake seven connections is pictured below. Up to this point statements of both\nversions are identical. Differences follow below. Given the current breadboard\nconfiguration, help Lester and Delbert find its capacity efficiently. Input\nThe first line contains three integers \n    n, m, q\n (\n    1 \n    \u2264 n, m \n    \u2264\n    10^5\n, \n    q = 0\n). \n    n\n and \n    m\n are the number of rows and\ncolumns of the breadboard respectively. In this version \n    q\n is always\nzero, and is only present for consistency with the harder version. The next\nfour lines describe initial coloring of the ports. Each character in these\nlines is either R or B, depending on the coloring of the respective port. The\nfirst two of these lines contain \n    n\n characters each, and describe ports\non the left and right sides respectively from top to bottom. The last two\nlines contain \n    m\n characters each, and describe ports on the top and\nbottom sides respectively from left to right. Output Print a single integer \u2014\nthe given breadboard capacity. Example Input 4 5 0 BBRR RBBR BBBBB RRRRR\nOutput 7\n\n",
        "cf_contest_id": 1368,
        "cf_index": "H1",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "flows",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4 5 0\r\nBBRR\r\nRBBR\r\nBBBBB\r\nRRRRR\r\n",
                "7\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 0\r\nB\r\nR\r\nB\r\nR\r\n",
                "2\r\n"
            ],
            [
                "1 2 0\r\nB\r\nR\r\nBB\r\nRR\r\n",
                "3\r\n"
            ],
            [
                "2 1 0\r\nBR\r\nRR\r\nR\r\nB\r\n",
                "2\r\n"
            ],
            [
                "2 2 0\r\nRR\r\nRB\r\nBB\r\nRB\r\n",
                "4\r\n"
            ],
            [
                "4 4 0\r\nBRBR\r\nBRBR\r\nRRBB\r\nRBBB\r\n",
                "7\r\n"
            ],
            [
                "1 100 0\r\nR\r\nR\r\nBRBBBRBRBRBBRBBRRBBBBBBBRBRBRBBBBBRBBRBRBBBBRBRRRRRRBRRBRRBRBBRRBBRRRBBBRRRRBRBRBBBRRRBBBRRRBRBBBBRR\r\nBBRBBBRBBRBRBRRBBRRRRBBBBBRBRBBRRBRRRRRBBBRRRRRRBRBBBBBRRBRBRBRRBBRRBRBRRRRBRBBBRBBBBBRBRBBBBRBBBBBB\r\n",
                "75\r\n"
            ],
            [
                "100 1 0\r\nRBBRRRRRBRBRRBRRRRBRBRBBRBBRBRRBRBRBBBBBBBRBBBRBRRBRRBRBRRBBRBBRBBRBRBRBBRRBRBBBRBBBRBRBBRBRBRBBBBBR\r\nRBBRBBBBBRBRRBBRBBBRBBRRRBRRRBBBRBBBBBBRRRRRRBRBBRRRBBRBRRRRBRBBRRRBBBRBBBRRBBRRBBRBRBRBBRBRRRBBBRBR\r\nR\r\nB\r\n",
                "83\r\n"
            ],
            [
                "10 10 0\r\nRRRRRBBBBR\r\nBBBRBRBBRR\r\nRBRRBBBBRR\r\nRBBRRBBRRR\r\n",
                "19\r\n"
            ]
        ]
    }
]