[
    {
        "name": "Broken Keyboard",
        "description": "Recently Polycarp noticed that some of the buttons of his keyboard are\nmalfunctioning. For simplicity, we assume that Polycarp's keyboard contains\n\n    26\n buttons (one for each letter of the Latin alphabet). Each button is\neither working fine or malfunctioning. To check which buttons need\nreplacement, Polycarp pressed some buttons in sequence, and a string \n    s\n\nappeared on the screen. When Polycarp presses a button with character \n    c\n,\none of the following events happened: if the button was working correctly, a\ncharacter \n    c\n appeared at the end of the string Polycarp was typing; if\nthe button was malfunctioning, two characters \n    c\n appeared at the end of\nthe string. For example, suppose the buttons corresponding to characters a and\nc are working correctly, and the button corresponding to b is malfunctioning.\nIf Polycarp presses the buttons in the order a, b, a, c, a, b, a, then the\nstring he is typing changes as follows: a \n    \u2192\n abb\n\n    \u2192\n abba \n    \u2192\n abbac \n    \u2192\n abbaca\n\n    \u2192\n abbacabb \n    \u2192\n abbacabba. You are given a\nstring \n    s\n which appeared on the screen after Polycarp pressed some\nbuttons. Help Polycarp to determine which buttons are working correctly for\nsure (that is, this string could not appear on the screen if any of these\nbuttons was malfunctioning). You may assume that the buttons don't start\nmalfunctioning when Polycarp types the string: each button either works\ncorrectly throughout the whole process, or malfunctions throughout the whole\nprocess. Input The first line contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    100\n) \u2014 the number of test cases in the input. Then the test cases follow.\nEach test case is represented by one line containing a string \n    s\n\nconsisting of no less than \n    1\n and no more than \n    500\n lowercase Latin\nletters. Output For each test case, print one line containing a string\n\n    res\n. The string \n    res\n should contain all characters which correspond\nto buttons that work correctly in alphabetical order, without any separators\nor repetitions. If all buttons may malfunction, \n    res\n should be empty.\nExample Input 4 a zzaaz ccff cbddbb Output a z bc\n\n",
        "cf_contest_id": 1251,
        "cf_index": "A",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "strings",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\na\r\nzzaaz\r\nccff\r\ncbddbb\r\n",
                "a\r\nz\r\n\r\nbc\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\nduyduyduy\r\ndduuyyyu\r\n",
                "duy\r\nuy\r\n"
            ],
            [
                "1\r\nartijakls\r\n",
                "aijklrst\r\n"
            ],
            [
                "1\r\nsrijande\r\n",
                "adeijnrs\r\n"
            ],
            [
                "1\r\namr\r\n",
                "amr\r\n"
            ],
            [
                "1\r\namraa\r\n",
                "amr\r\n"
            ],
            [
                "1\r\namra\r\n",
                "amr\r\n"
            ],
            [
                "1\r\namrb\r\n",
                "abmr\r\n"
            ],
            [
                "1\r\namrdd\r\n",
                "amr\r\n"
            ],
            [
                "1\r\nlksjnksjfksjfksjfksjnfksjfsksjdf\r\n",
                "dfjklns\r\n"
            ],
            [
                "1\r\ndeep\r\n",
                "dp\r\n"
            ],
            [
                "1\r\nacvvrfgefgtwbqzlkgitengq\r\n",
                "abcefgiklnqrtwz\r\n"
            ],
            [
                "1\r\nammr\r\n",
                "ar\r\n"
            ],
            [
                "1\r\nammsdsdadasdsadsadassadsadasdsadsadr\r\n",
                "adrs\r\n"
            ],
            [
                "1\r\nammsdsdadasdsadssadassadsadasdsadsadr\r\n",
                "adrs\r\n"
            ],
            [
                "1\r\naababbaaamr\r\n",
                "abmr\r\n"
            ],
            [
                "1\r\naabambaaamr\r\n",
                "abmr\r\n"
            ],
            [
                "1\r\naabambaarmr\r\n",
                "abmr\r\n"
            ],
            [
                "1\r\nqw\r\n",
                "qw\r\n"
            ],
            [
                "1\r\naacd\r\n",
                "cd\r\n"
            ]
        ]
    }
]