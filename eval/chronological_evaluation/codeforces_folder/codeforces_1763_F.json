[
    {
        "name": "Edge Queries",
        "description": "You are given an undirected, connected graph of \n    n\n nodes and \n    m\n\nedges. All nodes \n    u\n of the graph satisfy the following: Let \n    S_u\n be\nthe set of vertices in the longest simple cycle starting and ending at\n\n    u\n. Let \n    C_u\n be the union of the sets of vertices in any simple\ncycle starting and ending at \n    u\n. \n    S_u = C_u\n. You need to answer\n\n    q\n queries. For each query, you will be given node \n    a\n and node\n\n    b\n. Out of all the edges that belong to any simple path from \n    a\n to\n\n    b\n, count the number of edges such that if you remove that edge, \n    a\n\nand \n    b\n are reachable from each other. Input The first line contains two\nintegers \n    n\n and \n    m\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    1 \n    \u2264\n    m \n    \u2264\n    min\n(\n    2 \n    \u00b7 10^5\n, \n    (n \n    \u00b7 (n-1))/2\n)) \u2014 the\ntotal number of nodes and edges in the graph, respectively. The next \n    m\n\nlines contain two integers \n    u\n and \n    v\n (\n    1 \n    \u2264\n \n    u\n, \n    v\n\n\n    \u2264 n\n, \n    u \n    \u2260 v\n) \u2014 describing an edge, implying that nodes\n\n    u\n and \n    v\n are connected to each other. It is guaranteed that there\nis at most one edge between any pair of vertices in the graph and the given\ngraph is connected. The next line contains a single integer \n    q\n (\n    1\n    \n    \u2264 q \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of queries. Then \n    q\n lines\nfollow, each representing a query. Each query contains two integers \n    a\n\nand \n    b\n (\n    1 \n    \u2264\n \n    a\n, \n    b\n \n    \u2264 n\n). Output For each\nquery, output a single integer \u2014 answer to the query. Examples Input 10 11 1 2\n2 3 3 4 4 5 5 3 2 7 7 9 9 10 10 6 6 7 1 8 5 1 4 5 10 3 5 2 8 7 10 Output 3 7 3\n0 4 Input 13 15 1 2 2 3 3 4 4 1 2 4 3 5 5 6 6 7 6 8 7 9 9 10 8 7 10 11 10 12\n10 13 6 9 11 1 5 1 8 5 2 5 12 12 13 Output 0 5 8 5 3 0 Note The graph in the\nfirst sample is : The first query is \n    (1, 4)\n. There are \n    5\n total\nedges that belong to any simple path from \n    1\n to \n    4\n. Edges \n    (3, 4),\n    (4, 5), (5, 3)\n will be counted in the answer to the query. The fourth query\nis \n    (2, 8)\n. There is only one simple path from \n    2\n to \n    8\n, thus\nnone of the edges will be counted in the answer to the query. The fifth query\nis \n    (7, 10)\n. There are \n    4\n total edges that belong to any simple path\nfrom \n    7\n to \n    10\n, all of them will be counted in the answer to the\nquery.\n\n",
        "cf_contest_id": 1763,
        "cf_index": "F",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10 11\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 3\r\n2 7\r\n7 9\r\n9 10\r\n10 6\r\n6 7\r\n1 8\r\n5\r\n1 4\r\n5 10\r\n3 5\r\n2 8\r\n7 10\r\n",
                "3\r\n7\r\n3\r\n0\r\n4\r\n"
            ],
            [
                "13 15\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n2 4\r\n3 5\r\n5 6\r\n6 7\r\n6 8\r\n7 9\r\n9 10\r\n8 7\r\n10 11\r\n10 12\r\n10 13\r\n6\r\n9 11\r\n1 5\r\n1 8\r\n5 2\r\n5 12\r\n12 13\r\n",
                "0\r\n5\r\n8\r\n5\r\n3\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1 2\r\n1\r\n1 2\r\n",
                "0\r\n"
            ]
        ]
    }
]