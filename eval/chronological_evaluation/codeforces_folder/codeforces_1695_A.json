[
    {
        "name": "Subrectangle Guess",
        "description": "Michael and Joe are playing a game. The game is played on a grid with \n    n\n\nrows and \n    m\n columns, filled with distinct integers. We denote the square\non the \n    i\n-th (\n    1\n    \u2264 i\n    \u2264 n\n) row and \n    j\n-th (\n    1\n    \u2264 j\n    \u2264\n    m\n) column by \n    (i, j)\n and the number there by \n    a_ij\n. Michael\nstarts by saying two numbers \n    h\n (\n    1\n    \u2264 h \n    \u2264 n\n) and \n    w\n\n(\n    1\n    \u2264 w \n    \u2264 m\n). Then Joe picks any \n    h\n    \u00d7 w\n subrectangle of\nthe board (without Michael seeing). Formally, an \n    h\n    \u00d7 w\n\nsubrectangle starts at some square \n    (a,b)\n where \n    1 \n    \u2264 a \n    \u2264\n    n-h+1\n and \n    1 \n    \u2264 b \n    \u2264 m-w+1\n. It contains all squares \n    (i,j)\n\nfor \n    a \n    \u2264 i \n    \u2264 a+h-1\n and \n    b \n    \u2264 j \n    \u2264 b+w-1\n. Possible move\nby Joe if Michael says \n    3\n    \u00d7 2\n (with maximum of \n    15\n). Finally,\nMichael has to guess the maximum number in the subrectangle. He wins if he\ngets it right. Because Michael doesn't like big numbers, he wants the area of\nthe chosen subrectangle (that is, \n    h \n    \u00b7 w\n), to be as small as\npossible, while still ensuring that he wins, not depending on Joe's choice.\nHelp Michael out by finding this minimum possible area. It can be shown that\nMichael can always choose \n    h, w\n for which he can ensure that he wins.\nInput Each test contains multiple test cases. The first line contains the\nnumber of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 20\n). Description of the\ntest cases follows. The first line of each test case contains two integers\n\n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 40\n) \u2014 the size of the grid. Each\nof the following \n    n\n lines contains \n    m\n integers. The \n    j\n-th\ninteger on the \n    i\n-th line is \n    a_ij\n (\n    -10^9 \n    \u2264 a_ij\n    \u2264\n    10^9\n) \u2014 the element in the cell \n    (i, j)\n. It is guaranteed that all the\nnumbers are distinct (that is, if \n    a_i_1j_1 = a_i_2j_2\n, then \n    i_1 =\n    i_2, j_1 = j_2\n). Output For each test case print a single positive integer\n\u2014 the minimum possible area the subrectangle can have while still ensuring\nthat Michael can guarantee the victory. Example Input 3 1 1 3 4 4 2 12 6 10 3\n15 16 4 1 13 8 11 14 7 9 5 2 3 -7 5 2 0 8 -3 Output 1 9 4 Note In the first\ntest case, the grid is \n    1\n    \u00d7 1\n, so the only possible choice for\n\n    h, w\n is \n    h = 1, w = 1\n, giving an area of \n    h\n    \u00b7 w = 1\n. The\ngrid from the second test case is drawn in the statement. It can be shown that\nwith \n    h = 3, w = 3\n Michael can guarantee the victory and that any choice\nwith \n    h\n    \u00b7 w \n    \u2264 8\n doesn't.\n\n",
        "cf_contest_id": 1695,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "games"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 1\r\n3\r\n4 4\r\n2 12 6 10\r\n3 15 16 4\r\n1 13 8 11\r\n14 7 9 5\r\n2 3\r\n-7 5 2\r\n0 8 -3\r\n",
                "1\r\n9\r\n4\r\n"
            ]
        ],
        "private_cases": [
            [
                "18\r\n1 1\r\n-37\r\n1 2\r\n47 0\r\n1 2\r\n-48 -7\r\n2 1\r\n37\r\n-8\r\n2 1\r\n-3\r\n27\r\n2 2\r\n46 36\r\n-33 -9\r\n2 2\r\n-20 24\r\n-6 -33\r\n2 2\r\n-50 -45\r\n50 10\r\n2 2\r\n-38 -12\r\n1 8\r\n3 3\r\n42 4 -29\r\n-27 28 -16\r\n-35 -13 26\r\n3 3\r\n-46 40 -27\r\n-32 28 -24\r\n37 13 -13\r\n3 3\r\n-38 -17 30\r\n22 -50 7\r\n-26 18 -3\r\n3 3\r\n-2 26 29\r\n41 11 28\r\n-31 -16 1\r\n3 3\r\n-25 12 21\r\n5 39 3\r\n29 20 -45\r\n3 3\r\n34 26 23\r\n32 16 48\r\n37 6 -46\r\n3 3\r\n-24 6 -15\r\n36 -41 21\r\n48 42 8\r\n3 3\r\n19 -1 -10\r\n-14 15 -49\r\n23 25 -15\r\n3 3\r\n-20 -21 -16\r\n43 -26 6\r\n-40 -30 44\r\n",
                "1\r\n2\r\n2\r\n2\r\n2\r\n4\r\n4\r\n4\r\n4\r\n9\r\n6\r\n9\r\n6\r\n4\r\n6\r\n9\r\n6\r\n9\r\n"
            ],
            [
                "20\r\n1 1\r\n-2833\r\n1 1\r\n2243\r\n1 1\r\n-939\r\n1 1\r\n-2936\r\n1 1\r\n-743\r\n1 1\r\n2866\r\n1 1\r\n78\r\n1 1\r\n70\r\n1 1\r\n-429\r\n1 1\r\n-3791\r\n1 1\r\n-3934\r\n1 1\r\n186\r\n1 1\r\n4984\r\n1 1\r\n-3692\r\n1 1\r\n-1663\r\n1 1\r\n292\r\n1 1\r\n1862\r\n1 1\r\n4141\r\n1 1\r\n2749\r\n1 1\r\n331\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "20\r\n1 1\r\n821\r\n1 1\r\n-2813\r\n1 1\r\n-3298\r\n1 1\r\n7818\r\n1 1\r\n-5440\r\n1 1\r\n6049\r\n1 1\r\n-4349\r\n1 1\r\n-4082\r\n1 1\r\n2745\r\n1 1\r\n4091\r\n1 1\r\n1919\r\n1 1\r\n5795\r\n1 1\r\n6573\r\n1 1\r\n7205\r\n1 1\r\n7921\r\n1 1\r\n-6873\r\n1 1\r\n2228\r\n1 1\r\n2352\r\n1 1\r\n-5639\r\n1 1\r\n-1368\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "20\r\n1 1\r\n-383311\r\n1 1\r\n-466480\r\n1 1\r\n-522692\r\n1 1\r\n323235\r\n1 1\r\n69735\r\n1 1\r\n450897\r\n1 1\r\n737635\r\n1 1\r\n740222\r\n1 1\r\n309313\r\n1 1\r\n-893385\r\n1 1\r\n-231338\r\n1 1\r\n-678602\r\n1 1\r\n-644216\r\n1 1\r\n16757\r\n1 1\r\n784198\r\n1 1\r\n-230952\r\n1 1\r\n-271175\r\n1 1\r\n671810\r\n1 1\r\n-500579\r\n1 1\r\n972813\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "20\r\n1 1\r\n1214462\r\n1 1\r\n65555000\r\n1 1\r\n-54554848\r\n1 1\r\n25120971\r\n1 1\r\n-38312459\r\n1 1\r\n4502021\r\n1 1\r\n3795799\r\n1 1\r\n-89679315\r\n1 1\r\n-8781303\r\n1 1\r\n36708036\r\n1 1\r\n-99728219\r\n1 1\r\n-68904678\r\n1 1\r\n46668884\r\n1 1\r\n-1032340\r\n1 1\r\n-29723161\r\n1 1\r\n68120054\r\n1 1\r\n64977067\r\n1 1\r\n-84445274\r\n1 1\r\n54187354\r\n1 1\r\n50579574\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "20\r\n1 1\r\n329070501\r\n1 1\r\n593617901\r\n1 1\r\n467103203\r\n1 1\r\n920909582\r\n1 1\r\n127988087\r\n1 1\r\n-355398296\r\n1 1\r\n-425876348\r\n1 1\r\n-287711531\r\n1 1\r\n659491065\r\n1 1\r\n-265860542\r\n1 1\r\n899939829\r\n1 1\r\n888965934\r\n1 1\r\n-536336874\r\n1 1\r\n-851098096\r\n1 1\r\n442790793\r\n1 1\r\n-744890648\r\n1 1\r\n425907714\r\n1 1\r\n971151923\r\n1 1\r\n-692781352\r\n1 1\r\n208310087\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "1\r\n3 4\r\n374592290 -101437854 -990376540 -548370437\r\n-989218778 -724320547 -958898261 -326847904\r\n-319951529 -959145374 -723956153 -388346947\r\n",
                "12\r\n"
            ],
            [
                "1\r\n1 1\r\n-1000000000\r\n",
                "1\r\n"
            ],
            [
                "1\r\n3 3\r\n-1000000000 -999999999 -999999998\r\n-999999997 -100000001 -999999996\r\n-999999995 -999999994 -999999993\r\n",
                "4\r\n"
            ],
            [
                "1\r\n3 2\r\n-1000000000 -999999999\r\n-999999998 -999999995\r\n-999999996 -999999997\r\n",
                "4\r\n"
            ],
            [
                "3\r\n3 3\r\n-1000000000 -999999999 -999999998\r\n-999999997 -100000001 -999999996\r\n-999999995 -999999994 -999999993\r\n3 2\r\n-1000000000 -999999999\r\n-999999998 -999999995\r\n-999999996 -999999997\r\n1 1\r\n-1000000000\r\n",
                "4\r\n4\r\n1\r\n"
            ]
        ]
    }
]