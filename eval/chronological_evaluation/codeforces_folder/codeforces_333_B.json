[
    {
        "name": "Chips",
        "description": "Gerald plays the following game. He has a checkered field of size n \u00d7 n cells,\nwhere m various cells are banned. Before the game, he has to put a few chips\non some border (but not corner) board cells. Then for n - 1 minutes, Gerald\nevery minute moves each chip into an adjacent cell. He moves each chip from\nits original edge to the opposite edge. Gerald loses in this game in each of\nthe three cases: At least one of the chips at least once fell to the banned\ncell. At least once two chips were on the same cell. At least once two chips\nswapped in a minute (for example, if you stand two chips on two opposite\nborder cells of a row with even length, this situation happens in the middle\nof the row). In that case he loses and earns 0 points. When nothing like that\nhappened, he wins and earns the number of points equal to the number of chips\nhe managed to put on the board. Help Gerald earn the most points. Input The\nfirst line contains two space-separated integers n and m (2 \u2264 n \u2264 1000, 0 \u2264 m\n\u2264 10^5) \u2014 the size of the field and the number of banned cells. Next m lines\neach contain two space-separated integers. Specifically, the i-th of these\nlines contains numbers xi and yi (1 \u2264 xi, yi \u2264 n) \u2014 the coordinates of the\ni-th banned cell. All given cells are distinct. Consider the field rows\nnumbered from top to bottom from 1 to n, and the columns \u2014 from left to right\nfrom 1 to n. Output Print a single integer \u2014 the maximum points Gerald can\nearn in this game. Examples Input 3 1 2 2 Output 0 Input 3 0 Output 1 Input 4\n3 3 1 3 2 3 3 Output 1 Note In the first test the answer equals zero as we\ncan't put chips into the corner cells. In the second sample we can place one\nchip into either cell (1, 2), or cell (3, 2), or cell (2, 1), or cell (2, 3).\nWe cannot place two chips. In the third sample we can only place one chip into\neither cell (2, 1), or cell (2, 4).\n\n",
        "cf_contest_id": 333,
        "cf_index": "B",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 1\r\n2 2\r\n",
                "0\r\n"
            ],
            [
                "3 0\r\n",
                "1\r\n"
            ],
            [
                "4 3\r\n3 1\r\n3 2\r\n3 3\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "2 3\r\n1 2\r\n2 1\r\n2 2\r\n",
                "0\r\n"
            ],
            [
                "5 1\r\n3 2\r\n",
                "4\r\n"
            ],
            [
                "5 1\r\n2 3\r\n",
                "4\r\n"
            ],
            [
                "1000 0\r\n",
                "1996\r\n"
            ],
            [
                "999 0\r\n",
                "1993\r\n"
            ],
            [
                "5 5\r\n3 2\r\n5 4\r\n3 3\r\n2 3\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "5 5\r\n3 2\r\n1 4\r\n5 1\r\n4 5\r\n3 1\r\n",
                "2\r\n"
            ],
            [
                "5 5\r\n2 2\r\n5 3\r\n2 3\r\n5 1\r\n4 4\r\n",
                "1\r\n"
            ],
            [
                "6 5\r\n2 6\r\n6 5\r\n3 1\r\n2 2\r\n1 2\r\n",
                "4\r\n"
            ],
            [
                "6 5\r\n2 6\r\n5 2\r\n4 3\r\n6 6\r\n2 5\r\n",
                "2\r\n"
            ],
            [
                "6 5\r\n2 1\r\n6 4\r\n2 2\r\n4 3\r\n4 1\r\n",
                "3\r\n"
            ]
        ]
    }
]