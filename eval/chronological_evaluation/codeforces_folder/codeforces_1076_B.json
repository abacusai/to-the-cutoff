[
    {
        "name": "Divisor Subtraction",
        "description": "You are given an integer number \n    n\n. The following algorithm is applied to\nit: if \n    n = 0\n, then end algorithm; find the smallest prime divisor\n\n    d\n of \n    n\n; subtract \n    d\n from \n    n\n and go to step \n    1\n.\nDetermine the number of subtrations the algorithm will make. Input The only\nline contains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^10\n). Output\nPrint a single integer \u2014 the number of subtractions the algorithm will make.\nExamples Input 5 Output 1 Input 4 Output 2 Note In the first example \n    5\n\nis the smallest prime divisor, thus it gets subtracted right away to make a\n\n    0\n. In the second example \n    2\n is the smallest prime divisor at both\nsteps.\n\n",
        "cf_contest_id": 1076,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n",
                "1\r\n"
            ],
            [
                "4\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n",
                "1\r\n"
            ],
            [
                "10000000000\r\n",
                "5000000000\r\n"
            ],
            [
                "9999999999\r\n",
                "4999999999\r\n"
            ],
            [
                "473\r\n",
                "232\r\n"
            ],
            [
                "9999999967\r\n",
                "1\r\n"
            ],
            [
                "9998200081\r\n",
                "4999050046\r\n"
            ],
            [
                "6969696\r\n",
                "3484848\r\n"
            ],
            [
                "3000000021\r\n",
                "1500000010\r\n"
            ]
        ]
    }
]