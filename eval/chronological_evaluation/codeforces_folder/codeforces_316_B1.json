[
    {
        "name": "EKG",
        "description": "In the rush of modern life, people often forget how beautiful the world is.\nThe time to enjoy those around them is so little that some even stand in\nqueues to several rooms at the same time in the clinic, running from one queue\nto another. (Cultural note: standing in huge and disorganized queues for hours\nis a native tradition in Russia, dating back to the Soviet period. Queues can\nresemble crowds rather than lines. Not to get lost in such a queue, a person\nshould follow a strict survival technique: you approach the queue and ask who\nthe last person is, somebody answers and you join the crowd. Now you're the\nlast person in the queue till somebody else shows up. You keep an eye on the\none who was last before you as he is your only chance to get to your\ndestination) I'm sure many people have had the problem when a stranger asks\nwho the last person in the queue is and even dares to hint that he will be the\nlast in the queue and then bolts away to some unknown destination. These are\nthe representatives of the modern world, in which the ratio of lack of time is\nso great that they do not even watch foreign top-rated TV series. Such people\noften create problems in queues, because the newcomer does not see the last\nperson in the queue and takes a place after the \"virtual\" link in this chain,\nwondering where this legendary figure has left. The Smart Beaver has been ill\nand he's made an appointment with a therapist. The doctor told the Beaver the\nsad news in a nutshell: it is necessary to do an electrocardiogram. The next\nday the Smart Beaver got up early, put on the famous TV series on download\n(three hours till the download's complete), clenched his teeth and bravely\nwent to join a queue to the electrocardiogram room, which is notorious for the\nbiggest queues at the clinic. Having stood for about three hours in the queue,\nthe Smart Beaver realized that many beavers had not seen who was supposed to\nstand in the queue before them and there was a huge mess. He came up to each\nbeaver in the ECG room queue and asked who should be in front of him in the\nqueue. If the beaver did not know his correct position in the queue, then it\nmight be his turn to go get an ECG, or maybe he should wait for a long, long\ntime... As you've guessed, the Smart Beaver was in a hurry home, so he gave\nyou all the necessary information for you to help him to determine what his\nnumber in the queue can be. Input The first line contains two integers n (1 \u2264\nn \u2264 10^3) and x (1 \u2264 x \u2264 n) \u2014 the number of beavers that stand in the queue\nand the Smart Beaver's number, correspondingly. All willing to get to the\ndoctor are numbered from 1 to n. The second line contains n integers a1, a2,\n..., an (0 \u2264 ai \u2264 n) \u2014 the number of the beaver followed by the i-th beaver.\nIf ai = 0, then the i-th beaver doesn't know who is should be in front of him.\nIt is guaranteed that values ai are correct. That is there is no cycles in the\ndependencies. And any beaver is followed by at most one beaver in the queue.\nThe input limits for scoring 30 points are (subproblem B1): It is guaranteed\nthat the number of zero elements ai doesn't exceed 20. The input limits for\nscoring 100 points are (subproblems B1+B2): The number of zero elements ai is\narbitrary. Output Print all possible positions of the Smart Beaver in the line\nin the increasing order. Examples Input 6 1 2 0 4 0 6 0 Output 2 4 6 Input 6 2\n2 3 0 5 6 0 Output 2 5 Input 4 1 0 0 0 0 Output 1 2 3 4 Input 6 2 0 0 1 0 4 5\nOutput 1 3 4 6 Note Picture for the fourth test.\n\n",
        "cf_contest_id": 316,
        "cf_index": "B1",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dfs and similar"
        ],
        "time_limit_seconds": 0.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 1\r\n2 0 4 0 6 0\r\n",
                "2\r\n4\r\n6\r\n"
            ],
            [
                "6 2\r\n2 3 0 5 6 0\r\n",
                "2\r\n5\r\n"
            ],
            [
                "4 1\r\n0 0 0 0\r\n",
                "1\r\n2\r\n3\r\n4\r\n"
            ],
            [
                "6 2\r\n0 0 1 0 4 5\r\n",
                "1\r\n3\r\n4\r\n6\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 7\r\n10 8 6 5 0 0 0 4 3 9\r\n",
                "1\r\n5\r\n6\r\n10\r\n"
            ],
            [
                "10 1\r\n8 7 0 2 0 10 0 0 3 5\r\n",
                "2\r\n4\r\n5\r\n7\r\n8\r\n10\r\n"
            ],
            [
                "10 4\r\n0 1 4 2 7 0 10 0 5 8\r\n",
                "3\r\n4\r\n8\r\n9\r\n"
            ],
            [
                "10 2\r\n0 7 0 10 8 0 4 2 3 0\r\n",
                "4\r\n5\r\n6\r\n7\r\n8\r\n"
            ],
            [
                "10 2\r\n10 0 9 0 0 4 2 6 8 0\r\n",
                "1\r\n2\r\n3\r\n4\r\n6\r\n7\r\n8\r\n9\r\n"
            ],
            [
                "10 7\r\n7 9 2 10 0 0 0 3 5 1\r\n",
                "1\r\n2\r\n6\r\n7\r\n"
            ],
            [
                "20 20\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n17\r\n18\r\n19\r\n20\r\n"
            ]
        ]
    }
]