[
    {
        "name": "Meeting",
        "description": "The Super Duper Secret Meeting of the Super Duper Secret Military Squad takes\nplace in a Super Duper Secret Place. The place is an infinite plane with\nintroduced Cartesian coordinate system. The meeting table is represented as a\nrectangle whose sides are parallel to the coordinate axes and whose vertexes\nare located at the integer points of the plane. At each integer point which\nbelongs to the table perimeter there is a chair in which a general sits. Some\npoints on the plane contain radiators for the generals not to freeze in\nwinter. Each radiator is characterized by the number ri \u2014 the radius of the\narea this radiator can heat. That is, if the distance between some general and\nthe given radiator is less than or equal to ri, than the general feels\ncomfortable and warm. Here distance is defined as Euclidean distance, so the\ndistance between points (x1, y1) and (x2, y2) is Each general who is located\noutside the radiators' heating area can get sick. Thus, you should bring him a\nwarm blanket. Your task is to count the number of warm blankets you should\nbring to the Super Duper Secret Place. The generals who are already\ncomfortable do not need a blanket. Also the generals never overheat, ever if\nthey are located in the heating area of several radiators. The radiators can\nbe located at any integer points on the plane, even inside the rectangle\n(under the table) or on the perimeter (directly under some general). Even in\nthis case their radius does not change. Input The first input line contains\ncoordinates of two opposite table corners xa, ya, xb, yb (xa \u2260 xb, ya \u2260 yb).\nThe second line contains integer n \u2014 the number of radiators (1 \u2264 n \u2264 10^3).\nThen n lines contain the heaters' coordinates as \"xi yi ri\", the numbers are\nseparated by spaces. All input data numbers are integers. The absolute value\nof all coordinates does not exceed 1000, 1 \u2264 ri \u2264 1000. Several radiators can\nbe located at the same point. Output Print the only number \u2014 the number of\nblankets you should bring. Examples Input 2 5 4 2 3 3 1 2 5 3 1 1 3 2 Output 4\nInput 5 2 6 3 2 6 2 2 6 5 3 Output 0 Note In the first sample the generals are\nsitting at points: (2, 2), (2, 3), (2, 4), (2, 5), (3, 2), (3, 5), (4, 2), (4,\n3), (4, 4), (4, 5). Among them, 4 generals are located outside the heating\nrange. They are the generals at points: (2, 5), (3, 5), (4, 4), (4, 5). In the\nsecond sample the generals are sitting at points: (5, 2), (5, 3), (6, 2), (6,\n3). All of them are located inside the heating range.\n\n",
        "cf_contest_id": 144,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 5 4 2\r\n3\r\n3 1 2\r\n5 3 1\r\n1 3 2\r\n",
                "4"
            ],
            [
                "5 2 6 3\r\n2\r\n6 2 2\r\n6 5 3\r\n",
                "0"
            ]
        ],
        "private_cases": [
            [
                "-705 595 -702 600\r\n1\r\n-589 365 261\r\n",
                "4"
            ],
            [
                "-555 674 -553 774\r\n5\r\n-656 128 631\r\n597 -220 999\r\n-399 793 155\r\n-293 -363 1000\r\n-557 -914 1000\r\n",
                "49"
            ],
            [
                "-210 783 -260 833\r\n10\r\n406 551 1000\r\n372 -373 999\r\n-12 -532 999\r\n371 -30 999\r\n258 480 558\r\n648 -957 1000\r\n-716 654 473\r\n156 813 366\r\n-870 425 707\r\n-288 -426 1000\r\n",
                "0"
            ],
            [
                "671 244 771 1000\r\n20\r\n701 904 662\r\n170 -806 1000\r\n-330 586 1000\r\n466 467 205\r\n-736 266 999\r\n629 734 42\r\n-616 630 999\r\n-94 416 765\r\n-98 280 770\r\n288 597 384\r\n-473 266 999\r\n-330 969 999\r\n492 -445 713\r\n352 -967 1000\r\n401 -340 645\r\n400 -80 425\r\n-177 560 848\r\n361 -7 400\r\n-564 -807 1000\r\n621 333 51\r\n",
                "20"
            ],
            [
                "-343 -444 -419 -421\r\n30\r\n363 -249 790\r\n704 57 999\r\n-316 -305 119\r\n-778 -543 373\r\n-589 466 904\r\n516 -174 893\r\n-742 -662 390\r\n-382 825 1000\r\n520 -732 909\r\n-220 -985 555\r\n-39 -697 396\r\n-701 -882 520\r\n-105 227 691\r\n-113 -470 231\r\n-503 98 525\r\n236 69 759\r\n150 393 951\r\n414 381 1000\r\n849 530 999\r\n-357 485 905\r\n432 -616 794\r\n123 -465 467\r\n768 -875 1000\r\n61 -932 634\r\n375 -410 718\r\n-860 -624 477\r\n49 264 789\r\n-409 -874 429\r\n876 -169 999\r\n-458 345 767\r\n",
                "42"
            ],
            [
                "0 0 1 1\r\n1\r\n-1 -1000 1000\r\n",
                "4"
            ],
            [
                "1 1 1000 1000\r\n1\r\n50 50 1\r\n",
                "3996"
            ]
        ]
    }
]