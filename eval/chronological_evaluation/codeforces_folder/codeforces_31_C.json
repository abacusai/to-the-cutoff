[
    {
        "name": "Schedule",
        "description": "At the beginning of the new semester there is new schedule in the Berland\nState University. According to this schedule, n groups have lessons at the\nroom 31. For each group the starting time of the lesson and the finishing time\nof the lesson are known. It has turned out that it is impossible to hold all\nlessons, because for some groups periods of their lessons intersect. If at\nsome moment of time one groups finishes it's lesson, and the other group\nstarts the lesson, their lessons don't intersect. The dean wants to cancel the\nlesson in one group so that no two time periods of lessons of the remaining\ngroups intersect. You are to find all ways to do that. Input The first line\ncontains integer n (1 \u2264 n \u2264 5000) \u2014 amount of groups, which have lessons in\nthe room 31. Then n lines follow, each of them contains two integers li ri (1\n\u2264 li < ri \u2264 10^6) \u2014 starting and finishing times of lesson of the i-th group.\nIt is possible that initially no two lessons intersect (see sample 1). Output\nOutput integer k \u2014 amount of ways to cancel the lesson in exactly one group so\nthat no two time periods of lessons of the remaining groups intersect. In the\nsecond line output k numbers \u2014 indexes of groups, where it is possible to\ncancel the lesson. Groups are numbered starting from 1 in the order that they\nwere given in the input. Output the numbers in increasing order. Examples\nInput 3 3 10 20 30 1 3 Output 3 1 2 3 Input 4 3 10 20 30 1 3 1 39 Output 1 4\nInput 3 1 5 2 6 3 7 Output 0\n\n",
        "cf_contest_id": 31,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 10\r\n20 30\r\n1 3\r\n",
                "3\r\n1 2 3\r\n"
            ],
            [
                "4\r\n3 10\r\n20 30\r\n1 3\r\n1 39\r\n",
                "1\r\n4\r\n"
            ],
            [
                "3\r\n1 5\r\n2 6\r\n3 7\r\n",
                "0\r\n\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n1 5\r\n5 7\r\n6 9\r\n9 10\r\n",
                "2\r\n2 3\r\n"
            ],
            [
                "11\r\n717170 795210\r\n866429 970764\r\n163324 322182\r\n677099 717170\r\n241684 393937\r\n50433 114594\r\n970764 997956\r\n393937 664883\r\n235698 241684\r\n795210 832346\r\n114594 232438\r\n",
                "1\r\n3\r\n"
            ],
            [
                "16\r\n203671 381501\r\n58867 59732\r\n817520 962123\r\n125391 163027\r\n601766 617692\r\n381501 444610\r\n761937 817520\r\n16 10551\r\n21096 38291\r\n718073 761937\r\n583868 601766\r\n554859 731755\r\n678098 718073\r\n962123 992003\r\n163027 203671\r\n87917 96397\r\n",
                "1\r\n12\r\n"
            ]
        ]
    }
]