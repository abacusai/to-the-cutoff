[
    {
        "name": "Hotelier",
        "description": "Amugae has a hotel consisting of \n    10\n rooms. The rooms are numbered from\n\n    0\n to \n    9\n from left to right. The hotel has two entrances \u2014 one from\nthe left end, and another from the right end. When a customer arrives to the\nhotel through the left entrance, they are assigned to an empty room closest to\nthe left entrance. Similarly, when a customer arrives at the hotel through the\nright entrance, they are assigned to an empty room closest to the right\nentrance. One day, Amugae lost the room assignment list. Thankfully Amugae's\nmemory is perfect, and he remembers all of the customers: when a customer\narrived, from which entrance, and when they left the hotel. Initially the\nhotel was empty. Write a program that recovers the room assignment list from\nAmugae's memory. Input The first line consists of an integer \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 10^5\n), the number of events in Amugae's memory. The second\nline consists of a string of length \n    n\n describing the events in\nchronological order. Each character represents: 'L': A customer arrives from\nthe left entrance. 'R': A customer arrives from the right entrance. '0', '1',\n..., '9': The customer in room \n    x\n (\n    0\n, \n    1\n, ..., \n    9\n\nrespectively) leaves. It is guaranteed that there is at least one empty room\nwhen a customer arrives, and there is a customer in the room \n    x\n when\n\n    x\n (\n    0\n, \n    1\n, ..., \n    9\n) is given. Also, all the rooms are\ninitially empty. Output In the only line, output the hotel room's assignment\nstatus, from room \n    0\n to room \n    9\n. Represent an empty room as '0', and\nan occupied room as '1', without spaces. Examples Input 8 LLRL1RL1 Output\n1010000011 Input 9 L0L0LLRR9 Output 1100000010 Note In the first example,\nhotel room's assignment status after each action is as follows. First of all,\nall rooms are empty. Assignment status is 0000000000. L: a customer arrives to\nthe hotel through the left entrance. Assignment status is 1000000000. L: one\nmore customer from the left entrance. Assignment status is 1100000000. R: one\nmore customer from the right entrance. Assignment status is 1100000001. L: one\nmore customer from the left entrance. Assignment status is 1110000001. 1: the\ncustomer in room \n    1\n leaves. Assignment status is 1010000001. R: one more\ncustomer from the right entrance. Assignment status is 1010000011. L: one more\ncustomer from the left entrance. Assignment status is 1110000011. 1: the\ncustomer in room \n    1\n leaves. Assignment status is 1010000011. So after\nall, hotel room's final assignment status is 1010000011. In the second\nexample, hotel room's assignment status after each action is as follows. L: a\ncustomer arrives to the hotel through the left entrance. Assignment status is\n1000000000. 0: the customer in room \n    0\n leaves. Assignment status is\n0000000000. L: a customer arrives to the hotel through the left entrance.\nAssignment status is 1000000000 again. 0: the customer in room \n    0\n leaves.\nAssignment status is 0000000000. L: a customer arrives to the hotel through\nthe left entrance. Assignment status is 1000000000. L: one more customer from\nthe left entrance. Assignment status is 1100000000. R: one more customer from\nthe right entrance. Assignment status is 1100000001. R: one more customer from\nthe right entrance. Assignment status is 1100000011. 9: the customer in room\n\n    9\n leaves. Assignment status is 1100000010. So after all, hotel room's\nfinal assignment status is 1100000010.\n\n",
        "cf_contest_id": 1200,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8\r\nLLRL1RL1\r\n",
                "1010000011\r\n"
            ],
            [
                "9\r\nL0L0LLRR9\r\n",
                "1100000010\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nL\r\n",
                "1000000000\r\n"
            ],
            [
                "100\r\nR9L0L0R9R9L0R9R9L0R9R9R9L0R9R9R9L0L0R9L0R9L0L0L0R9R9L0R9L0R9R9L0R9R9L0R9L0L0R9R9R9L0L0L0L0R9L0L0L0L0\r\n",
                "0000000000\r\n"
            ],
            [
                "100\r\nRRLRRLRRLR2L0R6R2L1L3R4L0L6L2L2R5R6R1R3L6R6R8L6L4L3L6R9L6L9L8L7R7L8R1R1R7R7L2L8L2L1R8R2R8L76RR9R4R3R\r\n",
                "1111111111\r\n"
            ],
            [
                "100\r\nRRLLLLLLRR1R7R3L2R0L52RR2R4L1L7L6R4R0R4L5L4L5R2R8L7R0R6R4R8L6L8L4R5R7R3L9R7L64RR8L0R6R4R9L0R9R7R7R0L\r\n",
                "1111111111\r\n"
            ],
            [
                "100\r\nL0L0R9R9R9R9R9L0R9R9R9R9L0L0L0L0R9L0R9L0R9L0R9R9R9L0L0L0L0L0L0R9L0R9L0R9L0R9L0R9L0L0R9L0R9L0L0L0LR09\r\n",
                "0000000000\r\n"
            ],
            [
                "50\r\nLLL210L0L0L0L0LL0L1LLLLLLL34LLL3056LLL5804L7LL5L0L\r\n",
                "1111110000\r\n"
            ],
            [
                "100\r\nLLLLLLLLLL0L2L48LL6L7L7L0L3L0L63LL3L4L9L2L7L6L3L8L2L5L9L0L3L3L9L3L3L3L5L2L2L2L1L8L5L7L9L2L05L0LL6L2L\r\n",
                "1111111111\r\n"
            ],
            [
                "2\r\nLR\r\n",
                "1000000001\r\n"
            ],
            [
                "3\r\nRRR\r\n",
                "0000000111\r\n"
            ],
            [
                "4\r\nRRRL\r\n",
                "1000000111\r\n"
            ],
            [
                "5\r\nLRLLL\r\n",
                "1111000001\r\n"
            ],
            [
                "6\r\nLRRRRR\r\n",
                "1000011111\r\n"
            ],
            [
                "7\r\nLRLLRLL\r\n",
                "1111100011\r\n"
            ],
            [
                "8\r\nRRLRLLRL\r\n",
                "1111001111\r\n"
            ],
            [
                "9\r\nRRRLLLRRR\r\n",
                "1110111111\r\n"
            ],
            [
                "10\r\nLRRLRRLRRL\r\n",
                "1111111111\r\n"
            ],
            [
                "10\r\nLLLLLLLLLL\r\n",
                "1111111111\r\n"
            ],
            [
                "7\r\nLLLLLLL\r\n",
                "1111111000\r\n"
            ],
            [
                "8\r\nLLLLLLLL\r\n",
                "1111111100\r\n"
            ],
            [
                "12\r\nLLLLLLLLLL1R\r\n",
                "1111111111\r\n"
            ],
            [
                "8\r\nLLLL1LLL\r\n",
                "1111110000\r\n"
            ],
            [
                "10\r\nRRRRRRRRRR\r\n",
                "1111111111\r\n"
            ],
            [
                "6\r\nLLL1LL\r\n",
                "1111000000\r\n"
            ],
            [
                "12\r\nLLLLLLLLLL7R\r\n",
                "1111111111\r\n"
            ],
            [
                "9\r\nLLLLLLLLL\r\n",
                "1111111110\r\n"
            ],
            [
                "5\r\nLL0LL\r\n",
                "1110000000\r\n"
            ],
            [
                "12\r\nLLLLLRRRRR9L\r\n",
                "1111111111\r\n"
            ],
            [
                "7\r\nLRLR0LL\r\n",
                "1110000011\r\n"
            ],
            [
                "14\r\nLLLLLLLLLL84LL\r\n",
                "1111111111\r\n"
            ],
            [
                "12\r\nRRRRRRRRRR9L\r\n",
                "1111111111\r\n"
            ],
            [
                "12\r\nLLLLLLLRRR9L\r\n",
                "1111111111\r\n"
            ],
            [
                "8\r\nLLLLLLL1\r\n",
                "1011111000\r\n"
            ],
            [
                "12\r\nLLLLL0RRRRRR\r\n",
                "1111111111\r\n"
            ],
            [
                "12\r\nRRRRRRRRRL5R\r\n",
                "1111111111\r\n"
            ],
            [
                "14\r\nLLLLLLLLLL09RR\r\n",
                "1111111111\r\n"
            ],
            [
                "12\r\nLLLLLRRRRR8L\r\n",
                "1111111111\r\n"
            ]
        ]
    }
]