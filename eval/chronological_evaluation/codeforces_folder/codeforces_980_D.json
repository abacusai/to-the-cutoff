[
    {
        "name": "Perfect Groups",
        "description": "SaMer has written the greatest test case of all time for one of his problems.\nFor a given array of integers, the problem asks to find the minimum number of\ngroups the array can be divided into, such that the product of any pair of\nintegers in the same group is a perfect square. Each integer must be in\nexactly one group. However, integers in a group do not necessarily have to be\ncontiguous in the array. SaMer wishes to create more cases from the test case\nhe already has. His test case has an array \n    A\n of \n    n\n integers, and he\nneeds to find the number of contiguous subarrays of \n    A\n that have an\nanswer to the problem equal to \n    k\n for each integer \n    k\n between\n\n    1\n and \n    n\n (inclusive). Input The first line of input contains a\nsingle integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 5000\n), the size of the array.\nThe second line contains \n    n\n integers\n\n    a_1\n,\n    a_2\n,\n    \u2026\n,\n    a_n\n (\n    -10^8 \n    \u2264 a_i \n    \u2264\n    10^8\n), the values of the array. Output Output \n    n\n space-separated\nintegers, the \n    k\n-th integer should be the number of contiguous subarrays\nof \n    A\n that have an answer to the problem equal to \n    k\n. Examples Input\n2 5 5 Output 3 0 Input 5 5 -4 2 1 8 Output 5 5 3 2 0 Input 1 0 Output 1\n\n",
        "cf_contest_id": 980,
        "cf_index": "D",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n5 5\r\n",
                "3 0 "
            ],
            [
                "5\r\n5 -4 2 1 8\r\n",
                "5 5 3 2 0 "
            ],
            [
                "1\r\n0\r\n",
                "1 "
            ]
        ],
        "private_cases": [
            [
                "3\r\n-10 -5 7\r\n",
                "3 2 1 "
            ],
            [
                "5\r\n-6 -7 -2 -3 -10\r\n",
                "5 4 3 2 1 "
            ],
            [
                "8\r\n-5 5 10 -5 9 -2 5 7\r\n",
                "8 7 7 5 6 3 0 0 "
            ],
            [
                "19\r\n-51 -47 -57 57 -62 41 42 53 47 -7 -41 -37 -41 -46 -47 41 -39 -59 -50\r\n",
                "19 19 18 17 16 15 14 13 12 11 10 11 7 4 3 1 0 0 0 "
            ],
            [
                "25\r\n94 -94 61 -98 89 -91 83 61 -3 53 91 61 -3 -3 95 -67 -73 -59 -73 37 -47 -3 94 -79 -73\r\n",
                "26 26 25 29 27 26 27 27 23 20 14 16 10 10 7 8 4 0 0 0 0 0 0 0 0 "
            ],
            [
                "80\r\n8861 -8846 -3257 8263 -8045 4549 9626 -8599 5755 -3559 5813 -7411 9151 -1847 2441 4201 2381 4651 -6571 199 -6737 -6333 -9433 -4967 9041 -9319 6801 5813 -2731 -8599 7681 -1303 -7333 6067 -1847 -6333 6047 -7907 -7333 8677 -937 829 2441 -5702 -8045 -3037 -4882 -7703 9001 -5702 -2039 -7493 9173 -6047 6046 5802 -8609 9173 8083 8291 -1453 2381 7321 -859 8539 -2011 2374 8263 8111 -5897 -2017 -2311 -571 4993 -3389 -7789 1847 -4799 4651 -5702\r\n",
                "80 79 78 77 77 78 77 76 75 74 73 72 72 71 70 71 69 68 67 66 68 66 69 64 66 65 63 60 58 57 55 56 52 53 48 48 46 45 44 41 42 42 39 39 36 35 33 33 31 29 28 27 25 26 23 22 25 22 15 16 12 13 9 12 5 4 3 0 0 0 0 0 0 0 0 0 0 0 0 0 "
            ],
            [
                "1\r\n-3622679\r\n",
                "1 "
            ],
            [
                "2\r\n6649609 -8006683\r\n",
                "2 1 "
            ],
            [
                "4\r\n0 -7955897 3123413 -7955897\r\n",
                "5 5 0 0 "
            ],
            [
                "3\r\n1 2 0\r\n",
                "4 2 0 "
            ],
            [
                "2\r\n-7 0\r\n",
                "3 0 "
            ],
            [
                "5\r\n5 0 0 0 0\r\n",
                "15 0 0 0 0 "
            ],
            [
                "3\r\n0 1 2\r\n",
                "4 2 0 "
            ],
            [
                "30\r\n1 2 0 2 1 0 0 1 2 0 1 2 3 0 4 1 0 0 0 3 2 0 1 0 1 0 5 0 6 0\r\n",
                "77 90 216 42 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
            ],
            [
                "2\r\n2 0\r\n",
                "3 0 "
            ],
            [
                "10\r\n0 0 5 0 0 5 0 0 5 0\r\n",
                "55 0 0 0 0 0 0 0 0 0 "
            ],
            [
                "2\r\n0 2\r\n",
                "3 0 "
            ],
            [
                "4\r\n1 0 1 0\r\n",
                "10 0 0 0 "
            ],
            [
                "2\r\n0 1\r\n",
                "3 0 "
            ],
            [
                "6\r\n5 -4 0 2 1 8\r\n",
                "8 8 3 2 0 0 "
            ],
            [
                "3\r\n1 0 1\r\n",
                "6 0 0 "
            ],
            [
                "3\r\n1 0 -1\r\n",
                "5 1 0 "
            ],
            [
                "5\r\n0 1 2 3 4\r\n",
                "6 4 5 0 0 "
            ]
        ]
    }
]