[
    {
        "name": "Road Construction",
        "description": "There are \n    N\n cities in the country of Numbata, numbered from \n    1\n to\n\n    N\n. Currently, there is no road connecting them. Therefore, each of these\n\n    N\n cities proposes a road candidate to be constructed. City \n    i\n likes\nto connect with city \n    A_i\n, so city \n    i\n proposes to add a direct\nbidirectional road connecting city \n    i\n and city \n    A_i\n. It is\nguaranteed that no two cities like to connect with each other. In other words,\nthere is no pair of integers \n    i\n and \n    j\n where \n    A_i = j\n and\n\n    A_j = i\n. It is also guaranteed that any pair of cities are connected by\na sequence of road proposals. In other words, if all proposed roads are\nconstructed, then any pair of cities are connected by a sequence of\nconstructed road. City \n    i\n also prefers the road to be constructed using a\nspecific material. Each material can be represented by an integer (for\nexample, \n    0\n for asphalt, \n    1\n for wood, etc.). The material that can\nbe used for the road connecting city \n    i\n and city \n    A_i\n is represented\nby an array \n    B_i\n containing \n    M_i\n integers: \n    [(B_i)_1, (B_i)_2,\n    \n    \u2026, (B_i)_M_i]\n. This means that the road connecting city \n    i\n and\ncity \n    A_i\n can be constructed with either of the material in \n    B_i\n.\nThere are \n    K\n workers to construct the roads. Each worker is only familiar\nwith one material, thus can only construct a road with a specific material. In\nparticular, the \n    i^th\n worker can only construct a road with material\n\n    C_i\n. Each worker can only construct at most one road. You want to assign\neach worker to construct a road such that any pair of cities are connected by\na sequence of constructed road. Input Input begins with a line containing two\nintegers: \n    N\n \n    K\n (\n    3 \n    \u2264 N \n    \u2264 2000\n; \n    1 \n    \u2264 K \n    \u2264\n    2000\n) representing the number of cities and the number of workers,\nrespectively. The next \n    N\n lines each contains several integers: \n    A_i\n\n\n    M_i\n \n    (B_i)_1\n, \n    (B_i)_2\n, \n    \u22ef\n, \n    (B_i)_M_i\n\n(\n    1 \n    \u2264 A_i \n    \u2264 N\n; \n    A_i \n     i\n; \n    1 \n    \u2264 M_i \n    \u2264\n    10\n     000\n; \n    0 \n    \u2264 (B_i)_1 < (B_i)_2 < \n    \u2026 < (B_i)_M_i\n    \u2264\n    10^9\n) representing the bidirectional road that city \n    i\n likes to\nconstruct. It is guaranteed that the sum of \n    M_i\n does not exceed\n\n    10\n     000\n. It is also guaranteed that no two cities like to connect with\neach other and any pair of cities are connected by a sequence of road\nproposals. The next line contains \n    K\n integers: \n    C_i\n (\n    0 \n    \u2264 C_i\n    \n    \u2264 10^9\n) representing the material that is familiarized by the workers.\nOutput If it is not possible to assign each worker to construct a road such\nthat any pair of cities are connected by a sequence of constructed road,\nsimply output -1 in a line. Otherwise, for each worker in the same order as\ninput, output in a line two integers (separated by a single space): \n    u\n\nand \n    v\n in any order. This means that the worker constructs a direct\nbidirectional road connecting city \n    u\n and \n    v\n. If the worker does not\nconstruct any road, output \"0 0\" (without quotes) instead. Each pair of cities\ncan only be assigned to at most one worker. You may output any assignment as\nlong as any pair of cities are connected by a sequence of constructed road.\nExamples Input 4 5 2 2 1 2 3 2 2 3 4 2 3 4 2 2 4 5 1 2 3 4 5 Output 1 2 2 3 3\n4 0 0 4 2 Input 4 5 2 2 10 20 3 2 2 3 4 2 3 4 2 2 4 5 1 2 3 4 5 Output -1 Note\nExplanation for the sample input/output #1 We can assign the workers to\nconstruct the following roads: The first worker constructs a road connecting\ncity \n    1\n and city \n    2\n. The second worker constructs a road connecting\ncity \n    2\n and city \n    3\n. The third worker constructs a road connecting\ncity \n    3\n and city \n    4\n. The fourth worker does not construct any road.\nThe fifth worker constructs a road connecting city \n    4\n and city \n    2\n.\nTherefore, any pair of cities are now connected by a sequence of constructed\nroad.Explanation for the sample input/output #2 There is no worker that can\nconstruct a road connecting city \n    1\n, thus city \n    1\n is certainly\nisolated.\n\n",
        "cf_contest_id": 1252,
        "cf_index": "L",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "flows",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]