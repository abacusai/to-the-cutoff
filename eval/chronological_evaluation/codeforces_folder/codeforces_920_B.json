[
    {
        "name": "Tea Queue",
        "description": "Recently n students from city S moved to city P to attend a programming camp.\nThey moved there by train. In the evening, all students in the train decided\nthat they want to drink some tea. Of course, no two people can use the same\nteapot simultaneously, so the students had to form a queue to get their tea.\ni-th student comes to the end of the queue at the beginning of li-th second.\nIf there are multiple students coming to the queue in the same moment, then\nthe student with greater index comes after the student with lesser index.\nStudents in the queue behave as follows: if there is nobody in the queue\nbefore the student, then he uses the teapot for exactly one second and leaves\nthe queue with his tea; otherwise the student waits for the people before him\nto get their tea. If at the beginning of ri-th second student i still cannot\nget his tea (there is someone before him in the queue), then he leaves the\nqueue without getting any tea. For each student determine the second he will\nuse the teapot and get his tea (if he actually gets it). Input The first line\ncontains one integer t \u2014 the number of test cases to solve (1 \u2264 t \u2264 1000).\nThen t test cases follow. The first line of each test case contains one\ninteger n (1 \u2264 n \u2264 1000) \u2014 the number of students. Then n lines follow. Each\nline contains two integer li, ri (1 \u2264 li \u2264 ri \u2264 5000) \u2014 the second i-th\nstudent comes to the end of the queue, and the second he leaves the queue if\nhe still cannot get his tea. It is guaranteed that for every condition li - 1\n\u2264 li holds. The sum of n over all test cases doesn't exceed 1000. Note that in\nhacks you have to set t = 1. Output For each test case print n integers. i-th\nof them must be equal to the second when i-th student gets his tea, or 0 if he\nleaves without tea. Example Input 2 2 1 3 1 4 3 1 5 1 1 2 3 Output 1 2 1 0 2\nNote The example contains 2 tests: During 1-st second, students 1 and 2 come\nto the queue, and student 1 gets his tea. Student 2 gets his tea during 2-nd\nsecond. During 1-st second, students 1 and 2 come to the queue, student 1 gets\nhis tea, and student 2 leaves without tea. During 2-nd second, student 3 comes\nand gets his tea.\n\n",
        "cf_contest_id": 920,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n2\r\n1 3\r\n1 4\r\n3\r\n1 5\r\n1 1\r\n2 3\r\n",
                "1 2\r\n1 0 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "19\r\n1\r\n1 1\r\n1\r\n1 2\r\n1\r\n1 1000\r\n1\r\n1 2000\r\n1\r\n2 2\r\n1\r\n2 3\r\n1\r\n2 1000\r\n1\r\n2 2000\r\n1\r\n1999 1999\r\n1\r\n1999 2000\r\n1\r\n2000 2000\r\n2\r\n1 1\r\n1 1\r\n2\r\n1 1\r\n1 2\r\n2\r\n1 2\r\n1 1\r\n2\r\n1 2000\r\n1 1\r\n2\r\n1 1\r\n1 2000\r\n2\r\n1 2000\r\n2 2\r\n2\r\n2 2000\r\n2 2\r\n2\r\n2 2\r\n2 2000\r\n",
                "1\r\n1\r\n1\r\n1\r\n2\r\n2\r\n2\r\n2\r\n1999\r\n1999\r\n2000\r\n1 0\r\n1 2\r\n1 0\r\n1 0\r\n1 2\r\n1 2\r\n2 0\r\n2 3\r\n"
            ],
            [
                "1\r\n11\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "1 0 0 0 0 0 0 0 0 0 0\r\n"
            ],
            [
                "1\r\n5\r\n1 1\r\n1 2\r\n1 5\r\n1 1\r\n1 1\r\n",
                "1 2 3 0 0\r\n"
            ]
        ]
    }
]