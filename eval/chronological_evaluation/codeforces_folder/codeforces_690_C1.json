[
    {
        "name": "Brain Network (easy)",
        "description": "One particularly well-known fact about zombies is that they move and think\nterribly slowly. While we still don't know why their movements are so\nsluggish, the problem of laggy thinking has been recently resolved. It turns\nout that the reason is not (as previously suspected) any kind of brain defect\n\u2013 it's the opposite! Independent researchers confirmed that the nervous system\nof a zombie is highly complicated \u2013 it consists of n brains (much like a cow\nhas several stomachs). They are interconnected by brain connectors, which are\nveins capable of transmitting thoughts between brains. There are two important\nproperties such a brain network should have to function properly: It should be\npossible to exchange thoughts between any two pairs of brains (perhaps\nindirectly, through other brains). There should be no redundant brain\nconnectors, that is, removing any brain connector would make property 1 false.\nIf both properties are satisfied, we say that the nervous system is valid.\nUnfortunately (?), if the system is not valid, the zombie stops thinking and\nbecomes (even more) dead. Your task is to analyze a given nervous system of a\nzombie and find out whether it is valid. Input The first line of the input\ncontains two space-separated integers n and m (1 \u2264 n, m \u2264 1000) denoting the\nnumber of brains (which are conveniently numbered from 1 to n) and the number\nof brain connectors in the nervous system, respectively. In the next m lines,\ndescriptions of brain connectors follow. Every connector is given as a pair of\nbrains a b it connects (1 \u2264 a, b \u2264 n, a \u2260 b). Output The output consists of\none line, containing either yes or no depending on whether the nervous system\nis valid. Examples Input 4 4 1 2 2 3 3 1 4 1 Output no Input 6 5 1 2 2 3 3 4 4\n5 3 6 Output yes\n\n",
        "cf_contest_id": 690,
        "cf_index": "C1",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 4\r\n1 2\r\n2 3\r\n3 1\r\n4 1\r\n",
                "no\r\n\r\n"
            ],
            [
                "6 5\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n3 6\r\n",
                "yes\r\n\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1 2\r\n",
                "yes\r\n\r\n"
            ],
            [
                "3 3\r\n2 1\r\n1 3\r\n3 2\r\n",
                "no\r\n\r\n"
            ],
            [
                "3 2\r\n1 2\r\n2 3\r\n",
                "yes\r\n\r\n"
            ],
            [
                "9 8\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n5 6\r\n6 7\r\n7 8\r\n8 9\r\n",
                "no\r\n\r\n"
            ],
            [
                "8 7\r\n6 2\r\n1 5\r\n4 8\r\n4 7\r\n6 7\r\n8 3\r\n8 1\r\n",
                "yes\r\n\r\n"
            ],
            [
                "200 5\r\n93 101\r\n199 164\r\n14 94\r\n115 61\r\n106 156\r\n",
                "no\r\n\r\n"
            ],
            [
                "10 9\r\n6 5\r\n9 2\r\n4 7\r\n2 3\r\n7 3\r\n3 4\r\n10 6\r\n1 2\r\n5 8\r\n",
                "no\r\n\r\n"
            ],
            [
                "10 9\r\n2 3\r\n6 8\r\n10 1\r\n1 8\r\n6 7\r\n8 7\r\n10 5\r\n7 10\r\n2 5\r\n",
                "no\r\n\r\n"
            ],
            [
                "10 9\r\n3 2\r\n4 1\r\n6 1\r\n7 1\r\n9 2\r\n6 9\r\n5 2\r\n7 9\r\n3 7\r\n",
                "no\r\n\r\n"
            ]
        ]
    }
]