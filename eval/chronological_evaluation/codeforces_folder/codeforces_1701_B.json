[
    {
        "name": "Permutation",
        "description": "Recall that a permutation of length \n    n\n is an array where each element\nfrom \n    1\n to \n    n\n occurs exactly once. For a fixed positive integer\n\n    d\n, let's define the cost of the permutation \n    p\n of length \n    n\n as\nthe number of indices \n    i\n \n    (1 \n    \u2264 i < n)\n such that \n    p_i \n    \u00b7 d\n    = p_i + 1\n. For example, if \n    d = 3\n and \n    p = [5, 2, 6, 7, 1, 3,\n    4]\n, then the cost of such a permutation is \n    2\n, because \n    p_2 \n    \u00b7\n    3 = p_3\n and \n    p_5 \n    \u00b7 3 = p_6\n. Your task is the following one: for\na given value \n    n\n, find the permutation of length \n    n\n and the value\n\n    d\n with maximum possible cost (over all ways to choose the permutation\nand \n    d\n). If there are multiple answers, then print any of them. Input The\nfirst line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 500\n) \u2014 the\nnumber of test cases. The single line of each test case contains a single\ninteger \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n). The sum of \n    n\n\nover all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test\ncase, print the value \n    d\n in the first line, and \n    n\n integers in the\nsecond line \u2014 the permutation itself. If there are multiple answers, then\nprint any of them. Example Input 2 2 3 Output 2 1 2 3 2 1 3\n\n",
        "cf_contest_id": 1701,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n2\r\n3\r\n",
                "2\r\n1\r\n2\r\n2\r\n1\r\n2\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]