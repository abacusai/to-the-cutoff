[
    {
        "name": "A Battle Against a Dragon",
        "description": "A squad of \n    n\n warriors is defending a castle from a dragon attack. There\nare \n    m\n barricades between the castle and the dragon. The warriors are\nnumbered from \n    1\n to \n    n\n. The \n    i\n-th warrior knows \n    k_i\n\nattacks: the \n    j\n-th of them deals \n    a_i,j\n damage to the dragon and\ncan only be applied if there are exactly \n    b_i,j\n barricades between the\ncastle and the dragon. The warriors make turns one after another, starting\nfrom warrior \n    1\n. After warrior \n    n\n makes his turn, the total damage\nto the dragon is calculated. The \n    i\n-th warrior performs exactly one of\nthree possible moves in his turn: destroys one barricade (if there are any\nleft); deploys one of his \n    k_i\n attacks; skips a turn. The total damage is\nthe sum of damages dealt by the warriors who chose to deploy their attacks in\ntheir turn. What is the maximum total damage the warriors can deal to the\ndragon? Input The first line contains two integers \n    n\n and \n    m\n (\n    1\n    \n    \u2264 n, m \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the number of warriors and the initial\nnumber of barricades. Then the descriptions of attacks for each warrior\nfollow. The \n    i\n-th description consists of three lines. The first line\ncontains a single integer \n    k_i\n (\n    1 \n    \u2264 k_i \n    \u2264 m + 1\n) \u2014 the\nnumber of attacks the \n    i\n-th warrior knows. The second line contains\n\n    k_i\n integers \n    a_i,1, a_i,2, \n    \u2026, a_i,k_i\n (\n    1 \n    \u2264\n    a_i,j\n    \u2264 10^9\n) \u2014 the damage of each attack. The third line contains\n\n    k_i\n integers \n    b_i,1, b_i,2, \n    \u2026, b_i,k_i\n (\n    0 \n    \u2264\n    b_i,j\n    \u2264 m\n) \u2014 the required number of barricades for each attack.\n\n    b_i,j\n for the \n    i\n-th warrior are pairwise distinct. The attacks\nare listed in the increasing order of the barricades requirement, so\n\n    b_i,1 < b_i,2 < \n    \u2026 < b_i,k_i\n. The sum of \n    k_i\n over all\nwarriors doesn't exceed \n    3 \n    \u00b7 10^5\n. Output Print a single integer \u2014\nthe maximum total damage the warriors can deal to the dragon. Examples Input 2\n4 1 2 4 2 10 5 3 4 Output 10 Input 3 3 1 1 0 1 20 2 1 100 3 Output 100 Input 2\n1 2 10 10 0 1 2 30 20 0 1 Output 30 Note In the first example, the optimal\nchoice is the following: warrior \n    1\n destroys a barricade, now there are\n\n    3\n barricades left; warrior \n    2\n deploys his first attack (he can do\nit because \n    b_1,1=3\n, which is the current number of barricades). The\ntotal damage is \n    10\n. If the first warrior used his attack or skipped his\nturn, then the second warrior would only be able to deploy his second attack.\nThus, the total damage would be \n    2+5=7\n or \n    5\n. In the second example,\nthe first warrior skips his move, the second warrior skips his move and the\nthird warrior deploys his only attack. In the third example, two equivalent\noptions are: both warriors deploy their second attacks; the first warrior\ndestroys one barricade and the second warrior deploys his first attack. Both\noptions yield \n    30\n total damage.\n\n",
        "cf_contest_id": 1571,
        "cf_index": "G",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "data structures",
            "dp"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 4\r\n1\r\n2\r\n4\r\n2\r\n10 5\r\n3 4\r\n",
                "10\r\n"
            ],
            [
                "3 3\r\n1\r\n1\r\n0\r\n1\r\n20\r\n2\r\n1\r\n100\r\n3\r\n",
                "100\r\n"
            ],
            [
                "2 1\r\n2\r\n10 10\r\n0 1\r\n2\r\n30 20\r\n0 1\r\n",
                "30\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 10\r\n2\r\n2 5\r\n5 9\r\n5\r\n6 10 3 1 6\r\n0 4 5 7 9\r\n3\r\n7 2 10\r\n2 6 8\r\n",
                "10\r\n"
            ],
            [
                "3 10\r\n4\r\n42 13 88 67\r\n4 6 8 9\r\n4\r\n89 97 97 37\r\n1 3 4 10\r\n2\r\n89 4\r\n1 4\r\n",
                "37\r\n"
            ],
            [
                "5 20\r\n5\r\n67 18 33 21 42\r\n5 8 9 10 18\r\n8\r\n68 67 80 88 33 23 40 89\r\n7 8 10 11 12 16 18 20\r\n2\r\n12 91\r\n6 8\r\n3\r\n57 27 40\r\n3 9 12\r\n2\r\n21 23\r\n3 9\r\n",
                "89\r\n"
            ]
        ]
    }
]