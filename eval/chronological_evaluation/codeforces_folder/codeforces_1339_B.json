[
    {
        "name": "Sorted Adjacent Differences",
        "description": "You have array of \n    n\n numbers \n    a_1, a_2, \n    \u2026, a_n\n.\nRearrange these numbers to satisfy \n    |a_1 - a_2| \n    \u2264 |a_2 - a_3|\n    \n    \u2264\n    \u2026\n    \u2264 |a_n-1 - a_n|\n, where \n    |x|\n denotes absolute\nvalue of \n    x\n. It's always possible to find such rearrangement. Note that\nall numbers in \n    a\n are not necessarily different. In other words, some\nnumbers of \n    a\n may be same. You have to answer independent \n    t\n test\ncases. Input The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^4\n) \u2014 the number of test cases. The first line of each test case\ncontains single integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the length of\narray \n    a\n. It is guaranteed that the sum of values of \n    n\n over all\ntest cases in the input does not exceed \n    10^5\n. The second line of each\ntest case contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n\n(\n    -10^9\n    \u2264 a_i\n    \u2264 10^9\n). Output For each test case, print the\nrearranged version of array \n    a\n which satisfies given condition. If there\nare multiple valid rearrangements, print any of them. Example Input 2 6 5 -2 4\n8 6 5 4 8 1 4 2 Output 5 5 4 6 8 -2 1 2 4 8 Note In the first test case, after\ngiven rearrangement, \n    |a_1 - a_2| = 0 \n    \u2264 |a_2 - a_3| = 1 \n    \u2264\n    |a_3 - a_4| = 2 \n    \u2264 |a_4 - a_5| = 2 \n    \u2264 |a_5 - a_6| = 10\n.\nThere are other possible answers like \"5 4 5 6 -2 8\". In the second test case,\nafter given rearrangement, \n    |a_1 - a_2| = 1 \n    \u2264 |a_2 - a_3| = 2\n    \n    \u2264 |a_3 - a_4| = 4\n. There are other possible answers like \"2 4 8 1\".\n\n",
        "cf_contest_id": 1339,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n6\r\n5 -2 4 8 6 5\r\n4\r\n8 1 4 2\r\n",
                "5\r\n5\r\n6\r\n4\r\n8\r\n-2\r\n4\r\n2\r\n8\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n29\r\n31 16383 15 127 255 3 4095 536870911 7 63 262143 2097151 1 16777215 134217727 524287 511 8388607 67108863 1023 8191 2047 32767 33554431 268435455 65535 131071 1048575 4194303\r\n",
                "32767\r\n65535\r\n16383\r\n131071\r\n8191\r\n262143\r\n4095\r\n524287\r\n2047\r\n1048575\r\n1023\r\n2097151\r\n511\r\n4194303\r\n255\r\n8388607\r\n127\r\n16777215\r\n63\r\n33554431\r\n31\r\n67108863\r\n15\r\n134217727\r\n7\r\n268435455\r\n3\r\n536870911\r\n1\r\n"
            ]
        ]
    }
]