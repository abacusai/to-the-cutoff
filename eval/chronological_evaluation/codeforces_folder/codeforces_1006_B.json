[
    {
        "name": "Polycarp's Practice",
        "description": "Polycarp is practicing his problem solving skill. He has a list of \n    n\n\nproblems with difficulties \n    a_1, a_2, \n    \u2026, a_n\n, respectively. His\nplan is to practice for exactly \n    k\n days. Each day he has to solve at\nleast one problem from his list. Polycarp solves the problems in the order\nthey are given in his list, he cannot skip any problem from his list. He has\nto solve all \n    n\n problems in exactly \n    k\n days. Thus, each day Polycarp\nsolves a contiguous sequence of (consecutive) problems from the start of the\nlist. He can't skip problems or solve them multiple times. As a result, in\n\n    k\n days he will solve all the \n    n\n problems. The profit of the\n\n    j\n-th day of Polycarp's practice is the maximum among all the\ndifficulties of problems Polycarp solves during the \n    j\n-th day (i.e. if he\nsolves problems with indices from \n    l\n to \n    r\n during a day, then the\nprofit of the day is \n    max\n    _l \n    \u2264 i \n    \u2264 ra_i\n). The total\nprofit of his practice is the sum of the profits over all \n    k\n days of his\npractice. You want to help Polycarp to get the maximum possible total profit\nover all valid ways to solve problems. Your task is to distribute all \n    n\n\nproblems between \n    k\n days satisfying the conditions above in such a way,\nthat the total profit is maximum. For example, if \n    n = 8, k = 3\n and \n    a\n    = [5, 4, 2, 6, 5, 1, 9, 2]\n, one of the possible distributions with maximum\ntotal profit is: \n    [5, 4, 2], [6, 5], [1, 9, 2]\n. Here the total profit\nequals \n    5 + 6 + 9 = 20\n. Input The first line of the input contains two\nintegers \n    n\n and \n    k\n (\n    1 \n    \u2264 k \n    \u2264 n \n    \u2264 2000\n) \u2014 the number\nof problems and the number of days, respectively. The second line of the input\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    2000\n) \u2014 difficulties of problems in Polycarp's list, in the order they are\nplaced in the list (i.e. in the order Polycarp will solve them). Output In the\nfirst line of the output print the maximum possible total profit. In the\nsecond line print exactly \n    k\n positive integers \n    t_1, t_2, \n    \u2026,\n    t_k\n (\n    t_1 + t_2 + \n    \u2026 + t_k\n must equal \n    n\n), where \n    t_j\n\nmeans the number of problems Polycarp will solve during the \n    j\n-th day in\norder to achieve the maximum possible total profit of his practice. If there\nare many possible answers, you may print any of them. Examples Input 8 3 5 4 2\n6 5 1 9 2 Output 20 3 2 3 Input 5 1 1 1 1 1 1 Output 1 5 Input 4 2 1 2000 2000\n2 Output 4000 2 2 Note The first example is described in the problem\nstatement. In the second example there is only one possible distribution. In\nthe third example the best answer is to distribute problems in the following\nway: \n    [1, 2000], [2000, 2]\n. The total profit of this distribution is\n\n    2000 + 2000 = 4000\n.\n\n",
        "cf_contest_id": 1006,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8 3\r\n5 4 2 6 5 1 9 2\r\n",
                "20\r\n4 2 2\r\n"
            ],
            [
                "5 1\r\n1 1 1 1 1\r\n",
                "1\r\n5\r\n"
            ],
            [
                "4 2\r\n1 2000 2000 2\r\n",
                "4000\r\n2 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n2000\r\n",
                "2000\r\n1\r\n"
            ],
            [
                "1 1\r\n1234\r\n",
                "1234\r\n1\r\n"
            ],
            [
                "3 2\r\n1 1 1\r\n",
                "2\r\n2 1\r\n"
            ],
            [
                "4 2\r\n3 5 1 1\r\n",
                "8\r\n1 3\r\n"
            ],
            [
                "5 3\r\n5 5 6 7 1\r\n",
                "18\r\n2 1 2\r\n"
            ],
            [
                "6 4\r\n1 1 1 1 2 2\r\n",
                "6\r\n3 1 1 1\r\n"
            ],
            [
                "5 3\r\n5 5 6 6 4\r\n",
                "17\r\n2 1 2\r\n"
            ],
            [
                "16 15\r\n14 4 9 12 17 1 1 8 12 13 6 9 17 2 18 12\r\n",
                "154\r\n1 1 1 1 2 1 1 1 1 1 1 1 1 1 1\r\n"
            ],
            [
                "1 1\r\n1996\r\n",
                "1996\r\n1\r\n"
            ],
            [
                "5 3\r\n5 5 5 9 10\r\n",
                "24\r\n3 1 1\r\n"
            ],
            [
                "18 15\r\n18 2 13 1 18 3 2 18 18 20 9 2 20 20 4 20 9 12\r\n",
                "204\r\n2 2 1 2 1 1 1 1 1 1 1 1 1 1 1\r\n"
            ],
            [
                "5 3\r\n1 20 20 50 50\r\n",
                "120\r\n3 1 1\r\n"
            ],
            [
                "8 3\r\n15 14 11 19 17 14 14 8\r\n",
                "51\r\n3 1 4\r\n"
            ],
            [
                "5 2\r\n15 20 6 19 6\r\n",
                "39\r\n3 2\r\n"
            ],
            [
                "6 3\r\n5 5 5 5 6 9\r\n",
                "20\r\n4 1 1\r\n"
            ],
            [
                "5 3\r\n2 2 2 3 3\r\n",
                "8\r\n3 1 1\r\n"
            ],
            [
                "7 3\r\n2 2 2 2 2 3 3\r\n",
                "8\r\n5 1 1\r\n"
            ],
            [
                "6 5\r\n1 1 6 6 6 6\r\n",
                "25\r\n2 1 1 1 1\r\n"
            ],
            [
                "8 4\r\n1 2 2 2 2 3 4 5\r\n",
                "14\r\n5 1 1 1\r\n"
            ],
            [
                "6 4\r\n1 1 1 5 5 5\r\n",
                "16\r\n3 1 1 1\r\n"
            ],
            [
                "6 3\r\n1 2 2 2 4 5\r\n",
                "11\r\n4 1 1\r\n"
            ],
            [
                "18 6\r\n17 17 19 14 10 20 18 16 6 7 2 15 14 16 13 6 12 11\r\n",
                "107\r\n1 1 3 1 7 5\r\n"
            ],
            [
                "6 3\r\n1 1 2 2 3 4\r\n",
                "9\r\n4 1 1\r\n"
            ],
            [
                "8 3\r\n5 4 2 5 6 1 9 2\r\n",
                "20\r\n4 2 2\r\n"
            ]
        ]
    }
]