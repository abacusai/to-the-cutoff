[
    {
        "name": "Restorer Distance",
        "description": "You have to restore the wall. The wall consists of \n    N\n pillars of bricks,\nthe height of the \n    i\n-th pillar is initially equal to \n    h_i\n, the\nheight is measured in number of bricks. After the restoration all the \n    N\n\npillars should have equal heights. You are allowed the following operations:\nput a brick on top of one pillar, the cost of this operation is \n    A\n;\nremove a brick from the top of one non-empty pillar, the cost of this\noperation is \n    R\n; move a brick from the top of one non-empty pillar to the\ntop of another pillar, the cost of this operation is \n    M\n.You cannot create\nadditional pillars or ignore some of pre-existing pillars even if their height\nbecomes \n    0\n. What is the minimal total cost of restoration, in other\nwords, what is the minimal total cost to make all the pillars of equal height?\nInput The first line of input contains four integers \n    N\n, \n    A\n,\n\n    R\n, \n    M\n (\n    1 \n    \u2264 N \n    \u2264 10^5\n, \n    0 \n    \u2264 A, R, M \n    \u2264\n    10^4\n) \u2014 the number of pillars and the costs of operations. The second\nline contains \n    N\n integers \n    h_i\n (\n    0 \n    \u2264 h_i\n    \u2264 10^9\n)\n\u2014 initial heights of pillars. Output Print one integer \u2014 the minimal cost of\nrestoration. Examples Input 3 1 100 100 1 3 8 Output 12 Input 3 100 1 100 1 3\n8 Output 9 Input 3 100 100 1 1 3 8 Output 4 Input 5 1 2 4 5 5 3 6 5 Output 4\nInput 5 1 2 2 5 5 3 6 5 Output 3\n\n",
        "cf_contest_id": 1355,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "math",
            "sortings",
            "ternary search"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 1 100 100\r\n1 3 8\r\n",
                "12\r\n"
            ],
            [
                "3 100 1 100\r\n1 3 8\r\n",
                "9\r\n"
            ],
            [
                "3 100 100 1\r\n1 3 8\r\n",
                "4\r\n"
            ],
            [
                "5 1 2 4\r\n5 5 3 6 5\r\n",
                "4\r\n"
            ],
            [
                "5 1 2 2\r\n5 5 3 6 5\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 7 8 3\r\n3 10 4 9 2 7 6 10 4 8\r\n",
                "57\r\n"
            ],
            [
                "10 7122 8827 3205\r\n452685204 144160553 743427456 403576146 888744473 313727757 22025193 886601085 576370788 787974081\r\n",
                "4081476227653\r\n"
            ],
            [
                "100 52 92 72\r\n67 100 56 15 0 92 26 74 44 61 6 44 45 19 22 19 9 85 67 78 24 61 81 99 62 84 5 71 11 65 5 97 9 72 11 81 81 64 65 91 52 21 20 53 68 91 4 75 84 88 72 27 48 23 9 65 14 6 54 55 6 1 89 78 40 45 98 45 27 51 94 72 67 81 20 19 38 64 14 40 57 21 82 99 37 92 21 22 30 14 65 93 60 8 63 60 27 30 32 11\r\n",
                "95816\r\n"
            ],
            [
                "10 4078 1859 607\r\n160396657 831922387 330524879 901162754 847008736 781626686 496115244 470330335 824475169 620982654\r\n",
                "639731251326\r\n"
            ],
            [
                "10 1299 4362 8516\r\n177913931 857265729 858027469 743427538 70328308 334897178 739985290 903278439 602456716 623851298\r\n",
                "3721721948256\r\n"
            ],
            [
                "10 8521 9022 6018\r\n195431204 251205289 385530059 954288541 703713298 183134963 983855337 409855471 11842043 921687235\r\n",
                "9408102096630\r\n"
            ],
            [
                "10 7901 3681 1769\r\n286577406 276548631 281628869 796553324 632065579 736405456 932758091 211399795 789823590 924555879\r\n",
                "2284083174243\r\n"
            ],
            [
                "1 100 100 100\r\n1000000000\r\n",
                "0\r\n"
            ],
            [
                "1 0 0 0\r\n1\r\n",
                "0\r\n"
            ]
        ]
    }
]