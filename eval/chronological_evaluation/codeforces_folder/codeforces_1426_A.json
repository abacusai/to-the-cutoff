[
    {
        "name": "Floor Number",
        "description": "Vasya goes to visit his classmate Petya. Vasya knows that Petya's apartment\nnumber is \n    n\n. There is only one entrance in Petya's house and the\ndistribution of apartments is the following: the first floor contains \n    2\n\napartments, every other floor contains \n    x\n apartments each. Apartments are\nnumbered starting from one, from the first floor. I.e. apartments on the first\nfloor have numbers \n    1\n and \n    2\n, apartments on the second floor have\nnumbers from \n    3\n to \n    (x + 2)\n, apartments on the third floor have\nnumbers from \n    (x + 3)\n to \n    (2 \n    \u00b7 x + 2)\n, and so on. Your task is\nto find the number of floor on which Petya lives. Assume that the house is\nalways high enough to fit at least \n    n\n apartments. You have to answer\n\n    t\n independent test cases. Input The first line of the input contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. Then\n\n    t\n test cases follow. The only line of the test case contains two\nintegers \n    n\n and \n    x\n (\n    1 \n    \u2264 n, x \n    \u2264 1000\n) \u2014 the number of\nPetya's apartment and the number of apartments on each floor of the house\nexcept the first one (there are two apartments on the first floor). Output For\neach test case, print the answer: the number of floor on which Petya lives.\nExample Input 4 7 3 1 5 22 5 987 13 Output 3 1 5 77 Note Consider the first\ntest case of the example: the first floor contains apartments with numbers\n\n    1\n and \n    2\n, the second one contains apartments with numbers \n    3\n,\n\n    4\n and \n    5\n, the third one contains apartments with numbers \n    6\n,\n\n    7\n and \n    8\n. Therefore, Petya lives on the third floor. In the second\ntest case of the example, Petya lives in the apartment \n    1\n which is on the\nfirst floor.\n\n",
        "cf_contest_id": 1426,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n7 3\r\n1 5\r\n22 5\r\n987 13\r\n",
                "3\r\n1\r\n5\r\n77\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n7 3\r\n1 5\r\n22 5\r\n987 13\r\n7 3\r\n1 5\r\n22 5\r\n",
                "3\r\n1\r\n5\r\n77\r\n3\r\n1\r\n5\r\n"
            ]
        ]
    }
]