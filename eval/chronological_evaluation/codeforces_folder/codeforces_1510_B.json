[
    {
        "name": "Button Lock",
        "description": "You are standing in front of the room with great treasures. The only thing\nstopping you is the door with a push-button combination lock. This lock has\n\n    d\n buttons with digits from \n    0\n to \n    d - 1\n. Whenever you press a\nbutton, it stays pushed down. You can not pop back up just one button, but\nthere is a \"RESET\" button \u2014 pressing it pops up all other buttons. Initially,\nno buttons are pushed down. The door instantly opens when some specific set of\ndigits is pushed down. Sadly, you don't know the password for it. Having read\nthe documentation for this specific lock, you found out that there are \n    n\n\npossible passwords for this particular lock. Find the shortest sequence of\nbutton presses, such that all possible passwords appear at least once during\nits execution. Any shortest correct sequence of button presses will be\naccepted. Input The first line contains two integers \n    d\n and \n    n\n (\n    1\n    \n    \u2264 d \n    \u2264 10\n; \n    1 \n    \u2264 n \n    \u2264 2^d - 1\n). Next \n    n\n lines\ndescribe possible passwords. Each line contains a string \n    s_i\n of \n    d\n\nzeros and ones: for all \n    j\n from \n    1\n to \n    d\n the \n    j\n-th\ncharacter is 1 iff the button with the digit \n    j - 1\n must be pushed down.\nAll strings \n    s_i\n are different, and each string contains at least one 1.\nOutput On the first line, print the number \n    k\n \u2014 the minimum number of\nbutton presses. On the second line, print \n    k\n tokens, describing the\nsequence. Whenever you press a button with a digit, print that digit. Whenever\nyou press \"RESET\", print \"R\". Examples Input 2 2 10 11 Output 2 0 1 Input 3 4\n001 111 101 011 Output 6 2 0 R 1 2 0 Note In the second example, the sequence\n1 2 R 2 0 1 is also possible.\n\n",
        "cf_contest_id": 1510,
        "cf_index": "B",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "flows",
            "graph matchings",
            "graphs"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2 2\r\n10\r\n11\r\n",
                "2\r\n0 1 "
            ],
            [
                "3 4\r\n001\r\n111\r\n101\r\n011\r\n",
                "6\r\n2 0 1 R 1 2 "
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n",
                "1\r\n0 "
            ],
            [
                "2 1\r\n01\r\n",
                "1\r\n1 "
            ],
            [
                "2 2\r\n01\r\n11\r\n",
                "2\r\n1 0 "
            ],
            [
                "2 3\r\n10\r\n01\r\n11\r\n",
                "4\r\n0 1 R 1 "
            ],
            [
                "3 1\r\n011\r\n",
                "2\r\n1 2 "
            ],
            [
                "3 3\r\n010\r\n110\r\n111\r\n",
                "3\r\n1 0 2 "
            ],
            [
                "3 7\r\n100\r\n010\r\n110\r\n001\r\n101\r\n011\r\n111\r\n",
                "9\r\n0 1 2 R 2 0 R 1 2 "
            ],
            [
                "4 2\r\n0100\r\n1101\r\n",
                "3\r\n1 0 3 "
            ],
            [
                "4 7\r\n1100\r\n0010\r\n1001\r\n0101\r\n1101\r\n0011\r\n1011\r\n",
                "13\r\n0 1 3 R 0 3 2 R 1 3 R 2 3 "
            ],
            [
                "4 14\r\n1000\r\n0100\r\n1100\r\n0010\r\n1010\r\n0110\r\n1110\r\n0001\r\n1001\r\n0101\r\n1101\r\n1011\r\n0111\r\n1111\r\n",
                "19\r\n0 1 2 3 R 3 0 1 R 2 0 3 R 1 2 3 R 1 3 "
            ],
            [
                "5 1\r\n00001\r\n",
                "1\r\n4 "
            ],
            [
                "5 15\r\n10000\r\n11000\r\n00100\r\n10100\r\n10010\r\n01010\r\n00110\r\n11110\r\n10001\r\n00101\r\n01101\r\n00011\r\n10011\r\n00111\r\n11111\r\n",
                "29\r\n0 1 2 3 4 R 2 4 1 R 0 3 4 R 2 3 4 R 2 0 R 1 3 R 0 4 R 3 4 "
            ],
            [
                "5 30\r\n10000\r\n01000\r\n11000\r\n00100\r\n01100\r\n11100\r\n00010\r\n10010\r\n01010\r\n11010\r\n00110\r\n10110\r\n01110\r\n11110\r\n00001\r\n10001\r\n01001\r\n11001\r\n00101\r\n10101\r\n01101\r\n11101\r\n00011\r\n10011\r\n01011\r\n11011\r\n00111\r\n10111\r\n01111\r\n11111\r\n",
                "45\r\n2 4 1 3 0 R 2 3 0 4 R 1 0 4 3 R 4 0 2 1 R 1 3 2 0 R 0 1 3 R 0 3 4 R 1 4 3 R 1 2 0 R 3 4 2 "
            ],
            [
                "7 30\r\n0100001\r\n1110000\r\n0011000\r\n1011000\r\n0111001\r\n0010100\r\n1010101\r\n0110100\r\n1011100\r\n0000010\r\n1000011\r\n1000010\r\n1100011\r\n0010010\r\n1010011\r\n0110011\r\n0001011\r\n1001011\r\n0111011\r\n1111010\r\n0000110\r\n1000110\r\n1100111\r\n1010111\r\n1110111\r\n0001110\r\n1001111\r\n1101110\r\n0011111\r\n0011110\r\n",
                "61\r\n2 5 0 6 4 1 R 4 5 3 2 6 R 0 5 4 1 3 R 3 5 6 0 4 R 0 5 6 1 4 R 0 1 2 3 5 R 5 1 2 6 3 R 1 6 2 3 R 2 4 0 6 R 2 3 0 4 R 1 2 4 "
            ],
            [
                "10 1\r\n1100100010\r\n",
                "4\r\n0 1 4 8 "
            ],
            [
                "10 5\r\n1010101001\r\n1001001000\r\n1101101100\r\n1011110100\r\n1011110001\r\n",
                "26\r\n0 3 6 1 4 7 R 0 2 3 4 5 7 R 0 2 3 4 5 9 R 0 2 4 6 9 "
            ],
            [
                "10 15\r\n1010011111\r\n0001010001\r\n1001001010\r\n1001000011\r\n0101000011\r\n0000110010\r\n1000101111\r\n0100111101\r\n0010101001\r\n1010111111\r\n0110101000\r\n1110110111\r\n0011101111\r\n1011111110\r\n1011100001\r\n",
                "73\r\n0 2 5 6 7 8 9 4 R 4 5 8 0 1 2 7 9 R 0 3 6 8 2 4 5 7 R 2 4 6 9 3 7 8 R 0 4 6 7 8 9 R 1 4 5 6 7 9 R 0 2 3 4 9 R 0 3 8 9 R 1 3 8 9 R 1 2 4 6 R 3 5 9 "
            ],
            [
                "10 40\r\n0100000110\r\n0100001111\r\n1100001111\r\n1100000111\r\n0010001111\r\n1010000000\r\n0110000010\r\n0001001011\r\n0101000000\r\n0101000001\r\n1101001011\r\n1101001110\r\n1111000101\r\n1000101100\r\n0010101100\r\n0010101111\r\n1010101100\r\n1110100010\r\n0001100110\r\n1001101000\r\n1001100101\r\n0000010010\r\n0000011011\r\n1000011001\r\n1110011110\r\n0001011010\r\n0101010000\r\n0011010111\r\n1011010111\r\n1111011000\r\n0000110001\r\n1000111110\r\n1000110111\r\n0010111011\r\n1010111011\r\n0110111110\r\n0110111010\r\n0011111110\r\n1111111000\r\n1111110010\r\n",
                "137\r\n0 2 1 4 8 3 5 R 5 8 0 1 2 6 7 R 2 3 5 7 8 9 0 R 5 6 8 9 2 4 0 R 1 2 8 4 5 6 7 R 3 5 6 8 2 4 7 R 1 3 5 0 2 6 4 R 4 5 9 0 7 8 R 3 6 8 9 0 1 R 1 7 8 0 3 6 R 1 3 9 0 2 7 R 0 4 6 7 5 8 R 2 6 7 8 9 4 R 1 6 7 8 9 0 R 0 3 4 7 9 R 0 1 7 8 9 R 2 4 6 7 0 R 0 3 4 6 R 3 4 7 8 R 0 5 6 9 "
            ]
        ]
    }
]