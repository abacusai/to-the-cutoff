[
    {
        "name": "Traps",
        "description": "There are \n    n\n traps numbered from \n    1\n to \n    n\n. You will go through\nthem one by one in order. The \n    i\n-th trap deals \n    a_i\n base damage to\nyou. Instead of going through a trap, you can jump it over. You can jump over\nno more than \n    k\n traps. If you jump over a trap, it does not deal any\ndamage to you. But there is an additional rule: if you jump over a trap, all\nnext traps damages increase by \n    1\n (this is a bonus damage). Note that if\nyou jump over a trap, you don't get any damage (neither base damage nor bonus\ndamage). Also, the bonus damage stacks so, for example, if you go through a\ntrap \n    i\n with base damage \n    a_i\n, and you have already jumped over\n\n    3\n traps, you get \n    (a_i + 3)\n damage. You have to find the minimal\ndamage that it is possible to get if you are allowed to jump over no more than\n\n    k\n traps. Input The input consists of multiple test cases. The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of\ntest cases. Description of the test cases follows. The first line of each test\ncase contains two integers \n    n\n and \n    k\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n, \n    1 \n    \u2264 k \n    \u2264 n\n) \u2014 the number of traps and the number of jump\novers that you are allowed to make. The second line of each test case contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n)\n\u2014 base damage values of all traps. It is guaranteed that the sum of \n    n\n\nover all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test\ncase output a single integer \u2014 the minimal total damage that it is possible to\nget if you are allowed to jump over no more than \n    k\n traps. Example Input\n5 4 4 8 7 1 4 4 1 5 10 11 5 7 5 8 2 5 15 11 2 8 6 3 1 2 3 4 5 6 1 1 7 Output 0\n21 9 6 0 Note In the first test case it is allowed to jump over all traps and\ntake \n    0\n damage. In the second test case there are \n    5\n ways to jump\nover some traps: Do not jump over any trap.Total damage: \n    5 + 10 + 11 + 5 =\n    31\n. Jump over the \n    1\n-st trap.Total damage: \n    0 + (10 +\n    1) + (11 + 1) + (5 + 1) = 29\n. Jump over the \n    2\n-nd trap.Total damage:\n\n    5 + \n    0 + (11 + 1) + (5 + 1) = 23\n. Jump over the \n    3\n-rd\ntrap.Total damage: \n    5 + 10 + \n    0 + (5 + 1) = 21\n. Jump over\nthe \n    4\n-th trap.Total damage: \n    5 + 10 + 11 + \n    0 = 26\n. To\nget minimal damage it is needed to jump over the \n    3\n-rd trap, so the\nanswer is \n    21\n. In the third test case it is optimal to jump over the\ntraps \n    1\n, \n    3\n, \n    4\n, \n    5\n, \n    7\n: Total damage: \n    0 + (2 +\n    1) + 0 + 0 + 0 + (2 + 4) + 0 = 9\n.\n\n",
        "cf_contest_id": 1684,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4 4\r\n8 7 1 4\r\n4 1\r\n5 10 11 5\r\n7 5\r\n8 2 5 15 11 2 8\r\n6 3\r\n1 2 3 4 5 6\r\n1 1\r\n7\r\n",
                "0\r\n21\r\n9\r\n6\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n10 5\r\n1 1 1 1 1 1 1 1 1 1\r\n",
                "5\r\n"
            ],
            [
                "1\r\n6 5\r\n4 1 100 100 1 1\r\n",
                "2\r\n"
            ]
        ]
    }
]