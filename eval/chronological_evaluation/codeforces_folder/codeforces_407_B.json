[
    {
        "name": "Long Path",
        "description": "One day, little Vasya found himself in a maze consisting of (n + 1) rooms,\nnumbered from 1 to (n + 1). Initially, Vasya is at the first room and to get\nout of the maze, he needs to get to the (n + 1)-th one. The maze is organized\nas follows. Each room of the maze has two one-way portals. Let's consider room\nnumber i (1 \u2264 i \u2264 n), someone can use the first portal to move from it to room\nnumber (i + 1), also someone can use the second portal to move from it to room\nnumber pi, where 1 \u2264 pi \u2264 i. In order not to get lost, Vasya decided to act as\nfollows. Each time Vasya enters some room, he paints a cross on its ceiling.\nInitially, Vasya paints a cross at the ceiling of room 1. Let's assume that\nVasya is in room i and has already painted a cross on its ceiling. Then, if\nthe ceiling now contains an odd number of crosses, Vasya uses the second\nportal (it leads to room pi), otherwise Vasya uses the first portal. Help\nVasya determine the number of times he needs to use portals to get to room (n\n+ 1) in the end. Input The first line contains integer n (1 \u2264 n \u2264 10^3) \u2014 the\nnumber of rooms. The second line contains n integers pi (1 \u2264 pi \u2264 i). Each pi\ndenotes the number of the room, that someone can reach, if he will use the\nsecond portal in the i-th room. Output Print a single number \u2014 the number of\nportal moves the boy needs to go out of the maze. As the number can be rather\nlarge, print it modulo 1000000007 (10^9 + 7). Examples Input 2 1 2 Output 4\nInput 4 1 1 2 3 Output 20 Input 5 1 1 1 1 1 Output 62\n\n",
        "cf_contest_id": 407,
        "cf_index": "B",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1 2\r\n",
                "4\r\n"
            ],
            [
                "4\r\n1 1 2 3\r\n",
                "20\r\n"
            ],
            [
                "5\r\n1 1 1 1 1\r\n",
                "62\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n1 2 1 3 1 2 1\r\n",
                "154\r\n"
            ],
            [
                "1\r\n1\r\n",
                "2\r\n"
            ],
            [
                "3\r\n1 1 3\r\n",
                "8\r\n"
            ],
            [
                "10\r\n1 1 3 2 2 1 3 4 7 5\r\n",
                "858\r\n"
            ],
            [
                "20\r\n1 2 2 2 2 1 4 7 8 6 5 3 5 3 8 11 5 10 16 10\r\n",
                "433410\r\n"
            ],
            [
                "32\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "589934534\r\n"
            ],
            [
                "10\r\n1 1 3 2 2 1 3 4 7 5\r\n",
                "858\r\n"
            ],
            [
                "30\r\n1 1 2 2 5 6 4 3 4 7 3 5 12 12 2 15 3 8 3 10 12 3 14 1 10 4 22 11 22 27\r\n",
                "132632316\r\n"
            ],
            [
                "70\r\n1 1 2 3 4 3 5 2 2 4 8 6 13 6 13 3 5 4 5 10 11 9 11 8 12 24 21 6 9 29 25 31 17 27 3 17 35 5 21 11 27 14 33 7 33 44 22 33 21 11 38 46 53 46 3 22 5 27 55 22 41 25 56 61 27 28 11 66 68 13\r\n",
                "707517223\r\n"
            ],
            [
                "10\r\n1 1 1 1 1 1 1 1 1 1\r\n",
                "2046\r\n"
            ],
            [
                "20\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "2097150\r\n"
            ],
            [
                "102\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "810970229\r\n"
            ],
            [
                "10\r\n1 2 3 4 5 6 7 8 9 10\r\n",
                "20\r\n"
            ],
            [
                "20\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\r\n",
                "40\r\n"
            ],
            [
                "107\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107\r\n",
                "214\r\n"
            ],
            [
                "129\r\n1 1 3 3 1 4 7 4 3 5 8 11 3 9 15 4 11 17 1 6 18 9 11 13 17 22 8 18 26 13 16 20 3 16 35 26 23 28 27 30 39 29 43 8 14 6 17 32 26 31 2 18 3 47 52 21 57 1 35 35 53 47 16 26 30 65 48 2 32 11 10 5 4 1 4 53 71 21 53 8 58 49 17 6 19 80 1 49 43 60 12 60 35 25 86 45 47 97 52 74 10 91 93 31 69 41 80 90 67 4 94 92 82 36 27 18 65 8 45 90 42 115 34 61 16 97 20 43 104\r\n",
                "931883285\r\n"
            ],
            [
                "100\r\n1 1 3 1 5 1 1 1 8 9 7 3 11 11 15 14 4 10 11 12 1 10 13 11 7 23 8 12 18 23 27 17 14 29 1 33 5 24 26 29 25 14 40 8 43 29 43 40 34 18 21 31 3 8 20 14 28 29 3 54 14 3 59 1 45 9 13 11 50 48 26 57 17 33 9 52 21 46 24 20 16 58 69 77 52 36 80 2 31 3 44 36 64 90 84 8 21 25 65 67\r\n",
                "264413610\r\n"
            ],
            [
                "31\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 29\r\n",
                "758096363\r\n"
            ],
            [
                "104\r\n1 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102\r\n",
                "740446116\r\n"
            ]
        ]
    }
]