[
    {
        "name": "Two-gram",
        "description": "Two-gram is an ordered pair (i.e. string of length two) of capital Latin\nletters. For example, \"AZ\", \"AA\", \"ZA\" \u2014 three distinct two-grams. You are\ngiven a string \n    s\n consisting of \n    n\n capital Latin letters. Your task\nis to find any two-gram contained in the given string as a substring (i.e. two\nconsecutive characters of the string) maximal number of times. For example,\nfor string \n    s\n = \"BBAABBBA\" the answer is two-gram \"BB\", which contained\nin \n    s\n three times. In other words, find any most frequent two-gram. Note\nthat occurrences of the two-gram can overlap with each other. Input The first\nline of the input contains integer number \n    n\n (\n    2 \n    \u2264 n \n    \u2264 100\n)\n\u2014 the length of string \n    s\n. The second line of the input contains the\nstring \n    s\n consisting of \n    n\n capital Latin letters. Output Print the\nonly line containing exactly two capital Latin letters \u2014 any two-gram\ncontained in the given string \n    s\n as a substring (i.e. two consecutive\ncharacters of the string) maximal number of times. Examples Input 7 ABACABA\nOutput AB Input 5 ZZZAA Output ZZ Note In the first example \"BA\" is also valid\nanswer. In the second example the only two-gram \"ZZ\" can be printed because it\ncontained in the string \"ZZZAA\" two times.\n\n",
        "cf_contest_id": 977,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\nABACABA\r\n",
                "AB\r\n"
            ],
            [
                "5\r\nZZZAA\r\n",
                "ZZ\r\n"
            ]
        ],
        "private_cases": [
            [
                "26\r\nQWERTYUIOPASDFGHJKLZXCVBNM\r\n",
                "QW\r\n"
            ],
            [
                "2\r\nQA\r\n",
                "QA\r\n"
            ],
            [
                "2\r\nWW\r\n",
                "WW\r\n"
            ],
            [
                "11\r\nGGRRAATTZZZ\r\n",
                "ZZ\r\n"
            ],
            [
                "50\r\nNYQAHBYYOXLTRYQDMVENEMAQNBAKGLGQOLXNAIFNQTOCLNNQIA\r\n",
                "YQ\r\n"
            ],
            [
                "100\r\nURXCAIZFIBNJTPCZHBQIBCILLPXZCFGMKKZMNPLCYGAVJVIBMCZEBSJWPSCPQDYCTTKPOKIJRSKIZPDGCHVOUTMPNECYORSFZFNC\r\n",
                "IB\r\n"
            ],
            [
                "100\r\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\r\n",
                "AA\r\n"
            ],
            [
                "10\r\nSQSQSQSQTG\r\n",
                "SQ\r\n"
            ],
            [
                "5\r\nAZAZA\r\n",
                "AZ\r\n"
            ],
            [
                "15\r\nMIRZOYANOVECLOX\r\n",
                "MI\r\n"
            ],
            [
                "9\r\nEGORLETOV\r\n",
                "EG\r\n"
            ],
            [
                "8\r\nPUTINVOR\r\n",
                "PU\r\n"
            ],
            [
                "7\r\nKADUROV\r\n",
                "KA\r\n"
            ],
            [
                "6\r\nAZAZAZ\r\n",
                "AZ\r\n"
            ],
            [
                "3\r\nLOL\r\n",
                "LO\r\n"
            ],
            [
                "3\r\nKEK\r\n",
                "KE\r\n"
            ],
            [
                "5\r\nFUFEL\r\n",
                "FU\r\n"
            ],
            [
                "9\r\nMIKEPIDOR\r\n",
                "MI\r\n"
            ],
            [
                "9\r\nAAAAAAAAA\r\n",
                "AA\r\n"
            ],
            [
                "23\r\nAABBBAAACCCCCAAADDDDDDD\r\n",
                "DD\r\n"
            ]
        ]
    }
]