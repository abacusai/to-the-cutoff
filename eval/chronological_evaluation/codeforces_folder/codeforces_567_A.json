[
    {
        "name": "Lineland Mail",
        "description": "All cities of Lineland are located on the Ox coordinate axis. Thus, each city\nis associated with its position xi \u2014 a coordinate on the Ox axis. No two\ncities are located at a single point. Lineland residents love to send letters\nto each other. A person may send a letter only if the recipient lives in\nanother city (because if they live in the same city, then it is easier to drop\nin). Strange but true, the cost of sending the letter is exactly equal to the\ndistance between the sender's city and the recipient's city. For each city\ncalculate two values \u200b\u200bmini and maxi, where mini is the minimum cost of\nsending a letter from the i-th city to some other city, and maxi is the the\nmaximum cost of sending a letter from the i-th city to some other city Input\nThe first line of the input contains integer n (2 \u2264 n \u2264 10^5) \u2014 the number of\ncities in Lineland. The second line contains the sequence of n distinct\nintegers x1, x2, ..., xn ( - 10^9 \u2264 xi \u2264 10^9), where xi is the x-coordinate\nof the i-th city. All the xi's are distinct and follow in ascending order.\nOutput Print n lines, the i-th line must contain two integers mini, maxi,\nseparated by a space, where mini is the minimum cost of sending a letter from\nthe i-th city, and maxi is the maximum cost of sending a letter from the i-th\ncity. Examples Input 4 -5 -2 2 7 Output 3 12 3 9 4 7 5 12 Input 2 -1 1 Output\n2 2 2 2\n\n",
        "cf_contest_id": 567,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n-5 -2 2 7\r\n",
                "3 12\r\n3 9\r\n4 7\r\n5 12\r\n"
            ],
            [
                "2\r\n-1 1\r\n",
                "2 2\r\n2 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n-1 0 1\r\n",
                "1 2\r\n1 1\r\n1 2\r\n"
            ],
            [
                "4\r\n-1 0 1 3\r\n",
                "1 4\r\n1 3\r\n1 2\r\n2 4\r\n"
            ],
            [
                "3\r\n-1000000000 0 1000000000\r\n",
                "1000000000 2000000000\r\n1000000000 1000000000\r\n1000000000 2000000000\r\n"
            ],
            [
                "2\r\n-1000000000 1000000000\r\n",
                "2000000000 2000000000\r\n2000000000 2000000000\r\n"
            ],
            [
                "10\r\n1 10 12 15 59 68 130 912 1239 9123\r\n",
                "9 9122\r\n2 9113\r\n2 9111\r\n3 9108\r\n9 9064\r\n9 9055\r\n62 8993\r\n327 8211\r\n327 7884\r\n7884 9122\r\n"
            ],
            [
                "5\r\n-2 -1 0 1 2\r\n",
                "1 4\r\n1 3\r\n1 2\r\n1 3\r\n1 4\r\n"
            ],
            [
                "5\r\n-2 -1 0 1 3\r\n",
                "1 5\r\n1 4\r\n1 3\r\n1 3\r\n2 5\r\n"
            ],
            [
                "3\r\n-10000 1 10000\r\n",
                "10001 20000\r\n9999 10001\r\n9999 20000\r\n"
            ],
            [
                "5\r\n-1000000000 -999999999 -999999998 -999999997 -999999996\r\n",
                "1 4\r\n1 3\r\n1 2\r\n1 3\r\n1 4\r\n"
            ],
            [
                "10\r\n-857422304 -529223472 82412729 145077145 188538640 265299215 527377039 588634631 592896147 702473706\r\n",
                "328198832 1559896010\r\n328198832 1231697178\r\n62664416 939835033\r\n43461495 1002499449\r\n43461495 1045960944\r\n76760575 1122721519\r\n61257592 1384799343\r\n4261516 1446056935\r\n4261516 1450318451\r\n109577559 1559896010\r\n"
            ],
            [
                "10\r\n-876779400 -829849659 -781819137 -570920213 18428128 25280705 121178189 219147240 528386329 923854124\r\n",
                "46929741 1800633524\r\n46929741 1753703783\r\n48030522 1705673261\r\n210898924 1494774337\r\n6852577 905425996\r\n6852577 902060105\r\n95897484 997957589\r\n97969051 1095926640\r\n309239089 1405165729\r\n395467795 1800633524\r\n"
            ],
            [
                "30\r\n-15 1 21 25 30 40 59 60 77 81 97 100 103 123 139 141 157 158 173 183 200 215 226 231 244 256 267 279 289 292\r\n",
                "16 307\r\n16 291\r\n4 271\r\n4 267\r\n5 262\r\n10 252\r\n1 233\r\n1 232\r\n4 215\r\n4 211\r\n3 195\r\n3 192\r\n3 189\r\n16 169\r\n2 154\r\n2 156\r\n1 172\r\n1 173\r\n10 188\r\n10 198\r\n15 215\r\n11 230\r\n5 241\r\n5 246\r\n12 259\r\n11 271\r\n11 282\r\n10 294\r\n3 304\r\n3 307\r\n"
            ],
            [
                "10\r\n-1000000000 -999999999 -999999997 -999999996 -999999995 -999999994 -999999992 -999999990 -999999988 -999999986\r\n",
                "1 14\r\n1 13\r\n1 11\r\n1 10\r\n1 9\r\n1 8\r\n2 8\r\n2 10\r\n2 12\r\n2 14\r\n"
            ],
            [
                "3\r\n-1000000000 999999999 1000000000\r\n",
                "1999999999 2000000000\r\n1 1999999999\r\n1 2000000000\r\n"
            ]
        ]
    }
]