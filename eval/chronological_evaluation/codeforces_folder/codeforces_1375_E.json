[
    {
        "name": "Inversion SwapSort",
        "description": "Madeline has an array \n    a\n of \n    n\n integers. A pair \n    (u, v)\n of\nintegers forms an inversion in \n    a\n if: \n    1 \n    \u2264 u < v \n    \u2264 n\n. \n    a_u\n    > a_v\n. Madeline recently found a magical paper, which allows her to write\ntwo indices \n    u\n and \n    v\n and swap the values \n    a_u\n and \n    a_v\n.\nBeing bored, she decided to write a list of pairs \n    (u_i, v_i)\n with the\nfollowing conditions: all the pairs in the list are distinct and form an\ninversion in \n    a\n. all the pairs that form an inversion in \n    a\n are in\nthe list. Starting from the given array, if you swap the values at indices\n\n    u_1\n and \n    v_1\n, then the values at indices \n    u_2\n and \n    v_2\n\nand so on, then after all pairs are processed, the array \n    a\n will be\nsorted in non-decreasing order. Construct such a list or determine that no\nsuch list exists. If there are multiple possible answers, you may find any of\nthem. Input The first line of the input contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 1000\n) \u2014 the length of the array. Next line contains\n\n    n\n integers \n    a_1,a_2,...,a_n\n \n    (1 \n    \u2264 a_i \n    \u2264 10^9)\n \u2014\nelements of the array. Output Print -1 if no such list exists. Otherwise in\nthe first line you should print a single integer \n    m\n (\n    0 \n    \u2264 m \n    \u2264\n    n(n-1)2\n) \u2014 number of pairs in the list. The \n    i\n-th of the\nfollowing \n    m\n lines should contain two integers \n    u_i, v_i\n (\n    1 \n    \u2264\n    u_i < v_i\n    \u2264 n\n). If there are multiple possible answers, you may find any\nof them. Examples Input 3 3 1 2 Output 2 1 3 1 2 Input 4 1 8 1 6 Output 2 2 4\n2 3 Input 5 1 1 1 2 2 Output 0 Note In the first sample test case the array\nwill change in this order \n    [3,1,2] \n    \u2192 [2,1,3] \n    \u2192\n    [1,2,3]\n. In the second sample test case it will be \n    [1,8,1,6]\n    \n    \u2192 [1,6,1,8] \n    \u2192 [1,1,6,8]\n. In the third sample test\ncase the array is already sorted.\n\n",
        "cf_contest_id": 1375,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 1 2\r\n",
                "2\r\n1 3\r\n1 2\r\n"
            ],
            [
                "4\r\n1 8 1 6\r\n",
                "2\r\n2 4\r\n2 3\r\n"
            ],
            [
                "5\r\n1 1 1 2 2\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n3 4 3 1 2\r\n",
                "7\r\n1 5\r\n1 4\r\n2 3\r\n2 5\r\n2 4\r\n3 5\r\n3 4\r\n"
            ],
            [
                "1\r\n1\r\n",
                "0\r\n"
            ]
        ]
    }
]