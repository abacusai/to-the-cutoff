[
    {
        "name": "New School",
        "description": "You have decided to open a new school. You have already found \n    n\n teachers\nand \n    m\n groups of students. The \n    i\n-th group of students consists of\n\n    k_i \n    \u2265 2\n students. You know age of each teacher and each student.\nThe ages of teachers are \n    a_1, a_2, \n    \u2026, a_n\n and the ages of\nstudents of the \n    i\n-th group are \n    b_i, 1, b_i, 2, \n    \u2026, b_i,\n    k_i\n. To start lessons you should assign the teacher to each group of\nstudents. Such assignment should satisfy the following requirements: To each\ngroup exactly one teacher assigned. To each teacher at most \n    1\n group of\nstudents assigned. The average of students' ages in each group doesn't exceed\nthe age of the teacher assigned to this group. The average of set \n    x_1, x_2,\n    \n    \u2026, x_k\n of \n    k\n integers is \n    x_1 + x_2 + \n    \u2026 +\n    x_k/k\n. Recently you have heard that one of the students will refuse to\nstudy in your school. After this, the size of one group will decrease by\n\n    1\n while all other groups will remain unchanged. You don't know who will\nrefuse to study. For each student determine if you can start lessons in case\nof his refusal. Note, that it is not guaranteed that it is possible to start\nlessons before any refusal. Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The first\nline of each test case contains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264\n    m \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of teachers and the number of groups\nof students. The second line of each test case contains \n    n\n integers\n\n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^5\n) \u2014 the ages of\nteachers. The next \n    2m\n lines contains descriptions of groups. The first\nline of description of group contains a single integer \n    k_i\n (\n    2 \n    \u2264\n    k_i \n    \u2264 10^5\n) \u2014 the number of students in this group. The second line of\ndescription of group contains \n    k_i\n integers \n    b_i, 1, b_i, 2,\n    \n    \u2026, b_i, k_i\n (\n    1 \n    \u2264 b_i, j\n    \u2264 10^5\n) \u2014 the ages of\nstudents of this group. It is guaranteed that the total sum of \n    n\n over\nall test cases doesn't exceed \n    10^5\n and that the total sum of \n    k_1 +\n    k_2 + \n    \u2026 + k_m\n over all test cases doesn't exceed \n    2 \n    \u00b7\n    10^5\n Output For each test case output string of symbols \n    0\n and \n    1\n\nof length \n    k_1 + k_2 + \n    \u2026 + k_m\n. The \n    i\n-th symbol of this\nstring should be equals \n    1\n if it is possible to start lessons in case of\nthe \n    i\n-th student refuse and it should be equals \n    0\n otherwise.\nStudents are numbered by integers from \n    1\n to \n    k_1 + k_2 + \n    \u2026 +\n    k_m\n in the order they appear in the input. Thus, students of the \n    1\n-st\ngroup are numbered by integers \n    1\n, \n    2\n, \n    \u2026\n, \n    k_1\n,\nstudents of the \n    2\n-nd group are numbered by integers \n    k_1 + 1\n,\n\n    k_1 + 2\n, \n    \u2026\n, \n    k_1 + k_2\n and so on. Example Input 2 1 1\n30 3 25 16 37 4 2 9 12 12 6 2 4 5 3 111 11 11 Output 101 00100 Note In the\nfirst test case there is one group of students with average age\n\n    25+16+37/3=26\n and one teacher with age \n    30\n. There exists\nonly one assignment that allows to start lessons. If the student with age\n\n    16\n will refuse to study, the average age of students in this group will\nbecome \n    25+37/2=31\n so there won't be any assignment that allows\nto start lessons. In the second test case it is impossible to start lessons\ninitially. However, if the \n    3\n-rd student with age \n    111\n will refuse\nto study, the average ages of groups will become \n    4 + 5/2=4.5\n\nand \n    11+11/2 = 11\n correspondingly. Then it is possible to\nassing the first group to the first teacher and the second group to the third\nteacher.\n\n",
        "cf_contest_id": 1621,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1 1\r\n30\r\n3\r\n25 16 37\r\n4 2\r\n9 12 12 6\r\n2\r\n4 5\r\n3\r\n111 11 11\r\n",
                "101\r\n00100\r\n"
            ]
        ],
        "private_cases": []
    }
]