[
    {
        "name": "Cipher",
        "description": "Borya has recently found a big electronic display. The computer that manages\nthe display stores some integer number. The number has n decimal digits, the\ndisplay shows the encoded version of the number, where each digit is shown\nusing some lowercase letter of the English alphabet. There is a legend near\nthe display, that describes how the number is encoded. For each digit position\ni and each digit j the character c is known, that encodes this digit at this\nposition. Different digits can have the same code characters. Each second the\nnumber is increased by 1. And one second after a moment when the number\nreaches the value that is represented as n 9-s in decimal notation, the loud\nbeep sounds. Andrew knows the number that is stored in the computer. Now he\nwants to know how many seconds must pass until Borya can definitely tell what\nwas the original number encoded by the display. Assume that Borya can\nprecisely measure time, and that the encoded number will first be increased\nexactly one second after Borya started watching at the display. Input Input\ndata contains multiple test cases. The first line of input contains t (1 \u2264 t \u2264\n100) \u2014 the number of test cases. Each test case is described as follows. The\nfirst line of the description contains n (1 \u2264 n \u2264 18) \u2014 the number of digits\nin the number. The second line contains n decimal digits without spaces (but\npossibly with leading zeroes) \u2014 the number initially stored in the display\ncomputer. The following n lines contain 10 characters each. The j-th character\nof the i-th of these lines is the code character for a digit j - 1 in position\ni, most significant digit positions are described first. Output For each test\ncase print an integer: the number of seconds until Borya definitely knows what\nwas the initial number stored on the display of the computer. Do not print\nleading zeroes. Example Input 3 2 42 abcdefghij jihgfedcba 2 42 aaaaaaaaaa\naaaaaaaaaa 1 2 abcdabcdff Output 0 58 2\n\n",
        "cf_contest_id": 720,
        "cf_index": "E",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2\r\n42\r\nabcdefghij\r\njihgfedcba\r\n2\r\n42\r\naaaaaaaaaa\r\naaaaaaaaaa\r\n1\r\n2\r\nabcdabcdff\r\n",
                "0\r\n58\r\n2\r\n"
            ]
        ],
        "private_cases": []
    }
]