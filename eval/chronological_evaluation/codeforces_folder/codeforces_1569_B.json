[
    {
        "name": "Chess Tournament",
        "description": "A chess tournament will be held soon, where \n    n\n chess players will take\npart. Every participant will play one game against every other participant.\nEach game ends in either a win for one player and a loss for another player,\nor a draw for both players. Each of the players has their own expectations\nabout the tournament, they can be one of two types: a player wants not to lose\nany game (i. e. finish the tournament with zero losses); a player wants to win\nat least one game. You have to determine if there exists an outcome for all\nthe matches such that all the players meet their expectations. If there are\nseveral possible outcomes, print any of them. If there are none, report that\nit's impossible. Input The first line contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 200\n) \u2014 the number of test cases. The first line of each test\ncase contains one integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 50\n) \u2014 the number of\nchess players. The second line contains the string \n    s\n (\n    |s| = n\n;\n\n    s_i \n    \u2208\n    \n    1, 2\n). If \n    s_i = 1\n, then the \n    i\n-th player\nhas expectations of the first type, otherwise of the second type. Output For\neach test case, print the answer in the following format: In the first line,\nprint NO if it is impossible to meet the expectations of all players.\nOtherwise, print YES, and the matrix of size \n    n \n    \u00d7 n\n in the next\n\n    n\n lines. The matrix element in the \n    i\n-th row and \n    j\n-th column\nshould be equal to: +, if the \n    i\n-th player won in a game against the\n\n    j\n-th player; -, if the \n    i\n-th player lost in a game against the\n\n    j\n-th player; =, if the \n    i\n-th and \n    j\n-th players' game resulted\nin a draw; X, if \n    i = j\n. Example Input 3 3 111 2 21 4 2122 Output YES X==\n=X= ==X NO YES X\u2013+ +X++ +-X- \u00ad-+X\n\n",
        "cf_contest_id": 1569,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n111\r\n2\r\n21\r\n4\r\n2122\r\n",
                "YES X== =X= ==X \r\nNO\r\nYES X=+- =X== -=X+ +=-X \r\n"
            ]
        ],
        "private_cases": []
    }
]