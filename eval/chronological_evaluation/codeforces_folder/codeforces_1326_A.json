[
    {
        "name": "Bad Ugly Numbers",
        "description": "You are given a integer \n    n\n (\n    n > 0\n). Find any integer \n    s\n which\nsatisfies these conditions, or report that there are no such numbers: In the\ndecimal representation of \n    s\n: \n    s > 0\n, \n    s\n consists of \n    n\n\ndigits, no digit in \n    s\n equals \n    0\n, \n    s\n is not divisible by any of\nit's digits. Input The input consists of multiple test cases. The first line\nof the input contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 400\n),\nthe number of test cases. The next \n    t\n lines each describe a test case.\nEach test case contains one positive integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    10^5\n). It is guaranteed that the sum of \n    n\n for all test cases does not\nexceed \n    10^5\n. Output For each test case, print an integer \n    s\n which\nsatisfies the conditions described above, or \"-1\" (without quotes), if no such\nnumber exists. If there are multiple possible solutions for \n    s\n, print any\nsolution. Example Input 4 1 2 3 4 Output -1 57 239 6789 Note In the first test\ncase, there are no possible solutions for \n    s\n consisting of one digit,\nbecause any such solution is divisible by itself. For the second test case,\nthe possible solutions are: \n    23\n, \n    27\n, \n    29\n, \n    34\n, \n    37\n,\n\n    38\n, \n    43\n, \n    46\n, \n    47\n, \n    49\n, \n    53\n, \n    54\n,\n\n    56\n, \n    57\n, \n    58\n, \n    59\n, \n    67\n, \n    68\n, \n    69\n,\n\n    73\n, \n    74\n, \n    76\n, \n    78\n, \n    79\n, \n    83\n, \n    86\n,\n\n    87\n, \n    89\n, \n    94\n, \n    97\n, and \n    98\n. For the third test case,\none possible solution is \n    239\n because \n    239\n is not divisible by\n\n    2\n, \n    3\n or \n    9\n and has three digits (none of which equals zero).\n\n",
        "cf_contest_id": 1326,
        "cf_index": "A",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1\r\n2\r\n3\r\n4\r\n",
                "-1\r\n23\r\n233\r\n2333\r\n"
            ]
        ],
        "private_cases": []
    }
]