[
    {
        "name": "Cowardly Rooks",
        "description": "There's a chessboard of size \n    n \n    \u00d7 n\n. \n    m\n rooks are placed on\nit in such a way that: no two rooks occupy the same cell; no two rooks attack\neach other. A rook attacks all cells that are in its row or column. Is it\npossible to move exactly one rook (you can choose which one to move) into a\ndifferent cell so that no two rooks still attack each other? A rook can move\ninto any cell in its row or column if no other rook stands on its path. Input\nThe first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2000\n)\n\u2014 the number of testcases. The first line of each testcase contains two\nintegers \n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 8\n) \u2014 the size of the\nchessboard and the number of the rooks. The \n    i\n-th of the next \n    m\n\nlines contains two integers \n    x_i\n and \n    y_i\n (\n    1 \n    \u2264 x_i, y_i \n    \u2264\n    n\n) \u2014 the position of the \n    i\n-th rook: \n    x_i\n is the row and\n\n    y_i\n is the column. No two rooks occupy the same cell. No two rooks\nattack each other. Output For each testcase, print \"YES\" if it's possible to\nmove exactly one rook into a different cell so that no two rooks still attack\neach other. Otherwise, print \"NO\". Example Input 2 2 2 1 2 2 1 3 1 2 2 Output\nNO YES Note In the first testcase, the rooks are in the opposite corners of a\n\n    2 \n    \u00d7 2\n board. Each of them has a move into a neighbouring corner,\nbut moving there means getting attacked by another rook. In the second\ntestcase, there's a single rook in a middle of a \n    3 \n    \u00d7 3\n board. It\nhas \n    4\n valid moves, and every move is fine because there's no other rook\nto attack it.\n\n",
        "cf_contest_id": 1749,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n2 2\r\n1 2\r\n2 1\r\n3 1\r\n2 2\r\n",
                "NO\r\nYES\r\n"
            ]
        ],
        "private_cases": [
            [
                "17\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n8 1\r\n1 1\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "17\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "NO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\n"
            ],
            [
                "3\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "NO\r\nNO\r\nNO\r\n"
            ]
        ]
    }
]