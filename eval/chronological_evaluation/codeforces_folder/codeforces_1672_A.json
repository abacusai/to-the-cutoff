[
    {
        "name": "Log Chopping",
        "description": "There are \n    n\n logs, the \n    i\n-th log has a length of \n    a_i\n meters.\nSince chopping logs is tiring work, errorgorn and maomao90 have decided to\nplay a game. errorgorn and maomao90 will take turns chopping the logs with\nerrorgorn chopping first. On his turn, the player will pick a log and chop it\ninto \n    2\n pieces. If the length of the chosen log is \n    x\n, and the\nlengths of the resulting pieces are \n    y\n and \n    z\n, then \n    y\n and\n\n    z\n have to be positive integers, and \n    x=y+z\n must hold. For example,\nyou can chop a log of length \n    3\n into logs of lengths \n    2\n and \n    1\n,\nbut not into logs of lengths \n    3\n and \n    0\n, \n    2\n and \n    2\n, or\n\n    1.5\n and \n    1.5\n. The player who is unable to make a chop will be the\nloser. Assuming that both errorgorn and maomao90 play optimally, who will be\nthe winner? Input Each test contains multiple test cases. The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number\nof test cases. The description of the test cases follows. The first line of\neach test case contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 50\n)\n\u2014 the number of logs. The second line of each test case contains \n    n\n\nintegers \n    a_1,a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 50\n) \u2014 the\nlengths of the logs. Note that there is no bound on the sum of \n    n\n over\nall test cases. Output For each test case, print \"errorgorn\" if errorgorn wins\nor \"maomao90\" if maomao90 wins. (Output without quotes). Example Input 2 4 2 4\n2 1 1 1 Output errorgorn maomao90 Note In the first test case, errorgorn will\nbe the winner. An optimal move is to chop the log of length \n    4\n into\n\n    2\n logs of length \n    2\n. After this there will only be \n    4\n logs of\nlength \n    2\n and \n    1\n log of length \n    1\n. After this, the only move\nany player can do is to chop any log of length \n    2\n into \n    2\n logs of\nlength \n    1\n. After \n    4\n moves, it will be maomao90's turn and he will\nnot be able to make a move. Therefore errorgorn will be the winner. In the\nsecond test case, errorgorn will not be able to make a move on his first turn\nand will immediately lose, making maomao90 the winner.\n\n",
        "cf_contest_id": 1672,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n4\r\n2 4 2 1\r\n1\r\n1\r\n",
                "errorgorn\r\nmaomao90\r\n"
            ]
        ],
        "private_cases": []
    }
]