[
    {
        "name": "Trust Nobody",
        "description": "There is a group of \n    n\n people. Some of them might be liars, who always\ntell lies. Other people always tell the truth. The \n    i\n-th person says\n\"There are at least \n    l_i\n liars amongst us\". Determine if what people are\nsaying is contradictory, or if it is possible. If it is possible, output the\nnumber of liars in the group. If there are multiple possible answers, output\nany one of them. Input The first line contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The first line of each\ntest case contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n). The\nsecond line of each test case contains \n    n\n integers \n    l_i\n (\n    0 \n    \u2264\n    l_i \n    \u2264 n\n) \u2014 the number said by the \n    i\n-th person. It's guaranteed\nthat the sum of all \n    n\n does not exceed \n    10^4\n. Output For each test\ncase output a single integer. If what people are saying is contradictory,\noutput \n    -1\n. Otherwise, output the number of liars in the group. If there\nare multiple possible answers, output any one of them. Example Input 7 2 1 2 2\n2 2 2 0 0 1 1 1 0 5 5 5 3 3 5 6 5 3 6 6 3 5 Output 1 -1 0 -1 0 3 4 Note In the\nfirst example, the only possible answer is that the second person is a liar,\nso the answer is \n    1\n liar. In the second example, it can be proven that we\ncan't choose the liars so that all the requirements are satisfied. In the\nthird example, everybody tells the truth, so the answer is \n    0\n liars.\n\n",
        "cf_contest_id": 1826,
        "cf_index": "A",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n2\r\n1 2\r\n2\r\n2 2\r\n2\r\n0 0\r\n1\r\n1\r\n1\r\n0\r\n5\r\n5 5 3 3 5\r\n6\r\n5 3 6 6 3 5\r\n",
                "1\r\n-1\r\n0\r\n-1\r\n0\r\n3\r\n4\r\n"
            ]
        ],
        "private_cases": []
    }
]