[
    {
        "name": "Jog Around The Graph",
        "description": "You are given a simple weighted connected undirected graph, consisting of\n\n    n\n vertices and \n    m\n edges. A path in the graph of length \n    k\n is a\nsequence of \n    k+1\n vertices \n    v_1, v_2, \n    \u2026, v_k+1\n such that for\neach \n    i\n \n    (1 \n    \u2264 i \n    \u2264 k)\n the edge \n    (v_i, v_i+1)\n is\npresent in the graph. A path from some vertex \n    v\n also has vertex\n\n    v_1=v\n. Note that edges and vertices are allowed to be included in the\npath multiple times. The weight of the path is the total weight of edges in\nit. For each \n    i\n from \n    1\n to \n    q\n consider a path from vertex\n\n    1\n of length \n    i\n of the maximum weight. What is the sum of weights of\nthese \n    q\n paths? Answer can be quite large, so print it modulo\n\n    10^9+7\n. Input The first line contains a three integers \n    n\n, \n    m\n,\n\n    q\n (\n    2 \n    \u2264 n \n    \u2264 2000\n; \n    n - 1 \n    \u2264 m \n    \u2264 2000\n; \n    m\n    \n    \u2264 q \n    \u2264 10^9\n) \u2014 the number of vertices in the graph, the number of\nedges in the graph and the number of lengths that should be included in the\nanswer. Each of the next \n    m\n lines contains a description of an edge:\nthree integers \n    v\n, \n    u\n, \n    w\n (\n    1 \n    \u2264 v, u \n    \u2264 n\n; \n    1\n    \n    \u2264 w \n    \u2264 10^6\n) \u2014 two vertices \n    v\n and \n    u\n are connected by an\nundirected edge with weight \n    w\n. The graph contains no loops and no\nmultiple edges. It is guaranteed that the given edges form a connected graph.\nOutput Print a single integer \u2014 the sum of the weights of the paths from\nvertex \n    1\n of maximum weights of lengths \n    1, 2, \n    \u2026, q\n modulo\n\n    10^9+7\n. Examples Input 7 8 25 1 2 1 2 3 10 3 4 2 1 5 2 5 6 7 6 4 15 5 3\n1 1 7 3 Output 4361 Input 2 1 5 1 2 4 Output 60 Input 15 15 23 13 10 12 11 14\n12 2 15 5 4 10 8 10 2 4 10 7 5 3 10 1 5 6 11 1 13 8 9 15 4 4 2 9 11 15 1 11 12\n14 10 8 12 3 6 11 Output 3250 Input 5 10 10000000 2 4 798 1 5 824 5 2 558 4 1\n288 3 4 1890 3 1 134 2 3 1485 4 5 284 3 5 1025 1 2 649 Output 768500592 Note\nHere is the graph for the first example: Some maximum weight paths are: length\n\n    1\n: edges \n    (1, 7)\n \u2014 weight \n    3\n; length \n    2\n: edges \n    (1, 2),\n    (2, 3)\n \u2014 weight \n    1+10=11\n; length \n    3\n: edges \n    (1, 5), (5, 6), (6,\n    4)\n \u2014 weight \n    2+7+15=24\n; length \n    4\n: edges \n    (1, 5), (5, 6), (6,\n    4), (6, 4)\n \u2014 weight \n    2+7+15+15=39\n; \n    \u2026\n So the answer is the\nsum of \n    25\n terms: \n    3+11+24+39+\n    \u2026\n In the second example the\nmaximum weight paths have weights \n    4\n, \n    8\n, \n    12\n, \n    16\n and\n\n    20\n.\n\n",
        "cf_contest_id": 1366,
        "cf_index": "F",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "dp",
            "geometry",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 8 25\r\n1 2 1\r\n2 3 10\r\n3 4 2\r\n1 5 2\r\n5 6 7\r\n6 4 15\r\n5 3 1\r\n1 7 3\r\n",
                "4361\r\n"
            ],
            [
                "2 1 5\r\n1 2 4\r\n",
                "60\r\n"
            ],
            [
                "15 15 23\r\n13 10 12\r\n11 14 12\r\n2 15 5\r\n4 10 8\r\n10 2 4\r\n10 7 5\r\n3 10 1\r\n5 6 11\r\n1 13 8\r\n9 15 4\r\n4 2 9\r\n11 15 1\r\n11 12 14\r\n10 8 12\r\n3 6 11\r\n",
                "3250\r\n"
            ],
            [
                "5 10 10000000\r\n2 4 798\r\n1 5 824\r\n5 2 558\r\n4 1 288\r\n3 4 1890\r\n3 1 134\r\n2 3 1485\r\n4 5 284\r\n3 5 1025\r\n1 2 649\r\n",
                "768500592\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 3 3\r\n4 2 41\r\n1 3 26\r\n4 3 24\r\n",
                "169\r\n"
            ],
            [
                "5 4 6\r\n2 4 1\r\n1 5 2\r\n5 2 5\r\n3 4 1\r\n",
                "87\r\n"
            ]
        ]
    }
]