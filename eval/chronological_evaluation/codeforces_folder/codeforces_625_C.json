[
    {
        "name": "K-special Tables",
        "description": "People do many crazy things to stand out in a crowd. Some of them dance, some\nlearn by heart rules of Russian language, some try to become an outstanding\ncompetitive programmers, while others collect funny math objects. Alis is\namong these collectors. Right now she wants to get one of k-special tables. In\ncase you forget, the table n \u00d7 n is called k-special if the following three\nconditions are satisfied: every integer from 1 to n^2 appears in the table\nexactly once; in each row numbers are situated in increasing order; the sum of\nnumbers in the k-th column is maximum possible. Your goal is to help Alice and\nfind at least one k-special table of size n \u00d7 n. Both rows and columns are\nnumbered from 1 to n, with rows numbered from top to bottom and columns\nnumbered from left to right. Input The first line of the input contains two\nintegers n and k (1 \u2264 n \u2264 500, 1 \u2264 k \u2264 n) \u2014 the size of the table Alice is\nlooking for and the column that should have maximum possible sum. Output First\nprint the sum of the integers in the k-th column of the required table. Next n\nlines should contain the description of the table itself: first line should\ncontains n elements of the first row, second line should contain n elements of\nthe second row and so on. If there are multiple suitable table, you are\nallowed to print any. Examples Input 4 1 Output 28 1 2 3 4 5 6 7 8 9 10 11 12\n13 14 15 16 Input 5 3 Output 85 5 6 17 18 19 9 10 23 24 25 7 8 20 21 22 3 4 14\n15 16 1 2 11 12 13\n\n",
        "cf_contest_id": 625,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 1\r\n",
                "28\r\n13 14 15 16\r\n9 10 11 12\r\n5 6 7 8\r\n1 2 3 4\r\n"
            ],
            [
                "5 3\r\n",
                "85\r\n1 2 23 24 25\r\n3 4 20 21 22\r\n5 6 17 18 19\r\n7 8 14 15 16\r\n9 10 11 12 13\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "2 1\r\n",
                "4\r\n3 4\r\n1 2\r\n"
            ],
            [
                "2 2\r\n",
                "7\r\n1 4\r\n2 3\r\n"
            ],
            [
                "3 1\r\n",
                "12\r\n7 8 9\r\n4 5 6\r\n1 2 3\r\n"
            ],
            [
                "3 2\r\n",
                "18\r\n1 8 9\r\n2 6 7\r\n3 4 5\r\n"
            ],
            [
                "3 3\r\n",
                "24\r\n1 2 9\r\n3 4 8\r\n5 6 7\r\n"
            ],
            [
                "4 2\r\n",
                "38\r\n1 14 15 16\r\n2 11 12 13\r\n3 8 9 10\r\n4 5 6 7\r\n"
            ],
            [
                "4 3\r\n",
                "48\r\n1 2 15 16\r\n3 4 13 14\r\n5 6 11 12\r\n7 8 9 10\r\n"
            ],
            [
                "4 4\r\n",
                "58\r\n1 2 3 16\r\n4 5 6 15\r\n7 8 9 14\r\n10 11 12 13\r\n"
            ],
            [
                "5 1\r\n",
                "55\r\n21 22 23 24 25\r\n16 17 18 19 20\r\n11 12 13 14 15\r\n6 7 8 9 10\r\n1 2 3 4 5\r\n"
            ],
            [
                "5 2\r\n",
                "70\r\n1 22 23 24 25\r\n2 18 19 20 21\r\n3 14 15 16 17\r\n4 10 11 12 13\r\n5 6 7 8 9\r\n"
            ],
            [
                "5 4\r\n",
                "100\r\n1 2 3 24 25\r\n4 5 6 22 23\r\n7 8 9 20 21\r\n10 11 12 18 19\r\n13 14 15 16 17\r\n"
            ],
            [
                "5 5\r\n",
                "115\r\n1 2 3 4 25\r\n5 6 7 8 24\r\n9 10 11 12 23\r\n13 14 15 16 22\r\n17 18 19 20 21\r\n"
            ],
            [
                "6 1\r\n",
                "96\r\n31 32 33 34 35 36\r\n25 26 27 28 29 30\r\n19 20 21 22 23 24\r\n13 14 15 16 17 18\r\n7 8 9 10 11 12\r\n1 2 3 4 5 6\r\n"
            ],
            [
                "6 2\r\n",
                "117\r\n1 32 33 34 35 36\r\n2 27 28 29 30 31\r\n3 22 23 24 25 26\r\n4 17 18 19 20 21\r\n5 12 13 14 15 16\r\n6 7 8 9 10 11\r\n"
            ],
            [
                "6 3\r\n",
                "138\r\n1 2 33 34 35 36\r\n3 4 29 30 31 32\r\n5 6 25 26 27 28\r\n7 8 21 22 23 24\r\n9 10 17 18 19 20\r\n11 12 13 14 15 16\r\n"
            ],
            [
                "6 4\r\n",
                "159\r\n1 2 3 34 35 36\r\n4 5 6 31 32 33\r\n7 8 9 28 29 30\r\n10 11 12 25 26 27\r\n13 14 15 22 23 24\r\n16 17 18 19 20 21\r\n"
            ],
            [
                "6 5\r\n",
                "180\r\n1 2 3 4 35 36\r\n5 6 7 8 33 34\r\n9 10 11 12 31 32\r\n13 14 15 16 29 30\r\n17 18 19 20 27 28\r\n21 22 23 24 25 26\r\n"
            ],
            [
                "6 6\r\n",
                "201\r\n1 2 3 4 5 36\r\n6 7 8 9 10 35\r\n11 12 13 14 15 34\r\n16 17 18 19 20 33\r\n21 22 23 24 25 32\r\n26 27 28 29 30 31\r\n"
            ]
        ]
    }
]