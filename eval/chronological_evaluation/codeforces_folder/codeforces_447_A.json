[
    {
        "name": "DZY Loves Hash",
        "description": "DZY has a hash table with p buckets, numbered from 0 to p - 1. He wants to\ninsert n numbers, in the order they are given, into the hash table. For the\ni-th number xi, DZY will put it into the bucket numbered h(xi), where h(x) is\nthe hash function. In this problem we will assume, that h(x) = x mod p.\nOperation a mod b denotes taking a remainder after division a by b. However,\neach bucket can contain no more than one element. If DZY wants to insert an\nnumber into a bucket which is already filled, we say a \"conflict\" happens.\nSuppose the first conflict happens right after the i-th insertion, you should\noutput i. If no conflict happens, just output -1. Input The first line\ncontains two integers, p and n (2 \u2264 p, n \u2264 300). Then n lines follow. The i-th\nof them contains an integer xi (0 \u2264 xi \u2264 10^9). Output Output a single integer\n\u2014 the answer to the problem. Examples Input 10 5 0 21 53 41 53 Output 4 Input\n5 5 0 1 2 3 4 Output -1\n\n",
        "cf_contest_id": 447,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10 5\r\n0\r\n21\r\n53\r\n41\r\n53\r\n",
                "4"
            ],
            [
                "5 5\r\n0\r\n1\r\n2\r\n3\r\n4\r\n",
                "-1"
            ]
        ],
        "private_cases": [
            [
                "10 6\r\n811966798\r\n734823552\r\n790326404\r\n929189974\r\n414343256\r\n560346537\r\n",
                "4"
            ],
            [
                "2 2\r\n788371161\r\n801743052\r\n",
                "-1"
            ],
            [
                "10 6\r\n812796223\r\n122860157\r\n199259103\r\n597650585\r\n447742024\r\n521549402\r\n",
                "3"
            ],
            [
                "300 2\r\n822454942\r\n119374431\r\n",
                "-1"
            ],
            [
                "300 2\r\n823284367\r\n507345500\r\n",
                "-1"
            ],
            [
                "2 5\r\n791579811\r\n35613889\r\n997079893\r\n878677665\r\n693717467\r\n",
                "2"
            ],
            [
                "20 5\r\n793926268\r\n28931770\r\n842870287\r\n974950617\r\n859404206\r\n",
                "-1"
            ],
            [
                "100 15\r\n805069249\r\n778178198\r\n633897389\r\n844316223\r\n146759898\r\n870527016\r\n82668754\r\n42060733\r\n943602929\r\n979451110\r\n746979598\r\n47406033\r\n607284062\r\n850870259\r\n229415316\r\n",
                "5"
            ],
            [
                "100 15\r\n806204335\r\n189490323\r\n718805086\r\n716787474\r\n262315718\r\n822030596\r\n894644222\r\n724054623\r\n141384399\r\n579354205\r\n192622443\r\n672556242\r\n97417563\r\n243354557\r\n208957882\r\n",
                "8"
            ],
            [
                "100 15\r\n807033760\r\n577461392\r\n275221433\r\n532633429\r\n295714486\r\n783298996\r\n255799943\r\n99107143\r\n729119412\r\n59302896\r\n37640015\r\n313610861\r\n630550567\r\n534283052\r\n681062462\r\n",
                "8"
            ],
            [
                "100 15\r\n808103310\r\n136224397\r\n360129131\r\n405104681\r\n263786657\r\n734802577\r\n67808179\r\n928584682\r\n926900882\r\n511722343\r\n483348395\r\n938695534\r\n120684068\r\n74152694\r\n808088675\r\n",
                "9"
            ],
            [
                "2 2\r\n2\r\n2\r\n",
                "2"
            ],
            [
                "300 2\r\n0\r\n300\r\n",
                "2"
            ],
            [
                "2 2\r\n0\r\n0\r\n",
                "2"
            ]
        ]
    }
]