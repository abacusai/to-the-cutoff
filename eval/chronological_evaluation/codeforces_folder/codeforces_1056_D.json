[
    {
        "name": "Decorate Apple Tree",
        "description": "There is one apple tree in Arkady's garden. It can be represented as a set of\njunctions connected with branches so that there is only one way to reach any\njunctions from any other one using branches. The junctions are enumerated from\n\n    1\n to \n    n\n, the junction \n    1\n is called the root. A subtree of a\njunction \n    v\n is a set of junctions \n    u\n such that the path from \n    u\n\nto the root must pass through \n    v\n. Note that \n    v\n itself is included in\na subtree of \n    v\n. A leaf is such a junction that its subtree contains\nexactly one junction. The New Year is coming, so Arkady wants to decorate the\ntree. He will put a light bulb of some color on each leaf junction and then\ncount the number happy junctions. A happy junction is such a junction \n    t\n\nthat all light bulbs in the subtree of \n    t\n have different colors. Arkady\nis interested in the following question: for each \n    k\n from \n    1\n to\n\n    n\n, what is the minimum number of different colors needed to make the\nnumber of happy junctions be greater than or equal to \n    k\n? Input The first\nline contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the\nnumber of junctions in the tree. The second line contains \n    n - 1\n integers\n\n    p_2\n, \n    p_3\n, ..., \n    p_n\n (\n    1 \n    \u2264 p_i < i\n), where \n    p_i\n\nmeans there is a branch between junctions \n    i\n and \n    p_i\n. It is\nguaranteed that this set of branches forms a tree. Output Output \n    n\n\nintegers. The \n    i\n-th of them should be the minimum number of colors needed\nto make the number of happy junctions be at least \n    i\n. Examples Input 3 1\n1 Output 1 1 2 Input 5 1 1 3 3 Output 1 1 1 2 3 Note In the first example for\n\n    k = 1\n and \n    k = 2\n we can use only one color: the junctions \n    2\n\nand \n    3\n will be happy. For \n    k = 3\n you have to put the bulbs of\ndifferent colors to make all the junctions happy. In the second example for\n\n    k = 4\n you can, for example, put the bulbs of color \n    1\n in junctions\n\n    2\n and \n    4\n, and a bulb of color \n    2\n into junction \n    5\n. The\nhappy junctions are the ones with indices \n    2\n, \n    3\n, \n    4\n and\n\n    5\n then.\n\n",
        "cf_contest_id": 1056,
        "cf_index": "D",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "graphs",
            "greedy",
            "sortings",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 1\r\n",
                "1 1 2\r\n"
            ],
            [
                "5\r\n1 1 3 3\r\n",
                "1 1 1 2 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 1 2 4 2 4 1 8 8\r\n",
                "1 1 1 1 1 1 2 2 3 6\r\n"
            ],
            [
                "10\r\n1 2 2 3 3 4 4 5 5\r\n",
                "1 1 1 1 1 2 2 3 5 5\r\n"
            ],
            [
                "10\r\n1 1 1 1 1 1 1 1 1\r\n",
                "1 1 1 1 1 1 1 1 1 9\r\n"
            ],
            [
                "2\r\n1\r\n",
                "1 1\r\n"
            ],
            [
                "1\r\n\r\n",
                "1\r\n"
            ]
        ]
    }
]