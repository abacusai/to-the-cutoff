[
    {
        "name": "Phoenix and Socks",
        "description": "To satisfy his love of matching socks, Phoenix has brought his \n    n\n socks\n(\n    n\n is even) to the sock store. Each of his socks has a color \n    c_i\n\nand is either a left sock or right sock. Phoenix can pay one dollar to the\nsock store to either: recolor a sock to any color \n    c'\n \n    (1 \n    \u2264 c'\n    \n    \u2264 n)\n turn a left sock into a right sock turn a right sock into a left\nsock The sock store may perform each of these changes any number of times.\nNote that the color of a left sock doesn't change when it turns into a right\nsock, and vice versa. A matching pair of socks is a left and right sock with\nthe same color. What is the minimum cost for Phoenix to make \n    n/2\n\nmatching pairs? Each sock must be included in exactly one matching pair. Input\nThe input consists of multiple test cases. The first line contains an integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The first\nline of each test case contains three integers \n    n\n, \n    l\n, and \n    r\n\n(\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n; \n    n\n is even; \n    0 \n    \u2264 l, r \n    \u2264\n    n\n; \n    l+r=n\n) \u2014 the total number of socks, and the number of left and\nright socks, respectively. The next line contains \n    n\n integers \n    c_i\n\n(\n    1 \n    \u2264 c_i \n    \u2264 n\n) \u2014 the colors of the socks. The first \n    l\n socks\nare left socks, while the next \n    r\n socks are right socks. It is guaranteed\nthat the sum of \n    n\n across all the test cases will not exceed \n    2 \n    \u00b7\n    10^5\n. Output For each test case, print one integer \u2014 the minimum cost for\nPhoenix to make \n    n/2\n matching pairs. Each sock must be included in\nexactly one matching pair. Example Input 4 6 3 3 1 2 3 2 2 2 6 2 4 1 1 2 2 2 2\n6 5 1 6 5 4 3 2 1 4 0 4 4 4 4 3 Output 2 3 5 3 Note In the first test case,\nPhoenix can pay \n    2\n dollars to: recolor sock \n    1\n to color \n    2\n\nrecolor sock \n    3\n to color \n    2\n There are now \n    3\n matching pairs.\nFor example, pairs \n    (1, 4)\n, \n    (2, 5)\n, and \n    (3, 6)\n are\nmatching.In the second test case, Phoenix can pay \n    3\n dollars to: turn\nsock \n    6\n from a right sock to a left sock recolor sock \n    3\n to color\n\n    1\n recolor sock \n    4\n to color \n    1\n There are now \n    3\n matching\npairs. For example, pairs \n    (1, 3)\n, \n    (2, 4)\n, and \n    (5, 6)\n are\nmatching.\n\n",
        "cf_contest_id": 1515,
        "cf_index": "D",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n6 3 3\r\n1 2 3 2 2 2\r\n6 2 4\r\n1 1 2 2 2 2\r\n6 5 1\r\n6 5 4 3 2 1\r\n4 0 4\r\n4 4 4 3\r\n",
                "2\r\n3\r\n5\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]