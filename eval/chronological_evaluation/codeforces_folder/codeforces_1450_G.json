[
    {
        "name": "Communism",
        "description": "Please pay attention to the unusual memory limit in this problem. In a\nparallel universe, Satan is called \"Trygub\". For that reason, the letters of\nhis namesake were deleted from the alphabet in ancient times. The government\nhas \n    n\n workers standing in a row and numbered with integers from \n    1\n\nto \n    n\n from left to right. Their job categories can be represented as a\nstring \n    s\n of length \n    n\n, where the character \n    s_i\n represents the\njob category of the \n    i\n-th worker. A new law will be approved to increase\nthe equality between the workers. The government decided to make everyone have\nthe same job category by performing the following operation any number of\ntimes (possibly zero). There is a fixed rational parameter \n    k=\n    a/b\n\ndescribing how easy it is to convince the public, and it will be used to\ndetermine the success of an operation. In an operation, the government first\nselects a job category \n    x\n with at least one worker at the current moment.\nSuppose \n    i_1,\n    \u2026, i_m\n (\n    i_1<\n    \u2026<i_m\n) are the positions of\nall the workers with job category \n    x\n. If \n    k\n    \u00b7 (i_m-i_1+1)\n    \u2264\n    m\n, the government is able to choose any job category \n    y\n with at least\none worker at the current moment and change the job category of all workers\nwith job category \n    x\n to job category \n    y\n. If it is possible to make\nall workers have job category \n    x\n, we say that \n    x\n is obtainable. Can\nyou tell the government the set of obtainable job categories? Input The first\nline contains three integers \n    n, a, b\n (\n    1 \n    \u2264 n \n    \u2264 5000\n,\n\n    1\n    \u2264 a\n    \u2264 b\n    \u2264 10^5\n) \u2014 the number of workers and the numerator and\ndenominator of the parameter \n    k\n, respectively. The second line contains a\nstring \n    s\n of length \n    n\n, consisting of lowercase English characters \u2014\nthe job categories of each worker. The characters 't', 'r', 'y', 'g', 'u', and\n'b' do not appear in the string \n    s\n. Output Print an integer \n    c\n equal\nto the number of obtainable job categories followed by \n    c\n space-separated\ncharacters \u2014 the obtainable job categories sorted in the lexicographical\norder. Example Input 7 1 2 comicom Output 3 c m o Note The first operation\nmust select the job category 'i' because all other job categories cannot\nsatisfy the condition, therefore 'i' is not obtainable. Below is showed how to\nobtain 'c', 'm', and 'o'. The square brackets denote the segment containing\nall workers of the selected category, the red color denotes this category and\nthe blue color denotes the new category after the change. Get 'c':\n(\n    \u2192\n)\n(\n    \u2192\n)\n(\n    \u2192\n)\nGet 'm': (\n    \u2192\n)\n(\n    \u2192\n)\n(\n    \u2192\n)\nGet 'o': (\n    \u2192\n)\n(\n    \u2192\n)\n(\n    \u2192\n)\n\n",
        "cf_contest_id": 1450,
        "cf_index": "G",
        "cf_rating": 3500,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 32.0,
        "public_cases": [
            [
                "7 1 2\r\ncomicom\r\n",
                "3 c m o "
            ]
        ],
        "private_cases": [
            [
                "19 1 1\r\necjqploakwojkpcvkzv\r\n",
                "0 "
            ],
            [
                "169 1 1\r\nnwnjqksmlkkijfacozewijhpescvppihlmqlcwlvqzskddnaxccsxdhdvadqlcfaahdxllpcsdqczzosnjakzazjsofeqazxpaseswhpsvziaaxhksvolwznjksjwzfknzdnwozkjppmeocxenwvvqnmsikxooqodoidpemzk\r\n",
                "0 "
            ],
            [
                "6 100000 100000\r\nowoowo\r\n",
                "0 "
            ],
            [
                "1 69 96\r\nf\r\n",
                "1 f "
            ],
            [
                "213 2 7\r\nahaahahahassakssskhhkssskkkkksoohoashkskksoofoohfskfkpjsjokhsjpfspffjfxjklwcskjxfljslsxwpjsjpmswovjvkkklspmwlmpflpiskkdfswpvfpkolkmmivlzojklkoflimjpfppdpkijpfkjnfmfkmnjkjflfkjjljjfllfklllknekkkekekekkekeeeeeeeeeee\r\n",
                "17 a c d f h i j l m n o p s v w x z "
            ],
            [
                "261 1 3\r\naaaaaaaaaaaaaaaaaaahahhhhahhhshhhssvsashvvvsassssvhxssvsihvivoshsmsohmsaifxossvifmhsohhfsihhssoixoivifofcioxhsovcoksvvsehfsisfcncvvmveiikoiocessimvsmokmkofofvoeslvleefvfkkcmewffiehvsiemskfiokieffmfivvikfvviefijvfvvevkvvkidiikveeifvvvfievkkjeieiffdekdeffikkddkkk\r\n",
                "12 c d e f h i j k m o v x "
            ],
            [
                "380 1 88\r\nomjevnvadmlenxdkjzlmjclqnsncpcomkmhpmzxwdifijvskxaaskhowiaanokjojvdkianipvmjweshcijcoejhcizzdkovwxewxqklzsscnfqnnplcompszdxenclasdszcxjcwjflkdwzcieheqnmonklanlnoninfjdepcawopsfwnvjwjemhwmckzlxoiajwpwmcssnscvilqemidnnoazleoesvpxpxoqipepxieflfdzjxmqizfjjhdhkqdqkqfezzojjkijwjvhfdeaplqdmdhmavodkdqshlsvkpxmjvjsjhlmislaqzxzfdsxdkpipmxkjweadlzojehnpnmxfzoxqmaohqwominezpmwdpvocpmsanesm\r\n",
                "20 a c d e f h i j k l m n o p q s v w x z "
            ],
            [
                "100 2 3\r\nvvkkkkkkkvkxxxvxvxxxvxvxxfvvfffvvffvvffvfffffffjjjjvjjjvvwwvwwwvwwwvveevvevveveeeeeeeeveeeeveeeeveev\r\n",
                "7 e f j k v w x "
            ],
            [
                "216 1 4\r\naaaaaafffaffmffmmffmffmmffkfmffmmakafffamakffkofmomfmfmfmoofckfmfckmfmkkfmfomojcmkskmhkofcoskfhskofmskhkmfsmcfmfdjkmjjskkkooqflkljjhmkmhsossnfkjhnjnddkoojkloskhsfifmshkfejhooqfmlmooqlmqofoelfkffxkkmkfkxfkofqqfefokeee\r\n",
                "16 a c d e f h i j k l m n o q s x "
            ],
            [
                "7 3 4\r\nadacede\r\n",
                "2 a e "
            ],
            [
                "10 1 1\r\nacdcaefhfe\r\n",
                "2 a e "
            ]
        ]
    }
]