[
    {
        "name": "Round Down the Price",
        "description": "At the store, the salespeople want to make all prices round. In this problem,\na number that is a power of \n    10\n is called a round number. For example,\nthe numbers \n    10^0 = 1\n, \n    10^1 = 10\n, \n    10^2 = 100\n are round\nnumbers, but \n    20\n, \n    110\n and \n    256\n are not round numbers. So, if\nan item is worth \n    m\n bourles (the value of the item is not greater than\n\n    10^9\n), the sellers want to change its value to the nearest round number\nthat is not greater than \n    m\n. They ask you: by how many bourles should you\ndecrease the value of the item to make it worth exactly \n    10^k\n bourles,\nwhere the value of \n    k\n \u2014 is the maximum possible (\n    k\n \u2014 any non-\nnegative integer). For example, let the item have a value of\n\n    178\n-bourles. Then the new price of the item will be \n    100\n, and the\nanswer will be \n    178-100=78\n. Input The first line of input data contains a\nsingle integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases\n. Each test case is a string containing a single integer \n    m\n (\n    1 \n    \u2264 m\n    \n    \u2264 10^9\n) \u2014 the price of the item. Output For each test case, output on a\nseparate line a single integer \n    d\n (\n    0 \n    \u2264 d < m\n) such that if you\nreduce the cost of the item by \n    d\n bourles, the cost of the item will be\nthe maximal possible round number. More formally: \n    m - d = 10^k\n, where\n\n    k\n \u2014 the maximum possible non-negative integer. Example Input 7 1 2 178\n20 999999999 9000 987654321 Output 0 1 78 10 899999999 8000 887654321 Note In\nthe example: \n    1 - 0 = 10^0\n, \n    2 - 1 = 10^0\n, \n    178 - 78 = 10^2\n,\n\n    20 - 10 = 10^1\n, \n    999999999 - 899999999 = 10^8\n, \n    9000 - 8000 =\n    10^3\n, \n    987654321 - 887654321 = 10^8\n. Note that in each test case, we\nget the maximum possible round number.\n\n",
        "cf_contest_id": 1702,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n1\r\n2\r\n178\r\n20\r\n999999999\r\n9000\r\n987654321\r\n",
                "0 1 78 10 899999999 8000 887654321 "
            ]
        ],
        "private_cases": [
            [
                "14\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n",
                "0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
            ],
            [
                "4\r\n1\r\n1\r\n1\r\n1\r\n",
                "0 0 0 0 "
            ],
            [
                "7\r\n100\r\n40000000\r\n89657\r\n326894\r\n2325566\r\n74444\r\n200055\r\n",
                "0 30000000 79657 226894 1325566 64444 100055 "
            ],
            [
                "1\r\n100000000\r\n",
                "0 "
            ]
        ]
    }
]