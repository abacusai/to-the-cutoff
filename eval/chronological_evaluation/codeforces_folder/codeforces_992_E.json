[
    {
        "name": "Nastya and King-Shamans",
        "description": "Nastya likes reading and even spends whole days in a library sometimes. Today\nshe found a chronicle of Byteland in the library, and it stated that there\nlived shamans long time ago. It is known that at every moment there was\nexactly one shaman in Byteland, and there were n shamans in total enumerated\nwith integers from 1 to n in the order they lived. Also, each shaman had a\nmagic power which can now be expressed as an integer. The chronicle includes a\nlist of powers of the n shamans. Also, some shamans can be king-shamans, if\nthey gathered all the power of their predecessors, i.e. their power is exactly\nthe sum of powers of all previous shamans. Nastya is interested in whether\nthere was at least one king-shaman in Byteland. Unfortunately many of the\npowers are unreadable in the list, so Nastya is doing the following: Initially\nshe supposes some power for each shaman. After that she changes the power of\nsome shaman q times (the shamans can differ) and after that wants to check if\nthere is at least one king-shaman in the list. If yes, she wants to know the\nindex of any king-shaman. Unfortunately the list is too large and Nastya wants\nyou to help her. Input The first line contains two integers n and q (1 \u2264 n, q\n\u2264 2\u00b710^5). The second line contains n integers a1, ..., an (0 \u2264 ai \u2264 10^9),\nwhere ai is the magic power of the i-th shaman. After that q lines follow, the\ni-th of them contains two integers pi and xi (1 \u2264 pi \u2264 n, 0 \u2264 xi \u2264 10^9) that\nmean that the new power of the pi-th shaman is xi. Output Print q lines, the\ni-th of them should contain - 1, if after the i-th change there are no shaman-\nkings, and otherwise a single integer j, where j is an index of some king-\nshaman after the i-th change. If there are multiple king-shamans after each\nchange, print the index of any of them. Examples Input 2 1 1 3 1 2 Output -1\nInput 3 4 2 2 3 1 1 1 2 2 4 3 6 Output 3 2 -1 3 Input 10 7 0 3 1 4 6 2 7 8 10\n1 2 5 1 3 9 36 4 10 4 9 1 2 1 0 Output 1 -1 9 -1 4 -1 1 Note In the first\nexample powers of shamans after the first change are equal to (2, 3). The\nanswer equals - 1, because the sum of powers of shamans before the first\nshaman is equal to 0, and before the second is equal to 2. In the second\nexample after the first change the powers are equal to (1, 2, 3). The answer\nis equal to 3, because the power of the third shaman is equal to 3, and the\nsum of powers of the first and the second shaman is also 1 + 2 = 3. After the\nsecond change the powers become equal to (2, 2, 3), where the answer equals 2.\nAfter the third change the powers become equal to (2, 4, 3), where the answer\nequals - 1. After the fourth change the powers become equal to (2, 4, 6),\nwhere the answer equals 3.\n\n",
        "cf_contest_id": 992,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1\r\n1 3\r\n1 2\r\n",
                "-1\r\n"
            ],
            [
                "3 4\r\n2 2 3\r\n1 1\r\n1 2\r\n2 4\r\n3 6\r\n",
                "3\r\n2\r\n-1\r\n3\r\n"
            ],
            [
                "10 7\r\n0 3 1 4 6 2 7 8 10 1\r\n2 5\r\n1 3\r\n9 36\r\n4 10\r\n4 9\r\n1 2\r\n1 0\r\n",
                "1\r\n-1\r\n9\r\n-1\r\n4\r\n-1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "21 21\r\n10733833 40401599 15143754 45867692 28018488 23091021 17857614 15582024 28461248 14660055 14797112 1090534 17262467 8631347 11906412 20041471 43605263 18405260 27035905 42111096 46923110\r\n21 444704195\r\n20 402593099\r\n19 375557194\r\n18 357151934\r\n17 313546671\r\n16 293505200\r\n15 281598788\r\n14 272967441\r\n13 255704974\r\n12 254614440\r\n11 239817328\r\n10 225157273\r\n9 196696025\r\n8 181114001\r\n7 163256387\r\n6 140165366\r\n5 112146878\r\n4 66279186\r\n3 51135432\r\n2 10733833\r\n1 0\r\n",
                "21\r\n20\r\n19\r\n18\r\n17\r\n16\r\n15\r\n14\r\n13\r\n12\r\n11\r\n10\r\n9\r\n8\r\n7\r\n6\r\n5\r\n4\r\n3\r\n2\r\n1\r\n"
            ],
            [
                "22 22\r\n3440661 44947629 21148595 3064768 18509872 30403312 20122415 39255965 22553972 6656958 326913 16587502 11347394 13875508 35541552 9286778 25676416 40616596 9259437 31469387 13468019 5855478\r\n7 35410879\r\n16 287783016\r\n17 287783062\r\n18 287783143\r\n19 287783168\r\n20 287783182\r\n21 287783269\r\n22 287783336\r\n7 20122415\r\n16 46\r\n17 81\r\n18 25\r\n19 14\r\n20 87\r\n21 67\r\n22 0\r\n7 27554102\r\n21 24678326\r\n22 10988211\r\n21 42394083\r\n16 21289482\r\n4 14036030\r\n",
                "-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n16\r\n17\r\n18\r\n19\r\n20\r\n21\r\n22\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "27 29\r\n6 96 32 95 28 26 32 5 56 18 62 12 93 35 82 31 50 80 69 75 16 29 35 10 48 6 2\r\n2 81\r\n17 32\r\n22 75\r\n4 12\r\n10 6\r\n6 18\r\n12 84\r\n12 45\r\n25 57\r\n26 19\r\n19 77\r\n10 85\r\n10 72\r\n26 76\r\n12 16\r\n19 47\r\n19 90\r\n19 75\r\n19 67\r\n10 94\r\n22 53\r\n6 16\r\n26 3\r\n6 96\r\n3 80\r\n20 37\r\n7 56\r\n26 42\r\n8 85\r\n",
                "-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "1 1\r\n1\r\n1 0\r\n",
                "1\r\n"
            ],
            [
                "20 1\r\n268435454 268435456 268435457 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 268435456 805306368\r\n1 268435455\r\n",
                "-1\r\n"
            ]
        ]
    }
]