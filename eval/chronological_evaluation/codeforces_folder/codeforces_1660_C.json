[
    {
        "name": "Get an Even String",
        "description": "A string \n    a=a_1a_2\n    \u2026 a_n\n is called even if it consists of a\nconcatenation (joining) of strings of length \n    2\n consisting of the same\ncharacters. In other words, a string \n    a\n is even if two conditions are\nsatisfied at the same time: its length \n    n\n is even; for all odd \n    i\n\n(\n    1 \n    \u2264 i \n    \u2264 n - 1\n), \n    a_i = a_i+1\n is satisfied. For example,\nthe following strings are even: \"\" (empty string), \"tt\", \"aabb\", \"oooo\", and\n\"ttrrrroouuuuuuuukk\". The following strings are not even: \"aaa\", \"abab\" and\n\"abba\". Given a string \n    s\n consisting of lowercase Latin letters. Find the\nminimum number of characters to remove from the string \n    s\n to make it\neven. The deleted characters do not have to be consecutive. Input The first\nline of input data contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n)\n\u2014the number of test cases in the test. The descriptions of the test cases\nfollow. Each test case consists of one string \n    s\n (\n    1 \n    \u2264 |s| \n    \u2264 2\n    \n    \u00b7 10^5\n), where \n    |s|\n \u2014 the length of the string \n    s\n. The\nstring consists of lowercase Latin letters. It is guaranteed that the sum of\n\n    |s|\n on all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For\neach test case, print a single number \u2014 the minimum number of characters that\nmust be removed to make \n    s\n even. Example Input 6 aabbdabdccc zyx aaababbb\naabbcc oaoaaaoo bmefbmuyw Output 3 3 2 0 2 7 Note In the first test case you\ncan remove the characters with indices \n    6\n, \n    7\n, and \n    9\n to get an\neven string \"aabbddcc\". In the second test case, each character occurs exactly\nonce, so in order to get an even string, you must remove all characters from\nthe string. In the third test case, you can get an even string \"aaaabb\" by\nremoving, for example, \n    4\n-th and \n    6\n-th characters, or a string\n\"aabbbb\" by removing the \n    5\n-th character and any of the first three.\n\n",
        "cf_contest_id": 1660,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\naabbdabdccc\r\nzyx\r\naaababbb\r\naabbcc\r\noaoaaaoo\r\nbmefbmuyw\r\n",
                "3\r\n3\r\n2\r\n0\r\n2\r\n7\r\n"
            ]
        ],
        "private_cases": []
    }
]