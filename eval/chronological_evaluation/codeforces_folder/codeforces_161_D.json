[
    {
        "name": "Distance in Tree",
        "description": "A tree is a connected graph that doesn't contain any cycles. The distance\nbetween two vertices of a tree is the length (in edges) of the shortest path\nbetween these vertices. You are given a tree with n vertices and a positive\nnumber k. Find the number of distinct pairs of the vertices which have a\ndistance of exactly k between them. Note that pairs (v, u) and (u, v) are\nconsidered to be the same pair. Input The first line contains two integers n\nand k (1 \u2264 n \u2264 50000, 1 \u2264 k \u2264 500) \u2014 the number of vertices and the required\ndistance between the vertices. Next n - 1 lines describe the edges as \"ai bi\"\n(without the quotes) (1 \u2264 ai, bi \u2264 n, ai \u2260 bi), where ai and bi are the\nvertices connected by the i-th edge. All given edges are different. Output\nPrint a single integer \u2014 the number of distinct pairs of the tree's vertices\nwhich have a distance of exactly k between them. Please do not use the \nspecifier to read or write 64-bit integers in \u0421++. It is preferred to use the\ncin, cout streams or the \nOutput 4 Input 5 3 1 2 2 3 3 4 4 5 Output 2 Note In the first sample the pairs\nof vertexes at distance 2 from each other are (1, 3), (1, 5), (3, 5) and (2,\n4).\n\n",
        "cf_contest_id": 161,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5 2\r\n1 2\r\n2 3\r\n3 4\r\n2 5\r\n",
                "4"
            ],
            [
                "5 3\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "10 1\r\n2 1\r\n3 1\r\n4 3\r\n5 4\r\n6 5\r\n7 1\r\n8 6\r\n9 2\r\n10 6\r\n",
                "9"
            ],
            [
                "10 2\r\n2 1\r\n3 1\r\n4 3\r\n5 4\r\n6 5\r\n7 1\r\n8 6\r\n9 2\r\n10 6\r\n",
                "10"
            ],
            [
                "10 3\r\n2 1\r\n3 1\r\n4 3\r\n5 4\r\n6 5\r\n7 1\r\n8 6\r\n9 2\r\n10 6\r\n",
                "8"
            ],
            [
                "50 3\r\n2 1\r\n3 2\r\n4 3\r\n5 4\r\n6 5\r\n7 6\r\n8 7\r\n9 8\r\n10 9\r\n11 10\r\n12 11\r\n13 12\r\n14 13\r\n15 14\r\n16 15\r\n17 16\r\n18 17\r\n19 18\r\n20 19\r\n21 20\r\n22 21\r\n23 22\r\n24 23\r\n25 24\r\n26 25\r\n27 26\r\n28 27\r\n29 28\r\n30 29\r\n31 30\r\n32 31\r\n33 32\r\n34 33\r\n35 34\r\n36 35\r\n37 36\r\n38 37\r\n39 38\r\n40 39\r\n41 40\r\n42 41\r\n43 42\r\n44 43\r\n45 44\r\n46 45\r\n47 46\r\n48 47\r\n49 48\r\n50 49\r\n",
                "47"
            ],
            [
                "50 4\r\n2 1\r\n3 1\r\n4 2\r\n5 2\r\n6 3\r\n7 3\r\n8 4\r\n9 4\r\n10 5\r\n11 5\r\n12 6\r\n13 6\r\n14 7\r\n15 7\r\n16 8\r\n17 8\r\n18 9\r\n19 9\r\n20 10\r\n21 10\r\n22 11\r\n23 11\r\n24 12\r\n25 12\r\n26 13\r\n27 13\r\n28 14\r\n29 14\r\n30 15\r\n31 15\r\n32 16\r\n33 16\r\n34 17\r\n35 17\r\n36 18\r\n37 18\r\n38 19\r\n39 19\r\n40 20\r\n41 20\r\n42 21\r\n43 21\r\n44 22\r\n45 22\r\n46 23\r\n47 23\r\n48 24\r\n49 24\r\n50 25\r\n",
                "124"
            ],
            [
                "50 5\r\n2 1\r\n3 1\r\n4 2\r\n5 2\r\n6 4\r\n7 4\r\n8 6\r\n9 6\r\n10 8\r\n11 8\r\n12 10\r\n13 10\r\n14 12\r\n15 12\r\n16 14\r\n17 14\r\n18 16\r\n19 16\r\n20 18\r\n21 18\r\n22 20\r\n23 20\r\n24 22\r\n25 22\r\n26 24\r\n27 24\r\n28 26\r\n29 26\r\n30 28\r\n31 28\r\n32 30\r\n33 30\r\n34 32\r\n35 32\r\n36 34\r\n37 34\r\n38 36\r\n39 36\r\n40 38\r\n41 38\r\n42 40\r\n43 40\r\n44 42\r\n45 42\r\n46 44\r\n47 44\r\n48 46\r\n49 46\r\n50 48\r\n",
                "84"
            ],
            [
                "10 20\r\n2 1\r\n3 2\r\n4 1\r\n5 3\r\n6 4\r\n7 1\r\n8 2\r\n9 7\r\n10 2\r\n",
                "0"
            ]
        ]
    }
]