[
    {
        "name": "Minimums and Maximums",
        "description": "An array is beautiful if both of the following two conditions meet: there are\nat least \n    l_1\n and at most \n    r_1\n elements in the array equal to its\nminimum; there are at least \n    l_2\n and at most \n    r_2\n elements in the\narray equal to its maximum. For example, the array \n    [2, 3, 2, 4, 4, 3, 2]\n\nhas \n    3\n elements equal to its minimum (\n    1\n-st, \n    3\n-rd and\n\n    7\n-th) and \n    2\n elements equal to its maximum (\n    4\n-th and\n\n    5\n-th). Another example: the array \n    [42, 42, 42]\n has \n    3\n\nelements equal to its minimum and \n    3\n elements equal to its maximum. Your\ntask is to calculate the minimum possible number of elements in a beautiful\narray. Input The first line contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    5000\n) \u2014 the number of test cases. Each test case consists of one line\ncontaining four integers \n    l_1\n, \n    r_1\n, \n    l_2\n and \n    r_2\n (\n    1\n    \n    \u2264 l_1 \n    \u2264 r_1 \n    \u2264 50\n; \n    1 \n    \u2264 l_2 \n    \u2264 r_2 \n    \u2264 50\n). Output\nFor each test case, print one integer \u2014 the minimum possible number of\nelements in a beautiful array. Example Input 7 3 5 4 6 5 8 5 5 3 3 10 12 1 5 3\n3 1 1 2 2 2 2 1 1 6 6 6 6 Output 4 5 13 3 3 3 6 Note Optimal arrays in the\ntest cases of the example: \n    [1, 1, 1, 1]\n, it has \n    4\n minimums and\n\n    4\n maximums; \n    [4, 4, 4, 4, 4]\n, it has \n    5\n minimums and \n    5\n\nmaximums; \n    [1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]\n, it has \n    3\n\nminimums and \n    10\n maximums; \n    [8, 8, 8]\n, it has \n    3\n minimums and\n\n    3\n maximums; \n    [4, 6, 6]\n, it has \n    1\n minimum and \n    2\n\nmaximums; \n    [3, 4, 3]\n, it has \n    2\n minimums and \n    1\n maximum; \n    [5,\n    5, 5, 5, 5, 5]\n, it has \n    6\n minimums and \n    6\n maximums.\n\n",
        "cf_contest_id": 1680,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "7\r\n3 5 4 6\r\n5 8 5 5\r\n3 3 10 12\r\n1 5 3 3\r\n1 1 2 2\r\n2 2 1 1\r\n6 6 6 6\r\n",
                "4\r\n5\r\n13\r\n3\r\n3\r\n3\r\n6\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n40 40 40 40\r\n",
                "40\r\n"
            ],
            [
                "1\r\n14 17 15 50\r\n",
                "15\r\n"
            ]
        ]
    }
]