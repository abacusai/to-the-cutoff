[
    {
        "name": "Hamming Distance Sum",
        "description": "Genos needs your help. He was asked to solve the following programming problem\nby Saitama: The length of some string s is denoted |s|. The Hamming distance\nbetween two strings s and t of equal length is defined as , where si is the\ni-th character of s and ti is the i-th character of t. For example, the\nHamming distance between string \"0011\" and string \"0110\" is |0 - 0| + |0 - 1|\n+ |1 - 1| + |1 - 0| = 0 + 1 + 0 + 1 = 2. Given two binary strings a and b,\nfind the sum of the Hamming distances between a and all contiguous substrings\nof b of length |a|. Input The first line of the input contains binary string a\n(1 \u2264 |a| \u2264 200 000). The second line of the input contains binary string b\n(|a| \u2264 |b| \u2264 200 000). Both strings are guaranteed to consist of characters\n'0' and '1' only. Output Print a single integer \u2014 the sum of Hamming distances\nbetween a and all contiguous substrings of b of length |a|. Examples Input 01\n00111 Output 3 Input 0011 0110 Output 2 Note For the first sample case, there\nare four contiguous substrings of b of length |a|: \"00\", \"01\", \"11\", and \"11\".\nThe distance between \"01\" and \"00\" is |0 - 0| + |1 - 0| = 1. The distance\nbetween \"01\" and \"01\" is |0 - 0| + |1 - 1| = 0. The distance between \"01\" and\n\"11\" is |0 - 1| + |1 - 1| = 1. Last distance counts twice, as there are two\noccurrences of string \"11\". The sum of these edit distances is 1 + 0 + 1 + 1 =\n3. The second sample case is described in the statement.\n\n",
        "cf_contest_id": 608,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "01\r\n00111\r\n",
                "3\r\n"
            ],
            [
                "0011\r\n0110\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "0\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1\r\n0\r\n",
                "1\r\n"
            ],
            [
                "0\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "1001101001101110101101000\r\n01111000010011111111110010001101000100011110101111\r\n",
                "321\r\n"
            ],
            [
                "1110010001000101001011111\r\n00011011000000100001010000010100110011010001111010\r\n",
                "316\r\n"
            ]
        ]
    }
]