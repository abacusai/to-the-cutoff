[
    {
        "name": "Koa and the Beach (Hard Version)",
        "description": "The only difference between easy and hard versions is on constraints. In this\nversion constraints are higher. You can make hacks only if all versions of the\nproblem are solved. Koa the Koala is at the beach! The beach consists (from\nleft to right) of a shore, \n    n+1\n meters of sea and an island at \n    n+1\n\nmeters from the shore. She measured the depth of the sea at \n    1, 2, \n    \u2026,\n    n\n meters from the shore and saved them in array \n    d\n. \n    d_i\n denotes\nthe depth of the sea at \n    i\n meters from the shore for \n    1 \n    \u2264 i \n    \u2264\n    n\n. Like any beach this one has tide, the intensity of the tide is measured\nby parameter \n    k\n and affects all depths from the beginning at time\n\n    t=0\n in the following way: For a total of \n    k\n seconds, each second,\ntide increases all depths by \n    1\n. Then, for a total of \n    k\n seconds,\neach second, tide decreases all depths by \n    1\n. This process repeats again\nand again (ie. depths increase for \n    k\n seconds then decrease for \n    k\n\nseconds and so on ...).Formally, let's define \n    0\n-indexed array \n    p = [0,\n    1, 2, \n    \u2026, k - 2, k - 1, k, k - 1, k - 2, \n    \u2026, 2, 1]\n of length\n\n    2k\n. At time \n    t\n (\n    0 \n    \u2264 t\n) depth at \n    i\n meters from the\nshore equals \n    d_i + p[t \n     2k]\n (\n    t \n     2k\n denotes the\nremainder of the division of \n    t\n by \n    2k\n). Note that the changes occur\ninstantaneously after each second, see the notes for better understanding. At\ntime \n    t=0\n Koa is standing at the shore and wants to get to the island.\nSuppose that at some time \n    t\n (\n    0 \n    \u2264 t\n) she is at \n    x\n (\n    0\n    \n    \u2264 x \n    \u2264 n\n) meters from the shore: In one second Koa can swim \n    1\n\nmeter further from the shore (\n    x\n changes to \n    x+1\n) or not swim at all\n(\n    x\n stays the same), in both cases \n    t\n changes to \n    t+1\n. As Koa\nis a bad swimmer, the depth of the sea at the point where she is can't exceed\n\n    l\n at integer points of time (or she will drown). More formally, if Koa\nis at \n    x\n (\n    1 \n    \u2264 x \n    \u2264 n\n) meters from the shore at the moment\n\n    t\n (for some integer \n    t\n    \u2265 0\n), the depth of the sea at this point\n\u2014 \n    d_x + p[t \n     2k]\n \u2014 can't exceed \n    l\n. In other words, \n    d_x +\n    p[t \n     2k] \n    \u2264 l\n must hold always. Once Koa reaches the island at\n\n    n+1\n meters from the shore, she stops and can rest.Note that while Koa\nswims tide doesn't have effect on her (ie. she can't drown while swimming).\nNote that Koa can choose to stay on the shore for as long as she needs and\nneither the shore or the island are affected by the tide (they are solid\nground and she won't drown there). Koa wants to know whether she can go from\nthe shore to the island. Help her! Input The first line of the input contains\none integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases.\nDescription of the test cases follows. The first line of each test case\ncontains three integers \n    n\n, \n    k\n and \n    l\n (\n    1 \n    \u2264 n \n    \u2264 3\n    \n    \u00b7 10^5; 1 \n    \u2264 k \n    \u2264 10^9; 1 \n    \u2264 l \n    \u2264 10^9\n) \u2014 the number of\nmeters of sea Koa measured and parameters \n    k\n and \n    l\n. The second line\nof each test case contains \n    n\n integers \n    d_1, d_2, \n    \u2026, d_n\n\n(\n    0 \n    \u2264 d_i \n    \u2264 10^9\n) \u2014 the depths of each meter of sea Koa measured.\nIt is guaranteed that the sum of \n    n\n over all test cases does not exceed\n\n    3 \n    \u00b7 10^5\n. Output For each test case: Print Yes if Koa can get from\nthe shore to the island, and No otherwise. You may print each letter in any\ncase (upper or lower). Example Input 7 2 1 1 1 0 5 2 3 1 2 3 2 2 4 3 4 0 2 4 3\n2 3 5 3 0 7 2 3 3 0 2 1 3 0 1 7 1 4 4 4 3 0 2 4 2 5 2 3 1 2 3 2 2 Output Yes\nNo Yes Yes Yes No No Note In the following \n    s\n denotes the shore, \n    i\n\ndenotes the island, \n    x\n denotes distance from Koa to the shore, the\nunderline denotes the position of Koa, and values in the array below denote\ncurrent depths, affected by tide, at \n    1, 2, \n    \u2026, n\n meters from the\nshore. In test case \n    1\n we have \n    n = 2, k = 1, l = 1, p = [ 0, 1 ]\n.\nKoa wants to go from shore (at \n    x = 0\n) to the island (at \n    x = 3\n).\nLet's describe a possible solution: Initially at \n    t = 0\n the beach looks\nlike this: \n    [\n    s, 1, 0, i]\n. At \n    t = 0\n if Koa would\ndecide to swim to \n    x = 1\n, beach would look like: \n    [s, \n    2,\n    1, i]\n at \n    t = 1\n, since \n    2 > 1\n she would drown. So Koa waits\n\n    1\n second instead and beach looks like \n    [\n    s, 2, 1, i]\n\nat \n    t = 1\n. At \n    t = 1\n Koa swims to \n    x = 1\n, beach looks like\n\n    [s, \n    1, 0, i]\n at \n    t = 2\n. Koa doesn't drown because\n\n    1 \n    \u2264 1\n. At \n    t = 2\n Koa swims to \n    x = 2\n, beach looks like\n\n    [s, 2, \n    1, i]\n at \n    t = 3\n. Koa doesn't drown because\n\n    1 \n    \u2264 1\n. At \n    t = 3\n Koa swims to \n    x = 3\n, beach looks like\n\n    [s, 1, 0, \n    i]\n at \n    t = 4\n. At \n    t = 4\n Koa is at \n    x\n    = 3\n and she made it! We can show that in test case \n    2\n Koa can't get to\nthe island.\n\n",
        "cf_contest_id": 1384,
        "cf_index": "B2",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dp",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n2 1 1\r\n1 0\r\n5 2 3\r\n1 2 3 2 2\r\n4 3 4\r\n0 2 4 3\r\n2 3 5\r\n3 0\r\n7 2 3\r\n3 0 2 1 3 0 1\r\n7 1 4\r\n4 4 3 0 2 4 2\r\n5 2 3\r\n1 2 3 2 2\r\n",
                "Yes \r\nNo \r\nYes \r\nYes \r\nYes \r\nNo \r\nNo \r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n100 5 4\r\n0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4 4 4 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 0 0 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 2 0 0 0\r\n",
                "No \r\n"
            ],
            [
                "10\r\n1 1 1\r\n1\r\n1 1 1\r\n0\r\n1 1 1\r\n2\r\n1 1 1\r\n3\r\n1 1 1\r\n4\r\n2 2 2\r\n2 3\r\n2 1 2\r\n1 1\r\n2 1 2\r\n0 0\r\n14 3 9\r\n1 3 2 3 3 2 4 2 1 3 6 7 10 1\r\n7 1 1\r\n1 1 1 1 1 1 1\r\n",
                "Yes \r\nYes \r\nNo \r\nNo \r\nNo \r\nNo \r\nYes \r\nYes \r\nNo \r\nNo \r\n"
            ]
        ]
    }
]