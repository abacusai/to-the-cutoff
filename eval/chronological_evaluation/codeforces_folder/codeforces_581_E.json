[
    {
        "name": "Kojiro and Furrari",
        "description": "Motorist Kojiro spent 10 years saving up for his favorite car brand, Furrari.\nFinally Kojiro's dream came true! Kojiro now wants to get to his girlfriend\nJohanna to show off his car to her. Kojiro wants to get to his girlfriend, so\nhe will go to her along a coordinate line. For simplicity, we can assume that\nKojiro is at the point f of a coordinate line, and Johanna is at point e. Some\npoints of the coordinate line have gas stations. Every gas station fills with\nonly one type of fuel: Regular-92, Premium-95 or Super-98. Thus, each gas\nstation is characterized by a pair of integers ti and xi \u2014 the number of the\ngas type and its position. One liter of fuel is enough to drive for exactly 1\nkm (this value does not depend on the type of fuel). Fuels of three types\ndiffer only in quality, according to the research, that affects the lifetime\nof the vehicle motor. A Furrari tank holds exactly s liters of fuel\n(regardless of the type of fuel). At the moment of departure from point f\nKojiro's tank is completely filled with fuel Super-98. At each gas station\nKojiro can fill the tank with any amount of fuel, but of course, at no point\nin time, the amount of fuel in the tank can be more than s liters. Note that\nthe tank can simultaneously have different types of fuel. The car can moves\nboth left and right. To extend the lifetime of the engine Kojiro seeks\nprimarily to minimize the amount of fuel of type Regular-92. If there are\nseveral strategies to go from f to e, using the minimum amount of fuel of type\nRegular-92, it is necessary to travel so as to minimize the amount of used\nfuel of type Premium-95. Write a program that can for the m possible positions\nof the start fi minimize firstly, the amount of used fuel of type Regular-92\nand secondly, the amount of used fuel of type Premium-95. Input The first line\nof the input contains four positive integers e, s, n, m (1 \u2264 e, s \u2264 10^9, 1 \u2264\nn, m \u2264 2\u00b710^5) \u2014 the coordinate of the point where Johanna is, the capacity of\na Furrari tank, the number of gas stations and the number of starting points.\nNext n lines contain two integers each ti, xi (1 \u2264 ti \u2264 3, - 10^9 \u2264 xi \u2264\n10^9), representing the type of the i-th gas station (1 represents Regular-92,\n2 \u2014 Premium-95 and 3 \u2014 Super-98) and the position on a coordinate line of the\ni-th gas station. Gas stations don't necessarily follow in order from left to\nright. The last line contains m integers fi ( - 10^9 \u2264 fi < e). Start\npositions don't necessarily follow in order from left to right. No point of\nthe coordinate line contains more than one gas station. It is possible that\nsome of points fi or point e coincide with a gas station. Output Print exactly\nm lines. The i-th of them should contain two integers \u2014 the minimum amount of\ngas of type Regular-92 and type Premium-95, if Kojiro starts at point fi.\nFirst you need to minimize the first value. If there are multiple ways to do\nit, you need to also minimize the second value. If there is no way to get to\nJohanna from point fi, the i-th line should look like that \"-1 -1\" (two\nnumbers minus one without the quotes). Examples Input 8 4 1 1 2 4 0 Output 0 4\nInput 9 3 2 3 2 3 1 6 -1 0 1 Output -1 -1 3 3 3 2 Input 20 9 2 4 1 5 2 10 -1 0\n1 2 Output -1 -1 -1 -1 -1 -1 -1 -1\n\n",
        "cf_contest_id": 581,
        "cf_index": "E",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8 4 1 1\r\n2 4\r\n0\r\n",
                "0 4\r\n"
            ],
            [
                "9 3 2 3\r\n2 3\r\n1 6\r\n-1 0 1\r\n",
                "-1 -1\r\n3 3\r\n3 2\r\n"
            ],
            [
                "20 9 2 4\r\n1 5\r\n2 10\r\n-1 0 1 2\r\n",
                "-1 -1\r\n-1 -1\r\n-1 -1\r\n-1 -1\r\n"
            ]
        ],
        "private_cases": [
            [
                "18 9 2 1\r\n2 9\r\n1 12\r\n0\r\n",
                "0 9\r\n"
            ],
            [
                "18 9 2 1\r\n1 9\r\n2 12\r\n0\r\n",
                "3 6\r\n"
            ],
            [
                "9 3 2 1\r\n2 3\r\n1 6\r\n0\r\n",
                "3 3\r\n"
            ],
            [
                "67 10 9 10\r\n3 -1\r\n1 59\r\n1 39\r\n1 -11\r\n2 29\r\n1 9\r\n1 19\r\n1 49\r\n3 77\r\n27 14 21 36 0 13 57 41 20 28\r\n",
                "28 2\r\n33 10\r\n28 8\r\n21 0\r\n47 10\r\n34 10\r\n0 0\r\n16 0\r\n28 9\r\n28 1\r\n"
            ],
            [
                "216 15 19 10\r\n2 -31\r\n2 100\r\n3 230\r\n1 57\r\n3 42\r\n1 157\r\n2 186\r\n1 113\r\n2 -16\r\n3 245\r\n2 142\r\n1 86\r\n2 -3\r\n3 201\r\n3 128\r\n3 12\r\n3 171\r\n2 27\r\n2 72\r\n98 197 114 0 155 35 36 11 146 27\r\n",
                "27 31\r\n0 0\r\n14 29\r\n55 74\r\n1 15\r\n55 59\r\n55 59\r\n55 74\r\n10 15\r\n55 59\r\n"
            ],
            [
                "386 20 29 30\r\n1 349\r\n2 482\r\n1 112\r\n1 93\r\n2 189\r\n1 207\r\n2 35\r\n2 -5\r\n1 422\r\n1 442\r\n1 402\r\n2 238\r\n3 258\r\n3 54\r\n2 369\r\n2 290\r\n2 329\r\n3 74\r\n3 -62\r\n2 170\r\n1 462\r\n2 15\r\n2 222\r\n1 309\r\n3 150\r\n1 -25\r\n3 130\r\n1 271\r\n1 -43\r\n351 250 91 102 0 286 123 93 100 205 328 269 188 83 73 35 188 223 73 215 199 64 47 379 61 298 295 65 158 211\r\n",
                "0 15\r\n51 57\r\n83 132\r\n72 132\r\n100 166\r\n39 41\r\n64 132\r\n81 132\r\n74 132\r\n51 90\r\n20 18\r\n40 57\r\n64 94\r\n91 132\r\n100 132\r\n100 132\r\n64 94\r\n51 72\r\n100 132\r\n51 80\r\n54 93\r\n100 132\r\n100 132\r\n0 0\r\n100 132\r\n31 37\r\n34 37\r\n100 132\r\n64 124\r\n51 84\r\n"
            ],
            [
                "1000000000 1 1 1\r\n3 775565805\r\n0\r\n",
                "-1 -1\r\n"
            ],
            [
                "1000000000 2 5 5\r\n2 118899563\r\n2 -442439384\r\n1 -961259426\r\n2 -156596184\r\n1 -809672605\r\n249460520 -545686472 0 -653929719 905155526\r\n",
                "-1 -1\r\n-1 -1\r\n-1 -1\r\n-1 -1\r\n-1 -1\r\n"
            ]
        ]
    }
]