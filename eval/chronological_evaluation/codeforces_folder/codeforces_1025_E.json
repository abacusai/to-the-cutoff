[
    {
        "name": "Colored Cubes",
        "description": "Vasya passes all exams! Despite expectations, Vasya is not tired, moreover, he\nis ready for new challenges. However, he does not want to work too hard on\ndifficult problems. Vasya remembered that he has a not-so-hard puzzle: \n    m\n\ncolored cubes are placed on a chessboard of size \n    n \n    \u00d7 n\n. The fact\nis that \n    m \n    \u2264 n\n and all cubes have distinct colors. Each cube\noccupies exactly one cell. Also, there is a designated cell for each cube on\nthe board, the puzzle is to place each cube on its place. The cubes are\nfragile, so in one operation you only can move one cube onto one of four\nneighboring by side cells, if only it is empty. Vasya wants to be careful, so\neach operation takes exactly one second. Vasya used to train hard for VK Cup\nFinal, so he can focus his attention on the puzzle for at most \n    3\n hours,\nthat is \n    10800\n seconds. Help Vasya find such a sequence of operations\nthat all cubes will be moved onto their designated places, and Vasya won't\nlose his attention. Input The first line contains two integers \n    n\n and\n\n    m\n (\n    1 \n    \u2264 m \n    \u2264 n \n    \u2264 50\n). Each of the next \n    m\n lines\ncontains two integers \n    x_i\n, \n    y_i\n (\n    1 \n    \u2264 x_i, y_i \n    \u2264 n\n),\nthe initial positions of the cubes. The next \n    m\n lines describe the\ndesignated places for the cubes in the same format and order. It is guaranteed\nthat all initial positions are distinct and all designated places are\ndistinct, however, it is possible that some initial positions coincide with\nsome final positions. Output In the first line print a single integer \n    k\n\n(\n    0 \n    \u2264 k \n    \u2264 10800\n) \u2014 the number of operations Vasya should make.\nIn each of the next \n    k\n lines you should describe one operation: print\nfour integers \n    x_1\n, \n    y_1\n, \n    x_2\n, \n    y_2\n, where \n    x_1, y_1\n\nis the position of the cube Vasya should move, and \n    x_2, y_2\n is the new\nposition of the cube. The cells \n    x_1, y_1\n and \n    x_2, y_2\n should have\na common side, the cell \n    x_2, y_2\n should be empty before the operation.\nWe can show that there always exists at least one solution. If there are\nmultiple solutions, print any of them. Examples Input 2 1 1 1 2 2 Output 2 1 1\n1 2 1 2 2 2 Input 2 2 1 1 2 2 1 2 2 1 Output 2 2 2 2 1 1 1 1 2 Input 2 2 2 1 2\n2 2 2 2 1 Output 4 2 1 1 1 2 2 2 1 1 1 1 2 1 2 2 2 Input 4 3 2 2 2 3 3 3 3 2 2\n2 2 3 Output 9 2 2 1 2 1 2 1 1 2 3 2 2 3 3 2 3 2 2 1 2 1 1 2 1 2 1 3 1 3 1 3 2\n1 2 2 2 Note In the fourth example the printed sequence of movements (shown on\nthe picture below) is valid, but not shortest. There is a solution in \n    3\n\noperations.\n\n",
        "cf_contest_id": 1025,
        "cf_index": "E",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation",
            "matrices"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1\r\n1 1\r\n2 2\r\n",
                "2\r\n1 1 1 2\r\n1 2 2 2\r\n"
            ],
            [
                "2 2\r\n1 1\r\n2 2\r\n1 2\r\n2 1\r\n",
                "2\r\n2 2 2 1\r\n1 1 1 2\r\n"
            ],
            [
                "2 2\r\n2 1\r\n2 2\r\n2 2\r\n2 1\r\n",
                "4\r\n2 1 1 1\r\n2 2 2 1\r\n1 1 1 2\r\n1 2 2 2\r\n"
            ],
            [
                "4 3\r\n2 2\r\n2 3\r\n3 3\r\n3 2\r\n2 2\r\n2 3\r\n",
                "9\r\n2 2 1 2\r\n1 2 1 1\r\n2 3 2 2\r\n1 1 2 1\r\n2 1 3 1\r\n3 3 2 3\r\n2 2 1 2\r\n3 1 3 2\r\n1 2 2 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 4\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n1 4\r\n1 3\r\n1 2\r\n1 1\r\n",
                "20\r\n1 2 2 2\r\n1 3 2 3\r\n2 3 3 3\r\n1 4 2 4\r\n2 4 3 4\r\n3 4 4 4\r\n4 4 4 3\r\n4 3 4 2\r\n4 2 4 1\r\n3 3 3 2\r\n2 2 2 3\r\n1 1 1 2\r\n1 2 1 3\r\n1 3 1 4\r\n4 1 3 1\r\n3 1 2 1\r\n2 1 1 1\r\n3 2 2 2\r\n2 2 1 2\r\n2 3 1 3\r\n"
            ],
            [
                "7 4\r\n2 2\r\n3 3\r\n4 4\r\n5 5\r\n5 5\r\n4 4\r\n3 3\r\n2 2\r\n",
                "28\r\n2 2 1 2\r\n3 3 2 3\r\n4 4 3 4\r\n5 5 4 5\r\n1 2 1 1\r\n2 3 2 2\r\n3 4 3 3\r\n4 5 4 4\r\n1 1 2 1\r\n2 1 3 1\r\n3 1 4 1\r\n2 2 3 2\r\n3 3 2 3\r\n4 4 3 4\r\n3 4 2 4\r\n2 4 1 4\r\n4 1 4 2\r\n4 2 4 3\r\n4 3 4 4\r\n4 4 4 5\r\n3 2 3 3\r\n3 3 3 4\r\n1 4 1 3\r\n1 3 1 2\r\n4 5 5 5\r\n3 4 4 4\r\n2 3 3 3\r\n1 2 2 2\r\n"
            ],
            [
                "4 4\r\n4 1\r\n3 2\r\n2 3\r\n1 4\r\n1 4\r\n2 3\r\n3 2\r\n4 1\r\n",
                "16\r\n1 4 2 4\r\n2 4 3 4\r\n3 4 4 4\r\n2 3 3 3\r\n3 2 2 2\r\n4 1 3 1\r\n3 1 2 1\r\n2 1 1 1\r\n4 4 4 3\r\n4 3 4 2\r\n4 2 4 1\r\n3 3 3 2\r\n2 2 2 3\r\n1 1 1 2\r\n1 2 1 3\r\n1 3 1 4\r\n"
            ],
            [
                "4 1\r\n2 1\r\n3 3\r\n",
                "5\r\n2 1 1 1\r\n1 1 1 2\r\n1 2 1 3\r\n1 3 2 3\r\n2 3 3 3\r\n"
            ],
            [
                "5 1\r\n1 2\r\n1 1\r\n",
                "1\r\n1 2 1 1\r\n"
            ],
            [
                "3 1\r\n2 2\r\n2 2\r\n",
                "4\r\n2 2 1 2\r\n1 2 1 1\r\n1 1 1 2\r\n1 2 2 2\r\n"
            ],
            [
                "1 1\r\n1 1\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "5 4\r\n1 1\r\n2 1\r\n3 1\r\n4 1\r\n4 1\r\n3 1\r\n2 1\r\n1 1\r\n",
                "20\r\n2 1 2 2\r\n3 1 3 2\r\n3 2 3 3\r\n4 1 4 2\r\n4 2 4 3\r\n4 3 4 4\r\n1 1 2 1\r\n2 1 3 1\r\n3 1 4 1\r\n2 2 3 2\r\n3 3 2 3\r\n4 4 3 4\r\n3 4 2 4\r\n2 4 1 4\r\n3 2 3 1\r\n2 3 2 2\r\n2 2 2 1\r\n1 4 1 3\r\n1 3 1 2\r\n1 2 1 1\r\n"
            ],
            [
                "5 5\r\n5 5\r\n5 4\r\n5 3\r\n5 2\r\n5 1\r\n5 1\r\n5 2\r\n5 3\r\n5 4\r\n5 5\r\n",
                "32\r\n5 5 4 5\r\n4 5 3 5\r\n3 5 2 5\r\n2 5 1 5\r\n5 4 4 4\r\n4 4 3 4\r\n3 4 2 4\r\n5 3 4 3\r\n4 3 3 3\r\n5 2 4 2\r\n1 5 1 4\r\n1 4 1 3\r\n1 3 1 2\r\n1 2 1 1\r\n2 4 2 3\r\n2 3 2 2\r\n4 2 4 3\r\n4 3 4 4\r\n5 1 5 2\r\n5 2 5 3\r\n5 3 5 4\r\n5 4 5 5\r\n4 4 5 4\r\n3 3 4 3\r\n4 3 5 3\r\n2 2 3 2\r\n3 2 4 2\r\n4 2 5 2\r\n1 1 2 1\r\n2 1 3 1\r\n3 1 4 1\r\n4 1 5 1\r\n"
            ],
            [
                "6 5\r\n6 6\r\n5 6\r\n4 6\r\n3 6\r\n2 6\r\n2 6\r\n3 6\r\n4 6\r\n5 6\r\n6 6\r\n",
                "52\r\n2 6 1 6\r\n3 6 2 6\r\n4 6 3 6\r\n5 6 4 6\r\n6 6 5 6\r\n1 6 1 5\r\n2 6 2 5\r\n2 5 2 4\r\n3 6 3 5\r\n3 5 3 4\r\n3 4 3 3\r\n4 6 4 5\r\n4 5 4 4\r\n4 4 4 3\r\n4 3 4 2\r\n5 6 5 5\r\n5 5 5 4\r\n5 4 5 3\r\n5 3 5 2\r\n5 2 5 1\r\n1 5 2 5\r\n2 5 3 5\r\n3 5 4 5\r\n4 5 5 5\r\n2 4 3 4\r\n3 4 4 4\r\n4 2 3 2\r\n3 2 2 2\r\n5 1 4 1\r\n4 1 3 1\r\n3 1 2 1\r\n2 1 1 1\r\n5 5 5 6\r\n4 4 4 5\r\n4 5 4 6\r\n3 3 3 4\r\n3 4 3 5\r\n3 5 3 6\r\n2 2 2 3\r\n2 3 2 4\r\n2 4 2 5\r\n2 5 2 6\r\n1 1 1 2\r\n1 2 1 3\r\n1 3 1 4\r\n1 4 1 5\r\n1 5 1 6\r\n5 6 6 6\r\n4 6 5 6\r\n3 6 4 6\r\n2 6 3 6\r\n1 6 2 6\r\n"
            ],
            [
                "5 2\r\n5 2\r\n2 4\r\n3 2\r\n1 3\r\n",
                "14\r\n2 4 1 4\r\n5 2 4 2\r\n4 2 3 2\r\n3 2 2 2\r\n1 4 1 3\r\n1 3 1 2\r\n2 2 2 1\r\n1 2 2 2\r\n2 1 1 1\r\n1 1 2 1\r\n2 2 1 2\r\n2 1 2 2\r\n1 2 1 3\r\n2 2 3 2\r\n"
            ],
            [
                "5 3\r\n4 2\r\n5 3\r\n2 5\r\n5 5\r\n2 1\r\n1 4\r\n",
                "25\r\n2 5 1 5\r\n4 2 3 2\r\n3 2 2 2\r\n5 3 4 3\r\n4 3 3 3\r\n1 5 1 4\r\n1 4 1 3\r\n2 2 2 1\r\n3 3 3 2\r\n1 3 2 3\r\n2 3 3 3\r\n2 1 1 1\r\n3 2 2 2\r\n1 1 2 1\r\n2 1 3 1\r\n3 3 2 3\r\n2 3 1 3\r\n3 1 3 2\r\n3 2 3 3\r\n3 3 3 4\r\n3 4 3 5\r\n2 2 2 1\r\n1 3 1 4\r\n3 5 4 5\r\n4 5 5 5\r\n"
            ],
            [
                "5 4\r\n2 2\r\n3 5\r\n3 2\r\n3 4\r\n2 3\r\n5 4\r\n3 4\r\n4 3\r\n",
                "22\r\n2 2 1 2\r\n3 5 2 5\r\n3 4 4 4\r\n1 2 1 1\r\n2 5 2 4\r\n2 4 2 3\r\n2 3 2 2\r\n3 2 3 3\r\n2 2 3 2\r\n3 2 4 2\r\n4 4 3 4\r\n3 3 2 3\r\n4 2 4 3\r\n4 3 4 4\r\n3 4 3 3\r\n2 3 2 4\r\n1 1 1 2\r\n1 2 1 3\r\n4 4 5 4\r\n3 3 4 3\r\n2 4 3 4\r\n1 3 2 3\r\n"
            ],
            [
                "5 5\r\n1 1\r\n4 2\r\n2 5\r\n4 1\r\n2 1\r\n5 2\r\n2 5\r\n1 1\r\n3 3\r\n4 5\r\n",
                "32\r\n2 1 3 1\r\n4 1 5 1\r\n2 5 2 4\r\n2 4 2 3\r\n3 1 3 2\r\n3 2 3 3\r\n3 3 3 4\r\n3 4 3 5\r\n5 1 5 2\r\n5 2 5 3\r\n5 3 5 4\r\n2 3 3 3\r\n3 5 4 5\r\n4 5 5 5\r\n4 2 3 2\r\n3 2 2 2\r\n5 4 4 4\r\n1 1 2 1\r\n2 1 3 1\r\n3 1 4 1\r\n4 1 5 1\r\n5 5 4 5\r\n4 4 3 4\r\n3 3 2 3\r\n2 3 1 3\r\n5 1 5 2\r\n3 4 3 3\r\n2 2 2 3\r\n2 3 2 4\r\n2 4 2 5\r\n1 3 1 2\r\n1 2 1 1\r\n"
            ]
        ]
    }
]