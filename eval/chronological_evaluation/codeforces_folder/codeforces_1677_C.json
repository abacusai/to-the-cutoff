[
    {
        "name": "Tokitsukaze and Two Colorful Tapes",
        "description": "Tokitsukaze has two colorful tapes. There are \n    n\n distinct colors,\nnumbered \n    1\n through \n    n\n, and each color appears exactly once on each\nof the two tapes. Denote the color of the \n    i\n-th position of the first\ntape as \n    ca_i\n, and the color of the \n    i\n-th position of the second\ntape as \n    cb_i\n. Now Tokitsukaze wants to select each color an integer\nvalue from \n    1\n to \n    n\n, distinct for all the colors. After that she\nwill put down the color values in each colored position on the tapes. Denote\nthe number of the \n    i\n-th position of the first tape as \n    numa_i\n, and\nthe number of the \n    i\n-th position of the second tape as \n    numb_i\n. For\nexample, for the above picture, assuming that the color red has value \n    x\n\n(\n    1 \n    \u2264 x \n    \u2264 n\n), it appears at the \n    1\n-st position of the\nfirst tape and the \n    3\n-rd position of the second tape, so\n\n    numa_1=numb_3=x\n. Note that each color \n    i\n from \n    1\n to \n    n\n\nshould have a distinct value, and the same color which appears in both tapes\nhas the same value. After labeling each color, the beauty of the two tapes is\ncalculated as \n    \n\n    \u2211_i=1^n|numa_i-numb_i|.\n\n    \n Please help\nTokitsukaze to find the highest possible beauty. Input The first contains a\nsingle positive integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of\ntest cases. For each test case, the first line contains a single integer\n\n    n\n (\n    1\n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of colors. The second line\ncontains \n    n\n integers \n    ca_1, ca_2, \n    \u2026, ca_n\n (\n    1 \n    \u2264 ca_i\n    \n    \u2264 n\n) \u2014 the color of each position of the first tape. It is guaranteed\nthat \n    ca\n is a permutation. The third line contains \n    n\n integers\n\n    cb_1, cb_2, \n    \u2026, cb_n\n (\n    1 \n    \u2264 cb_i \n    \u2264 n\n) \u2014 the color of\neach position of the second tape. It is guaranteed that \n    cb\n is a\npermutation. It is guaranteed that the sum of \n    n\n over all test cases does\nnot exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, print a single\ninteger \u2014 the highest possible beauty. Example Input 3 6 1 5 4 3 2 6 5 3 1 4 6\n2 6 3 5 4 6 2 1 3 6 4 5 2 1 1 1 1 Output 18 10 0 Note An optimal solution for\nthe first test case is shown in the following figure: The beauty is\n\n    |4-3 \n    |+\n    |3-5 \n    |+\n    |2-4\n    \n    |+\n    |5-2 \n    |+\n    |1-6 \n    |+\n    |6-1\n    \n    |=18\n. An optimal solution for the second test case is shown in the\nfollowing figure: The beauty is \n    |2-2 \n    |+\n    |1-6\n    \n    |+\n    |3-3 \n    |+\n    |6-1 \n    |+\n    |4-4\n    \n    |+\n    |5-5 \n    |=10\n.\n\n",
        "cf_contest_id": 1677,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n6\r\n1 5 4 3 2 6\r\n5 3 1 4 6 2\r\n6\r\n3 5 4 6 2 1\r\n3 6 4 5 2 1\r\n1\r\n1\r\n1\r\n",
                "18\r\n10\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n8\r\n1 2 3 4 5 6 7 8\r\n1 2 3 4 5 7 8 6\r\n7\r\n1 2 3 4 5 6 7\r\n2 1 5 3 6 7 4\r\n4\r\n1 2 3 4\r\n1 4 2 3\r\n",
                "14\r\n24\r\n6\r\n"
            ],
            [
                "1\r\n10\r\n5 3 7 4 6 10 9 8 1 2\r\n2 7 1 3 9 4 8 10 5 6\r\n",
                "50\r\n"
            ],
            [
                "1\r\n10\r\n3 4 1 2 7 6 10 9 5 8\r\n4 6 2 5 10 1 7 3 8 9\r\n",
                "50\r\n"
            ],
            [
                "1\r\n10\r\n8 2 10 1 7 3 9 6 5 4\r\n3 5 6 9 4 8 7 10 1 2\r\n",
                "50\r\n"
            ],
            [
                "1\r\n10\r\n3 8 5 6 2 9 10 4 1 7\r\n10 4 8 1 7 5 3 9 6 2\r\n",
                "50\r\n"
            ],
            [
                "1\r\n50\r\n4 50 11 27 15 29 2 9 12 39 31 1 6 17 32 28 7 24 36 3 18 49 37 35 33 21 48 19 26 5 20 45 14 13 34 40 42 16 44 43 41 25 38 23 30 10 22 8 47 46\r\n10 43 29 5 47 12 39 26 31 15 33 18 13 21 11 22 44 4 38 30 41 25 1 24 14 8 27 36 20 45 23 48 2 42 46 19 32 17 7 50 40 49 37 9 3 35 28 6 16 34\r\n",
                "1250\r\n"
            ],
            [
                "1\r\n50\r\n30 40 4 5 32 33 22 44 26 6 23 31 38 36 49 46 10 43 15 8 25 48 39 21 29 27 16 28 7 2 24 13 50 3 35 14 19 18 12 45 1 9 42 37 41 17 47 34 11 20\r\n42 17 35 8 39 11 32 34 41 20 16 48 31 24 38 28 19 7 50 23 18 49 12 40 36 13 2 9 33 45 14 30 15 44 4 29 10 26 22 37 47 21 27 3 25 46 1 5 43 6\r\n",
                "1250\r\n"
            ],
            [
                "1\r\n10\r\n1 6 10 7 5 8 2 9 4 3\r\n1 6 10 7 5 8 2 9 4 3\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10\r\n10 2 7 9 1 8 5 6 4 3\r\n10 2 7 9 1 8 5 6 4 3\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10\r\n10 1 6 5 8 7 3 4 2 9\r\n4 6 8 1 9 7 3 10 5 2\r\n",
                "48\r\n"
            ],
            [
                "1\r\n10\r\n10 7 2 9 8 1 3 5 4 6\r\n5 4 2 7 6 9 8 3 1 10\r\n",
                "48\r\n"
            ],
            [
                "1\r\n10\r\n3 1 8 7 10 6 9 4 2 5\r\n10 2 4 1 3 9 6 5 7 8\r\n",
                "48\r\n"
            ],
            [
                "1\r\n50\r\n47 16 30 21 13 49 33 31 6 24 46 37 26 45 15 5 38 32 10 3 39 12 27 17 7 35 50 41 11 14 2 48 18 22 40 20 34 43 23 4 25 36 29 28 8 19 9 44 42 1\r\n47 16 28 21 13 25 12 33 6 24 38 1 44 48 2 45 37 32 10 20 15 31 49 17 9 35 50 41 29 14 39 27 30 5 19 23 46 43 3 4 34 11 40 22 8 36 26 7 42 18\r\n",
                "1008\r\n"
            ],
            [
                "1\r\n50\r\n24 30 9 23 47 4 33 16 13 15 42 45 32 36 40 26 44 12 18 19 3 43 5 28 46 48 6 38 2 39 10 49 17 8 29 41 20 7 35 22 21 37 34 25 11 50 1 27 14 31\r\n39 42 17 8 37 38 11 2 33 20 27 14 22 24 50 41 34 36 15 4 44 7 1 9 28 49 18 31 16 12 19 10 46 23 45 25 6 35 30 32 40 3 5 26 43 21 47 13 29 48\r\n",
                "1232\r\n"
            ]
        ]
    }
]