[
    {
        "name": "Encryption (medium)",
        "description": "Heidi has now broken the first level of encryption of the Death Star plans,\nand is staring at the screen presenting her with the description of the next\ncode she has to enter. It looks surprisingly similar to the first one \u2013 seems\nlike the Empire engineers were quite lazy... Heidi is once again given a\nsequence A, but now she is also given two integers k and p. She needs to find\nout what the encryption key S is. Let X be a sequence of integers, and p a\npositive integer. We define the score of X to be the sum of the elements of X\nmodulo p. Heidi is given a sequence A that consists of N integers, and also\ngiven integers k and p. Her goal is to split A into k part such that: Each\npart contains at least 1 element of A, and each part consists of contiguous\nelements of A. No two parts overlap. The total sum S of the scores of those\nparts is maximized. Output the sum S \u2013 the encryption code. Input The first\nline of the input contains three space-separated integer N, k and p (k \u2264 N \u2264\n20 000, 2 \u2264 k \u2264 50, 2 \u2264 p \u2264 100) \u2013 the number of elements in A, the number of\nparts A should be split into, and the modulo for computing scores,\nrespectively. The second line contains N space-separated integers that are the\nelements of A. Each integer is from the interval [1, 1 000 000]. Output Output\nthe number S as described in the problem statement. Examples Input 4 3 10 3 4\n7 2 Output 16 Input 10 5 12 16 3 24 13 9 8 7 5 12 12 Output 37 Note In the\nfirst example, if the input sequence is split as (3, 4), (7), (2), the total\nscore would be . It is easy to see that this score is maximum. In the second\nexample, one possible way to obtain score 37 is to make the following split:\n(16, 3, 24), (13, 9), (8), (7), (5, 12, 12).\n\n",
        "cf_contest_id": 958,
        "cf_index": "C2",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4 3 10\r\n3 4 7 2\r\n",
                "16"
            ],
            [
                "10 5 12\r\n16 3 24 13 9 8 7 5 12 12\r\n",
                "37"
            ]
        ],
        "private_cases": []
    }
]