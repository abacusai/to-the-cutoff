[
    {
        "name": "Arpa\u2019s abnormal DNA and Mehrdad\u2019s deep interest",
        "description": "All of us know that girls in Arpa\u2019s land are... ok, you\u2019ve got the idea :D\nAnyone knows that Arpa isn't a normal man, he is ... well, sorry, I can't\nexplain it more. Mehrdad is interested about the reason, so he asked Sipa, one\nof the best biology scientists in Arpa's land, for help. Sipa has a DNA\neditor. Sipa put Arpa under the DNA editor. DNA editor showed Arpa's DNA as a\nstring S consisting of n lowercase English letters. Also Sipa has another DNA\nT consisting of lowercase English letters that belongs to a normal man. Now\nthere are (n + 1) options to change Arpa's DNA, numbered from 0 to n. i-th of\nthem is to put T between i-th and (i + 1)-th characters of S (0 \u2264 i \u2264 n). If i\n= 0, T will be put before S, and if i = n, it will be put after S. Mehrdad\nwants to choose the most interesting option for Arpa's DNA among these n + 1\noptions. DNA A is more interesting than B if A is lexicographically smaller\nthan B. Mehrdad asked Sipa q questions: Given integers l, r, k, x, y, what is\nthe most interesting option if we only consider such options i that l \u2264 i \u2264 r\nand ? If there are several most interesting options, Mehrdad wants to know one\nwith the smallest number i. Since Sipa is a biology scientist but not a\nprogrammer, you should help him. Input The first line contains strings S, T\nand integer q (1 \u2264 |S|, |T|, q \u2264 10^5) \u2014 Arpa's DNA, the DNA of a normal man,\nand the number of Mehrdad's questions. The strings S and T consist only of\nsmall English letters. Next q lines describe the Mehrdad's questions. Each of\nthese lines contain five integers l, r, k, x, y (0 \u2264 l \u2264 r \u2264 n, 1 \u2264 k \u2264 n, 0 \u2264\nx \u2264 y < k). Output Print q integers. The j-th of them should be the number i\nof the most interesting option among those that satisfy the conditions of the\nj-th question. If there is no option i satisfying the conditions in some\nquestion, print -1. Examples Input abc d 4 0 3 2 0 0 0 3 1 0 0 1 2 1 0 0 0 1 3\n2 2 Output 2 3 2 -1 Input abbbbbbaaa baababaaab 10 1 2 1 0 0 2 7 8 4 7 2 3 9 2\n8 3 4 6 1 1 0 8 5 2 4 2 8 10 4 7 7 10 1 0 0 1 4 6 0 2 0 9 8 0 6 4 8 5 0 1\nOutput 1 4 2 -1 2 4 10 1 1 5 Note Explanation of first sample case: In the\nfirst question Sipa has two options: dabc (i = 0) and abdc (i = 2). The latter\n(abcd) is better than abdc, so answer is 2. In the last question there is no i\nsuch that 0 \u2264 i \u2264 1 and .\n\n",
        "cf_contest_id": 741,
        "cf_index": "E",
        "cf_rating": 3400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "string suffix structures"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "abc d 4\r\n0 3 2 0 0\r\n0 3 1 0 0\r\n1 2 1 0 0\r\n0 1 3 2 2\r\n",
                "2 3 2 -1\r\n"
            ],
            [
                "abbbbbbaaa baababaaab 10\r\n1 2 1 0 0\r\n2 7 8 4 7\r\n2 3 9 2 8\r\n3 4 6 1 1\r\n0 8 5 2 4\r\n2 8 10 4 7\r\n7 10 1 0 0\r\n1 4 6 0 2\r\n0 9 8 0 6\r\n4 8 5 0 1\r\n",
                "1 4 2 -1 2 4 10 1 1 5\r\n"
            ]
        ],
        "private_cases": [
            [
                "swjpsogtik xdeacaqabd 10\r\n0 5 10 2 7\r\n6 8 2 0 1\r\n8 9 8 5 7\r\n2 8 7 0 6\r\n6 8 4 0 3\r\n5 10 8 0 1\r\n6 8 3 0 1\r\n6 7 9 2 3\r\n3 10 4 1 2\r\n4 6 9 3 6\r\n",
                "5 8 -1 8 8 9 7 -1 10 6\r\n"
            ],
            [
                "arjqmnlntv odkjqehmil 10\r\n5 10 8 0 5\r\n4 10 6 3 4\r\n7 9 7 2 2\r\n0 8 1 0 0\r\n4 7 1 0 0\r\n0 7 7 0 1\r\n2 8 2 1 1\r\n3 5 8 0 0\r\n5 9 2 0 1\r\n1 7 4 1 3\r\n",
                "8 9 9 1 7 1 3 -1 8 1\r\n"
            ],
            [
                "swquopwbur wociakyvje 10\r\n4 8 9 5 6\r\n1 9 5 1 3\r\n4 6 10 4 6\r\n5 7 4 2 3\r\n7 9 8 1 5\r\n7 10 6 0 2\r\n5 8 10 5 7\r\n0 0 6 0 4\r\n3 6 3 2 2\r\n0 6 3 2 2\r\n",
                "6 1 6 6 9 8 6 0 5 5\r\n"
            ],
            [
                "oshvimcyll xabwjjvtzo 10\r\n6 8 2 0 1\r\n1 1 5 0 1\r\n4 7 1 0 0\r\n1 3 6 2 3\r\n1 7 1 0 0\r\n1 6 4 0 1\r\n0 6 2 0 0\r\n7 8 10 2 4\r\n8 9 6 1 4\r\n4 10 5 0 2\r\n",
                "7 1 7 3 7 5 6 -1 9 7\r\n"
            ],
            [
                "uhzdsaagog cvralhjipn 10\r\n2 5 7 5 6\r\n7 8 2 0 1\r\n6 8 3 0 2\r\n2 10 6 3 5\r\n5 7 9 1 5\r\n4 9 10 2 2\r\n7 8 9 2 8\r\n0 6 2 0 1\r\n3 4 10 4 7\r\n2 10 1 0 0\r\n",
                "5 7 7 3 5 -1 7 0 4 2\r\n"
            ],
            [
                "nehyuvlxvv shfaxevruq 10\r\n3 8 1 0 0\r\n7 8 2 1 1\r\n1 1 10 2 4\r\n6 8 9 1 5\r\n0 6 3 1 2\r\n1 3 9 0 1\r\n2 3 9 7 8\r\n6 7 8 3 4\r\n3 8 7 0 1\r\n0 5 8 4 7\r\n",
                "3 7 -1 -1 4 1 -1 -1 7 4\r\n"
            ],
            [
                "xkbvkadjec gqjlhxpnsx 10\r\n2 7 1 0 0\r\n2 5 8 0 0\r\n4 7 8 0 4\r\n0 4 7 3 6\r\n5 5 9 3 7\r\n7 9 5 0 3\r\n6 8 6 4 4\r\n5 7 6 1 3\r\n0 3 7 3 5\r\n2 6 6 4 4\r\n",
                "3 -1 4 3 5 7 -1 7 3 4\r\n"
            ],
            [
                "abbbaabbabbabaabaaaa baa 10\r\n4 17 10 7 9\r\n4 16 10 0 6\r\n0 18 10 3 8\r\n5 7 10 2 9\r\n8 12 10 2 5\r\n2 8 10 3 7\r\n16 16 10 3 7\r\n14 19 10 2 4\r\n3 7 10 3 9\r\n12 15 10 0 6\r\n",
                "7 6 3 6 12 3 16 14 3 12\r\n"
            ],
            [
                "babaaabaaaaabbbbbaba aaa 10\r\n6 19 10 4 6\r\n2 15 10 0 5\r\n4 10 10 1 6\r\n2 15 10 0 9\r\n11 14 10 3 5\r\n1 9 10 2 6\r\n0 8 10 3 7\r\n13 17 10 3 5\r\n10 17 10 2 9\r\n11 18 10 1 9\r\n",
                "6 2 4 2 13 2 3 13 12 11\r\n"
            ]
        ]
    }
]