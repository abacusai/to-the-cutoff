[
    {
        "name": "Sereja and Contest",
        "description": "During the last Sereja's Codesecrof round the server crashed many times, so\nthe round was decided to be made unrated for some participants. Let's assume\nthat n people took part in the contest. Let's assume that the participant who\ngot the first place has rating a1, the second place participant has rating a2,\n..., the n-th place participant has rating an. Then changing the rating on the\nCodesecrof site is calculated by the formula . After the round was over, the\nCodesecrof management published the participants' results table. They decided\nthat if for a participant di < k, then the round can be considered unrated for\nhim. But imagine the management's surprise when they found out that the\nparticipants' rating table is dynamic. In other words, when some participant\nis removed from the rating, he is removed from the results' table and the\nrating is recalculated according to the new table. And of course, all\napplications for exclusion from the rating are considered in view of the\ncurrent table. We know that among all the applications for exclusion from the\nrating the first application to consider is from the participant with the best\nrank (the rank with the minimum number), for who di < k. We also know that the\napplications for exclusion from rating were submitted by all participants. Now\nSereja wonders, what is the number of participants to be excluded from the\ncontest rating, and the numbers of the participants in the original table in\nthe order of their exclusion from the rating. Pay attention to the analysis of\nthe first test case for a better understanding of the statement. Input The\nfirst line contains two integers n, k (1 \u2264 n \u2264 2\u00b710^5, - 10^9 \u2264 k \u2264 0). The\nsecond line contains n space-separated integers a1, a2, ..., an (1 \u2264 ai \u2264\n10^9) \u2014 ratings of the participants in the initial table. Output Print the\nnumbers of participants in the order in which they were removed from the\ntable. Print the initial numbers of the participants, that is, the numbers\nthat the participants had in the initial table. Examples Input 5 0 5 3 4 1 2\nOutput 2 3 4 Input 10 -10 5 5 1 7 5 1 2 4 9 2 Output 2 4 5 7 8 9 Note Consider\nthe first test sample. Initially the sequence of the contest participants'\nratings equals [5, 3, 4, 1, 2]. You can use this sequence to calculate the\nsequence of rating changes: [0, -9, -13, 8, 14]. According to the problem\nstatement, the application of the participant who won the second place will be\nconsidered first. As soon as the second place winner is out from the ratings,\nthe participants' rating sequence will equal [5, 4, 1, 2]. By this sequence\nyou can count the new sequence of rating changes: [0, -8, 2, 6]. According to\nthe problem statement, the application of the participant who won the second\nplace will be considered. Initially this participant won third place. The new\nrating sequence equals [5, 1, 2], the new sequence of rating changes equals\n[0, -1, 1]. The second place participant's application is taken into\nconsideration, initially this participant won the fourth place. The new rating\nsequence equals [5, 2], the new sequence of rating changes equals [0, 0]. No\nmore applications will be considered. Thus, you should print 2, 3, 4.\n\n",
        "cf_contest_id": 314,
        "cf_index": "A",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 0\r\n5 3 4 1 2\r\n",
                "2\r\n3\r\n4\r\n"
            ],
            [
                "10 -10\r\n5 5 1 7 5 1 2 4 9 2\r\n",
                "2\r\n4\r\n5\r\n7\r\n8\r\n9\r\n"
            ]
        ],
        "private_cases": []
    }
]