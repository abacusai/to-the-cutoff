[
    {
        "name": "Maximum Subarray",
        "description": "You are given an array \n    a_1, a_2, \n    \u2026, a_n\n, consisting of \n    n\n\nintegers. You are also given two integers \n    k\n and \n    x\n. You have to\nperform the following operation exactly once: add \n    x\n to the elements on\nexactly \n    k\n distinct positions, and subtract \n    x\n from all the others.\nFor example, if \n    a = [2, -1, 2, 3]\n, \n    k = 1\n, \n    x = 2\n, and we have\npicked the first element, then after the operation the array \n    a = [4, -3, 0,\n    1]\n. Let \n    f(a)\n be the maximum possible sum of a subarray of \n    a\n.\nThe subarray of \n    a\n is a contiguous part of the array \n    a\n, i. e. the\narray \n    a_i, a_i + 1, \n    \u2026, a_j\n for some \n    1 \n    \u2264 i \n    \u2264 j \n    \u2264\n    n\n. An empty subarray should also be considered, it has sum \n    0\n. Let the\narray \n    a'\n be the array \n    a\n after applying the aforementioned\noperation. Apply the operation in such a way that \n    f(a')\n is the maximum\npossible, and print the maximum possible value of \n    f(a')\n. Input The first\nline contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the\nnumber of test cases. The first line of each test case contains three integers\n\n    n\n, \n    k\n and \n    x\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n; \n    0 \n    \u2264\n    k \n    \u2264\n    min(20, n)\n; \n    -10^9 \n    \u2264 x \n    \u2264 10^9\n). The second line\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    -10^9 \n    \u2264 a_i\n    \n    \u2264 10^9\n). The sum of \n    n\n over all test cases doesn't exceed \n    2\n    \n    \u00b7 10^5\n. Output For each test case, print one integer \u2014 the maximum\npossible value of \n    f(a')\n. Example Input 4 4 1 2 2 -1 2 3 2 2 3 -1 2 3 0 5\n3 2 4 6 2 -8 4 -1 9 -3 7 -8 Output 5 7 0 44\n\n",
        "cf_contest_id": 1796,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n4 1 2\r\n2 -1 2 3\r\n2 2 3\r\n-1 2\r\n3 0 5\r\n3 2 4\r\n6 2 -8\r\n4 -1 9 -3 7 -8\r\n",
                "5\r\n7\r\n0\r\n44\r\n"
            ]
        ],
        "private_cases": []
    }
]