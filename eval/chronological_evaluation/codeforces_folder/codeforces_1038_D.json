[
    {
        "name": "Slime",
        "description": "There are \n    n\n slimes in a row. Each slime has an integer value (possibly\nnegative or zero) associated with it. Any slime can eat its adjacent slime\n(the closest slime to its left or to its right, assuming that this slime\nexists). When a slime with a value \n    x\n eats a slime with a value \n    y\n,\nthe eaten slime disappears, and the value of the remaining slime changes to\n\n    x - y\n. The slimes will eat each other until there is only one slime\nleft. Find the maximum possible value of the last slime. Input The first line\nof the input contains an integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 500\n     000\n)\ndenoting the number of slimes. The next line contains \n    n\n integers\n\n    a_i\n (\n    -10^9 \n    \u2264 a_i \n    \u2264 10^9\n), where \n    a_i\n is the value of\n\n    i\n-th slime. Output Print an only integer \u2014 the maximum possible value of\nthe last slime. Examples Input 4 2 1 2 1 Output 4 Input 5 0 -1 -1 -1 -1 Output\n4 Note In the first example, a possible way of getting the last slime with\nvalue \n    4\n is: Second slime eats the third slime, the row now contains\nslimes \n    2, -1, 1\n Second slime eats the third slime, the row now contains\nslimes \n    2, -2\n First slime eats the second slime, the row now contains\n\n    4\n In the second example, the first slime can keep eating slimes to its\nright to end up with a value of \n    4\n.\n\n",
        "cf_contest_id": 1038,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2 1 2 1\r\n",
                "4\n"
            ],
            [
                "5\r\n0 -1 -1 -1 -1\r\n",
                "4\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n10 8\r\n",
                "2\n"
            ],
            [
                "5\r\n-14 -2 0 -19 -12\r\n",
                "47\n"
            ],
            [
                "6\r\n-15 2 -19 20 0 9\r\n",
                "65\n"
            ],
            [
                "3\r\n17 4 -1\r\n",
                "22\n"
            ],
            [
                "4\r\n20 3 -15 7\r\n",
                "45\n"
            ],
            [
                "1\r\n11\r\n",
                "11\n"
            ],
            [
                "1\r\n-10\r\n",
                "-10\n"
            ],
            [
                "7\r\n-8 9 0 -10 -20 -8 3\r\n",
                "58\n"
            ],
            [
                "9\r\n2 4 -4 15 1 11 15 -7 -20\r\n",
                "79\n"
            ],
            [
                "10\r\n-20 0 3 -5 -18 15 -3 -9 -7 9\r\n",
                "89\n"
            ],
            [
                "8\r\n-1 5 -19 4 -12 20 1 -12\r\n",
                "74\n"
            ],
            [
                "1\r\n-1000000000\r\n",
                "-1000000000\n"
            ],
            [
                "3\r\n-1 -2 -3\r\n",
                "4\n"
            ],
            [
                "3\r\n-1 -1 -1\r\n",
                "1\n"
            ],
            [
                "2\r\n-9 -3\r\n",
                "6\n"
            ],
            [
                "5\r\n-1 -1 -1 -1 -1\r\n",
                "3\n"
            ],
            [
                "2\r\n-1 -1\r\n",
                "0\n"
            ],
            [
                "5\r\n-7 -1 -1 -1 -1\r\n",
                "9\n"
            ],
            [
                "2\r\n-5 -5\r\n",
                "0\n"
            ],
            [
                "2\r\n-1 -2\r\n",
                "1\n"
            ],
            [
                "4\r\n-1 -1 -1 -1\r\n",
                "2\n"
            ],
            [
                "2\r\n-2 -2\r\n",
                "0\n"
            ],
            [
                "4\r\n-1 -2 -3 -4\r\n",
                "8\n"
            ],
            [
                "3\r\n-2 -4 -6\r\n",
                "8\n"
            ],
            [
                "2\r\n-10 -5\r\n",
                "5\n"
            ],
            [
                "2\r\n-2 -1\r\n",
                "1\n"
            ],
            [
                "2\r\n-2 -4\r\n",
                "2\n"
            ],
            [
                "2\r\n1 2\r\n",
                "1\n"
            ],
            [
                "2\r\n-4 -5\r\n",
                "1\n"
            ],
            [
                "2\r\n-2 -3\r\n",
                "1\n"
            ],
            [
                "2\r\n-1 -5\r\n",
                "4\n"
            ],
            [
                "5\r\n-1 -2 -3 -2 -1\r\n",
                "7\n"
            ]
        ]
    }
]