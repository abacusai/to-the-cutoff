[
    {
        "name": "Demonstration",
        "description": "In the capital city of Berland, Bertown, demonstrations are against the recent\nelection of the King of Berland. Berland opposition, led by Mr. Ovalny,\nbelieves that the elections were not fair enough and wants to organize a\ndemonstration at one of the squares. Bertown has n squares, numbered from 1 to\nn, they are numbered in the order of increasing distance between them and the\ncity center. That is, square number 1 is central, and square number n is the\nfarthest from the center. Naturally, the opposition wants to hold a meeting as\nclose to the city center as possible (that is, they want an square with the\nminimum number). There are exactly k (k < n) days left before the\ndemonstration. Now all squares are free. But the Bertown city administration\nnever sleeps, and the approval of an application for the demonstration\nthreatens to become a very complex process. The process of approval lasts\nseveral days, but every day the following procedure takes place: The\nopposition shall apply to hold a demonstration at a free square (the one which\nisn't used by the administration). The administration tries to move the\ndemonstration to the worst free square left. To do this, the administration\norganizes some long-term activities on the square, which is specified in the\napplication of opposition. In other words, the administration starts using the\nsquare and it is no longer free. Then the administration proposes to move the\nopposition demonstration to the worst free square. If the opposition has\napplied for the worst free square then request is accepted and administration\ndoesn't spend money. If the administration does not have enough money to\norganize an event on the square in question, the opposition's application is\naccepted. If administration doesn't have enough money to organize activity,\nthen rest of administration's money spends and application is accepted If the\napplication is not accepted, then the opposition can agree to the\nadministration's proposal (that is, take the worst free square), or withdraw\nthe current application and submit another one the next day. If there are no\nmore days left before the meeting, the opposition has no choice but to agree\nto the proposal of City Hall. If application is accepted opposition can reject\nit. It means than opposition still can submit more applications later, but\nsquare remains free. In order to organize an event on the square i, the\nadministration needs to spend ai bourles. Because of the crisis the\nadministration has only b bourles to confront the opposition. What is the best\nsquare that the opposition can take, if the administration will keep trying to\noccupy the square in question each time? Note that the administration's\nactions always depend only on the actions of the opposition. Input The first\nline contains two integers n and k \u2014 the number of squares and days left\nbefore the meeting, correspondingly (1 \u2264 k < n \u2264 10^5). The second line\ncontains a single integer b \u2014 the number of bourles the administration has (1\n\u2264 b \u2264 10^18). The third line contains n space-separated integers ai \u2014 the sum\nof money, needed to organise an event on square i (1 \u2264 ai \u2264 10^9). Please, do\nnot use the \npreferred to use the cin, cout streams or the \nsingle number \u2014 the minimum number of the square where the opposition can\norganize the demonstration. Examples Input 5 2 8 2 4 5 3 1 Output 2 Input 5 2\n8 3 2 4 1 5 Output 5 Input 5 4 1000000000000000 5 4 3 2 1 Output 5 Note In the\nfirst sample the opposition can act like this. On day one it applies for\nsquare 3. The administration has to organize an event there and end up with 3\nbourles. If on the second day the opposition applies for square 2, the\nadministration won't have the money to intervene. In the second sample the\nopposition has only the chance for the last square. If its first move occupies\none of the first four squares, the administration is left with at least 4\nbourles, which means that next day it can use its next move to move the\nopposition from any square to the last one. In the third sample administration\nhas a lot of money, so opposition can occupy only last square.\n\n",
        "cf_contest_id": 191,
        "cf_index": "B",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 2\r\n8\r\n2 4 5 3 1\r\n",
                "2\r\n"
            ],
            [
                "5 2\r\n8\r\n3 2 4 1 5\r\n",
                "5\r\n"
            ],
            [
                "5 4\r\n1000000000000000\r\n5 4 3 2 1\r\n",
                "5\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 1\r\n55\r\n45 55 61 64 95 95 98 96 65 81\r\n",
                "3\r\n"
            ],
            [
                "10 6\r\n462\r\n33 98 95 82 91 63 61 51 68 94\r\n",
                "1\r\n"
            ],
            [
                "10 4\r\n38080\r\n15 3005 4725 1952 8761 8797 9712 9752 9858 9128\r\n",
                "5\r\n"
            ],
            [
                "10 9\r\n46660\r\n724 2304 7793 7049 7847 5593 4685 7971 2701 5643\r\n",
                "1\r\n"
            ],
            [
                "10 1\r\n290\r\n225 78 199 283 168 287 442 990 833 465\r\n",
                "7\r\n"
            ],
            [
                "10 1\r\n297\r\n215 281 102 280 243 225 294 296 7383 2623\r\n",
                "9\r\n"
            ],
            [
                "10 2\r\n192\r\n5 17 85 100 98 93 99 99 90 93\r\n",
                "4\r\n"
            ],
            [
                "10 2\r\n1523\r\n661 230 363 300 28 72 676 741 837 984\r\n",
                "8\r\n"
            ],
            [
                "10 2\r\n16658\r\n5957 5343 3495 7042 9622 7999 7503 9560 7661 8345\r\n",
                "4\r\n"
            ],
            [
                "10 3\r\n160\r\n23 11 11 18 3 26 31 81 53 79\r\n",
                "7\r\n"
            ],
            [
                "10 3\r\n1791\r\n168 140 21 1 64 222 577 665 911 479\r\n",
                "6\r\n"
            ],
            [
                "10 3\r\n16915\r\n437 1210 634 1320 5344 7913 7249 6798 7688 2030\r\n",
                "4\r\n"
            ],
            [
                "10 4\r\n300\r\n53 17 39 24 66 97 70 68 67 77\r\n",
                "5\r\n"
            ],
            [
                "10 4\r\n1834\r\n11 44 49 420 93 653 306 596 535 842\r\n",
                "4\r\n"
            ],
            [
                "10 5\r\n307\r\n2 3 93 45 88 8 39 26 71 96\r\n",
                "3\r\n"
            ],
            [
                "10 5\r\n3495\r\n361 539 81 67 479 594 641 932 787 810\r\n",
                "10\r\n"
            ],
            [
                "10 5\r\n32004\r\n2343 3657 286 4040 558 5509 6547 7213 8696 7885\r\n",
                "4\r\n"
            ],
            [
                "10 6\r\n3773\r\n295 266 340 728 664 763 623 349 662 697\r\n",
                "3\r\n"
            ],
            [
                "10 6\r\n59489\r\n5112 4734 9786 9997 9960 9801 9921 9863 9963 9889\r\n",
                "3\r\n"
            ],
            [
                "10 7\r\n621\r\n18 73 87 74 93 87 98 98 90 100\r\n",
                "2\r\n"
            ],
            [
                "10 7\r\n6704\r\n885 999 993 951 955 890 927 987 942 929\r\n",
                "1\r\n"
            ],
            [
                "10 7\r\n60174\r\n2528 2832 5927 8115 9631 9101 9932 9076 8392 8264\r\n",
                "10\r\n"
            ],
            [
                "10 8\r\n358\r\n10 15 20 36 30 73 55 86 39 18\r\n",
                "10\r\n"
            ],
            [
                "10 8\r\n6569\r\n328 712 854 844 712 919 804 931 789 732\r\n",
                "10\r\n"
            ],
            [
                "10 8\r\n47953\r\n811 8835 5410 4894 8801 2378 6377 9978 2847 9118\r\n",
                "2\r\n"
            ],
            [
                "10 9\r\n624\r\n47 56 60 51 88 82 77 83 89 100\r\n",
                "1\r\n"
            ],
            [
                "10 9\r\n4916\r\n258 290 341 342 756 963 758 530 674 665\r\n",
                "10\r\n"
            ],
            [
                "5 2\r\n11\r\n8 2 3 4 5\r\n",
                "1\r\n"
            ]
        ]
    }
]