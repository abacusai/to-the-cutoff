[
    {
        "name": "Opening Portals",
        "description": "Pavel plays a famous computer game. A player is responsible for a whole\ncountry and he can travel there freely, complete quests and earn experience.\nThis country has n cities connected by m bidirectional roads of different\nlengths so that it is possible to get from any city to any other one. There\nare portals in k of these cities. At the beginning of the game all portals are\nclosed. When a player visits a portal city, the portal opens. Strange as it\nis, one can teleport from an open portal to an open one. The teleportation\ntakes no time and that enables the player to travel quickly between rather\nremote regions of the country. At the beginning of the game Pavel is in city\nnumber 1. He wants to open all portals as quickly as possible. How much time\nwill he need for that? Input The first line contains two space-separated\nintegers n and m (1 \u2264 n \u2264 10^5, 0 \u2264 m \u2264 10^5) that show how many cities and\nroads are in the game. Each of the next m lines contains the description of a\nroad as three space-separated integers xi, yi, wi (1 \u2264 xi, yi \u2264 n, xi \u2260 yi, 1\n\u2264 wi \u2264 10^9) \u2014 the numbers of the cities connected by the i-th road and the\ntime needed to go from one city to the other one by this road. Any two cities\nare connected by no more than one road. It is guaranteed that we can get from\nany city to any other one, moving along the roads of the country. The next\nline contains integer k (1 \u2264 k \u2264 n) \u2014 the number of portals. The next line\ncontains k space-separated integers p1, p2, ..., pk \u2014 numbers of the cities\nwith installed portals. Each city has no more than one portal. Output Print a\nsingle number \u2014 the minimum time a player needs to open all portals. Please,\ndo not use the \npreferred to use the cin, cout streams or the \n3 3 1 2 1 1 3 1 2 3 1 3 1 2 3 Output 2 Input 4 3 1 2 1 2 3 5 2 4 10 3 2 3 4\nOutput 16 Input 4 3 1 2 1000000000 2 3 1000000000 3 4 1000000000 4 1 2 3 4\nOutput 3000000000 Note In the second sample the player has to come to city 2,\nopen a portal there, then go to city 3, open a portal there, teleport back to\ncity 2 and finally finish the journey in city 4.\n\n",
        "cf_contest_id": 196,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "dsu",
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n1 2 1\r\n1 3 1\r\n2 3 1\r\n3\r\n1 2 3\r\n",
                "2"
            ],
            [
                "4 3\r\n1 2 1\r\n2 3 5\r\n2 4 10\r\n3\r\n2 3 4\r\n",
                "16"
            ],
            [
                "4 3\r\n1 2 1000000000\r\n2 3 1000000000\r\n3 4 1000000000\r\n4\r\n1 2 3 4\r\n",
                "3000000000"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n2 1 42\r\n2\r\n1 2\r\n",
                "42"
            ],
            [
                "3 3\r\n1 2 2\r\n1 3 1\r\n2 3 5\r\n3\r\n1 2 3\r\n",
                "3"
            ],
            [
                "6 8\r\n1 3 2\r\n1 4 1\r\n1 5 3\r\n1 6 4\r\n5 3 2\r\n6 4 7\r\n2 5 1\r\n2 6 9\r\n4\r\n4 2 3 1\r\n",
                "6"
            ],
            [
                "1 0\r\n1\r\n1\r\n",
                "0"
            ],
            [
                "7 6\r\n1 2 1\r\n2 3 1\r\n3 4 1\r\n4 5 1\r\n5 6 1\r\n4 7 100\r\n3\r\n1 6 7\r\n",
                "107"
            ],
            [
                "3 3\r\n1 2 2\r\n1 3 1\r\n2 3 5\r\n2\r\n2 3\r\n",
                "4"
            ],
            [
                "6 5\r\n1 2 10\r\n3 4 10\r\n5 6 10\r\n2 4 1\r\n4 6 1\r\n3\r\n1 3 5\r\n",
                "42"
            ],
            [
                "4 3\r\n4 1 10\r\n4 2 1\r\n4 3 1\r\n2\r\n2 3\r\n",
                "13"
            ],
            [
                "8 9\r\n1 2 7\r\n3 1 3\r\n8 1 8\r\n2 4 5\r\n5 2 4\r\n6 2 6\r\n3 4 6\r\n6 4 6\r\n7 6 10\r\n6\r\n7 2 5 6 3 1\r\n",
                "30"
            ],
            [
                "8 9\r\n2 1 9\r\n3 1 5\r\n1 6 6\r\n2 5 10\r\n4 3 9\r\n3 8 9\r\n8 4 6\r\n6 7 7\r\n6 8 7\r\n6\r\n5 6 2 7 4 1\r\n",
                "45"
            ],
            [
                "7 7\r\n2 1 9\r\n4 1 10\r\n5 1 2\r\n7 1 10\r\n3 2 7\r\n3 5 7\r\n4 6 6\r\n4\r\n4 3 2 5\r\n",
                "28"
            ],
            [
                "8 9\r\n2 1 8\r\n5 1 4\r\n1 8 3\r\n2 3 2\r\n2 4 2\r\n3 7 6\r\n8 3 7\r\n4 6 1\r\n6 7 10\r\n3\r\n6 7 1\r\n",
                "21"
            ],
            [
                "9 14\r\n2 1 6\r\n3 1 9\r\n1 6 2\r\n1 8 9\r\n3 2 5\r\n2 7 5\r\n9 2 7\r\n4 3 4\r\n7 3 10\r\n5 4 10\r\n7 5 10\r\n8 5 4\r\n9 6 8\r\n7 8 4\r\n6\r\n9 5 2 7 3 6\r\n",
                "35"
            ],
            [
                "9 8\r\n2 1 5\r\n3 1 6\r\n1 5 1\r\n8 1 4\r\n4 2 1\r\n6 5 8\r\n5 7 2\r\n9 7 4\r\n6\r\n2 8 3 7 9 1\r\n",
                "22"
            ],
            [
                "9 11\r\n1 2 6\r\n1 3 6\r\n4 1 8\r\n3 2 6\r\n2 5 1\r\n6 2 9\r\n2 9 2\r\n3 6 6\r\n8 3 10\r\n5 7 10\r\n9 6 1\r\n4\r\n6 5 7 4\r\n",
                "36"
            ],
            [
                "9 11\r\n1 2 1\r\n4 1 4\r\n2 3 7\r\n6 2 1\r\n3 5 8\r\n3 7 3\r\n3 9 4\r\n4 6 1\r\n4 9 9\r\n6 7 5\r\n8 6 7\r\n6\r\n8 5 6 2 1 7\r\n",
                "25"
            ],
            [
                "5 8\r\n2 1 7\r\n1 3 1\r\n1 5 2\r\n3 2 3\r\n2 5 10\r\n4 3 7\r\n5 3 3\r\n4 5 4\r\n3\r\n5 3 2\r\n",
                "7"
            ],
            [
                "5 8\r\n1 2 4\r\n1 5 2\r\n2 3 10\r\n4 2 7\r\n2 5 8\r\n4 3 7\r\n3 5 4\r\n4 5 4\r\n3\r\n5 2 4\r\n",
                "12"
            ],
            [
                "6 8\r\n2 1 6\r\n1 3 4\r\n1 4 5\r\n6 1 8\r\n2 5 8\r\n3 4 6\r\n6 3 10\r\n5 6 5\r\n3\r\n4 6 1\r\n",
                "13"
            ],
            [
                "4 6\r\n1 2 7\r\n3 1 10\r\n1 4 5\r\n3 2 3\r\n2 4 4\r\n4 3 9\r\n3\r\n1 2 3\r\n",
                "10"
            ]
        ]
    }
]