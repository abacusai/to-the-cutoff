[
    {
        "name": "New Year and Counting Cards",
        "description": "Your friend has n cards. You know that each card has a lowercase English\nletter on one side and a digit on the other. Currently, your friend has laid\nout the cards on a table so only one side of each card is visible. You would\nlike to know if the following statement is true for cards that your friend\nowns: \"If a card has a vowel on one side, then it has an even digit on the\nother side.\" More specifically, a vowel is one of 'a', 'e', 'i', 'o' or 'u',\nand even digit is one of '0', '2', '4', '6' or '8'. For example, if a card has\n'a' on one side, and '6' on the other side, then this statement is true for\nit. Also, the statement is true, for example, for a card with 'b' and '4', and\nfor a card with 'b' and '3' (since the letter is not a vowel). The statement\nis false, for example, for card with 'e' and '5'. You are interested if the\nstatement is true for all cards. In particular, if no card has a vowel, the\nstatement is true. To determine this, you can flip over some cards to reveal\nthe other side. You would like to know what is the minimum number of cards you\nneed to flip in the worst case in order to verify that the statement is true.\nInput The first and only line of input will contain a string s (1 \u2264 |s| \u2264 50),\ndenoting the sides of the cards that you can see on the table currently. Each\ncharacter of s is either a lowercase English letter or a digit. Output Print a\nsingle integer, the minimum number of cards you must turn over to verify your\nclaim. Examples Input ee Output 2 Input z Output 0 Input 0ay1 Output 2 Note In\nthe first sample, we must turn over both cards. Note that even though both\ncards have the same letter, they could possibly have different numbers on the\nother side. In the second sample, we don't need to turn over any cards. The\nstatement is vacuously true, since you know your friend has no cards with a\nvowel on them. In the third sample, we need to flip the second and fourth\ncards.\n\n",
        "cf_contest_id": 908,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "ee\r\n",
                "2\r\n"
            ],
            [
                "z\r\n",
                "0\r\n"
            ],
            [
                "0ay1\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "0abcdefghijklmnopqrstuvwxyz1234567896\r\n",
                "10\r\n"
            ],
            [
                "0a0a9e9e2i2i9o9o6u6u9z9z4x4x9b9b\r\n",
                "18\r\n"
            ],
            [
                "01234567890123456789012345678901234567890123456789\r\n",
                "25\r\n"
            ],
            [
                "qwertyuioplkjhgfdsazxcvbnmqwertyuioplkjhgfdsazxcvb\r\n",
                "10\r\n"
            ],
            [
                "cjw2dwmr10pku4yxohe0wglktd\r\n",
                "4\r\n"
            ],
            [
                "6z2tx805jie8cfybwtfqvmlveec3iak5z5u3lu62vbxyqht6\r\n",
                "13\r\n"
            ],
            [
                "kaq7jyialrfp4ilkni90eq8v3amcbygon7py0hb8z26fbl8ss1\r\n",
                "13\r\n"
            ],
            [
                "hpwn50zgbmct80k9rizjqg40nycgs0acwikjqt11nr6m61krfs\r\n",
                "8\r\n"
            ],
            [
                "l3rw91a4m25l8iytxyeuixsegzcbm4h41ornf3pixkrmwznrzc\r\n",
                "14\r\n"
            ],
            [
                "2222\r\n",
                "0\r\n"
            ],
            [
                "13579\r\n",
                "5\r\n"
            ],
            [
                "1\r\n",
                "1\r\n"
            ],
            [
                "0\r\n",
                "0\r\n"
            ],
            [
                "a\r\n",
                "1\r\n"
            ],
            [
                "y\r\n",
                "0\r\n"
            ],
            [
                "w\r\n",
                "0\r\n"
            ],
            [
                "oo\r\n",
                "2\r\n"
            ],
            [
                "oy\r\n",
                "1\r\n"
            ],
            [
                "yo\r\n",
                "1\r\n"
            ],
            [
                "yy\r\n",
                "0\r\n"
            ],
            [
                "a0\r\n",
                "1\r\n"
            ],
            [
                "a9\r\n",
                "2\r\n"
            ],
            [
                "y0\r\n",
                "0\r\n"
            ],
            [
                "y7\r\n",
                "1\r\n"
            ],
            [
                "0a\r\n",
                "1\r\n"
            ],
            [
                "3a\r\n",
                "2\r\n"
            ],
            [
                "06\r\n",
                "0\r\n"
            ],
            [
                "07\r\n",
                "1\r\n"
            ],
            [
                "70\r\n",
                "1\r\n"
            ],
            [
                "77\r\n",
                "2\r\n"
            ],
            [
                "13570\r\n",
                "4\r\n"
            ],
            [
                "0000000000011111\r\n",
                "5\r\n"
            ],
            [
                "1357\r\n",
                "4\r\n"
            ],
            [
                "uuuuuuuuuuuuuuuuuu\r\n",
                "18\r\n"
            ],
            [
                "gabieurat\r\n",
                "5\r\n"
            ]
        ]
    }
]