[
    {
        "name": "Arithmetic Progression",
        "description": "This is an interactive problem! An arithmetic progression or arithmetic\nsequence is a sequence of integers such that the subtraction of element with\nits previous element (\n    x_i - x_i - 1\n, where \n    i \n    \u2265 2\n) is\nconstant \u2014 such difference is called a common difference of the sequence. That\nis, an arithmetic progression is a sequence of form \n    x_i = x_1 + (i - 1)\n    d\n, where \n    d\n is a common difference of the sequence. There is a secret\nlist of \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n. It is guaranteed that\nall elements \n    a_1, a_2, \n    \u2026, a_n\n are between \n    0\n and \n    10^9\n,\ninclusive. This list is special: if sorted in increasing order, it will form\nan arithmetic progression with positive common difference (\n    d > 0\n). For\nexample, the list \n    [14, 24, 9, 19]\n satisfies this requirement, after\nsorting it makes a list \n    [9, 14, 19, 24]\n, which can be produced as \n    x_n\n    = 9 + 5 \n    \u00b7 (n - 1)\n. Also you are also given a device, which has a\nquite discharged battery, thus you can only use it to perform at most \n    60\n\nqueries of following two types: Given a value \n    i\n (\n    1 \n    \u2264 i \n    \u2264\n    n\n), the device will show the value of the \n    a_i\n. Given a value \n    x\n\n(\n    0 \n    \u2264 x \n    \u2264 10^9\n), the device will return \n    1\n if an element\nwith a value strictly greater than \n    x\n exists, and it will return \n    0\n\notherwise.Your can use this special device for at most \n    60\n queries. Could\nyou please find out the smallest element and the common difference of the\nsequence? That is, values \n    x_1\n and \n    d\n in the definition of the\narithmetic progression. Note that the array \n    a\n is not sorted. Interaction\nThe interaction starts with a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264\n    10^6\n), the size of the list of integers. Then you can make queries of two\ntypes: \"? i\" (\n    1 \n    \u2264 i \n    \u2264 n\n) \u2014 to get the value of \n    a_i\n. \"> x\"\n(\n    0 \n    \u2264 x \n    \u2264 10^9\n) \u2014 to check whether there exists an element\ngreater than \n    x\nAfter the query read its result \n    r\n as an integer. For\nthe first query type, the \n    r\n satisfies \n    0 \n    \u2264 r \n    \u2264 10^9\n. For\nthe second query type, the \n    r\n is either \n    0\n or \n    1\n. In case you\nmake more than \n    60\n queries or violated the number range in the queries,\nyou will get a \n    r = -1\n. If you terminate after receiving the -1, you will\nget the \"Wrong answer\" verdict. Otherwise you can get an arbitrary verdict\nbecause your solution will continue to read from a closed stream. When you\nfind out what the smallest element \n    x_1\n and common difference \n    d\n,\nprint \"! \n    x_1\n \n    d\n\" And quit after that. This query is not counted\ntowards the \n    60\n queries limit. After printing any query do not forget to\noutput end of line and flush the output. Otherwise you will get Idleness limit\nexceeded. To do this, use: fflush(stdout) or cout.flush() in C++;\nSystem.out.flush() in Java; flush(output) in Pascal; stdout.flush() in Python;\nsee documentation for other languages.Hacks For hack, use the following\nformat: The first line should contain an integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264\n    10^6\n) \u2014 the list's size. The second line contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the elements of the\nlist. Also, after the sorting the list must form an arithmetic progression\nwith positive common difference. Example Input 4 0 1 14 24 9 19 Output > 25 >\n15 ? 1 ? 2 ? 3 ? 4 ! 9 5 Note Note that the example interaction contains extra\nempty lines so that it's easier to read. The real interaction doesn't contain\nany empty lines and you shouldn't print any extra empty lines as well. The\nlist in the example test is \n    [14, 24, 9, 19]\n.\n\n",
        "cf_contest_id": 1114,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "interactive",
            "number theory",
            "probabilities"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n14 24 9 19\r\n",
                "60\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n4 13\r\n",
                "60\r\n"
            ],
            [
                "2\r\n0 1\r\n",
                "60\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "60\r\n"
            ],
            [
                "2\r\n999999999 1000000000\r\n",
                "60\r\n"
            ],
            [
                "2\r\n0 1000000000\r\n",
                "60\r\n"
            ],
            [
                "9\r\n655687732 584452006 299509102 441980554 726923458 157037650 228273376 370744828 513216280\r\n",
                "60\r\n"
            ],
            [
                "29\r\n910306312 714894425 643835557 874776878 519482538 448423670 768188576 928071029 572776689 697129708 750423859 857012161 626070840 839247444 892541595 501717821 803718010 732659142 608306123 483953104 537247255 821482727 661600274 679364991 590541406 466188387 945835746 555011972 785953293\r\n",
                "60\r\n"
            ]
        ]
    }
]