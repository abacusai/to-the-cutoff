[
    {
        "name": "Arithmetic Operations",
        "description": "You are given an array of integers \n    a_1, a_2, \n    \u2026, a_n\n. You can do\nthe following operation any number of times (possibly zero): Choose any index\n\n    i\n and set \n    a_i\n to any integer (positive, negative or \n    0\n). What\nis the minimum number of operations needed to turn \n    a\n into an arithmetic\nprogression? The array \n    a\n is an arithmetic progression if\n\n    a_i+1-a_i=a_i-a_i-1\n for any \n    2 \n    \u2264 i \n    \u2264 n-1\n. Input The\nfirst line contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n). The\nsecond line contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1\n    \n    \u2264 a_i \n    \u2264 10^5\n). Output Print a single integer: the minimum number\nof operations needed to turn \n    a\n into an arithmetic progression. Examples\nInput 9 3 2 7 8 6 9 5 4 1 Output 6 Input 14 19 2 15 8 9 14 17 13 4 14 4 11 15\n7 Output 10 Input 10 100000 1 60000 2 20000 4 8 16 32 64 Output 7 Input 4\n10000 20000 10000 1 Output 2 Note In the first test, you can get the array\n\n    a = [11, 10, 9, 8, 7, 6, 5, 4, 3]\n by performing \n    6\n operations: Set\n\n    a_3\n to \n    9\n: the array becomes \n    [3, 2, 9, 8, 6, 9, 5, 4, 1]\n; Set\n\n    a_2\n to \n    10\n: the array becomes \n    [3, 10, 9, 8, 6, 9, 5, 4, 1]\n;\nSet \n    a_6\n to \n    6\n: the array becomes \n    [3, 10, 9, 8, 6, 6, 5, 4,\n    1]\n; Set \n    a_9\n to \n    3\n: the array becomes \n    [3, 10, 9, 8, 6, 6, 5,\n    4, 3]\n; Set \n    a_5\n to \n    7\n: the array becomes \n    [3, 10, 9, 8, 7, 6,\n    5, 4, 3]\n; Set \n    a_1\n to \n    11\n: the array becomes \n    [11, 10, 9, 8, 7,\n    6, 5, 4, 3]\n. \n    a\n is an arithmetic progression: in fact,\n\n    a_i+1-a_i=a_i-a_i-1=-1\n for any \n    2 \n    \u2264 i \n    \u2264 n-1\n. There is\nno sequence of less than \n    6\n operations that makes \n    a\n an arithmetic\nprogression. In the second test, you can get the array \n    a = [-1, 2, 5, 8,\n    11, 14, 17, 20, 23, 26, 29, 32, 35, 38]\n by performing \n    10\n operations.\nIn the third test, you can get the array \n    a = [100000, 80000, 60000, 40000,\n    20000, 0, -20000, -40000, -60000, -80000]\n by performing \n    7\n operations.\n\n",
        "cf_contest_id": 1654,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "graphs",
            "math"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "9\r\n3 2 7 8 6 9 5 4 1\r\n",
                "6"
            ],
            [
                "14\r\n19 2 15 8 9 14 17 13 4 14 4 11 15 7\r\n",
                "10"
            ],
            [
                "10\r\n100000 1 60000 2 20000 4 8 16 32 64\r\n",
                "7"
            ],
            [
                "4\r\n10000 20000 10000 1\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "1\r\n36897\r\n",
                "0"
            ],
            [
                "2\r\n66375 67783\r\n",
                "0"
            ],
            [
                "5\r\n100000 1 60000 99997 20000\r\n",
                "2"
            ],
            [
                "4\r\n1 1 7 13\r\n",
                "1"
            ]
        ]
    }
]