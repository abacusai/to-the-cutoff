[
    {
        "name": "Tower Defense",
        "description": "Monocarp is playing a tower defense game. A level in the game can be\nrepresented as an OX axis, where each lattice point from \n    1\n to \n    n\n\ncontains a tower in it. The tower in the \n    i\n-th point has \n    c_i\n mana\ncapacity and \n    r_i\n mana regeneration rate. In the beginning, before the\n\n    0\n-th second, each tower has full mana. If, at the end of some second,\nthe \n    i\n-th tower has \n    x\n mana, then it becomes \n    \ud835\udc5a\ud835\udc56\ud835\udc5b(x +\n    r_i, c_i)\n mana for the next second. There are \n    q\n monsters spawning on\na level. The \n    j\n-th monster spawns at point \n    1\n at the beginning of\n\n    t_j\n-th second, and it has \n    h_j\n health. Every monster is moving\n\n    1\n point per second in the direction of increasing coordinate. When a\nmonster passes the tower, the tower deals \n    \ud835\udc5a\ud835\udc56\ud835\udc5b(H, M)\n damage to\nit, where \n    H\n is the current health of the monster and \n    M\n is the\ncurrent mana amount of the tower. This amount gets subtracted from both\nmonster's health and tower's mana. Unfortunately, sometimes some monsters can\npass all \n    n\n towers and remain alive. Monocarp wants to know what will be\nthe total health of the monsters after they pass all towers. Input The first\nline contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n)\n\u2014 the number of towers. The \n    i\n-th of the next \n    n\n lines contains two\nintegers \n    c_i\n and \n    r_i\n (\n    1 \n    \u2264 r_i \n    \u2264 c_i \n    \u2264 10^9\n) \u2014\nthe mana capacity and the mana regeneration rate of the \n    i\n-th tower. The\nnext line contains a single integer \n    q\n (\n    1 \n    \u2264 q \n    \u2264 2 \n    \u00b7\n    10^5\n) \u2014 the number of monsters. The \n    j\n-th of the next \n    q\n lines\ncontains two integers \n    t_j\n and \n    h_j\n (\n    0 \n    \u2264 t_j \n    \u2264 2 \n    \u00b7\n    10^5\n; \n    1 \n    \u2264 h_j \n    \u2264 10^12\n) \u2014 the time the \n    j\n-th monster\nspawns and its health. The monsters are listed in the increasing order of\ntheir spawn time, so \n    t_j < t_j+1\n for all \n    1 \n    \u2264 j \n    \u2264 q-1\n.\nOutput Print a single integer \u2014 the total health of all monsters after they\npass all towers. Examples Input 3 5 1 7 4 4 2 4 0 14 1 10 3 16 10 16 Output 4\nInput 5 2 1 4 1 5 4 7 5 8 3 9 1 21 2 18 3 14 4 24 5 8 6 25 7 19 8 24 9 24\nOutput 40\n\n",
        "cf_contest_id": 1651,
        "cf_index": "F",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "data structures"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n5 1\r\n7 4\r\n4 2\r\n4\r\n0 14\r\n1 10\r\n3 16\r\n10 16\r\n",
                "4\r\n"
            ],
            [
                "5\r\n2 1\r\n4 1\r\n5 4\r\n7 5\r\n8 3\r\n9\r\n1 21\r\n2 18\r\n3 14\r\n4 24\r\n5 8\r\n6 25\r\n7 19\r\n8 24\r\n9 24\r\n",
                "40\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n2 2\r\n8 4\r\n9 2\r\n3 3\r\n2 2\r\n8 7\r\n3 1\r\n5 5\r\n3 1\r\n4 4\r\n10\r\n0 22\r\n1 6\r\n3 27\r\n4 21\r\n5 86\r\n6 14\r\n7 35\r\n8 86\r\n9 46\r\n10 78\r\n",
                "169\r\n"
            ],
            [
                "20\r\n9 6\r\n5 2\r\n8 1\r\n9 2\r\n2 1\r\n5 2\r\n3 2\r\n2 2\r\n4 3\r\n3 3\r\n10 6\r\n2 2\r\n6 1\r\n4 3\r\n7 1\r\n8 2\r\n8 5\r\n3 1\r\n3 1\r\n9 1\r\n20\r\n0 316\r\n1 266\r\n2 51\r\n3 285\r\n4 148\r\n5 123\r\n6 198\r\n7 204\r\n9 333\r\n10 336\r\n11 375\r\n12 11\r\n13 165\r\n14 159\r\n15 381\r\n16 331\r\n17 190\r\n18 371\r\n19 339\r\n20 176\r\n",
                "3743\r\n"
            ]
        ]
    }
]