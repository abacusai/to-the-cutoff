[
    {
        "name": "Yet Another Tournament",
        "description": "You are participating in Yet Another Tournament. There are \n    n + 1\n\nparticipants: you and \n    n\n other opponents, numbered from \n    1\n to\n\n    n\n. Each two participants will play against each other exactly once. If\nthe opponent \n    i\n plays against the opponent \n    j\n, he wins if and only\nif \n    i > j\n. When the opponent \n    i\n plays against you, everything\nbecomes a little bit complicated. In order to get a win against opponent\n\n    i\n, you need to prepare for the match for at least \n    a_i\n minutes \u2014\notherwise, you lose to that opponent. You have \n    m\n minutes in total to\nprepare for matches, but you can prepare for only one match at one moment. In\nother words, if you want to win against opponents \n    p_1, p_2, \n    \u2026,\n    p_k\n, you need to spend \n    a_p_1 + a_p_2 + \n    \u2026 + a_p_k\n minutes\nfor preparation \u2014 and if this number is greater than \n    m\n, you cannot\nachieve a win against all of these opponents at the same time. The final place\nof each contestant is equal to the number of contestants with strictly more\nwins \n    +\n \n    1\n. For example, if \n    3\n contestants have \n    5\n wins\neach, \n    1\n contestant has \n    3\n wins and \n    2\n contestants have \n    1\n\nwin each, then the first \n    3\n participants will get the \n    1\n-st place,\nthe fourth one gets the \n    4\n-th place and two last ones get the \n    5\n-th\nplace. Calculate the minimum possible place (lower is better) you can achieve\nif you can't prepare for the matches more than \n    m\n minutes in total. Input\nThe first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n)\n\u2014 the number of test cases. The first line of each test case contains two\nintegers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 5 \n    \u00b7 10^5\n; \n    0 \n    \u2264\n    m \n    \u2264\n    \u2211\n    _i=1^na_i\n) \u2014 the number of your opponents and\nthe total time you have for preparation. The second line of each test case\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264\n    1000\n), where \n    a_i\n is the time you need to prepare in order to win\nagainst the \n    i\n-th opponent. It's guaranteed that the total sum of \n    n\n\nover all test cases doesn't exceed \n    5 \n    \u00b7 10^5\n. Output For each test\ncase, print the minimum possible place you can take if you can prepare for the\nmatches no more than \n    m\n minutes in total. Example Input 5 4 401 100 100\n200 1 3 2 1 2 3 5 0 1 1 1 1 1 4 0 0 1 1 1 4 4 1 2 2 1 Output 1 2 6 4 1 Note In\nthe first test case, you can prepare to all opponents, so you'll win \n    4\n\ngames and get the \n    1\n-st place, since all your opponents win no more than\n\n    3\n games. In the second test case, you can prepare against the second\nopponent and win. As a result, you'll have \n    1\n win, opponent \n    1\n \u2014\n\n    1\n win, opponent \n    2\n \u2014 \n    1\n win, opponent \n    3\n \u2014 \n    3\n wins.\nSo, opponent \n    3\n will take the \n    1\n-st place, and all other\nparticipants, including you, get the \n    2\n-nd place. In the third test case,\nyou have no time to prepare at all, so you'll lose all games. Since each\nopponent has at least \n    1\n win, you'll take the last place (place \n    6\n).\nIn the fourth test case, you have no time to prepare, but you can still win\nagainst the first opponent. As a result, opponent \n    1\n has no wins, you\nhave \n    1\n win and all others have at least \n    2\n wins. So your place is\n\n    4\n.\n\n",
        "cf_contest_id": 1783,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4 401\r\n100 100 200 1\r\n3 2\r\n1 2 3\r\n5 0\r\n1 1 1 1 1\r\n4 0\r\n0 1 1 1\r\n4 4\r\n1 2 2 1\r\n",
                "1\r\n2\r\n6\r\n4\r\n1\r\n"
            ]
        ],
        "private_cases": []
    }
]