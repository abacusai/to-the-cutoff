[
    {
        "name": "Forbidden Subsequence",
        "description": "You are given strings \n    S\n and \n    T\n, consisting of lowercase English\nletters. It is guaranteed that \n    T\n is a permutation of the string abc.\nFind string \n    S'\n, the lexicographically smallest permutation of \n    S\n\nsuch that \n    T\n is not a subsequence of \n    S'\n. String \n    a\n is a\npermutation of string \n    b\n if the number of occurrences of each distinct\ncharacter is the same in both strings. A string \n    a\n is a subsequence of a\nstring \n    b\n if \n    a\n can be obtained from \n    b\n by deletion of several\n(possibly, zero or all) elements. A string \n    a\n is lexicographically\nsmaller than a string \n    b\n if and only if one of the following holds:\n\n    a\n is a prefix of \n    b\n, but \n    a \n     b\n; in the first position\nwhere \n    a\n and \n    b\n differ, the string \n    a\n has a letter that appears\nearlier in the alphabet than the corresponding letter in \n    b\n. Input Each\ntest contains multiple test cases. The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. Description\nof the test cases follows. The first line of each test case contains a string\n\n    S\n (\n    1 \n    \u2264 |S| \n    \u2264 100\n), consisting of lowercase English\nletters. The second line of each test case contains a string \n    T\n that is a\npermutation of the string abc. (Hence, \n    |T| = 3\n). Note that there is no\nlimit on the sum of \n    |S|\n across all test cases. Output For each test\ncase, output a single string \n    S'\n, the lexicographically smallest\npermutation of \n    S\n such that \n    T\n is not a subsequence of \n    S'\n.\nExample Input 7 abacaba abc cccba acb dbsic bac abracadabra abc dddddddddddd\ncba bbc abc ac abc Output aaaacbb abccc bcdis aaaaacbbdrr dddddddddddd bbc ac\nNote In the first test case, both aaaabbc and aaaabcb are lexicographically\nsmaller than aaaacbb, but they contain abc as a subsequence. In the second\ntest case, abccc is the smallest permutation of cccba and does not contain acb\nas a subsequence. In the third test case, bcdis is the smallest permutation of\ndbsic and does not contain bac as a subsequence.\n\n",
        "cf_contest_id": 1617,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "sortings",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\nabacaba\r\nabc\r\ncccba\r\nacb\r\ndbsic\r\nbac\r\nabracadabra\r\nabc\r\ndddddddddddd\r\ncba\r\nbbc\r\nabc\r\nac\r\nabc\r\n",
                "aaaacbb\r\nabccc\r\nbcdis\r\naaaaacbbdrr\r\ndddddddddddd\r\nbbc\r\nac\r\n"
            ]
        ],
        "private_cases": []
    }
]