[
    {
        "name": "Bear and Three Musketeers",
        "description": "Do you know a story about the three musketeers? Anyway, you will learn about\nits origins now. Richelimakieu is a cardinal in the city of Bearis. He is\ntired of dealing with crime by himself. He needs three brave warriors to help\nhim to fight against bad guys. There are n warriors. Richelimakieu wants to\nchoose three of them to become musketeers but it's not that easy. The most\nimportant condition is that musketeers must know each other to cooperate\nefficiently. And they shouldn't be too well known because they could be\nbetrayed by old friends. For each musketeer his recognition is the number of\nwarriors he knows, excluding other two musketeers. Help Richelimakieu! Find if\nit is possible to choose three musketeers knowing each other, and what is\nminimum possible sum of their recognitions. Input The first line contains two\nspace-separated integers, n and m (3 \u2264 n \u2264 4000, 0 \u2264 m \u2264 4000) \u2014 respectively\nnumber of warriors and number of pairs of warriors knowing each other. i-th of\nthe following m lines contains two space-separated integers ai and bi (1 \u2264 ai,\nbi \u2264 n, ai \u2260 bi). Warriors ai and bi know each other. Each pair of warriors\nwill be listed at most once. Output If Richelimakieu can choose three\nmusketeers, print the minimum possible sum of their recognitions. Otherwise,\nprint \"-1\" (without the quotes). Examples Input 5 6 1 2 1 3 2 3 2 4 3 4 4 5\nOutput 2 Input 7 4 2 1 3 6 5 1 1 7 Output -1 Note In the first sample\nRichelimakieu should choose a triple 1, 2, 3. The first musketeer doesn't know\nanyone except other two musketeers so his recognition is 0. The second\nmusketeer has recognition 1 because he knows warrior number 4. The third\nmusketeer also has recognition 1 because he knows warrior 4. Sum of\nrecognitions is 0 + 1 + 1 = 2. The other possible triple is 2, 3, 4 but it has\ngreater sum of recognitions, equal to 1 + 1 + 1 = 3. In the second sample\nthere is no triple of warriors knowing each other.\n\n",
        "cf_contest_id": 574,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dfs and similar",
            "graphs",
            "hashing"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 6\r\n1 2\r\n1 3\r\n2 3\r\n2 4\r\n3 4\r\n4 5\r\n",
                "2\r\n"
            ],
            [
                "7 4\r\n2 1\r\n3 6\r\n5 1\r\n1 7\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 0\r\n",
                "-1\r\n"
            ],
            [
                "7 14\r\n3 6\r\n2 3\r\n5 2\r\n5 6\r\n7 5\r\n7 4\r\n6 2\r\n3 5\r\n7 1\r\n4 1\r\n6 1\r\n7 6\r\n6 4\r\n5 4\r\n",
                "5\r\n"
            ],
            [
                "15 15\r\n4 15\r\n12 1\r\n15 6\r\n11 6\r\n15 7\r\n6 8\r\n15 10\r\n6 12\r\n12 8\r\n15 8\r\n15 3\r\n11 9\r\n7 3\r\n6 4\r\n12 11\r\n",
                "4\r\n"
            ],
            [
                "12 66\r\n9 12\r\n1 4\r\n8 4\r\n5 3\r\n10 5\r\n12 2\r\n3 2\r\n2 7\r\n1 7\r\n3 7\r\n6 2\r\n4 2\r\n6 10\r\n8 10\r\n4 6\r\n8 5\r\n12 6\r\n11 9\r\n7 12\r\n5 4\r\n11 7\r\n9 4\r\n10 4\r\n6 3\r\n1 6\r\n9 7\r\n3 8\r\n6 11\r\n10 9\r\n3 11\r\n11 1\r\n5 12\r\n8 2\r\n2 1\r\n3 1\r\n12 4\r\n3 9\r\n10 12\r\n8 11\r\n7 10\r\n11 5\r\n9 5\r\n8 7\r\n11 4\r\n8 1\r\n2 11\r\n5 1\r\n3 4\r\n8 12\r\n9 2\r\n10 11\r\n9 1\r\n5 7\r\n10 3\r\n11 12\r\n7 4\r\n2 10\r\n12 3\r\n6 8\r\n7 6\r\n2 5\r\n1 10\r\n12 1\r\n9 6\r\n8 9\r\n6 5\r\n",
                "27\r\n"
            ],
            [
                "3 0\r\n",
                "-1\r\n"
            ],
            [
                "3 2\r\n2 3\r\n2 1\r\n",
                "-1\r\n"
            ],
            [
                "3 3\r\n3 1\r\n3 2\r\n2 1\r\n",
                "0\r\n"
            ],
            [
                "4 6\r\n3 4\r\n1 3\r\n4 1\r\n3 2\r\n2 1\r\n4 2\r\n",
                "3\r\n"
            ],
            [
                "8 10\r\n1 5\r\n4 1\r\n1 2\r\n2 8\r\n2 7\r\n6 3\r\n5 8\r\n3 5\r\n7 8\r\n1 6\r\n",
                "2\r\n"
            ],
            [
                "15 17\r\n1 3\r\n7 10\r\n7 9\r\n8 13\r\n6 15\r\n8 2\r\n13 6\r\n10 5\r\n15 3\r\n4 15\r\n4 6\r\n5 11\r\n13 9\r\n12 2\r\n11 14\r\n4 12\r\n14 1\r\n",
                "3\r\n"
            ],
            [
                "25 10\r\n19 11\r\n19 13\r\n13 11\r\n13 22\r\n19 23\r\n19 20\r\n13 17\r\n19 14\r\n13 15\r\n19 4\r\n",
                "7\r\n"
            ],
            [
                "987 50\r\n221 959\r\n221 553\r\n959 695\r\n553 959\r\n819 437\r\n371 295\r\n695 553\r\n959 347\r\n595 699\r\n652 628\r\n553 347\r\n868 589\r\n695 221\r\n282 714\r\n351 703\r\n104 665\r\n755 436\r\n556 511\r\n695 347\r\n221 347\r\n243 874\r\n695 847\r\n863 501\r\n583 145\r\n786 221\r\n38 286\r\n72 397\r\n808 658\r\n724 437\r\n911 548\r\n405 759\r\n681 316\r\n648 328\r\n327 199\r\n772 139\r\n932 609\r\n859 576\r\n915 507\r\n379 316\r\n381 348\r\n918 871\r\n261 450\r\n443 389\r\n549 246\r\n901 515\r\n930 923\r\n336 545\r\n179 225\r\n213 677\r\n458 204\r\n",
                "6\r\n"
            ],
            [
                "4000 0\r\n",
                "-1\r\n"
            ]
        ]
    }
]