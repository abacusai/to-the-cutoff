[
    {
        "name": "Select Three Sticks",
        "description": "You are given \n    n\n sticks with positive integral length \n    a_1, a_2,\n    \n    \u2026, a_n\n. You can perform the following operation any number of times\n(possibly zero): choose one stick, then either increase or decrease its length\nby \n    1\n. After each operation, all sticks should have positive lengths.\nWhat is the minimum number of operations that you have to perform such that it\nis possible to select three of the \n    n\n sticks and use them without\nbreaking to form an equilateral triangle? An equilateral triangle is a\ntriangle where all of its three sides have the same length. Input The first\nline of the input contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    100\n) \u2014 the number of test cases. The description of the test cases follows.\nThe first line of each test case contains a single integer \n    n\n (\n    3 \n    \u2264\n    n \n    \u2264 300\n) \u2014 the number of sticks. The second line of each test case\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^9\n) \u2014 the lengths of the sticks. It is guaranteed that the sum of \n    n\n\nover all test cases does not exceed \n    300\n. Output For each test case,\nprint one integer on a single line \u2014 the minimum number of operations to be\nmade. Example Input 4 3 1 2 3 4 7 3 7 3 5 3 4 2 1 1 8 3 1 4 1 5 9 2 6 Output 2\n4 1 1 Note In the first test case, you can increase the length of the first\nstick by \n    1\n, then decrease the length of the third stick by \n    1\n. In\ntotal, you perform \n    2\n operations, such that the three sticks form an\nequilateral triangle of side length \n    2\n. In the fourth test case, you can\ndecrease the length of the seventh stick by \n    1\n. An equilateral triangle\nof side length \n    1\n can be selected and formed by the second, fourth, and\nseventh sticks.\n\n",
        "cf_contest_id": 1734,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3\r\n1 2 3\r\n4\r\n7 3 7 3\r\n5\r\n3 4 2 1 1\r\n8\r\n3 1 4 1 5 9 2 6\r\n",
                "2\r\n4\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": []
    }
]