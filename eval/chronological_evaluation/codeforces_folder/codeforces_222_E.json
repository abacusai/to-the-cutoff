[
    {
        "name": "Decoding Genome",
        "description": "Recently a top secret mission to Mars has taken place. As a result, scientists\nmanaged to obtain some information about the Martian DNA. Now we know that any\nMartian DNA contains at most m different nucleotides, numbered from 1 to m.\nSpecial characteristics of the Martian DNA prevent some nucleotide pairs from\nfollowing consecutively in this chain. For example, if the nucleotide 1 and\nnucleotide 2 can not follow consecutively in the Martian DNA, then the chain\nof nucleotides [1, 2] is not a valid chain of Martian DNA, but the chain of\nnucleotides [2, 1] can be a valid chain (if there is no corresponding\nrestriction). The number of nucleotide pairs that can't follow in the DNA\nchain consecutively, is k. The needs of gene research required information\nabout the quantity of correct n-long chains of the Martian DNA. Your task is\nto write a program that will calculate this value. Input The first line\ncontains three space-separated integers n, m, k (1 \u2264 n \u2264 10^15, 1 \u2264 m \u2264 52, 0\n\u2264 k \u2264 m^2). Next k lines contain two characters each, without a space between\nthem, representing a forbidden nucleotide pair. The first character represents\nthe first nucleotide in the forbidden pair, the second character represents\nthe second nucleotide. The nucleotides with assigned numbers from 1 to 26 are\nrepresented by English alphabet letters from \"a\" to \"z\" (1 is an \"a\", 2 is a\n\"b\", ..., 26 is a \"z\"). Nucleotides with assigned numbers from 27 to 52 are\nrepresented by English alphabet letters from \"A\" to \"Z\" (27 is an \"A\", 28 is a\n\"B\", ..., 52 is a \"Z\"). It is guaranteed that each forbidden pair occurs at\nmost once in the input. It is guaranteed that nucleotide's numbers in all\nforbidden pairs cannot be more than m. Note that order is important in\nnucleotide pairs. Please, do not use the \n64-bit integers in \u0421++. It is preferred to use cin, cout streams or the \nspecifier. Output Print a single integer \u2014 the sought number modulo 1000000007\n(10^9 + 7). Examples Input 3 3 2 ab ba Output 17 Input 3 3 0 Output 27 Input 2\n1 1 aa Output 0 Note In the second test case all possible three-nucleotide\nDNAs are permitted. Each nucleotide can take one of three values, thus in\ntotal there are 27 distinct three nucleotide DNAs. In the third test sample we\ncannot make any DNA of two nucleotides \u2014 the only possible nucleotide \"a\"\ncannot occur two times consecutively.\n\n",
        "cf_contest_id": 222,
        "cf_index": "E",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "matrices"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3 2\r\nab\r\nba\r\n",
                "17\r\n"
            ],
            [
                "3 3 0\r\n",
                "27\r\n"
            ],
            [
                "2 1 1\r\naa\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 5 4\r\ncd\r\nce\r\ned\r\nee\r\n",
                "89\r\n"
            ],
            [
                "100 5 4\r\ncd\r\nce\r\ned\r\nee\r\n",
                "537303881\r\n"
            ],
            [
                "1 2 4\r\naa\r\nbb\r\nab\r\nba\r\n",
                "2\r\n"
            ],
            [
                "2 2 4\r\naa\r\nbb\r\nab\r\nba\r\n",
                "0\r\n"
            ],
            [
                "3 3 6\r\naa\r\nab\r\nac\r\nbb\r\nbc\r\ncc\r\n",
                "1\r\n"
            ],
            [
                "4 4 13\r\naa\r\nbc\r\nad\r\nac\r\nbb\r\nba\r\nda\r\ndb\r\ndd\r\ncc\r\nca\r\ncb\r\ncd\r\n",
                "1\r\n"
            ],
            [
                "2 3 7\r\naa\r\nac\r\nba\r\nbb\r\ncc\r\nca\r\ncb\r\n",
                "2\r\n"
            ],
            [
                "3 3 7\r\naa\r\nac\r\nba\r\nbb\r\ncc\r\nca\r\ncb\r\n",
                "1\r\n"
            ],
            [
                "4 3 7\r\naa\r\nac\r\nba\r\nbb\r\ncc\r\nca\r\ncb\r\n",
                "0\r\n"
            ],
            [
                "1 52 2\r\naA\r\nAa\r\n",
                "52\r\n"
            ],
            [
                "100000 52 0\r\n",
                "378241178\r\n"
            ],
            [
                "10000 52 10\r\nEN\r\nYJ\r\nKH\r\nGa\r\nQA\r\njY\r\nYf\r\nSt\r\nap\r\nDT\r\n",
                "671474539\r\n"
            ],
            [
                "1000000000000 2 0\r\n",
                "959366170\r\n"
            ],
            [
                "100 3 6\r\naa\r\nab\r\nac\r\nbb\r\nbc\r\ncc\r\n",
                "0\r\n"
            ],
            [
                "1000 10 20\r\naa\r\nbb\r\ncc\r\ndd\r\nee\r\nff\r\ngg\r\nhh\r\nii\r\njj\r\nab\r\nbc\r\ncd\r\nde\r\nef\r\nfg\r\ngh\r\nhi\r\nij\r\nja\r\n",
                "207125595\r\n"
            ],
            [
                "5000 3 0\r\n",
                "22443616\r\n"
            ],
            [
                "5000 4 7\r\naa\r\nab\r\nac\r\nad\r\nba\r\nca\r\nda\r\n",
                "22443616\r\n"
            ],
            [
                "5000 4 6\r\nab\r\nac\r\nad\r\nba\r\nca\r\nda\r\n",
                "22443617\r\n"
            ],
            [
                "10000 5 4\r\nce\r\nee\r\ncd\r\ned\r\n",
                "386438816\r\n"
            ],
            [
                "50000 52 10\r\nAa\r\naA\r\nBy\r\ntS\r\nzA\r\nZu\r\nyy\r\nUU\r\nen\r\neq\r\n",
                "447275409\r\n"
            ],
            [
                "1000000000000 3 5\r\naa\r\nab\r\nac\r\nba\r\nca\r\n",
                "959366170\r\n"
            ],
            [
                "1000000000000 3 3\r\naa\r\nab\r\nac\r\n",
                "439049248\r\n"
            ],
            [
                "1000000000000 3 4\r\nab\r\nac\r\nba\r\nca\r\n",
                "959366171\r\n"
            ],
            [
                "1000000000000 4 9\r\naa\r\nab\r\nac\r\nad\r\nbb\r\nbc\r\nbd\r\ncc\r\ncd\r\n",
                "8\r\n"
            ],
            [
                "1000000000000000 52 0\r\n",
                "588668785\r\n"
            ],
            [
                "1000000000000000 52 26\r\naa\r\nbb\r\ncc\r\ndd\r\nee\r\nff\r\ngg\r\nhh\r\nii\r\njj\r\nkk\r\nll\r\nmm\r\nnn\r\noo\r\npp\r\nqq\r\nrr\r\nss\r\ntt\r\nuu\r\nvv\r\nww\r\nxx\r\nyy\r\nzz\r\n",
                "271910099\r\n"
            ],
            [
                "298470512649 26 20\r\nav\r\nsf\r\nqq\r\nyt\r\ncz\r\nkl\r\nqw\r\nwe\r\ner\r\nrt\r\nty\r\nfg\r\nin\r\nxy\r\nbt\r\nmm\r\njm\r\ndp\r\nno\r\nuy\r\n",
                "399097981\r\n"
            ],
            [
                "10000000000 20 15\r\nhs\r\npm\r\ncd\r\ner\r\nht\r\nmk\r\nce\r\nad\r\nfe\r\nmj\r\npf\r\nlm\r\nmo\r\nkd\r\nde\r\n",
                "768931983\r\n"
            ],
            [
                "1000000000000000 26 2\r\nfj\r\nho\r\n",
                "688841650\r\n"
            ],
            [
                "1000000000000000 10 0\r\n",
                "478484352\r\n"
            ],
            [
                "1000000000000000 10 1\r\ncd\r\n",
                "82984398\r\n"
            ],
            [
                "1000000000000000 12 3\r\nce\r\ndg\r\nfb\r\n",
                "792123851\r\n"
            ]
        ]
    }
]