[
    {
        "name": "Down Below",
        "description": "In a certain video game, the player controls a hero characterized by a single\ninteger value: power. On the current level, the hero got into a system of\n\n    n\n caves numbered from \n    1\n to \n    n\n, and \n    m\n tunnels between\nthem. Each tunnel connects two distinct caves. Any two caves are connected\nwith at most one tunnel. Any cave can be reached from any other cave by moving\nvia tunnels. The hero starts the level in cave \n    1\n, and every other cave\ncontains a monster. The hero can move between caves via tunnels. If the hero\nleaves a cave and enters a tunnel, he must finish his movement and arrive at\nthe opposite end of the tunnel. The hero can use each tunnel to move in both\ndirections. However, the hero can not use the same tunnel twice in a row.\nFormally, if the hero has just moved from cave \n    i\n to cave \n    j\n via a\ntunnel, he can not head back to cave \n    i\n immediately after, but he can\nhead to any other cave connected to cave \n    j\n with a tunnel. It is known\nthat at least two tunnels come out of every cave, thus, the hero will never\nfind himself in a dead end even considering the above requirement. To pass the\nlevel, the hero must beat the monsters in all the caves. When the hero enters\na cave for the first time, he will have to fight the monster in it. The hero\ncan beat the monster in cave \n    i\n if and only if the hero's power is\nstrictly greater than \n    a_i\n. In case of beating the monster, the hero's\npower increases by \n    b_i\n. If the hero can't beat the monster he's\nfighting, the game ends and the player loses. After the hero beats the monster\nin cave \n    i\n, all subsequent visits to cave \n    i\n won't have any\nconsequences: the cave won't have any monsters, and the hero's power won't\nchange either. Find the smallest possible power the hero must start the level\nwith to be able to beat all the monsters and pass the level. Input Each test\ncontains multiple test cases. The first line contains the number of test cases\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n). Description of the test cases follows.\nThe first line of each test case contains two integers \n    n\n and \n    m\n\n(\n    3 \n    \u2264 n \n    \u2264 1000\n; \n    n \n    \u2264 m \n    \u2264 min(\n    n(n-1)/2,\n    2000)\n) \u2014 the number of caves and tunnels. The second line contains\n\n    n-1\n integers \n    a_2, a_3, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^9\n) \u2014 values the hero's power are compared to while fighting monsters in\ncaves \n    2, 3, \n    \u2026, n\n. The third line contains \n    n-1\n integers\n\n    b_2, b_3, \n    \u2026, b_n\n (\n    1 \n    \u2264 b_i \n    \u2264 10^9\n) \u2014 increases\napplied to the hero's power for beating monsters in caves \n    2, 3, \n    \u2026,\n    n\n. Each of the next \n    m\n lines contains two integers \n    u_i\n and\n\n    v_i\n (\n    1 \n    \u2264 u_i, v_i \n    \u2264 n\n; \n    u_i \n     v_i\n) \u2014 the numbers\nof caves connected with a tunnel. No two caves are connected with more than\none tunnel. Any cave can be reached from any other cave by moving via tunnels.\nAt least two tunnels come out of every cave. It is guaranteed that the sum of\n\n    n\n over all test cases does not exceed \n    1000\n, and the sum of \n    m\n\nover all test cases does not exceed \n    2000\n. Output For each test case\nprint a single integer \u2014 the smallest possible power the hero must start the\nlevel with to be able to beat all the monsters and pass the level. Example\nInput 3 4 4 11 22 13 8 7 5 1 2 2 3 3 4 4 1 4 4 11 22 13 5 7 8 1 2 2 3 3 4 4 1\n5 7 10 40 20 30 7 2 10 5 1 2 1 5 2 3 2 4 2 5 3 4 4 5 Output 15 15 19 Note In\nthe first test case, the hero can pass the level with initial power \n    15\n\nas follows: move from cave \n    1\n to cave \n    2\n: since \n    15 > 11\n, the\nhero beats the monster, and his power increases to \n    15 + 8 = 23\n; move\nfrom cave \n    2\n to cave \n    3\n: since \n    23 > 22\n, the hero beats the\nmonster, and his power increases to \n    23 + 7 = 30\n; move from cave \n    3\n\nto cave \n    4\n: since \n    30 > 13\n, the hero beats the monster, and his\npower increases to \n    30 + 5 = 35\n. In the second test case, the situation\nis similar except that the power increases for beating monsters in caves\n\n    2\n and \n    4\n are exchanged. The hero can follow a different route, \n    1\n    \n    \u2192 4 \n    \u2192 3 \n    \u2192 2\n, and pass the level with\ninitial power \n    15\n. In the third test case, the hero can pass the level\nwith initial power \n    19\n as follows: move from cave \n    1\n to cave\n\n    2\n: since \n    19 > 10\n, the hero beats the monster, and his power\nincreases to \n    19 + 7 = 26\n; move from cave \n    2\n to cave \n    4\n: since\n\n    26 > 20\n, the hero beats the monster, and his power increases to \n    26 +\n    10 = 36\n; move from cave \n    4\n to cave \n    5\n: since \n    36 > 30\n, the\nhero beats the monster, and his power increases to \n    36 + 5 = 41\n; move\nfrom cave \n    5\n to cave \n    2\n: there is no monster in this cave anymore,\nnothing happens; move from cave \n    2\n to cave \n    3\n: since \n    41 > 40\n,\nthe hero beats the monster, and his power increases to \n    41 + 2 = 43\n.\n\n",
        "cf_contest_id": 1558,
        "cf_index": "E",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "dfs and similar",
            "graphs",
            "greedy",
            "meet-in-the-middle",
            "shortest paths"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n4 4\r\n11 22 13\r\n8 7 5\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n4 4\r\n11 22 13\r\n5 7 8\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n5 7\r\n10 40 20 30\r\n7 2 10 5\r\n1 2\r\n1 5\r\n2 3\r\n2 4\r\n2 5\r\n3 4\r\n4 5\r\n",
                "15\r\n15\r\n19\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n3 3\r\n1 1\r\n1 1\r\n1 2\r\n2 3\r\n3 1\r\n10 12\r\n10 10 10 10 10 10 12345 10 10\r\n10 10 10 10 10 10 10 10 10\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n6 7\r\n7 4\r\n4 8\r\n8 1\r\n5 9\r\n9 10\r\n10 5\r\n",
                "2\r\n12266\r\n"
            ]
        ]
    }
]