[
    {
        "name": "Nanosoft",
        "description": "Warawreh created a great company called Nanosoft. The only thing that Warawreh\nstill has to do is to place a large picture containing its logo on top of the\ncompany's building. The logo of Nanosoft can be described as four squares of\nthe same size merged together into one large square. The top left square is\ncolored with red, the top right square is colored with green, the bottom left\nsquare is colored with yellow and the bottom right square is colored with\nblue. An Example of some correct logos: An Example of some incorrect logos:\nWarawreh went to Adhami's store in order to buy the needed picture. Although\nAdhami's store is very large he has only one picture that can be described as\na grid of \n    n\n rows and \n    m\n columns. The color of every cell in the\npicture will be green (the symbol 'G'), red (the symbol 'R'), yellow (the\nsymbol 'Y') or blue (the symbol 'B'). Adhami gave Warawreh \n    q\n options, in\nevery option he gave him a sub-rectangle from that picture and told him that\nhe can cut that sub-rectangle for him. To choose the best option, Warawreh\nneeds to know for every option the maximum area of sub-square inside the given\nsub-rectangle that can be a Nanosoft logo. If there are no such sub-squares,\nthe answer is \n    0\n. Warawreh couldn't find the best option himself so he\nasked you for help, can you help him? Input The first line of input contains\nthree integers \n    n\n, \n    m\n and \n    q\n \n    (1 \n    \u2264 n , m \n    \u2264 500, 1\n    \n    \u2264 q \n    \u2264 3 \n    \u00b7 10^5)\n \u2014 the number of row, the number columns\nand the number of options. For the next \n    n\n lines, every line will contain\n\n    m\n characters. In the \n    i\n-th line the \n    j\n-th character will\ncontain the color of the cell at the \n    i\n-th row and \n    j\n-th column of\nthe Adhami's picture. The color of every cell will be one of these:\n'G','Y','R','B'. For the next \n    q\n lines, the input will contain four\nintegers \n    r_1\n, \n    c_1\n, \n    r_2\n and \n    c_2\n \n    (1 \n    \u2264 r_1 \n    \u2264\n    r_2 \n    \u2264 n, 1 \n    \u2264 c_1 \n    \u2264 c_2 \n    \u2264 m)\n. In that option, Adhami\ngave to Warawreh a sub-rectangle of the picture with the upper-left corner in\nthe cell \n    (r_1, c_1)\n and with the bottom-right corner in the cell\n\n    (r_2, c_2)\n. Output For every option print the maximum area of sub-square\ninside the given sub-rectangle, which can be a NanoSoft Logo. If there are no\nsuch sub-squares, print \n    0\n. Examples Input 5 5 5 RRGGB RRGGY YYBBG YYBBR\nRBBRG 1 1 5 5 2 2 5 5 2 2 3 3 1 1 3 5 4 4 5 5 Output 16 4 4 4 0 Input 6 10 5\nRRRGGGRRGG RRRGGGRRGG RRRGGGYYBB YYYBBBYYBB YYYBBBRGRG YYYBBBYBYB 1 1 6 10 1 3\n3 10 2 2 6 6 1 7 6 10 2 1 5 10 Output 36 4 16 16 16 Input 8 8 8 RRRRGGGG\nRRRRGGGG RRRRGGGG RRRRGGGG YYYYBBBB YYYYBBBB YYYYBBBB YYYYBBBB 1 1 8 8 5 2 5 7\n3 1 8 6 2 3 5 8 1 2 6 8 2 1 5 5 2 1 7 7 6 5 7 5 Output 64 0 16 4 16 4 36 0\nNote Picture for the first test: The pictures from the left to the right\ncorresponds to the options. The border of the sub-rectangle in the option is\nmarked with black, the border of the sub-square with the maximal possible\nsize, that can be cut is marked with gray.\n\n",
        "cf_contest_id": 1301,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "dp",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5 5 5\r\nRRGGB\r\nRRGGY\r\nYYBBG\r\nYYBBR\r\nRBBRG\r\n1 1 5 5\r\n2 2 5 5\r\n2 2 3 3\r\n1 1 3 5\r\n4 4 5 5\r\n",
                "16\r\n4\r\n4\r\n4\r\n0\r\n"
            ],
            [
                "6 10 5\r\nRRRGGGRRGG\r\nRRRGGGRRGG\r\nRRRGGGYYBB\r\nYYYBBBYYBB\r\nYYYBBBRGRG\r\nYYYBBBYBYB\r\n1 1 6 10\r\n1 3 3 10\r\n2 2 6 6\r\n1 7 6 10\r\n2 1 5 10\r\n",
                "36\r\n4\r\n16\r\n16\r\n16\r\n"
            ],
            [
                "8 8 8\r\nRRRRGGGG\r\nRRRRGGGG\r\nRRRRGGGG\r\nRRRRGGGG\r\nYYYYBBBB\r\nYYYYBBBB\r\nYYYYBBBB\r\nYYYYBBBB\r\n1 1 8 8\r\n5 2 5 7\r\n3 1 8 6\r\n2 3 5 8\r\n1 2 6 8\r\n2 1 5 5\r\n2 1 7 7\r\n6 5 7 5\r\n",
                "64\r\n0\r\n16\r\n4\r\n16\r\n4\r\n36\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\nR\r\n1 1 1 1\r\n",
                "0\r\n"
            ]
        ]
    }
]