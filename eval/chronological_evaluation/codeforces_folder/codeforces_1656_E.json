[
    {
        "name": "Equal Tree Sums",
        "description": "You are given an undirected unrooted tree, i.e. a connected undirected graph\nwithout cycles. You must assign a nonzero integer weight to each vertex so\nthat the following is satisfied: if any vertex of the tree is removed, then\neach of the remaining connected components has the same sum of weights in its\nvertices. Input The input consists of multiple test cases. The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number\nof test cases. Description of the test cases follows. The first line of each\ntest case contains an integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the\nnumber of vertices of the tree. The next \n    n-1\n lines of each case contain\neach two integers \n    u, v\n (\n    1 \n    \u2264 u,v \n    \u2264 n\n) denoting that there\nis an edge between vertices \n    u\n and \n    v\n. It is guaranteed that the\ngiven edges form a tree. The sum of \n    n\n for all test cases is at most\n\n    10^5\n. Output For each test case, you must output one line with \n    n\n\nspace separated integers \n    a_1, a_2, \n    \u2026, a_n\n, where \n    a_i\n is the\nweight assigned to vertex \n    i\n. The weights must satisfy \n    -10^5 \n    \u2264\n    a_i \n    \u2264 10^5\n and \n    a_i \n    \u2260 0\n. It can be shown that there always\nexists a solution satisfying these constraints. If there are multiple possible\nsolutions, output any of them. Example Input 2 5 1 2 1 3 3 4 3 5 3 1 2 1 3\nOutput -3 5 1 2 2 1 1 1 Note In the first case, when removing vertex \n    1\n\nall remaining connected components have sum \n    5\n and when removing vertex\n\n    3\n all remaining connected components have sum \n    2\n. When removing\nother vertices, there is only one remaining connected component so all\nremaining connected components have the same sum.\n\n",
        "cf_contest_id": 1656,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar",
            "math",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n5\r\n1 2\r\n1 3\r\n3 4\r\n3 5\r\n3\r\n1 2\r\n1 3\r\n",
                "-2 1 3 -1 -1 \r\n-2 1 1 \r\n"
            ]
        ],
        "private_cases": []
    }
]