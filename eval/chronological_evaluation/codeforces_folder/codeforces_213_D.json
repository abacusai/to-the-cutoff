[
    {
        "name": "Stars",
        "description": "Furik loves painting stars. A star is a shape that results if we take a\nregular pentagon and paint all diagonals in it. Recently he decided to teach\nRubik to paint stars. After many years of training Rubik could paint stars\neasily. But now Furik decided to test Rubik and complicated the task. Rubik\nmust paint n stars, observing the following rules: all stars must be painted\nin a single move (i.e. it is forbidden to take the pen away from the paper);\nit is forbidden to paint the same segment of non-zero length more than once;\nthe stars can intersect only in their vertexes; the length of a side of the\nregular pentagon, in which Rubik paints each star, must equal 10. Help Rubik\nto cope with this hard task. Input A single line contains an integer (1 \u2264 n \u2264\n100) \u2014 the number of stars to paint. Output On the first line print an integer\nm (1 \u2264 m \u2264 5\u00b7n). On the next m lines print coordinates of m distinct points\nwith accuracy of at least 9 and at most 100 digits after decimal point. All\ncoordinates should not exceed 5000 in their absolute value. On each of the\nnext n lines print 5 integers \u2014 the indexes of the points that form the given\nstar in the clockwise or counterclockwise order. On the next line print 5\u00b7n +\n1 integers \u2014 the numbers of points in the order, in which Rubik paints stars.\nThat is, if number with index i is ai, and number with index i + 1 is ai + 1,\nthen points with indexes ai and ai + 1 will have a segment painted between\nthem. You can consider all m printed points indexed from 1 to m in the order,\nin which they occur in the output. Separate the numbers on the lines with\nwhitespaces. Note that the answer has an imprecise validation. Try to obtain\nas accurate a solution as possible. The validator performs all calculations\nconsidering that the absolute error of a participant's answer is not more than\n10^-8. Examples Input 1 Output 5 3.830127018922193 3.366025403784439\n-3.601321235851749 10.057331467373021 0.466045194906253 19.192786043799030\n10.411264148588986 18.147501411122495 12.490381056766580 8.366025403784439 1 2\n3 4 5 1 3 5 2 4 1 Note The initial position of points in the sample is: The\norder in which Rubik can paint segments is:\n\n",
        "cf_contest_id": 213,
        "cf_index": "D",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "geometry"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n",
                "5\r\n0.000000000000000 0.000000000000000\r\n13.090169943749475 -9.510565162951535\r\n8.090169943749475 5.877852522924732\r\n3.090169943749475 -9.510565162951535\r\n16.180339887498949 0.000000000000000\r\n1 3 5 2 4\r\n1 2 3 4 5 1 "
            ]
        ],
        "private_cases": [
            [
                "2\r\n",
                "9\r\n0.000000000000000 0.000000000000000\r\n13.090169943749475 -9.510565162951535\r\n8.090169943749475 5.877852522924732\r\n3.090169943749475 -9.510565162951535\r\n16.180339887498949 0.000000000000000\r\n29.270509831248425 -9.510565162951535\r\n24.270509831248425 5.877852522924732\r\n19.270509831248425 -9.510565162951535\r\n32.360679774997898 0.000000000000000\r\n1 3 5 2 4\r\n5 7 9 6 8\r\n1 2 3 4 5 6 7 8 9 5 1 "
            ]
        ]
    }
]