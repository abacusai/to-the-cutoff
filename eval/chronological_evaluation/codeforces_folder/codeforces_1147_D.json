[
    {
        "name": "Palindrome XOR",
        "description": "You are given a string \n    s\n consisting of characters \"1\", \"0\", and \"?\". The\nfirst character of \n    s\n is guaranteed to be \"1\". Let \n    m\n be the number\nof characters in \n    s\n. Count the number of ways we can choose a pair of\nintegers \n    a, b\n that satisfies the following: \n    1 \n    \u2264 a < b < 2^m\n\nWhen written without leading zeros, the base-2 representations of \n    a\n and\n\n    b\n are both palindromes. The base-2 representation of bitwise XOR of\n\n    a\n and \n    b\n matches the pattern \n    s\n. We say that \n    t\n matches\n\n    s\n if the lengths of \n    t\n and \n    s\n are the same and for every\n\n    i\n, the \n    i\n-th character of \n    t\n is equal to the \n    i\n-th\ncharacter of \n    s\n, or the \n    i\n-th character of \n    s\n is \"?\". Compute\nthis count modulo \n    998244353\n. Input The first line contains a single\nstring \n    s\n (\n    1 \n    \u2264 |s| \n    \u2264 1\n     000\n). \n    s\n consists only of\ncharacters \"1\", \"0\" and \"?\". It is guaranteed that the first character of\n\n    s\n is a \"1\". Output Print a single integer, the count of pairs that\nsatisfy the conditions modulo \n    998244353\n. Examples Input 10110 Output 3\nInput 1?0???10 Output 44 Input 1????????????????????????????????????? Output\n519569202 Input 1 Output 0 Note For the first example, the pairs in base-2 are\n\n    (111, 10001), (11, 10101), (1001, 11111)\n.\n\n",
        "cf_contest_id": 1147,
        "cf_index": "D",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10110\r\n",
                "3"
            ],
            [
                "1?0???10\r\n",
                "44"
            ],
            [
                "1?????????????????????????????????????\r\n",
                "519569202"
            ],
            [
                "1\r\n",
                "0"
            ]
        ],
        "private_cases": [
            [
                "1?000??101?000000000000????0??000?111000001?01001?\r\n",
                "12608"
            ],
            [
                "11011?10110?1?110?1?0?01011?1?11???100?0?110?1????\r\n",
                "392640"
            ],
            [
                "1000?1?001100011000010??01001?1110010010?110?01100\r\n",
                "398"
            ],
            [
                "1001000100\r\n",
                "1"
            ],
            [
                "1?1????1???101111?1??11?????1?1???0????1?0?????????1??01???1?111?1??11????11??111???11?????1?01??0?1??01?1?01???1?0???01100??10???1?1????1?????0?11??1??1??1????101?????1??1??0???0??1??0?11?1?????1?010??1???1000????????1111??11110??0??0?????????1?10????1??0??1?1??1?1?????1?1??111???110?????????10?11??1??011??1??????11???01111??1?11?0??1?1???11???1???1?011?1?0??1?1????111?1???1?????0??1??0??1??0?????11?1??11???11??????????????1??111??1??1???11????1?1??111????1?11?1????111????1????????????0????11??\r\n",
                "615196029"
            ]
        ]
    }
]