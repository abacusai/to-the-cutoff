[
    {
        "name": "Boxers",
        "description": "There are \n    n\n boxers, the weight of the \n    i\n-th boxer is \n    a_i\n.\nEach of them can change the weight by no more than \n    1\n before the\ncompetition (the weight cannot become equal to zero, that is, it must remain\npositive). Weight is always an integer number. It is necessary to choose the\nlargest boxing team in terms of the number of people, that all the boxers'\nweights in the team are different (i.e. unique). Write a program that for\ngiven current values \u200b\n    a_i\n will find the maximum possible number of\nboxers in a team. It is possible that after some change the weight of some\nboxer is \n    150001\n (but no more). Input The first line contains an integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 150000\n) \u2014 the number of boxers. The next line\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n, where \n    a_i\n (\n    1\n    \n    \u2264 a_i \n    \u2264 150000\n) is the weight of the \n    i\n-th boxer. Output Print\na single integer \u2014 the maximum possible number of people in a team. Examples\nInput 4 3 2 4 1 Output 4 Input 6 1 1 1 4 4 4 Output 5 Note In the first\nexample, boxers should not change their weights \u2014 you can just make a team out\nof all of them. In the second example, one boxer with a weight of \n    1\n can\nbe increased by one (get the weight of \n    2\n), one boxer with a weight of\n\n    4\n can be reduced by one, and the other can be increased by one\n(resulting the boxers with a weight of \n    3\n and \n    5\n, respectively).\nThus, you can get a team consisting of boxers with weights of \n    5, 4, 3, 2,\n    1\n.\n\n",
        "cf_contest_id": 1203,
        "cf_index": "E",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3 2 4 1\r\n",
                "4\r\n"
            ],
            [
                "6\r\n1 1 1 4 4 4\r\n",
                "5\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n8 9 4 9 6 10 8 2 7 1\r\n",
                "10\r\n"
            ],
            [
                "7\r\n1 1 2 3 5 6 6\r\n",
                "7\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "10\r\n2 3 5 2 4 3 1 1 5 4\r\n",
                "6\r\n"
            ],
            [
                "8\r\n3 2 2 1 1 2 1 2\r\n",
                "4\r\n"
            ],
            [
                "5\r\n1 1 1 3 3\r\n",
                "4\r\n"
            ],
            [
                "6\r\n1 9 2 6 4 3\r\n",
                "6\r\n"
            ],
            [
                "10\r\n6 7 3 10 2 2 10 9 8 9\r\n",
                "10\r\n"
            ],
            [
                "10\r\n10 3 1 3 9 1 8 4 10 9\r\n",
                "10\r\n"
            ],
            [
                "10\r\n9 6 6 5 1 10 4 3 4 8\r\n",
                "10\r\n"
            ],
            [
                "111\r\n117 101 127 127 119 172 19 117 28 119 119 54 163 136 37 145 11 83 117 9 145 2 11 19 73 18 3 65 164 100 36 101 64 1 45 11 2 137 11 136 128 110 117 91 54 3 47 64 164 155 137 63 117 65 63 90 81 99 136 136 38 172 109 117 127 172 127 126 28 38 164 137 162 99 91 145 172 90 101 110 64 91 92 56 173 18 27 74 108 45 173 173 29 173 3 73 10 54 173 27 145 19 74 64 100 73 47 27 9 56 18\r\n",
                "83\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "2\r\n"
            ],
            [
                "2\r\n2 2\r\n",
                "2\r\n"
            ],
            [
                "10\r\n9 1 6 2 7 3 10 8 4 5\r\n",
                "10\r\n"
            ],
            [
                "9\r\n2 1 3 3 1 3 2 1 2\r\n",
                "4\r\n"
            ],
            [
                "5\r\n2 1 5 2 4\r\n",
                "5\r\n"
            ],
            [
                "8\r\n5 6 2 1 2 5 6 10\r\n",
                "8\r\n"
            ],
            [
                "125\r\n8 85 125 177 140 158 2 152 67 102 9 61 29 188 102 193 112 194 15 7 133 134 145 7 89 193 130 149 134 51 13 194 191 149 73 106 151 85 42 53 163 134 127 7 51 61 178 105 117 197 35 21 122 164 133 165 135 12 192 60 54 187 173 75 74 195 85 62 166 195 131 109 191 196 61 44 61 20 95 147 199 142 71 198 36 153 58 141 2 101 6 182 58 137 166 30 146 199 10 108 18 182 132 70 168 183 3 10 124 153 12 135 76 94 124 169 177 115 79 200 184 76 77 145 147\r\n",
                "118\r\n"
            ],
            [
                "116\r\n105 88 185 188 182 117 178 167 135 86 200 138 200 27 40 38 125 134 1 200 193 160 199 25 114 132 44 182 170 191 58 177 160 63 81 166 93 160 167 47 88 104 140 185 18 92 162 45 43 121 131 191 171 156 106 34 81 10 112 179 176 57 33 34 197 157 29 60 138 196 103 139 15 42 121 60 27 22 110 144 103 195 119 76 172 88 151 41 47 65 39 4 188 51 51 47 152 180 50 158 166 176 10 107 91 69 33 51 179 16 45 71 89 46 150 156\r\n",
                "115\r\n"
            ]
        ]
    }
]