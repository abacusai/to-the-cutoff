[
    {
        "name": "Not Shading",
        "description": "There is a grid with \n    n\n rows and \n    m\n columns. Some cells are colored\nblack, and the rest of the cells are colored white. In one operation, you can\nselect some black cell and do exactly one of the following: color all cells in\nits row black, or color all cells in its column black. You are given two\nintegers \n    r\n and \n    c\n. Find the minimum number of operations required\nto make the cell in row \n    r\n and column \n    c\n black, or determine that it\nis impossible. Input The input consists of multiple test cases. The first line\ncontains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test\ncases. The description of the test cases follows. The first line of each test\ncase contains four integers \n    n\n, \n    m\n, \n    r\n, and \n    c\n (\n    1\n    \n    \u2264 n, m \n    \u2264 50\n; \n    1 \n    \u2264 r \n    \u2264 n\n; \n    1 \n    \u2264 c \n    \u2264\n    m\n) \u2014 the number of rows and the number of columns in the grid, and the row\nand column of the cell you need to turn black, respectively. Then \n    n\n\nlines follow, each containing \n    m\n characters. Each of these characters is\neither 'B' or 'W' \u2014 a black and a white cell, respectively. Output For each\ntest case, if it is impossible to make the cell in row \n    r\n and column\n\n    c\n black, output \n    -1\n. Otherwise, output a single integer \u2014 the\nminimum number of operations required to make the cell in row \n    r\n and\ncolumn \n    c\n black. Example Input 9 3 5 1 4 WBWWW BBBWB WWBBB 4 3 2 1 BWW\nBBW WBB WWB 2 3 2 2 WWW WWW 2 2 1 1 WW WB 5 9 5 9 WWWWWWWWW WBWBWBBBW\nWBBBWWBWW WBWBWBBBW WWWWWWWWW 1 1 1 1 B 1 1 1 1 W 1 2 1 1 WB 2 1 1 1 W B\nOutput 1 0 -1 2 2 0 -1 1 1 Note The first test case is pictured below. We can\ntake the black cell in row \n    1\n and column \n    2\n, and make all cells in\nits row black. Therefore, the cell in row \n    1\n and column \n    4\n will\nbecome black. In the second test case, the cell in row \n    2\n and column\n\n    1\n is already black. In the third test case, it is impossible to make the\ncell in row \n    2\n and column \n    2\n black. The fourth test case is pictured\nbelow. We can take the black cell in row \n    2\n and column \n    2\n and make\nits column black. Then, we can take the black cell in row \n    1\n and column\n\n    2\n and make its row black. Therefore, the cell in row \n    1\n and column\n\n    1\n will become black.\n\n",
        "cf_contest_id": 1627,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9\r\n3 5 1 4\r\nWBWWW\r\nBBBWB\r\nWWBBB\r\n4 3 2 1\r\nBWW\r\nBBW\r\nWBB\r\nWWB\r\n2 3 2 2\r\nWWW\r\nWWW\r\n2 2 1 1\r\nWW\r\nWB\r\n5 9 5 9\r\nWWWWWWWWW\r\nWBWBWBBBW\r\nWBBBWWBWW\r\nWBWBWBBBW\r\nWWWWWWWWW\r\n1 1 1 1\r\nB\r\n1 1 1 1\r\nW\r\n1 2 1 1\r\nWB\r\n2 1 1 1\r\nW\r\nB\r\n",
                "1\r\n0\r\n-1\r\n2\r\n2\r\n0\r\n-1\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n4 4 1 4\r\nWWWW\r\nWWWW\r\nWBWW\r\nWWWW\r\n",
                "2\r\n"
            ],
            [
                "1\r\n3 3 1 1\r\nWWW\r\nWWW\r\nWWB\r\n",
                "2\r\n"
            ]
        ]
    }
]