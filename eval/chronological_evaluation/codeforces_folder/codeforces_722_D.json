[
    {
        "name": "Generating Sets",
        "description": "You are given a set Y of n distinct positive integers y1, y2, ..., yn. Set X\nof n distinct positive integers x1, x2, ..., xn is said to generate set Y if\none can transform X to Y by applying some number of the following two\noperation to integers in X: Take any integer xi and multiply it by two, i.e.\nreplace xi with 2\u00b7xi. Take any integer xi, multiply it by two and add one,\ni.e. replace xi with 2\u00b7xi + 1. Note that integers in X are not required to be\ndistinct after each operation. Two sets of distinct integers X and Y are equal\nif they are equal as sets. In other words, if we write elements of the sets in\nthe array in the increasing order, these arrays would be equal. Note, that any\nset of integers (or its permutation) generates itself. You are given a set Y\nand have to find a set X that generates Y and the maximum element of X is\nmininum possible. Input The first line of the input contains a single integer\nn (1 \u2264 n \u2264 50 000) \u2014 the number of elements in Y. The second line contains n\nintegers y1, ..., yn (1 \u2264 yi \u2264 10^9), that are guaranteed to be distinct.\nOutput Print n integers \u2014 set of distinct integers that generate Y and the\nmaximum element of which is minimum possible. If there are several such sets,\nprint any of them. Examples Input 5 1 2 3 4 5 Output 4 5 2 3 1 Input 6 15 14 3\n13 1 12 Output 12 13 14 7 3 1 Input 6 9 7 13 17 5 11 Output 4 5 2 6 3 1\n\n",
        "cf_contest_id": 722,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "greedy",
            "strings",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2 3 4 5\r\n",
                "1 2 3 4 5\r\n"
            ],
            [
                "6\r\n15 14 3 13 1 12\r\n",
                "1 3 7 12 13 14\r\n"
            ],
            [
                "6\r\n9 7 13 17 5 11\r\n",
                "1 2 3 4 5 6\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n18 14 19 17 11 7 20 10 4 12\r\n",
                "1 2 3 4 5 6 7 8 9 10\r\n"
            ],
            [
                "100\r\n713 716 230 416 3 2 597 216 779 839 13 156 723 793 168 368 232 316 98 257 170 27 746 9 616 147 792 890 796 362 852 117 993 556 885 73 131 475 121 753 508 158 473 931 527 282 541 325 606 321 159 17 682 290 586 685 529 11 645 224 821 53 152 966 269 754 672 523 386 347 719 525 92 315 832 393 893 83 956 725 258 851 112 38 601 782 324 210 642 818 56 485 679 10 922 469 36 990 14 742\r\n",
                "1 2 3 5 6 9 10 11 12 13 14 17 21 22 23 24 26 27 28 29 32 36 38 42 44 45 46 47 48 49 51 52 53 55 56 57 58 59 60 65 73 79 80 81 83 84 85 86 89 90 92 93 94 96 97 98 99 102 104 105 106 108 110 111 112 115 116 117 118 119 120 121 123 124 127 128 129 130 131 132 134 135 139 141 145 146 147 149 150 151 152 154 156 157 158 159 160 161 162 168\r\n"
            ],
            [
                "100\r\n41 173 40 30 165 155 92 180 193 24 187 189 65 4 200 80 152 174 20 81 170 72 104 8 13 7 117 176 191 34 90 46 17 188 63 134 76 60 116 42 183 45 1 103 15 119 142 70 148 136 73 68 86 94 32 190 112 166 141 78 6 102 66 97 93 106 47 22 132 129 139 177 62 105 100 77 88 54 3 167 120 145 197 195 64 11 38 2 28 140 87 109 185 23 31 153 39 18 57 122\r\n",
                "1 2 3 4 5 6 7 8 11 13 15 17 18 20 22 23 24 28 30 31 32 34 38 39 40 41 42 45 46 47 48 50 54 57 60 62 63 64 65 66 68 70 72 73 76 77 78 80 81 86 87 88 90 92 93 94 95 96 97 98 100 102 103 104 105 106 109 112 116 117 119 120 122 129 132 134 136 139 140 141 142 145 148 152 153 155 165 166 167 170 173 174 176 177 180 183 185 187 188 189\r\n"
            ],
            [
                "10\r\n10 1 6 7 9 8 4 3 5 2\r\n",
                "1 2 3 4 5 6 7 8 9 10\r\n"
            ],
            [
                "100\r\n70 54 10 72 81 84 56 15 27 19 43 100 49 44 52 33 63 40 95 17 58 2 51 39 22 18 82 1 16 99 32 29 24 94 9 98 5 37 47 14 42 73 41 31 79 64 12 6 53 26 68 67 89 13 90 4 21 93 46 74 75 88 66 57 23 7 25 48 92 62 30 8 50 61 38 87 71 34 97 28 80 11 60 91 3 35 86 96 36 20 59 65 83 45 76 77 78 69 85 55\r\n",
                "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n"
            ],
            [
                "1\r\n32\r\n",
                "1\r\n"
            ],
            [
                "30\r\n1000000000 500000000 250000000 125000000 62500000 31250000 15625000 7812500 3906250 1953125 976562 488281 244140 122070 61035 30517 15258 7629 3814 1907 953 476 238 119 59 29 14 7 3 1\r\n",
                "1 3 7 14 29 59 119 238 476 953 1907 3814 7629 15258 30517 61035 122070 244140 488281 976562 1953125 3906250 7812500 15625000 31250000 62500000 125000000 250000000 500000000 1000000000\r\n"
            ]
        ]
    }
]