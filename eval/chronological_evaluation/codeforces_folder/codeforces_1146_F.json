[
    {
        "name": "Leaf Partition",
        "description": "You are given a rooted tree with \n    n\n nodes, labeled from \n    1\n to\n\n    n\n. The tree is rooted at node \n    1\n. The parent of the \n    i\n-th node\nis \n    p_i\n. A leaf is node with no children. For a given set of leaves\n\n    L\n, let \n    f(L)\n denote the smallest connected subgraph that contains\nall leaves \n    L\n. You would like to partition the leaves such that for any\ntwo different sets \n    x, y\n of the partition, \n    f(x)\n and \n    f(y)\n are\ndisjoint. Count the number of ways to partition the leaves, modulo\n\n    998244353\n. Two ways are different if there are two leaves such that they\nare in the same set in one way but in different sets in the other. Input The\nfirst line contains an integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 200\n     000\n) \u2014\nthe number of nodes in the tree. The next line contains \n    n-1\n integers\n\n    p_2, p_3, \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i < i\n). Output Print a single\ninteger, the number of ways to partition the leaves, modulo \n    998244353\n.\nExamples Input 5 1 1 1 1 Output 12 Input 10 1 2 3 4 5 6 7 8 9 Output 1 Note In\nthe first example, the leaf nodes are \n    2,3,4,5\n. The ways to partition the\nleaves are in the following image In the second example, the only leaf is node\n\n    10\n so there is only one partition. Note that node \n    1\n is not a leaf.\n\n",
        "cf_contest_id": 1146,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 1 1 1\r\n",
                "12"
            ],
            [
                "10\r\n1 2 3 4 5 6 7 8 9\r\n",
                "1"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1\r\n",
                "1"
            ],
            [
                "111\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 24 26 27 27 29 30 31 31 32 33 35 36 37 38 38 39 41 42 43 42 45 44 47 48 48 49 48 51 52 54 55 54 55 58 59 60 59 62 60 64 62 65 67 66 68 69 70 72 69 74 73 76 77 78 79 78 80 72 82 83 85 86 87 88 89 88 91 92 92 92 93 93 96 98 98 99 95 101 100 103 105 104 107 108 107 107\r\n",
                "826147310"
            ],
            [
                "111\r\n1 1 1 1 1 1 2 2 1 3 1 1 2 1 2 1 2 3 1 1 6 2 1 1 4 2 3 3 2 1 1 1 1 2 3 2 1 2 1 3 1 4 6 1 3 9 4 2 2 1 1 2 1 5 4 2 2 1 1 1 13 9 3 7 3 1 4 1 1 2 4 10 2 8 2 3 1 2 18 1 3 16 1 10 9 6 28 5 3 1 9 3 10 2 1 5 6 2 9 8 3 6 3 1 4 1 10 3 2 6\r\n",
                "682865045"
            ]
        ]
    }
]