[
    {
        "name": "Two Teams",
        "description": "There are \n    n\n students standing in a row. Two coaches are forming two\nteams \u2014 the first coach chooses the first team and the second coach chooses\nthe second team. The \n    i\n-th student has integer programming skill\n\n    a_i\n. All programming skills are distinct and between \n    1\n and\n\n    n\n, inclusive. Firstly, the first coach will choose the student with\nmaximum programming skill among all students not taken into any team, and\n\n    k\n closest students to the left of him and \n    k\n closest students to\nthe right of him (if there are less than \n    k\n students to the left or to\nthe right, all of them will be chosen). All students that are chosen leave the\nrow and join the first team. Secondly, the second coach will make the same\nmove (but all students chosen by him join the second team). Then again the\nfirst coach will make such move, and so on. This repeats until the row becomes\nempty (i. e. the process ends when each student becomes to some team). Your\nproblem is to determine which students will be taken into the first team and\nwhich students will be taken into the second team. Input The first line of the\ninput contains two integers \n    n\n and \n    k\n (\n    1 \n    \u2264 k \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the number of students and the value determining the range\nof chosen students during each move, respectively. The second line of the\ninput contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 n\n), where \n    a_i\n is the programming skill of the \n    i\n-th\nstudent. It is guaranteed that all programming skills are distinct. Output\nPrint a string of \n    n\n characters; \n    i\n-th character should be 1 if\n\n    i\n-th student joins the first team, or 2 otherwise. Examples Input 5 2 2\n4 5 3 1 Output 11111 Input 5 1 2 1 3 5 4 Output 22111 Input 7 1 7 2 1 3 5 4 6\nOutput 1121122 Input 5 1 2 4 5 3 1 Output 21112 Note In the first example the\nfirst coach chooses the student on a position \n    3\n, and the row becomes\nempty (all students join the first team). In the second example the first\ncoach chooses the student on position \n    4\n, and the row becomes \n    [2,\n    1]\n (students with programming skills \n    [3, 4, 5]\n join the first team).\nThen the second coach chooses the student on position \n    1\n, and the row\nbecomes empty (and students with programming skills \n    [1, 2]\n join the\nsecond team). In the third example the first coach chooses the student on\nposition \n    1\n, and the row becomes \n    [1, 3, 5, 4, 6]\n (students with\nprogramming skills \n    [2, 7]\n join the first team). Then the second coach\nchooses the student on position \n    5\n, and the row becomes \n    [1, 3, 5]\n\n(students with programming skills \n    [4, 6]\n join the second team). Then the\nfirst coach chooses the student on position \n    3\n, and the row becomes\n\n    [1]\n (students with programming skills \n    [3, 5]\n join the first team).\nAnd then the second coach chooses the remaining student (and the student with\nprogramming skill \n    1\n joins the second team). In the fourth example the\nfirst coach chooses the student on position \n    3\n, and the row becomes\n\n    [2, 1]\n (students with programming skills \n    [3, 4, 5]\n join the first\nteam). Then the second coach chooses the student on position \n    1\n, and the\nrow becomes empty (and students with programming skills \n    [1, 2]\n join the\nsecond team).\n\n",
        "cf_contest_id": 1154,
        "cf_index": "E",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 2\r\n2 4 5 3 1\r\n",
                "11111"
            ],
            [
                "5 1\r\n2 1 3 5 4\r\n",
                "22111"
            ],
            [
                "7 1\r\n7 2 1 3 5 4 6\r\n",
                "1121122"
            ],
            [
                "5 1\r\n2 4 5 3 1\r\n",
                "21112"
            ]
        ],
        "private_cases": [
            [
                "100 1\r\n78 52 95 76 96 49 53 59 77 100 64 11 9 48 15 17 44 46 21 54 39 68 43 4 32 28 73 6 16 62 72 84 65 86 98 75 33 45 25 3 91 82 2 92 63 88 7 50 97 93 14 22 20 42 60 55 80 85 29 34 56 71 83 38 26 47 90 70 51 41 40 31 37 12 35 99 67 94 1 87 57 8 61 19 23 79 36 18 66 74 5 27 81 69 24 58 13 10 89 30\r\n",
                "1221112111122222112222221111111111111221112222222221111122211222122211111122211112222222222111222111"
            ],
            [
                "100 2\r\n62 70 29 14 12 87 94 78 39 92 84 91 61 49 60 33 69 37 19 82 42 8 45 97 81 43 54 67 1 22 77 58 65 17 18 28 25 57 16 90 40 13 4 21 68 35 15 76 73 93 56 95 79 47 74 75 30 71 66 99 41 24 88 83 5 6 31 96 38 80 27 46 51 53 2 86 32 9 20 100 26 36 63 7 52 55 23 3 50 59 48 89 85 44 34 64 10 72 11 98\r\n",
                "2222111112222211111112222211222221211111112221111222221112222211111111221222211111222222122222111111"
            ],
            [
                "100 3\r\n100 6 41 33 5 32 39 58 95 48 27 17 90 73 10 81 56 87 79 91 43 42 47 75 57 98 22 49 67 28 94 86 89 60 65 96 11 46 13 23 85 61 9 99 63 52 15 66 40 31 12 72 93 20 77 44 88 55 16 54 38 7 26 19 97 36 14 92 3 4 1 24 2 8 50 76 82 34 51 53 64 45 70 37 18 62 25 21 69 35 74 30 71 84 59 80 83 29 78 68\r\n",
                "1111222222222222111111111111111111111111222222211222222211111222222211222222222222222222111111111111"
            ],
            [
                "100 4\r\n80 78 96 22 39 21 74 48 61 16 55 32 27 52 34 51 98 4 72 47 42 46 28 90 43 33 44 99 91 11 29 85 92 19 58 73 65 12 87 97 54 59 75 15 9 63 24 67 71 84 36 6 60 94 82 89 70 95 31 5 10 3 37 49 45 18 83 53 64 17 100 1 81 86 88 38 20 40 66 77 50 7 30 69 14 13 79 35 23 68 57 25 8 93 41 62 56 2 76 26\r\n",
                "1111111221221111111112222222222222222222222222111111122222222212221111111111111111222222211111111122"
            ],
            [
                "100 5\r\n73 72 15 88 11 48 18 17 52 10 75 99 71 80 97 57 47 32 31 12 64 45 85 26 41 14 21 66 27 84 82 6 29 38 37 62 91 65 92 3 40 1 4 13 42 63 44 68 67 46 87 5 9 50 93 36 7 51 79 58 98 70 56 81 83 96 35 54 74 20 55 2 49 43 59 53 30 94 16 89 19 39 61 22 77 23 90 28 34 8 78 100 76 24 33 69 95 25 60 86\r\n",
                "1111112222222222211111111111222222222222222222111111111111111111111111112222222222222211111111111222"
            ],
            [
                "100 10\r\n19 55 91 50 31 23 60 84 38 1 22 51 27 76 28 98 11 44 61 63 15 93 52 3 66 16 53 36 18 62 35 85 78 37 73 64 87 74 46 26 82 69 49 33 83 89 56 67 71 25 39 94 96 17 21 6 47 68 34 42 57 81 13 10 54 2 48 80 20 77 4 5 59 30 90 95 45 75 8 88 24 41 40 14 97 32 7 9 65 70 100 99 72 58 92 29 79 12 86 43\r\n",
                "1111122222222222222222222211111111222222221111111111111111111112222222222222222211111111111111111111"
            ],
            [
                "100 20\r\n66 99 9 17 2 42 79 50 34 15 77 100 91 46 64 93 37 68 52 78 73 57 53 61 19 86 21 39 5 60 96 55 74 40 51 3 16 11 41 45 6 65 20 70 84 90 18 4 71 48 98 76 44 14 13 35 7 58 72 94 75 63 27 97 23 92 1 49 54 43 83 22 56 12 89 81 33 28 25 47 59 67 29 10 62 26 8 85 88 87 32 31 69 95 24 30 36 80 38 82\r\n",
                "1111111111111111111111111111111122222222222222222222222222222222222222222111111111111111111111111111"
            ],
            [
                "100 25\r\n81 45 55 5 13 10 42 44 18 4 6 72 89 78 3 100 73 91 47 33 99 93 98 2 11 92 49 69 8 21 43 41 46 36 40 7 87 14 76 62 29 58 38 56 19 24 35 61 53 1 77 79 80 67 15 28 94 51 64 96 57 95 63 30 54 71 22 68 59 97 27 32 85 52 88 90 65 60 17 12 20 86 26 39 37 48 16 83 66 34 70 9 74 75 84 82 50 25 23 31\r\n",
                "1111111111111111111111111111111111111111111122222222222222222222222222222222222222222222222222211111"
            ],
            [
                "100 50\r\n2 4 82 12 47 63 52 91 87 45 53 1 17 25 64 50 9 13 22 54 21 30 43 24 38 33 68 11 41 78 99 23 28 18 58 67 79 10 71 56 49 61 26 29 59 20 90 74 5 75 89 8 39 95 72 42 66 98 44 32 88 35 92 3 97 55 65 51 77 27 81 76 84 69 73 85 19 46 62 100 60 37 7 36 57 6 14 83 40 48 16 70 96 15 31 93 80 86 94 34\r\n",
                "2222222222222222222222222222211111111111111111111111111111111111111111111111111111111111111111111111"
            ],
            [
                "100 7\r\n43 82 34 4 37 23 1 58 13 55 24 93 92 90 41 80 87 65 39 89 19 42 56 20 27 61 53 26 72 36 59 86 75 68 31 46 54 57 67 8 2 28 48 63 95 79 30 78 25 49 52 7 29 81 5 14 11 96 98 99 35 97 76 17 38 83 62 71 69 91 60 84 15 16 64 32 74 51 70 40 22 77 3 18 66 45 33 85 100 88 47 12 94 21 50 9 6 73 44 10\r\n",
                "2222222222222222222222222221111111111111111111111111222222222222222111111111111111111111111111111112"
            ],
            [
                "100 7\r\n25 66 64 59 98 50 84 73 34 49 100 93 7 30 53 69 39 65 52 5 47 29 42 38 90 46 77 16 81 56 76 88 37 32 15 36 97 87 40 11 67 2 89 99 20 18 31 26 14 33 4 51 75 61 19 1 10 68 43 82 80 17 54 74 12 35 83 72 45 6 92 8 24 86 60 22 27 41 91 44 21 9 48 23 78 71 70 13 96 94 55 28 79 95 57 58 3 85 63 62\r\n",
                "1121111111111111112222222222222211112222222222222221111111111112222222222222221111111111111111111111"
            ],
            [
                "100 7\r\n20 27 16 53 17 24 18 43 44 46 6 97 93 52 51 29 8 50 31 94 81 61 4 25 35 12 36 99 57 86 79 11 5 23 28 92 59 82 48 26 78 67 38 62 63 73 15 45 88 87 95 56 9 39 1 96 66 19 76 40 42 69 41 34 30 89 7 83 37 14 84 54 13 80 65 71 47 32 70 100 85 64 60 21 75 2 91 90 3 77 49 33 68 98 74 22 58 10 55 72\r\n",
                "2222222222222222222222222222222222222222222111111111111111111111111111111111111111111111111111111111"
            ],
            [
                "100 7\r\n89 100 24 91 95 84 22 64 69 52 76 99 62 93 82 57 72 21 26 27 9 32 71 96 17 2 4 40 41 50 55 60 36 14 70 11 68 74 80 98 75 15 94 29 63 66 38 3 25 28 79 13 97 16 1 39 33 12 30 49 90 10 87 18 42 20 88 73 6 5 65 85 37 77 19 43 81 31 61 86 78 34 7 59 8 58 23 83 35 67 54 56 47 44 48 53 45 46 51 92\r\n",
                "1111111112222222222111111111112211111111111111122222222222221111111111111122222222222221111122222222"
            ],
            [
                "100 7\r\n26 5 48 33 80 43 2 21 75 40 54 53 37 34 93 14 11 13 77 57 19 27 65 89 69 84 22 97 3 52 9 28 73 78 31 1 86 76 39 20 49 64 29 8 63 62 12 7 38 17 60 46 35 47 51 95 41 4 92 68 25 67 44 85 36 10 94 83 56 32 100 90 82 24 45 59 71 6 61 16 23 55 87 74 98 66 96 50 42 15 18 30 58 91 99 81 70 88 72 79\r\n",
                "1111111222222222222222222222222222222111112222221111111111111111111111111111111111111112222222222222"
            ],
            [
                "1 1\r\n1\r\n",
                "1"
            ]
        ]
    }
]