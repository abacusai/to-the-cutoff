[
    {
        "name": "There Should Be a Lot of Maximums",
        "description": "You are given a tree (a connected graph without cycles). Each vertex of the\ntree contains an integer. Let's define the \n    MAD\n (maximum\ndouble) parameter of the tree as the maximum integer that occurs in the\nvertices of the tree at least \n    2\n times. If no number occurs in the tree\nmore than once, then we assume \n    MAD=0\n. Note that if you remove\nan edge from the tree, it splits into two trees. Let's compute the\n\n    MAD\n parameters of the two trees and take the maximum of the\ntwo values. Let the result be the value of the deleted edge. For each edge,\nfind its value. Note that we don't actually delete any edges from the tree,\nthe values are to be found independently. Input The first line contains one\ninteger \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of vertices in the\ntree. Each of the next \n    n - 1\n lines contains two integers \n    u\n and\n\n    v\n (\n    1 \n    \u2264 u, v \n    \u2264 n\n) \u2014 the ends of an edge of the tree. It's\nguaranteed that the given edges form a valid tree. The last line contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n)\n\u2014 the numbers in the vertices. Output For each edge in the input order, print\none number \u2014 the maximum of the \n    MAD\n parameters of the two\ntrees obtained after removing the given edge from the initial tree. Examples\nInput 5 1 2 2 3 2 4 1 5 2 1 3 2 1 Output 0 2 1 2 Input 6 1 2 1 3 1 4 4 5 4 6 1\n2 3 1 4 5 Output 1 1 0 1 1 Note In the first example, after removing edge\n\n    (1, 2)\n no number repeats \n    2\n times in any of the resulting subtrees,\nso the answer is \n    max(0, 0)=0\n. After removing edge \n    (2, 3)\n, in\nthe bigger subtree, \n    1\n is repeated twice, and \n    2\n is repeated twice,\nso the \n    MAD\n of this tree is \n    2\n. After removing edge\n\n    (2, 4)\n, in the bigger subtree, only the number \n    1\n is repeated, and\nin the second subtree, only one number appears, so the answer is \n    1\n. In\nthe second example, if edge \n    1 \n    \u2194 4\n is not removed, then\none of the subtrees will have two \n    1\n, so the answer \u2014 \n    1\n. And if\nedge \n    1 \n    \u2194 4\n is deleted, both subtrees have no repeating\nvalues, so the answer is \n    0\n.\n\n",
        "cf_contest_id": 1805,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "trees",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2\r\n2 3\r\n2 4\r\n1 5\r\n2 1 3 2 1\r\n",
                "0\r\n2\r\n1\r\n2\r\n"
            ],
            [
                "6\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n4 6\r\n1 2 3 1 4 5\r\n",
                "1\r\n1\r\n0\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n3 7\r\n7 10\r\n5 4\r\n3 5\r\n1 8\r\n1 2\r\n10 1\r\n1 9\r\n9 6\r\n236489300 200365820 62208266 88291406 79419180 188818855 236489300 106734314 77327798 65635781\r\n",
                "236489300\r\n0\r\n236489300\r\n236489300\r\n236489300\r\n236489300\r\n0\r\n236489300\r\n236489300\r\n"
            ],
            [
                "3\r\n3 2\r\n3 1\r\n268335345 309465430 309465430\r\n",
                "0\r\n309465430\r\n"
            ],
            [
                "5\r\n3 5\r\n4 2\r\n3 4\r\n2 1\r\n129391748 116531576 190572860 190572860 138997020\r\n",
                "190572860\r\n190572860\r\n0\r\n190572860\r\n"
            ],
            [
                "2\r\n1 2\r\n10 10\r\n",
                "0\r\n"
            ],
            [
                "7\r\n1 2\r\n2 3\r\n3 4\r\n4 6\r\n4 7\r\n1 5\r\n100 1 1 100 10 10 10\r\n",
                "10\r\n10\r\n10\r\n100\r\n100\r\n100\r\n"
            ],
            [
                "7\r\n1 2\r\n2 3\r\n3 4\r\n4 6\r\n1 5\r\n4 7\r\n100 1 1 100 10 10 10\r\n",
                "10\r\n10\r\n10\r\n100\r\n100\r\n100\r\n"
            ]
        ]
    }
]