[
    {
        "name": "Sereja and Prefixes",
        "description": "Sereja loves number sequences very much. That's why he decided to make himself\na new one following a certain algorithm. Sereja takes a blank piece of paper.\nThen he starts writing out the sequence in m stages. Each time he either adds\na new number to the end of the sequence or takes l first elements of the\ncurrent sequence and adds them c times to the end. More formally, if we\nrepresent the current sequence as a1, a2, ..., an, then after we apply the\ndescribed operation, the sequence transforms into a1, a2, ..., an[, a1, a2,\n..., al] (the block in the square brackets must be repeated c times). A day\nhas passed and Sereja has completed the sequence. He wonders what are the\nvalues of some of its elements. Help Sereja. Input The first line contains\ninteger m (1 \u2264 m \u2264 10^5) \u2014 the number of stages to build a sequence. Next m\nlines contain the description of the stages in the order they follow. The\nfirst number in the line is a type of stage (1 or 2). Type 1 means adding one\nnumber to the end of the sequence, in this case the line contains integer xi\n(1 \u2264 xi \u2264 10^5) \u2014 the number to add. Type 2 means copying a prefix of length\nli to the end ci times, in this case the line further contains two integers\nli, ci (1 \u2264 li \u2264 10^5, 1 \u2264 ci \u2264 10^4), li is the length of the prefix, ci is\nthe number of copyings. It is guaranteed that the length of prefix li is never\nlarger than the current length of the sequence. The next line contains integer\nn (1 \u2264 n \u2264 10^5) \u2014 the number of elements Sereja is interested in. The next\nline contains the numbers of elements of the final sequence Sereja is\ninterested in. The numbers are given in the strictly increasing order. It is\nguaranteed that all numbers are strictly larger than zero and do not exceed\nthe length of the resulting sequence. Consider the elements of the final\nsequence numbered starting from 1 from the beginning to the end of the\nsequence. Please, do not use the \nintegers in \u0421++. It is preferred to use the cin, cout streams or the \nspecifier. Output Print the elements that Sereja is interested in, in the\norder in which their numbers occur in the input. Examples Input 6 1 1 1 2 2 2\n1 1 3 2 5 2 1 4 16 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Output 1 2 1 2 3 1 2\n1 2 3 1 2 1 2 3 4\n\n",
        "cf_contest_id": 380,
        "cf_index": "A",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1 1\r\n1 2\r\n2 2 1\r\n1 3\r\n2 5 2\r\n1 4\r\n16\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\r\n",
                "1 2 1 2 3 1 2 1 2 3 1 2 1 2 3 4 "
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 33085\r\n1 44638\r\n2\r\n1 2\r\n",
                "33085 44638 "
            ],
            [
                "10\r\n1 57757\r\n1 45234\r\n1 80807\r\n1 38496\r\n1 27469\r\n1 42645\r\n1 72643\r\n1 33235\r\n1 10843\r\n1 80598\r\n10\r\n1 2 3 4 5 6 7 8 9 10\r\n",
                "57757 45234 80807 38496 27469 42645 72643 33235 10843 80598 "
            ],
            [
                "3\r\n1 97601\r\n1 32580\r\n1 70519\r\n3\r\n1 2 3\r\n",
                "97601 32580 70519 "
            ],
            [
                "7\r\n1 53989\r\n1 47249\r\n1 71935\r\n2 1 3\r\n1 84520\r\n1 84185\r\n2 6 1\r\n14\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\r\n",
                "53989 47249 71935 53989 53989 53989 84520 84185 53989 47249 71935 53989 53989 53989 "
            ],
            [
                "1\r\n1 1\r\n1\r\n1\r\n",
                "1 "
            ]
        ]
    }
]