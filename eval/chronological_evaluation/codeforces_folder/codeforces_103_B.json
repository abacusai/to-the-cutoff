[
    {
        "name": "Cthulhu",
        "description": "...Once upon a time a man came to the sea. The sea was stormy and dark. The\nman started to call for the little mermaid to appear but alas, he only woke up\nCthulhu... Whereas on the other end of the world Pentagon is actively\ncollecting information trying to predict the monster's behavior and preparing\nthe secret super weapon. Due to high seismic activity and poor weather\nconditions the satellites haven't yet been able to make clear shots of the\nmonster. The analysis of the first shot resulted in an undirected graph with n\nvertices and m edges. Now the world's best minds are about to determine\nwhether this graph can be regarded as Cthulhu or not. To add simplicity, let's\nsuppose that Cthulhu looks from the space like some spherical body with\ntentacles attached to it. Formally, we shall regard as Cthulhu such an\nundirected graph that can be represented as a set of three or more rooted\ntrees, whose roots are connected by a simple cycle. It is guaranteed that the\ngraph contains no multiple edges and self-loops. Input The first line contains\ntwo integers \u2014 the number of vertices n and the number of edges m of the graph\n(1 \u2264 n \u2264 100, 0 \u2264 m \u2264 ). Each of the following m lines contains a pair of\nintegers x and y, that show that an edge exists between vertices x and y (1 \u2264\nx, y \u2264 n, x \u2260 y). For each pair of vertices there will be at most one edge\nbetween them, no edge connects a vertex to itself. Output Print \"NO\", if the\ngraph is not Cthulhu and \"FHTAGN!\" if it is. Examples Input 6 6 6 3 6 4 5 1 2\n5 1 4 5 4 Output FHTAGN! Input 6 5 5 6 4 6 3 1 5 1 1 2 Output NO Note Let us\ndenote as a simple cycle a set of v vertices that can be numbered so that the\nedges will only exist between vertices number 1 and 2, 2 and 3, ..., v - 1 and\nv, v and 1. A tree is a connected undirected graph consisting of n vertices\nand n - 1 edges (n > 0). A rooted tree is a tree where one vertex is selected\nto be the root.\n\n",
        "cf_contest_id": 103,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 6\r\n6 3\r\n6 4\r\n5 1\r\n2 5\r\n1 4\r\n5 4\r\n",
                "FHTAGN!\r\n"
            ],
            [
                "6 5\r\n5 6\r\n4 6\r\n3 1\r\n5 1\r\n1 2\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 10\r\n4 10\r\n8 5\r\n2 8\r\n4 9\r\n9 3\r\n2 7\r\n10 6\r\n10 2\r\n9 8\r\n1 8\r\n",
                "FHTAGN!\r\n"
            ],
            [
                "5 4\r\n1 5\r\n1 3\r\n1 4\r\n3 2\r\n",
                "NO\r\n"
            ],
            [
                "12 12\r\n4 12\r\n4 7\r\n4 9\r\n7 2\r\n5 12\r\n2 1\r\n5 9\r\n8 6\r\n10 12\r\n2 5\r\n10 9\r\n12 3\r\n",
                "NO\r\n"
            ],
            [
                "12 15\r\n3 2\r\n11 12\r\n1 9\r\n2 1\r\n1 8\r\n9 6\r\n11 5\r\n9 5\r\n9 10\r\n11 3\r\n7 11\r\n5 6\r\n11 10\r\n4 6\r\n4 2\r\n",
                "NO\r\n"
            ],
            [
                "12 10\r\n1 11\r\n3 6\r\n5 7\r\n4 7\r\n6 8\r\n11 7\r\n3 12\r\n11 12\r\n7 9\r\n12 2\r\n",
                "NO\r\n"
            ],
            [
                "1 0\r\n",
                "NO\r\n"
            ],
            [
                "2 1\r\n1 2\r\n",
                "NO\r\n"
            ],
            [
                "3 1\r\n1 3\r\n",
                "NO\r\n"
            ],
            [
                "3 2\r\n1 2\r\n2 3\r\n",
                "NO\r\n"
            ],
            [
                "3 3\r\n1 2\r\n2 3\r\n3 1\r\n",
                "FHTAGN!\r\n"
            ],
            [
                "4 4\r\n1 2\r\n3 4\r\n4 1\r\n2 4\r\n",
                "FHTAGN!\r\n"
            ],
            [
                "6 6\r\n1 2\r\n2 3\r\n3 1\r\n4 5\r\n5 6\r\n6 4\r\n",
                "NO\r\n"
            ],
            [
                "2 0\r\n",
                "NO\r\n"
            ],
            [
                "3 0\r\n",
                "NO\r\n"
            ],
            [
                "100 0\r\n",
                "NO\r\n"
            ],
            [
                "100 1\r\n11 23\r\n",
                "NO\r\n"
            ],
            [
                "10 10\r\n5 7\r\n8 1\r\n10 3\r\n6 4\r\n10 6\r\n5 3\r\n5 6\r\n2 6\r\n4 3\r\n2 10\r\n",
                "NO\r\n"
            ],
            [
                "20 20\r\n9 10\r\n4 19\r\n9 20\r\n12 20\r\n1 15\r\n2 12\r\n19 10\r\n19 15\r\n4 10\r\n4 8\r\n8 9\r\n20 8\r\n6 2\r\n2 15\r\n7 19\r\n20 4\r\n3 16\r\n1 20\r\n9 1\r\n20 10\r\n",
                "NO\r\n"
            ],
            [
                "30 30\r\n17 6\r\n16 29\r\n16 13\r\n16 20\r\n29 26\r\n17 5\r\n27 28\r\n24 16\r\n7 18\r\n24 10\r\n1 27\r\n12 17\r\n27 30\r\n6 1\r\n3 30\r\n5 19\r\n18 13\r\n16 2\r\n30 1\r\n5 8\r\n14 16\r\n26 18\r\n7 19\r\n5 6\r\n23 14\r\n6 8\r\n23 8\r\n18 8\r\n18 3\r\n5 21\r\n",
                "NO\r\n"
            ],
            [
                "100 66\r\n41 14\r\n19 13\r\n70 43\r\n79 62\r\n9 62\r\n71 40\r\n53 86\r\n80 4\r\n34 33\r\n72 68\r\n40 96\r\n84 59\r\n36 77\r\n55 50\r\n40 3\r\n79 81\r\n3 43\r\n33 47\r\n22 98\r\n33 90\r\n56 49\r\n69 28\r\n73 30\r\n65 22\r\n98 20\r\n9 52\r\n54 20\r\n32 70\r\n51 80\r\n63 12\r\n21 48\r\n35 17\r\n48 87\r\n25 43\r\n65 80\r\n42 3\r\n86 35\r\n95 98\r\n43 59\r\n51 46\r\n66 37\r\n88 34\r\n32 47\r\n24 42\r\n21 44\r\n92 59\r\n81 6\r\n100 82\r\n85 6\r\n58 25\r\n66 6\r\n14 32\r\n59 85\r\n3 98\r\n44 4\r\n85 51\r\n69 41\r\n80 70\r\n81 24\r\n75 71\r\n93 9\r\n82 55\r\n70 46\r\n66 32\r\n77 58\r\n11 46\r\n",
                "NO\r\n"
            ],
            [
                "4 4\r\n1 2\r\n4 3\r\n2 3\r\n3 1\r\n",
                "FHTAGN!\r\n"
            ],
            [
                "5 5\r\n2 3\r\n2 4\r\n5 4\r\n4 1\r\n1 2\r\n",
                "FHTAGN!\r\n"
            ],
            [
                "10 10\r\n1 10\r\n5 9\r\n6 2\r\n8 9\r\n9 1\r\n5 4\r\n2 8\r\n1 3\r\n6 3\r\n4 1\r\n",
                "NO\r\n"
            ],
            [
                "6 6\r\n1 2\r\n2 3\r\n3 1\r\n4 5\r\n5 6\r\n6 4\r\n",
                "NO\r\n"
            ],
            [
                "4 3\r\n1 2\r\n2 3\r\n3 1\r\n",
                "NO\r\n"
            ],
            [
                "6 5\r\n1 2\r\n2 3\r\n3 1\r\n1 4\r\n1 5\r\n",
                "NO\r\n"
            ]
        ]
    }
]