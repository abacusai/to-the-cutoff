[
    {
        "name": "Calendar",
        "description": "BerOilGasDiamondBank has branches in n cities, at that n is an even number.\nThe bank management wants to publish a calendar with the names of all those\ncities written in two columns: the calendar should consist of exactly n / 2\nlines of strictly equal length, each of which contains exactly two names and\nexactly one separator character between them. The name of every city should be\nused in the calendar exactly once. For historical reasons the symbol d is used\nas the separator of words in the calendar. The BerOilGasDiamondBank management\nwants to show that all its branches are equally important to it, that's why\nthe order of their appearance in the calendar should be following: if we\n\"glue\"(concatinate) all the n / 2 calendar lines (from top to bottom) to make\na single line, then the lexicographically minimal line is obtained. No\nseparator character will be used to separate calendar lines. For example, if\nthe lines are \"bertown!berville\", \"newberville!bera\", then the resulting line\nis \"bertown!bervillenewberville!bera\". In some sense one has to find the\nlexicographically minimal calendar, where the comparison of calendars happens\nline by line. Help BerOilGasDiamondBank and construct the required calendar.\nInput The first line contains an integer n (1 \u2264 n \u2264 10^4, n is even) which is\nthe number of branches. Then follow n lines which are the names of the cities.\nAll the names consist of lowercase Latin letters; their lengths are no less\nthan 1 and no more than 10 symbols. The next line contains a single symbol d\n(d has an ASCII-code from 33 to 126 inclusively, excluding lowercase Latin\nletters) which is the separator between words in the calendar lines. It is\nguaranteed that the calendar is possible to be constructed and all the names\nare different. Output Print n / 2 lines of similar length which are the\nrequired calendar. Every line should contain exactly two words and exactly one\nseparator between them. If there are several solutions, print the\nlexicographically minimal one. The lexicographical comparison of lines is\nrealized by the \"<\" operator in the modern programming languages. Examples\nInput 4 b aa hg c . Output aa.b c.hg Input 2 aa a ! Output a!aa Input 2 aa a |\nOutput aa|a\n\n",
        "cf_contest_id": 58,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\nb\r\naa\r\nhg\r\nc\r\n.\r\n",
                "aa.b\r\nc.hg\r\n"
            ],
            [
                "2\r\naa\r\na\r\n!\r\n",
                "a!aa\r\n"
            ],
            [
                "2\r\naa\r\na\r\n|\r\n",
                "aa|a\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\nqhcivbxotj\r\nirgxzzxvw\r\npxdmcyszvk\r\nyyaevcdal\r\n~\r\n",
                "irgxzzxvw~pxdmcyszvk\r\nqhcivbxotj~yyaevcdal\r\n"
            ],
            [
                "8\r\nbad\r\nrnnpg\r\njvcjsxfob\r\nad\r\nairnnpg\r\nqury\r\njvcjsxfo\r\nquryai\r\n6\r\n",
                "ad6jvcjsxfob\r\nairnnpg6qury\r\nbad6jvcjsxfo\r\nquryai6rnnpg\r\n"
            ],
            [
                "6\r\neh\r\nehkhdp\r\ngque\r\nkhdptvgque\r\ntvgque\r\nehkhdptv\r\n}\r\n",
                "ehkhdptv}gque\r\nehkhdp}tvgque\r\neh}khdptvgque\r\n"
            ],
            [
                "10\r\ndoecgzo\r\ntjptpqp\r\noitegxzwlp\r\nmwsrwmeyeg\r\nsmapaqanak\r\nsmapaqa\r\nqghrydm\r\nnakqghrydm\r\nmedoraus\r\nnyvgozjdf\r\n|\r\n",
                "doecgzo|mwsrwmeyeg\r\nmedoraus|nyvgozjdf\r\nnakqghrydm|qghrydm\r\noitegxzwlp|smapaqa\r\nsmapaqanak|tjptpqp\r\n"
            ],
            [
                "30\r\nd\r\nahx\r\nr\r\nyd\r\np\r\nnhy\r\na\r\ntqt\r\nctp\r\ntp\r\nho\r\nry\r\nm\r\ng\r\ns\r\nn\r\nct\r\nsc\r\nqr\r\nrry\r\ny\r\nhxm\r\nqrr\r\nsct\r\ncwu\r\nq\r\ndk\r\nrf\r\nhyd\r\nnh\r\n$\r\n",
                "a$ahx\r\nct$dk\r\nctp$d\r\ncwu$g\r\nho$nh\r\nhxm$m\r\nhyd$n\r\nnhy$p\r\nq$qrr\r\nqr$rf\r\nr$rry\r\nry$sc\r\ns$sct\r\ntp$yd\r\ntqt$y\r\n"
            ],
            [
                "14\r\neskrrgzq\r\nxbmynhxfg\r\nwwffafny\r\nfaxcnrqkkb\r\nfaxcnrqk\r\nkbwwffafny\r\nmnborvqeae\r\nranfahuebj\r\neskrrgzqk\r\nfaxcnrqkk\r\ncznaycxe\r\nrnkgfgyq\r\nkxbmynhxfg\r\nbwwffafny\r\n}\r\n",
                "bwwffafny}eskrrgzqk\r\ncznaycxe}faxcnrqkkb\r\neskrrgzq}kbwwffafny\r\nfaxcnrqkk}xbmynhxfg\r\nfaxcnrqk}kxbmynhxfg\r\nmnborvqeae}rnkgfgyq\r\nranfahuebj}wwffafny\r\n"
            ],
            [
                "10\r\npo\r\negf\r\ne\r\ngfuzaqsi\r\nsi\r\nhpo\r\nuldiig\r\negfuzaq\r\nuldiigh\r\nuzaqsi\r\n{\r\n",
                "egfuzaq{po\r\negf{uldiig\r\ne{gfuzaqsi\r\nhpo{uzaqsi\r\nsi{uldiigh\r\n"
            ],
            [
                "4\r\na\r\nf\r\nz\r\nh\r\n!\r\n",
                "a!f\r\nh!z\r\n"
            ]
        ]
    }
]