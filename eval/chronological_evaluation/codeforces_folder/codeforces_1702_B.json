[
    {
        "name": "Polycarp Writes a String from Memory",
        "description": "Polycarp has a poor memory. Each day he can remember no more than \n    3\n of\ndifferent letters. Polycarp wants to write a non-empty string of \n    s\n\nconsisting of lowercase Latin letters, taking minimum number of days. In how\nmany days will he be able to do it? Polycarp initially has an empty string and\ncan only add characters to the end of that string. For example, if Polycarp\nwants to write the string lollipops, he will do it in \n    2\n days: on the\nfirst day Polycarp will memorize the letters l, o, i and write lolli; On the\nsecond day Polycarp will remember the letters p, o, s, add pops to the\nresulting line and get the line lollipops. If Polycarp wants to write the\nstring stringology, he will do it in \n    4\n days: in the first day will be\nwritten part str; on day two will be written part ing; on the third day, part\nof olog will be written; on the fourth day, part of y will be written. For a\ngiven string \n    s\n, print the minimum number of days it will take Polycarp\nto write it. Input The first line of input data contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. Each test\ncase consists of a non-empty string \n    s\n consisting of lowercase Latin\nletters (the length of the string \n    s\n does not exceed \n    2 \n    \u00b7\n    10^5\n) \u2014 the string Polycarp wants to construct. It is guaranteed that the\nsum of string lengths \n    s\n over all test cases does not exceed \n    2 \n    \u00b7\n    10^5\n. Output For each test case, print a single number \u2014 minimum number of\ndays it will take Polycarp to write the string \n    s\n from memory. Example\nInput 6 lollipops stringology abracadabra codeforces test f Output 2 4 3 4 1 1\n\n",
        "cf_contest_id": 1702,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\nlollipops\r\nstringology\r\nabracadabra\r\ncodeforces\r\ntest\r\nf\r\n",
                "2\r\n4\r\n3\r\n4\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nvdjisjifreo\r\n",
                "4\r\n"
            ]
        ]
    }
]