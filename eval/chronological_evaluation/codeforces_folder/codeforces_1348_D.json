[
    {
        "name": "Phoenix and Science",
        "description": "Phoenix has decided to become a scientist! He is currently investigating the\ngrowth of bacteria. Initially, on day \n    1\n, there is one bacterium with\nmass \n    1\n. Every day, some number of bacteria will split (possibly zero or\nall). When a bacterium of mass \n    m\n splits, it becomes two bacteria of mass\n\n    m/2\n each. For example, a bacterium of mass \n    3\n can split\ninto two bacteria of mass \n    1.5\n. Also, every night, the mass of every\nbacteria will increase by one. Phoenix is wondering if it is possible for the\ntotal mass of all the bacteria to be exactly \n    n\n. If it is possible, he is\ninterested in the way to obtain that mass using the minimum possible number of\nnights. Help him become the best scientist! Input The input consists of\nmultiple test cases. The first line contains an integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 1000\n) \u2014 the number of test cases. The first line of each test case\ncontains an integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^9\n) \u2014 the sum of bacteria\nmasses that Phoenix is interested in. Output For each test case, if there is\nno way for the bacteria to exactly achieve total mass \n    n\n, print -1.\nOtherwise, print two lines. The first line should contain an integer \n    d\n \u2014\nthe minimum number of nights needed. The next line should contain \n    d\n\nintegers, with the \n    i\n-th integer representing the number of bacteria that\nshould split on the \n    i\n-th day. If there are multiple solutions, print\nany. Example Input 3 9 11 2 Output 3 1 0 2 3 1 1 2 1 0 Note In the first test\ncase, the following process results in bacteria with total mass \n    9\n: Day\n\n    1\n: The bacterium with mass \n    1\n splits. There are now two bacteria\nwith mass \n    0.5\n each. Night \n    1\n: All bacteria's mass increases by one.\nThere are now two bacteria with mass \n    1.5\n. Day \n    2\n: None split. Night\n\n    2\n: There are now two bacteria with mass \n    2.5\n. Day \n    3\n: Both\nbacteria split. There are now four bacteria with mass \n    1.25\n. Night\n\n    3\n: There are now four bacteria with mass \n    2.25\n. The total mass is\n\n    2.25+2.25+2.25+2.25=9\n. It can be proved that \n    3\n is the minimum\nnumber of nights needed. There are also other ways to obtain total mass 9 in 3\nnights.\n    \n In the second test case, the following process results in\nbacteria with total mass \n    11\n: Day \n    1\n: The bacterium with mass\n\n    1\n splits. There are now two bacteria with mass \n    0.5\n. Night \n    1\n:\nThere are now two bacteria with mass \n    1.5\n. Day \n    2\n: One bacterium\nsplits. There are now three bacteria with masses \n    0.75\n, \n    0.75\n, and\n\n    1.5\n. Night \n    2\n: There are now three bacteria with masses \n    1.75\n,\n\n    1.75\n, and \n    2.5\n. Day \n    3\n: The bacteria with mass \n    1.75\n and\nthe bacteria with mass \n    2.5\n split. There are now five bacteria with\nmasses \n    0.875\n, \n    0.875\n, \n    1.25\n, \n    1.25\n, and \n    1.75\n. Night\n\n    3\n: There are now five bacteria with masses \n    1.875\n, \n    1.875\n,\n\n    2.25\n, \n    2.25\n, and \n    2.75\n. The total mass is\n\n    1.875+1.875+2.25+2.25+2.75=11\n. It can be proved that \n    3\n is the\nminimum number of nights needed. There are also other ways to obtain total\nmass 11 in 3 nights.\n    \n In the third test case, the bacterium does not\nsplit on day \n    1\n, and then grows to mass \n    2\n during night \n    1\n.\n\n",
        "cf_contest_id": 1348,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n9\r\n11\r\n2\r\n",
                "3\r\n1 0 2\r\n3\r\n1 2 0\r\n1\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2\r\n",
                "1\r\n0\r\n"
            ]
        ]
    }
]