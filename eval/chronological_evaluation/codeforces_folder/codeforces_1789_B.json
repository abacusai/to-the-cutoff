[
    {
        "name": "Serval and Inversion Magic",
        "description": "Serval has a string \n    s\n that only consists of 0 and 1 of length \n    n\n.\nThe \n    i\n-th character of \n    s\n is denoted as \n    s_i\n, where \n    1\n    \u2264\n    i\n    \u2264 n\n. Serval can perform the following operation called Inversion\nMagic on the string \n    s\n: Choose an segment \n    [l, r]\n (\n    1\n    \u2264\n    l\n    \u2264 r\n    \u2264 n\n). For \n    l\n    \u2264 i\n    \u2264 r\n, change \n    s_i\n into 1 if\n\n    s_i\n is 0, and change \n    s_i\n into 0 if \n    s_i\n is 1. For example,\nlet \n    s\n be 010100 and the segment \n    [2,5]\n is chosen. The string\n\n    s\n will be 001010 after performing the Inversion Magic. Serval wants to\nmake \n    s\n a palindrome after performing Inversion Magic exactly once. Help\nhim to determine whether it is possible. A string is a palindrome iff it reads\nthe same backwards as forwards. For example, 010010 is a palindrome but 10111\nis not. Input Each test contains multiple test cases. The first line contains\nthe number of test cases \n    t\n (\n    1\n    \u2264 t\n    \u2264 10^4\n). The description\nof the test cases follows. The first line of each test case contains a single\ninteger \n    n\n (\n    2\n    \u2264 n\n    \u2264 10^5\n) \u2014 the length of string \n    s\n.\nThe second line of each test case contains a binary string \n    s\n of length\n\n    n\n. Only characters 0 and 1 can appear in \n    s\n. It's guaranteed that\nthe sum of \n    n\n over all test cases does not exceed \n    2\n    \u00b7 10^5\n.\nOutput For each test case, print Yes if \n    s\n can be a palindrome after\nperforming Inversion Magic exactly once, and print No if not. You can output\nYes and No in any case (for example, strings yEs, yes, Yes and YES will be\nrecognized as a positive response). Example Input 3 4 1001 5 10010 7 0111011\nOutput Yes Yes No Note In the first test case, Serval can perform Inversion\nMagic on the segment \n    [1,4]\n. The string \n    s\n will be 0110 after the\nmagic. In the second test case, Serval can perform Inversion Magic on the\nsegment \n    [1,3]\n. The string \n    s\n will be 01110 after the magic. In the\nthird test case, Serval can't make \n    s\n a palindrome by performing\nInversion Magic exactly once.\n\n",
        "cf_contest_id": 1789,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation",
            "strings",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4\r\n1001\r\n5\r\n10010\r\n7\r\n0111011\r\n",
                "Yes\r\nYes\r\nNo\r\n"
            ]
        ],
        "private_cases": []
    }
]