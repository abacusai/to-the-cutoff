[
    {
        "name": "Big Number and Remainder",
        "description": "Stepan has a very big positive integer. Let's consider all cyclic shifts of\nStepan's integer (if we look at his integer like at a string) which are also\nintegers (i.e. they do not have leading zeros). Let's call such shifts as good\nshifts. For example, for the integer 10203 the good shifts are the integer\nitself 10203 and integers 20310 and 31020. Stepan wants to know the minimum\nremainder of the division by the given number m among all good shifts. Your\ntask is to determine the minimum remainder of the division by m. Input The\nfirst line contains the integer which Stepan has. The length of Stepan's\ninteger is between 2 and 200 000 digits, inclusive. It is guaranteed that\nStepan's integer does not contain leading zeros. The second line contains the\ninteger m (2 \u2264 m \u2264 10^8) \u2014 the number by which Stepan divides good shifts of\nhis integer. Output Print the minimum remainder which Stepan can get if he\ndivides all good shifts of his integer by the given number m. Examples Input\n521 3 Output 2 Input 1001 5 Output 0 Input 5678901234567890123456789 10000\nOutput 123 Note In the first example all good shifts of the integer 521 (good\nshifts are equal to 521, 215 and 152) has same remainder 2 when dividing by 3.\nIn the second example there are only two good shifts: the Stepan's integer\nitself and the shift by one position to the right. The integer itself is 1001\nand the remainder after dividing it by 5 equals 1. The shift by one position\nto the right equals to 1100 and the remainder after dividing it by 5 equals 0,\nwhich is the minimum possible remainder.\n\n",
        "cf_contest_id": 774,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "521\r\n3\r\n",
                "2\r\n"
            ],
            [
                "1001\r\n5\r\n",
                "0\r\n"
            ],
            [
                "5678901234567890123456789\r\n10000\r\n",
                "123\r\n"
            ]
        ],
        "private_cases": [
            [
                "552352155\r\n13\r\n",
                "2\r\n"
            ],
            [
                "11533077525260\r\n193983\r\n",
                "22331\r\n"
            ],
            [
                "15\r\n19\r\n",
                "13\r\n"
            ],
            [
                "2342341\r\n2342340\r\n",
                "1\r\n"
            ],
            [
                "12345\r\n12344\r\n",
                "1\r\n"
            ],
            [
                "23457\r\n23456\r\n",
                "1\r\n"
            ],
            [
                "79\r\n60847671\r\n",
                "79\r\n"
            ],
            [
                "456\r\n79575973\r\n",
                "456\r\n"
            ],
            [
                "1908\r\n86567928\r\n",
                "1908\r\n"
            ],
            [
                "30866\r\n55357692\r\n",
                "30866\r\n"
            ],
            [
                "980552\r\n32506042\r\n",
                "298055\r\n"
            ],
            [
                "4865180\r\n11799246\r\n",
                "1804865\r\n"
            ],
            [
                "63014535\r\n5261418\r\n",
                "948834\r\n"
            ],
            [
                "260597722\r\n10577910\r\n",
                "38629\r\n"
            ],
            [
                "8460711003592660299377170851036141857177105821455679225940496548902563144980707248030407967017317182\r\n13315371\r\n",
                "16290\r\n"
            ]
        ]
    }
]