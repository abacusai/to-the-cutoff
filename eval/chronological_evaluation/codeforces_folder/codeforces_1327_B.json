[
    {
        "name": "Princesses and Princes",
        "description": "The King of Berland Polycarp LXXXIV has \n    n\n daughters. To establish his\npower to the neighbouring kingdoms he wants to marry his daughters to the\nprinces of these kingdoms. As a lucky coincidence there are \n    n\n other\nkingdoms as well. So Polycarp LXXXIV has enumerated his daughters from \n    1\n\nto \n    n\n and the kingdoms from \n    1\n to \n    n\n. For each daughter he has\ncompiled a list of kingdoms princes of which she wanted to marry. Polycarp\nLXXXIV is very busy, so he finds a couple for his daughters greedily one after\nanother. For the first daughter he takes the kingdom with the lowest number\nfrom her list and marries the daughter to their prince. For the second\ndaughter he takes the kingdom with the lowest number from her list, prince of\nwhich hasn't been taken already. If there are no free princes in the list then\nthe daughter marries nobody and Polycarp LXXXIV proceeds to the next daughter.\nThe process ends after the \n    n\n-th daughter. For example, let there be\n\n    4\n daughters and kingdoms, the lists daughters have are \n    [2, 3]\n,\n\n    [1, 2]\n, \n    [3, 4]\n, \n    [3]\n, respectively. In that case daughter\n\n    1\n marries the prince of kingdom \n    2\n, daughter \n    2\n marries the\nprince of kingdom \n    1\n, daughter \n    3\n marries the prince of kingdom\n\n    3\n, leaving daughter \n    4\n nobody to marry to. Actually, before\nstarting the marriage process Polycarp LXXXIV has the time to convince one of\nhis daughters that some prince is also worth marrying to. Effectively, that\nmeans that he can add exactly one kingdom to exactly one of his daughter's\nlist. Note that this kingdom should not be present in the daughter's list.\nPolycarp LXXXIV wants to increase the number of married couples.\nUnfortunately, what he doesn't have the time for is determining what entry to\nadd. If there is no way to increase the total number of married couples then\noutput that the marriages are already optimal. Otherwise, find such an entry\nthat the total number of married couples increases if Polycarp LXXXIV adds it.\nIf there are multiple ways to add an entry so that the total number of married\ncouples increases then print any of them. For your and our convenience you are\nasked to answer \n    t\n independent test cases. Input The first line contains\na single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^5\n) \u2014 the number of test\ncases. Then \n    t\n test cases follow. The first line of each test case\ncontains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of\ndaughters and the number of kingdoms. Each of the next \n    n\n lines contains\nthe description of each daughter's list. The first integer \n    k\n (\n    0 \n    \u2264\n    k \n    \u2264 n\n) is the number of entries in the \n    i\n-th daughter's list.\nAfter that \n    k\n distinct integers follow \n    g_i[1], g_i[2], \n    \u2026,\n    g_i[k]\n (\n    1 \n    \u2264 g_i[j] \n    \u2264 n\n) \u2014 the indices of the kingdoms in the\nlist in the increasing order (\n    g_i[1] < g_i[2] < \n    \u2026 < g_i[k]\n). It's\nguaranteed that the total number of daughters over all test cases does not\nexceed \n    10^5\n. It's also guaranteed that the total number of kingdoms in\nlists over all test cases does not exceed \n    10^5\n. Output For each test\ncase print the answer to it. Print \"IMPROVE\" in the first line if Polycarp\nLXXXIV can add some kingdom to some of his daughter's list so that the total\nnumber of married couples increases. The second line then should contain two\nintegers \u2014 the index of the daughter and the index of the kingdom Polycarp\nLXXXIV should add to that daughter's list. If there are multiple ways to add\nan entry so that the total number of married couples increases then print any\nof them. Otherwise the only line should contain one word \"OPTIMAL\". Example\nInput 5 4 2 2 3 2 1 2 2 3 4 1 3 2 0 0 3 3 1 2 3 3 1 2 3 3 1 2 3 1 1 1 4 1 1 1\n2 1 3 1 4 Output IMPROVE 4 4 IMPROVE 1 1 OPTIMAL OPTIMAL OPTIMAL Note The\nfirst test case is depicted in the statement. Adding the fourth kingdom to the\nlist of the fourth daughter makes her marry the prince of the fourth kingdom.\nIn the second test case any new entry will increase the number of marriages\nfrom \n    0\n to \n    1\n. In the third and the fourth test cases there is no\nway to add an entry. In the fifth test case there is no way to change the\nmarriages by adding any entry.\n\n",
        "cf_contest_id": 1327,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "graphs",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4\r\n2 2 3\r\n2 1 2\r\n2 3 4\r\n1 3\r\n2\r\n0\r\n0\r\n3\r\n3 1 2 3\r\n3 1 2 3\r\n3 1 2 3\r\n1\r\n1 1\r\n4\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n",
                "IMPROVE 4 4\r\nIMPROVE 2 1\r\nOPTIMAL\r\nOPTIMAL\r\nOPTIMAL\r\n"
            ]
        ],
        "private_cases": [
            [
                "19\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n1\r\n0\r\n",
                "IMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\nIMPROVE 1 1\r\n"
            ]
        ]
    }
]