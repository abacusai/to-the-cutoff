[
    {
        "name": "CNF 2",
        "description": "'In Boolean logic, a formula is in conjunctive normal form (CNF) or clausal\nnormal form if it is a conjunction of clauses, where a clause is a disjunction\nof literals' (cited from\nhttps://en.wikipedia.org/wiki/Conjunctive_normal_form) In the other words, CNF\nis a formula of type , where     represents a logical \"AND\" (conjunction),\nrepresents a logical \"OR\" (disjunction), and vij are some boolean variables or\ntheir negations. Each statement in brackets is called a clause, and vij are\ncalled literals. You are given a CNF containing variables x1, ..., xm and\ntheir negations. We know that each variable occurs in at most two clauses\n(with negation and without negation in total). Your task is to determine\nwhether this CNF is satisfiable, that is, whether there are such values of\nvariables where the CNF value is true. If CNF is satisfiable, then you also\nneed to determine the values of the variables at which the CNF is true. It is\nguaranteed that each variable occurs at most once in each clause. Input The\nfirst line contains integers n and m (1 \u2264 n, m \u2264 2\u00b710^5) \u2014 the number of\nclauses and the number variables, correspondingly. Next n lines contain the\ndescriptions of each clause. The i-th line first contains first number ki (ki\n\u2265 1) \u2014 the number of literals in the i-th clauses. Then follow space-separated\nliterals vij (1 \u2264 |vij| \u2264 m). A literal that corresponds to vij is x|vij|\neither with negation, if vij is negative, or without negation otherwise.\nOutput If CNF is not satisfiable, print a single line \"NO\" (without the\nquotes), otherwise print two strings: string \"YES\" (without the quotes), and\nthen a string of m numbers zero or one \u2014 the values of variables in satisfying\nassignment in the order from x1 to xm. Examples Input 2 2 2 1 -2 2 2 -1 Output\nYES 11 Input 4 3 1 1 1 2 3 -1 -2 3 1 -3 Output NO Input 5 6 2 1 2 3 1 -2 3 4\n-3 5 4 6 2 -6 -4 1 5 Output YES 100010 Note In the first sample test formula\nis . One of possible answer is x1 = TRUE, x2 = TRUE.\n\n",
        "cf_contest_id": 571,
        "cf_index": "C",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2\r\n2 1 -2\r\n2 2 -1\r\n",
                "YES\r\n00"
            ],
            [
                "4 3\r\n1 1\r\n1 2\r\n3 -1 -2 3\r\n1 -3\r\n",
                "NO"
            ],
            [
                "5 6\r\n2 1 2\r\n3 1 -2 3\r\n4 -3 5 4 6\r\n2 -6 -4\r\n1 5\r\n",
                "YES\r\n100010"
            ]
        ],
        "private_cases": [
            [
                "5 5\r\n3 2 3 -5\r\n1 4\r\n2 -1 -4\r\n2 1 -2\r\n2 -3 5\r\n",
                "YES\r\n00010"
            ],
            [
                "5 4\r\n1 4\r\n2 1 -4\r\n3 -1 -2 3\r\n1 2\r\n1 -3\r\n",
                "NO"
            ],
            [
                "11 12\r\n1 4\r\n3 2 3 -4\r\n3 1 -2 5\r\n3 -7 -8 -12\r\n1 -3\r\n4 8 -10 11 12\r\n1 -6\r\n2 7 -9\r\n2 10 -11\r\n2 6 9\r\n2 -1 -5\r\n",
                "YES\r\n110100101000"
            ],
            [
                "12 12\r\n2 -1 -3\r\n1 10\r\n1 2\r\n2 11 -12\r\n2 -5 -6\r\n1 -9\r\n2 3 -4\r\n3 6 -7 -8\r\n2 7 8\r\n3 1 -2 4\r\n1 5\r\n4 9 -10 -11 12\r\n",
                "YES\r\n110010100100"
            ],
            [
                "10 10\r\n1 -4\r\n1 6\r\n2 -7 -8\r\n3 -3 9 4\r\n6 -5 -6 -1 -9 8 10\r\n1 -5\r\n2 2 7\r\n2 3 -10\r\n1 1\r\n1 -2\r\n",
                "YES\r\n1000011000"
            ],
            [
                "21 24\r\n3 -21 -23 24\r\n2 -16 18\r\n4 3 5 -6 7\r\n1 23\r\n1 -18\r\n2 -19 -24\r\n1 15\r\n4 8 9 11 13\r\n3 -9 12 -13\r\n3 -1 2 6\r\n3 -15 16 -17\r\n4 -2 -4 -5 -7\r\n1 4\r\n3 -8 -10 -14\r\n2 21 -22\r\n1 17\r\n2 10 14\r\n2 -11 -12\r\n2 1 -3\r\n2 20 22\r\n2 19 -20\r\n",
                "NO"
            ],
            [
                "2 1\r\n1 1\r\n1 -1\r\n",
                "NO"
            ],
            [
                "2 2\r\n2 1 2\r\n2 2 1\r\n",
                "YES\r\n10"
            ],
            [
                "1 1\r\n1 -1\r\n",
                "YES\r\n0"
            ],
            [
                "1 5\r\n4 1 2 -3 -4\r\n",
                "YES\r\n00000"
            ],
            [
                "10 11\r\n2 6 -5\r\n2 5 3\r\n2 -7 -9\r\n4 2 11 -3 1\r\n1 4\r\n2 8 10\r\n1 -10\r\n3 -8 -2 -6\r\n2 7 -11\r\n2 9 -4\r\n",
                "YES\r\n10110001100"
            ],
            [
                "10 9\r\n1 -1\r\n1 8\r\n1 -9\r\n4 -6 9 -5 -8\r\n1 6\r\n2 -7 -2\r\n2 7 3\r\n3 -4 5 1\r\n1 -2\r\n2 4 -3\r\n",
                "YES\r\n000001110"
            ],
            [
                "10 10\r\n2 -3 -7\r\n1 4\r\n3 10 3 -1\r\n3 2 -4 -6\r\n2 -10 5\r\n2 -2 1\r\n1 6\r\n3 9 7 -8\r\n1 8\r\n1 -9\r\n",
                "YES\r\n1101111101"
            ],
            [
                "10 10\r\n1 -4\r\n1 -6\r\n3 -8 3 1\r\n4 6 4 10 7\r\n1 9\r\n2 -7 5\r\n1 -5\r\n2 2 9\r\n1 -3\r\n3 8 -2 -10\r\n",
                "YES\r\n0000000011"
            ],
            [
                "10 59\r\n8 -24 37 59 -57 -50 -17 18 -54\r\n12 51 -34 -49 57 50 -13 32 1 22 9 21 44\r\n12 -39 -23 43 -42 3 -11 13 -36 7 -26 58 -10\r\n9 48 25 42 17 6 30 -1 -27 -31\r\n12 -51 -25 39 35 -5 -45 12 -15 16 38 -58 10\r\n7 -40 29 5 -20 55 -47 -9\r\n16 24 -48 -29 49 45 8 -6 -18 -4 36 -32 -7 -53 31 52 -21\r\n13 -37 40 -28 2 53 46 27 -38 54 47 -19 -41 33\r\n12 23 -59 -14 -3 -12 15 4 -55 56 -52 -44 -33\r\n17 34 -35 -43 14 28 20 -8 11 -2 -30 -46 -16 -56 -22 19 26 41\r\n",
                "YES\r\n00000000000000000000000000000000000000000000000000000000000"
            ]
        ]
    }
]