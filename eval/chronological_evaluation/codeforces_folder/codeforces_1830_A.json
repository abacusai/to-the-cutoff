[
    {
        "name": "Copil Copac Draws Trees",
        "description": "Copil Copac is given a list of \n    n-1\n edges describing a tree of \n    n\n\nvertices. He decides to draw it using the following algorithm: Step \n    0\n:\nDraws the first vertex (vertex \n    1\n). Go to step \n    1\n. Step \n    1\n: For\nevery edge in the input, in order: if the edge connects an already drawn\nvertex \n    u\n to an undrawn vertex \n    v\n, he will draw the undrawn vertex\n\n    v\n and the edge. After checking every edge, go to step \n    2\n. Step\n\n    2\n: If all the vertices are drawn, terminate the algorithm. Else, go to\nstep \n    1\n. The number of readings is defined as the number of times Copil\nCopac performs step \n    1\n. Find the number of readings needed by Copil Copac\nto draw the tree. Input Each test contains multiple test cases. The first line\nof input contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014\nthe number of test cases. The description of test cases follows. The first\nline of each test case contains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the number of vertices of the tree. The following \n    n -\n    1\n lines of each test case contain two integers \n    u_i\n and \n    v_i\n\n(\n    1 \n    \u2264 u_i, v_i \n    \u2264 n\n, \n    u_i \n    \u2260 v_i\n) \u2014 indicating that\n\n    (u_i,v_i)\n is the \n    i\n-th edge in the list. It is guaranteed that the\ngiven edges form a tree. It is guaranteed that the sum of \n    n\n over all\ntest cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test case,\noutput the number of readings Copil Copac needs to draw the tree. Example\nInput 2 6 4 5 1 3 1 2 3 4 1 6 7 5 6 2 4 2 7 1 3 1 2 4 5 Output 2 3 Note In the\nfirst test case: After the first reading, the tree will look like this: After\nthe second reading: Therefore, Copil Copac needs \n    2\n readings to draw the\ntree.\n\n",
        "cf_contest_id": 1830,
        "cf_index": "A",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n6\r\n4 5\r\n1 3\r\n1 2\r\n3 4\r\n1 6\r\n7\r\n5 6\r\n2 4\r\n2 7\r\n1 3\r\n1 2\r\n4 5\r\n",
                "2\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]