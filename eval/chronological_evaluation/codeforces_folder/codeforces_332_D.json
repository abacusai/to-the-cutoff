[
    {
        "name": "Theft of Blueprints",
        "description": "Insurgents accidentally got hold of the plan of a top secret research polygon\ncreated on a distant planet for the needs of the Galaxy Empire. The insurgents\nsuppose that this polygon is developing new deadly weapon. The polygon\nconsists of n missile silos connected by bidirectional underground passages.\nThe passages are linked to laboratories where research is conducted.\nNaturally, the passages are guarded severely: the passage between silos i and\nj is patrolled by ci, j war droids. The insurgents studied the polygon plan\nand noticed its unusual structure. As it turned out, for any k-element set of\nsilos S there is exactly one silo that is directly connected by a passage with\neach silo from S (we'll call this silo adjacent with S). Having considered\nthat, the insurgents decided to act as follows: they choose a k-element set of\nsilos S; a group of scouts lands from the air into each silo from S; each\ngroup moves along the corresponding passage to the silo, adjacent with S (as\nthe scouts move, they check out the laboratories and watch for any signs of\nweapon blueprints); in the silo, adjacent with S, the groups get on the ship\nand fly away. The danger of the operation is the total number of droids that\npatrol the passages through which the scouts will go. The danger of the\noperation obviously only depends on the way to choose set S. The insurgents\nhaven't yet decided on the exact silos to send the scouts to. However, they\nalready want to start preparing the weapons for the scout groups. To do that,\nthe insurgents need to know the mathematical average of the dangers of the\noperations that correspond to all possible ways to choose set S. Solve this\nproblem to help the insurgents protect the ideals of the Republic! Input The\nfirst line contains two integers n and k (2 \u2264 n \u2264 2000, 1 \u2264 k \u2264 n - 1) \u2014 the\nnumber of silos and the number of scout groups, correspondingly. The next n -\n1 lines describe the polygon plan: the i-th of these lines contains n - i\nintegers ci, i + 1, ci, i + 2, ..., ci, n \u2014 the number of droids that patrol\nthe corresponding passages (-1 \u2264 ci, j \u2264 10^9; if ci, j = -1, then silos i and\nj don't have a passage between them). All passages are bidirectional, that is,\nwe can assume that ci, j = cj, i. No passages connect a silo with itself. It\nis guaranteed that the polygon plan meets the conditions of the problem\nstatement. Output Print the average danger of the scouting operation, rounded\ndown to an integer. Note that at the given limits the answer to the problem\nalways fits into the standard integer 64-bit data type. Please do not use the\n\ncout stream or the \n-1 -1 -1 3 -1 -1 -1 Output 5 Input 3 2 10 0 11 Output 14 Note In the first\nsample there are 6 one-element sets of silos. For sets 1, 5 the operation\ndanger will equal 8, for sets 3, 6 \u2014 3, for sets 2, 4 \u2014 5. The\nmathematical average equals . In the second sample there are 3 two-elements\nsets of silos: 1, 3 (danger equals 21), 1, 2 (danger equals 11), 2, 3\n(danger equals 10). The average operation danger equals .\n\n",
        "cf_contest_id": 332,
        "cf_index": "D",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "graphs",
            "math"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 1\r\n-1 -1 -1 8 -1\r\n-1 5 -1 -1\r\n-1 -1 3\r\n-1 -1\r\n-1\r\n",
                "5"
            ],
            [
                "3 2\r\n10 0\r\n11\r\n",
                "14"
            ]
        ],
        "private_cases": [
            [
                "4 3\r\n15 1 3\r\n5 8\r\n9\r\n",
                "20"
            ],
            [
                "5 2\r\n-1 -1 14 3\r\n19 -1 1\r\n-1 6\r\n0\r\n",
                "10"
            ],
            [
                "10 9\r\n999999996 999999991 999999997 999999994 999999991 999999992 999999992 1000000000 999999995\r\n999999999 999999992 1000000000 999999993 999999996 999999996 999999996 999999991\r\n999999990 999999996 999999998 999999996 999999993 999999995 999999991\r\n999999998 999999994 999999996 999999994 999999990 999999993\r\n999999993 999999998 999999993 999999991 999999996\r\n999999995 999999990 999999992 999999999\r\n1000000000 999999995 999999991\r\n999999996 999999998\r\n999999991\r\n",
                "8999999950"
            ],
            [
                "2 1\r\n0\r\n",
                "0"
            ],
            [
                "2 1\r\n1000000000\r\n",
                "1000000000"
            ]
        ]
    }
]