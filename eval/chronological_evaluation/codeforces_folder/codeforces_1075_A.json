[
    {
        "name": "The King's Race",
        "description": "On a chessboard with a width of \n    n\n and a height of \n    n\n, rows are\nnumbered from bottom to top from \n    1\n to \n    n\n, columns are numbered from\nleft to right from \n    1\n to \n    n\n. Therefore, for each cell of the\nchessboard, you can assign the coordinates \n    (r,c)\n, where \n    r\n is the\nnumber of the row, and \n    c\n is the number of the column. The white king has\nbeen sitting in a cell with \n    (1,1)\n coordinates for a thousand years,\nwhile the black king has been sitting in a cell with \n    (n,n)\n coordinates.\nThey would have sat like that further, but suddenly a beautiful coin fell on\nthe cell with coordinates \n    (x,y)\n... Each of the monarchs wanted to get\nit, so they decided to arrange a race according to slightly changed chess\nrules: As in chess, the white king makes the first move, the black king makes\nthe second one, the white king makes the third one, and so on. However, in\nthis problem, kings can stand in adjacent cells or even in the same cell at\nthe same time. The player who reaches the coin first will win, that is to say,\nthe player who reaches the cell with the coordinates \n    (x,y)\n first will\nwin. Let's recall that the king is such a chess piece that can move one cell\nin all directions, that is, if the king is in the \n    (a,b)\n cell, then in\none move he can move from \n    (a,b)\n to the cells \n    (a + 1,b)\n, \n    (a -\n    1,b)\n, \n    (a,b + 1)\n, \n    (a,b - 1)\n, \n    (a + 1,b - 1)\n, \n    (a + 1,b +\n    1)\n, \n    (a - 1,b - 1)\n, or \n    (a - 1,b + 1)\n. Going outside of the field\nis prohibited. Determine the color of the king, who will reach the cell with\nthe coordinates \n    (x,y)\n first, if the white king moves first. Input The\nfirst line contains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^18\n) \u2014\nthe length of the side of the chess field. The second line contains two\nintegers \n    x\n and \n    y\n (\n    1 \n    \u2264 x,y \n    \u2264 n\n) \u2014 coordinates of the\ncell, where the coin fell. Output In a single line print the answer \"White\"\n(without quotes), if the white king will win, or \"Black\" (without quotes), if\nthe black king will win. You can print each letter in any case (upper or\nlower). Examples Input 4 2 3 Output White Input 5 3 5 Output Black Input 2 2 2\nOutput Black Note An example of the race from the first sample where both the\nwhite king and the black king move optimally: The white king moves from the\ncell \n    (1,1)\n into the cell \n    (2,2)\n. The black king moves form the cell\n\n    (4,4)\n into the cell \n    (3,3)\n. The white king moves from the cell\n\n    (2,2)\n into the cell \n    (2,3)\n. This is cell containing the coin, so\nthe white king wins. An example of the race from the second sample where both\nthe white king and the black king move optimally: The white king moves from\nthe cell \n    (1,1)\n into the cell \n    (2,2)\n. The black king moves form the\ncell \n    (5,5)\n into the cell \n    (4,4)\n. The white king moves from the cell\n\n    (2,2)\n into the cell \n    (3,3)\n. The black king moves from the cell\n\n    (4,4)\n into the cell \n    (3,5)\n. This is the cell, where the coin fell,\nso the black king wins. In the third example, the coin fell in the starting\ncell of the black king, so the black king immediately wins.\n\n",
        "cf_contest_id": 1075,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2 3\r\n",
                "White\r\n"
            ],
            [
                "5\r\n3 5\r\n",
                "Black\r\n"
            ],
            [
                "2\r\n2 2\r\n",
                "Black\r\n"
            ]
        ],
        "private_cases": [
            [
                "1000000000000000000\r\n1000000000000000000 1000000000000000000\r\n",
                "Black\r\n"
            ],
            [
                "1000000000000000000\r\n1 1\r\n",
                "White\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "White\r\n"
            ],
            [
                "1234567890123456\r\n1234567889969697 153760\r\n",
                "White\r\n"
            ],
            [
                "12000000000000\r\n123056 11999999876946\r\n",
                "Black\r\n"
            ],
            [
                "839105509657869903\r\n591153401407154876 258754952987011519\r\n",
                "Black\r\n"
            ],
            [
                "778753534913338583\r\n547836868672081726 265708022656451521\r\n",
                "Black\r\n"
            ],
            [
                "521427324217141769\r\n375108452493312817 366738689404083861\r\n",
                "Black\r\n"
            ],
            [
                "1000000000000000\r\n208171971446456 791828028553545\r\n",
                "White\r\n"
            ],
            [
                "719386363530333627\r\n620916440917452264 265151985453132665\r\n",
                "Black\r\n"
            ],
            [
                "57719663734394834\r\n53160177030140966 26258927428764347\r\n",
                "Black\r\n"
            ],
            [
                "835610886713350713\r\n31708329050069500 231857821534629883\r\n",
                "White\r\n"
            ],
            [
                "17289468142098094\r\n4438423217327361 4850647042283952\r\n",
                "White\r\n"
            ],
            [
                "562949953421312\r\n259798251531825 508175017145903\r\n",
                "Black\r\n"
            ],
            [
                "9007199254740992\r\n7977679390099527 3015199451140672\r\n",
                "Black\r\n"
            ],
            [
                "982837494536444311\r\n471939396014493192 262488194864680421\r\n",
                "White\r\n"
            ],
            [
                "878602530892252875\r\n583753601575252768 851813862933314387\r\n",
                "Black\r\n"
            ],
            [
                "266346017810026754\r\n154666946534600751 115042276128224918\r\n",
                "Black\r\n"
            ],
            [
                "999999999999999999\r\n327830472747832080 672169527252167920\r\n",
                "White\r\n"
            ],
            [
                "500000000000000000\r\n386663260494176591 113336739505823410\r\n",
                "White\r\n"
            ],
            [
                "142208171971446458\r\n95133487304951572 27917501730506221\r\n",
                "White\r\n"
            ],
            [
                "499958409834381151\r\n245310126244979452 488988844330818557\r\n",
                "Black\r\n"
            ],
            [
                "973118300939404336\r\n517866508031396071 275750712554570825\r\n",
                "White\r\n"
            ],
            [
                "301180038799975443\r\n120082913827014389 234240127174837977\r\n",
                "Black\r\n"
            ],
            [
                "72057594037927936\r\n28580061529538628 44845680675795341\r\n",
                "Black\r\n"
            ],
            [
                "144115188075855872\r\n18186236734221198 14332453966660421\r\n",
                "White\r\n"
            ],
            [
                "288230376151711744\r\n225784250830541336 102890809592191272\r\n",
                "Black\r\n"
            ],
            [
                "1000000000000000000\r\n500000000000000001 500000000000000001\r\n",
                "Black\r\n"
            ],
            [
                "2\r\n2 1\r\n",
                "White\r\n"
            ],
            [
                "999999999999999999\r\n500000000000000002 500000000000000003\r\n",
                "Black\r\n"
            ],
            [
                "3\r\n2 2\r\n",
                "White\r\n"
            ],
            [
                "10000000000\r\n5 5\r\n",
                "White\r\n"
            ],
            [
                "1000000000000000000\r\n353555355335 3535353324324\r\n",
                "White\r\n"
            ],
            [
                "100000000000000000\r\n50000000000000001 50000000000000001\r\n",
                "Black\r\n"
            ],
            [
                "3\r\n3 1\r\n",
                "White\r\n"
            ]
        ]
    }
]