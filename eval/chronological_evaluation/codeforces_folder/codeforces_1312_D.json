[
    {
        "name": "Count the Arrays",
        "description": "Your task is to calculate the number of arrays such that: each array contains\n\n    n\n elements; each element is an integer from \n    1\n to \n    m\n; for each\narray, there is exactly one pair of equal elements; for each array \n    a\n,\nthere exists an index \n    i\n such that the array is strictly ascending before\nthe \n    i\n-th element and strictly descending after it (formally, it means\nthat \n    a_j < a_j + 1\n, if \n    j < i\n, and \n    a_j > a_j + 1\n, if \n    j\n    \n    \u2265 i\n). Input The first line contains two integers \n    n\n and \n    m\n\n(\n    2 \n    \u2264 n \n    \u2264 m \n    \u2264 2 \n    \u00b7 10^5\n). Output Print one integer \u2014 the\nnumber of arrays that meet all of the aforementioned conditions, taken modulo\n\n    998244353\n. Examples Input 3 4 Output 6 Input 3 5 Output 10 Input 42 1337\nOutput 806066790 Input 100000 200000 Output 707899035 Note The arrays in the\nfirst example are: \n    [1, 2, 1]\n; \n    [1, 3, 1]\n; \n    [1, 4, 1]\n; \n    [2,\n    3, 2]\n; \n    [2, 4, 2]\n; \n    [3, 4, 3]\n.\n\n",
        "cf_contest_id": 1312,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 4\r\n",
                "6\r\n"
            ],
            [
                "3 5\r\n",
                "10\r\n"
            ],
            [
                "42 1337\r\n",
                "806066790\r\n"
            ],
            [
                "100000 200000\r\n",
                "707899035\r\n"
            ]
        ],
        "private_cases": [
            [
                "150000 200000\r\n",
                "270223789\r\n"
            ],
            [
                "2 2\r\n",
                "0\r\n"
            ],
            [
                "3 3\r\n",
                "3\r\n"
            ],
            [
                "3 200000\r\n",
                "35012940\r\n"
            ],
            [
                "200000 200000\r\n",
                "668956439\r\n"
            ],
            [
                "20 20\r\n",
                "47185920\r\n"
            ],
            [
                "2 3\r\n",
                "0\r\n"
            ],
            [
                "1000 200000\r\n",
                "664520775\r\n"
            ],
            [
                "2 10\r\n",
                "0\r\n"
            ]
        ]
    }
]