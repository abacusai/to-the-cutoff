[
    {
        "name": "Hammer throwing",
        "description": "n athletes take part in the hammer throw. Each of them has his own unique\nidentifier \u2014 the integer from 1 to n (all athletes have distinct identifiers).\nAfter the draw, the order in which the athletes will throw the hammer has been\ndetermined (they will do it one by one). Unfortunately, a not very attentive\njudge lost the list with the order of athletes, but each of the athletes has\nremembered how many competitors with identifiers larger than his own will\nthrow the hammer before him. Your task is to help the organizers as quickly as\npossible to restore the order of the athletes. Input The first line contains\nthe positive integer n (1 \u2264 n \u2264 1000) \u2014 the number of athletes. The next line\ncontains the sequence of integers a1, a2, ..., an (0 \u2264 ai < n), where ai is\nequal to the number of the athletes with identifiers larger than i, who should\nthrow the hammer before the athlete with identifier i. Output Print n distinct\nnumbers \u2014 the sequence of athletes' identifiers in the order in which they\nwill throw the hammer. If there are several answers it is allowed to print any\nof them. Examples Input 4 2 0 1 0 Output 2 4 1 3 Input 6 2 2 0 1 1 0 Output 3\n6 1 2 4 5\n\n",
        "cf_contest_id": 683,
        "cf_index": "E",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "*special"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2 0 1 0\r\n",
                "2 4 1 3 "
            ],
            [
                "6\r\n2 2 0 1 1 0\r\n",
                "3 6 1 2 4 5 "
            ]
        ],
        "private_cases": [
            [
                "1\r\n0\r\n",
                "1 "
            ],
            [
                "2\r\n1 0\r\n",
                "2 1 "
            ],
            [
                "2\r\n0 0\r\n",
                "1 2 "
            ],
            [
                "4\r\n0 0 0 0\r\n",
                "1 2 3 4 "
            ],
            [
                "4\r\n0 0 1 0\r\n",
                "1 2 4 3 "
            ],
            [
                "4\r\n0 1 0 0\r\n",
                "1 3 2 4 "
            ],
            [
                "4\r\n1 0 0 0\r\n",
                "2 1 3 4 "
            ],
            [
                "10\r\n5 5 3 5 3 1 2 0 0 0\r\n",
                "8 6 9 3 5 1 2 7 4 10 "
            ],
            [
                "10\r\n1 6 7 4 5 4 2 1 1 0\r\n",
                "10 1 8 7 9 4 6 2 5 3 "
            ],
            [
                "100\r\n78 45 33 78 12 30 51 66 27 0 40 80 63 45 57 38 16 11 62 4 58 66 40 26 21 25 51 4 15 32 1 56 33 14 43 15 55 10 39 41 43 33 47 40 14 29 18 9 3 11 39 30 22 33 19 2 6 10 5 25 32 28 6 25 35 29 21 5 5 10 8 9 1 21 9 5 8 12 2 9 12 6 10 9 15 9 10 12 6 9 6 5 4 4 5 3 1 2 0 0\r\n",
                "10 99 31 73 56 20 28 49 97 79 100 59 5 18 57 48 38 68 17 63 69 29 34 50 36 45 25 96 9 58 76 6 93 3 24 26 47 71 92 70 72 55 82 16 75 2 11 53 30 77 89 23 14 33 46 7 91 80 42 94 67 78 52 84 39 60 15 35 83 27 40 8 13 44 21 64 41 19 1 54 81 4 62 86 51 32 22 43 98 74 37 12 61 66 87 90 95 88 85 65 "
            ]
        ]
    }
]