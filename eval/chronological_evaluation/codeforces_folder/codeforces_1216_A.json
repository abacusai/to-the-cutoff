[
    {
        "name": "Prefixes",
        "description": "Nikolay got a string \n    s\n of even length \n    n\n, which consists only of\nlowercase Latin letters 'a' and 'b'. Its positions are numbered from \n    1\n\nto \n    n\n. He wants to modify his string so that every its prefix of even\nlength has an equal amount of letters 'a' and 'b'. To achieve that, Nikolay\ncan perform the following operation arbitrary number of times (possibly,\nzero): choose some position in his string and replace the letter on this\nposition with the other letter (i.e. replace 'a' with 'b' or replace 'b' with\n'a'). Nikolay can use no letters except 'a' and 'b'. The prefix of string\n\n    s\n of length \n    l\n (\n    1 \n    \u2264 l \n    \u2264 n\n) is a string \n    s[1..l]\n.\nFor example, for the string \n    s=\n\"abba\" there are two prefixes of the even\nlength. The first is \n    s[1\n    \u20262]=\n\"ab\" and the second\n\n    s[1\n    \u20264]=\n\"abba\". Both of them have the same number of 'a' and 'b'.\nYour task is to calculate the minimum number of operations Nikolay has to\nperform with the string \n    s\n to modify it so that every its prefix of even\nlength has an equal amount of letters 'a' and 'b'. Input The first line of the\ninput contains one even integer \n    n\n \n    (2 \n    \u2264 n \n    \u2264 2\n    \u00b710^5)\n\n\u2014 the length of string \n    s\n. The second line of the input contains the\nstring \n    s\n of length \n    n\n, which consists only of lowercase Latin\nletters 'a' and 'b'. Output In the first line print the minimum number of\noperations Nikolay has to perform with the string \n    s\n to modify it so that\nevery its prefix of even length has an equal amount of letters 'a' and 'b'. In\nthe second line print the string Nikolay obtains after applying all the\noperations. If there are multiple answers, you can print any of them. Examples\nInput 4 bbbb Output 2 abba Input 6 ababab Output 0 ababab Input 2 aa Output 1\nba Note In the first example Nikolay has to perform two operations. For\nexample, he can replace the first 'b' with 'a' and the last 'b' with 'a'. In\nthe second example Nikolay doesn't need to do anything because each prefix of\nan even length of the initial string already contains an equal amount of\nletters 'a' and 'b'.\n\n",
        "cf_contest_id": 1216,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\nbbbb\r\n",
                "2\r\nbaba\r\n"
            ],
            [
                "6\r\nababab\r\n",
                "0\r\nababab\r\n"
            ],
            [
                "2\r\naa\r\n",
                "1\r\nab\r\n"
            ]
        ],
        "private_cases": [
            [
                "6\r\nbbbbba\r\n",
                "2\r\nbababa\r\n"
            ],
            [
                "8\r\nbbbabbba\r\n",
                "2\r\nbabababa\r\n"
            ],
            [
                "8\r\nbbabbbaa\r\n",
                "3\r\nbaabbaab\r\n"
            ]
        ]
    }
]