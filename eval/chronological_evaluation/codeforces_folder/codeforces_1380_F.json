[
    {
        "name": "Strange Addition",
        "description": "Let \n    a\n and \n    b\n be some non-negative integers. Let's define strange\naddition of \n    a\n and \n    b\n as following: write down the numbers one under\nanother and align them by their least significant digit; add them up digit by\ndigit and concatenate the respective sums together. Assume that both numbers\nhave an infinite number of leading zeros. For example, let's take a look at a\nstrange addition of numbers \n    3248\n and \n    908\n: You are given a string\n\n    c\n, consisting of \n    n\n digits from \n    0\n to \n    9\n. You are also\ngiven \n    m\n updates of form: \n    x\u00a0d\n \u2014 replace the digit at the \n    x\n-th\nposition of \n    c\n with a digit \n    d\n. Note that string \n    c\n might have\nleading zeros at any point of time. After each update print the number of\npairs \n    (a, b)\n such that both \n    a\n and \n    b\n are non-negative\nintegers and the result of a strange addition of \n    a\n and \n    b\n is equal\nto \n    c\n. Note that the numbers of pairs can be quite large, so print them\nmodulo \n    998244353\n. Input The first line contains two integers \n    n\n and\n\n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 5 \n    \u00b7 10^5\n) \u2014 the length of the number\n\n    c\n and the number of updates. The second line contains a string \n    c\n,\nconsisting of exactly \n    n\n digits from \n    0\n to \n    9\n. Each of the next\n\n    m\n lines contains two integers \n    x\n and \n    d\n (\n    1 \n    \u2264 x \n    \u2264\n    n\n, \n    0 \n    \u2264 d \n    \u2264 9\n) \u2014 the descriptions of updates. Output Print\n\n    m\n integers \u2014 the \n    i\n-th value should be equal to the number of pairs\n\n    (a, b)\n such that both \n    a\n and \n    b\n are non-negative integers and\nthe result of a strange addition of \n    a\n and \n    b\n is equal to \n    c\n\nafter \n    i\n updates are applied. Note that the numbers of pairs can be quite\nlarge, so print them modulo \n    998244353\n. Example Input 2 3 14 2 4 2 1 1 0\nOutput 15 12 2 Note After the first update \n    c\n is equal to \n    14\n. The\npairs that sum up to \n    14\n are: \n    (0, 14)\n, \n    (1, 13)\n, \n    (2,\n    12)\n, \n    (3, 11)\n, \n    (4, 10)\n, \n    (5, 9)\n, \n    (6, 8)\n, \n    (7,\n    7)\n, \n    (8, 6)\n, \n    (9, 5)\n, \n    (10, 4)\n, \n    (11, 3)\n, \n    (12,\n    2)\n, \n    (13, 1)\n, \n    (14, 0)\n. After the second update \n    c\n is equal\nto \n    11\n. After the third update \n    c\n is equal to \n    01\n.\n\n",
        "cf_contest_id": 1380,
        "cf_index": "F",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "matrices"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 3\r\n14\r\n2 4\r\n2 1\r\n1 0\r\n",
                "15\r\n12\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 1\r\n139\r\n2 1\r\n",
                "120\r\n"
            ]
        ]
    }
]