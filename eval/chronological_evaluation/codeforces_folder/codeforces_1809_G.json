[
    {
        "name": "Prediction",
        "description": "Consider a tournament with \n    n\n participants. The rating of the \n    i\n-th\nparticipant is \n    a_i\n. The tournament will be organized as follows. First\nof all, organizers will assign each participant an index from \n    1\n to\n\n    n\n. All indices will be unique. Let \n    p_i\n be the participant who gets\nthe index \n    i\n. Then, \n    n-1\n games will be held. In the first game,\nparticipants \n    p_1\n and \n    p_2\n will play. In the second game, the winner\nof the first game will play against \n    p_3\n. In the third game, the winner\nof the second game will play against \n    p_4\n, and so on \u2014 in the last game,\nthe winner of the \n    (n-2)\n-th game will play against \n    p_n\n. Monocarp\nwants to predict the results of all \n    n-1\n games (of course, he will do the\nprediction only after the indices of the participants are assigned). He knows\nfor sure that, when two participants with ratings \n    x\n and \n    y\n play,\nand \n    |x - y| > k\n, the participant with the higher rating wins. But if\n\n    |x - y| \n    \u2264 k\n, any of the two participants may win. Among all \n    n!\n\nways to assign the indices to participants, calculate the number of ways to do\nthis so that Monocarp can predict the results of all \n    n-1\n games. Since\nthe answer can be large, print it modulo \n    998244353\n. Input The first line\ncontains two integers \n    n\n and \n    k\n (\n    2 \n    \u2264 n \n    \u2264 10^6\n; \n    0\n    \n    \u2264 k \n    \u2264 10^9\n). The second line contains \n    n\n integers \n    a_1, a_2,\n    \n    \u2026, a_n\n (\n    0 \n    \u2264 a_1 \n    \u2264 a_2 \n    \u2264\n    \u2026\n    \u2264 a_n \n    \u2264\n    10^9\n). Output Print one integer \u2014 the number of ways to assign the indices\nto the participants so that Monocarp can predict the results of all \n    n-1\n\ngames. Examples Input 4 3 7 12 17 21 Output 24 Input 3 7 4 9 28 Output 4 Input\n4 1 1 2 3 4 Output 0 Input 4 1 1 2 2 4 Output 12 Input 16 30 8 12 15 27 39 44\n49 50 51 53 58 58 59 67 68 100 Output 527461297 Note In the first example, a\nmatch with any pair of players can be predicted by Monocarp, so all \n    24\n\nways to assign indices should be counted. In the second example, suitable ways\nare \n    [1, 3, 2]\n, \n    [2, 3, 1]\n, \n    [3, 1, 2\n] and \n    [3, 2, 1]\n.\n\n",
        "cf_contest_id": 1809,
        "cf_index": "G",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4 3\r\n7 12 17 21\r\n",
                "24"
            ],
            [
                "3 7\r\n4 9 28\r\n",
                "4"
            ],
            [
                "4 1\r\n1 2 3 4\r\n",
                "0"
            ],
            [
                "4 1\r\n1 2 2 4\r\n",
                "12"
            ],
            [
                "16 30\r\n8 12 15 27 39 44 49 50 51 53 58 58 59 67 68 100\r\n",
                "527461297"
            ]
        ],
        "private_cases": [
            [
                "2 5\r\n1 10\r\n",
                "2"
            ],
            [
                "2 5\r\n1 6\r\n",
                "0"
            ],
            [
                "2 5\r\n1 5\r\n",
                "0"
            ],
            [
                "2 5\r\n1 7\r\n",
                "2"
            ],
            [
                "45 37\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "0"
            ],
            [
                "4 5\r\n1 2 3 4\r\n",
                "0"
            ]
        ]
    }
]