[
    {
        "name": "Make Even",
        "description": "Polycarp has an integer \n    n\n that doesn't contain the digit 0. He can do\nthe following operation with his number several (possibly zero) times: Reverse\nthe prefix of length \n    l\n (in other words, \n    l\n leftmost digits) of\n\n    n\n. So, the leftmost digit is swapped with the \n    l\n-th digit from the\nleft, the second digit from the left swapped with (\n    l-1\n)-th left, etc.\nFor example, if \n    n=123456789\n and \n    l=5\n, then the new value of \n    n\n\nwill be \n    543216789\n.Note that for different operations, the values of\n\n    l\n can be different. The number \n    l\n can be equal to the length of the\nnumber \n    n\n \u2014 in this case, the whole number \n    n\n is reversed. Polycarp\nloves even numbers. Therefore, he wants to make his number even. At the same\ntime, Polycarp is very impatient. He wants to do as few operations as\npossible. Help Polycarp. Determine the minimum number of operations he needs\nto perform with the number \n    n\n to make it even or determine that this is\nimpossible. You need to answer \n    t\n independent test cases. Input The first\nline contains the number \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of\ntest cases. Each of the following \n    t\n lines contains one integer \n    n\n\n(\n    1 \n    \u2264 n < 10^9\n). It is guaranteed that the given number doesn't\ncontain the digit 0. Output Print \n    t\n lines. On each line print one\ninteger \u2014 the answer to the corresponding test case. If it is impossible to\nmake an even number, print -1. Example Input 4 3876 387 4489 3 Output 0 2 1 -1\nNote In the first test case, \n    n=3876\n, which is already an even number.\nPolycarp doesn't need to do anything, so the answer is \n    0\n. In the second\ntest case, \n    n=387\n. Polycarp needs to do \n    2\n operations: Select\n\n    l=2\n and reverse the prefix \n    387\n. The number \n    n\n\nbecomes \n    837\n. This number is odd. Select \n    l=3\n and reverse the prefix\n\n    837\n. The number \n    n\n becomes \n    738\n. This number is\neven.It can be shown that \n    2\n is the minimum possible number of operations\nthat Polycarp needs to do with his number to make it even. In the third test\ncase, \n    n=4489\n. Polycarp can reverse the whole number (choose a prefix of\nlength \n    l=4\n). It will become \n    9844\n and this is an even number. In\nthe fourth test case, \n    n=3\n. No matter how hard Polycarp tried, he would\nnot be able to make an even number.\n\n",
        "cf_contest_id": 1611,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3876\r\n387\r\n4489\r\n3\r\n",
                "0\r\n2\r\n1\r\n-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n99\r\n",
                "-1\r\n"
            ],
            [
                "1\r\n841419\r\n",
                "1\r\n"
            ],
            [
                "1\r\n21328\r\n",
                "0\r\n"
            ],
            [
                "1\r\n77771449\r\n",
                "2\r\n"
            ],
            [
                "1\r\n87454\r\n",
                "0\r\n"
            ],
            [
                "1\r\n77778\r\n",
                "0\r\n"
            ],
            [
                "1\r\n77774\r\n",
                "0\r\n"
            ]
        ]
    }
]