[
    {
        "name": "Complex Market Analysis",
        "description": "While performing complex market analysis William encountered the following\nproblem: For a given array \n    a\n of size \n    n\n and a natural number\n\n    e\n, calculate the number of pairs of natural numbers \n    (i, k)\n which\nsatisfy the following conditions: \n    1 \n    \u2264 i, k\n \n    i + e \n    \u00b7 k \n    \u2264\n    n\n. Product \n    a_i \n    \u00b7 a_i + e\n    \u00b7 a_i + 2 \n    \u00b7 e\n    \u00b7\n    \u2026\n    \u00b7 a_i + k \n    \u00b7 e\n is a prime number. A prime number (or\na prime) is a natural number greater than 1 that is not a product of two\nsmaller natural numbers. Input Each test contains multiple test cases. The\nfirst line contains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10\n     000\n). Description of the test cases follows. The first line of each\ntest case contains two integers \n    n\n and \n    e\n \n    (1 \n    \u2264 e \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5)\n, the number of items in the array and number \n    e\n,\nrespectively. The second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n \n    (1 \n    \u2264 a_i \n    \u2264 10^6)\n, the contents of the array. It is\nguaranteed that the sum of \n    n\n over all test cases does not exceed \n    2\n    \n    \u00b7 10^5\n. Output For each test case output the answer in the following\nformat: Output one line containing the number of pairs of numbers \n    (i, k)\n\nwhich satisfy the conditions. Example Input 6 7 3 10 2 1 3 1 19 3 3 2 1 13 1 9\n3 2 4 2 1 1 1 1 4 2 3 1 1 1 1 4 1 1 2 1 1 2 2 1 2 Output 2 0 4 0 5 0 Note In\nthe first example test case two pairs satisfy the conditions: \n    i = 2, k =\n    1\n, for which the product is: \n    a_2\n    \u00b7 a_5 = 2\n which is a prime\nnumber. \n    i = 3, k = 1\n, for which the product is: \n    a_3\n    \u00b7 a_6 =\n    19\n which is a prime number. In the second example test case there are no\npairs that satisfy the conditions. In the third example test case four pairs\nsatisfy the conditions: \n    i = 1, k = 1\n, for which the product is: \n    a_1\n    \u00b7 a_4 = 2\n which is a prime number. \n    i = 1, k = 2\n, for which\nthe product is: \n    a_1\n    \u00b7 a_4\n    \u00b7 a_7 = 2\n which is a prime\nnumber. \n    i = 3, k = 1\n, for which the product is: \n    a_3\n    \u00b7 a_6 =\n    2\n which is a prime number. \n    i = 6, k = 1\n, for which the product is:\n\n    a_6\n    \u00b7 a_9 = 2\n which is a prime number. In the fourth example\ntest case there are no pairs that satisfy the conditions. In the fifth example\ntest case five pairs satisfy the conditions: \n    i = 1, k = 1\n, for which the\nproduct is: \n    a_1\n    \u00b7 a_2 = 2\n which is a prime number. \n    i = 1, k\n    = 2\n, for which the product is: \n    a_1\n    \u00b7 a_2\n    \u00b7 a_3 = 2\n\nwhich is a prime number. \n    i = 1, k = 3\n, for which the product is:\n\n    a_1\n    \u00b7 a_2\n    \u00b7 a_3\n    \u00b7 a_4 = 2\n which is a prime\nnumber. \n    i = 2, k = 1\n, for which the product is: \n    a_2\n    \u00b7 a_3 =\n    2\n which is a prime number. \n    i = 2, k = 2\n, for which the product is:\n\n    a_2\n    \u00b7 a_3\n    \u00b7 a_4 = 2\n which is a prime number. In the\nsixth example test case there are no pairs that satisfy the conditions.\n\n",
        "cf_contest_id": 1609,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "dp",
            "implementation",
            "number theory",
            "schedules",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n7 3\r\n10 2 1 3 1 19 3\r\n3 2\r\n1 13 1\r\n9 3\r\n2 4 2 1 1 1 1 4 2\r\n3 1\r\n1 1 1\r\n4 1\r\n1 2 1 1\r\n2 2\r\n1 2\r\n",
                "2\r\n0\r\n4\r\n0\r\n5\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n10 3\r\n1 1 921703 876665 1 1 1 1 914189 1\r\n10 2\r\n1 1 1 422549 1 1 880667 81267 1 1\r\n10 2\r\n1 717091 1 1 1 1 22573 1 4694 1\r\n10 9\r\n593041 1 1 1 1 1 954668 1 699271 1\r\n10 8\r\n744738 388231 1 436531 1 1 1 1 1 1\r\n10 5\r\n1 461917 1 246523 1 300055 1 1 1 1\r\n10 10\r\n1 1 1 3016 374177 1 1 504727 1 1\r\n10 6\r\n1 1 33503 1 219684 320791 1 1 1 1\r\n10 6\r\n1 1 40903 1 991030 1 1 147709 1 1\r\n10 9\r\n528131 367369 1 1 1 1 1 125589 1 1\r\n",
                "2\r\n10\r\n7\r\n1\r\n1\r\n2\r\n0\r\n1\r\n2\r\n1\r\n"
            ],
            [
                "1\r\n2 1\r\n999997 1\r\n",
                "0\r\n"
            ]
        ]
    }
]