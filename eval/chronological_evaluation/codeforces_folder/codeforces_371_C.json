[
    {
        "name": "Hamburgers",
        "description": "Polycarpus loves hamburgers very much. He especially adores the hamburgers he\nmakes with his own hands. Polycarpus thinks that there are only three decent\ningredients to make hamburgers from: a bread, sausage and cheese. He writes\ndown the recipe of his favorite \"Le Hamburger de Polycarpus\" as a string of\nletters 'B' (bread), 'S' (sausage) \u0438 'C' (cheese). The ingredients in the\nrecipe go from bottom to top, for example, recipe \"\u0412SCBS\" represents the\nhamburger where the ingredients go from bottom to top as bread, sausage,\ncheese, bread and sausage again. Polycarpus has nb pieces of bread, ns pieces\nof sausage and nc pieces of cheese in the kitchen. Besides, the shop nearby\nhas all three ingredients, the prices are pb rubles for a piece of bread, ps\nfor a piece of sausage and pc for a piece of cheese. Polycarpus has r rubles\nand he is ready to shop on them. What maximum number of hamburgers can he\ncook? You can assume that Polycarpus cannot break or slice any of the pieces\nof bread, sausage or cheese. Besides, the shop has an unlimited number of\npieces of each ingredient. Input The first line of the input contains a non-\nempty string that describes the recipe of \"Le Hamburger de Polycarpus\". The\nlength of the string doesn't exceed 100, the string contains only letters 'B'\n(uppercase English B), 'S' (uppercase English S) and 'C' (uppercase English\nC). The second line contains three integers nb, ns, nc (1 \u2264 nb, ns, nc \u2264 100)\n\u2014 the number of the pieces of bread, sausage and cheese on Polycarpus'\nkitchen. The third line contains three integers pb, ps, pc (1 \u2264 pb, ps, pc \u2264\n100) \u2014 the price of one piece of bread, sausage and cheese in the shop.\nFinally, the fourth line contains integer r (1 \u2264 r \u2264 10^12) \u2014 the number of\nrubles Polycarpus has. Please, do not write the \nwrite 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or\nthe \ncan make. If he can't make any hamburger, print 0. Examples Input BBBSSC 6 4 1\n1 2 3 4 Output 2 Input BBC 1 10 1 1 10 1 21 Output 7 Input BSC 1 1 1 1 1 3\n1000000000000 Output 200000000001\n\n",
        "cf_contest_id": 371,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "BBBSSC\r\n6 4 1\r\n1 2 3\r\n4\r\n",
                "2\r\n"
            ],
            [
                "BBC\r\n1 10 1\r\n1 10 1\r\n21\r\n",
                "7\r\n"
            ],
            [
                "BSC\r\n1 1 1\r\n1 1 3\r\n1000000000000\r\n",
                "200000000001\r\n"
            ]
        ],
        "private_cases": [
            [
                "B\r\n1 1 1\r\n1 1 1\r\n381\r\n",
                "382\r\n"
            ],
            [
                "BSC\r\n3 5 6\r\n7 3 9\r\n100\r\n",
                "10\r\n"
            ],
            [
                "BSC\r\n100 1 1\r\n100 1 1\r\n100\r\n",
                "51\r\n"
            ],
            [
                "SBBCCSBB\r\n1 50 100\r\n31 59 21\r\n100000\r\n",
                "370\r\n"
            ],
            [
                "BBBBCCCCCCCCCCCCCCCCCCCCSSSSBBBBBBBBSS\r\n100 100 100\r\n1 1 1\r\n3628800\r\n",
                "95502\r\n"
            ],
            [
                "BBBBBBBBBBCCCCCCCCCCCCCCCCCCCCSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\r\n10 20 40\r\n100 100 100\r\n200\r\n",
                "0\r\n"
            ],
            [
                "BBBBBBBBBBCCCCCCCCCCCCCCCCCCCCSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\r\n10 20 40\r\n100 100 100\r\n2000\r\n",
                "1\r\n"
            ],
            [
                "BBBBBBBBBBCCCCCCCCCCCCCCCCCCCCSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\r\n10 20 40\r\n100 100 100\r\n300\r\n",
                "0\r\n"
            ],
            [
                "BBBBBBBBBBCCCCCCCCCCCCCCCCCCCCSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\r\n10 20 40\r\n100 100 100\r\n300000000\r\n",
                "42858\r\n"
            ],
            [
                "BBBBBBBBBBCCCCCCCCCCCCCCCCCCCCSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\r\n10 20 40\r\n100 100 100\r\n914159265358\r\n",
                "130594181\r\n"
            ],
            [
                "SSSSSSSSSSBBBBBBBBBCCCCCCCCCCCCCCCCCCCSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSBB\r\n31 53 97\r\n13 17 31\r\n914159265358\r\n",
                "647421579\r\n"
            ],
            [
                "BBBCSBSBBSSSSCCCCBBCSBBBBSSBBBCBSCCSSCSSCSBSSSCCCCBSCSSBSSSCCCBBCCCSCBCBBCCSCCCCSBBCCBBBBCCCCCCBSSCB\r\n91 87 17\r\n64 44 43\r\n958532915587\r\n",
                "191668251\r\n"
            ],
            [
                "CSSCBBCCCSBSCBBBCSBBBCBSBCSCBCSCBCBSBCBCSSBBSBBCBBBBSCSBBCCBCCBCBBSBSBCSCSBBSSBBCSSBCSCSCCSSBCBBCBSB\r\n56 34 48\r\n78 6 96\r\n904174875419\r\n",
                "140968956\r\n"
            ],
            [
                "CCSCCCSBBBSCBSCSCCSSBBBSSBBBSBBBCBCSSBCSCBBCCCBCBCBCCCSSBSBBCCCCCBBSCBSCBCBBCBBCSSBCSBSSCCSCCSCCBBBS\r\n33 73 67\r\n4 56 42\r\n886653164314\r\n",
                "277425898\r\n"
            ],
            [
                "SBCSSCBBSSBCSSBBBSSBSCBSSSCBBSBBBBCSBCSBSCBSCBSCBSBSSCCCCBSBCCBCBSCCCBSCCBSBBCBSSCCCCSBSBBBSSSBCSCBC\r\n94 16 85\r\n14 18 91\r\n836590091442\r\n",
                "217522127\r\n"
            ],
            [
                "BSCSBSCCSCSSCCCSBCSSBCBBSCCBSCCSSSSSSSSSCCSBSCCBBCBBSBSCCCCBCSBSBSSBBBBBSSBSSCBCCSSBSSSCBBCSBBSBCCCB\r\n67 54 8\r\n36 73 37\r\n782232051273\r\n",
                "154164772\r\n"
            ],
            [
                "CBBCBSBCCSCBSSCCBCSBCSBBSCBBCSCCBSCCSCSBBSSBSBSCBBSBBCSSSSBBBBSBBCBCSBBCBCSSBBCSBSCCSCSBCSCBSCCBBCSC\r\n71 71 52\r\n52 88 3\r\n654400055575\r\n",
                "137826467\r\n"
            ],
            [
                "CBBCBSBCCSCBSSCCBCSBCSBBSCBBCSCCBSCCSCSBBSBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBCBBCSC\r\n100 1 1\r\n1 17 23\r\n954400055575\r\n",
                "1355681897\r\n"
            ],
            [
                "C\r\n100 100 100\r\n1 1 1\r\n1000000000000\r\n",
                "1000000000100\r\n"
            ],
            [
                "SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\r\n100 100 100\r\n100 100 100\r\n1000000000000\r\n",
                "100000001\r\n"
            ],
            [
                "B\r\n100 100 100\r\n1 1 1\r\n1\r\n",
                "101\r\n"
            ],
            [
                "SC\r\n2 1 1\r\n1 1 1\r\n100000000000\r\n",
                "50000000001\r\n"
            ],
            [
                "B\r\n100 1 1\r\n1 1 1\r\n1000000000000\r\n",
                "1000000000100\r\n"
            ],
            [
                "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\r\n1 1 1\r\n100 100 100\r\n1000000000000\r\n",
                "100000000\r\n"
            ],
            [
                "CC\r\n1 1 1\r\n100 100 100\r\n1\r\n",
                "0\r\n"
            ],
            [
                "B\r\n100 100 100\r\n1 1 1\r\n1000000000000\r\n",
                "1000000000100\r\n"
            ],
            [
                "BSC\r\n100 100 100\r\n1 1 1\r\n1000000000000\r\n",
                "333333333433\r\n"
            ],
            [
                "BSC\r\n100 100 100\r\n1 1 1\r\n1\r\n",
                "100\r\n"
            ]
        ]
    }
]