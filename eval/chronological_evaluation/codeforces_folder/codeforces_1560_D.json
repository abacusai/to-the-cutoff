[
    {
        "name": "Make a Power of Two",
        "description": "You are given an integer \n    n\n. In \n    1\n move, you can do one of the\nfollowing actions: erase any digit of the number (it's acceptable that the\nnumber before the operation has exactly one digit and after the operation, it\nis \"empty\"); add one digit to the right. The actions may be performed in any\norder any number of times. Note that if, after deleting some digit from a\nnumber, it will contain leading zeroes, they will not be deleted. E.g. if you\ndelete from the number \n    301\n the digit \n    3\n, the result is the number\n\n    01\n (not \n    1\n). You need to perform the minimum number of actions to\nmake the number any power of \n    2\n (i.e. there's an integer \n    k\n (\n    k\n    \n    \u2265 0\n) such that the resulting number is equal to \n    2^k\n). The\nresulting number must not have leading zeroes. E.g. consider \n    n=1052\n. The\nanswer is equal to \n    2\n. First, let's add to the right one digit \n    4\n\n(the result will be \n    10524\n). Then let's erase the digit \n    5\n, so the\nresult will be \n    1024\n which is a power of \n    2\n. E.g. consider\n\n    n=8888\n. The answer is equal to \n    3\n. Let's erase any of the digits\n\n    8\n three times. The result will be \n    8\n which is a power of \n    2\n.\nInput The first line contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n)\n\u2014 the number of test cases. Then \n    t\n test cases follow. Each test case\nconsists of one line containing one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    10^9\n). Output For each test case, output in a separate line one integer\n\n    m\n \u2014 the minimum number of moves to transform the number into any power\nof \n    2\n. Example Input 12 1052 8888 6 75 128 1 301 12048 1504 6656\n1000000000 687194767 Output 2 3 1 3 0 0 2 1 3 4 9 2 Note The answer for the\nfirst test case was considered above. The answer for the second test case was\nconsidered above. In the third test case, it's enough to add to the right the\ndigit \n    4\n \u2014 the number \n    6\n will turn into \n    64\n. In the fourth test\ncase, let's add to the right the digit \n    8\n and then erase \n    7\n and\n\n    5\n \u2014 the taken number will turn into \n    8\n. The numbers of the fifth\nand the sixth test cases are already powers of two so there's no need to make\nany move. In the seventh test case, you can delete first of all the digit\n\n    3\n (the result is \n    01\n) and then the digit \n    0\n (the result is\n\n    1\n).\n\n",
        "cf_contest_id": 1560,
        "cf_index": "D",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "12\r\n1052\r\n8888\r\n6\r\n75\r\n128\r\n1\r\n301\r\n12048\r\n1504\r\n6656\r\n1000000000\r\n687194767\r\n",
                "2\r\n3\r\n1\r\n3\r\n0\r\n0\r\n2\r\n1\r\n3\r\n4\r\n9\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1\r\n1\r\n",
                "0\r\n0\r\n"
            ],
            [
                "3\r\n1\r\n1\r\n1\r\n",
                "0\r\n0\r\n0\r\n"
            ],
            [
                "1\r\n99999\r\n",
                "6\r\n"
            ]
        ]
    }
]