[
    {
        "name": "2^Sort",
        "description": "Given an array \n    a\n of length \n    n\n and an integer \n    k\n, find the\nnumber of indices \n    1 \n    \u2264 i \n    \u2264 n - k\n such that the subarray\n\n    [a_i, \n    \u2026, a_i+k]\n with length \n    k+1\n (not with length \n    k\n)\nhas the following property: If you multiply the first element by \n    2^0\n,\nthe second element by \n    2^1\n, ..., and the (\n    k+1\n)-st element by\n\n    2^k\n, then this subarray is sorted in strictly increasing order. More\nformally, count the number of indices \n    1 \n    \u2264 i \n    \u2264 n - k\n such that\n\n    \n\n    2^0 \n    \u00b7 a_i < 2^1 \n    \u00b7 a_i+1 < 2^2 \n    \u00b7 a_i+2 < \n    \u2026 <\n    2^k \n    \u00b7 a_i+k.\n\n    \n Input The first line contains an integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The first line of\neach test case contains two integers \n    n\n, \n    k\n (\n    3 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n, \n    1 \n    \u2264 k < n\n) \u2014 the length of the array and the\nnumber of inequalities. The second line of each test case contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the\nelements of the array. The sum of \n    n\n across all test cases does not\nexceed \n    2 \n    \u00b7 10^5\n. Output For each test case, output a single\ninteger \u2014 the number of indices satisfying the condition in the statement.\nExample Input 6 4 2 20 22 19 84 5 1 9 5 3 2 1 5 2 9 5 3 2 1 7 2 22 12 16 4 3\n22 12 7 3 22 12 16 4 3 22 12 9 3 3 9 12 3 9 12 3 9 12 Output 2 3 2 3 1 0 Note\nIn the first test case, both subarrays satisfy the condition: \n    i=1\n: the\nsubarray \n    [a_1,a_2,a_3] = [20,22,19]\n, and \n    1 \n    \u00b7 20 < 2 \n    \u00b7 22\n    < 4 \n    \u00b7 19\n. \n    i=2\n: the subarray \n    [a_2,a_3,a_4] = [22,19,84]\n,\nand \n    1 \n    \u00b7 22 < 2 \n    \u00b7 19 < 4 \n    \u00b7 84\n. In the second test case,\nthree subarrays satisfy the condition: \n    i=1\n: the subarray \n    [a_1,a_2] =\n    [9,5]\n, and \n    1 \n    \u00b7 9 < 2 \n    \u00b7 5\n. \n    i=2\n: the subarray\n\n    [a_2,a_3] = [5,3]\n, and \n    1 \n    \u00b7 5 < 2 \n    \u00b7 3\n. \n    i=3\n: the\nsubarray \n    [a_3,a_4] = [3,2]\n, and \n    1 \n    \u00b7 3 < 2 \n    \u00b7 2\n.\n\n    i=4\n: the subarray \n    [a_4,a_5] = [2,1]\n, but \n    1 \n    \u00b7 2 = 2\n    \n    \u00b7 1\n, so this subarray doesn't satisfy the condition.\n\n",
        "cf_contest_id": 1692,
        "cf_index": "G",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n4 2\r\n20 22 19 84\r\n5 1\r\n9 5 3 2 1\r\n5 2\r\n9 5 3 2 1\r\n7 2\r\n22 12 16 4 3 22 12\r\n7 3\r\n22 12 16 4 3 22 12\r\n9 3\r\n3 9 12 3 9 12 3 9 12\r\n",
                "2\r\n3\r\n2\r\n3\r\n1\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n50 40\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n34 33\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 1000000000 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n35 34\r\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n64 63\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 4 2 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n38 37\r\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n40 39\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n40 35\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 1 1 1\r\n",
                "2\r\n"
            ],
            [
                "1\r\n49 37\r\n36 12 48 13 44 8 11 50 34 7 29 21 12 34 42 44 45 44 26 45 23 46 36 27 20 28 32 49 44 50 29 49 41 28 25 15 50 50 50 44 39 16 14 9 33 35 45 27 11\r\n",
                "0\r\n"
            ]
        ]
    }
]