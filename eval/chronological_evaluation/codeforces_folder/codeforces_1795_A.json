[
    {
        "name": "Two Towers",
        "description": "There are two towers consisting of blocks of two colors: red and blue. Both\ntowers are represented by strings of characters B and/or R denoting the order\nof blocks in them from the bottom to the top, where B corresponds to a blue\nblock, and R corresponds to a red block. These two towers are represented by\nstrings BRBB and RBR. You can perform the following operation any number of\ntimes: choose a tower with at least two blocks, and move its top block to the\ntop of the other tower. The pair of towers is beautiful if no pair of touching\nblocks has the same color; i. e. no red block stands on top of another red\nblock, and no blue block stands on top of another blue block. You have to\ncheck if it is possible to perform any number of operations (possibly zero) to\nmake the pair of towers beautiful. Input The first line contains one integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. Each test\ncase consists of three lines: the first line contains two integers \n    n\n and\n\n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 20\n) \u2014 the number of blocks in the first\ntower and the number of blocks in the second tower, respectively; the second\nline contains \n    s\n \u2014 a string of exactly \n    n\n characters B and/or R,\ndenoting the first tower; the third line contains \n    t\n \u2014 a string of\nexactly \n    m\n characters B and/or R, denoting the second tower. Output For\neach test case, print YES if it is possible to perform several (possibly zero)\noperations in such a way that the pair of towers becomes beautiful; otherwise\nprint NO. You may print each letter in any case (YES, yes, Yes will all be\nrecognized as positive answer, NO, no and nO will all be recognized as\nnegative answer). Example Input 4 4 3 BRBB RBR 4 7 BRBR RRBRBRB 3 4 RBR BRBR 5\n4 BRBRR BRBR Output YES YES YES NO Note In the first test case, you can move\nthe top block from the first tower to the second tower (see the third\npicture). In the second test case, you can move the top block from the second\ntower to the first tower \n    6\n times. In the third test case, the pair of\ntowers is already beautiful.\n\n",
        "cf_contest_id": 1795,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n4 3\r\nBRBB\r\nRBR\r\n4 7\r\nBRBR\r\nRRBRBRB\r\n3 4\r\nRBR\r\nBRBR\r\n5 4\r\nBRBRR\r\nBRBR\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "23\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "5\r\n4 3\r\nBRBB\r\nRBR\r\n4 7\r\nBRBR\r\nRRBRBRB\r\n3 4\r\nRBR\r\nBRBR\r\n5 4\r\nBRBRR\r\nBRBR\r\n4 5\r\nBRBR\r\nRBRBR\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\nYES\r\n"
            ],
            [
                "9\r\n4 3\r\nBRBB\r\nRBR\r\n4 7\r\nBRBR\r\nRRBRBRB\r\n3 4\r\nRBR\r\nBRBR\r\n5 4\r\nBRBRR\r\nBRBR\r\n4 3\r\nBRBB\r\nRBR\r\n4 7\r\nBRBR\r\nRRBRBRB\r\n3 4\r\nRBR\r\nBRBR\r\n5 4\r\nBRBRR\r\nBRBR\r\n4 3\r\nBRBB\r\nRBR\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\nYES\r\nYES\r\nYES\r\nNO\r\nYES\r\n"
            ],
            [
                "5\r\n4 3\r\nBRBB\r\nRBR\r\n4 7\r\nBRBR\r\nRRBRBRB\r\n3 4\r\nRBR\r\nBRBR\r\n5 4\r\nBRBRR\r\nBRBR\r\n4 3\r\nBRBB\r\nRBR\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\nYES\r\n"
            ],
            [
                "5\r\n1 1\r\nB\r\nB\r\n1 1\r\nB\r\nB\r\n1 1\r\nB\r\nB\r\n1 1\r\nB\r\nB\r\n1 1\r\nB\r\nB\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "5\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "5\r\n4 4\r\nBBBB\r\nRRBB\r\n4 4\r\nBBBB\r\nRRBB\r\n4 4\r\nBBBB\r\nRRBB\r\n4 5\r\nBBBB\r\nRRBBR\r\n4 5\r\nBBBB\r\nRRBBR\r\n",
                "NO\r\nNO\r\nNO\r\nNO\r\nNO\r\n"
            ],
            [
                "5\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n1 1\r\nR\r\nB\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "5\r\n4 3\r\nBRBB\r\nRBR\r\n4 7\r\nBRBR\r\nRRBRBRB\r\n3 4\r\nRBR\r\nBRBR\r\n5 4\r\nBRBRR\r\nBRBR\r\n1 1\r\nB\r\nB\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\nYES\r\n"
            ],
            [
                "1\r\n1 1\r\nR\r\nB\r\n",
                "YES\r\n"
            ],
            [
                "10\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "7\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n1 1\r\nR\r\nR\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "2\r\n1 2\r\nR\r\nRB\r\n1 2\r\nR\r\nRB\r\n",
                "YES\r\nYES\r\n"
            ]
        ]
    }
]