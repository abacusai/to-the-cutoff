[
    {
        "name": "The Door Problem",
        "description": "Moriarty has trapped n people in n distinct rooms in a hotel. Some rooms are\nlocked, others are unlocked. But, there is a condition that the people in the\nhotel can only escape when all the doors are unlocked at the same time. There\nare m switches. Each switch control doors of some rooms, but each door is\ncontrolled by exactly two switches. You are given the initial configuration of\nthe doors. Toggling any switch, that is, turning it ON when it is OFF, or\nturning it OFF when it is ON, toggles the condition of the doors that this\nswitch controls. Say, we toggled switch 1, which was connected to room 1, 2\nand 3 which were respectively locked, unlocked and unlocked. Then, after\ntoggling the switch, they become unlocked, locked and locked. You need to tell\nSherlock, if there exists a way to unlock all doors at the same time. Input\nFirst line of input contains two integers n and m (2 \u2264 n \u2264 10^5, 2 \u2264 m \u2264 10^5)\n\u2014 the number of rooms and the number of switches. Next line contains n space-\nseparated integers r1, r2, ..., rn (0 \u2264 ri \u2264 1) which tell the status of room\ndoors. The i-th room is locked if ri = 0, otherwise it is unlocked. The i-th\nof next m lines contains an integer xi (0 \u2264 xi \u2264 n) followed by xi distinct\nintegers separated by space, denoting the number of rooms controlled by the\ni-th switch followed by the room numbers that this switch controls. It is\nguaranteed that the room numbers are in the range from 1 to n. It is\nguaranteed that each door is controlled by exactly two switches. Output Output\n\"YES\" without quotes, if it is possible to open all doors at the same time,\notherwise output \"NO\" without quotes. Examples Input 3 3 1 0 1 2 1 3 2 1 2 2 2\n3 Output NO Input 3 3 1 0 1 3 1 2 3 1 2 2 1 3 Output YES Input 3 3 1 0 1 3 1 2\n3 2 1 2 1 3 Output NO Note In the second example input, the initial statuses\nof the doors are [1, 0, 1] (0 means locked, 1 \u2014 unlocked). After toggling\nswitch 3, we get [0, 0, 0] that means all doors are locked. Then, after\ntoggling switch 1, we get [1, 1, 1] that means all doors are unlocked. It can\nbe seen that for the first and for the third example inputs it is not possible\nto make all doors unlocked.\n\n",
        "cf_contest_id": 776,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "2-sat",
            "dfs and similar",
            "dsu",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n1 0 1\r\n2 1 3\r\n2 1 2\r\n2 2 3\r\n",
                "NO\r\n"
            ],
            [
                "3 3\r\n1 0 1\r\n3 1 2 3\r\n1 2\r\n2 1 3\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n1 0 1\r\n3 1 2 3\r\n2 1 2\r\n1 3\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "11 10\r\n0 0 1 0 0 0 0 1 1 0 1\r\n3 2 3 11\r\n1 3\r\n2 6 7\r\n1 5\r\n1 11\r\n1 10\r\n5 4 6 8 9 10\r\n2 1 5\r\n1 7\r\n5 1 2 4 8 9\r\n",
                "NO\r\n"
            ],
            [
                "10 9\r\n1 0 1 1 0 1 0 0 1 0\r\n4 2 3 9 10\r\n4 3 4 5 8\r\n2 1 6\r\n2 7 8\r\n1 7\r\n1 5\r\n1 10\r\n2 2 4\r\n3 1 6 9\r\n",
                "NO\r\n"
            ],
            [
                "13 11\r\n0 1 1 0 1 0 0 0 1 0 0 1 1\r\n6 2 8 9 11 12 13\r\n3 1 3 11\r\n1 12\r\n1 7\r\n3 6 10 13\r\n3 1 3 8\r\n2 7 9\r\n1 4\r\n1 2\r\n2 5 10\r\n3 4 5 6\r\n",
                "NO\r\n"
            ],
            [
                "7 6\r\n0 0 1 0 1 0 0\r\n1 7\r\n4 1 2 5 7\r\n2 4 6\r\n2 4 5\r\n3 1 3 6\r\n2 2 3\r\n",
                "NO\r\n"
            ],
            [
                "2 2\r\n1 0\r\n2 1 2\r\n2 1 2\r\n",
                "NO\r\n"
            ],
            [
                "2 2\r\n0 0\r\n2 1 2\r\n2 1 2\r\n",
                "YES\r\n"
            ],
            [
                "4 4\r\n0 1 0 1\r\n2 1 2\r\n2 2 3\r\n2 3 4\r\n2 1 4\r\n",
                "YES\r\n"
            ],
            [
                "2 2\r\n1 1\r\n2 1 2\r\n2 1 2\r\n",
                "YES\r\n"
            ],
            [
                "4 4\r\n0 0 1 1\r\n2 1 3\r\n2 2 3\r\n2 1 4\r\n2 2 4\r\n",
                "YES\r\n"
            ],
            [
                "4 4\r\n0 1 0 1\r\n2 1 2\r\n2 2 3\r\n2 3 4\r\n2 4 1\r\n",
                "YES\r\n"
            ],
            [
                "2 3\r\n1 0\r\n1 1\r\n2 1 2\r\n1 2\r\n",
                "YES\r\n"
            ],
            [
                "4 5\r\n0 0 0 1\r\n2 1 2\r\n1 1\r\n2 2 3\r\n2 3 4\r\n1 4\r\n",
                "YES\r\n"
            ],
            [
                "3 6\r\n0 0 0\r\n0\r\n0\r\n0\r\n2 1 2\r\n2 2 3\r\n2 1 3\r\n",
                "NO\r\n"
            ],
            [
                "3 3\r\n1 0 0\r\n2 1 2\r\n2 1 3\r\n2 2 3\r\n",
                "YES\r\n"
            ],
            [
                "4 4\r\n0 0 0 0\r\n2 1 2\r\n2 1 2\r\n2 3 4\r\n2 3 4\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n0 1 0\r\n2 1 3\r\n2 1 2\r\n2 2 3\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n0 1 0\r\n2 1 3\r\n2 2 3\r\n2 1 2\r\n",
                "YES\r\n"
            ],
            [
                "4 4\r\n1 1 1 0\r\n2 1 2\r\n2 1 2\r\n2 3 4\r\n2 3 4\r\n",
                "NO\r\n"
            ],
            [
                "3 4\r\n1 1 0\r\n2 1 2\r\n2 1 2\r\n1 3\r\n1 3\r\n",
                "YES\r\n"
            ],
            [
                "2 4\r\n0 0\r\n1 1\r\n1 1\r\n1 2\r\n1 2\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n0 0 0\r\n2 1 2\r\n2 2 3\r\n2 1 3\r\n",
                "NO\r\n"
            ]
        ]
    }
]