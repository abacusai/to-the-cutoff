[
    {
        "name": "Travelling Through the Snow Queen's Kingdom",
        "description": "Gerda is travelling to the palace of the Snow Queen. The road network consists\nof n intersections and m bidirectional roads. Roads are numbered from 1 to m.\nSnow Queen put a powerful spell on the roads to change the weather conditions\nthere. Now, if Gerda steps on the road i at the moment of time less or equal\nto i, she will leave the road exactly at the moment i. In case she steps on\nthe road i at the moment of time greater than i, she stays there forever.\nGerda starts at the moment of time l at the intersection number s and goes to\nthe palace of the Snow Queen, located at the intersection number t. Moreover,\nshe has to be there at the moment r (or earlier), before the arrival of the\nQueen. Given the description of the road network, determine for q queries li,\nri, si and ti if it's possible for Gerda to get to the palace on time. Input\nThe first line of the input contains integers n, m and q (2 \u2264 n \u2264 1000, 1 \u2264 m,\nq \u2264 200 000) \u2014 the number of intersections in the road network of Snow Queen's\nKingdom, the number of roads and the number of queries you have to answer. The\ni-th of the following m lines contains the description of the road number i.\nThe description consists of two integers vi and ui (1 \u2264 vi, ui \u2264 n, vi \u2260 ui) \u2014\nthe indices of the intersections connected by the i-th road. It's possible to\nget both from vi to ui and from ui to vi using only this road. Each pair of\nintersection may appear several times, meaning there are several roads\nconnecting this pair. Last q lines contain the queries descriptions. Each of\nthem consists of four integers li, ri, si and ti (1 \u2264 li \u2264 ri \u2264 m, 1 \u2264 si, ti\n\u2264 n, si \u2260 ti) \u2014 the moment of time Gerda starts her journey, the last moment\nof time she is allowed to arrive to the palace, the index of the starting\nintersection and the index of the intersection where palace is located. Output\nFor each query print \"Yes\" (without quotes) if Gerda can be at the Snow Queen\npalace on time (not later than ri) or \"No\" (without quotes) otherwise. Example\nInput 5 4 6 1 2 2 3 3 4 3 5 1 3 1 4 1 3 2 4 1 4 4 5 1 4 4 1 2 3 1 4 2 2 2 3\nOutput Yes Yes Yes No No Yes\n\n",
        "cf_contest_id": 685,
        "cf_index": "E",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force",
            "divide and conquer",
            "graphs"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4 6\r\n1 2\r\n2 3\r\n3 4\r\n3 5\r\n1 3 1 4\r\n1 3 2 4\r\n1 4 4 5\r\n1 4 4 1\r\n2 3 1 4\r\n2 2 2 3\r\n",
                "Yes\r\nYes\r\nYes\r\nNo\r\nNo\r\nYes\r\n"
            ]
        ],
        "private_cases": []
    }
]