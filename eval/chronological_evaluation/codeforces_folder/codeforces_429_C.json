[
    {
        "name": "Guess the Tree",
        "description": "Iahub and Iahubina went to a picnic in a forest full of trees. Less than 5\nminutes passed before Iahub remembered of trees from programming. Moreover, he\ninvented a new problem and Iahubina has to solve it, otherwise Iahub won't\ngive her the food. Iahub asks Iahubina: can you build a rooted tree, such that\neach internal node (a node with at least one son) has at least two sons; node\ni has ci nodes in its subtree? Iahubina has to guess the tree. Being a smart\ngirl, she realized that it's possible no tree can follow Iahub's restrictions.\nIn this way, Iahub will eat all the food. You need to help Iahubina: determine\nif there's at least one tree following Iahub's restrictions. The required tree\nmust contain n nodes. Input The first line of the input contains integer n (1\n\u2264 n \u2264 24). Next line contains n positive integers: the i-th number represents\nci (1 \u2264 ci \u2264 n). Output Output on the first line \"YES\" (without quotes) if\nthere exist at least one tree following Iahub's restrictions, otherwise output\n\"NO\" (without quotes). Examples Input 4 1 1 1 4 Output YES Input 5 1 1 5 2 1\nOutput NO\n\n",
        "cf_contest_id": 429,
        "cf_index": "C",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "constructive algorithms",
            "dp",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 1 1 4\r\n",
                "YES\r\n"
            ],
            [
                "5\r\n1 1 5 2 1\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "13\r\n1 1 1 1 1 1 1 1 1 4 4 4 13\r\n",
                "YES\r\n"
            ],
            [
                "4\r\n1 1 1 3\r\n",
                "NO\r\n"
            ],
            [
                "24\r\n1 1 1 1 1 1 1 1 1 1 1 1 24 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "24\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\r\n",
                "NO\r\n"
            ],
            [
                "10\r\n1 1 1 1 7 1 1 1 4 10\r\n",
                "YES\r\n"
            ],
            [
                "24\r\n1 1 3 1 1 10 2 9 13 1 8 1 4 1 3 24 1 1 1 1 4 1 3 1\r\n",
                "NO\r\n"
            ],
            [
                "24\r\n2 3 20 1 4 9 1 3 1 2 1 3 1 2 1 1 1 2 1 2 4 24 2 1\r\n",
                "NO\r\n"
            ],
            [
                "24\r\n8 5 3 1 1 5 10 1 1 1 1 5 1 2 7 3 4 1 1 24 1 1 2 8\r\n",
                "NO\r\n"
            ],
            [
                "24\r\n1 1 1 3 4 1 24 1 1 3 1 1 1 5 14 2 17 1 2 2 5 1 1 6\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n1\r\n",
                "YES\r\n"
            ],
            [
                "17\r\n6 1 1 1 3 1 1 17 6 1 4 1 1 1 3 1 1\r\n",
                "YES\r\n"
            ],
            [
                "23\r\n1 1 1 1 3 7 3 1 1 1 3 7 1 3 1 15 1 3 7 3 23 1 1\r\n",
                "YES\r\n"
            ],
            [
                "24\r\n1 24 1 1 1 3 8 1 1 3 1 1 6 1 1 1 1 3 5 1 3 7 13 1\r\n",
                "YES\r\n"
            ],
            [
                "16\r\n1 1 1 1 1 1 1 1 1 1 1 1 16 1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "21\r\n1 1 1 6 1 1 13 21 1 1 3 1 8 1 19 3 3 1 1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "22\r\n1 1 1 6 1 1 13 21 1 1 2 1 8 1 19 3 3 1 1 1 1 2\r\n",
                "NO\r\n"
            ],
            [
                "19\r\n9 7 1 8 1 1 1 13 1 1 3 3 19 1 1 1 1 1 1\r\n",
                "NO\r\n"
            ],
            [
                "18\r\n6 1 1 3 1 1 1 1 1 1 4 1 8 1 1 18 1 5\r\n",
                "YES\r\n"
            ],
            [
                "14\r\n4 1 1 1 3 1 1 1 1 14 1 5 1 3\r\n",
                "YES\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "NO\r\n"
            ],
            [
                "24\r\n3 3 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\r\n",
                "NO\r\n"
            ],
            [
                "?",
                "?"
            ],
            [
                "?",
                "?"
            ],
            [
                "?",
                "?"
            ],
            [
                "?",
                "?"
            ],
            [
                "?",
                "?"
            ],
            [
                "?",
                "?"
            ]
        ]
    }
]