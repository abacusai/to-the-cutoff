[
    {
        "name": "Car Repair Shop",
        "description": "Polycarp starts his own business. Tomorrow will be the first working day of\nhis car repair shop. For now the car repair shop is very small and only one\ncar can be repaired at a given time. Polycarp is good at marketing, so he has\nalready collected n requests from clients. The requests are numbered from 1 to\nn in order they came. The i-th request is characterized by two values: si \u2014\nthe day when a client wants to start the repair of his car, di \u2014 duration (in\ndays) to repair the car. The days are enumerated from 1, the first day is\ntomorrow, the second day is the day after tomorrow and so on. Polycarp is\nmaking schedule by processing requests in the order from the first to the n-th\nrequest. He schedules the i-th request as follows: If the car repair shop is\nidle for di days starting from si (si, si + 1, ..., si + di - 1), then these\ndays are used to repair a car of the i-th client. Otherwise, Polycarp finds\nthe first day x (from 1 and further) that there are di subsequent days when no\nrepair is scheduled starting from x. In other words he chooses the smallest\npositive x that all days x, x + 1, ..., x + di - 1 are not scheduled for\nrepair of any car. So, the car of the i-th client will be repaired in the\nrange [x, x + di - 1]. It is possible that the day x when repair is scheduled\nto start will be less than si. Given n requests, you are asked to help\nPolycarp schedule all of them according to the rules above. Input The first\nline contains integer n (1 \u2264 n \u2264 200) \u2014 the number of requests from clients.\nThe following n lines contain requests, one request per line. The i-th request\nis given as the pair of integers si, di (1 \u2264 si \u2264 10^9, 1 \u2264 di \u2264 5\u00b710^6),\nwhere si is the preferred time to start repairing the i-th car, di is the\nnumber of days to repair the i-th car. The requests should be processed in the\norder they are given in the input. Output Print n lines. The i-th line should\ncontain two integers \u2014 the start day to repair the i-th car and the finish day\nto repair the i-th car. Examples Input 3 9 2 7 3 2 4 Output 9 10 1 3 4 7 Input\n4 1000000000 1000000 1000000000 1000000 100000000 1000000 1000000000 1000000\nOutput 1000000000 1000999999 1 1000000 100000000 100999999 1000001 2000000\n\n",
        "cf_contest_id": 730,
        "cf_index": "G",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n9 2\r\n7 3\r\n2 4\r\n",
                "9 10\r\n1 3\r\n4 7\r\n"
            ],
            [
                "4\r\n1000000000 1000000\r\n1000000000 1000000\r\n100000000 1000000\r\n1000000000 1000000\r\n",
                "1000000000 1000999999\r\n1 1000000\r\n100000000 100999999\r\n1000001 2000000\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 1\r\n",
                "1 1\r\n"
            ],
            [
                "1\r\n1000000000 1\r\n",
                "1000000000 1000000000\r\n"
            ],
            [
                "1\r\n1000000000 5000000\r\n",
                "1000000000 1004999999\r\n"
            ],
            [
                "5\r\n6 2\r\n10 1\r\n10 2\r\n9 2\r\n5 1\r\n",
                "6 7\r\n10 10\r\n1 2\r\n3 4\r\n5 5\r\n"
            ],
            [
                "10\r\n1 3\r\n77 8\r\n46 5\r\n83 4\r\n61 7\r\n8 4\r\n54 7\r\n80 7\r\n33 7\r\n13 4\r\n",
                "1 3\r\n77 84\r\n46 50\r\n4 7\r\n61 67\r\n8 11\r\n54 60\r\n12 18\r\n33 39\r\n19 22\r\n"
            ],
            [
                "10\r\n588 12\r\n560 10\r\n593 14\r\n438 15\r\n761 11\r\n984 6\r\n503 2\r\n855 19\r\n538 2\r\n650 7\r\n",
                "588 599\r\n560 569\r\n1 14\r\n438 452\r\n761 771\r\n984 989\r\n503 504\r\n855 873\r\n538 539\r\n650 656\r\n"
            ],
            [
                "20\r\n360 26\r\n475 17\r\n826 12\r\n815 23\r\n567 28\r\n897 26\r\n707 20\r\n1000 9\r\n576 5\r\n16 5\r\n714 16\r\n630 17\r\n426 26\r\n406 23\r\n899 25\r\n102 22\r\n896 8\r\n320 27\r\n964 25\r\n932 18\r\n",
                "360 385\r\n475 491\r\n826 837\r\n1 23\r\n567 594\r\n897 922\r\n707 726\r\n1000 1008\r\n24 28\r\n29 33\r\n34 49\r\n630 646\r\n426 451\r\n50 72\r\n73 97\r\n102 123\r\n124 131\r\n320 346\r\n964 988\r\n932 949\r\n"
            ],
            [
                "2\r\n10 3\r\n9 2\r\n",
                "10 12\r\n1 2\r\n"
            ],
            [
                "1\r\n1 5000000\r\n",
                "1 5000000\r\n"
            ]
        ]
    }
]