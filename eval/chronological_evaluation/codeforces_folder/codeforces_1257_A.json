[
    {
        "name": "Two Rival Students",
        "description": "You are the gym teacher in the school. There are \n    n\n students in the row.\nAnd there are two rivalling students among them. The first one is in position\n\n    a\n, the second in position \n    b\n. Positions are numbered from \n    1\n\nto \n    n\n from left to right. Since they are rivals, you want to maximize the\ndistance between them. If students are in positions \n    p\n and \n    s\n\nrespectively, then distance between them is \n    |p - s|\n. You can do the\nfollowing operation at most \n    x\n times: choose two adjacent (neighbouring)\nstudents and swap them. Calculate the maximum distance between two rivalling\nstudents after at most \n    x\n swaps. Input The first line contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases. The\nonly line of each test case contains four integers \n    n\n, \n    x\n, \n    a\n\nand \n    b\n (\n    2 \n    \u2264 n \n    \u2264 100\n, \n    0 \n    \u2264 x \n    \u2264 100\n, \n    1 \n    \u2264\n    a, b \n    \u2264 n\n, \n    a \n    \u2260 b\n) \u2014 the number of students in the row, the\nnumber of swaps which you can do, and positions of first and second rivaling\nstudents respectively. Output For each test case print one integer \u2014 the\nmaximum distance between two rivaling students which you can obtain. Example\nInput 3 5 1 3 2 100 33 100 1 6 0 2 3 Output 2 99 1 Note In the first test case\nyou can swap students in positions \n    3\n and \n    4\n. And then the distance\nbetween the rivals is equal to \n    |4 - 2| = 2\n. In the second test case you\ndon't have to swap students. In the third test case you can't swap students.\n\n",
        "cf_contest_id": 1257,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n5 1 3 2\r\n100 33 100 1\r\n6 0 2 3\r\n",
                "2\r\n99\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "22\r\n100 100 100 1\r\n100 100 1 100\r\n100 0 100 1\r\n100 0 1 100\r\n2 0 1 2\r\n2 100 1 2\r\n2 0 2 1\r\n2 100 2 1\r\n100 0 1 2\r\n100 98 1 2\r\n100 97 1 2\r\n100 0 2 1\r\n100 98 2 1\r\n100 97 2 1\r\n100 0 99 100\r\n100 98 99 100\r\n100 97 99 100\r\n100 0 100 99\r\n100 98 100 99\r\n100 97 100 99\r\n100 0 13 37\r\n100 0 66 11\r\n",
                "99\r\n99\r\n99\r\n99\r\n1\r\n1\r\n1\r\n1\r\n1\r\n99\r\n98\r\n1\r\n99\r\n98\r\n1\r\n99\r\n98\r\n1\r\n99\r\n98\r\n24\r\n55\r\n"
            ],
            [
                "1\r\n59 1 1 2\r\n",
                "2\r\n"
            ],
            [
                "1\r\n5 2 3 2\r\n",
                "3\r\n"
            ],
            [
                "1\r\n53 1 3 2\r\n",
                "2\r\n"
            ]
        ]
    }
]