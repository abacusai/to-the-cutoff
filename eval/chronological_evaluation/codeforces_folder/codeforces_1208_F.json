[
    {
        "name": "Bits And Pieces",
        "description": "You are given an array \n    a\n of \n    n\n integers. You need to find the\nmaximum value of \n    a_i | ( a_j\n    & a_k )\n over all triplets\n\n    (i,j,k)\n such that \n    i < j < k\n. Here \n    &\n denotes the bitwise\nAND operation, and \n    |\n denotes the bitwise OR operation. Input The first\nline of input contains the integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264 10^6\n), the\nsize of the array \n    a\n. Next line contains \n    n\n space separated integers\n\n    a_1\n, \n    a_2\n, ..., \n    a_n\n (\n    0 \n    \u2264 a_i\n    \u2264 2 \n    \u00b7\n    10^6\n), representing the elements of the array \n    a\n. Output Output a\nsingle integer, the maximum value of the expression given in the statement.\nExamples Input 3 2 4 6 Output 6 Input 4 2 8 4 7 Output 12 Note In the first\nexample, the only possible triplet is \n    (1, 2, 3)\n. Hence, the answer is\n\n    2 | (4 \n    & 6) = 6\n. In the second example, there are \n    4\n possible\ntriplets: \n    (1, 2, 3)\n, value of which is \n    2|(8\n    &4) = 2\n. \n    (1, 2,\n    4)\n, value of which is \n    2|(8\n    &7) = 2\n. \n    (1, 3, 4)\n, value of which\nis \n    2|(4\n    &7) = 6\n. \n    (2, 3, 4)\n, value of which is \n    8|(4\n    &7) =\n    12\n. The maximum value hence is \n    12\n.\n\n",
        "cf_contest_id": 1208,
        "cf_index": "F",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dfs and similar",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2 4 6\r\n",
                "6\r\n"
            ],
            [
                "4\r\n2 8 4 7\r\n",
                "12\r\n"
            ]
        ],
        "private_cases": [
            [
                "69\r\n43 63 71 47 63 43 65 91 70 59 59 77 59 59 63 63 47 63 43 43 63 73 43 47 43 47 83 43 91 63 47 74 64 59 63 43 47 47 78 98 63 63 43 69 86 43 67 63 76 87 84 47 47 63 87 63 100 98 80 47 47 59 99 90 73 97 79 63 65\r\n",
                "127\r\n"
            ],
            [
                "75\r\n18 6 93 51 70 18 15 49 94 48 99 52 16 14 22 84 59 81 22 62 55 26 5 90 76 51 80 26 89 30 36 88 48 12 61 34 97 8 7 70 77 74 90 36 28 97 37 18 44 51 96 23 7 48 84 37 46 33 99 42 3 32 61 72 45 6 66 45 71 2 18 18 96 46 41\r\n",
                "127\r\n"
            ],
            [
                "71\r\n25 25 91 91 61 57 99 25 93 89 99 29 31 25 29 89 93 89 91 27 95 95 25 57 63 97 89 93 27 31 61 89 99 59 93 95 29 31 59 99 89 25 25 29 59 89 31 27 63 57 61 89 59 95 91 89 95 59 29 31 31 57 31 93 29 25 63 57 91 91 93\r\n",
                "127\r\n"
            ],
            [
                "3\r\n2 0 0\r\n",
                "2\r\n"
            ],
            [
                "42\r\n82 97 122 98 97 110 116 101 32 117 114 121 32 112 117 115 116 111 118 97 108 111 118 97 33 32 80 114 111 116 99 104 101 110 107 111 32 112 105 116 117 104\r\n",
                "127\r\n"
            ],
            [
                "3\r\n1 5 15\r\n",
                "5\r\n"
            ],
            [
                "3\r\n2 4 2\r\n",
                "2\r\n"
            ],
            [
                "3\r\n0 0 1\r\n",
                "0\r\n"
            ],
            [
                "4\r\n6 1 6 4\r\n",
                "6\r\n"
            ]
        ]
    }
]