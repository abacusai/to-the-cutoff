[
    {
        "name": "Harry Potter and Moving Staircases",
        "description": "Harry Potter lost his Invisibility Cloak, running from the school caretaker\nFilch. Finding an invisible object is not an easy task. Fortunately, Harry has\nfriends who are willing to help. Hermione Granger had read \"The Invisibility\nCloaks, and Everything about Them\", as well as six volumes of \"The\nEncyclopedia of Quick Search of Shortest Paths in Graphs, Network Flows, the\nMaximal Increasing Subsequences and Other Magical Objects\". She has already\ndeveloped a search algorithm for the invisibility cloak in complex dynamic\nsystems (Hogwarts is one of them). Hogwarts consists of n floors, numbered by\nintegers from 1 to n. Some pairs of floors are connected by staircases. The\nstaircases may change its position, moving exactly one end. Formally the\nsituation is like this: if a staircase connects the floors a and b, then in\none move it may modify its position so as to connect the floors a and c or b\nand c, where c is any floor different from a and b. Under no circumstances the\nstaircase can connect a floor with itself. At the same time there can be\nmultiple stairs between a pair of floors. Initially, Harry is on the floor\nwith the number 1. He does not remember on what floor he has lost the cloak\nand wants to look for it on each of the floors. Therefore, his goal is to\nvisit each of n floors at least once. Harry can visit the floors in any order\nand finish the searching at any floor. Nowadays the staircases move quite\nrarely. However, Ron and Hermione are willing to put a spell on any of them to\nhelp Harry find the cloak. To cause less suspicion, the three friends plan to\nmove the staircases one by one, and no more than once for each staircase. In\nbetween shifting the staircases Harry will be able to move about the floors,\nreachable at the moment from the staircases, and look for his Invisibility\nCloak. It is assumed that during all this time the staircases will not move\nspontaneously. Help the three friends to compose a searching plan. If there\nare several variants to solve the problem, any valid option (not necessarily\nthe optimal one) will be accepted. Input The first line contains integers n\nand m (1 \u2264 n \u2264 100000, 0 \u2264 m \u2264 200000), which are the number of floors and\nstaircases in Hogwarts, respectively. The following m lines contain pairs of\nfloors connected by staircases at the initial moment of time. Output In the\nfirst line print \"YES\" (without the quotes) if Harry is able to search all the\nfloors, and \"NO\" otherwise. If the answer is positive, then print on the\nsecond line the number of staircases that Ron and Hermione will have to shift.\nFurther output should look like this: Harry's moves a staircase's move Harry's\nmoves a staircase's move ... a staircase's move Harry's moves Each \"Harry's\nmove\" should be represented as a list of floors in the order in which they\nhave been visited. The total amount of elements of these lists must not exceed\n10^6. When you print each list, first print the number of elements in it, and\nthen in the same line print the actual space-separated elements. The first\nnumber in the first list should be the number 1 (the floor, from which Harry\nbegins to search). Any list except the first one might contain the zero number\nof elements. Note that Harry can visit some floors again, but must visit all n\nfloors at least once. Two consecutively visited floors must be directly\nconnected by a staircase (at the time Harry goes from one of them to the other\none). No two floors that are visited consequtively can be equal. In the\ndescription of a \"staircase's move\" indicate the number of staircase (the\nstaircases are numbered from 1 to m in the order in which they are given in\nthe input data) and its new location (two numbers of the connected floors in\nany order). Any staircase can be moved at most once. If there are several\nsolutions, output any. Examples Input 6 4 1 2 1 3 2 3 4 5 Output YES 2 3 1 2 3\n2 3 5 3 5 4 5 4 5 6 3 6 5 3 Input 4 1 1 2 Output NO Input 5 5 1 2 1 3 3 4 3 5\n4 5 Output YES 0 6 1 2 1 3 4 5\n\n",
        "cf_contest_id": 65,
        "cf_index": "E",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 4\r\n1 2\r\n1 3\r\n2 3\r\n4 5\r\n",
                "YES\r\n2\r\n5 1 3 2 1 2 \r\n1 2 5\r\n3 5 4 5 \r\n4 5 6\r\n5 6 5 2 3 1 \r\n"
            ],
            [
                "4 1\r\n1 2\r\n",
                "NO\r\n"
            ],
            [
                "5 5\r\n1 2\r\n1 3\r\n3 4\r\n3 5\r\n4 5\r\n",
                "YES\r\n0\r\n11 1 3 5 4 3 4 5 3 1 2 1 \r\n"
            ]
        ],
        "private_cases": [
            [
                "3 1\r\n2 1\r\n",
                "YES\r\n1\r\n3 1 2 1 \r\n1 1 3\r\n2 3 1 \r\n"
            ],
            [
                "4 2\r\n1 2\r\n1 2\r\n",
                "YES\r\n2\r\n4 1 2 1 2 \r\n1 2 3\r\n3 3 2 1 \r\n2 1 4\r\n2 4 1 \r\n"
            ],
            [
                "8 7\r\n1 2\r\n2 3\r\n1 3\r\n4 5\r\n5 6\r\n4 6\r\n7 8\r\n",
                "YES\r\n2\r\n5 1 3 2 1 2 \r\n1 2 6\r\n5 6 4 5 6 5 \r\n5 5 8\r\n9 8 7 8 5 4 6 2 3 1 \r\n"
            ],
            [
                "7 3\r\n1 2\r\n5 7\r\n6 7\r\n",
                "YES\r\n3\r\n3 1 2 1 \r\n1 1 7\r\n3 7 6 7 \r\n3 7 3\r\n4 3 7 5 7 \r\n2 7 4\r\n3 4 7 1 \r\n"
            ],
            [
                "12 7\r\n1 2\r\n2 3\r\n1 3\r\n4 5\r\n5 6\r\n4 6\r\n7 8\r\n",
                "YES\r\n6\r\n5 1 3 2 1 2 \r\n1 2 6\r\n5 6 4 5 6 5 \r\n5 5 8\r\n3 8 7 8 \r\n7 8 9\r\n4 9 8 5 4 \r\n4 4 10\r\n3 10 4 6 \r\n6 6 11\r\n4 11 6 2 3 \r\n2 3 12\r\n3 12 3 1 \r\n"
            ],
            [
                "13 7\r\n1 2\r\n2 3\r\n1 3\r\n4 5\r\n5 6\r\n4 6\r\n7 8\r\n",
                "YES\r\n7\r\n5 1 3 2 1 2 \r\n1 2 6\r\n5 6 4 5 6 5 \r\n5 5 8\r\n3 8 7 8 \r\n7 8 9\r\n4 9 8 5 4 \r\n4 4 10\r\n3 10 4 6 \r\n6 6 11\r\n4 11 6 2 3 \r\n2 3 12\r\n3 12 3 1 \r\n3 1 13\r\n2 13 1 \r\n"
            ],
            [
                "14 7\r\n1 2\r\n2 3\r\n1 3\r\n4 5\r\n5 6\r\n4 6\r\n7 8\r\n",
                "NO\r\n"
            ],
            [
                "6 3\r\n1 2\r\n3 4\r\n5 6\r\n",
                "YES\r\n2\r\n3 1 2 1 \r\n1 1 4\r\n3 4 3 4 \r\n2 4 6\r\n5 6 5 6 4 1 \r\n"
            ],
            [
                "6 3\r\n1 4\r\n4 5\r\n5 1\r\n",
                "YES\r\n3\r\n5 1 5 4 1 4 \r\n1 4 2\r\n3 2 4 5 \r\n2 5 3\r\n3 3 5 1 \r\n3 1 6\r\n2 6 1 \r\n"
            ],
            [
                "8 6\r\n1 2\r\n2 3\r\n1 3\r\n4 5\r\n5 6\r\n4 6\r\n",
                "YES\r\n3\r\n5 1 3 2 1 2 \r\n1 2 6\r\n5 6 4 5 6 5 \r\n5 5 7\r\n3 7 5 4 \r\n4 4 8\r\n6 8 4 6 2 3 1 \r\n"
            ],
            [
                "6 2\r\n1 2\r\n5 6\r\n",
                "NO\r\n"
            ],
            [
                "7 3\r\n1 5\r\n5 6\r\n5 7\r\n",
                "YES\r\n3\r\n4 1 5 7 5 \r\n3 5 2\r\n4 2 5 6 5 \r\n2 5 3\r\n3 3 5 1 \r\n1 1 4\r\n2 4 1 \r\n"
            ],
            [
                "1 0\r\n",
                "YES\r\n0\r\n1 1 \r\n"
            ],
            [
                "2 0\r\n",
                "NO\r\n"
            ],
            [
                "3 1\r\n2 3\r\n",
                "NO\r\n"
            ],
            [
                "3 2\r\n2 3\r\n2 3\r\n",
                "YES\r\n1\r\n1 1\r\n2 2 1\r\n4 2 3 2 1 \r\n"
            ],
            [
                "7 3\r\n2 3\r\n4 5\r\n6 7\r\n",
                "NO\r\n"
            ],
            [
                "6 3\r\n2 3\r\n3 4\r\n4 2\r\n",
                "YES\r\n3\r\n1 1\r\n3 4 1\r\n4 4 3 2 3 \r\n1 3 5\r\n3 5 3 4 \r\n2 4 6\r\n3 6 4 1 \r\n"
            ],
            [
                "4 2\r\n2 3\r\n3 4\r\n",
                "YES\r\n2\r\n1 1\r\n1 3 1\r\n3 3 4 3 \r\n2 3 2\r\n3 2 3 1 \r\n"
            ],
            [
                "14 7\r\n2 3\r\n4 3\r\n5 3\r\n6 3\r\n11 12\r\n12 13\r\n11 13\r\n",
                "YES\r\n7\r\n1 1\r\n7 11 1\r\n4 11 12 13 12 \r\n6 12 3\r\n3 3 6 3 \r\n4 3 7\r\n4 7 3 5 3 \r\n3 3 8\r\n4 8 3 4 3 \r\n2 3 9\r\n4 9 3 2 3 \r\n1 3 10\r\n4 10 3 12 11 \r\n5 11 14\r\n3 14 11 1 \r\n"
            ],
            [
                "15 8\r\n2 3\r\n3 4\r\n3 5\r\n4 5\r\n12 14\r\n14 13\r\n12 13\r\n14 15\r\n",
                "YES\r\n8\r\n1 1\r\n7 12 1\r\n4 12 14 15 14 \r\n8 14 5\r\n5 5 4 3 5 3 \r\n3 3 6\r\n4 6 3 2 3 \r\n1 3 7\r\n3 7 3 4 \r\n2 4 8\r\n3 8 4 5 \r\n4 5 9\r\n5 9 5 14 13 14 \r\n6 14 10\r\n3 10 14 12 \r\n5 12 11\r\n3 11 12 1 \r\n"
            ],
            [
                "14 7\r\n2 3\r\n3 4\r\n3 5\r\n4 5\r\n12 14\r\n14 13\r\n11 14\r\n",
                "YES\r\n7\r\n1 1\r\n4 4 1\r\n4 4 3 5 3 \r\n3 3 13\r\n4 13 14 11 14 \r\n7 14 6\r\n4 6 14 12 14 \r\n5 14 7\r\n3 7 14 13 \r\n6 13 8\r\n5 8 13 3 2 3 \r\n1 3 9\r\n3 9 3 4 \r\n2 4 10\r\n3 10 4 1 \r\n"
            ],
            [
                "14 7\r\n2 3\r\n3 4\r\n3 5\r\n3 6\r\n5 7\r\n5 8\r\n7 8\r\n",
                "YES\r\n7\r\n1 1\r\n7 7 1\r\n4 7 5 8 5 \r\n6 5 9\r\n5 9 5 3 6 3 \r\n4 3 10\r\n4 10 3 4 3 \r\n2 3 11\r\n4 11 3 2 3 \r\n1 3 12\r\n3 12 3 5 \r\n3 5 13\r\n3 13 5 7 \r\n5 7 14\r\n3 14 7 1 \r\n"
            ],
            [
                "10 5\r\n5 9\r\n8 9\r\n1 2\r\n3 9\r\n9 4\r\n",
                "YES\r\n4\r\n3 1 2 1 \r\n3 1 4\r\n4 4 9 3 9 \r\n4 9 6\r\n4 6 9 8 9 \r\n2 9 7\r\n4 7 9 5 9 \r\n1 9 10\r\n4 10 9 4 1 \r\n"
            ],
            [
                "10 7\r\n1 3\r\n1 5\r\n7 2\r\n4 8\r\n7 5\r\n9 6\r\n9 7\r\n",
                "YES\r\n2\r\n6 1 5 7 9 6 9 \r\n6 9 8\r\n3 8 4 8 \r\n4 8 10\r\n10 10 8 9 7 2 7 5 1 3 1 \r\n"
            ],
            [
                "20 10\r\n13 3\r\n19 7\r\n5 6\r\n3 4\r\n6 1\r\n3 11\r\n12 14\r\n4 8\r\n5 2\r\n11 19\r\n",
                "YES\r\n9\r\n5 1 6 5 2 5 \r\n9 5 7\r\n7 7 19 11 3 4 8 4 \r\n8 4 14\r\n3 14 12 14 \r\n7 14 9\r\n4 9 14 4 3 \r\n4 3 10\r\n4 10 3 13 3 \r\n1 3 15\r\n3 15 3 11 \r\n6 11 16\r\n3 16 11 19 \r\n10 19 17\r\n3 17 19 7 \r\n2 7 18\r\n4 18 7 5 6 \r\n3 6 20\r\n3 20 6 1 \r\n"
            ],
            [
                "20 11\r\n2 16\r\n13 15\r\n4 5\r\n13 12\r\n18 7\r\n17 8\r\n10 12\r\n15 13\r\n12 13\r\n7 13\r\n8 19\r\n",
                "YES\r\n10\r\n1 1\r\n9 12 1\r\n3 12 10 12 \r\n7 12 5\r\n3 5 4 5 \r\n3 5 16\r\n3 16 2 16 \r\n1 16 19\r\n4 19 8 17 8 \r\n6 8 3\r\n3 3 8 19 \r\n11 19 6\r\n9 6 19 16 5 12 13 7 18 7 \r\n5 7 9\r\n3 9 7 13 \r\n10 13 11\r\n5 11 13 15 13 15 \r\n2 15 14\r\n3 14 15 13 \r\n8 13 20\r\n4 20 13 12 1 \r\n"
            ],
            [
                "20 15\r\n10 3\r\n4 13\r\n16 18\r\n13 3\r\n9 14\r\n20 11\r\n13 9\r\n16 14\r\n14 11\r\n14 18\r\n1 10\r\n8 5\r\n7 6\r\n3 6\r\n7 15\r\n",
                "YES\r\n5\r\n7 1 10 3 6 7 15 7 \r\n15 7 5\r\n3 5 8 5 \r\n12 5 2\r\n4 2 5 7 6 \r\n13 6 12\r\n3 12 6 3 \r\n14 3 17\r\n11 17 3 13 9 14 18 16 14 11 20 11 \r\n6 11 19\r\n13 19 11 14 16 18 14 9 13 4 13 3 10 1 \r\n"
            ],
            [
                "20 40\r\n5 19\r\n15 5\r\n8 2\r\n18 19\r\n13 4\r\n12 1\r\n12 7\r\n1 7\r\n10 15\r\n20 15\r\n14 1\r\n10 18\r\n12 8\r\n20 19\r\n9 6\r\n3 15\r\n14 17\r\n13 10\r\n14 17\r\n19 17\r\n7 14\r\n14 20\r\n1 3\r\n8 11\r\n6 9\r\n15 18\r\n14 4\r\n14 4\r\n6 11\r\n4 11\r\n16 18\r\n8 13\r\n18 12\r\n7 10\r\n4 18\r\n14 19\r\n9 10\r\n1 11\r\n11 4\r\n1 10\r\n",
                "YES\r\n0\r\n81 1 10 9 6 11 4 18 12 8 13 10 7 14 19 17 14 4 11 1 3 15 18 16 18 10 15 20 14 4 13 4 14 17 14 1 7 12 1 12 7 1 14 20 19 18 19 5 15 5 19 20 15 10 18 15 3 1 11 8 2 8 11 4 14 17 19 14 7 10 13 8 12 18 4 11 6 9 6 9 10 1 \r\n"
            ],
            [
                "20 10\r\n7 11\r\n18 2\r\n2 3\r\n13 9\r\n4 11\r\n18 2\r\n13 16\r\n6 7\r\n8 17\r\n12 18\r\n",
                "YES\r\n10\r\n1 1\r\n6 18 1\r\n3 18 12 18 \r\n10 18 11\r\n3 11 4 11 \r\n5 11 16\r\n4 16 13 9 13 \r\n4 13 17\r\n3 17 8 17 \r\n9 17 5\r\n4 5 17 13 16 \r\n7 16 10\r\n6 10 16 11 7 6 7 \r\n8 7 14\r\n3 14 7 11 \r\n1 11 15\r\n6 15 11 18 2 3 2 \r\n3 2 19\r\n3 19 2 18 \r\n2 18 20\r\n3 20 18 1 \r\n"
            ]
        ]
    }
]