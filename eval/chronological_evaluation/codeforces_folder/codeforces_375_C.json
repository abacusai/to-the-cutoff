[
    {
        "name": "Circling Round Treasures",
        "description": "You have a map as a rectangle table. Each cell of the table is either an\nobstacle, or a treasure with a certain price, or a bomb, or an empty cell.\nYour initial position is also given to you. You can go from one cell of the\nmap to a side-adjacent one. At that, you are not allowed to go beyond the\nborders of the map, enter the cells with treasures, obstacles and bombs. To\npick the treasures, you need to build a closed path (starting and ending in\nthe starting cell). The closed path mustn't contain any cells with bombs\ninside. Let's assume that the sum of the treasures' values that are located\ninside the closed path equals v, and besides, you've made k single moves (from\none cell to another) while you were going through the path, then such path\nbrings you the profit of v - k rubles. Your task is to build a closed path\nthat doesn't contain any bombs and brings maximum profit. Note that the path\ncan have self-intersections. In order to determine if a cell lies inside a\npath or not, use the following algorithm: Assume that the table cells are\npoints on the plane (the table cell on the intersection of the i-th column and\nthe j-th row is point (i, j)). And the given path is a closed polyline that\ngoes through these points. You need to find out if the point p of the table\nthat is not crossed by the polyline lies inside the polyline. Let's draw a ray\nthat starts from point p and does not intersect other points of the table\n(such ray must exist). Let's count the number of segments of the polyline that\nintersect the painted ray. If this number is odd, we assume that point p (and\nconsequently, the table cell) lie inside the polyline (path). Otherwise, we\nassume that it lies outside. Input The first line contains two integers n and\nm (1 \u2264 n, m \u2264 20) \u2014 the sizes of the table. Next n lines each contains m\ncharacters \u2014 the description of the table. The description means the\nfollowing: character \"B\" is a cell with a bomb; character \"S\" is the starting\ncell, you can assume that it's empty; digit c (1-8) is treasure with index c;\ncharacter \".\" is an empty cell; character \"#\" is an obstacle. Assume that the\nmap has t treasures. Next t lines contain the prices of the treasures. The\ni-th line contains the price of the treasure with index i, vi ( - 200 \u2264 vi \u2264\n200). It is guaranteed that the treasures are numbered from 1 to t. It is\nguaranteed that the map has not more than 8 objects in total. Objects are\nbombs and treasures. It is guaranteed that the map has exactly one character\n\"S\". Output Print a single integer \u2014 the maximum possible profit you can get.\nExamples Input 4 4 .... .S1. .... .... 10 Output 2 Input 7 7 ....... .1###2.\n.#...#. .#.B.#. .3...4. ..##... ......S 100 100 100 100 Output 364 Input 7 8\n........ ........ ....1B.. .S...... ....2... 3....... ........ 100 -100 100\nOutput 0 Input 1 1 S Output 0 Note In the first example the answer will look\nas follows. In the second example the answer will look as follows. In the\nthird example you cannot get profit. In the fourth example you cannot get\nprofit as you cannot construct a closed path with more than one cell.\n\n",
        "cf_contest_id": 375,
        "cf_index": "C",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "shortest paths"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 4\r\n....\r\n.S1.\r\n....\r\n....\r\n10\r\n",
                "2\r\n"
            ],
            [
                "7 7\r\n.......\r\n.1###2.\r\n.#...#.\r\n.#.B.#.\r\n.3...4.\r\n..##...\r\n......S\r\n100\r\n100\r\n100\r\n100\r\n",
                "364\r\n"
            ],
            [
                "7 8\r\n........\r\n........\r\n....1B..\r\n.S......\r\n....2...\r\n3.......\r\n........\r\n100\r\n-100\r\n100\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\nS\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": []
    }
]