[
    {
        "name": "Discounts",
        "description": "You came to a local shop and want to buy some chocolate bars. There are\n\n    n\n bars in the shop, \n    i\n-th of them costs \n    a_i\n coins (and you\nwant to buy all of them). You have \n    m\n different coupons that allow you to\nbuy chocolate bars. \n    i\n-th coupon allows you to buy \n    q_i\n chocolate\nbars while you have to pay only for the \n    q_i - 1\n most expensive ones (so,\nthe cheapest bar of those \n    q_i\n bars is for free). You can use only one\ncoupon; if you use coupon \n    i\n, you have to choose \n    q_i\n bars and buy\nthem using the coupon, and buy all the remaining \n    n - q_i\n bars without\nany discounts. To decide which coupon to choose, you want to know what will be\nthe minimum total amount of money you have to pay if you use one of the\ncoupons optimally. Input The first line contains one integer \n    n\n (\n    2\n    \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the number of chocolate bars in the shop.\nThe second line contains \n    n\n integers \n    a_1\n, \n    a_2\n, ..., \n    a_n\n\n(\n    1 \n    \u2264 a_i \n    \u2264 10^9\n), where \n    a_i\n is the cost of \n    i\n-th\nchocolate bar. The third line contains one integer \n    m\n (\n    1 \n    \u2264 m \n    \u2264\n    n - 1\n) \u2014 the number of coupons you have. The fourth line contains \n    m\n\nintegers \n    q_1\n, \n    q_2\n, ..., \n    q_m\n (\n    2 \n    \u2264 q_i \n    \u2264 n\n),\nwhere \n    q_i\n is the number of chocolate bars you have to buy using\n\n    i\n-th coupon so that the least expensive of them will be for free. All\nvalues of \n    q_i\n are pairwise distinct. Output Print \n    m\n integers,\n\n    i\n-th of them should be the minimum amount of money you have to pay if\nyou buy \n    q_i\n bars with \n    i\n-th coupon, and all the remaining bars one\nby one for their full price. Example Input 7 7 1 3 1 4 10 8 2 3 4 Output 27 30\nNote Consider the first example. If we use the first coupon, we may choose\nchocolate bars having indices \n    1\n, \n    6\n and \n    7\n, and we pay\n\n    18\n coins for them and \n    9\n coins for all other bars. If we use the\nsecond coupon, we may choose chocolate bars having indices \n    1\n, \n    5\n,\n\n    6\n and \n    7\n, and we pay \n    25\n coins for them and \n    5\n coins for\nall other bars.\n\n",
        "cf_contest_id": 1132,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n7 1 3 1 4 10 8\r\n2\r\n3 4\r\n",
                "27\r\n30\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n5 7\r\n1\r\n2\r\n",
                "7\r\n"
            ],
            [
                "2\r\n1000000000 1\r\n1\r\n2\r\n",
                "1000000000\r\n"
            ],
            [
                "9\r\n7 2 3 3 2 5 6 3 3\r\n6\r\n7 5 4 8 9 2\r\n",
                "31\r\n31\r\n31\r\n32\r\n32\r\n28\r\n"
            ],
            [
                "8\r\n8 6 2 1 5 2 2 8\r\n4\r\n5 8 7 6\r\n",
                "32\r\n33\r\n32\r\n32\r\n"
            ],
            [
                "8\r\n9 8 7 1 7 4 8 10\r\n1\r\n8\r\n",
                "53\r\n"
            ],
            [
                "7\r\n7 8 4 5 5 5 8\r\n2\r\n3 5\r\n",
                "35\r\n37\r\n"
            ],
            [
                "2\r\n123456 123456\r\n1\r\n2\r\n",
                "123456\r\n"
            ]
        ]
    }
]