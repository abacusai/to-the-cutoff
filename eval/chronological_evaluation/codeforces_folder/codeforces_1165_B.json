[
    {
        "name": "Polycarp Training",
        "description": "Polycarp wants to train before another programming competition. During the\nfirst day of his training he should solve exactly \n    1\n problem, during the\nsecond day \u2014 exactly \n    2\n problems, during the third day \u2014 exactly \n    3\n\nproblems, and so on. During the \n    k\n-th day he should solve \n    k\n\nproblems. Polycarp has a list of \n    n\n contests, the \n    i\n-th contest\nconsists of \n    a_i\n problems. During each day Polycarp has to choose exactly\none of the contests he didn't solve yet and solve it. He solves exactly\n\n    k\n problems from this contest. Other problems are discarded from it. If\nthere are no contests consisting of at least \n    k\n problems that Polycarp\ndidn't solve yet during the \n    k\n-th day, then Polycarp stops his training.\nHow many days Polycarp can train if he chooses the contests optimally? Input\nThe first line of the input contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the number of contests. The second line of the input\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the number of problems in the \n    i\n-th contest. Output\nPrint one integer \u2014 the maximum number of days Polycarp can train if he\nchooses the contests optimally. Examples Input 4 3 1 4 1 Output 3 Input 3 1 1\n1 Output 1 Input 5 1 1 1 2 2 Output 2\n\n",
        "cf_contest_id": 1165,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3 1 4 1\r\n",
                "3\r\n"
            ],
            [
                "3\r\n1 1 1\r\n",
                "1\r\n"
            ],
            [
                "5\r\n1 1 1 2 2\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n100 100 100\r\n",
                "3\r\n"
            ],
            [
                "1\r\n2\r\n",
                "1\r\n"
            ],
            [
                "2\r\n2 3\r\n",
                "2\r\n"
            ],
            [
                "3\r\n10 10 10\r\n",
                "3\r\n"
            ],
            [
                "3\r\n5 6 7\r\n",
                "3\r\n"
            ],
            [
                "5\r\n200000 200000 200000 200000 200000\r\n",
                "5\r\n"
            ]
        ]
    }
]