[
    {
        "name": "Packets",
        "description": "You have \n    n\n coins, each of the same value of \n    1\n. Distribute them\ninto packets such that any amount \n    x\n (\n    1 \n    \u2264 x \n    \u2264 n\n) can be\nformed using some (possibly one or all) number of these packets. Each packet\nmay only be used entirely or not used at all. No packet may be used more than\nonce in the formation of the single \n    x\n, however it may be reused for the\nformation of other \n    x\n's. Find the minimum number of packets in such a\ndistribution. Input The only line contains a single integer \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 10^9\n) \u2014 the number of coins you have. Output Output a\nsingle integer \u2014 the minimum possible number of packets, satisfying the\ncondition above. Examples Input 6 Output 3 Input 2 Output 2 Note In the first\nexample, three packets with \n    1\n, \n    2\n and \n    3\n coins can be made to\nget any amount \n    x\n (\n    1\n    \u2264 x\n    \u2264 6\n). To get \n    1\n use the\npacket with \n    1\n coin. To get \n    2\n use the packet with \n    2\n coins. To\nget \n    3\n use the packet with \n    3\n coins. To get \n    4\n use packets with\n\n    1\n and \n    3\n coins. To get \n    5\n use packets with \n    2\n and \n    3\n\ncoins To get \n    6\n use all packets. In the second example, two packets with\n\n    1\n and \n    1\n coins can be made to get any amount \n    x\n (\n    1\n    \u2264\n    x\n    \u2264 2\n).\n\n",
        "cf_contest_id": 1037,
        "cf_index": "A",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n",
                "3\r\n"
            ],
            [
                "2\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n",
                "1\r\n"
            ],
            [
                "1000000000\r\n",
                "30\r\n"
            ],
            [
                "96145460\r\n",
                "27\r\n"
            ],
            [
                "47814355\r\n",
                "26\r\n"
            ],
            [
                "33554430\r\n",
                "25\r\n"
            ],
            [
                "33554431\r\n",
                "25\r\n"
            ],
            [
                "33554432\r\n",
                "26\r\n"
            ],
            [
                "33554434\r\n",
                "26\r\n"
            ],
            [
                "946942894\r\n",
                "30\r\n"
            ],
            [
                "40052789\r\n",
                "26\r\n"
            ],
            [
                "781222222\r\n",
                "30\r\n"
            ],
            [
                "723061816\r\n",
                "30\r\n"
            ],
            [
                "108461089\r\n",
                "27\r\n"
            ],
            [
                "517188853\r\n",
                "29\r\n"
            ],
            [
                "237913214\r\n",
                "28\r\n"
            ],
            [
                "952679912\r\n",
                "30\r\n"
            ],
            [
                "458841431\r\n",
                "29\r\n"
            ],
            [
                "654645765\r\n",
                "30\r\n"
            ],
            [
                "543654364\r\n",
                "30\r\n"
            ],
            [
                "222222222\r\n",
                "28\r\n"
            ],
            [
                "32453535\r\n",
                "25\r\n"
            ],
            [
                "435543666\r\n",
                "29\r\n"
            ],
            [
                "443566\r\n",
                "19\r\n"
            ],
            [
                "56546546\r\n",
                "26\r\n"
            ],
            [
                "1024\r\n",
                "11\r\n"
            ],
            [
                "1023\r\n",
                "10\r\n"
            ],
            [
                "1025\r\n",
                "11\r\n"
            ],
            [
                "1022\r\n",
                "10\r\n"
            ],
            [
                "536870912\r\n",
                "30\r\n"
            ],
            [
                "536870911\r\n",
                "29\r\n"
            ],
            [
                "536870913\r\n",
                "30\r\n"
            ],
            [
                "3\r\n",
                "2\r\n"
            ],
            [
                "8\r\n",
                "4\r\n"
            ],
            [
                "536870911\r\n",
                "29\r\n"
            ]
        ]
    }
]