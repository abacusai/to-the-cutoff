[
    {
        "name": "Colors and Intervals",
        "description": "The numbers \n    1, \n      2, \n     \n    \u2026, \n      n \n    \u00b7 k\n are colored with\n\n    n\n colors. These colors are indexed by \n    1, \n      2, \n     \n    \u2026, \n     \n    n\n. For each \n    1 \n    \u2264 i \n    \u2264 n\n, there are exactly \n    k\n numbers\ncolored with color \n    i\n. Let \n    [a, \n      b]\n denote the interval of\nintegers between \n    a\n and \n    b\n inclusive, that is, the set \n    a,\n    \n      a + 1, \n     \n    \u2026, \n      b\n. You must choose \n    n\n intervals\n\n    [a_1, \n      b_1], \n      [a_2, \n      b_2], \n     \n    \u2026, [a_n, \n      b_n]\n\nsuch that: for each \n    1 \n    \u2264 i \n    \u2264 n\n, it holds \n    1 \n    \u2264 a_i < b_i\n    \n    \u2264 n \n    \u00b7 k\n; for each \n    1 \n    \u2264 i \n    \u2264 n\n, the numbers \n    a_i\n\nand \n    b_i\n are colored with color \n    i\n; each number \n    1 \n    \u2264 x \n    \u2264 n\n    \n    \u00b7 k\n belongs to at most \n    \u2308\n    n/k - 1\n    \n    \u2309\n intervals. One can show that such a family of intervals\nalways exists under the given constraints. Input The first line contains two\nintegers \n    n\n and \n    k\n (\n    1 \n    \u2264 n \n    \u2264 100\n, \n    2 \n    \u2264 k \n    \u2264\n    100\n) \u2014 the number of colors and the number of occurrences of each color.\nThe second line contains \n    n \n    \u00b7 k\n integers \n    c_1, \n      c_2, \n     \n    \u2026, \n      c_nk\n (\n    1 \n    \u2264 c_j \n    \u2264 n\n), where \n    c_j\n is the\ncolor of number \n    j\n. It is guaranteed that, for each \n    1 \n    \u2264 i \n    \u2264\n    n\n, it holds \n    c_j = i\n for exactly \n    k\n distinct indices \n    j\n.\nOutput Output \n    n\n lines. The \n    i\n-th line should contain the two\nintegers \n    a_i\n and \n    b_i\n. If there are multiple valid choices of the\nintervals, output any. Examples Input 4 3 2 4 3 1 1 4 2 3 2 1 3 4 Output 4 5 1\n7 8 11 6 12 Input 1 2 1 1 Output 1 2 Input 3 3 3 1 2 3 2 1 2 1 3 Output 6 8 3\n7 1 4 Input 2 3 2 1 1 1 2 2 Output 2 3 5 6 Note In the first sample, each\nnumber can be contained in at most \n    \u2308\n    4/3 - 1\n    \n    \u2309 = 2\n intervals. The output is described by the following\npicture: In the second sample, the only interval to be chosen is forced to be\n\n    [1, \n      2]\n, and each number is indeed contained in at most\n\n    \u2308\n    1/2 - 1\n    \n    \u2309 = 1\n interval. In the\nthird sample, each number can be contained in at most \n    \u2308\n    3/3 - 1\n    \n    \u2309 = 2\n intervals. The output is described\nby the following picture:\n\n",
        "cf_contest_id": 1552,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3\r\n2 4 3 1 1 4 2 3 2 1 3 4\r\n",
                "4 5\r\n7 9\r\n8 11\r\n2 6\r\n"
            ],
            [
                "1 2\r\n1 1\r\n",
                "1 2\r\n"
            ],
            [
                "3 3\r\n3 1 2 3 2 1 2 1 3\r\n",
                "6 8\r\n3 5\r\n1 4\r\n"
            ],
            [
                "2 3\r\n2 1 1 1 2 2\r\n",
                "2 3\r\n5 6\r\n"
            ]
        ],
        "private_cases": [
            [
                "48 3\r\n8 43 27 32 34 30 31 15 2 10 42 39 6 48 4 24 24 40 20 29 5 36 11 25 23 44 46 41 45 7 3 1 21 35 14 12 28 37 13 26 47 9 35 16 18 22 9 19 8 43 27 32 34 30 5 15 2 10 42 39 6 48 4 18 17 40 20 29 33 36 11 25 23 44 46 41 45 7 3 1 21 33 14 12 28 37 13 26 47 9 35 16 18 22 38 19 8 43 27 32 34 30 31 15 2 10 42 39 6 48 4 17 17 40 20 29 5 36 11 25 23 44 46 41 45 7 3 1 21 33 14 12 28 37 13 26 47 38 31 16 24 22 38 19\r\n",
                "80 128\r\n9 57\r\n79 127\r\n15 63\r\n21 55\r\n61 109\r\n78 126\r\n1 49\r\n42 47\r\n58 106\r\n23 71\r\n84 132\r\n87 135\r\n35 83\r\n8 56\r\n92 140\r\n65 112\r\n45 64\r\n96 144\r\n19 67\r\n33 81\r\n94 142\r\n25 73\r\n16 17\r\n24 72\r\n88 136\r\n3 51\r\n85 133\r\n68 116\r\n6 54\r\n103 139\r\n4 52\r\n69 82\r\n5 53\r\n34 43\r\n70 118\r\n38 86\r\n95 138\r\n12 60\r\n66 114\r\n76 124\r\n11 59\r\n2 50\r\n74 122\r\n77 125\r\n27 75\r\n89 137\r\n14 62\r\n"
            ],
            [
                "15 9\r\n9 5 3 8 6 7 12 14 4 15 10 2 1 13 9 5 6 7 12 14 4 15 10 2 11 3 13 9 4 5 6 7 12 14 15 4 15 10 2 1 13 14 5 8 6 7 12 8 14 4 12 10 2 8 8 1 13 9 5 6 7 1 12 9 11 15 11 8 10 2 1 13 11 9 5 11 6 7 12 14 3 4 15 11 10 2 1 3 8 13 9 5 6 7 3 12 3 8 14 4 15 10 2 1 11 13 9 5 6 7 12 14 11 4 3 15 10 2 1 8 13 9 11 5 6 7 3 15 14 4 3 10 2 1 13\r\n",
                "56 62\r\n70 86\r\n88 95\r\n21 29\r\n2 16\r\n31 45\r\n110 126\r\n48 54\r\n1 15\r\n69 85\r\n65 67\r\n19 33\r\n90 106\r\n42 49\r\n35 37\r\n"
            ]
        ]
    }
]