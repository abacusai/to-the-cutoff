[
    {
        "name": "Ithea Plays With Chtholly",
        "description": "This is an interactive problem. Refer to the Interaction section below for\nbetter understanding. Ithea and Chtholly want to play a game in order to\ndetermine who can use the kitchen tonight. Initially, Ithea puts n clear\nsheets of paper in a line. They are numbered from 1 to n from left to right.\nThis game will go on for m rounds. In each round, Ithea will give Chtholly an\ninteger between 1 and c, and Chtholly needs to choose one of the sheets to\nwrite down this number (if there is already a number before, she will erase\nthe original one and replace it with the new one). Chtholly wins if, at any\ntime, all the sheets are filled with a number and the n numbers are in non-\ndecreasing order looking from left to right from sheet 1 to sheet n, and if\nafter m rounds she still doesn't win, she loses the game. Chtholly really\nwants to win the game as she wants to cook something for Willem. But she\ndoesn't know how to win the game. So Chtholly finds you, and your task is to\nwrite a program to receive numbers that Ithea gives Chtholly and help her make\nthe decision on which sheet of paper write this number. Input The first line\ncontains 3 integers n, m and c (, means rounded up) \u2014 the number of sheets,\nthe number of rounds and the largest possible number Ithea can give to\nChtholly respectively. The remaining parts of input are given throughout the\ninteraction process. Interaction In each round, your program needs to read one\nline containing a single integer pi (1 \u2264 pi \u2264 c), indicating the number given\nto Chtholly. Your program should then output a line containing an integer\nbetween 1 and n, indicating the number of sheet to write down this number in.\nAfter outputting each line, don't forget to flush the output. For example:\nfflush(stdout) in C/C++; System.out.flush() in Java; sys.stdout.flush() in\nPython; flush(output) in Pascal; See the documentation for other languages. If\nChtholly wins at the end of a round, no more input will become available and\nyour program should terminate normally. It can be shown that under the\nconstraints, it's always possible for Chtholly to win the game. Example Input\n2 4 4 2 1 3 Output 1 2 2 Note In the example, Chtholly initially knew there\nwere 2 sheets, 4 rounds and each number was between 1 and 4. She then received\na 2 and decided to write it in the 1st sheet. Then she received a 1 and wrote\nit in the 2nd sheet. At last, she received a 3 and replaced 1 with 3 in the\n2nd sheet. At this time all the sheets were filled with a number and they were\nnon-decreasing, so she won the game. Note that it is required that your\nprogram terminate immediately after Chtholly wins and do not read numbers from\nthe input for the remaining rounds. If not, undefined behaviour may arise and\nit won't be sure whether your program will be accepted or rejected. Also\nbecause of this, please be careful when hacking others' codes. In the sample,\nChtholly won the game after the 3rd round, so it is required that your program\ndoesn't read the number of the remaining 4th round. The input format for\nhacking: The first line contains 3 integers n, m and c; The following m lines\neach contains an integer between 1 and c, indicating the number given to\nChtholly in each round.\n\n",
        "cf_contest_id": 896,
        "cf_index": "B",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "games",
            "greedy",
            "interactive"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 4 4\r\n2\r\n1\r\n3\r\n4\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2 2\r\n1\r\n2\r\n",
                "2\r\n"
            ],
            [
                "3 6 3\r\n1\r\n2\r\n1\r\n3\r\n1\r\n3\r\n",
                "3\r\n"
            ],
            [
                "4 8 4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n",
                "4\r\n"
            ],
            [
                "10 120 15\r\n6\r\n11\r\n9\r\n11\r\n3\r\n12\r\n11\r\n12\r\n2\r\n8\r\n3\r\n11\r\n13\r\n5\r\n12\r\n11\r\n9\r\n3\r\n10\r\n9\r\n9\r\n13\r\n13\r\n5\r\n6\r\n11\r\n3\r\n15\r\n8\r\n8\r\n10\r\n13\r\n7\r\n6\r\n4\r\n14\r\n9\r\n10\r\n5\r\n13\r\n4\r\n1\r\n8\r\n6\r\n13\r\n1\r\n3\r\n4\r\n9\r\n12\r\n2\r\n7\r\n3\r\n3\r\n7\r\n2\r\n2\r\n9\r\n2\r\n4\r\n2\r\n2\r\n11\r\n12\r\n15\r\n13\r\n6\r\n2\r\n11\r\n1\r\n8\r\n3\r\n13\r\n6\r\n15\r\n6\r\n4\r\n3\r\n4\r\n15\r\n15\r\n9\r\n5\r\n8\r\n3\r\n6\r\n14\r\n14\r\n5\r\n9\r\n4\r\n4\r\n14\r\n1\r\n12\r\n4\r\n12\r\n9\r\n11\r\n7\r\n4\r\n2\r\n5\r\n4\r\n4\r\n13\r\n13\r\n4\r\n5\r\n8\r\n3\r\n4\r\n2\r\n15\r\n3\r\n10\r\n9\r\n8\r\n12\r\n8\r\n",
                "20\r\n"
            ],
            [
                "2 2 2\r\n2\r\n1\r\n",
                "2\r\n"
            ],
            [
                "2 2 1\r\n1\r\n1\r\n",
                "2\r\n"
            ],
            [
                "2 2 2\r\n2\r\n2\r\n",
                "2\r\n"
            ],
            [
                "3 3 2\r\n2\r\n2\r\n1\r\n",
                "3\r\n"
            ],
            [
                "3 3 2\r\n1\r\n2\r\n1\r\n",
                "3\r\n"
            ],
            [
                "3 3 2\r\n2\r\n1\r\n2\r\n",
                "3\r\n"
            ],
            [
                "3 3 2\r\n2\r\n1\r\n1\r\n",
                "3\r\n"
            ],
            [
                "3 3 1\r\n1\r\n1\r\n1\r\n",
                "3\r\n"
            ],
            [
                "3 6 3\r\n2\r\n2\r\n3\r\n3\r\n1\r\n1\r\n",
                "5\r\n"
            ],
            [
                "3 6 3\r\n2\r\n2\r\n1\r\n1\r\n3\r\n3\r\n",
                "3\r\n"
            ],
            [
                "3 6 3\r\n3\r\n3\r\n2\r\n2\r\n1\r\n1\r\n",
                "3\r\n"
            ],
            [
                "4 4 2\r\n1\r\n2\r\n2\r\n1\r\n",
                "4\r\n"
            ],
            [
                "4 4 2\r\n1\r\n2\r\n1\r\n2\r\n",
                "4\r\n"
            ],
            [
                "4 4 2\r\n2\r\n2\r\n2\r\n1\r\n",
                "4\r\n"
            ],
            [
                "4 8 3\r\n2\r\n1\r\n2\r\n1\r\n2\r\n1\r\n1\r\n1\r\n",
                "4\r\n"
            ],
            [
                "4 8 3\r\n3\r\n2\r\n3\r\n2\r\n3\r\n2\r\n3\r\n1\r\n",
                "6\r\n"
            ],
            [
                "4 8 3\r\n2\r\n3\r\n2\r\n3\r\n3\r\n3\r\n3\r\n1\r\n",
                "6\r\n"
            ],
            [
                "4 8 4\r\n2\r\n3\r\n2\r\n3\r\n2\r\n3\r\n2\r\n3\r\n",
                "4\r\n"
            ],
            [
                "4 8 4\r\n3\r\n4\r\n3\r\n3\r\n4\r\n4\r\n1\r\n2\r\n",
                "7\r\n"
            ],
            [
                "10 100 20\r\n4\r\n1\r\n15\r\n2\r\n11\r\n1\r\n18\r\n9\r\n17\r\n5\r\n17\r\n12\r\n20\r\n6\r\n14\r\n19\r\n20\r\n3\r\n6\r\n14\r\n12\r\n17\r\n17\r\n10\r\n11\r\n8\r\n6\r\n6\r\n19\r\n16\r\n20\r\n6\r\n14\r\n5\r\n6\r\n19\r\n16\r\n11\r\n12\r\n1\r\n18\r\n10\r\n20\r\n8\r\n6\r\n12\r\n18\r\n16\r\n9\r\n10\r\n13\r\n17\r\n19\r\n7\r\n15\r\n7\r\n11\r\n1\r\n9\r\n10\r\n12\r\n5\r\n4\r\n16\r\n5\r\n7\r\n9\r\n15\r\n14\r\n20\r\n6\r\n3\r\n12\r\n10\r\n3\r\n6\r\n1\r\n16\r\n15\r\n18\r\n6\r\n19\r\n4\r\n17\r\n15\r\n15\r\n2\r\n6\r\n18\r\n12\r\n20\r\n10\r\n5\r\n13\r\n9\r\n11\r\n20\r\n20\r\n4\r\n16\r\n",
                "20\r\n"
            ],
            [
                "10 100 20\r\n11\r\n11\r\n11\r\n11\r\n11\r\n11\r\n11\r\n11\r\n11\r\n10\r\n10\r\n10\r\n10\r\n10\r\n10\r\n10\r\n10\r\n10\r\n9\r\n9\r\n9\r\n9\r\n9\r\n9\r\n9\r\n9\r\n9\r\n8\r\n8\r\n8\r\n8\r\n8\r\n8\r\n8\r\n8\r\n8\r\n7\r\n7\r\n7\r\n7\r\n7\r\n7\r\n7\r\n7\r\n7\r\n6\r\n6\r\n6\r\n6\r\n6\r\n6\r\n6\r\n6\r\n6\r\n5\r\n5\r\n5\r\n5\r\n5\r\n5\r\n5\r\n5\r\n5\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n4\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n3\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n12\r\n",
                "10\r\n"
            ]
        ]
    }
]