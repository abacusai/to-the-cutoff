[
    {
        "name": "The Films",
        "description": "In \"The Man in the High Castle\" world, there are \n    m\n different film\nendings. Abendsen owns a storage and a shelf. At first, he has \n    n\n ordered\nfilms on the shelf. In the \n    i\n-th month he will do: Empty the storage. Put\n\n    k_i \n    \u00b7 m\n films into the storage, \n    k_i\n films for each ending.\nHe will think about a question: if he puts all the films from the shelf into\nthe storage, then randomly picks \n    n\n films (from all the films in the\nstorage) and rearranges them on the shelf, what is the probability that\nsequence of endings in \n    [l_i, r_i]\n on the shelf will not be changed?\nNotice, he just thinks about this question, so the shelf will not actually be\nchanged.Answer all Abendsen's questions. Let the probability be fraction\n\n    P_i\n. Let's say that the total number of ways to take \n    n\n films from\nthe storage for \n    i\n-th month is \n    A_i\n, so \n    P_i \n    \u00b7 A_i\n is\nalways an integer. Print for each month \n    P_i \n    \u00b7 A_i \n    998244353\n. \n    998244353\n is a prime number and it is equal to \n    119\n    \n    \u00b7 2^23 + 1\n. It is guaranteed that there will be only no more than\n\n    100\n different \n    k\n values. Input The first line contains three\nintegers \n    n\n, \n    m\n, and \n    q\n (\n    1 \n    \u2264 n, m, q \n    \u2264 10^5\n,\n\n    n+q\n    \u2264 10^5\n) \u2014 the number of films on the shelf initially, the number\nof endings, and the number of months. The second line contains \n    n\n\nintegers \n    e_1, e_2, \n    \u2026, e_n\n (\n    1\n    \u2264 e_i\n    \u2264 m\n) \u2014 the\nending of the \n    i\n-th film on the shelf. Each of the next \n    q\n lines\ncontains three integers \n    l_i\n, \n    r_i\n, and \n    k_i\n (\n    1 \n    \u2264 l_i\n    \n    \u2264 r_i \n    \u2264 n, 0 \n    \u2264 k_i \n    \u2264 10^5\n) \u2014 the \n    i\n-th query. It is\nguaranteed that there will be only no more than \n    100\n different \n    k\n\nvalues. Output Print the answer for each question in a separate line. Examples\nInput 6 4 4 1 2 3 4 4 4 1 4 0 1 3 2 1 4 2 1 5 2 Output 6 26730 12150 4860\nInput 5 5 3 1 2 3 4 5 1 2 100000 1 4 4 3 5 5 Output 494942218 13125 151632\nNote In the first sample in the second query, after adding \n    2 \n    \u00b7 m\n\nfilms into the storage, the storage will look like this: \n    1, 1, 1, 2,\n    2, 2, 3, 3, 3, 4, 4, 4, 4, 4\n. There are \n    26730\n total ways of\nchoosing the films so that \n    e_l, e_l+1, \n    \u2026, e_r\n will not be\nchanged, for example, \n    [1, 2, 3, 2, 2]\n and \n    [1, 2, 3, 4, 3]\n are such\nways. There are \n    2162160\n total ways of choosing the films, so you're\nasked to print \n    (\n    26730/2162160\n    \u00b7 2162160) \n     998244353 =\n    26730\n.\n\n",
        "cf_contest_id": 1017,
        "cf_index": "H",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "brute force"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "6 4 4\r\n1 2 3 4 4 4\r\n1 4 0\r\n1 3 2\r\n1 4 2\r\n1 5 2\r\n",
                "6\r\n26730\r\n12150\r\n4860\r\n"
            ],
            [
                "5 5 3\r\n1 2 3 4 5\r\n1 2 100000\r\n1 4 4\r\n3 5 5\r\n",
                "494942218\r\n13125\r\n151632\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n1\r\n1 1 100000\r\n",
                "100001\r\n"
            ],
            [
                "10 100000 8\r\n57493 57493 57493 56443 56443 20543 57493 20543 56443 20543\r\n3 5 57182\r\n1 7 2496\r\n8 9 99070\r\n6 7 93542\r\n6 10 9897\r\n7 8 86928\r\n7 9 56755\r\n3 8 73249\r\n",
                "660100901\r\n840987924\r\n277949255\r\n471899054\r\n839892306\r\n705447088\r\n121891133\r\n751017280\r\n"
            ]
        ]
    }
]