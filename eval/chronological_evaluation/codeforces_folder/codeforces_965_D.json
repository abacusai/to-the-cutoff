[
    {
        "name": "Single-use Stones",
        "description": "A lot of frogs want to cross a river. A river is \n    w\n units width, but\nfrogs can only jump \n    l\n units long, where \n    l < w\n. Frogs can also jump\non lengths shorter than \n    l\n. but can't jump longer. Hopefully, there are\nsome stones in the river to help them. The stones are located at integer\ndistances from the banks. There are \n    a_i\n stones at the distance of\n\n    i\n units from the bank the frogs are currently at. Each stone can only be\nused once by one frog, after that it drowns in the water. What is the maximum\nnumber of frogs that can cross the river, given that then can only jump on the\nstones? Input The first line contains two integers \n    w\n and \n    l\n (\n    1\n    \n    \u2264 l < w \n    \u2264 10^5\n) \u2014 the width of the river and the maximum length of\na frog's jump. The second line contains \n    w - 1\n integers \n    a_1, a_2,\n    \n    \u2026, a_w-1\n (\n    0 \n    \u2264 a_i \n    \u2264 10^4\n), where \n    a_i\n is the\nnumber of stones at the distance \n    i\n from the bank the frogs are currently\nat. Output Print a single integer \u2014 the maximum number of frogs that can cross\nthe river. Examples Input 10 5 0 0 1 0 2 0 0 1 0 Output 3 Input 10 3 1 1 1 1 2\n1 1 1 1 Output 3 Note In the first sample two frogs can use the different\nstones at the distance \n    5\n, and one frog can use the stones at the\ndistances \n    3\n and then \n    8\n. In the second sample although there are\ntwo stones at the distance \n    5\n, that does not help. The three paths are:\n\n    0 \n    \u2192 3 \n    \u2192 6 \n    \u2192 9 \n    \u2192 10\n, \n    0 \n    \u2192 2 \n    \u2192 5 \n    \u2192 8 \n    \u2192\n    10\n, \n    0 \n    \u2192 1 \n    \u2192 4 \n    \u2192 7 \n    \u2192 10\n.\n\n",
        "cf_contest_id": 965,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "flows",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10 5\r\n0 0 1 0 2 0 0 1 0\r\n",
                "3\n"
            ],
            [
                "10 3\r\n1 1 1 1 2 1 1 1 1\r\n",
                "3\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n0\r\n",
                "0\n"
            ],
            [
                "2 1\r\n5\r\n",
                "5\n"
            ],
            [
                "10 4\r\n0 0 6 2 7 1 6 4 0\r\n",
                "8\n"
            ],
            [
                "100 15\r\n0 0 1 1 1 0 1 1 1 1 0 1 1 1 0 1 0 0 1 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 0 1 0 1 0 0 1 0\r\n",
                "5\n"
            ],
            [
                "10 4\r\n10 10 10 10 10 10 10 10 10\r\n",
                "40\n"
            ],
            [
                "100 34\r\n16 0 10 11 12 13 0 5 4 14 6 15 4 9 1 20 19 14 1 7 14 11 10 20 6 9 12 8 3 19 20 4 17 17 8 11 14 18 5 20 17 0 3 18 14 12 11 12 5 5 11 7 9 17 4 8 4 10 0 0 12 9 15 3 15 14 19 12 6 8 17 19 4 18 19 3 8 3 9 1 6 15 4 16 1 18 13 16 3 5 20 11 10 9 9 17 20 15 12\r\n",
                "312\n"
            ]
        ]
    }
]