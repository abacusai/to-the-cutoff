[
    {
        "name": "Explorer Space",
        "description": "You are wandering in the explorer space of the 2050 Conference. The explorer\nspace can be viewed as an undirected weighted grid graph with size\n\n    n\n    \u00d7 m\n. The set of vertices is \n    (i, j)|1\n    \u2264 i\n    \u2264 n,\n    1\n    \u2264 j\n    \u2264 m\n. Two vertices \n    (i_1,j_1)\n and \n    (i_2, j_2)\n are\nconnected by an edge if and only if \n    |i_1-i_2|+|j_1-j_2|=1\n. At each step,\nyou can walk to any vertex connected by an edge with your current vertex. On\neach edge, there are some number of exhibits. Since you already know all the\nexhibits, whenever you go through an edge containing \n    x\n exhibits, your\nboredness increases by \n    x\n. For each starting vertex \n    (i, j)\n, please\nanswer the following question: What is the minimum possible boredness if you\nwalk from \n    (i, j)\n and go back to it after exactly \n    k\n steps? You can\nuse any edge for multiple times but the boredness on those edges are also\ncounted for multiple times. At each step, you cannot stay on your current\nvertex. You also cannot change direction while going through an edge. Before\ngoing back to your starting vertex \n    (i, j)\n after \n    k\n steps, you can\nvisit \n    (i, j)\n (or not) freely. Input The first line contains three\nintegers \n    n\n, \n    m\n and \n    k\n (\n    2\n    \u2264 n, m\n    \u2264 500, 1\n    \u2264\n    k\n    \u2264 20\n). The \n    j\n-th number (\n    1\n    \u2264 j \n    \u2264 m - 1\n) in the\n\n    i\n-th line of the following \n    n\n lines is the number of exibits on the\nedge between vertex \n    (i, j)\n and vertex \n    (i, j+1)\n. The \n    j\n-th\nnumber (\n    1\n    \u2264 j\n    \u2264 m\n) in the \n    i\n-th line of the following\n\n    n-1\n lines is the number of exibits on the edge between vertex \n    (i,\n    j)\n and vertex \n    (i+1, j)\n. The number of exhibits on each edge is an\ninteger between \n    1\n and \n    10^6\n. Output Output \n    n\n lines with\n\n    m\n numbers each. The \n    j\n-th number in the \n    i\n-th line,\n\n    answer_ij\n, should be the minimum possible boredness if you walk from\n\n    (i, j)\n and go back to it after exactly \n    k\n steps. If you cannot go\nback to vertex \n    (i, j)\n after exactly \n    k\n steps, \n    answer_ij\n\nshould be \n    -1\n. Examples Input 3 3 10 1 1 1 1 1 1 1 1 1 1 1 1 Output 10 10\n10 10 10 10 10 10 10 Input 2 2 4 1 3 4 2 Output 4 4 10 6 Input 2 2 3 1 2 3 4\nOutput -1 -1 -1 -1 Note In the first example, the answer is always \n    10\n no\nmatter how you walk. In the second example, \n    answer_21 = 10\n, the path\nis \n    (2,1) \n    \u2192 (1,1) \n    \u2192 (1,2) \n    \u2192 (2,2) \n    \u2192 (2,1)\n, the boredness\nis \n    4 + 1 + 2 + 3 = 10\n.\n\n",
        "cf_contest_id": 1517,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3 10\r\n1 1\r\n1 1\r\n1 1\r\n1 1 1\r\n1 1 1\r\n",
                "10 10 10\r\n10 10 10\r\n10 10 10\r\n"
            ],
            [
                "2 2 4\r\n1\r\n3\r\n4 2\r\n",
                "4 4\r\n10 6\r\n"
            ],
            [
                "2 2 3\r\n1\r\n2\r\n3 4\r\n",
                "-1 -1\r\n-1 -1\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 3 3\r\n1 1\r\n1 1\r\n1 1 1\r\n",
                "-1 -1 -1\r\n-1 -1 -1\r\n"
            ]
        ]
    }
]