[
    {
        "name": "Tokitsukaze and Meeting",
        "description": "Tokitsukaze is arranging a meeting. There are \n    n\n rows and \n    m\n columns\nof seats in the meeting hall. There are exactly \n    n \n    \u00b7 m\n students\nattending the meeting, including several naughty students and several serious\nstudents. The students are numerated from \n    1\n to \n    n\n    \u00b7 m\n. The\nstudents will enter the meeting hall in order. When the \n    i\n-th student\nenters the meeting hall, he will sit in the \n    1\n-st column of the\n\n    1\n-st row, and the students who are already seated will move back one\nseat. Specifically, the student sitting in the \n    j\n-th (\n    1\n    \u2264 j \n    \u2264\n    m-1\n) column of the \n    i\n-th row will move to the \n    (j+1)\n-th column of\nthe \n    i\n-th row, and the student sitting in \n    m\n-th column of the\n\n    i\n-th row will move to the \n    1\n-st column of the \n    (i+1)\n-th row.\nFor example, there is a meeting hall with \n    2\n rows and \n    2\n columns of\nseats shown as below: There will be \n    4\n students entering the meeting hall\nin order, represented as a binary string \"1100\", of which '0' represents\nnaughty students and '1' represents serious students. The changes of seats in\nthe meeting hall are as follows: Denote a row or a column good if and only if\nthere is at least one serious student in this row or column. Please predict\nthe number of good rows and columns just after the \n    i\n-th student enters\nthe meeting hall, for all \n    i\n. Input The first contains a single positive\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n     000\n) \u2014 the number of test\ncases. For each test case, the first line contains two integers \n    n\n,\n\n    m\n (\n    1 \n    \u2264 n,m \n    \u2264 10^6\n; \n    1 \n    \u2264 n \n    \u00b7 m \n    \u2264\n    10^6\n), denoting there are \n    n\n rows and \n    m\n columns of seats in the\nmeeting hall. The second line contains a binary string \n    s\n of length \n    n\n    \n    \u00b7 m\n, consisting only of zeros and ones. If \n    s_i\n equal to '0'\nrepresents the \n    i\n-th student is a naughty student, and \n    s_i\n equal to\n'1' represents the \n    i\n-th student is a serious student. It is guaranteed\nthat the sum of \n    n \n    \u00b7 m\n over all test cases does not exceed\n\n    10^6\n. Output For each test case, print a single line with \n    n \n    \u00b7\n    m\n integers \u2014 the number of good rows and columns just after the \n    i\n-th\nstudent enters the meeting hall. Example Input 3 2 2 1100 4 2 11001101 2 4\n11001101 Output 2 3 4 3 2 3 4 3 5 4 6 5 2 3 3 3 4 4 4 5 Note The first test\ncase is shown in the statement. After the \n    1\n-st student enters the\nmeeting hall, there are \n    2\n good rows and columns: the \n    1\n-st row and\nthe \n    1\n-st column. After the \n    2\n-nd student enters the meeting hall,\nthere are \n    3\n good rows and columns: the \n    1\n-st row, the \n    1\n-st\ncolumn and the \n    2\n-nd column. After the \n    3\n-rd student enters the\nmeeting hall, the \n    4\n rows and columns are all good. After the \n    4\n-th\nstudent enters the meeting hall, there are \n    3\n good rows and columns: the\n\n    2\n-nd row, the \n    1\n-st column and the \n    2\n-nd column.\n\n",
        "cf_contest_id": 1677,
        "cf_index": "B",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2 2\r\n1100\r\n4 2\r\n11001101\r\n2 4\r\n11001101\r\n",
                "2 3 4 3 \r\n2 3 4 3 5 4 6 5 \r\n2 3 3 3 4 4 4 5 \r\n"
            ]
        ],
        "private_cases": []
    }
]