[
    {
        "name": "Data Center Drama",
        "description": "The project of a data center of a Big Software Company consists of n computers\nconnected by m cables. Simply speaking, each computer can be considered as a\nbox with multiple cables going out of the box. Very Important Information is\ntransmitted along each cable in one of the two directions. As the data center\nplan is not yet approved, it wasn't determined yet in which direction\ninformation will go along each cable. The cables are put so that each computer\nis connected with each one, perhaps through some other computers. The person\nin charge of the cleaning the data center will be Claudia Ivanova, the\njanitor. She loves to tie cables into bundles using cable ties. For some\nreasons, she groups the cables sticking out of a computer into groups of two,\nand if it isn't possible, then she gets furious and attacks the computer with\nthe water from the bucket. It should also be noted that due to the specific\nphysical characteristics of the Very Important Information, it is strictly\nforbidden to connect in one bundle two cables where information flows in\ndifferent directions. The management of the data center wants to determine how\nto send information along each cable so that Claudia Ivanova is able to group\nall the cables coming out of each computer into groups of two, observing the\ncondition above. Since it may not be possible with the existing connections\nplan, you are allowed to add the minimum possible number of cables to the\nscheme, and then you need to determine the direction of the information flow\nfor each cable (yes, sometimes data centers are designed based on the\njanitors' convenience...) Input The first line contains two numbers, n and m\n(1 \u2264 n \u2264 100 000, 1 \u2264 m \u2264 200 000) \u2014 the number of computers and the number of\nthe already present cables, respectively. Each of the next lines contains two\nnumbers ai, bi (1 \u2264 ai, bi \u2264 n) \u2014 the indices of the computers connected by\nthe i-th cable. The data centers often have a very complex structure, so a\npair of computers may have more than one pair of cables between them and some\ncables may connect a computer with itself. Output In the first line print a\nsingle number p (p \u2265 m) \u2014 the minimum number of cables in the final scheme. In\neach of the next p lines print a pair of numbers ci, di (1 \u2264 ci, di \u2264 n),\ndescribing another cable. Such entry means that information will go along a\ncertain cable in direction from ci to di. Among the cables you printed there\nshould be all the cables presented in the original plan in some of two\npossible directions. It is guaranteed that there is a solution where p doesn't\nexceed 500 000. If there are several posible solutions with minimum possible\nvalue of p, print any of them. Examples Input 4 6 1 2 2 3 3 4 4 1 1 3 1 3\nOutput 6 1 2 3 4 1 4 3 2 1 3 1 3 Input 3 4 1 2 2 3 1 1 3 3 Output 6 2 1 2 3 1\n1 3 3 3 1 1 1 Note Picture for the first sample test. The tied pairs of cables\nare shown going out from the same point. Picture for the second test from the\nstatement. The added cables are drawin in bold. Alternative answer for the\nsecond sample test:\n\n",
        "cf_contest_id": 527,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 6\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n1 3\r\n1 3\r\n",
                "6\r\n1 2\r\n3 2\r\n3 4\r\n1 4\r\n1 3\r\n1 3\r\n"
            ],
            [
                "3 4\r\n1 2\r\n2 3\r\n1 1\r\n3 3\r\n",
                "6\r\n1 1\r\n2 1\r\n2 3\r\n3 3\r\n3 1\r\n1 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1 1\r\n",
                "2\r\n1 1\r\n1 1\r\n"
            ],
            [
                "1 2\r\n1 1\r\n1 1\r\n",
                "2\r\n1 1\r\n1 1\r\n"
            ],
            [
                "1 3\r\n1 1\r\n1 1\r\n1 1\r\n",
                "4\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n"
            ],
            [
                "1 4\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "4\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n"
            ],
            [
                "2 1\r\n1 2\r\n",
                "2\r\n1 2\r\n1 2\r\n"
            ],
            [
                "2 2\r\n1 2\r\n1 2\r\n",
                "2\r\n1 2\r\n1 2\r\n"
            ],
            [
                "2 3\r\n1 2\r\n1 2\r\n1 2\r\n",
                "4\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n"
            ],
            [
                "2 2\r\n1 1\r\n1 2\r\n",
                "4\r\n1 1\r\n2 1\r\n2 1\r\n1 1\r\n"
            ],
            [
                "2 3\r\n1 1\r\n1 2\r\n2 2\r\n",
                "4\r\n1 1\r\n2 1\r\n2 2\r\n1 2\r\n"
            ],
            [
                "3 4\r\n1 1\r\n2 2\r\n3 2\r\n2 1\r\n",
                "6\r\n1 1\r\n2 1\r\n2 2\r\n3 2\r\n3 1\r\n1 1\r\n"
            ],
            [
                "3 9\r\n1 2\r\n1 3\r\n3 1\r\n1 3\r\n1 3\r\n1 1\r\n1 1\r\n1 3\r\n3 2\r\n",
                "10\r\n1 3\r\n1 3\r\n1 3\r\n1 3\r\n1 1\r\n1 1\r\n1 2\r\n3 2\r\n3 1\r\n1 1\r\n"
            ],
            [
                "10 20\r\n1 2\r\n1 3\r\n3 4\r\n1 5\r\n2 6\r\n3 7\r\n3 8\r\n5 9\r\n7 10\r\n2 5\r\n5 2\r\n4 7\r\n6 2\r\n2 8\r\n7 7\r\n9 8\r\n1 9\r\n6 10\r\n8 8\r\n6 10\r\n",
                "22\r\n1 2\r\n6 2\r\n6 2\r\n5 2\r\n5 1\r\n3 1\r\n3 4\r\n7 4\r\n7 7\r\n3 7\r\n3 8\r\n2 8\r\n2 5\r\n9 5\r\n9 8\r\n8 8\r\n8 7\r\n10 7\r\n10 6\r\n10 6\r\n10 9\r\n1 9\r\n"
            ],
            [
                "10 9\r\n1 2\r\n1 3\r\n3 4\r\n1 5\r\n2 6\r\n3 7\r\n3 8\r\n5 9\r\n7 10\r\n",
                "12\r\n1 3\r\n7 3\r\n7 10\r\n9 10\r\n9 5\r\n1 5\r\n1 2\r\n6 2\r\n6 8\r\n3 8\r\n3 4\r\n1 4\r\n"
            ],
            [
                "5 4\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n",
                "6\r\n1 2\r\n3 2\r\n3 4\r\n5 4\r\n5 1\r\n1 1\r\n"
            ],
            [
                "5 4\r\n4 3\r\n4 2\r\n1 5\r\n1 2\r\n",
                "6\r\n1 5\r\n3 5\r\n3 4\r\n2 4\r\n2 1\r\n1 1\r\n"
            ],
            [
                "5 5\r\n2 1\r\n4 2\r\n5 3\r\n4 3\r\n1 5\r\n",
                "6\r\n1 2\r\n4 2\r\n4 3\r\n5 3\r\n5 1\r\n1 1\r\n"
            ],
            [
                "10 9\r\n1 10\r\n2 10\r\n3 10\r\n4 10\r\n5 10\r\n6 10\r\n7 10\r\n8 10\r\n9 10\r\n",
                "14\r\n1 10\r\n3 10\r\n3 4\r\n10 4\r\n10 5\r\n6 5\r\n6 10\r\n7 10\r\n7 8\r\n10 8\r\n10 9\r\n10 9\r\n10 2\r\n1 2\r\n"
            ],
            [
                "11 10\r\n1 11\r\n2 11\r\n3 11\r\n4 11\r\n5 11\r\n6 11\r\n7 11\r\n8 11\r\n9 11\r\n10 11\r\n",
                "16\r\n1 11\r\n3 11\r\n3 4\r\n11 4\r\n11 5\r\n6 5\r\n6 11\r\n7 11\r\n7 8\r\n11 8\r\n11 9\r\n10 9\r\n10 11\r\n2 11\r\n2 1\r\n1 1\r\n"
            ],
            [
                "10 10\r\n5 1\r\n9 2\r\n2 1\r\n2 5\r\n10 2\r\n7 2\r\n2 3\r\n8 2\r\n2 4\r\n2 6\r\n",
                "14\r\n1 5\r\n2 5\r\n2 9\r\n10 9\r\n10 2\r\n7 2\r\n7 8\r\n2 8\r\n2 4\r\n6 4\r\n6 2\r\n3 2\r\n3 2\r\n1 2\r\n"
            ],
            [
                "11 11\r\n8 4\r\n8 2\r\n8 6\r\n11 8\r\n7 8\r\n3 8\r\n8 10\r\n8 5\r\n1 8\r\n1 10\r\n9 8\r\n",
                "16\r\n1 8\r\n6 8\r\n6 7\r\n8 7\r\n8 2\r\n3 2\r\n3 8\r\n4 8\r\n4 5\r\n8 5\r\n8 11\r\n9 11\r\n9 8\r\n10 8\r\n10 1\r\n1 1\r\n"
            ],
            [
                "10 11\r\n2 1\r\n1 5\r\n3 2\r\n2 8\r\n2 4\r\n8 9\r\n2 9\r\n2 6\r\n10 2\r\n2 7\r\n5 2\r\n",
                "14\r\n1 2\r\n8 2\r\n8 9\r\n2 9\r\n2 4\r\n6 4\r\n6 2\r\n10 2\r\n10 7\r\n2 7\r\n2 3\r\n2 3\r\n2 5\r\n1 5\r\n"
            ],
            [
                "11 12\r\n8 2\r\n5 8\r\n10 8\r\n8 1\r\n4 8\r\n8 3\r\n10 1\r\n7 8\r\n8 6\r\n8 9\r\n8 11\r\n8 4\r\n",
                "16\r\n1 8\r\n2 8\r\n2 3\r\n8 3\r\n8 5\r\n6 5\r\n6 8\r\n9 8\r\n9 11\r\n8 11\r\n8 4\r\n8 4\r\n8 7\r\n8 7\r\n8 10\r\n1 10\r\n"
            ],
            [
                "10 14\r\n3 7\r\n5 9\r\n6 8\r\n8 4\r\n4 5\r\n6 2\r\n1 10\r\n2 6\r\n1 10\r\n7 3\r\n9 5\r\n4 8\r\n1 9\r\n10 7\r\n",
                "18\r\n1 10\r\n1 10\r\n1 9\r\n5 9\r\n5 4\r\n8 4\r\n8 6\r\n2 6\r\n2 6\r\n5 6\r\n5 9\r\n10 9\r\n10 7\r\n3 7\r\n3 7\r\n8 7\r\n8 4\r\n1 4\r\n"
            ]
        ]
    }
]