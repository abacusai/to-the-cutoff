[
    {
        "name": "Devu and Birthday Celebration",
        "description": "Today is Devu's birthday. For celebrating the occasion, he bought n sweets\nfrom the nearby market. He has invited his f friends. He would like to\ndistribute the sweets among them. As he is a nice guy and the occasion is\ngreat, he doesn't want any friend to be sad, so he would ensure to give at\nleast one sweet to each friend. He wants to celebrate it in a unique style, so\nhe would like to ensure following condition for the distribution of sweets.\nAssume that he has distributed n sweets to his friends such that i^th friend\nis given ai sweets. He wants to make sure that there should not be any\npositive integer x > 1, which divides every ai. Please find the number of ways\nhe can distribute sweets to his friends in the required way. Note that the\norder of distribution is important, for example [1, 2] and [2, 1] are distinct\ndistributions. As the answer could be very large, output answer modulo\n1000000007 (10^9 + 7). To make the problem more interesting, you are given q\nqueries. Each query contains an n, f pair. For each query please output the\nrequired number of ways modulo 1000000007 (10^9 + 7). Input The first line\ncontains an integer q representing the number of queries (1 \u2264 q \u2264 10^5). Each\nof the next q lines contains two space space-separated integers n, f (1 \u2264 f \u2264\nn \u2264 10^5). Output For each query, output a single integer in a line\ncorresponding to the answer of each query. Examples Input 5 6 2 7 2 6 3 6 4 7\n4 Output 2 6 9 10 20 Note For first query: n = 6, f = 2. Possible partitions\nare [1, 5] and [5, 1]. For second query: n = 7, f = 2. Possible partitions are\n[1, 6] and [2, 5] and [3, 4] and [4, 3] and [5, 3] and [6, 1]. So in total\nthere are 6 possible ways of partitioning.\n\n",
        "cf_contest_id": 439,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "math"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n6 2\r\n7 2\r\n6 3\r\n6 4\r\n7 4\r\n",
                "2\r\n6\r\n9\r\n10\r\n20\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 1\r\n1 1\r\n1 1\r\n7 2\r\n6 3\r\n9 5\r\n4 1\r\n2 1\r\n3 1\r\n2 2\r\n",
                "1\r\n1\r\n1\r\n6\r\n9\r\n70\r\n0\r\n0\r\n0\r\n1\r\n"
            ],
            [
                "40\r\n37 15\r\n48 10\r\n16 5\r\n25 23\r\n32 20\r\n24 4\r\n46 19\r\n16 13\r\n1 1\r\n37 22\r\n44 29\r\n24 6\r\n27 10\r\n39 16\r\n28 13\r\n5 4\r\n31 22\r\n9 2\r\n30 26\r\n23 16\r\n16 12\r\n43 5\r\n29 1\r\n20 5\r\n40 12\r\n18 14\r\n22 15\r\n29 2\r\n3 2\r\n6 3\r\n45 28\r\n42 34\r\n43 32\r\n10 10\r\n12 8\r\n10 8\r\n4 1\r\n17 17\r\n16 7\r\n8 7\r\n",
                "796297179\r\n361826943\r\n1330\r\n276\r\n141120525\r\n1572\r\n884475620\r\n455\r\n1\r\n567902525\r\n532655639\r\n33166\r\n3124550\r\n471286455\r\n17383847\r\n4\r\n14307150\r\n6\r\n23751\r\n170544\r\n1365\r\n111930\r\n0\r\n3750\r\n675980455\r\n2380\r\n116280\r\n28\r\n2\r\n9\r\n353793174\r\n95548245\r\n280561348\r\n1\r\n330\r\n36\r\n0\r\n1\r\n4998\r\n7\r\n"
            ],
            [
                "10\r\n201 98\r\n897 574\r\n703 669\r\n238 199\r\n253 71\r\n619 577\r\n656 597\r\n827 450\r\n165 165\r\n17 5\r\n",
                "161386475\r\n287013046\r\n190482739\r\n953794468\r\n858506105\r\n813510912\r\n157101041\r\n44730040\r\n1\r\n1820\r\n"
            ],
            [
                "5\r\n5 1\r\n5 2\r\n5 3\r\n5 4\r\n5 5\r\n",
                "0\r\n4\r\n6\r\n4\r\n1\r\n"
            ],
            [
                "1\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "2\r\n2 1\r\n2 2\r\n",
                "0\r\n1\r\n"
            ],
            [
                "3\r\n3 1\r\n3 2\r\n3 3\r\n",
                "0\r\n2\r\n1\r\n"
            ],
            [
                "15\r\n4 1\r\n4 2\r\n4 3\r\n4 4\r\n5 1\r\n5 2\r\n5 3\r\n5 4\r\n5 5\r\n6 1\r\n6 2\r\n6 3\r\n6 4\r\n6 5\r\n6 6\r\n",
                "0\r\n2\r\n3\r\n1\r\n0\r\n4\r\n6\r\n4\r\n1\r\n0\r\n2\r\n9\r\n10\r\n5\r\n1\r\n"
            ]
        ]
    }
]