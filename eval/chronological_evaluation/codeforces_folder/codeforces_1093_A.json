[
    {
        "name": "Dice Rolling",
        "description": "Mishka got a six-faced dice. It has integer numbers from \n    2\n to \n    7\n\nwritten on its faces (all numbers on faces are different, so this is an almost\nusual dice). Mishka wants to get exactly \n    x\n points by rolling his dice.\nThe number of points is just a sum of numbers written at the topmost face of\nthe dice for all the rolls Mishka makes. Mishka doesn't really care about the\nnumber of rolls, so he just wants to know any number of rolls he can make to\nbe able to get exactly \n    x\n points for them. Mishka is very lucky, so if\nthe probability to get \n    x\n points with chosen number of rolls is non-zero,\nhe will be able to roll the dice in such a way. Your task is to print this\nnumber. It is guaranteed that at least one answer exists. Mishka is also very\ncurious about different number of points to score so you have to answer\n\n    t\n independent queries. Input The first line of the input contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of queries. Each of\nthe next \n    t\n lines contains one integer each. The \n    i\n-th line contains\none integer \n    x_i\n (\n    2 \n    \u2264 x_i \n    \u2264 100\n) \u2014 the number of points\nMishka wants to get. Output Print \n    t\n lines. In the \n    i\n-th line print\nthe answer to the \n    i\n-th query (i.e. any number of rolls Mishka can make\nto be able to get exactly \n    x_i\n points for them). It is guaranteed that at\nleast one answer exists. Example Input 4 2 13 37 100 Output 1 3 8 27 Note In\nthe first query Mishka can roll a dice once and get \n    2\n points. In the\nsecond query Mishka can roll a dice \n    3\n times and get points \n    5\n,\n\n    5\n and \n    3\n (for example). In the third query Mishka can roll a dice\n\n    8\n times and get \n    5\n points \n    7\n times and \n    2\n points with the\nremaining roll. In the fourth query Mishka can roll a dice \n    27\n times and\nget \n    2\n points \n    11\n times, \n    3\n points \n    6\n times and \n    6\n\npoints \n    10\n times.\n\n",
        "cf_contest_id": 1093,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2\r\n13\r\n37\r\n100\r\n",
                "1\r\n6\r\n18\r\n50\r\n"
            ]
        ],
        "private_cases": [
            [
                "99\r\n17\r\n38\r\n56\r\n16\r\n7\r\n36\r\n29\r\n95\r\n50\r\n28\r\n64\r\n98\r\n46\r\n42\r\n3\r\n93\r\n10\r\n74\r\n80\r\n9\r\n55\r\n31\r\n51\r\n34\r\n35\r\n82\r\n96\r\n69\r\n54\r\n77\r\n76\r\n92\r\n58\r\n70\r\n20\r\n73\r\n72\r\n86\r\n41\r\n12\r\n4\r\n24\r\n89\r\n67\r\n13\r\n49\r\n78\r\n65\r\n66\r\n37\r\n61\r\n84\r\n39\r\n99\r\n79\r\n48\r\n25\r\n23\r\n62\r\n14\r\n85\r\n97\r\n15\r\n53\r\n68\r\n47\r\n40\r\n90\r\n81\r\n57\r\n21\r\n19\r\n71\r\n6\r\n91\r\n5\r\n8\r\n18\r\n59\r\n33\r\n87\r\n22\r\n2\r\n11\r\n27\r\n94\r\n26\r\n32\r\n83\r\n100\r\n88\r\n52\r\n44\r\n60\r\n63\r\n45\r\n30\r\n43\r\n75\r\n",
                "8\r\n19\r\n28\r\n8\r\n3\r\n18\r\n14\r\n47\r\n25\r\n14\r\n32\r\n49\r\n23\r\n21\r\n1\r\n46\r\n5\r\n37\r\n40\r\n4\r\n27\r\n15\r\n25\r\n17\r\n17\r\n41\r\n48\r\n34\r\n27\r\n38\r\n38\r\n46\r\n29\r\n35\r\n10\r\n36\r\n36\r\n43\r\n20\r\n6\r\n2\r\n12\r\n44\r\n33\r\n6\r\n24\r\n39\r\n32\r\n33\r\n18\r\n30\r\n42\r\n19\r\n49\r\n39\r\n24\r\n12\r\n11\r\n31\r\n7\r\n42\r\n48\r\n7\r\n26\r\n34\r\n23\r\n20\r\n45\r\n40\r\n28\r\n10\r\n9\r\n35\r\n3\r\n45\r\n2\r\n4\r\n9\r\n29\r\n16\r\n43\r\n11\r\n1\r\n5\r\n13\r\n47\r\n13\r\n16\r\n41\r\n50\r\n44\r\n26\r\n22\r\n30\r\n31\r\n22\r\n15\r\n21\r\n37\r\n"
            ],
            [
                "100\r\n72\r\n9\r\n65\r\n37\r\n14\r\n70\r\n76\r\n53\r\n23\r\n22\r\n5\r\n20\r\n13\r\n24\r\n35\r\n46\r\n29\r\n50\r\n88\r\n76\r\n72\r\n48\r\n85\r\n74\r\n47\r\n78\r\n55\r\n69\r\n15\r\n58\r\n47\r\n86\r\n30\r\n37\r\n72\r\n17\r\n99\r\n21\r\n58\r\n94\r\n44\r\n62\r\n52\r\n41\r\n93\r\n74\r\n19\r\n53\r\n14\r\n31\r\n54\r\n21\r\n12\r\n74\r\n62\r\n92\r\n13\r\n8\r\n79\r\n15\r\n29\r\n24\r\n6\r\n93\r\n91\r\n55\r\n21\r\n5\r\n62\r\n73\r\n28\r\n15\r\n86\r\n27\r\n92\r\n20\r\n61\r\n95\r\n36\r\n61\r\n9\r\n94\r\n4\r\n94\r\n3\r\n78\r\n14\r\n13\r\n50\r\n33\r\n43\r\n35\r\n96\r\n64\r\n10\r\n2\r\n9\r\n92\r\n31\r\n71\r\n",
                "36\r\n4\r\n32\r\n18\r\n7\r\n35\r\n38\r\n26\r\n11\r\n11\r\n2\r\n10\r\n6\r\n12\r\n17\r\n23\r\n14\r\n25\r\n44\r\n38\r\n36\r\n24\r\n42\r\n37\r\n23\r\n39\r\n27\r\n34\r\n7\r\n29\r\n23\r\n43\r\n15\r\n18\r\n36\r\n8\r\n49\r\n10\r\n29\r\n47\r\n22\r\n31\r\n26\r\n20\r\n46\r\n37\r\n9\r\n26\r\n7\r\n15\r\n27\r\n10\r\n6\r\n37\r\n31\r\n46\r\n6\r\n4\r\n39\r\n7\r\n14\r\n12\r\n3\r\n46\r\n45\r\n27\r\n10\r\n2\r\n31\r\n36\r\n14\r\n7\r\n43\r\n13\r\n46\r\n10\r\n30\r\n47\r\n18\r\n30\r\n4\r\n47\r\n2\r\n47\r\n1\r\n39\r\n7\r\n6\r\n25\r\n16\r\n21\r\n17\r\n48\r\n32\r\n5\r\n1\r\n4\r\n46\r\n15\r\n35\r\n"
            ],
            [
                "100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n100\r\n",
                "50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n50\r\n"
            ],
            [
                "1\r\n42\r\n",
                "21\r\n"
            ],
            [
                "2\r\n99\r\n7\r\n",
                "49\r\n3\r\n"
            ]
        ]
    }
]