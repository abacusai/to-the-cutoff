[
    {
        "name": "Microtransactions (hard version)",
        "description": "The only difference between easy and hard versions is constraints. Ivan plays\na computer game that contains some microtransactions to make characters look\ncooler. Since Ivan wants his character to be really cool, he wants to use some\nof these microtransactions \u2014 and he won't start playing until he gets all of\nthem. Each day (during the morning) Ivan earns exactly one burle. There are\n\n    n\n types of microtransactions in the game. Each microtransaction costs\n\n    2\n burles usually and \n    1\n burle if it is on sale. Ivan has to order\nexactly \n    k_i\n microtransactions of the \n    i\n-th type (he orders\nmicrotransactions during the evening). Ivan can order any (possibly zero)\nnumber of microtransactions of any types during any day (of course, if he has\nenough money to do it). If the microtransaction he wants to order is on sale\nthen he can buy it for \n    1\n burle and otherwise he can buy it for \n    2\n\nburles. There are also \n    m\n special offers in the game shop. The \n    j\n-th\noffer \n    (d_j, t_j)\n means that microtransactions of the \n    t_j\n-th type\nare on sale during the \n    d_j\n-th day. Ivan wants to order all\nmicrotransactions as soon as possible. Your task is to calculate the minimum\nday when he can buy all microtransactions he want and actually start playing.\nInput The first line of the input contains two integers \n    n\n and \n    m\n\n(\n    1 \n    \u2264 n, m \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of types of\nmicrotransactions and the number of special offers in the game shop. The\nsecond line of the input contains \n    n\n integers \n    k_1, k_2, \n    \u2026,\n    k_n\n (\n    0 \n    \u2264 k_i \n    \u2264 2 \n    \u00b7 10^5\n), where \n    k_i\n is the number\nof copies of microtransaction of the \n    i\n-th type Ivan has to order. It is\nguaranteed that sum of all \n    k_i\n is not less than \n    1\n and not greater\nthan \n    2 \n    \u00b7 10^5\n. The next \n    m\n lines contain special offers. The\n\n    j\n-th of these lines contains the \n    j\n-th special offer. It is given\nas a pair of integers \n    (d_j, t_j)\n (\n    1 \n    \u2264 d_j \n    \u2264 2 \n    \u00b7 10^5, 1\n    \n    \u2264 t_j \n    \u2264 n\n) and means that microtransactions of the \n    t_j\n-th\ntype are on sale during the \n    d_j\n-th day. Output Print one integer \u2014 the\nminimum day when Ivan can order all microtransactions he wants and actually\nstart playing. Examples Input 5 6 1 2 0 2 0 2 4 3 3 1 5 1 2 1 5 2 3 Output 8\nInput 5 3 4 2 1 3 2 3 5 4 2 2 5 Output 20\n\n",
        "cf_contest_id": 1165,
        "cf_index": "F2",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 6\r\n1 2 0 2 0\r\n2 4\r\n3 3\r\n1 5\r\n1 2\r\n1 5\r\n2 3\r\n",
                "8\r\n"
            ],
            [
                "5 3\r\n4 2 1 3 2\r\n3 5\r\n4 2\r\n2 5\r\n",
                "20\r\n"
            ]
        ],
        "private_cases": [
            [
                "78 36\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\r\n1 52\r\n2 6\r\n9 43\r\n10 52\r\n4 63\r\n9 35\r\n10 67\r\n9 17\r\n3 43\r\n4 38\r\n1 27\r\n9 44\r\n6 74\r\n7 3\r\n8 18\r\n1 52\r\n1 68\r\n5 51\r\n5 2\r\n7 50\r\n1 72\r\n1 37\r\n8 64\r\n10 30\r\n2 68\r\n1 59\r\n5 12\r\n9 11\r\n10 23\r\n2 51\r\n10 56\r\n6 17\r\n1 49\r\n3 20\r\n10 62\r\n10 40\r\n",
                "1\r\n"
            ],
            [
                "10 47\r\n1 0 0 1 2 1 1 3 1 3\r\n4 9\r\n15 5\r\n6 2\r\n4 1\r\n23 3\r\n9 10\r\n12 2\r\n5 10\r\n2 4\r\n2 4\r\n18 4\r\n23 5\r\n17 1\r\n22 3\r\n24 4\r\n20 5\r\n7 3\r\n17 10\r\n3 10\r\n12 10\r\n4 6\r\n3 10\r\n24 2\r\n12 1\r\n25 9\r\n12 5\r\n25 2\r\n13 5\r\n6 5\r\n4 9\r\n6 10\r\n7 2\r\n7 9\r\n11 7\r\n9 4\r\n1 1\r\n7 2\r\n8 1\r\n11 9\r\n25 9\r\n7 8\r\n9 9\r\n8 1\r\n6 4\r\n22 8\r\n16 6\r\n22 6\r\n",
                "13\r\n"
            ],
            [
                "4 7\r\n23 78 12 46\r\n100 1\r\n41 3\r\n213 2\r\n321 3\r\n12 2\r\n87 1\r\n76 2\r\n",
                "213\r\n"
            ],
            [
                "5 6\r\n1 2 0 2 0\r\n2 4\r\n3 3\r\n1 5\r\n1 2\r\n1 5\r\n2 3\r\n",
                "8\r\n"
            ],
            [
                "5 3\r\n4 2 1 3 2\r\n3 5\r\n4 2\r\n2 5\r\n",
                "20\r\n"
            ],
            [
                "78 36\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\r\n1 52\r\n2 6\r\n9 43\r\n10 52\r\n4 63\r\n9 35\r\n10 67\r\n9 17\r\n3 43\r\n4 38\r\n1 27\r\n9 44\r\n6 74\r\n7 3\r\n8 18\r\n1 52\r\n1 68\r\n5 51\r\n5 2\r\n7 50\r\n1 72\r\n1 37\r\n8 64\r\n10 30\r\n2 68\r\n1 59\r\n5 12\r\n9 11\r\n10 23\r\n2 51\r\n10 56\r\n6 17\r\n1 49\r\n3 20\r\n10 62\r\n10 40\r\n",
                "1\r\n"
            ],
            [
                "10 47\r\n1 0 0 1 2 1 1 3 1 3\r\n4 9\r\n15 5\r\n6 2\r\n4 1\r\n23 3\r\n9 10\r\n12 2\r\n5 10\r\n2 4\r\n2 4\r\n18 4\r\n23 5\r\n17 1\r\n22 3\r\n24 4\r\n20 5\r\n7 3\r\n17 10\r\n3 10\r\n12 10\r\n4 6\r\n3 10\r\n24 2\r\n12 1\r\n25 9\r\n12 5\r\n25 2\r\n13 5\r\n6 5\r\n4 9\r\n6 10\r\n7 2\r\n7 9\r\n11 7\r\n9 4\r\n1 1\r\n7 2\r\n8 1\r\n11 9\r\n25 9\r\n7 8\r\n9 9\r\n8 1\r\n6 4\r\n22 8\r\n16 6\r\n22 6\r\n",
                "13\r\n"
            ],
            [
                "4 7\r\n23 78 12 46\r\n100 1\r\n41 3\r\n213 2\r\n321 3\r\n12 2\r\n87 1\r\n76 2\r\n",
                "213\r\n"
            ]
        ]
    }
]