[
    {
        "name": "Non-Secret Cypher",
        "description": "Berland starts to seize the initiative on the war with Flatland. To drive the\nenemy from their native land, the berlanders need to know exactly how many\nmore flatland soldiers are left in the enemy's reserve. Fortunately, the\nscouts captured an enemy in the morning, who had a secret encrypted message\nwith the information the berlanders needed so much. The captured enemy had an\narray of positive integers. Berland intelligence have long been aware of the\nflatland code: to convey the message, which contained a number m, the enemies\nuse an array of integers a. The number of its subarrays, in which there are at\nleast k equal numbers, equals m. The number k has long been known in the\nBerland army so General Touristov has once again asked Corporal Vasya to\nperform a simple task: to decipher the flatlanders' message. Help Vasya, given\nan array of integers a and number k, find the number of subarrays of the array\nof numbers a, which has at least k equal numbers. Subarray a[i... j] (1 \u2264 i \u2264\nj \u2264 n) of array a = (a1, a2, ..., an) is an array, made from its consecutive\nelements, starting from the i-th one and ending with the j-th one: a[i... j] =\n(ai, ai + 1, ..., aj). Input The first line contains two space-separated\nintegers n, k (1 \u2264 k \u2264 n \u2264 4\u00b710^5), showing how many numbers an array has and\nhow many equal numbers the subarrays are required to have, correspondingly.\nThe second line contains n space-separated integers ai (1 \u2264 ai \u2264 10^9) \u2014\nelements of the array. Output Print the single number \u2014 the number of such\nsubarrays of array a, that they have at least k equal integers. Please do not\nuse the \npreferred to use the cin, cout streams or the \n4 2 1 2 1 2 Output 3 Input 5 3 1 2 1 1 3 Output 2 Input 3 1 1 1 1 Output 6\nNote In the first sample are three subarrays, containing at least two equal\nnumbers: (1,2,1), (2,1,2) and (1,2,1,2). In the second sample are two\nsubarrays, containing three equal numbers: (1,2,1,1,3) and (1,2,1,1). In the\nthird sample any subarray contains at least one 1 number. Overall they are 6:\n(1), (1), (1), (1,1), (1,1) and (1,1,1).\n\n",
        "cf_contest_id": 190,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "two pointers"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2\r\n1 2 1 2\r\n",
                "3\n"
            ],
            [
                "5 3\r\n1 2 1 1 3\r\n",
                "2\n"
            ],
            [
                "3 1\r\n1 1 1\r\n",
                "6\n"
            ]
        ],
        "private_cases": [
            [
                "20 2\r\n6 7 2 4 6 8 4 3 10 5 3 5 7 9 1 2 8 1 9 10\r\n",
                "131\n"
            ],
            [
                "63 2\r\n1 2 1 2 4 5 1 1 1 1 1 2 3 1 2 3 3 1 1 3 1 1 1 1 2 1 1 6 3 2 1 1 1 1 2 2 3 2 1 1 1 2 1 4 2 1 2 3 2 1 1 1 1 2 4 3 4 2 5 1 1 2 1\r\n",
                "1882\n"
            ],
            [
                "6 3\r\n6 6 4 4 6 2\r\n",
                "2\n"
            ],
            [
                "100 1\r\n5 2 5 1 1 4 1 5 4 5 5 5 4 4 1 3 2 3 1 5 1 4 2 4 5 5 5 2 1 3 2 5 5 4 2 1 3 2 2 2 4 4 4 2 1 1 5 4 2 5 3 4 5 5 5 3 1 3 5 4 1 4 5 2 3 2 5 3 5 1 4 2 2 3 2 4 4 3 2 3 5 3 1 3 4 1 5 4 2 5 4 3 1 4 3 2 1 5 2 5\r\n",
                "5050\n"
            ],
            [
                "1 1\r\n5\r\n",
                "1\n"
            ],
            [
                "2 1\r\n42 1000000000\r\n",
                "3\n"
            ],
            [
                "2 2\r\n193 193\r\n",
                "1\n"
            ],
            [
                "2 2\r\n97 197\r\n",
                "0\n"
            ]
        ]
    }
]