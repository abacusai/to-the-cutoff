[
    {
        "name": "Nephren Runs a Cinema",
        "description": "Lakhesh loves to make movies, so Nephren helps her run a cinema. We may call\nit No. 68 Cinema. However, one day, the No. 68 Cinema runs out of changes\n(they don't have 50-yuan notes currently), but Nephren still wants to start\ntheir business. (Assume that yuan is a kind of currency in Regulu Ere.) There\nare three types of customers: some of them bring exactly a 50-yuan note; some\nof them bring a 100-yuan note and Nephren needs to give a 50-yuan note back to\nhim/her; some of them bring VIP cards so that they don't need to pay for the\nticket. Now n customers are waiting outside in queue. Nephren wants to know\nhow many possible queues are there that they are able to run smoothly (i.e.\nevery customer can receive his/her change), and that the number of 50-yuan\nnotes they have after selling tickets to all these customers is between l and\nr, inclusive. Two queues are considered different if there exists a customer\nwhose type is different in two queues. As the number can be large, please\noutput the answer modulo p. Input One line containing four integers n (1 \u2264 n \u2264\n10^5), p (1 \u2264 p \u2264 2\u00b710^9), l and r (0 \u2264 l \u2264 r \u2264 n). Output One line indicating\nthe answer modulo p. Examples Input 4 97 2 3 Output 13 Input 4 100 0 4 Output\n35 Note We use A, B and C to indicate customers with 50-yuan notes, customers\nwith 100-yuan notes and customers with VIP cards respectively. For the first\nsample, the different possible queues that there are 2 50-yuan notes left are\nAAAB, AABA, ABAA, AACC, ACAC, ACCA, CAAC, CACA and CCAA, and the different\npossible queues that there are 3 50-yuan notes left are AAAC, AACA, ACAA and\nCAAA. So there are 13 different queues satisfying the first sample. Similarly,\nthere are 35 different queues satisfying the second sample.\n\n",
        "cf_contest_id": 896,
        "cf_index": "D",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "chinese remainder theorem",
            "combinatorics",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 97 2 3\r\n",
                "13"
            ],
            [
                "4 100 0 4\r\n",
                "35"
            ]
        ],
        "private_cases": [
            [
                "13 143 6 11\r\n",
                "129"
            ],
            [
                "999 998244353 666 777\r\n",
                "974283165"
            ],
            [
                "23333 1000000007 0 23333\r\n",
                "192355111"
            ],
            [
                "100000 100160063 2332 99774\r\n",
                "68169009"
            ],
            [
                "100000 996991027 54321 67890\r\n",
                "884435812"
            ],
            [
                "1 1 0 0\r\n",
                "0"
            ],
            [
                "1 1 0 1\r\n",
                "0"
            ],
            [
                "1 233332 0 0\r\n",
                "1"
            ],
            [
                "1 999888663 0 1\r\n",
                "2"
            ],
            [
                "1 2000000000 1 1\r\n",
                "1"
            ],
            [
                "2 14 0 0\r\n",
                "2"
            ],
            [
                "2 39 0 1\r\n",
                "4"
            ],
            [
                "2 1999999999 0 2\r\n",
                "5"
            ],
            [
                "2 15 1 1\r\n",
                "2"
            ],
            [
                "2 2 1 2\r\n",
                "1"
            ],
            [
                "2 3 2 2\r\n",
                "1"
            ],
            [
                "3 6 0 0\r\n",
                "4"
            ],
            [
                "3 9 0 1\r\n",
                "0"
            ],
            [
                "3 12 0 2\r\n",
                "0"
            ],
            [
                "3 999 0 3\r\n",
                "13"
            ],
            [
                "3 998244352 1 1\r\n",
                "5"
            ],
            [
                "3 5241 1 2\r\n",
                "8"
            ],
            [
                "3 18 1 3\r\n",
                "9"
            ],
            [
                "3 2 2 2\r\n",
                "1"
            ],
            [
                "3 1234567890 2 3\r\n",
                "4"
            ],
            [
                "3 16 3 3\r\n",
                "1"
            ],
            [
                "4 17 2 4\r\n",
                "14"
            ],
            [
                "4 1 1 3\r\n",
                "0"
            ],
            [
                "4 12 0 3\r\n",
                "10"
            ],
            [
                "4 4 2 3\r\n",
                "1"
            ],
            [
                "4 7 0 0\r\n",
                "2"
            ],
            [
                "4 14 4 4\r\n",
                "1"
            ],
            [
                "95 10007 23 77\r\n",
                "181"
            ],
            [
                "95 1001 16 88\r\n",
                "381"
            ],
            [
                "1024 1073741824 16 512\r\n",
                "716646144"
            ],
            [
                "2287 1895283097 97 2084\r\n",
                "1319976811"
            ],
            [
                "6536 692001792 2018 6535\r\n",
                "81144575"
            ],
            [
                "23333 764411904 222 23333\r\n",
                "405536868"
            ],
            [
                "23333 764411904 0 23332\r\n",
                "164956607"
            ],
            [
                "57684 1987654320 1 57683\r\n",
                "1266501185"
            ],
            [
                "65536 1987654320 33333 44444\r\n",
                "1184495760"
            ],
            [
                "89701 223092870 235 87777\r\n",
                "167375370"
            ],
            [
                "93527 223092870 0 93527\r\n",
                "60956070"
            ],
            [
                "98760 1338557220 16384 65536\r\n",
                "1287074250"
            ],
            [
                "99998 1561650090 10387 99771\r\n",
                "1402030596"
            ],
            [
                "99999 1293938646 55447 55447\r\n",
                "639859770"
            ],
            [
                "99999 2000000000 66666 66666\r\n",
                "1847813839"
            ],
            [
                "100000 901800900 8765 98765\r\n",
                "207662400"
            ],
            [
                "100000 1073741824 2 98304\r\n",
                "754182784"
            ],
            [
                "100000 1064246657 7147 83628\r\n",
                "605219868"
            ],
            [
                "100000 491986259 0 100000\r\n",
                "188914619"
            ],
            [
                "100000 1 98766 99877\r\n",
                "0"
            ],
            [
                "100000 1285743549 0 0\r\n",
                "975152502"
            ],
            [
                "100000 1784742960 125 99988\r\n",
                "1592494880"
            ]
        ]
    }
]