[
    {
        "name": "Leaders",
        "description": "After a revolution in Berland the new dictator faced an unexpected challenge:\nthe country has to be somehow ruled. The dictator is a very efficient manager,\nyet he can't personally give orders to each and every citizen. That's why he\ndecided to pick some set of leaders he would control. Those leaders will\ndirectly order the citizens. However, leadership efficiency turned out to vary\nfrom person to person (i.e. while person A makes an efficient leader, person B\nmay not be that good at it). That's why the dictator asked world-famous\nberland scientists for help. The scientists suggested an innovatory technology\n\u2014 to make the leaders work in pairs. A relationship graph is some undirected\ngraph whose vertices correspond to people. A simple path is a path with no\nrepeated vertices. Long and frighteningly expensive research showed that a\npair of people has maximum leadership qualities if a graph of relationships\nhas a simple path between them with an odd number of edges. The scientists\ndecided to call such pairs of different people leader pairs. Secret services\nprovided the scientists with the relationship graph so that the task is simple\n\u2014 we have to learn to tell the dictator whether the given pairs are leader\npairs or not. Help the scientists cope with the task. Input The first line\ncontains integers n and m (1 \u2264 n \u2264 10^5, 0 \u2264 m \u2264 10^5) \u2014 the number of\nvertices and edges in the relationship graph correspondingly. Next m lines\ncontain pairs of integers a and b which mean that there is an edge between the\na-th and the b-th vertices (the vertices are numbered starting from 1, 1 \u2264 a,\nb \u2264 n). It is guaranteed that the graph has no loops or multiple edges. Next\nline contains number q (1 \u2264 q \u2264 10^5) \u2014 the number of pairs the scientists are\ninterested in. Next q lines contain these pairs (in the same format as the\nedges, the queries can be repeated, a query can contain a pair of the\nidentical vertices). Output For each query print on a single line \"Yes\" if\nthere's a simple odd path between the pair of people; otherwise, print \"No\".\nExamples Input 7 7 1 3 1 4 2 3 2 4 5 6 6 7 7 5 8 1 2 1 3 1 4 2 4 1 5 5 6 5 7 6\n7 Output No Yes Yes Yes No Yes Yes Yes Note Notes to the samples: 1) Between\nvertices 1 and 2 there are 2 different simple paths in total: 1-3-2 and 1-4-2.\nBoth of them consist of an even number of edges. 2) Vertices 1 and 3 are\nconnected by an edge, that's why a simple odd path for them is 1-3. 5)\nVertices 1 and 5 are located in different connected components, there's no\npath between them.\n\n",
        "cf_contest_id": 97,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 7\r\n1 3\r\n1 4\r\n2 3\r\n2 4\r\n5 6\r\n6 7\r\n7 5\r\n8\r\n1 2\r\n1 3\r\n1 4\r\n2 4\r\n1 5\r\n5 6\r\n5 7\r\n6 7\r\n",
                "No\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nYes\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 5\r\n1 2\r\n2 3\r\n3 1\r\n1 4\r\n1 5\r\n4\r\n4 5\r\n1 5\r\n1 4\r\n2 3\r\n",
                "No\r\nYes\r\nYes\r\nYes\r\n"
            ],
            [
                "5 6\r\n1 2\r\n2 3\r\n3 1\r\n1 4\r\n4 5\r\n5 1\r\n6\r\n1 2\r\n1 5\r\n2 4\r\n2 5\r\n1 1\r\n2 2\r\n",
                "Yes\r\nYes\r\nYes\r\nYes\r\nNo\r\nNo\r\n"
            ],
            [
                "10 25\r\n4 5\r\n6 10\r\n5 10\r\n10 8\r\n7 6\r\n6 2\r\n9 1\r\n7 9\r\n4 6\r\n1 7\r\n3 4\r\n8 2\r\n9 8\r\n9 3\r\n6 9\r\n9 10\r\n1 10\r\n3 6\r\n2 4\r\n9 4\r\n7 4\r\n3 10\r\n8 5\r\n10 7\r\n6 1\r\n45\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n1 7\r\n1 8\r\n1 9\r\n1 10\r\n2 2\r\n2 3\r\n2 4\r\n2 5\r\n2 6\r\n2 7\r\n2 8\r\n2 9\r\n2 10\r\n3 3\r\n3 4\r\n3 5\r\n3 6\r\n3 7\r\n3 8\r\n3 9\r\n3 10\r\n4 4\r\n4 5\r\n4 6\r\n4 7\r\n4 8\r\n4 9\r\n4 10\r\n5 5\r\n5 6\r\n5 7\r\n5 8\r\n5 9\r\n5 10\r\n6 6\r\n6 7\r\n6 8\r\n6 9\r\n6 10\r\n",
                "No\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nYes\r\nYes\r\n"
            ],
            [
                "10 30\r\n8 1\r\n1 6\r\n3 1\r\n9 5\r\n9 10\r\n8 4\r\n1 7\r\n4 6\r\n10 1\r\n7 2\r\n3 5\r\n9 3\r\n2 8\r\n7 8\r\n8 3\r\n7 10\r\n7 3\r\n10 4\r\n9 7\r\n6 5\r\n6 7\r\n4 2\r\n2 9\r\n8 5\r\n6 10\r\n5 10\r\n1 9\r\n6 2\r\n4 3\r\n8 6\r\n45\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n1 7\r\n1 8\r\n1 9\r\n1 10\r\n2 2\r\n2 3\r\n2 4\r\n2 5\r\n2 6\r\n2 7\r\n2 8\r\n2 9\r\n2 10\r\n3 3\r\n3 4\r\n3 5\r\n3 6\r\n3 7\r\n3 8\r\n3 9\r\n3 10\r\n4 4\r\n4 5\r\n4 6\r\n4 7\r\n4 8\r\n4 9\r\n4 10\r\n5 5\r\n5 6\r\n5 7\r\n5 8\r\n5 9\r\n5 10\r\n6 6\r\n6 7\r\n6 8\r\n6 9\r\n6 10\r\n",
                "No\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nYes\r\nYes\r\n"
            ],
            [
                "5 5\r\n3 1\r\n4 1\r\n5 3\r\n3 2\r\n3 4\r\n10\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 2\r\n2 3\r\n2 4\r\n2 5\r\n3 3\r\n",
                "No\r\nYes\r\nYes\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nNo\r\nNo\r\n"
            ],
            [
                "2 1\r\n1 2\r\n8\r\n1 2\r\n2 1\r\n1 1\r\n2 2\r\n1 2\r\n2 1\r\n1 1\r\n2 2\r\n",
                "Yes\r\nYes\r\nNo\r\nNo\r\nYes\r\nYes\r\nNo\r\nNo\r\n"
            ],
            [
                "3 3\r\n1 2\r\n1 3\r\n2 3\r\n3\r\n1 2\r\n1 3\r\n2 3\r\n",
                "Yes\r\nYes\r\nYes\r\n"
            ],
            [
                "3 2\r\n1 2\r\n1 3\r\n3\r\n1 2\r\n1 3\r\n2 3\r\n",
                "Yes\r\nYes\r\nNo\r\n"
            ],
            [
                "1 0\r\n5\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "No\r\nNo\r\nNo\r\nNo\r\nNo\r\n"
            ],
            [
                "100000 0\r\n6\r\n1 1\r\n100000 100000\r\n117 117\r\n5 5\r\n77 777\r\n24 36\r\n",
                "No\r\nNo\r\nNo\r\nNo\r\nNo\r\nNo\r\n"
            ]
        ]
    }
]