[
    {
        "name": "Hamster Farm",
        "description": "Dima has a hamsters farm. Soon N hamsters will grow up on it and Dima will\nsell them in a city nearby. Hamsters should be transported in boxes. If some\nbox is not completely full, the hamsters in it are bored, that's why each box\nshould be completely full with hamsters. Dima can buy boxes at a factory. The\nfactory produces boxes of K kinds, boxes of the i-th kind can contain in\nthemselves ai hamsters. Dima can buy any amount of boxes, but he should buy\nboxes of only one kind to get a wholesale discount. Of course, Dima would buy\nboxes in such a way that each box can be completely filled with hamsters and\ntransported to the city. If there is no place for some hamsters, Dima will\nleave them on the farm. Find out how many boxes and of which type should Dima\nbuy to transport maximum number of hamsters. Input The first line contains two\nintegers N and K (0 \u2264 N \u2264 10^18, 1 \u2264 K \u2264 10^5) \u2014 the number of hamsters that\nwill grow up on Dima's farm and the number of types of boxes that the factory\nproduces. The second line contains K integers a1, a2, ..., aK (1 \u2264 ai \u2264 10^18\nfor all i) \u2014 the capacities of boxes. Output Output two integers: the type of\nboxes that Dima should buy and the number of boxes of that type Dima should\nbuy. Types of boxes are numbered from 1 to K in the order they are given in\ninput. If there are many correct answers, output any of them. Examples Input\n19 3 5 4 10 Output 2 4 Input 28 3 5 6 30 Output 1 5\n\n",
        "cf_contest_id": 939,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "19 3\r\n5 4 10\r\n",
                "2 4\r\n"
            ],
            [
                "28 3\r\n5 6 30\r\n",
                "1 5\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n",
                "1 1\r\n"
            ],
            [
                "0 2\r\n2 3\r\n",
                "1 0\r\n"
            ],
            [
                "30 4\r\n4 5 5 4\r\n",
                "2 6\r\n"
            ],
            [
                "120 7\r\n109 92 38 38 49 38 92\r\n",
                "3 3\r\n"
            ],
            [
                "357 40\r\n12 10 12 11 12 12 12 10 10 10 12 12 12 12 12 10 12 10 10 10 11 10 12 10 12 10 12 10 10 12 12 12 12 10 10 10 12 12 12 12\r\n",
                "4 32\r\n"
            ],
            [
                "587 100\r\n92 92 76 95 61 60 64 79 64 96 63 92 60 61 95 71 60 61 65 63 84 76 98 63 90 61 61 71 63 61 95 90 79 71 77 67 63 61 63 60 100 71 98 88 67 95 60 61 79 76 70 61 64 65 64 77 96 95 84 100 67 60 84 92 70 100 63 79 61 77 92 74 60 90 84 80 76 61 88 79 64 61 79 60 61 67 98 98 92 76 61 60 80 77 77 76 63 88 99 70\r\n",
                "19 9\r\n"
            ],
            [
                "98765 30\r\n89 841 599 240 356 599 92 305 305 536 356 92 622 1000 751 522 89 149 356 598 305 518 996 92 622 536 356 91 779 770\r\n",
                "28 1085\r\n"
            ],
            [
                "947264836 50\r\n977141206 956777871 186433588 538218068 759102378 327484438 88827268 266300062 670616672 756092978 414181331 913675814 898008516 343057716 99416265 236586817 52751842 550467703 684435578 844649988 917709231 550467703 493542638 707106470 414181331 198095018 913675814 99416265 550467703 679553907 186433588 355713982 670616672 977141206 504598561 327484438 414181331 463431413 546229641 132582931 463431413 759102378 273063720 683939057 924604119 759102378 463431413 52751842 552131077 903126340\r\n",
                "16 4\r\n"
            ],
            [
                "600003000040000507 10\r\n334302557805985467 334302557805985467 681026146296527968 157006854340095780 188330644415015186 803011712275585087 638039699540420111 638039699540420111 600874219702299205 923891462598005659\r\n",
                "5 3\r\n"
            ],
            [
                "666 2\r\n1 300\r\n",
                "1 666\r\n"
            ],
            [
                "899999999999999991 1\r\n199999999999999998\r\n",
                "1 4\r\n"
            ],
            [
                "10 1\r\n11\r\n",
                "1 0\r\n"
            ],
            [
                "999999999999999999 1\r\n500000000000000000\r\n",
                "1 1\r\n"
            ],
            [
                "2 1\r\n2\r\n",
                "1 1\r\n"
            ],
            [
                "199999999999999999 1\r\n100000000000000000\r\n",
                "1 1\r\n"
            ],
            [
                "999999999999999999 1\r\n1000000000000000000\r\n",
                "1 0\r\n"
            ],
            [
                "1000000000000000000 1\r\n500000000000000001\r\n",
                "1 1\r\n"
            ],
            [
                "1000000000000000000 1\r\n2\r\n",
                "1 500000000000000000\r\n"
            ],
            [
                "1000000000000000000 5\r\n500000000000000010 500000000000000010 500000000000000010 500000000000000010 500000000000000030\r\n",
                "5 1\r\n"
            ],
            [
                "1000000000000000000 1\r\n900000000000000000\r\n",
                "1 1\r\n"
            ]
        ]
    }
]