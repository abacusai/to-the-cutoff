[
    {
        "name": "Prefix-Suffix Palindrome (Easy version)",
        "description": "This is the easy version of the problem. The difference is the constraint on\nthe sum of lengths of strings and the number of test cases. You can make hacks\nonly if you solve all versions of this task. You are given a string \n    s\n,\nconsisting of lowercase English letters. Find the longest string, \n    t\n,\nwhich satisfies the following conditions: The length of \n    t\n does not\nexceed the length of \n    s\n. \n    t\n is a palindrome. There exists two\nstrings \n    a\n and \n    b\n (possibly empty), such that \n    t = a + b\n (\n\"\n    +\n\" represents concatenation), and \n    a\n is prefix of \n    s\n while\n\n    b\n is suffix of \n    s\n. Input The input consists of multiple test cases.\nThe first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    1000\n), the number of test cases. The next \n    t\n lines each describe a\ntest case. Each test case is a non-empty string \n    s\n, consisting of\nlowercase English letters. It is guaranteed that the sum of lengths of strings\nover all test cases does not exceed \n    5000\n. Output For each test case,\nprint the longest string which satisfies the conditions described above. If\nthere exists multiple possible solutions, print any of them. Example Input 5 a\nabcdfdcecba abbaxyzyx codeforces acbba Output a abcdfdcba xyzyx c abba Note In\nthe first test, the string \n    s =\n\"a\" satisfies all conditions. In the\nsecond test, the string \"abcdfdcba\" satisfies all conditions, because: Its\nlength is \n    9\n, which does not exceed the length of the string \n    s\n,\nwhich equals \n    11\n. It is a palindrome. \"abcdfdcba\" \n    =\n \"abcdfdc\"\n\n    +\n \"ba\", and \"abcdfdc\" is a prefix of \n    s\n while \"ba\" is a suffix of\n\n    s\n. It can be proven that there does not exist a longer string which\nsatisfies the conditions. In the fourth test, the string \"c\" is correct,\nbecause \"c\" \n    =\n \"c\" \n    +\n \"\" and \n    a\n or \n    b\n can be empty. The\nother possible solution for this test is \"s\".\n\n",
        "cf_contest_id": 1326,
        "cf_index": "D1",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "hashing",
            "string suffix structures",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\na\r\nabcdfdcecba\r\nabbaxyzyx\r\ncodeforces\r\nacbba\r\n",
                "a\r\nabcdfdcba\r\nxyzyx\r\ns\r\nabba\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\nu\r\nxqpczgnzazxyrvx\r\ncfjgfhxmzqmjgzzjthziuomldylspyfuxvjlgdc\r\nooydbldio\r\nyvaamavy\r\nrzjjebcgotjffuzr\r\nhtfkwvihzuwxczopzqujdnaorgxibjfcmlzntskawxhyoymwynitukttewfpajuph\r\nfactnjajntcaf\r\nywowyovhrgradhtrqkgurkjpudnrrqhmmwiaqicfxnoyejdsmmurusdzqgjjntocryhqsgr\r\nqq\r\n",
                "u\r\nxvx\r\ncdc\r\noio\r\nyvamavy\r\nrzjjzr\r\nhph\r\nfactnjajntcaf\r\nywowy\r\nqq\r\n"
            ],
            [
                "1\r\nqjprjjjjrpjquiytxjjxtyiu\r\n",
                "uiytxjjxtyiu\r\n"
            ],
            [
                "1\r\nzsrfqaaqfrszkgzgrxxrgzgk\r\n",
                "kgzgrxxrgzgk\r\n"
            ],
            [
                "1\r\nabczdunbqlckfpyktalxycba\r\n",
                "abcycba\r\n"
            ],
            [
                "1\r\ncaszenpxwt\r\n",
                "t\r\n"
            ],
            [
                "1\r\ngsfhsddshfsgpxzaaffaazxp\r\n",
                "pxzaaffaazxp\r\n"
            ],
            [
                "1\r\nbjxxcwxaaaaaaa\r\n",
                "aaaaaaa\r\n"
            ],
            [
                "2\r\nbyklvkupcupkhibyklvkupcupkhibyklvkupcupkhiihkpucpukvlkybihkpucpukvlkybihkpucpukvlkybbyklvkupcupkhibyklvkupcupkhiihkpucpukvlkybihkpucpukvlkybihkpucpukvlkybbyklvkupcupkhibyklvkupcupkhiihkpucpukvlkybihkpucpukvlkybihkpucpukvlkybihkpucpukvlkybihkpucpukvlkybihkpucpukvlkybihkpucpukvlkybbyklvkupcupkhiihkpucpukvlkybihkpucpukvlkybbyklvkupcupkhibyklvkupcupkhiihkpucpukvlkybihkpucpukvlkybihkpucpukvlkybbyklvkupcupkhibyklvkupcupkhibyklvkupcupkhi\r\nnlzrpjtbffovc\r\n",
                "ihkpucpukvlkybihkpucpukvlkybihkpucpukvlkybbyklvkupcupkhibyklvkupcupkhibyklvkupcupkhi\r\nc\r\n"
            ],
            [
                "1\r\nitxsssxvjffckdnrjzsxti\r\n",
                "itxssssxti\r\n"
            ],
            [
                "1\r\natacafaadcbaaaaamghaoaaafihahyaafakaafaaaaaafdlnaaaieaeaafdkaaaaagnpaamjaaaagdfaaaacaagaaejaaaaagfdadmabiaaalfaacaaabkaafaaaffbanaaaiaakaeav\r\n",
                "ata\r\n"
            ]
        ]
    }
]