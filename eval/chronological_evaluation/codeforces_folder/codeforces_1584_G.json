[
    {
        "name": "Eligible Segments",
        "description": "You are given \n    n\n distinct points \n    p_1, p_2, \n    \u2026, p_n\n on the\nplane and a positive integer \n    R\n. Find the number of pairs of indices\n\n    (i, j)\n such that \n    1 \n    \u2264 i < j \n    \u2264 n\n, and for every possible\n\n    k\n (\n    1 \n    \u2264 k \n    \u2264 n\n) the distance from the point \n    p_k\n to the\nsegment between points \n    p_i\n and \n    p_j\n is at most \n    R\n. Input The\nfirst line contains two integers \n    n\n, \n    R\n (\n    1 \n    \u2264 n \n    \u2264 3000\n,\n\n    1 \n    \u2264 R \n    \u2264 10^5\n) \u2014 the number of points and the maximum distance\nbetween a point and a segment. Each of the next \n    n\n lines contains two\nintegers \n    x_i\n, \n    y_i\n (\n    -10^5 \n    \u2264 x_i, y_i \n    \u2264 10^5\n) that\ndefine the \n    i\n-th point \n    p_i=(x_i, y_i)\n. All points are distinct. It\nis guaranteed that the answer does not change if the parameter \n    R\n is\nchanged by at most \n    10^-2\n. Output Print the number of suitable pairs\n\n    (i, j)\n. Examples Input 4 2 0 1 0 -1 3 0 -3 0 Output 1 Input 3 3 1 -1 -1\n-1 0 1 Output 3 Note In the first example, the only pair of points \n    (-3,\n    0)\n, \n    (3, 0)\n is suitable. The distance to the segment between these\npoints from the points \n    (0, 1)\n and \n    (0, -1)\n is equal to \n    1\n,\nwhich is less than \n    R=2\n. In the second example, all possible pairs of\npoints are eligible.\n\n",
        "cf_contest_id": 1584,
        "cf_index": "G",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "geometry"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2\r\n0 1\r\n0 -1\r\n3 0\r\n-3 0\r\n",
                "1"
            ],
            [
                "3 3\r\n1 -1\r\n-1 -1\r\n0 1\r\n",
                "3"
            ]
        ],
        "private_cases": [
            [
                "1 10\r\n3 -1\r\n",
                "0"
            ],
            [
                "2 10\r\n1 -2\r\n0 1\r\n",
                "1"
            ],
            [
                "5 10\r\n-2 0\r\n-3 2\r\n-2 -2\r\n-1 2\r\n1 3\r\n",
                "10"
            ],
            [
                "50 100\r\n15 -5\r\n-24 -18\r\n-19 25\r\n17 28\r\n19 -35\r\n12 -22\r\n-26 3\r\n-33 11\r\n20 16\r\n12 -11\r\n-20 -15\r\n-3 20\r\n-24 31\r\n28 -1\r\n23 -16\r\n-20 -28\r\n13 -27\r\n30 -23\r\n14 -22\r\n-13 -32\r\n-15 1\r\n9 27\r\n28 -5\r\n15 25\r\n31 24\r\n-15 -31\r\n21 28\r\n9 16\r\n-9 -16\r\n1 -23\r\n17 24\r\n-15 -4\r\n-27 13\r\n8 18\r\n19 -23\r\n13 -31\r\n-8 -6\r\n-10 3\r\n-29 22\r\n24 -24\r\n-27 -6\r\n22 29\r\n25 24\r\n5 18\r\n-23 9\r\n11 28\r\n8 12\r\n12 -33\r\n-28 -12\r\n23 -4\r\n",
                "1225"
            ],
            [
                "10 7\r\n5 0\r\n5 4\r\n2 -5\r\n-4 0\r\n-3 0\r\n-6 0\r\n7 -6\r\n3 0\r\n0 -2\r\n-3 -2\r\n",
                "5"
            ]
        ]
    }
]