[
    {
        "name": "XOR Inverse",
        "description": "You are given an array \n    a\n consisting of \n    n\n non-negative integers.\nYou have to choose a non-negative integer \n    x\n and form a new array \n    b\n\nof size \n    n\n according to the following rule: for all \n    i\n from \n    1\n\nto \n    n\n, \n    b_i = a_i \n    \u2295 x\n (\n    \u2295\n denotes the operation\nbitwise XOR). An inversion in the \n    b\n array is a pair of integers \n    i\n\nand \n    j\n such that \n    1 \n    \u2264 i < j \n    \u2264 n\n and \n    b_i > b_j\n. You\nshould choose \n    x\n in such a way that the number of inversions in \n    b\n\nis minimized. If there are several options for \n    x\n \u2014 output the smallest\none. Input First line contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 3\n    \n    \u00b7 10^5\n) \u2014 the number of elements in \n    a\n. Second line contains\n\n    n\n space-separated integers \n    a_1\n, \n    a_2\n, ..., \n    a_n\n (\n    0\n    \n    \u2264 a_i \n    \u2264 10^9\n), where \n    a_i\n is the \n    i\n-th element of\n\n    a\n. Output Output two integers: the minimum possible number of inversions\nin \n    b\n, and the minimum possible value of \n    x\n, which achieves those\nnumber of inversions. Examples Input 4 0 1 3 2 Output 1 0 Input 9 10 7 9 10 7\n5 5 3 5 Output 4 14 Input 3 8 10 3 Output 0 8 Note In the first sample it is\noptimal to leave the array as it is by choosing \n    x = 0\n. In the second\nsample the selection of \n    x = 14\n results in \n    b\n: \n    [4, 9, 7, 4, 9,\n    11, 11, 13, 11]\n. It has \n    4\n inversions: \n    i = 2\n, \n    j = 3\n; \n    i\n    = 2\n, \n    j = 4\n; \n    i = 3\n, \n    j = 4\n; \n    i = 8\n, \n    j = 9\n. In\nthe third sample the selection of \n    x = 8\n results in \n    b\n: \n    [0, 2,\n    11]\n. It has no inversions.\n\n",
        "cf_contest_id": 1416,
        "cf_index": "C",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "math",
            "sortings",
            "strings",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n0 1 3 2\r\n",
                "1 0\r\n"
            ],
            [
                "9\r\n10 7 9 10 7 5 5 3 5\r\n",
                "4 14\r\n"
            ],
            [
                "3\r\n8 10 3\r\n",
                "0 8\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n1000000000 1000000000 1000000000 0 0\r\n",
                "0 536870912\r\n"
            ],
            [
                "1\r\n0\r\n",
                "0 0\r\n"
            ],
            [
                "3\r\n2 24 18\r\n",
                "0 8\r\n"
            ],
            [
                "7\r\n23 18 5 10 29 33 36\r\n",
                "3 16\r\n"
            ],
            [
                "19\r\n1 32 25 40 18 32 5 23 38 1 35 24 39 26 0 9 26 37 0\r\n",
                "65 49\r\n"
            ],
            [
                "96\r\n79 50 37 49 30 58 90 41 77 73 31 10 8 57 73 90 86 73 72 5 43 15 11 2 59 31 38 66 19 63 33 17 14 16 44 3 99 89 11 43 14 86 10 37 1 100 84 81 57 88 37 80 65 11 18 91 18 94 76 26 73 47 49 73 21 60 69 20 72 7 5 86 95 11 93 30 84 37 34 7 15 24 95 79 47 87 64 40 2 24 49 36 83 25 71 17\r\n",
                "2045 43\r\n"
            ],
            [
                "100\r\n74 88 64 8 9 27 63 64 79 97 92 38 26 1 4 4 2 64 53 62 24 82 76 40 48 58 40 59 3 56 35 37 0 30 93 71 14 97 49 37 96 59 56 55 70 88 77 99 51 55 71 25 10 31 26 50 61 18 35 55 49 33 86 25 65 74 89 99 5 27 2 9 67 29 76 68 66 22 68 59 63 16 62 25 35 57 63 35 41 68 86 22 91 67 61 3 92 46 96 74\r\n",
                "2290 10\r\n"
            ],
            [
                "94\r\n89 100 92 24 4 85 63 87 88 94 68 14 61 59 5 77 82 6 13 13 25 43 80 67 29 42 89 35 72 81 35 0 12 35 53 54 63 37 52 33 11 84 64 33 65 58 89 37 59 32 23 92 14 12 30 61 5 78 39 73 21 37 64 50 10 97 12 94 20 65 63 41 86 60 47 72 79 65 31 56 23 5 85 44 4 34 66 1 92 91 60 43 18 58\r\n",
                "1961 87\r\n"
            ]
        ]
    }
]