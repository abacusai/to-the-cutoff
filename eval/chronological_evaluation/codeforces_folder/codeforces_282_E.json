[
    {
        "name": "Sausage Maximization",
        "description": "The Bitlandians are quite weird people. They have their own problems and their\nown solutions. They have their own thoughts and their own beliefs, they have\ntheir own values and their own merits. They have their own dishes and their\nown sausages! In Bitland a sausage is an array of integers! A sausage's\ndeliciousness is equal to the bitwise excluding OR (the xor operation) of all\nintegers in that sausage. One day, when Mr. Bitkoch (the local cook) was going\nto close his BitRestaurant, BitHaval and BitAryo, the most famous citizens of\nBitland, entered the restaurant and each ordered a sausage. But Mr. Bitkoch\nhad only one sausage left. So he decided to cut a prefix (several, may be\nzero, first array elements) of the sausage and give it to BitHaval and a\npostfix (several, may be zero, last array elements) of the sausage and give it\nto BitAryo. Note that one or both pieces of the sausage can be empty. Of\ncourse, the cut pieces mustn't intersect (no array element can occur in both\npieces). The pleasure of BitHaval and BitAryo is equal to the bitwise XOR of\ntheir sausages' deliciousness. An empty sausage's deliciousness equals zero.\nFind a way to cut a piece of sausage for BitHaval and BitAryo that maximizes\nthe pleasure of these worthy citizens. Input The first line contains an\ninteger n (1 \u2264 n \u2264 10^5). The next line contains n integers a1, a2, ..., an (0\n\u2264 ai \u2264 10^12) \u2014 Mr. Bitkoch's sausage. Please, do not use the \nto read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout\nstreams or the \npleasure BitHaval and BitAryo can get from the dinner. Examples Input 2 1 2\nOutput 3 Input 3 1 2 3 Output 3 Input 2 1000 1000 Output 1000\n\n",
        "cf_contest_id": 282,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "data structures",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1 2\r\n",
                "3\r\n"
            ],
            [
                "3\r\n1 2 3\r\n",
                "3\r\n"
            ],
            [
                "2\r\n1000 1000\r\n",
                "1000\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 2 3 4 5 6 7 8 9 10\r\n",
                "15\r\n"
            ],
            [
                "4\r\n4 4 4 4\r\n",
                "4\r\n"
            ],
            [
                "12\r\n1 2 1 2 1 2 1 2 1 2 1 2\r\n",
                "3\r\n"
            ],
            [
                "4\r\n1 2 4 8\r\n",
                "15\r\n"
            ],
            [
                "4\r\n1 2 4 12\r\n",
                "15\r\n"
            ],
            [
                "6\r\n13 21 3 61 1 2\r\n",
                "62\r\n"
            ],
            [
                "59\r\n4 3 22 1 7 6 3 1 10 3 11 6 1 5 2 1 1 15 6 34 39 3 6 1 254 16 2 1 3 69 2 3 1 6 26 22 1 76 3 2 167 1 6 5 1 5 8 2 2 1 20 4 186 1 71 1 6 7 2\r\n",
                "255\r\n"
            ],
            [
                "75\r\n5 35 5 1 94 120 23 1 132 15 51 26 1 10 2 65 2 32 10 22 4 1 10 315 4 1 99 9 4 9 103 2 1 26 14 11 1 5 28 3 4 2 5 38 4 6 15 1 2 3 6 25 4 1 494 42 3 76 6 4 1 117 13 3 3 14 1 503 24 9 4 2 2 15 3\r\n",
                "511\r\n"
            ],
            [
                "87\r\n5 1 19 27 100 32 8 786 1 287 2 49 5 2 107 3 16 99 15 5 3 25 177 6 4 8 2 6 1 1 3 4 41 1 11 2 43 31 1 3 2 1 4 4 1 4 7 4 2 12 1 4 2 871 2 8 46 1 94 4 11 1 5 1 2 1 40 28 1 2 7 29 17 948 1 6 15 2 9 1 2 1 1 38 9 29 1\r\n",
                "1023\r\n"
            ],
            [
                "51\r\n9 7 1 621 6 19 1 3 11 2 7 1 16 3 2 5 5 11 5 2 343 1 1 2 29 10 2 4 4 1 3 3 1 12 1 107 5 1 87 3 9 194 6 2 45 9 2 115 1 1 2\r\n",
                "1023\r\n"
            ],
            [
                "63\r\n258 5 144 1 1 34 71 731 1 4 21 15 7 2 2 64 2 78 50 1 6 301 1 4 39 123 1 3 277 4 168 36 2 1 2 11 3 2 1 9 238 315 1 26 8 3 1 1 3 5 4 2 1 3 36 2 6 2 9 4 3 3 10\r\n",
                "1009\r\n"
            ],
            [
                "79\r\n6 13 2 12 4 1 4 6 2 113 175 5 6 65 1 2 13 15 1 240 6 2 5 1 1 4 20 2 11 1 1 2 33 2 1 3 3 22 1 9 1 694 444 12 3 2 1 5 4 4 9 9 71 2 266 17 1 3 8 6 3 2 2 2 79 3 10 14 57 2 1 3 113 77 1 26 6 1 16\r\n",
                "1007\r\n"
            ],
            [
                "95\r\n43 4 49 1 2 3 32 44 7 1 2 2 1 155 13 1 1 3 669 3 164 10 19 9 1 4 3 2 1 43 1 281 1 1 3 1 99 2 4 3 42 12 6 22 1 1 224 6 27 3 100 2 12 1 1 5 31 3 1 5 2 3 1 1 21 19 1 19 17 3 9 5 1 5 18 1 19 408 6 3 47 455 2 1 3 9 3 14 39 1 124 3 1 10 1\r\n",
                "1023\r\n"
            ],
            [
                "55\r\n4 3 5 16 1 13 5 84 2 121 10 13 1 1 1 1 467 3 53 4 13 19 2 2 94 1 1 7 17 1 1 1 9 108 2 2 2 8 31 9 4 7 5 3 1 3 1 1 5 5 1 4 1 4 1\r\n",
                "511\r\n"
            ],
            [
                "71\r\n2 45 2 83 11 66 1 1 17 3 2 2 16 1 12 6 2 3 8 1 11 1 1 4 2 82 3 9 1 1 25 33 1 20 2 17 17 17 53 147 34 4 11 26 2 1 1 3 1 18 406 7 7 30 1 3 1 5 3 1 2 4 526 13 27 3 9 8 1 5 2\r\n",
                "1023\r\n"
            ],
            [
                "83\r\n1 10 16 1 29 2 5 2 3 5 1 7 1 2 23 31 1 2 4 9 21 1 1 6 8 5 1 1 5 3 6 1 542 112 65 128 11 4 2 55 1 8 2 4 711 5 1 6 26 3 2 1 33 2 1 4 2 2 32 3 1 3 7 112 1 2 5 1 1 1 1 2 11 2 1 5 3 3 1 229 1 18 12\r\n",
                "766\r\n"
            ],
            [
                "100\r\n4 12 1 4 3 27 192 2 3 2 133 2 1 1 333 1 1 371 1 2 5 1 16 4 1 3 4 8 3 35 3 724 19 2 203 7 2 17 11 1 1 5 148 1 6 3 12 12 6 118 29 1 29 1 1 5 23 1 11 7 1 2 651 28 4 1 100 1 729 37 1 5 1 9 1 4 2 1 1 9 100 3 1 1 5 8 490 60 2 4 11 3 1 7 6 3 29 8 7 7\r\n",
                "1023\r\n"
            ],
            [
                "17\r\n2 5 14 3 1 15 7 372 1 78 6 1 3 2 4 5 2\r\n",
                "375\r\n"
            ],
            [
                "77\r\n7 19 6 3 1 7 11 2 17 1 1 450 3 1 2 13 39 46 1 3 4 4 2 1 5 19 6 1 5 7 4 1 4 7 12 5 521 5 2 7 5 44 2 4 1 4 4 1 1 2 3 1 3 3 17 68 12 106 11 1 1 2 2 1 2 11 3 47 2 1 73 8 1 11 32 1 1\r\n",
                "1023\r\n"
            ],
            [
                "93\r\n5 1 7 75 5 13 1 1 1 4 27 6 2 3 6 3 4 13 10 2 10 4 45 5 14 2 1 1 6 25 1 28 1 2 8 25 1 8 462 7 3 15 6 1 1 5 6 8 857 1 1 1 7 2 1 2 115 5 8 3 1 14 8 463 20 1 16 8 6 3 3 1 3 7 12 5 1 1 3 4 2 1 1 350 7 1 1 8 2 1 2 1 86\r\n",
                "1023\r\n"
            ],
            [
                "5\r\n2 19 4 9 24\r\n",
                "28\r\n"
            ],
            [
                "21\r\n1 14 4 2 16 1 1 12 9 13 26 1 20 6 52 17 2 1 100 4 1\r\n",
                "127\r\n"
            ],
            [
                "85\r\n6 43 3 3 1 55 62 3 1 1 12 13 4 1 1 18 3 1 1 3 2 13 1 6 89 3 5 2 33 11 3 1 6 2 273 6 3 10 1 2 1 1 24 33 1 2 14 10 103 39 912 6 35 15 349 1 7 14 11 15 9 3 1 1 4 3 5 1 1 1 12 4 6 1 5 13 3 3 1 1 1 1 2 3 1\r\n",
                "1023\r\n"
            ],
            [
                "97\r\n18 1 2 6 6 209 3 6 1 7 3 620 10 3 3 1 1 2 7 5 2 1 1 1 4 93 12 4 799 1 240 1 8 8 7 1 2 4 8 23 213 2 2 10 3 2 1 28 854 11 8 4 3 22 41 4 8 2 2 5 160 1 1 95 2 30 4 8 4 2 1 5 1 1 2 1 3 1 1 13 8 1 1 1 2 4 16 10 1 4 177 1 35 1 1 18 2\r\n",
                "1023\r\n"
            ],
            [
                "13\r\n3 1 1 11 21 3 95 1 1 33 105 2 117\r\n",
                "127\r\n"
            ],
            [
                "25\r\n1 4 529 35 28 8 11 1 18 12 4 25 4 21 1 7 6 111 1 4 2 11 6 1 12\r\n",
                "637\r\n"
            ],
            [
                "34\r\n3 4 1 2 158 1 1 122 8 4 2 1 2 63 1 9 460 2 15 9 3 206 3 58 2 1 3 8 1 1 3 1 12 21\r\n",
                "511\r\n"
            ],
            [
                "50\r\n1 5 2 5 9 5 20 6 6 2 2 12 2 13 2 3 2 17 1 3 50 30 95 2 20 10 9 1 1 4 1 50 1 1 24 2 1 15 11 1 1 1 2 1 7 95 1 155 1 2\r\n",
                "255\r\n"
            ],
            [
                "10\r\n29 1 2 8 2 138 170 4 7 1\r\n",
                "190\r\n"
            ],
            [
                "10\r\n0 0 0 0 0 0 0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "1\r\n12345\r\n",
                "12345\r\n"
            ],
            [
                "1\r\n210\r\n",
                "210\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n15\r\n",
                "15\r\n"
            ],
            [
                "1\r\n1000000000000\r\n",
                "1000000000000\r\n"
            ],
            [
                "1\r\n123456789012\r\n",
                "123456789012\r\n"
            ],
            [
                "1\r\n9\r\n",
                "9\r\n"
            ],
            [
                "1\r\n3\r\n",
                "3\r\n"
            ],
            [
                "1\r\n987654321\r\n",
                "987654321\r\n"
            ],
            [
                "1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10\r\n",
                "10\r\n"
            ]
        ]
    }
]