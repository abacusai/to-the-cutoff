[
    {
        "name": "24 Game",
        "description": "Little X used to play a card game called \"24 Game\", but recently he has found\nit too easy. So he invented a new game. Initially you have a sequence of n\nintegers: 1, 2, ..., n. In a single step, you can pick two of them, let's\ndenote them a and b, erase them from the sequence, and append to the sequence\neither a + b, or a - b, or a \u00d7 b. After n - 1 steps there is only one number\nleft. Can you make this number equal to 24? Input The first line contains a\nsingle integer n (1 \u2264 n \u2264 10^5). Output If it's possible, print \"YES\" in the\nfirst line. Otherwise, print \"NO\" (without the quotes). If there is a way to\nobtain 24 as the result number, in the following n - 1 lines print the\nrequired operations an operation per line. Each operation should be in form:\n\"a op b = c\". Where a and b are the numbers you've picked at this operation;\nop is either \"+\", or \"-\", or \"*\"; c is the result of corresponding operation.\nNote, that the absolute value of c mustn't be greater than 10^18. The result\nof the last operation must be equal to 24. Separate operator sign and equality\nsign from numbers with spaces. If there are multiple valid answers, you may\nprint any of them. Examples Input 1 Output NO Input 8 Output YES 8 * 7 = 56 6\n* 5 = 30 3 - 4 = -1 1 - 2 = -1 30 - -1 = 31 56 - 31 = 25 25 + -1 = 24\n\n",
        "cf_contest_id": 468,
        "cf_index": "A",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n",
                "NO\r\n"
            ],
            [
                "8\r\n",
                "YES\r\n1 * 2 = 2\r\n2 * 3 = 6\r\n4 * 6 = 24\r\n6 - 5 = 1\r\n1 * 24 = 24\r\n8 - 7 = 1\r\n1 * 24 = 24\r\n"
            ]
        ],
        "private_cases": [
            [
                "12\r\n",
                "YES\r\n1 * 2 = 2\r\n2 * 3 = 6\r\n4 * 6 = 24\r\n6 - 5 = 1\r\n1 * 24 = 24\r\n8 - 7 = 1\r\n1 * 24 = 24\r\n10 - 9 = 1\r\n1 * 24 = 24\r\n12 - 11 = 1\r\n1 * 24 = 24\r\n"
            ],
            [
                "2\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n",
                "YES\r\n1 * 2 = 2\r\n2 * 3 = 6\r\n4 * 6 = 24\r\n"
            ],
            [
                "5\r\n",
                "YES\r\n2 * 4 = 8\r\n3 * 5 = 15\r\n1 + 8 = 9\r\n9 + 15 = 24\r\n"
            ],
            [
                "6\r\n",
                "YES\r\n1 * 2 = 2\r\n2 * 3 = 6\r\n4 * 6 = 24\r\n6 - 5 = 1\r\n1 * 24 = 24\r\n"
            ],
            [
                "7\r\n",
                "YES\r\n2 * 4 = 8\r\n3 * 5 = 15\r\n1 + 8 = 9\r\n9 + 15 = 24\r\n7 - 6 = 1\r\n1 * 24 = 24\r\n"
            ],
            [
                "4\r\n",
                "YES\r\n1 * 2 = 2\r\n2 * 3 = 6\r\n4 * 6 = 24\r\n"
            ],
            [
                "7\r\n",
                "YES\r\n2 * 4 = 8\r\n3 * 5 = 15\r\n1 + 8 = 9\r\n9 + 15 = 24\r\n7 - 6 = 1\r\n1 * 24 = 24\r\n"
            ],
            [
                "3\r\n",
                "NO\r\n"
            ]
        ]
    }
]