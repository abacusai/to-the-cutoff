[
    {
        "name": "Set subtraction",
        "description": "You are given a starting set consisting of all integers from 1 to 1000,\ninclusive. You are also given several sets which need to be subtracted from\nthe starting set (i.e., each number which is in at least one of these sets\nneeds to be removed from the starting set). Each subtracted set is represented\nas an interval of integers from A to B, inclusive. Output the result after all\nsubtractions. Input The first line of input contains an integer N (0 \u2264 N \u2264\n100) \u2014 the number of intervals to be subtracted. The following N lines contain\npairs of integers A and B (1 \u2264 A \u2264 B \u2264 1000) \u2014 lower and upper bounds of the\nintervals. Intervals can intersect. An interval can consist of a single\nnumber. Output Output the result of subtractions in the following format: in\none line output first the number of integers in the resulting set and then the\nintegers of the set, sorted in increasing order, separated by single space.\nExamples Input 2 1 900 902 999 Output 2 901 1000 Input 3 1 500 200 746 150\n1000 Output 0\n\n",
        "cf_contest_id": 530,
        "cf_index": "D",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "*special"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1 900\r\n902 999\r\n",
                "2 901 1000\r\n"
            ],
            [
                "3\r\n1 500\r\n200 746\r\n150 1000\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 1000\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1 999\r\n",
                "1 1000\r\n"
            ],
            [
                "3\r\n1 333\r\n334 667\r\n668 1000\r\n",
                "0\r\n"
            ],
            [
                "28\r\n85 815\r\n533 972\r\n220 861\r\n69 686\r\n271 952\r\n196 576\r\n406 922\r\n932 953\r\n498 950\r\n19 232\r\n746 865\r\n297 646\r\n523 819\r\n243 783\r\n248 725\r\n572 989\r\n50 722\r\n666 709\r\n698 745\r\n139 560\r\n493 821\r\n9 743\r\n240 747\r\n42 789\r\n477 868\r\n242 307\r\n203 274\r\n303 719\r\n",
                "19 1 2 3 4 5 6 7 8 990 991 992 993 994 995 996 997 998 999 1000\r\n"
            ],
            [
                "41\r\n69 936\r\n176 399\r\n772 871\r\n265 540\r\n142 295\r\n833 864\r\n37 617\r\n221 873\r\n239 359\r\n412 649\r\n124 550\r\n229 946\r\n407 885\r\n570 678\r\n393 666\r\n462 795\r\n115 862\r\n167 355\r\n143 294\r\n401 409\r\n119 473\r\n332 785\r\n56 254\r\n371 918\r\n301 393\r\n645 775\r\n255 505\r\n307 376\r\n345 485\r\n113 602\r\n151 652\r\n82 474\r\n378 902\r\n105 158\r\n317 399\r\n175 627\r\n53 932\r\n677 737\r\n787 957\r\n19 707\r\n325 404\r\n",
                "61 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000\r\n"
            ]
        ]
    }
]