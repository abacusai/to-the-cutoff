[
    {
        "name": "Image Preview",
        "description": "Vasya's telephone contains n photos. Photo number 1 is currently opened on the\nphone. It is allowed to move left and right to the adjacent photo by swiping\nfinger over the screen. If you swipe left from the first photo, you reach\nphoto n. Similarly, by swiping right from the last photo you reach photo 1. It\ntakes a seconds to swipe from photo to adjacent. For each photo it is known\nwhich orientation is intended for it \u2014 horizontal or vertical. Phone is in the\nvertical orientation and can't be rotated. It takes b second to change\norientation of the photo. Vasya has T seconds to watch photos. He want to\nwatch as many photos as possible. If Vasya opens the photo for the first time,\nhe spends 1 second to notice all details in it. If photo is in the wrong\norientation, he spends b seconds on rotating it before watching it. If Vasya\nhas already opened the photo, he just skips it (so he doesn't spend any time\nfor watching it or for changing its orientation). It is not allowed to skip\nunseen photos. Help Vasya find the maximum number of photos he is able to\nwatch during T seconds. Input The first line of the input contains 4 integers\nn, a, b, T (1 \u2264 n \u2264 5\u00b710^5, 1 \u2264 a, b \u2264 1000, 1 \u2264 T \u2264 10^9) \u2014 the number of\nphotos, time to move from a photo to adjacent, time to change orientation of a\nphoto and time Vasya can spend for watching photo. Second line of the input\ncontains a string of length n containing symbols 'w' and 'h'. If the i-th\nposition of a string contains 'w', then the photo i should be seen in the\nhorizontal orientation. If the i-th position of a string contains 'h', then\nthe photo i should be seen in vertical orientation. Output Output the only\ninteger, the maximum number of photos Vasya is able to watch during those T\nseconds. Examples Input 4 2 3 10 wwhw Output 2 Input 5 2 4 13 hhwhh Output 4\nInput 5 2 4 1000 hhwhh Output 5 Input 3 1 100 10 whw Output 0 Note In the\nfirst sample test you can rotate the first photo (3 seconds), watch the first\nphoto (1 seconds), move left (2 second), rotate fourth photo (3 seconds),\nwatch fourth photo (1 second). The whole process takes exactly 10 seconds.\nNote that in the last sample test the time is not enough even to watch the\nfirst photo, also you can't skip it.\n\n",
        "cf_contest_id": 650,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "dp",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2 3 10\r\nwwhw\r\n",
                "2\r\n"
            ],
            [
                "5 2 4 13\r\nhhwhh\r\n",
                "4\r\n"
            ],
            [
                "5 2 4 1000\r\nhhwhh\r\n",
                "5\r\n"
            ],
            [
                "3 1 100 10\r\nwhw\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 2 3 32\r\nhhwwhwhwwh\r\n",
                "7\r\n"
            ],
            [
                "1 2 3 3\r\nw\r\n",
                "0\r\n"
            ],
            [
                "100 20 100 10202\r\nwwwwhhwhhwhhwhhhhhwwwhhhwwwhwwhwhhwwhhwwwhwwhwwwhwhwhwwhhhwhwhhwhwwhhwhwhwwwhwwwwhwhwwwwhwhhhwhwhwww\r\n",
                "100\r\n"
            ],
            [
                "20 10 10 1\r\nhwhwhwhwhwhwhwhwhhhw\r\n",
                "1\r\n"
            ],
            [
                "12 10 10 1\r\nwhwhwhwhwhwh\r\n",
                "0\r\n"
            ],
            [
                "2 5 5 1000000000\r\nwh\r\n",
                "2\r\n"
            ],
            [
                "16 1 1000 2100\r\nhhhwwwhhhwhhhwww\r\n",
                "5\r\n"
            ],
            [
                "5 2 4 13\r\nhhhwh\r\n",
                "4\r\n"
            ],
            [
                "7 1 1000 13\r\nhhhhwhh\r\n",
                "6\r\n"
            ],
            [
                "10 1 1000 10\r\nhhhhhhwwhh\r\n",
                "5\r\n"
            ],
            [
                "7 1 100 8\r\nhhhwwwh\r\n",
                "4\r\n"
            ],
            [
                "5 2 4 12\r\nhhhwh\r\n",
                "4\r\n"
            ]
        ]
    }
]