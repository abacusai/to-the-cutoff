[
    {
        "name": "Red and Black Tree",
        "description": "You have a weighted tree, consisting of n vertices. Each vertex is either\npainted black or is painted red. A red and black tree is called beautiful, if\nfor any its vertex we can find a black vertex at distance at most x. The\ndistance between two nodes is the shortest path between them. You have a red\nand black tree. Your task is to make it beautiful in the minimum number of\ncolor swap operations. In one color swap operation, you can choose two\nvertices of different colors and paint each of them the other color. In other\nwords, if you choose a red vertex p and a black vertex q, then in one\noperation you are allowed to paint p black and paint q red. Print the minimum\nnumber of required actions. Input The first line contains two integers n and x\n(2 \u2264 n \u2264 500; 1 \u2264 x \u2264 10^9). The next line contains n integers, each of them\nis either a zero or one. If the i-th number equals 1, then vertex i of the\ntree is black, otherwise vertex i is red. Next n - 1 lines contain the tree\nedges. The j-th line contains integers uj vj wj (1 \u2264 uj, vj \u2264 n; uj \u2260 vj; 1 \u2264\nwj \u2264 10^9) which means that the tree has an edge of weight wj between vertices\nvj and uj. Assume that the tree vertices are numbered from 1 to n. Output\nPrint a single integer \u2014 the minimum number of required swap operations. If it\nis impossible to get a beautiful tree at any number of operations, print -1.\nExamples Input 3 2 1 0 0 1 2 2 2 3 2 Output 1 Input 4 2 0 1 0 0 1 2 2 2 3 2 3\n4 2 Output -1\n\n",
        "cf_contest_id": 375,
        "cf_index": "E",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n1 0 0\r\n1 2 2\r\n2 3 2\r\n",
                "1"
            ],
            [
                "4 2\r\n0 1 0 0\r\n1 2 2\r\n2 3 2\r\n3 4 2\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 999999408\r\n1 0 0 1 0 1 0 1 0 1\r\n2 1 499999640\r\n3 2 499999819\r\n4 3 499999723\r\n5 1 499999938\r\n6 4 499999950\r\n7 6 499999927\r\n8 5 499999739\r\n9 6 499999903\r\n10 4 499999873\r\n",
                "0"
            ],
            [
                "11 999999035\r\n0 0 0 0 0 0 0 0 0 0 1\r\n2 1 599999551\r\n3 1 599999687\r\n4 2 599999767\r\n5 2 599999465\r\n6 1 599999497\r\n7 5 599999573\r\n8 3 599999655\r\n9 3 599999566\r\n10 8 599999634\r\n11 9 599999514\r\n",
                "-1\r\n"
            ],
            [
                "21 999999691\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n2 1 699999728\r\n3 2 699999941\r\n4 1 699999634\r\n5 1 699999708\r\n6 1 699999692\r\n7 1 699999537\r\n8 1 699999993\r\n9 5 699999753\r\n10 2 699999581\r\n11 2 699999771\r\n12 11 699999749\r\n13 8 699999791\r\n14 4 699999407\r\n15 1 699999448\r\n16 9 699999784\r\n17 12 699999861\r\n18 8 699999470\r\n19 13 699999549\r\n20 10 699999650\r\n21 8 699999817\r\n",
                "0"
            ],
            [
                "22 999999330\r\n0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0\r\n2 1 799999324\r\n3 2 799999456\r\n4 2 799999457\r\n5 2 799999779\r\n6 1 799999890\r\n7 2 799999354\r\n8 5 799999653\r\n9 8 799999989\r\n10 9 799999639\r\n11 4 799999468\r\n12 9 799999945\r\n13 3 799999383\r\n14 2 799999232\r\n15 9 799999411\r\n16 13 799999546\r\n17 1 799999416\r\n18 5 799999778\r\n19 3 799999814\r\n20 7 799999538\r\n21 5 799999950\r\n22 7 799999382\r\n",
                "-1\r\n"
            ],
            [
                "22 999999373\r\n0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 1 1 1 1 0 1\r\n2 1 899999429\r\n3 2 899999765\r\n4 1 899999811\r\n5 4 899999774\r\n6 2 899999495\r\n7 1 899999116\r\n8 5 899999347\r\n9 3 899999511\r\n10 6 899999191\r\n11 2 899999188\r\n12 9 899999470\r\n13 8 899999806\r\n14 7 899999326\r\n15 2 899999656\r\n16 1 899999650\r\n17 15 899999593\r\n18 8 899999868\r\n19 4 899999253\r\n20 18 899999383\r\n21 16 899999585\r\n22 5 899999382\r\n",
                "-1\r\n"
            ]
        ]
    }
]