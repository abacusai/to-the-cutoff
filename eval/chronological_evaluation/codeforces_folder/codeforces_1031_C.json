[
    {
        "name": "Cram Time",
        "description": "In a galaxy far, far away Lesha the student has just got to know that he has\nan exam in two days. As always, he hasn't attended any single class during the\nprevious year, so he decided to spend the remaining time wisely. Lesha knows\nthat today he can study for at most \n    a\n hours, and he will have \n    b\n\nhours to study tomorrow. Note that it is possible that on his planet there are\nmore hours in a day than on Earth. Lesha knows that the quality of his\nknowledge will only depend on the number of lecture notes he will read. He has\naccess to an infinite number of notes that are enumerated with positive\nintegers, but he knows that he can read the first note in one hour, the second\nnote in two hours and so on. In other words, Lesha can read the note with\nnumber \n    k\n in \n    k\n hours. Lesha can read the notes in arbitrary order,\nhowever, he can't start reading a note in the first day and finish its reading\nin the second day. Thus, the student has to fully read several lecture notes\ntoday, spending at most \n    a\n hours in total, and fully read several lecture\nnotes tomorrow, spending at most \n    b\n hours in total. What is the maximum\nnumber of notes Lesha can read in the remaining time? Which notes should he\nread in the first day, and which \u2014 in the second? Input The only line of input\ncontains two integers \n    a\n and \n    b\n (\n    0 \n    \u2264 a, b \n    \u2264 10^9\n)\n\u2014 the number of hours Lesha has today and the number of hours Lesha has\ntomorrow. Output In the first line print a single integer \n    n\n (\n    0 \n    \u2264\n    n \n    \u2264 a\n) \u2014 the number of lecture notes Lesha has to read in the first\nday. In the second line print \n    n\n distinct integers \n    p_1, p_2, \n    \u2026,\n    p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 a\n), the sum of all \n    p_i\n should not\nexceed \n    a\n. In the third line print a single integer \n    m\n (\n    0 \n    \u2264\n    m \n    \u2264 b\n) \u2014 the number of lecture notes Lesha has to read in the second\nday. In the fourth line print \n    m\n distinct integers \n    q_1, q_2, \n    \u2026,\n    q_m\n (\n    1 \n    \u2264 q_i \n    \u2264 b\n), the sum of all \n    q_i\n should not\nexceed \n    b\n. All integers \n    p_i\n and \n    q_i\n should be distinct. The\nsum \n    n + m\n should be largest possible. Examples Input 3 3 Output 1 3 2 2\n1 Input 9 12 Output 2 3 6 4 1 2 4 5 Note In the first example Lesha can read\nthe third note in \n    3\n hours in the first day, and the first and the second\nnotes in one and two hours correspondingly in the second day, spending \n    3\n\nhours as well. Note that Lesha can make it the other way round, reading the\nfirst and the second notes in the first day and the third note in the second\nday. In the second example Lesha should read the third and the sixth notes in\nthe first day, spending \n    9\n hours in total. In the second day Lesha should\nread the first, second fourth and fifth notes, spending \n    12\n hours in\ntotal.\n\n",
        "cf_contest_id": 1031,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n",
                "1\r\n3\r\n2\r\n2 1\r\n"
            ],
            [
                "9 12\r\n",
                "2\r\n6 3\r\n4\r\n5 4 2 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "8 2\r\n",
                "3\r\n4 3 1\r\n1\r\n2\r\n"
            ],
            [
                "9 13\r\n",
                "2\r\n6 3\r\n4\r\n5 4 2 1\r\n"
            ],
            [
                "0 0\r\n",
                "0\r\n\r\n0\r\n\r\n"
            ],
            [
                "2 1\r\n",
                "1\r\n2\r\n1\r\n1\r\n"
            ],
            [
                "0 15\r\n",
                "0\r\n\r\n5\r\n5 4 3 2 1\r\n"
            ],
            [
                "1 14\r\n",
                "1\r\n1\r\n4\r\n5 4 3 2\r\n"
            ],
            [
                "2 13\r\n",
                "1\r\n2\r\n4\r\n5 4 3 1\r\n"
            ],
            [
                "4 11\r\n",
                "1\r\n4\r\n4\r\n5 3 2 1\r\n"
            ],
            [
                "5 10\r\n",
                "1\r\n5\r\n4\r\n4 3 2 1\r\n"
            ],
            [
                "6 9\r\n",
                "2\r\n5 1\r\n3\r\n4 3 2\r\n"
            ],
            [
                "7 8\r\n",
                "2\r\n5 2\r\n3\r\n4 3 1\r\n"
            ],
            [
                "660 6\r\n",
                "33\r\n36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4\r\n3\r\n3 2 1\r\n"
            ],
            [
                "3 12\r\n",
                "1\r\n3\r\n4\r\n5 4 2 1\r\n"
            ],
            [
                "8 7\r\n",
                "2\r\n5 3\r\n3\r\n4 2 1\r\n"
            ],
            [
                "9 6\r\n",
                "2\r\n5 4\r\n3\r\n3 2 1\r\n"
            ],
            [
                "10 5\r\n",
                "3\r\n5 4 1\r\n2\r\n3 2\r\n"
            ],
            [
                "11 4\r\n",
                "3\r\n5 4 2\r\n2\r\n3 1\r\n"
            ],
            [
                "12 3\r\n",
                "3\r\n5 4 3\r\n2\r\n2 1\r\n"
            ],
            [
                "13 2\r\n",
                "4\r\n5 4 3 1\r\n1\r\n2\r\n"
            ],
            [
                "14 1\r\n",
                "4\r\n5 4 3 2\r\n1\r\n1\r\n"
            ],
            [
                "15 0\r\n",
                "5\r\n5 4 3 2 1\r\n0\r\n\r\n"
            ],
            [
                "90 900\r\n",
                "3\r\n44 43 3\r\n41\r\n42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 2 1\r\n"
            ],
            [
                "1 1\r\n",
                "1\r\n1\r\n0\r\n\r\n"
            ],
            [
                "18 0\r\n",
                "5\r\n5 4 3 2 1\r\n0\r\n\r\n"
            ],
            [
                "0 1\r\n",
                "0\r\n\r\n1\r\n1\r\n"
            ],
            [
                "4 4\r\n",
                "2\r\n3 1\r\n1\r\n2\r\n"
            ]
        ]
    }
]