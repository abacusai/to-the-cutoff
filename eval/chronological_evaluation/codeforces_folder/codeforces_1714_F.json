[
    {
        "name": "Build a Tree and That Is It",
        "description": "A tree is a connected undirected graph without cycles. Note that in this\nproblem, we are talking about not rooted trees. You are given four positive\nintegers \n    n, d_12, d_23\n and \n    d_31\n. Construct a tree such that:\nit contains \n    n\n vertices numbered from \n    1\n to \n    n\n, the distance\n(length of the shortest path) from vertex \n    1\n to vertex \n    2\n is\n\n    d_12\n, distance from vertex \n    2\n to vertex \n    3\n is \n    d_23\n,\nthe distance from vertex \n    3\n to vertex \n    1\n is \n    d_31\n. Output any\ntree that satisfies all the requirements above, or determine that no such tree\nexists. Input The first line of the input contains an integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^4\n) \u2014the number of test cases in the test. This is followed\nby \n    t\n test cases, each written on a separate line. Each test case\nconsists of four positive integers \n    n, d_12, d_23\n and \n    d_31\n\n(\n    3 \n    \u2264 n \n    \u2264 2\n    \u00b710^5; 1 \n    \u2264 d_12, d_23, d_31\n    \u2264\n    n-1\n). It is guaranteed that the sum of \n    n\n values for all test cases\ndoes not exceed \n    2\n    \u00b710^5\n. Output For each test case, print YES if\nthe suitable tree exists, and NO otherwise. If the answer is positive, print\nanother \n    n-1\n line each containing a description of an edge of the tree \u2014\na pair of positive integers \n    x_i, y_i\n, which means that the \n    i\nth\nedge connects vertices \n    x_i\n and \n    y_i\n. The edges and vertices of the\nedges can be printed in any order. If there are several suitable trees, output\nany of them. Example Input 9 5 1 2 1 5 2 2 2 5 2 2 3 5 2 2 4 5 3 2 3 4 2 1 1 4\n3 1 1 4 1 2 3 7 1 4 1 Output YES 1 2 4 1 3 1 2 5 YES 4 3 2 5 1 5 5 3 NO YES 2\n4 4 1 2 5 5 3 YES 5 4 4 1 2 5 3 5 YES 2 3 3 4 1 3 NO YES 4 3 1 2 2 4 NO\n\n",
        "cf_contest_id": 1714,
        "cf_index": "F",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9\r\n5 1 2 1\r\n5 2 2 2\r\n5 2 2 3\r\n5 2 2 4\r\n5 3 2 3\r\n4 2 1 1\r\n4 3 1 1\r\n4 1 2 3\r\n7 1 4 1\r\n",
                "YES\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\nYES\r\n4 1\r\n4 2\r\n4 3\r\n4 5\r\nNO\r\nYES\r\n2 4\r\n4 1\r\n2 5\r\n5 3\r\nYES\r\n4 5\r\n5 1\r\n4 2\r\n4 3\r\nYES\r\n3 1\r\n3 2\r\n3 4\r\nNO\r\nYES\r\n2 1\r\n2 4\r\n4 3\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n200000 146007 118738 185919\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 189476 125425 48582\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 10488 197804 100015\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 42729 4492 173905\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 9276 65643 91032\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 41516 94787 164923\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 84986 155938 27585\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 138238 169311 18602\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 142552 8856 42202\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 152568 87923 178754\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 173580 94609 84652\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 5821 101296 158542\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 38061 162447 21205\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 70302 180362 95096\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 48078 52743 157757\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 189375 32906 2490\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 199996 199997 199997\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n199999 199997 199998 3\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 70967 199997 131401\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n199999 199994 199998 3\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 190937 199997 199995\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n199999 199997 199995 181505\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 199999 199999 199995\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n199999 30786 199998 199997\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 199999 199995 199998\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n199999 199997 20642 18501\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 4 199996 199995\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 1 27585 199995\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n199999 4 1 55496\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 2021 2 199996\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n199999 199997 81392 199995\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 199999 18602 199996\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n199999 199442 1 25820\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 125300 199996 199996\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n199999 2 199995 115669\r\n",
                "NO\r\n"
            ]
        ]
    }
]