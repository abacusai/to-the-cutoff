[
    {
        "name": "Happy New Year",
        "description": "Being Santa Claus is very difficult. Sometimes you have to deal with difficult\nsituations. Today Santa Claus came to the holiday and there were \n    m\n\nchildren lined up in front of him. Let's number them from \n    1\n to \n    m\n.\nGrandfather Frost knows \n    n\n spells. The \n    i\n-th spell gives a candy to\nevery child whose place is in the \n    [L_i, R_i]\n range. Each spell can be\nused at most once. It is also known that if all spells are used, each child\nwill receive at most \n    k\n candies. It is not good for children to eat a lot\nof sweets, so each child can eat no more than one candy, while the remaining\ncandies will be equally divided between his (or her) Mom and Dad. So it turns\nout that if a child would be given an even amount of candies (possibly zero),\nthen he (or she) will be unable to eat any candies and will go sad. However,\nthe rest of the children (who received an odd number of candies) will be\nhappy. Help Santa Claus to know the maximum number of children he can make\nhappy by casting some of his spells. Input The first line contains three\nintegers of \n    n\n, \n    m\n, and \n    k\n (\n    1 \n    \u2264 n \n    \u2264 100\n     000, 1\n    \n    \u2264 m \n    \u2264 10^9, 1 \n    \u2264 k \n    \u2264 8\n) \u2014 the number of spells, the\nnumber of children and the upper limit on the number of candy a child can get\nif all spells are used, respectively. This is followed by \n    n\n lines, each\ncontaining integers \n    L_i\n and \n    R_i\n (\n    1 \n    \u2264 L_i \n    \u2264 R_i \n    \u2264\n    m\n) \u2014 the parameters of the \n    i\n spell. Output Print a single integer \u2014\nthe maximum number of children that Santa can make happy. Example Input 3 5 3\n1 3 2 4 3 5 Output 4 Note In the first example, Santa should apply the first\nand third spell. In this case all children will be happy except the third.\n\n",
        "cf_contest_id": 1313,
        "cf_index": "D",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dp",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 5 3\r\n1 3\r\n2 4\r\n3 5\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "1 1000 1\r\n1 1000\r\n",
                "1000\r\n"
            ],
            [
                "8 1000 8\r\n1 1000\r\n1 1000\r\n1 1000\r\n1 1000\r\n1 1000\r\n1 1000\r\n1 1000\r\n1 1000\r\n",
                "1000\r\n"
            ],
            [
                "3 1000000000 1\r\n997128364 998310498\r\n20221560 443200716\r\n755579142 783880552\r\n",
                "452462703\r\n"
            ],
            [
                "3 1000 3\r\n967 986\r\n289 747\r\n191 202\r\n",
                "491\r\n"
            ],
            [
                "5 1000 4\r\n206 521\r\n822 844\r\n578 599\r\n998 998\r\n601 741\r\n",
                "503\r\n"
            ],
            [
                "8 32 3\r\n6 16\r\n27 32\r\n2 6\r\n14 22\r\n9 13\r\n17 25\r\n17 23\r\n12 14\r\n",
                "29\r\n"
            ],
            [
                "1 1000000000 1\r\n1 1000000000\r\n",
                "1000000000\r\n"
            ],
            [
                "10 10 8\r\n4 4\r\n8 10\r\n1 4\r\n7 9\r\n10 10\r\n6 8\r\n9 9\r\n9 9\r\n7 8\r\n2 9\r\n",
                "9\r\n"
            ],
            [
                "8 1000000000 8\r\n1 1000000000\r\n1 1000000000\r\n1 1000000000\r\n1 1000000000\r\n1 1000000000\r\n1 1000000000\r\n1 1000000000\r\n1 1000000000\r\n",
                "1000000000\r\n"
            ],
            [
                "1 1000 1\r\n194 319\r\n",
                "126\r\n"
            ],
            [
                "10 1000 2\r\n408 430\r\n563 572\r\n896 910\r\n582 831\r\n438 555\r\n88 276\r\n269 365\r\n951 987\r\n283 292\r\n430 776\r\n",
                "723\r\n"
            ],
            [
                "9 1000 2\r\n169 172\r\n560 715\r\n84 174\r\n197 211\r\n746 780\r\n269 911\r\n835 933\r\n928 967\r\n555 556\r\n",
                "789\r\n"
            ],
            [
                "10 1000 1\r\n876 899\r\n488 505\r\n518 626\r\n978 997\r\n335 379\r\n33 40\r\n272 315\r\n900 927\r\n150 268\r\n408 427\r\n",
                "435\r\n"
            ],
            [
                "10 463 3\r\n247 393\r\n277 392\r\n197 391\r\n461 461\r\n413 451\r\n150 228\r\n421 428\r\n453 459\r\n456 462\r\n403 409\r\n",
                "280\r\n"
            ],
            [
                "10 463 4\r\n362 436\r\n13 216\r\n144 148\r\n333 352\r\n88 99\r\n250 430\r\n363 369\r\n430 459\r\n358 358\r\n196 230\r\n",
                "413\r\n"
            ],
            [
                "9 463 3\r\n174 185\r\n314 353\r\n208 225\r\n244 271\r\n392 456\r\n312 313\r\n129 169\r\n372 421\r\n52 52\r\n",
                "207\r\n"
            ],
            [
                "9 463 4\r\n104 273\r\n379 410\r\n204 293\r\n65 95\r\n151 351\r\n184 382\r\n294 339\r\n189 197\r\n1 177\r\n",
                "400\r\n"
            ],
            [
                "10 463 5\r\n15 60\r\n370 404\r\n255 269\r\n111 128\r\n317 323\r\n334 369\r\n41 46\r\n183 233\r\n186 186\r\n117 186\r\n",
                "253\r\n"
            ],
            [
                "9 463 5\r\n273 438\r\n266 270\r\n235 425\r\n201 235\r\n138 316\r\n127 183\r\n84 191\r\n106 127\r\n425 445\r\n",
                "351\r\n"
            ],
            [
                "8 1 8\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "1 1000000000 1\r\n163769536 197760538\r\n",
                "33991003\r\n"
            ],
            [
                "5 1000000000 1\r\n224740517 370149754\r\n57280362 142235421\r\n581706288 613882125\r\n153568652 180083269\r\n640723189 876444319\r\n",
                "524775885\r\n"
            ],
            [
                "10 1000000000 1\r\n740019373 808639802\r\n157699509 167954662\r\n207685229 223623673\r\n236055351 242011897\r\n191569266 205441123\r\n979447918 983595296\r\n48968345 73132005\r\n563970531 600215002\r\n612226675 725037782\r\n93185651 117371144\r\n",
                "316194548\r\n"
            ],
            [
                "3 1000000000 2\r\n923117191 955830609\r\n535329069 893457815\r\n5189881 378046942\r\n",
                "763699228\r\n"
            ],
            [
                "5 1000000000 2\r\n232802035 624069931\r\n882315668 942951005\r\n970023780 999737343\r\n96813797 102583184\r\n368069750 595547040\r\n",
                "487386187\r\n"
            ],
            [
                "10 1000000000 2\r\n679805344 871524521\r\n660184446 672541355\r\n231399542 238562798\r\n598337786 702671107\r\n300720069 489817478\r\n925218735 942866437\r\n96857376 191901749\r\n523805593 571450393\r\n706794479 943946765\r\n127334184 399319047\r\n",
                "680435451\r\n"
            ],
            [
                "10 1000 3\r\n952 996\r\n178 401\r\n76 165\r\n445 446\r\n162 669\r\n704 775\r\n14 119\r\n554 870\r\n156 156\r\n479 537\r\n",
                "755\r\n"
            ]
        ]
    }
]