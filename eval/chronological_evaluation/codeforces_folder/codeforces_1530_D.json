[
    {
        "name": "Secret Santa",
        "description": "Every December, VK traditionally holds an event for its employees named\n\"Secret Santa\". Here's how it happens. \n    n\n employees numbered from \n    1\n\nto \n    n\n take part in the event. Each employee \n    i\n is assigned a\ndifferent employee \n    b_i\n, to which employee \n    i\n has to make a new year\ngift. Each employee is assigned to exactly one other employee, and nobody is\nassigned to themselves (but two employees may be assigned to each other).\nFormally, all \n    b_i\n must be distinct integers between \n    1\n and \n    n\n,\nand for any \n    i\n, \n    b_i \n     i\n must hold. The assignment is usually\ngenerated randomly. This year, as an experiment, all event participants have\nbeen asked who they wish to make a gift to. Each employee \n    i\n has said\nthat they wish to make a gift to employee \n    a_i\n. Find a valid assignment\n\n    b\n that maximizes the number of fulfilled wishes of the employees. Input\nEach test contains multiple test cases. The first line contains the number of\ntest cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^5\n). Description of the test cases\nfollows. Each test case consists of two lines. The first line contains a\nsingle integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of\nparticipants of the event. The second line contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n; \n    a_i \n     i\n) \u2014 wishes\nof the employees in order from \n    1\n to \n    n\n. It is guaranteed that the\nsum of \n    n\n over all test cases does not exceed \n    2 \n    \u00b7 10^5\n.\nOutput For each test case, print two lines. In the first line, print a single\ninteger \n    k\n (\n    0 \n    \u2264 k \n    \u2264 n\n) \u2014 the number of fulfilled wishes in\nyour assignment. In the second line, print \n    n\n distinct integers \n    b_1,\n    b_2, \n    \u2026, b_n\n (\n    1 \n    \u2264 b_i \n    \u2264 n\n; \n    b_i \n     i\n) \u2014 the\nnumbers of employees assigned to employees \n    1, 2, \n    \u2026, n\n. \n    k\n\nmust be equal to the number of values of \n    i\n such that \n    a_i = b_i\n,\nand must be as large as possible. If there are multiple answers, print any.\nExample Input 2 3 2 1 2 7 6 4 6 2 4 5 6 Output 2 3 1 2 4 6 4 7 2 3 5 1 Note In\nthe first test case, two valid assignments exist: \n    [3, 1, 2]\n and \n    [2,\n    3, 1]\n. The former assignment fulfills two wishes, while the latter\nassignment fulfills only one. Therefore, \n    k = 2\n, and the only correct\nanswer is \n    [3, 1, 2]\n.\n\n",
        "cf_contest_id": 1530,
        "cf_index": "D",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "flows",
            "graphs",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n3\r\n2 1 2\r\n7\r\n6 4 6 2 4 5 6\r\n",
                "2\r\n3 1 2\r\n4\r\n7 3 1 2 4 5 6\r\n"
            ]
        ],
        "private_cases": []
    }
]