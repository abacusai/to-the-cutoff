[
    {
        "name": "Mashmokh and Reverse Operation",
        "description": "Mashmokh's boss, Bimokh, didn't like Mashmokh. So he fired him. Mashmokh\ndecided to go to university and participate in ACM instead of finding a new\njob. He wants to become a member of Bamokh's team. In order to join he was\ngiven some programming tasks and one week to solve them. Mashmokh is not a\nvery experienced programmer. Actually he is not a programmer at all. So he\nwasn't able to solve them. That's why he asked you to help him with these\ntasks. One of these tasks is the following. You have an array a of length 2^n\nand m queries on it. The i-th query is described by an integer qi. In order to\nperform the i-th query you must: split the array into 2^n-qi parts, where each\npart is a subarray consisting of 2^qi numbers; the j-th subarray (1 \u2264 j \u2264\n2^n-qi) should contain the elements a[(j - 1)\u00b72^qi + 1], a[(j - 1)\u00b72^qi + 2],\n..., a[(j - 1)\u00b72^qi + 2^qi]; reverse each of the subarrays; join them into a\nsingle array in the same order (this array becomes new array a); output the\nnumber of inversions in the new a. Given initial array a and all the queries.\nAnswer all the queries. Please, note that the changes from some query is saved\nfor further queries. Input The first line of input contains a single integer n\n(0 \u2264 n \u2264 20). The second line of input contains 2^n space-separated integers\na[1], a[2], ..., a[2^n] (1 \u2264 a[i] \u2264 10^9), the initial array. The third line\nof input contains a single integer m (1 \u2264 m \u2264 10^6). The fourth line of input\ncontains m space-separated integers q1, q2, ..., qm (0 \u2264 qi \u2264 n), the queries.\nNote: since the size of the input and output could be very large, don't use\nslow output techniques in your language. For example, do not use input and\noutput streams (cin, cout) in C++. Output Output m lines. In the i-th line\nprint the answer (the number of inversions) for the i-th query. Examples Input\n2 2 1 4 3 4 1 2 0 2 Output 0 6 6 0 Input 1 1 2 3 0 1 1 Output 0 1 0 Note If we\nreverse an array x[1], x[2], ..., x[n] it becomes new array y[1], y[2], ...,\ny[n], where y[i] = x[n - i + 1] for each i. The number of inversions of an\narray x[1], x[2], ..., x[n] is the number of pairs of indices i, j such that:\ni < j and x[i] > x[j].\n\n",
        "cf_contest_id": 414,
        "cf_index": "C",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "divide and conquer"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n2 1 4 3\r\n4\r\n1 2 0 2\r\n",
                "0\r\n6\r\n6\r\n0\r\n"
            ],
            [
                "1\r\n1 2\r\n3\r\n0 1 1\r\n",
                "0\r\n1\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 1 3 1\r\n3\r\n0 1 2\r\n",
                "1\r\n0\r\n3\r\n"
            ]
        ]
    }
]