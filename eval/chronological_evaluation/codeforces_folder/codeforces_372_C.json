[
    {
        "name": "Watching Fireworks is Fun",
        "description": "A festival will be held in a town's main street. There are n sections in the\nmain street. The sections are numbered 1 through n from left to right. The\ndistance between each adjacent sections is 1. In the festival m fireworks will\nbe launched. The i-th (1 \u2264 i \u2264 m) launching is on time ti at section ai. If\nyou are at section x (1 \u2264 x \u2264 n) at the time of i-th launching, you'll gain\nhappiness value bi - |ai - x| (note that the happiness value might be a\nnegative value). You can move up to d length units in a unit time interval,\nbut it's prohibited to go out of the main street. Also you can be in an\narbitrary section at initial time moment (time equals to 1), and want to\nmaximize the sum of happiness that can be gained from watching fireworks. Find\nthe maximum total happiness. Note that two or more fireworks can be launched\nat the same time. Input The first line contains three integers n, m, d (1 \u2264 n\n\u2264 150000; 1 \u2264 m \u2264 300; 1 \u2264 d \u2264 n). Each of the next m lines contains integers\nai, bi, ti (1 \u2264 ai \u2264 n; 1 \u2264 bi \u2264 10^9; 1 \u2264 ti \u2264 10^9). The i-th line contains\ndescription of the i-th launching. It is guaranteed that the condition ti \u2264 ti\n+ 1 (1 \u2264 i < m) will be satisfied. Output Print a single integer \u2014 the maximum\nsum of happiness that you can gain from watching all the fireworks. Please, do\nnot write the \npreferred to use the cin, cout streams or the \n50 3 1 49 1 1 26 1 4 6 1 10 Output -31 Input 10 2 1 1 1000 4 9 1000 4 Output\n1992\n\n",
        "cf_contest_id": 372,
        "cf_index": "C",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "math"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "50 3 1\r\n49 1 1\r\n26 1 4\r\n6 1 10\r\n",
                "-31\r\n"
            ],
            [
                "10 2 1\r\n1 1000 4\r\n9 1000 4\r\n",
                "1992\r\n"
            ]
        ],
        "private_cases": [
            [
                "30 8 2\r\n15 97 3\r\n18 64 10\r\n20 14 20\r\n16 18 36\r\n10 23 45\r\n12 60 53\r\n17 93 71\r\n11 49 85\r\n",
                "418\r\n"
            ],
            [
                "100 20 5\r\n47 93 3\r\n61 49 10\r\n14 69 10\r\n88 2 14\r\n35 86 18\r\n63 16 20\r\n39 49 22\r\n32 45 23\r\n66 54 25\r\n77 2 36\r\n96 85 38\r\n33 28 45\r\n29 78 53\r\n78 13 60\r\n58 96 64\r\n74 39 71\r\n18 80 80\r\n18 7 85\r\n97 82 96\r\n74 99 97\r\n",
                "877\r\n"
            ]
        ]
    }
]