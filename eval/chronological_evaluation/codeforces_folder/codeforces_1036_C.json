[
    {
        "name": "Classy Numbers",
        "description": "Let's call some positive integer classy if its decimal representation contains\nno more than \n    3\n non-zero digits. For example, numbers \n    4\n,\n\n    200000\n, \n    10203\n are classy and numbers \n    4231\n, \n    102306\n,\n\n    7277420000\n are not. You are given a segment \n    [L; R]\n. Count the\nnumber of classy integers \n    x\n such that \n    L \n    \u2264 x \n    \u2264 R\n. Each\ntestcase contains several segments, for each of them you are required to solve\nthe problem separately. Input The first line contains a single integer \n    T\n\n(\n    1 \n    \u2264 T \n    \u2264 10^4\n) \u2014 the number of segments in a testcase. Each of\nthe next \n    T\n lines contains two integers \n    L_i\n and \n    R_i\n (\n    1\n    \n    \u2264 L_i \n    \u2264 R_i \n    \u2264 10^18\n). Output Print \n    T\n lines \u2014 the\n\n    i\n-th line should contain the number of classy integers on a segment\n\n    [L_i; R_i]\n. Example Input 4 1 1000 1024 1024 65536 65536 999999 1000001\nOutput 1000 1 0 2\n\n",
        "cf_contest_id": 1036,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 1000\r\n1024 1024\r\n65536 65536\r\n999999 1000001\r\n",
                "1000\r\n1\r\n0\r\n2\r\n"
            ]
        ],
        "private_cases": []
    }
]