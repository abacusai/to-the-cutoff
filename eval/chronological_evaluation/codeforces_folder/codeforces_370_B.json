[
    {
        "name": "Berland Bingo",
        "description": "Lately, a national version of a bingo game has become very popular in Berland.\nThere are n players playing the game, each player has a card with numbers. The\nnumbers on each card are distinct, but distinct cards can have equal numbers.\nThe card of the i-th player contains mi numbers. During the game the host\ntakes numbered balls one by one from a bag. He reads the number aloud in a\nhigh and clear voice and then puts the ball away. All participants cross out\nthe number if it occurs on their cards. The person who crosses out all numbers\nfrom his card first, wins. If multiple people cross out all numbers from their\ncards at the same time, there are no winners in the game. At the beginning of\nthe game the bag contains 100 balls numbered 1 through 100, the numbers of all\nballs are distinct. You are given the cards for each player. Write a program\nthat determines whether a player can win the game at the most favorable for\nhim scenario or not. Input The first line of the input contains integer n (1 \u2264\nn \u2264 100) \u2014 the number of the players. Then follow n lines, each line describes\na player's card. The line that describes a card starts from integer mi (1 \u2264 mi\n\u2264 100) that shows how many numbers the i-th player's card has. Then follows a\nsequence of integers ai, 1, ai, 2, ..., ai, mi (1 \u2264 ai, k \u2264 100) \u2014 the numbers\non the i-th player's card. The numbers in the lines are separated by single\nspaces. It is guaranteed that all the numbers on each card are distinct.\nOutput Print n lines, the i-th line must contain word \"YES\" (without the\nquotes), if the i-th player can win, and \"NO\" (without the quotes) otherwise.\nExamples Input 3 1 1 3 2 4 1 2 10 11 Output YES NO YES Input 2 1 1 1 1 Output\nNO NO\n\n",
        "cf_contest_id": 370,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 1\r\n3 2 4 1\r\n2 10 11\r\n",
                "YES\r\nNO\r\nYES\r\n"
            ],
            [
                "2\r\n1 1\r\n1 1\r\n",
                "NO\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 1\r\n",
                "YES\r\n"
            ],
            [
                "2\r\n1 2\r\n1 3\r\n",
                "YES\r\nYES\r\n"
            ],
            [
                "2\r\n1 1\r\n2 1 2\r\n",
                "YES\r\nNO\r\n"
            ],
            [
                "2\r\n2 1 2\r\n1 1\r\n",
                "NO\r\nYES\r\n"
            ],
            [
                "2\r\n3 5 21 7\r\n6 15 5 100 21 7 17\r\n",
                "YES\r\nNO\r\n"
            ],
            [
                "2\r\n6 15 5 100 21 7 17\r\n3 5 21 7\r\n",
                "NO\r\nYES\r\n"
            ],
            [
                "10\r\n1 4\r\n1 2\r\n1 3\r\n1 5\r\n1 1\r\n1 4\r\n1 3\r\n1 5\r\n1 2\r\n1 1\r\n",
                "NO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\n"
            ],
            [
                "3\r\n1 1\r\n1 2\r\n1 1\r\n",
                "NO\r\nYES\r\nNO\r\n"
            ],
            [
                "10\r\n3 2 3 4\r\n1 1\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n1 1\r\n1 3\r\n2 4 5\r\n2 1 2\r\n",
                "NO\r\nNO\r\nNO\r\nYES\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\n"
            ],
            [
                "10\r\n1 4\r\n4 3 2 4 1\r\n1 4\r\n2 4 5\r\n4 4 3 5 1\r\n1 4\r\n1 2\r\n2 3 5\r\n2 5 3\r\n3 5 2 4\r\n",
                "NO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\n"
            ],
            [
                "20\r\n2 9 16\r\n3 1 15 2\r\n1 9\r\n3 7 12 3\r\n1 18\r\n1 14\r\n4 11 13 4 6\r\n4 7 19 9 3\r\n3 9 16 5\r\n1 9\r\n1 18\r\n4 4 15 7 19\r\n2 16 2\r\n3 7 3 15\r\n2 2 20\r\n1 1\r\n1 15\r\n5 5 2 13 4 1\r\n2 9 14\r\n2 17 8\r\n",
                "NO\r\nNO\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES\r\n"
            ],
            [
                "40\r\n2 12 19\r\n4 10 7 1 3\r\n2 15 17\r\n1 6\r\n3 17 8 20\r\n4 8 16 11 18\r\n2 2 7\r\n4 12 13 8 7\r\n3 6 1 15\r\n3 19 11 13\r\n1 2\r\n2 16 14\r\n5 1 17 8 9 5\r\n1 2\r\n3 15 17 12\r\n4 20 4 19 18\r\n1 10\r\n4 12 1 17 16\r\n4 5 10 8 11\r\n1 10\r\n1 13\r\n1 17\r\n2 19 18\r\n1 3\r\n2 6 20\r\n1 8\r\n2 3 14\r\n3 17 3 1\r\n2 4 3\r\n1 12\r\n1 15\r\n1 2\r\n2 13 9\r\n2 1 14\r\n1 1\r\n5 14 9 3 1 7\r\n2 20 16\r\n2 19 17\r\n2 4 20\r\n1 7\r\n",
                "NO\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\nYES\r\nYES\r\nYES\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nYES\r\nYES\r\nNO\r\nNO\r\nNO\r\nYES\r\nNO\r\nYES\r\nNO\r\nYES\r\nYES\r\n"
            ]
        ]
    }
]