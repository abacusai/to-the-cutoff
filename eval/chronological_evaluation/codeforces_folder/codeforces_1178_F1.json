[
    {
        "name": "Short Colorful Strip",
        "description": "This is the first subtask of problem F. The only differences between this and\nthe second subtask are the constraints on the value of \n    m\n and the time\nlimit. You need to solve both subtasks in order to hack this one. There are\n\n    n+1\n distinct colours in the universe, numbered \n    0\n through \n    n\n.\nThere is a strip of paper \n    m\n centimetres long initially painted with\ncolour \n    0\n. Alice took a brush and painted the strip using the following\nprocess. For each \n    i\n from \n    1\n to \n    n\n, in this order, she picks\ntwo integers \n    0 \n    \u2264 a_i < b_i \n    \u2264 m\n, such that the segment \n    [a_i,\n    b_i]\n is currently painted with a single colour, and repaints it with colour\n\n    i\n. Alice chose the segments in such a way that each centimetre is now\npainted in some colour other than \n    0\n. Formally, the segment \n    [i-1,\n    i]\n is painted with colour \n    c_i\n (\n    c_i \n    \u2260 0\n). Every colour\nother than \n    0\n is visible on the strip. Count the number of different\npairs of sequences \n    a_i\n    \n    _i=1^n\n, \n    b_i\n    \n    _i=1^n\n\nthat result in this configuration. Since this number may be large, output it\nmodulo \n    998244353\n. Input The first line contains a two integers \n    n\n,\n\n    m\n (\n    1 \n    \u2264 n \n    \u2264 500\n, \n    n = m\n) \u2014 the number of colours\nexcluding the colour \n    0\n and the length of the paper, respectively. The\nsecond line contains \n    m\n space separated integers \n    c_1, c_2, \n    \u2026,\n    c_m\n (\n    1 \n    \u2264 c_i \n    \u2264 n\n) \u2014 the colour visible on the segment\n\n    [i-1, i]\n after the process ends. It is guaranteed that for all \n    j\n\nbetween \n    1\n and \n    n\n there is an index \n    k\n such that \n    c_k = j\n.\nNote that since in this subtask \n    n = m\n, this means that \n    c\n is a\npermutation of integers \n    1\n through \n    n\n. Output Output a single\ninteger \u2014 the number of ways Alice can perform the painting, modulo\n\n    998244353\n. Examples Input 3 3 1 2 3 Output 5 Input 7 7 4 5 1 6 2 3 7\nOutput 165 Note In the first example, there are \n    5\n ways, all depicted in\nthe figure below. Here, \n    0\n is white, \n    1\n is red, \n    2\n is green and\n\n    3\n is blue. Below is an example of a painting process that is not valid,\nas in the second step the segment 1 3 is not single colour, and thus may not\nbe repainted with colour \n    2\n.\n\n",
        "cf_contest_id": 1178,
        "cf_index": "F1",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dfs and similar",
            "dp"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n1 2 3\r\n",
                "5"
            ],
            [
                "7 7\r\n4 5 1 6 2 3 7\r\n",
                "165"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n",
                "1"
            ],
            [
                "3 3\r\n2 3 1\r\n",
                "5"
            ],
            [
                "3 3\r\n1 3 2\r\n",
                "5"
            ],
            [
                "17 17\r\n12 14 9 4 6 11 1 2 16 15 10 8 5 17 7 13 3\r\n",
                "8177106"
            ],
            [
                "144 144\r\n5 62 104 123 137 128 79 17 12 93 122 34 116 25 42 109 114 105 83 21 10 95 94 126 33 68 75 24 131 67 11 134 124 39 97 7 61 90 117 46 142 92 81 118 85 35 89 86 111 43 53 63 27 44 135 59 52 49 6 20 91 26 16 45 102 69 141 98 66 38 84 87 18 57 71 41 47 129 28 125 119 107 15 14 113 9 40 58 110 13 72 22 4 133 74 37 80 120 1 32 138 56 121 29 64 88 3 136 2 103 143 82 65 50 51 140 54 60 30 19 106 96 70 100 23 127 139 112 48 73 144 8 132 99 55 77 108 36 78 115 130 76 31 101\r\n",
                "8508064"
            ],
            [
                "2 2\r\n1 2\r\n",
                "2"
            ],
            [
                "16 16\r\n7 6 5 2 10 3 8 16 12 1 4 11 14 15 9 13\r\n",
                "2020032"
            ],
            [
                "4 4\r\n3 4 1 2\r\n",
                "10"
            ],
            [
                "5 5\r\n1 4 2 3 5\r\n",
                "33"
            ],
            [
                "6 6\r\n5 3 6 1 4 2\r\n",
                "60"
            ],
            [
                "7 7\r\n1 2 3 6 7 4 5\r\n",
                "359"
            ],
            [
                "8 8\r\n6 2 1 8 5 7 3 4\r\n",
                "430"
            ],
            [
                "9 9\r\n1 6 4 5 9 8 7 3 2\r\n",
                "3763"
            ],
            [
                "10 10\r\n5 1 6 2 8 3 4 10 9 7\r\n",
                "4908"
            ],
            [
                "11 11\r\n5 9 2 11 7 8 3 10 1 4 6\r\n",
                "9145"
            ],
            [
                "12 12\r\n2 3 1 4 5 9 12 8 7 6 11 10\r\n",
                "55310"
            ],
            [
                "13 13\r\n6 8 4 12 13 2 10 11 9 7 3 5 1\r\n",
                "136746"
            ],
            [
                "14 14\r\n2 9 3 8 14 7 10 13 4 1 5 6 12 11\r\n",
                "385140"
            ],
            [
                "15 15\r\n3 11 2 5 10 9 7 13 15 8 4 12 6 1 14\r\n",
                "989448"
            ]
        ]
    }
]