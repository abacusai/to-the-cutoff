[
    {
        "name": "Ants",
        "description": "There is a tree with \n    n\n vertices. There are also \n    m\n ants living on\nit. Each ant has its own color. The \n    i\n-th ant has two favorite pairs of\nvertices: (\n    a_i, b_i\n) and (\n    c_i, d_i\n). You need to tell if it is\npossible to paint the edges of the tree in \n    m\n colors so that every ant\nwill be able to walk between vertices from one of its favorite pairs using\nonly edges of his color; if it is possible, you need to print which pair every\nant should use. Input The first line contains a single integer \n    n\n (\n    2\n    \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of vertices. Each of the next \n    n-1\n\nlines contains two integers \n    u_i\n and \n    v_i\n (\n    1 \n    \u2264 u_i, v_i\n    \n    \u2264 n\n), meaning that there is an edge between vertices \n    u_i\n and\n\n    v_i\n. The next line contains a single integer \n    m\n (\n    1 \n    \u2264 m\n    \n    \u2264 10^4\n) \u2014 the number of ants. Each of the next \n    m\n lines contains\nfour integers \n    a_i\n, \n    b_i\n, \n    c_i\n, and \n    d_i\n (\n    1 \n    \u2264 a_i,\n    b_i, c_i, d_i \n    \u2264 n\n, \n    a_i \n    \u2260 b_i, c_i \n    \u2260 d_i\n), meaning that\npairs (\n    a_i\n, \n    b_i\n) and (\n    c_i\n, \n    d_i\n) are favorite for the\n\n    i\n-th ant. Output Print \"NO\" (without quotes) if the wanted painting is\nimpossible. Otherwise, print \"YES\" (without quotes). Print \n    m\n lines. On\nthe \n    i\n-th line, print \n    1\n if the \n    i\n-th ant will use the first\npair and \n    2\n otherwise. If there are multiple answers, print any. Examples\nInput 6 1 2 3 1 4 1 5 2 6 2 3 2 6 3 4 1 6 6 5 1 4 5 2 Output YES 2 1 2 Input 5\n1 2 1 3 1 4 1 5 2 2 3 4 5 3 4 5 2 Output NO Note In the sample, the second and\nthe third edge should be painted in the first color, the first and the fifth\nshould be painted in the second color, and the fourth should be painted in the\nthird color.\n\n",
        "cf_contest_id": 1007,
        "cf_index": "D",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "2-sat",
            "data structures",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 768.0,
        "public_cases": [
            [
                "6\r\n1 2\r\n3 1\r\n4 1\r\n5 2\r\n6 2\r\n3\r\n2 6 3 4\r\n1 6 6 5\r\n1 4 5 2\r\n",
                "YES\r\n2\r\n1\r\n2\r\n"
            ],
            [
                "5\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2\r\n2 3 4 5\r\n3 4 5 2\r\n",
                "NO"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 2\r\n1\r\n1 2 1 2\r\n",
                "YES\r\n1\r\n"
            ]
        ]
    }
]