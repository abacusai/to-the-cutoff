[
    {
        "name": "Array and Operations",
        "description": "You are given an array \n    a\n of \n    n\n integers, and another integer\n\n    k\n such that \n    2k \n    \u2264 n\n. You have to perform exactly \n    k\n\noperations with this array. In one operation, you have to choose two elements\nof the array (let them be \n    a_i\n and \n    a_j\n; they can be equal or\ndifferent, but their positions in the array must not be the same), remove them\nfrom the array, and add \n    \u230a\n    a_i/a_j\n    \u230b\n to your\nscore, where \n    \u230a\n    x/y\n    \u230b\n is the maximum integer\nnot exceeding \n    x/y\n. Initially, your score is \n    0\n. After you\nperform exactly \n    k\n operations, you add all the remaining elements of the\narray to the score. Calculate the minimum possible score you can get. Input\nThe first line of the input contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    500\n) \u2014 the number of test cases. Each test case consists of two lines. The\nfirst line contains two integers \n    n\n and \n    k\n (\n    1 \n    \u2264 n \n    \u2264\n    100\n; \n    0 \n    \u2264 k \n    \u2264\n    \u230a\n    n/2\n    \u230b\n). The second\nline contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 2 \n    \u00b7 10^5\n). Output Print one integer \u2014 the minimum possible\nscore you can get. Example Input 5 7 3 1 1 1 2 1 3 1 5 1 5 5 5 5 5 4 2 1 3 3 7\n2 0 4 2 9 2 1 10 10 1 10 2 7 10 3 Output 2 16 0 6 16 Note Let's consider the\nexample test. In the first test case, one way to obtain a score of \n    2\n is\nthe following one: choose \n    a_7 = 1\n and \n    a_4 = 2\n for the operation;\nthe score becomes \n    0 + \n    \u230a\n    1/2\n    \u230b = 0\n, the array\nbecomes \n    [1, 1, 1, 1, 3]\n; choose \n    a_1 = 1\n and \n    a_5 = 3\n for the\noperation; the score becomes \n    0 + \n    \u230a\n    1/3\n    \u230b = 0\n,\nthe array becomes \n    [1, 1, 1]\n; choose \n    a_1 = 1\n and \n    a_2 = 1\n for\nthe operation; the score becomes \n    0 + \n    \u230a\n    1/1\n    \u230b =\n    1\n, the array becomes \n    [1]\n; add the remaining element \n    1\n to the\nscore, so the resulting score is \n    2\n. In the second test case, no matter\nwhich operations you choose, the resulting score is \n    16\n. In the third\ntest case, one way to obtain a score of \n    0\n is the following one: choose\n\n    a_1 = 1\n and \n    a_2 = 3\n for the operation; the score becomes \n    0 +\n    \n    \u230a\n    1/3\n    \u230b = 0\n, the array becomes \n    [3, 7]\n;\nchoose \n    a_1 = 3\n and \n    a_2 = 7\n for the operation; the score becomes\n\n    0 + \n    \u230a\n    3/7\n    \u230b = 0\n, the array becomes empty; the\narray is empty, so the score doesn't change anymore. In the fourth test case,\nno operations can be performed, so the score is the sum of the elements of the\narray: \n    4 + 2 = 6\n.\n\n",
        "cf_contest_id": 1618,
        "cf_index": "D",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n7 3\r\n1 1 1 2 1 3 1\r\n5 1\r\n5 5 5 5 5\r\n4 2\r\n1 3 3 7\r\n2 0\r\n4 2\r\n9 2\r\n1 10 10 1 10 2 7 10 3\r\n",
                "2\r\n16\r\n0\r\n6\r\n16\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n7 3\r\n1 1 1 2 2 3 3\r\n",
                "1\r\n"
            ],
            [
                "1\r\n10 4\r\n1 1 1 2 3 3 3 3 4 5\r\n",
                "2\r\n"
            ],
            [
                "1\r\n6 3\r\n3 3 4 4 7 7\r\n",
                "0\r\n"
            ],
            [
                "1\r\n6 3\r\n1 7 7 7 10 10\r\n",
                "0\r\n"
            ],
            [
                "1\r\n6 3\r\n2 3 3 3 4 4\r\n",
                "0\r\n"
            ],
            [
                "1\r\n6 3\r\n1 1 1 1 2 2\r\n",
                "1\r\n"
            ],
            [
                "1\r\n4 2\r\n5 6 5 5\r\n",
                "1\r\n"
            ],
            [
                "1\r\n87 12\r\n10 5 11 7 16 16 8 11 14 11 4 4 3 7 16 12 2 3 3 13 1 7 11 16 4 7 11 5 3 15 20 5 12 1 8 8 13 19 3 7 14 3 4 10 18 13 20 1 4 8 10 12 4 7 15 2 18 13 6 2 1 2 10 13 4 5 18 7 1 10 6 2 19 17 5 11 10 12 14 6 16 20 11 12 10 3 6\r\n",
                "401\r\n"
            ],
            [
                "1\r\n8 4\r\n1 1 3 3 3 3 5 6\r\n",
                "0\r\n"
            ],
            [
                "1\r\n10 3\r\n1 7 4 3 2 2 6 7 4 7\r\n",
                "8\r\n"
            ],
            [
                "1\r\n91 9\r\n4 3 19 8 3 6 16 5 17 11 9 13 15 8 1 3 20 2 19 7 14 1 6 4 8 18 13 8 16 11 3 12 3 3 12 17 15 9 5 15 12 11 7 20 19 3 4 14 10 9 7 16 12 10 3 6 15 17 4 8 15 2 10 13 11 15 7 20 1 10 9 2 10 15 7 1 6 16 2 1 17 10 19 10 7 18 3 5 10 12 15\r\n",
                "569\r\n"
            ],
            [
                "1\r\n16 8\r\n1 1 2 2 3 3 3 3 3 3 3 3 3 4 5 5\r\n",
                "1\r\n"
            ],
            [
                "5\r\n7 3\r\n1 1 1 2 1 3 1\r\n5 1\r\n5 5 5 5 5\r\n4 2\r\n1 3 3 7\r\n6 3\r\n2 2 3 3 4 4\r\n9 2\r\n1 10 10 1 10 2 7 10 3\r\n",
                "2\r\n16\r\n0\r\n0\r\n16\r\n"
            ],
            [
                "1\r\n6 3\r\n1 1 2 2 3 3\r\n",
                "0\r\n"
            ],
            [
                "1\r\n8 4\r\n1 2 2 2 2 3 3 3\r\n",
                "0\r\n"
            ],
            [
                "1\r\n7 3\r\n2 2 2 2 7 8 2\r\n",
                "3\r\n"
            ],
            [
                "1\r\n12 6\r\n1 1 1 8 8 8 8 8 8 10 10 10\r\n",
                "0\r\n"
            ],
            [
                "1\r\n8 3\r\n1 1 6 6 6 6 2 2\r\n",
                "3\r\n"
            ],
            [
                "1\r\n14 7\r\n1 1 1 1 1 1 1 2 2 2 2 2 3 3\r\n",
                "0\r\n"
            ],
            [
                "1\r\n77 9\r\n9 8 10 5 8 20 17 19 14 16 7 6 15 16 6 13 10 13 14 12 5 6 12 14 12 8 13 12 17 8 12 17 2 11 8 18 17 2 13 2 1 19 9 8 10 20 8 12 15 1 3 15 6 19 4 11 12 8 3 2 1 20 15 14 6 10 11 1 5 11 10 6 20 6 14 16 6\r\n",
                "489\r\n"
            ],
            [
                "1\r\n9 2\r\n1 10 10 1 10 2 7 10 191919\r\n",
                "22\r\n"
            ],
            [
                "1\r\n67 22\r\n83 41 94 76 47 33 20 51 98 48 92 72 24 51 15 17 35 70 83 95 79 65 80 17 72 7 97 14 74 98 55 63 45 79 42 92 85 24 84 30 29 77 64 68 68 71 89 18 82 68 20 91 84 52 45 23 65 95 83 84 18 81 63 11 89 41 69\r\n",
                "616\r\n"
            ],
            [
                "10\r\n7 3\r\n2 2 2 2 3 3 3\r\n7 3\r\n2 2 3 3 3 4 4\r\n7 3\r\n2 2 2 2 2 2 2\r\n7 3\r\n2 2 3 3 3 4 4\r\n7 3\r\n2 2 2 3 3 3 3\r\n7 3\r\n2 2 3 3 3 3 4\r\n7 3\r\n2 2 2 2 2 3 3\r\n7 3\r\n2 2 3 3 3 3 3\r\n7 3\r\n2 2 2 2 2 2 3\r\n7 3\r\n2 2 2 3 3 3 4\r\n",
                "2\r\n2\r\n5\r\n2\r\n3\r\n3\r\n3\r\n4\r\n4\r\n2\r\n"
            ],
            [
                "1\r\n12 6\r\n1 1 1 1 1 2 2 2 2 3 3 3\r\n",
                "0\r\n"
            ],
            [
                "1\r\n6 3\r\n4 4 5 5 6 6\r\n",
                "0\r\n"
            ],
            [
                "1\r\n100 34\r\n2 6 5 4 4 4 5 7 6 6 1 2 5 1 4 4 4 5 5 5 2 3 5 6 6 1 1 3 7 5 4 4 1 3 4 6 4 2 7 6 5 4 6 1 1 2 4 6 4 2 2 6 6 3 5 3 4 5 3 4 3 2 1 7 7 5 4 6 3 1 6 7 6 2 2 2 4 7 3 2 6 1 1 3 1 5 6 4 4 7 2 6 6 5 4 4 3 5 2 4\r\n",
                "58\r\n"
            ],
            [
                "1\r\n100 17\r\n5 1 1 7 3 2 5 1 1 3 4 5 5 5 7 5 7 5 1 7 6 6 1 3 6 3 4 5 4 6 3 1 7 6 2 3 2 5 3 3 6 5 5 6 5 7 5 3 5 4 7 3 5 1 7 3 4 4 3 3 3 5 1 1 1 7 1 3 2 3 2 7 2 1 6 5 6 6 1 5 4 6 1 7 6 7 6 1 1 1 5 3 5 7 4 6 4 6 3 2\r\n",
                "192\r\n"
            ],
            [
                "1\r\n85 3\r\n43 17 34 67 14 7 80 48 36 95 48 68 86 4 17 46 51 87 41 90 100 56 57 42 9 8 27 23 16 14 99 22 13 98 89 24 77 59 15 94 25 81 4 71 24 43 97 88 97 10 6 8 3 86 28 61 100 98 76 85 32 18 79 66 51 44 28 99 87 56 80 93 89 76 7 57 96 39 46 25 4 67 6 51 39\r\n",
                "3753\r\n"
            ],
            [
                "1\r\n88 38\r\n9 143 135 72 74 12 120 27 108 183 18 24 163 122 140 155 166 188 197 14 134 66 188 161 79 100 40 55 161 118 121 18 72 141 136 31 39 187 2 98 16 118 120 196 127 66 135 186 49 16 17 50 107 192 50 23 62 110 83 124 197 127 185 129 131 182 45 147 174 115 89 109 177 7 70 43 75 5 157 93 59 26 176 105 32 89 65 6\r\n",
                "140\r\n"
            ],
            [
                "1\r\n9 3\r\n1 1 1 2 2 2 3 3 3\r\n",
                "3\r\n"
            ],
            [
                "1\r\n13 6\r\n1 2 2 2 2 3 3 3 3 4 4 4 4\r\n",
                "1\r\n"
            ],
            [
                "1\r\n10 3\r\n2 15 14 13 12 15 18 2 9 15\r\n",
                "25\r\n"
            ],
            [
                "1\r\n10 3\r\n1 1 1 1 1 1 2 2 3 3\r\n",
                "4\r\n"
            ],
            [
                "1\r\n10 5\r\n3 3 3 4 4 4 5 5 5 1\r\n",
                "0\r\n"
            ],
            [
                "5\r\n7 3\r\n1 1 1 2 1 3 1\r\n5 1\r\n5 5 5 5 5\r\n4 2\r\n1 3 3 7\r\n2 0\r\n4 2\r\n10 5\r\n3 3 3 4 4 4 5 5 5 1\r\n",
                "2\r\n16\r\n0\r\n6\r\n0\r\n"
            ],
            [
                "1\r\n6 3\r\n6 6 5 5 1 1\r\n",
                "0\r\n"
            ]
        ]
    }
]