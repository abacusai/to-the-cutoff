[
    {
        "name": "Hossam and a Letter",
        "description": "Hossam bought a new piece of ground with length \n    n\n and width \n    m\n, he\ndivided it into an \n    n \n    \u00b7 m\n grid, each cell being of size\n\n    1\n    \u00d71\n. Since Hossam's name starts with the letter 'H', he decided\nto draw the capital letter 'H' by building walls of size \n    1\n    \u00d71\n on\nsome squares of the ground. Each square \n    1\n    \u00d71\n on the ground is\nassigned a quality degree: perfect, medium, or bad. The process of building\nwalls to form up letter 'H' has the following constraints: The letter must\nconsist of one horizontal and two vertical lines. The vertical lines must not\nbe in the same or neighboring columns. The vertical lines must start in the\nsame row and end in the same row (and thus have the same length). The\nhorizontal line should connect the vertical lines, but must not cross them.\nThe horizontal line can be in any row between the vertical lines (not only in\nthe middle), except the top and the bottom one. (With the horizontal line in\nthe top row the letter looks like 'n', and in the bottom row like 'U'.) It is\nforbidden to build walls in cells of bad quality. You can use at most one\nsquare of medium quality. You can use any number of squares of perfect\nquality. Find the maximum number of walls that can be used to draw the letter\n'H'. Check the note for more clarification. Input The first line of the input\ncontains two integer numbers \n    n\n, \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 400\n).\nThe next \n    n\n lines of the input contain \n    m\n characters each,\ndescribing the grid. The character '.' stands for a perfect square, the\ncharacter 'm' stands for a medium square, and the character '#' stands for a\nbad square. Output Print a single integer \u2014 the maximum number of walls that\nform a capital letter 'H'. If it is not possible to draw any letter 'H', print\n\n    0\n. Examples Input 2 3 #m. .#. Output 0 Input 7 8 ...#.m.. ..m...m.\n.#..#.m# ...m..m. m....... ..#.m.mm ......m. Output 16 Note In the first test\ncase, we can't build the letter 'H'. For the second test case, the figure\nbelow represents the grid and some of the valid letters 'H'. Perfect, medium,\nand bad squares are represented with white, yellow, and black colors\nrespectively.\n\n",
        "cf_contest_id": 1771,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "implementation",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 3\r\n#m.\r\n.#.\r\n",
                "0\r\n"
            ],
            [
                "7 8\r\n...#.m..\r\n..m...m.\r\n.#..#.m#\r\n...m..m.\r\nm.......\r\n..#.m.mm\r\n......m.\r\n",
                "16\r\n"
            ]
        ],
        "private_cases": []
    }
]