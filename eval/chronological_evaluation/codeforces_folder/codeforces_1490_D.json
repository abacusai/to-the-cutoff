[
    {
        "name": "Permutation Transformation",
        "description": "A permutation \u2014 is a sequence of length \n    n\n integers from \n    1\n to\n\n    n\n, in which all the numbers occur exactly once. For example, \n    [1]\n,\n\n    [3, 5, 2, 1, 4]\n, \n    [1, 3, 2]\n \u2014 permutations, and \n    [2, 3, 2]\n,\n\n    [4, 3, 1]\n, \n    [0]\n \u2014 no. Polycarp was recently gifted a permutation\n\n    a[1 \n    \u2026 n]\n of length \n    n\n. Polycarp likes trees more than\npermutations, so he wants to transform permutation \n    a\n into a rooted\nbinary tree. He transforms an array of different integers into a tree as\nfollows: the maximum element of the array becomes the root of the tree; all\nelements to the left of the maximum \u2014 form a left subtree (which is built\naccording to the same rules but applied to the left part of the array), but if\nthere are no elements to the left of the maximum, then the root has no left\nchild; all elements to the right of the maximum \u2014 form a right subtree (which\nis built according to the same rules but applied to the right side of the\narray), but if there are no elements to the right of the maximum, then the\nroot has no right child. For example, if he builds a tree by permutation\n\n    a=[3, 5, 2, 1, 4]\n, then the root will be the element \n    a_2=5\n, and\nthe left subtree will be the tree that will be built for the subarray \n    a[1\n    \n    \u2026 1] = [3]\n, and the right one \u2014 for the subarray \n    a[3 \n    \u2026 5] =\n    [2, 1, 4]\n. As a result, the following tree will be built: The tree\ncorresponding to the permutation \n    a=[3, 5, 2, 1, 4]\n. Another example: let\nthe permutation be \n    a=[1, 3, 2, 7, 5, 6, 4]\n. In this case, the tree looks\nlike this: The tree corresponding to the permutation \n    a=[1, 3, 2, 7, 5, 6,\n    4]\n. Let us denote by \n    d_v\n the depth of the vertex \n    a_v\n, that is,\nthe number of edges on the path from the root to the vertex numbered\n\n    a_v\n. Note that the root depth is zero. Given the permutation \n    a\n,\nfor each vertex, find the value of \n    d_v\n. Input The first line contains\none integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases.\nThen \n    t\n test cases follow. The first line of each test case contains an\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n) \u2014 the length of the permutation.\nThis is followed by \n    n\n numbers \n    a_1, a_2, \n    \u2026, a_n\n \u2014\npermutation \n    a\n. Output For each test case, output \n    n\n values \u2014\n\n    d_1, d_2, \n    \u2026, d_n\n. Example Input 3 5 3 5 2 1 4 1 1 4 4 3 1 2\nOutput 1 0 2 3 1 0 0 1 3 2\n\n",
        "cf_contest_id": 1490,
        "cf_index": "D",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "divide and conquer",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n5\r\n3 5 2 1 4\r\n1\r\n1\r\n4\r\n4 3 1 2\r\n",
                "1 0 2 3 1\r\n0\r\n0 1 3 2\r\n"
            ]
        ],
        "private_cases": []
    }
]