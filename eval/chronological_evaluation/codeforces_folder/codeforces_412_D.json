[
    {
        "name": "Giving Awards",
        "description": "The employees of the R1 company often spend time together: they watch\nfootball, they go camping, they solve contests. So, it's no big deal that\nsometimes someone pays for someone else. Today is the day of giving out money\nrewards. The R1 company CEO will invite employees into his office one by one,\nrewarding each one for the hard work this month. The CEO knows who owes money\nto whom. And he also understands that if he invites person x to his office for\na reward, and then immediately invite person y, who has lent some money to\nperson x, then they can meet. Of course, in such a situation, the joy of\nperson x from his brand new money reward will be much less. Therefore, the R1\nCEO decided to invite the staff in such an order that the described situation\nwill not happen for any pair of employees invited one after another. However,\nthere are a lot of employees in the company, and the CEO doesn't have a lot of\ntime. Therefore, the task has been assigned to you. Given the debt\nrelationships between all the employees, determine in which order they should\nbe invited to the office of the R1 company CEO, or determine that the\ndescribed order does not exist. Input The first line contains space-separated\nintegers n and m \u2014 the number of employees in R1 and the number of debt\nrelations. Each of the following m lines contains two space-separated integers\nai, bi (1 \u2264 ai, bi \u2264 n; ai \u2260 bi), these integers indicate that the person\nnumber ai owes money to a person a number bi. Assume that all the employees\nare numbered from 1 to n. It is guaranteed that each pair of people p, q is\nmentioned in the input data at most once. In particular, the input data will\nnot contain pairs p, q and q, p simultaneously. Output Print -1 if the\ndescribed order does not exist. Otherwise, print the permutation of n distinct\nintegers. The first number should denote the number of the person who goes to\nthe CEO office first, the second number denote the person who goes second and\nso on. If there are multiple correct orders, you are allowed to print any of\nthem. Examples Input 2 1 1 2 Output 2 1 Input 3 3 1 2 2 3 3 1 Output 2 1 3\n\n",
        "cf_contest_id": 412,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1\r\n1 2\r\n",
                "2 1 "
            ],
            [
                "3 3\r\n1 2\r\n2 3\r\n3 1\r\n",
                "3 2 1 "
            ]
        ],
        "private_cases": [
            [
                "10 45\r\n10 5\r\n10 7\r\n6 1\r\n5 8\r\n3 5\r\n6 5\r\n1 2\r\n6 10\r\n2 9\r\n9 5\r\n4 1\r\n7 5\r\n1 8\r\n6 8\r\n10 9\r\n7 2\r\n7 9\r\n4 10\r\n7 3\r\n4 8\r\n10 3\r\n10 8\r\n2 10\r\n8 2\r\n4 2\r\n5 2\r\n9 1\r\n4 5\r\n1 3\r\n9 6\r\n3 8\r\n5 1\r\n6 4\r\n4 7\r\n8 7\r\n7 1\r\n9 3\r\n3 4\r\n6 2\r\n3 2\r\n6 7\r\n6 3\r\n4 9\r\n8 9\r\n1 10\r\n",
                "2 7 8 5 3 6 9 10 1 4 "
            ],
            [
                "4 6\r\n3 4\r\n4 1\r\n4 2\r\n2 1\r\n3 2\r\n3 1\r\n",
                "1 2 4 3 "
            ],
            [
                "5 10\r\n4 2\r\n4 5\r\n3 1\r\n2 1\r\n3 4\r\n3 2\r\n5 1\r\n5 2\r\n4 1\r\n5 3\r\n",
                "1 2 3 5 4 "
            ]
        ]
    }
]