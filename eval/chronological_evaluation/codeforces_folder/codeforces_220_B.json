[
    {
        "name": "Little Elephant and Array",
        "description": "The Little Elephant loves playing with arrays. He has array a, consisting of n\npositive integers, indexed from 1 to n. Let's denote the number with index i\nas ai. Additionally the Little Elephant has m queries to the array, each query\nis characterised by a pair of integers lj and rj (1 \u2264 lj \u2264 rj \u2264 n). For each\nquery lj, rj the Little Elephant has to count, how many numbers x exist, such\nthat number x occurs exactly x times among numbers alj, alj + 1, ..., arj.\nHelp the Little Elephant to count the answers to all queries. Input The first\nline contains two space-separated integers n and m (1 \u2264 n, m \u2264 10^5) \u2014 the\nsize of array a and the number of queries to it. The next line contains n\nspace-separated positive integers a1, a2, ..., an (1 \u2264 ai \u2264 10^9). Next m\nlines contain descriptions of queries, one per line. The j-th of these lines\ncontains the description of the j-th query as two space-separated integers lj\nand rj (1 \u2264 lj \u2264 rj \u2264 n). Output In m lines print m integers \u2014 the answers to\nthe queries. The j-th line should contain the answer to the j-th query.\nExamples Input 7 2 3 1 2 2 3 3 7 1 7 3 4 Output 3 1\n\n",
        "cf_contest_id": 220,
        "cf_index": "B",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 2\r\n3 1 2 2 3 3 7\r\n1 7\r\n3 4\r\n",
                "3\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "6 6\r\n1 2 2 3 3 3\r\n1 2\r\n2 2\r\n1 3\r\n2 4\r\n4 6\r\n1 6\r\n",
                "1\r\n0\r\n2\r\n1\r\n1\r\n3\r\n"
            ],
            [
                "1 2\r\n1\r\n1 1\r\n1 1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "1 1\r\n1000000000\r\n1 1\r\n",
                "0\r\n"
            ]
        ]
    }
]