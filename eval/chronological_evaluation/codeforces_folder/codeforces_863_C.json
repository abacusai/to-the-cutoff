[
    {
        "name": "1-2-3",
        "description": "Ilya is working for the company that constructs robots. Ilya writes programs\nfor entertainment robots, and his current project is \"Bob\", a new-generation\ngame robot. Ilya's boss wants to know his progress so far. Especially he is\ninterested if Bob is better at playing different games than the previous\nmodel, \"Alice\". So now Ilya wants to compare his robots' performance in a\nsimple game called \"1-2-3\". This game is similar to the \"Rock-Paper-Scissors\"\ngame: both robots secretly choose a number from the set 1, 2, 3 and say it\nat the same moment. If both robots choose the same number, then it's a draw\nand noone gets any points. But if chosen numbers are different, then one of\nthe robots gets a point: 3 beats 2, 2 beats 1 and 1 beats 3. Both robots'\nprograms make them choose their numbers in such a way that their choice in (i\n+ 1)-th game depends only on the numbers chosen by them in i-th game. Ilya\nknows that the robots will play k games, Alice will choose number a in the\nfirst game, and Bob will choose b in the first game. He also knows both\nrobots' programs and can tell what each robot will choose depending on their\nchoices in previous game. Ilya doesn't want to wait until robots play all k\ngames, so he asks you to predict the number of points they will have after the\nfinal game. Input The first line contains three numbers k, a, b (1 \u2264 k \u2264\n10^18, 1 \u2264 a, b \u2264 3). Then 3 lines follow, i-th of them containing 3 numbers\nAi, 1, Ai, 2, Ai, 3, where Ai, j represents Alice's choice in the game if\nAlice chose i in previous game and Bob chose j (1 \u2264 Ai, j \u2264 3). Then 3 lines\nfollow, i-th of them containing 3 numbers Bi, 1, Bi, 2, Bi, 3, where Bi, j\nrepresents Bob's choice in the game if Alice chose i in previous game and Bob\nchose j (1 \u2264 Bi, j \u2264 3). Output Print two numbers. First of them has to be\nequal to the number of points Alice will have, and second of them must be\nBob's score after k games. Examples Input 10 2 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2\n2 2 2 Output 1 9 Input 8 1 1 2 2 1 3 3 1 3 1 3 1 1 1 2 1 1 1 2 3 Output 5 2\nInput 5 1 1 1 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 Output 0 0 Note In the second\nexample game goes like this: The fourth and the seventh game are won by Bob,\nthe first game is draw and the rest are won by Alice.\n\n",
        "cf_contest_id": 863,
        "cf_index": "C",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "graphs",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10 2 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n2 2 2\r\n2 2 2\r\n2 2 2\r\n",
                "1 9\r\n"
            ],
            [
                "8 1 1\r\n2 2 1\r\n3 3 1\r\n3 1 3\r\n1 1 1\r\n2 1 1\r\n1 2 3\r\n",
                "5 2\r\n"
            ],
            [
                "5 1 1\r\n1 2 2\r\n2 2 2\r\n2 2 2\r\n1 2 2\r\n2 2 2\r\n2 2 2\r\n",
                "0 0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n3 3 1\r\n1 1 1\r\n3 2 2\r\n2 2 2\r\n1 3 1\r\n3 3 2\r\n",
                "0 0\r\n"
            ],
            [
                "1 3 1\r\n1 3 3\r\n2 3 2\r\n2 1 3\r\n1 3 2\r\n3 3 2\r\n3 1 1\r\n",
                "0 1\r\n"
            ],
            [
                "10 2 1\r\n2 2 1\r\n3 2 2\r\n3 1 3\r\n3 1 3\r\n1 2 2\r\n3 3 2\r\n",
                "8 1\r\n"
            ],
            [
                "10 1 2\r\n1 1 2\r\n2 1 2\r\n1 3 1\r\n2 3 3\r\n3 2 2\r\n3 2 1\r\n",
                "3 5\r\n"
            ],
            [
                "1000000 2 3\r\n3 1 1\r\n3 1 1\r\n1 2 2\r\n3 1 1\r\n3 1 1\r\n1 1 3\r\n",
                "0 333334\r\n"
            ],
            [
                "1000000 1 3\r\n1 2 3\r\n2 1 2\r\n2 1 2\r\n1 2 3\r\n1 1 1\r\n2 3 3\r\n",
                "999998 1\r\n"
            ],
            [
                "1000000000000 1 3\r\n3 1 1\r\n3 2 1\r\n2 2 2\r\n2 2 1\r\n1 2 2\r\n1 1 3\r\n",
                "500000000001 499999999998\r\n"
            ],
            [
                "1000000000000 3 2\r\n2 3 3\r\n2 1 2\r\n1 1 1\r\n2 3 1\r\n1 3 3\r\n3 3 3\r\n",
                "500000000001 499999999999\r\n"
            ],
            [
                "1000000000000000000 2 3\r\n1 3 1\r\n2 3 3\r\n2 2 2\r\n1 2 3\r\n3 1 2\r\n2 2 2\r\n",
                "1 500000000000000000\r\n"
            ],
            [
                "999999999999999999 2 2\r\n2 3 2\r\n2 1 2\r\n1 3 3\r\n2 2 2\r\n1 3 2\r\n1 2 1\r\n",
                "499999999999999999 0\r\n"
            ],
            [
                "1000000000000000000 2 1\r\n3 1 2\r\n2 3 3\r\n1 2 3\r\n2 2 3\r\n1 1 3\r\n2 3 2\r\n",
                "1000000000000000000 0\r\n"
            ],
            [
                "1000000000000000000 3 3\r\n2 1 3\r\n1 2 3\r\n1 3 2\r\n3 2 2\r\n3 1 3\r\n3 3 1\r\n",
                "750000000000000000 0\r\n"
            ],
            [
                "1000000000000000000 3 1\r\n2 3 2\r\n2 2 1\r\n2 3 3\r\n3 3 3\r\n2 1 1\r\n1 2 1\r\n",
                "500000000000000000 1\r\n"
            ],
            [
                "478359268475263455 1 1\r\n3 2 3\r\n2 3 3\r\n2 1 1\r\n3 3 3\r\n2 3 3\r\n1 3 1\r\n",
                "0 0\r\n"
            ],
            [
                "837264528963824683 3 3\r\n3 1 1\r\n1 3 1\r\n1 3 1\r\n3 2 1\r\n2 3 3\r\n2 2 2\r\n",
                "0 837264528963824682\r\n"
            ],
            [
                "129341234876124184 1 2\r\n1 3 3\r\n1 1 2\r\n1 2 3\r\n3 1 1\r\n3 1 3\r\n3 2 3\r\n",
                "64670617438062091 64670617438062093\r\n"
            ],
            [
                "981267318925341267 3 2\r\n1 2 1\r\n3 2 2\r\n3 3 3\r\n3 2 2\r\n2 2 3\r\n2 2 1\r\n",
                "981267318925341267 0\r\n"
            ],
            [
                "12 2 2\r\n1 1 2\r\n2 2 3\r\n3 3 1\r\n2 3 1\r\n2 3 1\r\n2 3 1\r\n",
                "3 5\r\n"
            ],
            [
                "3 1 3\r\n1 1 2\r\n2 1 3\r\n3 3 3\r\n2 3 1\r\n1 1 3\r\n3 3 3\r\n",
                "3 0\r\n"
            ],
            [
                "3 2 2\r\n1 1 2\r\n2 1 3\r\n3 3 3\r\n2 3 1\r\n1 1 3\r\n3 3 3\r\n",
                "0 1\r\n"
            ],
            [
                "67 1 1\r\n1 1 2\r\n2 2 3\r\n3 3 1\r\n2 3 1\r\n2 3 1\r\n2 3 1\r\n",
                "23 22\r\n"
            ],
            [
                "4991 1 2\r\n1 1 2\r\n2 2 3\r\n3 1 3\r\n2 3 1\r\n2 3 1\r\n2 1 3\r\n",
                "1872 1872\r\n"
            ],
            [
                "3 1 1\r\n1 1 2\r\n2 1 3\r\n3 3 3\r\n2 3 1\r\n1 1 3\r\n3 3 3\r\n",
                "1 1\r\n"
            ],
            [
                "4 1 1\r\n1 1 2\r\n2 2 3\r\n3 3 1\r\n2 3 1\r\n2 3 1\r\n2 3 1\r\n",
                "2 1\r\n"
            ],
            [
                "1 2 1\r\n1 2 3\r\n1 3 2\r\n2 1 3\r\n1 2 3\r\n3 3 3\r\n2 1 3\r\n",
                "1 0\r\n"
            ],
            [
                "1000000000002 1 1\r\n2 2 1\r\n3 3 1\r\n3 1 3\r\n1 1 1\r\n2 1 1\r\n1 2 3\r\n",
                "666666666668 333333333333\r\n"
            ],
            [
                "1000000000005 1 1\r\n2 2 1\r\n3 3 1\r\n3 1 3\r\n1 1 1\r\n2 1 1\r\n1 2 3\r\n",
                "666666666670 333333333334\r\n"
            ],
            [
                "4 3 1\r\n1 1 2\r\n2 1 3\r\n3 3 3\r\n2 3 1\r\n1 1 3\r\n3 3 3\r\n",
                "0 1\r\n"
            ]
        ]
    }
]