[
    {
        "name": "Permutations",
        "description": "A permutation is a sequence of integers from 1 to n of length n containing\neach number exactly once. For example, (1), (4, 3, 5, 1, 2), (3, 2, 1) are\npermutations, and (1, 1), (4, 3, 1), (2, 3, 4) are not. There are many tasks\non permutations. Today you are going to solve one of them. Let\u2019s imagine that\nsomebody took several permutations (perhaps, with a different number of\nelements), wrote them down consecutively as one array and then shuffled the\nresulting array. The task is to restore the initial permutations if it is\npossible. Input The first line contains an integer n (1 \u2264 n \u2264 10^5). The next\nline contains the mixed array of n integers, divided with a single space. The\nnumbers in the array are from 1 to 10^5. Output If this array can be split\ninto several permutations so that every element of the array belongs to\nexactly one permutation, print in the first line the number of permutations.\nThe second line should contain n numbers, corresponding to the elements of the\ngiven array. If the i-th element belongs to the first permutation, the i-th\nnumber should be 1, if it belongs to the second one, then its number should be\n2 and so on. The order of the permutations\u2019 numbering is free. If several\nsolutions are possible, print any one of them. If there\u2019s no solution, print\nin the first line - 1. Examples Input 9 1 2 3 1 2 1 4 2 5 Output 3 3 1 2 1 2 2\n2 3 2 Input 4 4 3 2 1 Output 1 1 1 1 1 Input 4 1 2 2 3 Output -1 Note In the\nfirst sample test the array is split into three permutations: (2, 1), (3, 2,\n1, 4, 5), (1, 2). The first permutation is formed by the second and the fourth\nelements of the array, the second one \u2014 by the third, the fifth, the sixth,\nthe seventh and the ninth elements, the third one \u2014 by the first and the eigth\nelements. Clearly, there are other splitting variants possible.\n\n",
        "cf_contest_id": 48,
        "cf_index": "D",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9\r\n1 2 3 1 2 1 4 2 5\r\n",
                "3\r\n3 3 1 2 2 1 1 1 1 \r\n"
            ],
            [
                "4\r\n4 3 2 1\r\n",
                "1\r\n1 1 1 1 \r\n"
            ],
            [
                "4\r\n1 2 2 3\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n",
                "1\r\n1 \r\n"
            ],
            [
                "1\r\n2\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n1 1 1 1 1\r\n",
                "5\r\n5 4 3 2 1 \r\n"
            ],
            [
                "3\r\n2 1 1\r\n",
                "2\r\n1 2 1 \r\n"
            ],
            [
                "6\r\n3 3 2 2 1 1\r\n",
                "2\r\n2 1 2 1 2 1 \r\n"
            ],
            [
                "2\r\n1000 1\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n2 2 1 1 3\r\n",
                "2\r\n2 1 2 1 1 \r\n"
            ],
            [
                "10\r\n2 1 2 4 6 1 5 3 7 1\r\n",
                "3\r\n2 3 1 1 1 2 1 1 1 1 \r\n"
            ],
            [
                "10\r\n4 1 2 1 3 3 1 2 2 1\r\n",
                "4\r\n1 4 3 3 2 1 2 2 1 1 \r\n"
            ],
            [
                "10\r\n1 2 5 1 1 1 4 1 3 2\r\n",
                "5\r\n5 2 1 4 3 2 1 1 1 1 \r\n"
            ],
            [
                "20\r\n2 7 3 8 4 6 3 7 6 4 13 5 1 12 1 10 2 11 5 9\r\n",
                "2\r\n2 2 2 1 2 2 1 1 1 1 1 2 2 1 1 1 1 1 1 1 \r\n"
            ],
            [
                "20\r\n1 1 1 2 3 1 5 9 5 8 4 6 7 3 1 2 2 1 3 4\r\n",
                "6\r\n6 5 4 3 3 3 2 1 1 1 2 1 1 2 2 2 1 1 1 1 \r\n"
            ],
            [
                "20\r\n2 10 3 3 2 1 14 13 2 15 1 4 5 12 7 11 9 1 6 8\r\n",
                "3\r\n3 1 2 1 2 3 1 1 1 1 2 1 1 1 1 1 1 1 1 1 \r\n"
            ],
            [
                "20\r\n1 7 2 3 1 1 8 1 6 1 9 11 5 10 1 4 2 3 1 2\r\n",
                "7\r\n7 1 3 2 6 5 1 4 1 3 1 1 1 1 2 1 2 1 1 1 \r\n"
            ],
            [
                "30\r\n6 1 2 3 6 4 1 8 1 2 2 5 5 1 1 3 9 1 5 8 1 2 7 7 4 3 1 3 4 2\r\n",
                "8\r\n2 8 5 4 1 3 7 2 6 4 3 3 2 5 4 3 1 3 1 1 2 2 2 1 2 2 1 1 1 1 \r\n"
            ],
            [
                "30\r\n2 6 2 3 3 1 4 2 1 3 3 2 1 2 1 8 1 2 4 1 1 1 5 1 4 7 1 9 1 1\r\n",
                "12\r\n6 1 5 4 3 12 3 4 11 2 1 3 10 2 9 1 8 1 2 7 6 5 1 4 1 1 3 1 2 1 \r\n"
            ],
            [
                "30\r\n1 3 2 5 9 4 16 14 2 2 4 11 7 17 1 15 13 3 6 12 6 19 8 1 20 5 18 4 10 3\r\n",
                "3\r\n3 3 3 2 1 3 1 1 2 1 2 1 1 1 2 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 \r\n"
            ],
            [
                "10\r\n2 2 6 3 1 4 5 3 7 7\r\n",
                "-1\r\n"
            ],
            [
                "20\r\n4 6 6 4 5 4 3 2 5 7 3 2 4 1 3 1 1 4 1 7\r\n",
                "-1\r\n"
            ],
            [
                "30\r\n2 8 3 3 7 4 2 9 4 3 5 6 1 5 3 5 8 1 9 6 6 7 2 7 1 1 1 10 2 1\r\n",
                "-1\r\n"
            ],
            [
                "30\r\n8 7 9 6 2 3 7 1 1 5 7 2 3 1 7 4 5 6 3 9 4 9 4 2 3 1 1 2 2 10\r\n",
                "-1\r\n"
            ],
            [
                "50\r\n7 1 6 5 15 3 13 7 1 1 4 2 4 3 2 1 11 9 4 2 3 7 1 1 1 14 3 14 5 2 5 4 1 8 2 2 2 2 1 1 4 1 2 3 6 12 1 1 5 1\r\n",
                "-1\r\n"
            ],
            [
                "50\r\n1 1 4 1 1 1 1 1 1 3 1 1 3 2 1 1 1 1 5 2 1 1 1 1 1 3 1 1 1 1 1 1 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "41\r\n41 40 1 39 38 37 36 35 34 3 33 32 2 4 31 30 29 28 1 3 27 26 25 24 23 1 22 21 20 19 18 17 2 16 15 1 14 13 12 11 10 9 8 7 6 5 4 3 2 1 \r\n"
            ],
            [
                "100\r\n2 13 10 4 13 8 22 11 5 3 4 6 19 4 8 8 6 1 16 4 11 17 5 18 7 7 4 5 3 7 2 16 5 6 10 1 6 12 14 6 8 7 9 7 1 2 1 8 5 5 9 21 7 11 6 1 12 10 6 23 10 9 8 4 1 2 3 13 2 14 15 1 1 12 3 9 12 3 13 9 8 1 12 5 2 3 11 7 11 9 3 14 1 2 15 2 10 4 14 20\r\n",
                "10\r\n8 4 5 7 3 7 1 5 7 7 6 7 1 5 6 5 6 10 2 4 4 1 6 1 7 6 3 5 6 5 7 1 4 5 4 9 4 5 4 3 4 4 6 3 8 6 7 3 3 2 5 1 2 3 2 6 4 3 1 1 2 4 2 2 5 5 5 2 4 3 2 4 3 3 4 3 2 3 1 2 1 2 1 1 3 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 \r\n"
            ],
            [
                "100\r\n9 6 3 28 10 2 2 11 2 1 25 3 13 5 14 13 4 14 2 16 12 27 8 1 7 9 8 19 33 23 4 1 15 6 7 12 2 8 30 4 1 31 6 1 15 5 18 3 2 24 7 3 1 20 10 8 26 22 3 3 9 6 1 10 1 5 1 3 7 6 11 10 1 16 19 5 9 4 4 4 2 18 12 21 11 5 2 32 17 29 2 4 8 1 7 5 3 2 17 1\r\n",
                "12\r\n4 5 8 1 4 10 9 3 8 12 1 7 2 6 2 1 7 1 7 2 3 1 5 11 5 3 4 2 1 1 6 10 2 4 4 2 6 3 1 5 9 1 3 8 1 5 2 6 5 1 3 5 7 1 3 2 1 1 4 3 2 2 6 2 5 4 4 2 2 1 2 1 3 1 1 3 1 4 3 2 4 1 1 1 1 2 3 1 2 1 2 1 1 2 1 1 1 1 1 1 \r\n"
            ],
            [
                "100\r\n12 18 1 1 14 23 1 1 22 5 7 9 7 1 1 1 3 8 4 2 1 6 9 1 3 2 11 1 11 2 3 2 1 4 2 7 1 16 3 4 2 13 3 1 5 11 2 10 20 24 3 21 5 2 6 2 1 10 10 5 17 1 1 4 19 8 5 5 3 9 4 2 7 8 10 4 9 1 3 3 9 7 6 4 4 3 6 8 12 1 3 6 2 1 8 4 1 15 2 5\r\n",
                "20\r\n2 1 20 19 1 1 18 17 1 7 5 5 4 16 15 14 11 5 9 12 13 5 4 12 10 11 3 11 2 10 9 9 10 8 8 3 9 1 8 7 7 1 7 8 6 1 6 4 1 1 6 1 5 5 4 4 7 3 2 4 1 6 5 6 1 4 3 2 5 3 5 3 2 3 1 4 2 4 4 3 1 1 3 3 2 2 2 2 1 3 1 1 2 2 1 1 1 1 1 1 \r\n"
            ],
            [
                "100\r\n10 1 13 1 5 2 5 5 9 10 3 8 4 1 3 5 6 4 1 4 9 8 1 1 1 1 8 2 3 1 1 2 5 1 1 12 6 4 5 3 1 3 18 10 1 2 3 2 6 2 3 15 1 3 5 3 9 7 1 6 11 7 7 8 6 17 11 7 6 1 4 4 1 1 3 1 2 6 7 14 4 4 5 1 11 1 4 2 8 4 2 7 16 12 1 1 2 2 1 2\r\n",
                "25\r\n3 25 1 24 8 12 7 6 3 2 10 5 10 23 9 5 7 9 22 8 2 4 21 20 19 18 3 11 8 17 16 10 4 15 14 2 6 7 3 7 13 6 1 1 12 9 5 8 5 7 4 1 11 3 2 2 1 6 10 4 3 5 4 2 3 1 2 3 2 9 6 5 8 7 1 6 6 1 2 1 4 3 1 5 1 4 2 5 1 1 4 1 1 1 3 2 3 2 1 1 \r\n"
            ]
        ]
    }
]