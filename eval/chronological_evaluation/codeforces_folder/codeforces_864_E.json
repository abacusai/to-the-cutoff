[
    {
        "name": "Fire",
        "description": "Polycarp is in really serious trouble \u2014 his house is on fire! It's time to\nsave the most valuable items. Polycarp estimated that it would take ti seconds\nto save i-th item. In addition, for each item, he estimated the value of di \u2014\nthe moment after which the item i will be completely burned and will no longer\nbe valuable for him at all. In particular, if ti \u2265 di, then i-th item cannot\nbe saved. Given the values pi for each of the items, find a set of items that\nPolycarp can save such that the total value of this items is maximum possible.\nPolycarp saves the items one after another. For example, if he takes item a\nfirst, and then item b, then the item a will be saved in ta seconds, and the\nitem b \u2014 in ta + tb seconds after fire started. Input The first line contains\na single integer n (1 \u2264 n \u2264 100) \u2014 the number of items in Polycarp's house.\nEach of the following n lines contains three integers ti, di, pi (1 \u2264 ti \u2264 20,\n1 \u2264 di \u2264 2 000, 1 \u2264 pi \u2264 20) \u2014 the time needed to save the item i, the time\nafter which the item i will burn completely and the value of item i. Output In\nthe first line print the maximum possible total value of the set of saved\nitems. In the second line print one integer m \u2014 the number of items in the\ndesired set. In the third line print m distinct integers \u2014 numbers of the\nsaved items in the order Polycarp saves them. Items are 1-indexed in the same\norder in which they appear in the input. If there are several answers, print\nany of them. Examples Input 3 3 7 4 2 6 5 3 7 6 Output 11 2 2 3 Input 2 5 6 1\n3 3 5 Output 1 1 1 Note In the first example Polycarp will have time to save\nany two items, but in order to maximize the total value of the saved items, he\nmust save the second and the third item. For example, he can firstly save the\nthird item in 3 seconds, and then save the second item in another 2 seconds.\nThus, the total value of the saved items will be 6 + 5 = 11. In the second\nexample Polycarp can save only the first item, since even if he immediately\nstarts saving the second item, he can save it in 3 seconds, but this item will\nalready be completely burned by this time.\n\n",
        "cf_contest_id": 864,
        "cf_index": "E",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 7 4\r\n2 6 5\r\n3 7 6\r\n",
                "11\r\n2\r\n2 3\r\n"
            ],
            [
                "2\r\n5 6 1\r\n3 3 5\r\n",
                "1\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "9\r\n13 18 14\r\n8 59 20\r\n9 51 2\r\n18 32 15\r\n1 70 18\r\n14 81 14\r\n10 88 16\r\n18 52 3\r\n1 50 6\r\n",
                "106\r\n8\r\n1 4 9 8 2 5 6 7\r\n"
            ],
            [
                "5\r\n12 44 17\r\n10 12 11\r\n16 46 5\r\n17 55 5\r\n6 60 2\r\n",
                "35\r\n4\r\n2 1 3 5\r\n"
            ],
            [
                "6\r\n18 85 3\r\n16 91 20\r\n12 92 11\r\n20 86 20\r\n15 43 4\r\n16 88 7\r\n",
                "62\r\n5\r\n5 4 6 2 3\r\n"
            ],
            [
                "2\r\n12 13 2\r\n1 9 3\r\n",
                "3\r\n1\r\n2\r\n"
            ],
            [
                "3\r\n14 42 16\r\n13 40 1\r\n17 33 5\r\n",
                "21\r\n2\r\n3 1\r\n"
            ],
            [
                "4\r\n5 6 3\r\n17 22 14\r\n4 8 15\r\n13 2 18\r\n",
                "29\r\n2\r\n3 2\r\n"
            ],
            [
                "5\r\n17 15 17\r\n10 14 3\r\n12 7 4\r\n20 21 13\r\n18 17 7\r\n",
                "13\r\n1\r\n4\r\n"
            ],
            [
                "7\r\n14 23 4\r\n9 48 18\r\n14 29 2\r\n16 19 12\r\n6 49 18\r\n12 36 2\r\n7 26 8\r\n",
                "56\r\n4\r\n4 7 2 5\r\n"
            ],
            [
                "10\r\n19 81 5\r\n7 109 8\r\n7 61 6\r\n16 74 16\r\n14 94 2\r\n3 118 20\r\n14 113 3\r\n8 70 6\r\n17 112 5\r\n15 111 6\r\n",
                "75\r\n9\r\n3 8 4 1 2 10 9 7 6\r\n"
            ],
            [
                "12\r\n8 135 20\r\n14 120 14\r\n19 125 5\r\n5 137 19\r\n12 107 9\r\n20 136 12\r\n7 121 7\r\n3 93 2\r\n20 80 15\r\n20 114 11\r\n5 135 10\r\n4 122 6\r\n",
                "128\r\n11\r\n9 5 10 2 7 12 3 1 11 6 4\r\n"
            ],
            [
                "20\r\n15 185 14\r\n19 197 20\r\n3 109 13\r\n1 206 20\r\n1 191 7\r\n7 202 6\r\n17 107 5\r\n2 105 11\r\n13 178 9\r\n2 209 6\r\n15 207 15\r\n12 200 5\r\n16 60 13\r\n19 125 19\r\n12 103 3\r\n4 88 13\r\n15 166 3\r\n18 154 12\r\n5 122 2\r\n15 116 4\r\n",
                "198\r\n19\r\n13 16 15 8 7 3 20 14 18 17 9 1 5 2 12 6 4 11 10\r\n"
            ],
            [
                "30\r\n15 217 19\r\n3 129 4\r\n6 277 3\r\n10 253 11\r\n4 212 4\r\n11 184 17\r\n16 125 11\r\n16 211 1\r\n8 14 17\r\n13 225 2\r\n12 275 10\r\n6 101 19\r\n7 68 5\r\n15 226 19\r\n6 36 11\r\n5 243 13\r\n12 215 11\r\n14 230 5\r\n10 183 5\r\n8 149 10\r\n9 99 4\r\n19 122 11\r\n7 83 5\r\n11 169 18\r\n10 273 7\r\n2 36 11\r\n1 243 18\r\n12 187 2\r\n5 152 7\r\n6 200 17\r\n",
                "296\r\n29\r\n9 15 26 13 23 21 12 22 7 2 20 29 24 19 6 28 30 5 17 1 10 14 18 16 27 4 25 11 3\r\n"
            ],
            [
                "40\r\n12 276 8\r\n7 312 8\r\n17 291 10\r\n14 266 2\r\n10 67 2\r\n11 133 4\r\n3 335 13\r\n10 69 6\r\n4 365 17\r\n11 367 9\r\n9 450 18\r\n8 169 16\r\n6 285 14\r\n11 22 14\r\n19 39 7\r\n1 113 14\r\n13 259 4\r\n13 123 7\r\n12 334 15\r\n18 32 12\r\n10 329 14\r\n20 19 13\r\n2 193 9\r\n19 300 12\r\n11 239 18\r\n20 347 13\r\n17 212 14\r\n10 23 18\r\n15 43 9\r\n3 197 16\r\n3 203 13\r\n17 249 20\r\n5 374 11\r\n9 140 3\r\n16 239 9\r\n15 78 14\r\n17 334 3\r\n20 446 3\r\n11 268 14\r\n6 305 18\r\n",
                "410\r\n36\r\n14 28 29 5 8 36 16 18 6 34 12 23 30 31 27 25 35 32 17 39 1 13 3 24 40 2 21 19 37 7 26 9 10 33 38 11\r\n"
            ],
            [
                "50\r\n5 289 6\r\n16 126 16\r\n12 16 13\r\n12 71 8\r\n4 6 5\r\n9 57 4\r\n13 120 16\r\n3 54 17\r\n5 374 3\r\n7 345 9\r\n18 74 6\r\n10 17 6\r\n11 38 8\r\n19 40 2\r\n8 49 12\r\n20 6 1\r\n14 159 19\r\n6 90 10\r\n8 24 15\r\n12 2 18\r\n17 215 13\r\n8 91 19\r\n15 60 20\r\n14 247 14\r\n5 177 20\r\n11 90 9\r\n2 107 17\r\n11 8 10\r\n16 66 9\r\n15 2 7\r\n13 46 9\r\n12 139 4\r\n6 64 12\r\n11 39 4\r\n3 170 2\r\n15 178 13\r\n20 70 19\r\n10 162 7\r\n8 183 14\r\n12 8 16\r\n20 23 14\r\n1 33 7\r\n17 187 8\r\n3 45 8\r\n19 221 3\r\n19 132 6\r\n2 78 3\r\n8 75 9\r\n17 33 19\r\n19 31 12\r\n",
                "326\r\n26\r\n19 42 49 44 15 8 23 33 48 47 18 22 27 7 2 17 38 25 36 39 43 21 24 1 10 9\r\n"
            ],
            [
                "1\r\n20 20 20\r\n",
                "0\r\n0\r\n\r\n"
            ],
            [
                "1\r\n20 21 20\r\n",
                "20\r\n1\r\n1\r\n"
            ],
            [
                "2\r\n3 3 2\r\n3 4 1\r\n",
                "1\r\n1\r\n2\r\n"
            ],
            [
                "2\r\n20 40 20\r\n20 41 20\r\n",
                "40\r\n2\r\n1 2\r\n"
            ],
            [
                "2\r\n20 41 20\r\n20 40 20\r\n",
                "40\r\n2\r\n2 1\r\n"
            ],
            [
                "2\r\n20 40 20\r\n20 40 20\r\n",
                "20\r\n1\r\n1\r\n"
            ]
        ]
    }
]