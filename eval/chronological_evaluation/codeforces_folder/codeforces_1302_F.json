[
    {
        "name": "Keep talking and nobody explodes -- easy",
        "description": "This is an unusual problem in an unusual contest, here is the announcement:\nhttp://codeforces.com/blog/entry/73543 You have the safe lock which consists\nof 5 decimal digits. If you rotate some digit, it increases by one, except 9\nwhich becomes 0. Initially, the lock contains number \n    x\n. To unlock the\nsafe you must do the following operations in order (and be careful, don't mix\nup if and else statements). If sum of digits on positions 1 and 4 is greater\nthan 10, rotate digit on position 1 by 3 times, else rotate digit on position\n4 by 8 times. If sum of digits on positions 3 and 2 is greater than 8, rotate\ndigit on position 4 by 9 times, else rotate digit on position 5 by 8 times. If\ndigit on position 3 is odd, rotate digit on position 3 by 3 times, else rotate\ndigit on position 3 by 4 times. If digit on position 5 is greater than digit\non position 2, rotate digit on position 4 by 1 times, else rotate digit on\nposition 2 by 7 times. If digit on position 1 is odd, rotate digit on position\n1 by 3 times, else rotate digit on position 3 by 5 times. If digit on position\n4 is odd, rotate digit on position 4 by 7 times, else rotate digit on position\n1 by 9 times. If digit on position 4 is greater than digit on position 1,\nrotate digit on position 4 by 9 times, else rotate digit on position 4 by 2\ntimes. If digit on position 1 is greater than digit on position 3, rotate\ndigit on position 2 by 1 times, else rotate digit on position 3 by 1 times. If\ndigit on position 5 is greater than digit on position 3, rotate digit on\nposition 4 by 5 times, else rotate digit on position 5 by 8 times. If sum of\ndigits on positions 1 and 3 is greater than 8, rotate digit on position 4 by 5\ntimes, else rotate digit on position 2 by 5 times. If digit on position 1 is\ngreater than digit on position 4, rotate digit on position 4 by 3 times, else\nrotate digit on position 2 by 3 times. If sum of digits on positions 3 and 1\nis greater than 9, rotate digit on position 2 by 9 times, else rotate digit on\nposition 2 by 2 times. If sum of digits on positions 4 and 3 is greater than\n10, rotate digit on position 4 by 7 times, else rotate digit on position 5 by\n7 times. If digit on position 3 is greater than digit on position 2, rotate\ndigit on position 3 by 2 times, else rotate digit on position 4 by 6 times. If\ndigit on position 1 is greater than digit on position 3, rotate digit on\nposition 1 by 9 times, else rotate digit on position 2 by 9 times. If digit on\nposition 3 is odd, rotate digit on position 3 by 9 times, else rotate digit on\nposition 1 by 5 times. If sum of digits on positions 3 and 5 is greater than\n9, rotate digit on position 3 by 4 times, else rotate digit on position 3 by 9\ntimes. If digit on position 3 is greater than digit on position 1, rotate\ndigit on position 5 by 1 times, else rotate digit on position 5 by 7 times. If\ndigit on position 1 is greater than digit on position 3, rotate digit on\nposition 2 by 9 times, else rotate digit on position 4 by 6 times. If sum of\ndigits on positions 2 and 3 is greater than 10, rotate digit on position 2 by\n2 times, else rotate digit on position 3 by 6 times. Input Input contains\nsingle number \n    x\n consisting of exactly 5 digits, leading zeroes are\nallowed. Output Output the number after applying all operations. Examples\nInput 00000 Output 61376 Input 12345 Output 07769\n\n",
        "cf_contest_id": 1302,
        "cf_index": "F",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force",
            "expression parsing"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]