[
    {
        "name": "Quests",
        "description": "There are \n    n\n quests. If you complete the \n    i\n-th quest, you will gain\n\n    a_i\n coins. You can only complete at most one quest per day. However,\nonce you complete a quest, you cannot do the same quest again for \n    k\n\ndays. (For example, if \n    k=2\n and you do quest \n    1\n on day \n    1\n, then\nyou cannot do it on day \n    2\n or \n    3\n, but you can do it again on day\n\n    4\n.) You are given two integers \n    c\n and \n    d\n. Find the maximum\nvalue of \n    k\n such that you can gain at least \n    c\n coins over \n    d\n\ndays. If no such \n    k\n exists, output Impossible. If \n    k\n can be\narbitrarily large, output Infinity. Input The input consists of multiple test\ncases. The first line contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains three integers \n    n,c,d\n\n(\n    2 \n    \u2264 n \n    \u2264 2\n    \u00b710^5\n; \n    1 \n    \u2264 c \n    \u2264 10^16\n; \n    1\n    \n    \u2264 d \n    \u2264 2\n    \u00b710^5\n) \u2014 the number of quests, the number of coins\nyou need, and the number of days. The second line of each test case contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n)\n\u2014 the rewards for the quests. The sum of \n    n\n over all test cases does not\nexceed \n    2\n    \u00b710^5\n, and the sum of \n    d\n over all test cases does not\nexceed \n    2\n    \u00b710^5\n. Output For each test case, output one of the\nfollowing. If no such \n    k\n exists, output Impossible. If \n    k\n can be\narbitrarily large, output Infinity. Otherwise, output a single integer \u2014 the\nmaximum value of \n    k\n such that you can gain at least \n    c\n coins over\n\n    d\n days. Please note, the checker is case-sensitive, and you should\noutput strings exactly as they are given. Example Input 6 2 5 4 1 2 2 20 10\n100 10 3 100 3 7 2 6 4 20 3 4 5 6 7 4 100000000000 2022 8217734 927368\n26389746 627896974 2 20 4 5 1 Output 2 Infinity Impossible 1 12 0 Note In the\nfirst test case, one way to earn \n    5\n coins over \n    4\n days with\n\n    k=2\n is as follows: Day 1: do quest 2, and earn \n    2\n coins. Day 2: do\nquest 1, and earn \n    1\n coin. Day 3: do nothing. Day 4: do quest 2, and earn\n\n    2\n coins. In total, we earned \n    2+1+2=5\n coins.In the second test\ncase, we can make over \n    20\n coins on the first day itself by doing the\nfirst quest to earn \n    100\n coins, so the value of \n    k\n can be\narbitrarily large, since we never need to do another quest. In the third test\ncase, no matter what we do, we can't earn \n    100\n coins over \n    3\n days.\n\n",
        "cf_contest_id": 1760,
        "cf_index": "F",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n2 5 4\r\n1 2\r\n2 20 10\r\n100 10\r\n3 100 3\r\n7 2 6\r\n4 20 3\r\n4 5 6 7\r\n4 100000000000 2022\r\n8217734 927368 26389746 627896974\r\n2 20 4\r\n5 1\r\n",
                "2\r\nInfinity\r\nImpossible\r\n1\r\n12\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2 69696969 5\r\n1000000000 1000000000\r\n",
                "Infinity\r\n"
            ],
            [
                "1\r\n5 69696969 23\r\n69696960 2 1 3 2\r\n",
                "21\r\n"
            ]
        ]
    }
]