[
    {
        "name": "Wonderful Coloring - 1",
        "description": "This is a simplified version of the problem B2. Perhaps you should read the\nproblem B2 before you start solving B1. Paul and Mary have a favorite string\n\n    s\n which consists of lowercase letters of the Latin alphabet. They want\nto paint it using pieces of chalk of two colors: red and green. Let's call a\ncoloring of a string wonderful if the following conditions are met: each\nletter of the string is either painted in exactly one color (red or green) or\nisn't painted; each two letters which are painted in the same color are\ndifferent; the number of letters painted in red is equal to the number of\nletters painted in green; the number of painted letters of this coloring is\nmaximum among all colorings of the string which meet the first three\nconditions. E. g. consider a string \n    s\n equal to \"kzaaa\". One of the\nwonderful colorings of the string is shown in the figure. The example of a\nwonderful coloring of the string \"kzaaa\". Paul and Mary want to learn by\nthemselves how to find a wonderful coloring of the string. But they are very\nyoung, so they need a hint. Help them find \n    k\n \u2014 the number of red (or\ngreen, these numbers are equal) letters in a wonderful coloring. Input The\nfirst line contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the\nnumber of test cases. Then \n    t\n test cases follow. Each test case consists\nof one non-empty string \n    s\n which consists of lowercase letters of the\nLatin alphabet. The number of characters in the string doesn't exceed\n\n    50\n. Output For each test case, output a separate line containing one\nnon-negative integer \n    k\n \u2014 the number of letters which will be painted in\nred in a wonderful coloring. Example Input 5 kzaaa codeforces archive y xxxxxx\nOutput 2 5 3 0 1 Note The first test case contains the string from the\nstatement. One of the wonderful colorings is shown in the figure. There's no\nwonderful coloring containing \n    3\n or more red letters because the total\nnumber of painted symbols will exceed the string's length. The string from the\nsecond test case can be painted as follows. Let's paint the first occurrence\nof each of the letters \"c\", \"o\", \"e\" in red and the second ones in green.\nLet's paint the letters \"d\", \"f\" in red and \"r\", \"s\" in green. So every letter\nwill be painted in red or green, hence the answer better than \n    5\n doesn't\nexist. The third test case contains the string of distinct letters, so you can\npaint any set of characters in red, as long as the size of this set doesn't\nexceed half of the size of the string and is the maximum possible. The fourth\ntest case contains a single letter which cannot be painted in red because\nthere will be no letter able to be painted in green. The fifth test case\ncontains a string of identical letters, so there's no way to paint more than\none letter in red.\n\n",
        "cf_contest_id": 1551,
        "cf_index": "B1",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\n",
                "2\r\n5\r\n3\r\n0\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\naa\r\n",
                "1\r\n"
            ],
            [
                "61\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\nkzaaa\r\ncodeforces\r\narchive\r\ny\r\nxxxxxx\r\ny\r\n",
                "2\r\n5\r\n3\r\n0\r\n1\r\n2\r\n5\r\n3\r\n0\r\n1\r\n2\r\n5\r\n3\r\n0\r\n1\r\n2\r\n5\r\n3\r\n0\r\n1\r\n2\r\n5\r\n3\r\n0\r\n1\r\n2\r\n5\r\n3\r\n0\r\n1\r\n2\r\n5\r\n3\r\n0\r\n1\r\n2\r\n5\r\n3\r\n0\r\n1\r\n2\r\n5\r\n3\r\n0\r\n1\r\n2\r\n5\r\n3\r\n0\r\n1\r\n2\r\n5\r\n3\r\n0\r\n1\r\n2\r\n5\r\n3\r\n0\r\n1\r\n0\r\n"
            ],
            [
                "1\r\nabbdsdndsncjksdncjkdsncknsdkcnskc\r\n",
                "7\r\n"
            ],
            [
                "1\r\ndscnjksdcnsjkvndfjkvndfjkvnkdfnv\r\n",
                "8\r\n"
            ]
        ]
    }
]