[
    {
        "name": "Union of Doubly Linked Lists",
        "description": "Doubly linked list is one of the fundamental data structures. A doubly linked\nlist is a sequence of elements, each containing information about the previous\nand the next elements of the list. In this problem all lists have linear\nstructure. I.e. each element except the first has exactly one previous\nelement, each element except the last has exactly one next element. The list\nis not closed in a cycle. In this problem you are given n memory cells forming\none or more doubly linked lists. Each cell contains information about element\nfrom some list. Memory cells are numbered from 1 to n. For each cell i you are\ngiven two values: li \u2014 cell containing previous element for the element in the\ncell i; ri \u2014 cell containing next element for the element in the cell i. If\ncell i contains information about the element which has no previous element\nthen li = 0. Similarly, if cell i contains information about the element which\nhas no next element then ri = 0. Three lists are shown on the picture. For\nexample, for the picture above the values of l and r are the following: l1 =\n4, r1 = 7; l2 = 5, r2 = 0; l3 = 0, r3 = 0; l4 = 6, r4 = 1; l5 = 0, r5 = 2; l6\n= 0, r6 = 4; l7 = 1, r7 = 0. Your task is to unite all given lists in a single\nlist, joining them to each other in any order. In particular, if the input\ndata already contains a single list, then there is no need to perform any\nactions. Print the resulting list in the form of values li, ri. Any other\naction, other than joining the beginning of one list to the end of another,\ncan not be performed. Input The first line contains a single integer n (1 \u2264 n\n\u2264 100) \u2014 the number of memory cells where the doubly linked lists are located.\nEach of the following n lines contains two integers li, ri (0 \u2264 li, ri \u2264 n) \u2014\nthe cells of the previous and the next element of list for cell i. Value li =\n0 if element in cell i has no previous element in its list. Value ri = 0 if\nelement in cell i has no next element in its list. It is guaranteed that the\ninput contains the correct description of a single or more doubly linked\nlists. All lists have linear structure: each element of list except the first\nhas exactly one previous element; each element of list except the last has\nexactly one next element. Each memory cell contains information about one\nelement from some list, each element of each list written in one of n given\ncells. Output Print n lines, the i-th line must contain two integers li and ri\n\u2014 the cells of the previous and the next element of list for cell i after all\nlists from the input are united in a single list. If there are many solutions\nprint any of them. Example Input 7 4 7 5 0 0 0 6 1 0 2 0 4 1 0 Output 4 7 5 6\n0 5 6 1 3 2 2 4 1 0\n\n",
        "cf_contest_id": 847,
        "cf_index": "A",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n4 7\r\n5 0\r\n0 0\r\n6 1\r\n0 2\r\n0 4\r\n1 0\r\n",
                "4 7\r\n5 6\r\n0 5\r\n6 1\r\n3 2\r\n2 4\r\n1 0\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n2 0\r\n0 1\r\n",
                "2 0\r\n0 1\r\n"
            ],
            [
                "1\r\n0 0\r\n",
                "0 0\r\n"
            ],
            [
                "4\r\n0 2\r\n1 0\r\n0 4\r\n3 0\r\n",
                "0 2\r\n1 3\r\n2 4\r\n3 0\r\n"
            ],
            [
                "5\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n",
                "0 2\r\n1 3\r\n2 4\r\n3 5\r\n4 0\r\n"
            ],
            [
                "2\r\n0 0\r\n0 0\r\n",
                "0 2\r\n1 0\r\n"
            ],
            [
                "2\r\n0 2\r\n1 0\r\n",
                "0 2\r\n1 0\r\n"
            ],
            [
                "5\r\n5 3\r\n4 0\r\n1 4\r\n3 2\r\n0 1\r\n",
                "5 3\r\n4 0\r\n1 4\r\n3 2\r\n0 1\r\n"
            ],
            [
                "5\r\n2 0\r\n0 1\r\n0 4\r\n3 5\r\n4 0\r\n",
                "2 3\r\n0 1\r\n1 4\r\n3 5\r\n4 0\r\n"
            ],
            [
                "5\r\n3 4\r\n0 0\r\n0 1\r\n1 0\r\n0 0\r\n",
                "3 4\r\n0 3\r\n2 1\r\n1 5\r\n4 0\r\n"
            ],
            [
                "5\r\n3 0\r\n0 0\r\n0 1\r\n0 0\r\n0 0\r\n",
                "3 4\r\n0 3\r\n2 1\r\n1 5\r\n4 0\r\n"
            ],
            [
                "10\r\n7 5\r\n5 0\r\n4 7\r\n10 3\r\n1 2\r\n0 9\r\n3 1\r\n9 10\r\n6 8\r\n8 4\r\n",
                "7 5\r\n5 0\r\n4 7\r\n10 3\r\n1 2\r\n0 9\r\n3 1\r\n9 10\r\n6 8\r\n8 4\r\n"
            ],
            [
                "10\r\n6 2\r\n1 0\r\n9 4\r\n3 6\r\n10 8\r\n4 1\r\n0 10\r\n5 0\r\n0 3\r\n7 5\r\n",
                "6 2\r\n1 0\r\n9 4\r\n3 6\r\n10 8\r\n4 1\r\n0 10\r\n5 9\r\n8 3\r\n7 5\r\n"
            ],
            [
                "10\r\n0 9\r\n4 0\r\n5 0\r\n7 2\r\n0 3\r\n8 10\r\n0 4\r\n0 6\r\n1 0\r\n6 0\r\n",
                "0 9\r\n4 8\r\n5 7\r\n7 2\r\n9 3\r\n8 10\r\n3 4\r\n2 6\r\n1 5\r\n6 0\r\n"
            ],
            [
                "10\r\n7 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 1\r\n0 0\r\n0 0\r\n0 0\r\n",
                "7 8\r\n0 3\r\n2 4\r\n3 5\r\n4 6\r\n5 7\r\n6 1\r\n1 9\r\n8 10\r\n9 0\r\n"
            ],
            [
                "10\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n",
                "0 2\r\n1 3\r\n2 4\r\n3 5\r\n4 6\r\n5 7\r\n6 8\r\n7 9\r\n8 10\r\n9 0\r\n"
            ]
        ]
    }
]