[
    {
        "name": "Permutation Chain",
        "description": "A permutation of length \n    n\n is a sequence of integers from \n    1\n to\n\n    n\n such that each integer appears in it exactly once. Let the fixedness\nof a permutation \n    p\n be the number of fixed points in it \u2014 the number of\npositions \n    j\n such that \n    p_j = j\n, where \n    p_j\n is the \n    j\n-th\nelement of the permutation \n    p\n. You are asked to build a sequence of\npermutations \n    a_1, a_2, \n    \u2026\n, starting from the identity permutation\n(permutation \n    a_1 = [1, 2, \n    \u2026, n]\n). Let's call it a permutation\nchain. Thus, \n    a_i\n is the \n    i\n-th permutation of length \n    n\n. For\nevery \n    i\n from \n    2\n onwards, the permutation \n    a_i\n should be\nobtained from the permutation \n    a_i-1\n by swapping any two elements in it\n(not necessarily neighboring). The fixedness of the permutation \n    a_i\n\nshould be strictly lower than the fixedness of the permutation \n    a_i-1\n.\nConsider some chains for \n    n = 3\n: \n    a_1 = [1, 2, 3]\n, \n    a_2 = [1, 3,\n    2]\n \u2014 that is a valid chain of length \n    2\n. From \n    a_1\n to \n    a_2\n,\nthe elements on positions \n    2\n and \n    3\n get swapped, the fixedness\ndecrease from \n    3\n to \n    1\n. \n    a_1 = [2, 1, 3]\n, \n    a_2 = [3, 1, 2]\n\n\u2014 that is not a valid chain. The first permutation should always be \n    [1, 2,\n    3]\n for \n    n = 3\n. \n    a_1 = [1, 2, 3]\n, \n    a_2 = [1, 3, 2]\n, \n    a_3 =\n    [1, 2, 3]\n \u2014 that is not a valid chain. From \n    a_2\n to \n    a_3\n, the\nelements on positions \n    2\n and \n    3\n get swapped but the fixedness\nincrease from \n    1\n to \n    3\n. \n    a_1 = [1, 2, 3]\n, \n    a_2 = [3, 2,\n    1]\n, \n    a_3 = [3, 1, 2]\n \u2014 that is a valid chain of length \n    3\n. From\n\n    a_1\n to \n    a_2\n, the elements on positions \n    1\n and \n    3\n get\nswapped, the fixedness decrease from \n    3\n to \n    1\n. From \n    a_2\n to\n\n    a_3\n, the elements on positions \n    2\n and \n    3\n get swapped, the\nfixedness decrease from \n    1\n to \n    0\n. Find the longest permutation\nchain. If there are multiple longest answers, print any of them. Input The\nfirst line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 99\n) \u2014 the\nnumber of testcases. The only line of each testcase contains a single integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 100\n) \u2014 the required length of permutations in\nthe chain. Output For each testcase, first, print the length of a permutation\nchain \n    k\n. Then print \n    k\n permutations \n    a_1, a_2, \n    \u2026, a_k\n.\n\n    a_1\n should be an identity permutation of length \n    n\n (\n    [1, 2,\n    \n    \u2026, n]\n). For each \n    i\n from \n    2\n to \n    k\n, \n    a_i\n should be\nobtained by swapping two elements in \n    a_i-1\n. It should also have a\nstrictly lower fixedness than \n    a_i-1\n. Example Input 2 2 3 Output 2 1 2\n2 1 3 1 2 3 3 2 1 3 1 2\n\n",
        "cf_contest_id": 1716,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n2\r\n3\r\n",
                "2\r\n1 2\r\n2 1\r\n3\r\n1 2 3\r\n2 1 3\r\n2 3 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n5\r\n",
                "5\r\n1 2 3 4 5\r\n2 1 3 4 5\r\n2 3 1 4 5\r\n2 3 4 1 5\r\n2 3 4 5 1\r\n"
            ],
            [
                "3\r\n3\r\n4\r\n5\r\n",
                "3\r\n1 2 3\r\n2 1 3\r\n2 3 1\r\n4\r\n1 2 3 4\r\n2 1 3 4\r\n2 3 1 4\r\n2 3 4 1\r\n5\r\n1 2 3 4 5\r\n2 1 3 4 5\r\n2 3 1 4 5\r\n2 3 4 1 5\r\n2 3 4 5 1\r\n"
            ]
        ]
    }
]