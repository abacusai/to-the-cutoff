[
    {
        "name": "Miss Punyverse",
        "description": "The Oak has \n    n\n nesting places, numbered with integers from \n    1\n to\n\n    n\n. Nesting place \n    i\n is home to \n    b_i\n bees and \n    w_i\n wasps.\nSome nesting places are connected by branches. We call two nesting places\nadjacent if there exists a branch between them. A simple path from nesting\nplace \n    x\n to \n    y\n is given by a sequence \n    s_0, \n    \u2026, s_p\n of\ndistinct nesting places, where \n    p\n is a non-negative integer, \n    s_0 =\n    x\n, \n    s_p = y\n, and \n    s_i-1\n and \n    s_i\n are adjacent for each\n\n    i = 1, \n    \u2026, p\n. The branches of The Oak are set up in such a way\nthat for any two pairs of nesting places \n    x\n and \n    y\n, there exists a\nunique simple path from \n    x\n to \n    y\n. Because of this, biologists and\ncomputer scientists agree that The Oak is in fact, a tree. A village is a\nnonempty set \n    V\n of nesting places such that for any two \n    x\n and\n\n    y\n in \n    V\n, there exists a simple path from \n    x\n to \n    y\n whose\nintermediate nesting places all lie in \n    V\n. A set of villages \n    P\n is called a partition if each of the \n    n\n nesting places is contained\nin exactly one of the villages in \n    P\n. In other words, no two\nvillages in \n    P\n share any common nesting place, and altogether,\nthey contain all \n    n\n nesting places. The Oak holds its annual Miss\nPunyverse beauty pageant. The two contestants this year are Ugly Wasp and\nPretty Bee. The winner of the beauty pageant is determined by voting, which we\nwill now explain. Suppose \n    \ud835\udcab\n is a partition of the nesting\nplaces into \n    m\n villages \n    V_1, \n    \u2026, V_m\n. There is a local\nelection in each village. Each of the insects in this village vote for their\nfavorite contestant. If there are strictly more votes for Ugly Wasp than\nPretty Bee, then Ugly Wasp is said to win in that village. Otherwise, Pretty\nBee wins. Whoever wins in the most number of villages wins. As it always goes\nwith these pageants, bees always vote for the bee (which is Pretty Bee this\nyear) and wasps always vote for the wasp (which is Ugly Wasp this year).\nUnlike their general elections, no one abstains from voting for Miss Punyverse\nas everyone takes it very seriously. Mayor Waspacito, and his assistant\nAlexwasp, wants Ugly Wasp to win. He has the power to choose how to partition\nThe Oak into exactly \n    m\n villages. If he chooses the partition optimally,\ndetermine the maximum number of villages in which Ugly Wasp wins. Input The\nfirst line of input contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    100\n) denoting the number of test cases. The next lines contain descriptions\nof the test cases. The first line of each test case contains two space-\nseparated integers \n    n\n and \n    m\n (\n    1 \n    \u2264 m \n    \u2264 n \n    \u2264 3000\n).\nThe second line contains \n    n\n space-separated integers \n    b_1, b_2,\n    \n    \u2026, b_n\n (\n    0 \n    \u2264 b_i \n    \u2264 10^9\n). The third line contains\n\n    n\n space-separated integers \n    w_1, w_2, \n    \u2026, w_n\n (\n    0 \n    \u2264 w_i\n    \n    \u2264 10^9\n). The next \n    n - 1\n lines describe the pairs of adjacent\nnesting places. In particular, the \n    i\n-th of them contains two space-\nseparated integers \n    x_i\n and \n    y_i\n (\n    1 \n    \u2264 x_i, y_i \n    \u2264 n\n,\n\n    x_i \n    \u2260 y_i\n) denoting the numbers of two adjacent nesting places. It\nis guaranteed that these pairs form a tree. It is guaranteed that the sum of\n\n    n\n in a single file is at most \n    10^5\n. Output For each test case,\noutput a single line containing a single integer denoting the maximum number\nof villages in which Ugly Wasp wins, among all partitions of The Oak into\n\n    m\n villages. Example Input 2 4 3 10 160 70 50 70 111 111 0 1 2 2 3 3 4 2\n1 143 420 214 349 2 1 Output 2 0 Note In the first test case, we need to\npartition the \n    n = 4\n nesting places into \n    m = 3\n villages. We can\nmake Ugly Wasp win in \n    2\n villages via the following partition:\n\n    1, 2\n    \n    , \n    \n    3\n    \n    , \n    \n    4\n. In this partition,\nUgly Wasp wins in village \n    1, 2\n, garnering \n    181\n votes as\nopposed to Pretty Bee's \n    170\n; Ugly Wasp also wins in village\n\n    3\n, garnering \n    111\n votes as opposed to Pretty Bee's\n\n    70\n; Ugly Wasp loses in the village \n    4\n, garnering \n    0\n\nvotes as opposed to Pretty Bee's \n    50\n. Thus, Ugly Wasp wins in \n    2\n\nvillages, and it can be shown that this is the maximum possible number. In the\nsecond test case, we need to partition the \n    n = 2\n nesting places into\n\n    m = 1\n village. There is only one way to do this: \n    1,\n    2\n. In this partition's sole village, Ugly Wasp gets \n    563\n\nvotes, and Pretty Bee also gets \n    563\n votes. Ugly Wasp needs strictly more\nvotes in order to win. Therefore, Ugly Wasp doesn't win in any village.\n\n",
        "cf_contest_id": 1280,
        "cf_index": "D",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n4 3\r\n10 160 70 50\r\n70 111 111 0\r\n1 2\r\n2 3\r\n3 4\r\n2 1\r\n143 420\r\n214 349\r\n2 1\r\n",
                "2\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "9\r\n5 2\r\n3 0 1 0 3\r\n0 2 0 2 0\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n3 2\r\n0 1 1\r\n1 0 0\r\n1 2\r\n3 1\r\n2 2\r\n1 1\r\n0 0\r\n1 2\r\n2 2\r\n0 0\r\n1 1\r\n1 2\r\n2 1\r\n1 1\r\n0 0\r\n1 2\r\n2 1\r\n0 0\r\n1 1\r\n1 2\r\n2 1\r\n3 0\r\n0 4\r\n1 2\r\n3 2\r\n0 3 0\r\n1 0 4\r\n1 2\r\n2 3\r\n6 3\r\n0 3 0 0 3 0\r\n2 0 2 2 0 2\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n",
                "0\r\n0\r\n0\r\n2\r\n0\r\n1\r\n1\r\n2\r\n2\r\n"
            ]
        ]
    }
]