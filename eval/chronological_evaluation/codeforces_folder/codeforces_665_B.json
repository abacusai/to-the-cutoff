[
    {
        "name": "Shopping",
        "description": "Ayush is a cashier at the shopping center. Recently his department has started\na \u201dclick and collect\" service which allows users to shop online. The store\ncontains k items. n customers have already used the above service. Each user\npaid for m items. Let aij denote the j-th item in the i-th person's order. Due\nto the space limitations all the items are arranged in one single row. When\nAyush receives the i-th order he will find one by one all the items aij (1 \u2264 j\n\u2264 m) in the row. Let pos(x) denote the position of the item x in the row at\nthe moment of its collection. Then Ayush takes time equal to pos(ai1) +\npos(ai2) + ... + pos(aim) for the i-th customer. When Ayush accesses the x-th\nelement he keeps a new stock in the front of the row and takes away the x-th\nelement. Thus the values are updating. Your task is to calculate the total\ntime it takes for Ayush to process all the orders. You can assume that the\nmarket has endless stock. Input The first line contains three integers n, m\nand k (1 \u2264 n, k \u2264 100, 1 \u2264 m \u2264 k) \u2014 the number of users, the number of items\neach user wants to buy and the total number of items at the market. The next\nline contains k distinct integers pl (1 \u2264 pl \u2264 k) denoting the initial\npositions of the items in the store. The items are numbered with integers from\n1 to k. Each of the next n lines contains m distinct integers aij (1 \u2264 aij \u2264\nk) \u2014 the order of the i-th person. Output Print the only integer t \u2014 the total\ntime needed for Ayush to process all the orders. Example Input 2 2 5 3 4 1 2 5\n1 5 3 1 Output 14 Note Customer 1 wants the items 1 and 5. pos(1) = 3, so the\nnew positions are: [1, 3, 4, 2, 5]. pos(5) = 5, so the new positions are: [5,\n1, 3, 4, 2]. Time taken for the first customer is 3 + 5 = 8. Customer 2 wants\nthe items 3 and 1. pos(3) = 3, so the new positions are: [3, 5, 1, 4, 2].\npos(1) = 3, so the new positions are: [1, 3, 5, 4, 2]. Time taken for the\nsecond customer is 3 + 3 = 6. Total time is 8 + 6 = 14. Formally pos(x) is the\nindex of x in the current row.\n\n",
        "cf_contest_id": 665,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "brute force"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2 5\r\n3 4 1 2 5\r\n1 5\r\n3 1\r\n",
                "14\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 4 4\r\n1 2 3 4\r\n3 4 2 1\r\n4 3 2 1\r\n4 1 2 3\r\n4 1 2 3\r\n",
                "59\r\n"
            ],
            [
                "1 1 1\r\n1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "10 1 100\r\n1 55 67 75 40 86 24 84 82 26 81 23 70 79 51 54 21 78 31 98 68 93 66 88 99 65 20 52 35 85 16 12 94 100 59 56 18 33 47 46 71 8 38 57 2 92 3 95 6 4 87 22 48 80 15 29 11 45 72 76 44 60 91 90 39 74 41 36 13 27 53 83 32 5 30 63 89 64 49 17 9 97 69 14 50 77 37 96 10 42 28 34 61 19 73 7 62 43 58 25\r\n33\r\n69\r\n51\r\n7\r\n68\r\n70\r\n1\r\n35\r\n24\r\n7\r\n",
                "335\r\n"
            ],
            [
                "100 1 1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n",
                "100\r\n"
            ],
            [
                "3 2 3\r\n3 1 2\r\n1 2\r\n2 1\r\n2 3\r\n",
                "13\r\n"
            ],
            [
                "10 10 10\r\n3 4 1 2 8 9 5 10 6 7\r\n9 10 7 8 6 1 2 3 4 5\r\n2 5 3 6 1 4 9 7 8 10\r\n2 9 1 8 4 7 5 10 6 3\r\n10 9 7 1 3 6 2 8 5 4\r\n2 5 1 3 7 10 4 9 8 6\r\n6 1 8 7 9 2 3 5 4 10\r\n1 3 2 8 6 9 4 10 5 7\r\n5 2 4 8 6 1 10 9 3 7\r\n5 1 7 10 4 6 2 8 9 3\r\n2 1 3 9 7 10 6 4 8 5\r\n",
                "771\r\n"
            ]
        ]
    }
]