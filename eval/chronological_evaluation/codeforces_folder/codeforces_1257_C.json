[
    {
        "name": "Dominated Subarray",
        "description": "Let's call an array \n    t\n dominated by value \n    v\n in the next situation.\nAt first, array \n    t\n should have at least \n    2\n elements. Now, let's\ncalculate number of occurrences of each number \n    num\n in \n    t\n and define\nit as \n    occ(num)\n. Then \n    t\n is dominated (by \n    v\n) if (and only if)\n\n    occ(v) > occ(v')\n for any other number \n    v'\n. For example, arrays\n\n    [1, 2, 3, 4, 5, 2]\n, \n    [11, 11]\n and \n    [3, 2, 3, 2, 3]\n are\ndominated (by \n    2\n, \n    11\n and \n    3\n respectevitely) but arrays\n\n    [3]\n, \n    [1, 2]\n and \n    [3, 3, 2, 2, 1]\n are not. Small remark: since\nany array can be dominated only by one number, we can not specify this number\nand just say that array is either dominated or not. You are given array\n\n    a_1, a_2, \n    \u2026, a_n\n. Calculate its shortest dominated subarray or say\nthat there are no such subarrays. The subarray of \n    a\n is a contiguous part\nof the array \n    a\n, i. e. the array \n    a_i, a_i + 1, \n    \u2026, a_j\n for\nsome \n    1 \n    \u2264 i \n    \u2264 j \n    \u2264 n\n. Input The first line contains single\ninteger \n    T\n (\n    1 \n    \u2264 T \n    \u2264 1000\n) \u2014 the number of test cases. Each\ntest case consists of two lines. The first line contains single integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of the array\n\n    a\n. The second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014 the corresponding values of the array\n\n    a\n. It's guaranteed that the total length of all arrays in one test\ndoesn't exceed \n    2 \n    \u00b7 10^5\n. Output Print \n    T\n integers \u2014 one per\ntest case. For each test case print the only integer \u2014 the length of the\nshortest dominated subarray, or \n    -1\n if there are no such subarrays.\nExample Input 4 1 1 6 1 2 3 4 5 1 9 4 1 2 4 5 4 3 2 1 4 3 3 3 3 Output -1 6 3\n2 Note In the first test case, there are no subarrays of length at least\n\n    2\n, so the answer is \n    -1\n. In the second test case, the whole array\nis dominated (by \n    1\n) and it's the only dominated subarray. In the third\ntest case, the subarray \n    a_4, a_5, a_6\n is the shortest dominated\nsubarray. In the fourth test case, all subarrays of length more than one are\ndominated.\n\n",
        "cf_contest_id": 1257,
        "cf_index": "C",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "sortings",
            "strings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1\r\n1\r\n6\r\n1 2 3 4 5 1\r\n9\r\n4 1 2 4 5 4 3 2 1\r\n4\r\n3 3 3 3\r\n",
                "-1\r\n6\r\n3\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2\r\n2 2\r\n",
                "2\r\n"
            ],
            [
                "1\r\n11\r\n1 1 1 1 1 1 1 1 1 1 1\r\n",
                "2\r\n"
            ],
            [
                "1\r\n12\r\n1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "2\r\n"
            ]
        ]
    }
]