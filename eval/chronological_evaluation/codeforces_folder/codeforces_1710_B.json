[
    {
        "name": "Rain",
        "description": "You are the owner of a harvesting field which can be modeled as an infinite\nline, whose positions are identified by integers. It will rain for the next\n\n    n\n days. On the \n    i\n-th day, the rain will be centered at position\n\n    x_i\n and it will have intensity \n    p_i\n. Due to these rains, some\nrainfall will accumulate; let \n    a_j\n be the amount of rainfall accumulated\nat integer position \n    j\n. Initially \n    a_j\n is \n    0\n, and it will\nincrease by \n    max(0,p_i-|x_i-j|)\n after the \n    i\n-th day's rain. A\nflood will hit your field if, at any moment, there is a position \n    j\n with\naccumulated rainfall \n    a_j>m\n. You can use a magical spell to erase exactly\none day's rain, i.e., setting \n    p_i=0\n. For each \n    i\n from \n    1\n to\n\n    n\n, check whether in case of erasing the \n    i\n-th day's rain there is\nno flood. Input Each test contains multiple test cases. The first line\ncontains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n). The\ndescription of the test cases follows. The first line of each test case\ncontains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n, \n    1 \n    \u2264 m \n    \u2264 10^9\n) \u2014 the number of rainy days and the\nmaximal accumulated rainfall with no flood occurring. Then \n    n\n lines\nfollow. The \n    i\n-th of these lines contains two integers \n    x_i\n and\n\n    p_i\n (\n    1 \n    \u2264 x_i,p_i \n    \u2264 10^9\n) \u2014 the position and intensity of\nthe \n    i\n-th day's rain. The sum of \n    n\n over all test cases does not\nexceed \n    2 \n    \u00b7 10^5\n. Output For each test case, output a binary string\n\n    s\n length of \n    n\n. The \n    i\n-th character of \n    s\n is 1 if after\nerasing the \n    i\n-th day's rain there is no flood, while it is 0, if after\nerasing the \n    i\n-th day's rain the flood still happens. Example Input 4 3 6\n1 5 5 5 3 4 2 3 1 3 5 2 2 5 1 6 10 6 6 12 4 5 1 6 12 5 5 5 9 7 8 3 Output 001\n11 00 100110 Note In the first test case, if we do not use the spell, the\naccumulated rainfall distribution will be like this: If we erase the third\nday's rain, the flood is avoided and the accumulated rainfall distribution\nlooks like this: In the second test case, since initially the flood will not\nhappen, we can erase any day's rain. In the third test case, there is no way\nto avoid the flood.\n\n",
        "cf_contest_id": 1710,
        "cf_index": "B",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "data structures",
            "geometry",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3 6\r\n1 5\r\n5 5\r\n3 4\r\n2 3\r\n1 3\r\n5 2\r\n2 5\r\n1 6\r\n10 6\r\n6 12\r\n4 5\r\n1 6\r\n12 5\r\n5 5\r\n9 7\r\n8 3\r\n",
                "001\r\n11\r\n00\r\n100110\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 1\r\n876939942 144112\r\n",
                "1\r\n"
            ]
        ]
    }
]