[
    {
        "name": "Chloe and pleasant prizes",
        "description": "Generous sponsors of the olympiad in which Chloe and Vladik took part allowed\nall the participants to choose a prize for them on their own. Christmas is\ncoming, so sponsors decided to decorate the Christmas tree with their prizes.\nThey took n prizes for the contestants and wrote on each of them a unique id\n(integer from 1 to n). A gift i is characterized by integer ai \u2014 pleasantness\nof the gift. The pleasantness of the gift can be positive, negative or zero.\nSponsors placed the gift 1 on the top of the tree. All the other gifts hung on\na rope tied to some other gift so that each gift hung on the first gift,\npossibly with a sequence of ropes and another gifts. Formally, the gifts\nformed a rooted tree with n vertices. The prize-giving procedure goes in the\nfollowing way: the participants come to the tree one after another, choose any\nof the remaining gifts and cut the rope this prize hang on. Note that all the\nropes which were used to hang other prizes on the chosen one are not cut. So\nthe contestant gets the chosen gift as well as the all the gifts that hang on\nit, possibly with a sequence of ropes and another gifts. Our friends, Chloe\nand Vladik, shared the first place on the olympiad and they will choose prizes\nat the same time! To keep themselves from fighting, they decided to choose two\ndifferent gifts so that the sets of the gifts that hang on them with a\nsequence of ropes and another gifts don't intersect. In other words, there\nshouldn't be any gift that hang both on the gift chosen by Chloe and on the\ngift chosen by Vladik. From all of the possible variants they will choose such\npair of prizes that the sum of pleasantness of all the gifts that they will\ntake after cutting the ropes is as large as possible. Print the maximum sum of\npleasantness that Vladik and Chloe can get. If it is impossible for them to\nchoose the gifts without fighting, print Impossible. Input The first line\ncontains a single integer n (1 \u2264 n \u2264 2\u00b710^5) \u2014 the number of gifts. The next\nline contains n integers a1, a2, ..., an ( - 10^9 \u2264 ai \u2264 10^9) \u2014 the\npleasantness of the gifts. The next (n - 1) lines contain two numbers each.\nThe i-th of these lines contains integers ui and vi (1 \u2264 ui, vi \u2264 n, ui \u2260 vi)\n\u2014 the description of the tree's edges. It means that gifts with numbers ui and\nvi are connected to each other with a rope. The gifts' ids in the description\nof the ropes can be given in arbirtary order: vi hangs on ui or ui hangs on\nvi. It is guaranteed that all the gifts hang on the first gift, possibly with\na sequence of ropes and another gifts. Output If it is possible for Chloe and\nVladik to choose prizes without fighting, print single integer \u2014 the maximum\npossible sum of pleasantness they can get together. Otherwise print\nImpossible. Examples Input 8 0 5 -1 4 3 2 6 5 1 2 2 4 2 5 1 3 3 6 6 7 6 8\nOutput 25 Input 4 1 -5 1 1 1 2 1 4 2 3 Output 2 Input 1 -1 Output Impossible\n\n",
        "cf_contest_id": 743,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8\r\n0 5 -1 4 3 2 6 5\r\n1 2\r\n2 4\r\n2 5\r\n1 3\r\n3 6\r\n6 7\r\n6 8\r\n",
                "25\r\n"
            ],
            [
                "4\r\n1 -5 1 1\r\n1 2\r\n1 4\r\n2 3\r\n",
                "2\r\n"
            ],
            [
                "1\r\n-1\r\n",
                "Impossible\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n3 2 -4 2 0 3 3 3 3 4\r\n10 8\r\n4 2\r\n4 9\r\n3 5\r\n5 2\r\n7 4\r\n2 6\r\n1 8\r\n10 9\r\n",
                "6\r\n"
            ],
            [
                "10\r\n-1 2 -2 -3 -1 -1 0 -4 -5 -4\r\n4 6\r\n6 9\r\n1 2\r\n6 2\r\n7 8\r\n7 9\r\n5 10\r\n6 3\r\n10 1\r\n",
                "-3\r\n"
            ],
            [
                "10\r\n4 -4 2 5 -1 3 -1 1 4 5\r\n1 8\r\n7 1\r\n4 1\r\n9 6\r\n1 2\r\n5 10\r\n10 1\r\n9 3\r\n1 9\r\n",
                "14\r\n"
            ],
            [
                "10\r\n29 -2 39 1 98 98 82 56 5 -2\r\n3 1\r\n7 9\r\n8 9\r\n7 3\r\n4 2\r\n5 10\r\n6 8\r\n10 6\r\n5 4\r\n",
                "Impossible\r\n"
            ],
            [
                "10\r\n-3 0 1 -3 2 1 2 5 3 1\r\n6 2\r\n10 3\r\n10 5\r\n2 7\r\n3 4\r\n8 2\r\n8 10\r\n4 9\r\n1 9\r\n",
                "10\r\n"
            ],
            [
                "10\r\n-5 0 1 -2 2 1 2 1 -1 -3\r\n10 4\r\n10 5\r\n4 1\r\n3 5\r\n2 8\r\n6 7\r\n9 7\r\n8 7\r\n6 3\r\n",
                "0\r\n"
            ],
            [
                "10\r\n2 -4 5 4 -1 -5 -1 -5 3 -1\r\n8 6\r\n8 7\r\n10 2\r\n6 3\r\n5 2\r\n3 9\r\n10 1\r\n5 4\r\n9 4\r\n",
                "Impossible\r\n"
            ],
            [
                "10\r\n-1 2 -5 -5 3 1 -4 0 3 -5\r\n2 10\r\n2 6\r\n8 4\r\n9 2\r\n10 7\r\n1 7\r\n9 5\r\n8 3\r\n9 4\r\n",
                "4\r\n"
            ],
            [
                "10\r\n1 -4 -4 0 1 -3 1 -2 -4 2\r\n7 1\r\n7 6\r\n5 6\r\n4 2\r\n2 6\r\n3 9\r\n5 9\r\n10 6\r\n8 5\r\n",
                "2\r\n"
            ],
            [
                "10\r\n-4 -1 -5 -1 -3 -1 -2 -2 -5 -3\r\n7 9\r\n3 6\r\n1 4\r\n7 2\r\n3 10\r\n8 9\r\n4 10\r\n3 5\r\n6 8\r\n",
                "-4\r\n"
            ],
            [
                "10\r\n-21 -17 -16 -45 -93 -77 -73 -12 -81 -33\r\n9 5\r\n8 6\r\n1 10\r\n9 4\r\n3 2\r\n10 4\r\n3 8\r\n7 2\r\n5 6\r\n",
                "Impossible\r\n"
            ],
            [
                "10\r\n-5 -2 -4 -1 -4 -5 -1 -4 -1 -3\r\n8 6\r\n7 2\r\n1 2\r\n10 4\r\n9 3\r\n6 10\r\n7 9\r\n5 4\r\n5 3\r\n",
                "Impossible\r\n"
            ],
            [
                "10\r\n-1000000000 -1000000000 -1000000000 -1000000000 -1000000000 -1000000000 -1000000000 -1000000000 -1000000000 -1000000000\r\n7 8\r\n5 10\r\n8 6\r\n1 5\r\n7 9\r\n3 9\r\n2 10\r\n2 6\r\n4 3\r\n",
                "Impossible\r\n"
            ],
            [
                "10\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n7 8\r\n8 3\r\n3 10\r\n2 10\r\n2 4\r\n9 6\r\n7 5\r\n6 5\r\n9 1\r\n",
                "Impossible\r\n"
            ],
            [
                "3\r\n1 -1000000000 -1000000000\r\n1 2\r\n1 3\r\n",
                "-2000000000\r\n"
            ]
        ]
    }
]