[
    {
        "name": "I love AAAB",
        "description": "Let's call a string good if its length is at least \n    2\n and all of its\ncharacters are \n    \n except for the last character which is\n\n    \n. The good strings are\n\n    ,\n    ,\n    ,\n    \u2026\n. Note that\n\n    \n is not a good string. You are given an initially empty\nstring \n    s_1\n. You can perform the following operation any number of times:\nChoose any position of \n    s_1\n and insert some good string in that position.\nGiven a string \n    s_2\n, can we turn \n    s_1\n into \n    s_2\n after some\nnumber of operations? Input Each test contains multiple test cases. The first\nline contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the\nnumber of test cases. The description of the test cases follows. The first\nline of each test case contains a single string \n    s_2\n (\n    1 \n    \u2264 |s_2|\n    \n    \u2264 2 \n    \u00b7 10^5\n). It is guaranteed that \n    s_2\n consists of only\nthe characters \n    \n and \n    \n. It is guaranteed\nthat the sum of \n    |s_2|\n over all test cases does not exceed \n    2 \n    \u00b7\n    10^5\n. Output For each test case, print \"YES\" (without quotes) if we can\nturn \n    s_1\n into \n    s_2\n after some number of operations, and \"NO\"\n(without quotes) otherwise. You can output \"YES\" and \"NO\" in any case (for\nexample, strings \"yEs\", \"yes\" and \"Yes\" will be recognized as a positive\nresponse). Example Input 4 AABAB ABB AAAAAAAAB A Output YES NO YES NO Note In\nthe first test case, we transform \n    s_1\n as such: \n    \u2205\n    \u2192\n    \n    \n    \u2192\n. In the third test\ncase, we transform \n    s_1\n as such: \n    \u2205\n    \u2192\n. In the second and fourth test case, it\ncan be shown that it is impossible to turn \n    s_1\n into \n    s_2\n.\n\n",
        "cf_contest_id": 1672,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\nAABAB\r\nABB\r\nAAAAAAAAB\r\nA\r\n",
                "YES\r\nNO\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": []
    }
]