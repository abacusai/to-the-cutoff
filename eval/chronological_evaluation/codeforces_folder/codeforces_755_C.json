[
    {
        "name": "PolandBall and Forest",
        "description": "PolandBall lives in a forest with his family. There are some trees in the\nforest. Trees are undirected acyclic graphs with k vertices and k - 1 edges,\nwhere k is some integer. Note that one vertex is a valid tree. There is\nexactly one relative living in each vertex of each tree, they have unique ids\nfrom 1 to n. For each Ball i we know the id of its most distant relative\nliving on the same tree. If there are several such vertices, we only know the\nvalue of the one with smallest id among those. How many trees are there in the\nforest? Input The first line contains single integer n (1 \u2264 n \u2264 10^4) \u2014 the\nnumber of Balls living in the forest. The second line contains a sequence p1,\np2, ..., pn of length n, where (1 \u2264 pi \u2264 n) holds and pi denotes the most\ndistant from Ball i relative living on the same tree. If there are several\nmost distant relatives living on the same tree, pi is the id of one with the\nsmallest id. It's guaranteed that the sequence p corresponds to some valid\nforest. Hacking: To hack someone, you should provide a correct forest as a\ntest. The sequence p will be calculated according to the forest and given to\nthe solution you try to hack as input. Use the following format: In the first\nline, output the integer n (1 \u2264 n \u2264 10^4) \u2014 the number of Balls and the\ninteger m (0 \u2264 m < n) \u2014 the total number of edges in the forest. Then m lines\nshould follow. The i-th of them should contain two integers ai and bi and\nrepresent an edge between vertices in which relatives ai and bi live. For\nexample, the first sample is written as follows: 5 3 1 2 3 4 4 5 Output You\nshould output the number of trees in the forest where PolandBall lives.\nInteraction From the technical side, this problem is interactive. However, it\nshould not affect you (except hacking) since there is no interaction. Examples\nInput 5 2 1 5 3 3 Output 2 Input 1 1 Output 1 Note In the first sample\ntestcase, possible forest is: 1-2 3-4-5. There are 2 trees overall. In the\nsecond sample testcase, the only possible graph is one vertex and no edges.\nTherefore, there is only one tree.\n\n",
        "cf_contest_id": 755,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "interactive",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 3\r\n1 2\r\n3 4\r\n4 5\r\n",
                "2\r\n"
            ],
            [
                "1 0\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 1\r\n4 5\r\n",
                "4\r\n"
            ],
            [
                "10 3\r\n2 8\r\n5 9\r\n6 10\r\n",
                "7\r\n"
            ],
            [
                "18 2\r\n9 17\r\n1 18\r\n",
                "16\r\n"
            ],
            [
                "1 0\r\n",
                "1\r\n"
            ],
            [
                "2 1\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "2 0\r\n",
                "2\r\n"
            ],
            [
                "3 1\r\n2 3\r\n",
                "2\r\n"
            ],
            [
                "3 2\r\n1 2\r\n2 3\r\n",
                "1\r\n"
            ],
            [
                "3 0\r\n",
                "3\r\n"
            ],
            [
                "10000 1\r\n1725 10000\r\n",
                "9999\r\n"
            ],
            [
                "5 4\r\n1 3\r\n1 4\r\n4 2\r\n5 2\r\n",
                "1\r\n"
            ],
            [
                "4 3\r\n3 1\r\n1 2\r\n2 4\r\n",
                "1\r\n"
            ],
            [
                "5 4\r\n3 2\r\n2 5\r\n5 1\r\n1 4\r\n",
                "1\r\n"
            ],
            [
                "5 4\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n",
                "1\r\n"
            ],
            [
                "6 5\r\n1 4\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n",
                "1\r\n"
            ]
        ]
    }
]