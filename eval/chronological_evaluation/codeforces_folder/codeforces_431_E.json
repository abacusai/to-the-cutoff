[
    {
        "name": "Chemistry Experiment",
        "description": "One day two students, Grisha and Diana, found themselves in the university\nchemistry lab. In the lab the students found n test tubes with mercury\nnumbered from 1 to n and decided to conduct an experiment. The experiment\nconsists of q steps. On each step, one of the following actions occurs: Diana\npours all the contents from tube number pi and then pours there exactly xi\nliters of mercury. Let's consider all the ways to add vi liters of water into\nthe tubes; for each way let's count the volume of liquid (water and mercury)\nin the tube with water with maximum amount of liquid; finally let's find the\nminimum among counted maximums. That is the number the students want to count.\nAt that, the students don't actually pour the mercury. They perform\ncalculations without changing the contents of the tubes. Unfortunately, the\ncalculations proved to be too complex and the students asked you to help them.\nHelp them conduct the described experiment. Input The first line contains two\nintegers n and q (1 \u2264 n, q \u2264 10^5) \u2014 the number of tubes ans the number of\nexperiment steps. The next line contains n space-separated integers: h1, h2,\n..., hn (0 \u2264 hi \u2264 10^9), where hi is the volume of mercury in the \u0456-th tube at\nthe beginning of the experiment. The next q lines contain the game actions in\nthe following format: A line of form \"1 pi xi\" means an action of the first\ntype (1 \u2264 pi \u2264 n; 0 \u2264 xi \u2264 10^9). A line of form \"2 vi\" means an action of the\nsecond type (1 \u2264 vi \u2264 10^15). It is guaranteed that there is at least one\naction of the second type. It is guaranteed that all numbers that describe the\nexperiment are integers. Output For each action of the second type print the\ncalculated value. The answer will be considered correct if its relative or\nabsolute error doesn't exceed 10^-4. Examples Input 3 3 1 2 0 2 2 1 2 1 2 3\nOutput 1.50000 1.66667 Input 4 5 1 3 0 1 2 3 2 1 1 3 2 2 3 2 4 Output 1.66667\n1.00000 2.33333 2.66667\n\n",
        "cf_contest_id": 431,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "ternary search"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n1 2 0\r\n2 2\r\n1 2 1\r\n2 3\r\n",
                "1.50000000\r\n1.66666667\r\n"
            ],
            [
                "4 5\r\n1 3 0 1\r\n2 3\r\n2 1\r\n1 3 2\r\n2 3\r\n2 4\r\n",
                "1.66666667\r\n1.00000000\r\n2.33333333\r\n2.66666667\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 5\r\n8 52 92 87 81\r\n1 3 30\r\n1 4 62\r\n1 2 60\r\n2 1251\r\n2 1087\r\n",
                "298.40000000\r\n265.60000000\r\n"
            ],
            [
                "1 1\r\n0\r\n2 1\r\n",
                "1.00000000\r\n"
            ],
            [
                "5 8\r\n79 97 74 87 87\r\n2 2588\r\n1 2 80\r\n2 79\r\n1 1 44\r\n1 3 72\r\n1 3 61\r\n2 2814\r\n1 4 39\r\n",
                "602.40000000\r\n97.20000000\r\n634.60000000\r\n"
            ],
            [
                "5 10\r\n51 81 31 37 65\r\n1 3 39\r\n2 3579\r\n1 3 42\r\n1 3 85\r\n2 3491\r\n2 4683\r\n1 5 10\r\n2 3945\r\n1 5 16\r\n2 2322\r\n",
                "770.40000000\r\n762.00000000\r\n1000.40000000\r\n841.80000000\r\n518.40000000\r\n"
            ],
            [
                "10 5\r\n47 90 84 21 59 25 58 47 57 76\r\n1 6 25\r\n2 3517\r\n2 2432\r\n2 2325\r\n2 2647\r\n",
                "408.10000000\r\n299.60000000\r\n288.90000000\r\n321.10000000\r\n"
            ],
            [
                "1 1\r\n0\r\n2 10\r\n",
                "10.00000000\r\n"
            ],
            [
                "1 1\r\n123456543\r\n2 123456431\r\n",
                "246912974.00000000\r\n"
            ],
            [
                "1 1\r\n100000000\r\n2 1000000000\r\n",
                "1100000000.00000000\r\n"
            ],
            [
                "1 1\r\n0\r\n2 1\r\n",
                "1.00000000\r\n"
            ],
            [
                "1 1\r\n10\r\n2 10\r\n",
                "20.00000000\r\n"
            ]
        ]
    }
]