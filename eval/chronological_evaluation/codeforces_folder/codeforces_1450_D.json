[
    {
        "name": "Rating Compression",
        "description": "On the competitive programming platform CodeCook, every person has a rating\ngraph described by an array of integers \n    a\n of length \n    n\n. You are now\nupdating the infrastructure, so you've created a program to compress these\ngraphs. The program works as follows. Given an integer parameter \n    k\n, the\nprogram takes the minimum of each contiguous subarray of length \n    k\n in\n\n    a\n. More formally, for an array \n    a\n of length \n    n\n and an integer\n\n    k\n, define the \n    k\n-compression array of \n    a\n as an array \n    b\n\nof length \n    n-k+1\n, such that \n    \n\n    b_j =\n    min_j\n    \u2264 i\n    \u2264\n    j+k-1a_i\n\n    \n For example, the \n    3\n-compression array of \n    [1, 3, 4, 5,\n    2]\n is \n    [\n    min\n    \n    1, 3, 4\n    \n    , \n    min\n    \n    3, 4, 5\n    \n    , \n    min\n    \n    4,\n    5, 2\n    \n    ]=[1, 3, 2].\n A permutation of length \n    m\n is an array\nconsisting of \n    m\n distinct integers from \n    1\n to \n    m\n in arbitrary\norder. For example, \n    [2,3,1,5,4]\n is a permutation, but \n    [1,2,2]\n is\nnot a permutation (\n    2\n appears twice in the array) and \n    [1,3,4]\n is\nalso not a permutation (\n    m=3\n but there is \n    4\n in the array). A\n\n    k\n-compression array will make CodeCook users happy if it will be a\npermutation. Given an array \n    a\n, determine for all \n    1\n    \u2264 k\n    \u2264 n\n\nif CodeCook users will be happy after a \n    k\n-compression of this array or\nnot. Input The first line contains a single integer \n    t\n (\n    1\n    \u2264\n    t\n    \u2264 10^4\n) \u2014 the number of test cases. The first line of the description\nof each test case contains a single integer \n    n\n (\n    1\n    \u2264 n\n    \u2264\n    3\n    \u00b7 10^5\n) \u2014 the length of the array. The second line of the\ndescription of each test case contains \n    n\n integers \n    a_1,\n    \u2026,a_n\n\n(\n    1\n    \u2264 a_i\n    \u2264 n\n) \u2014 the elements of the array. It is guaranteed,\nthat the sum of \n    n\n for all test cases does not exceed \n    3\n    \u00b7\n    10^5\n. Output For each test case, print a binary string of length \n    n\n.\nThe \n    k\n-th character of the string should be \n    1\n if CodeCook users\nwill be happy after a \n    k\n-compression of the array \n    a\n, and \n    0\n\notherwise. Example Input 5 5 1 5 3 4 2 4 1 3 2 1 5 1 3 3 3 2 10 1 2 3 4 5 6 7\n8 9 10 3 3 3 2 Output 10111 0001 00111 1111111111 000 Note In the first test\ncase, \n    a=[1, 5, 3, 4, 2]\n. The \n    1\n-compression of \n    a\n is \n    [1, 5,\n    3, 4, 2]\n and it is a permutation. The \n    2\n-compression of \n    a\n is\n\n    [1, 3, 3, 2]\n and it is not a permutation, since \n    3\n appears twice.\nThe \n    3\n-compression of \n    a\n is \n    [1, 3, 2]\n and it is a permutation.\nThe \n    4\n-compression of \n    a\n is \n    [1, 2]\n and it is a permutation.\nThe \n    5\n-compression of \n    a\n is \n    [1]\n and it is a permutation.\n\n",
        "cf_contest_id": 1450,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "greedy",
            "implementation",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n5\r\n1 5 3 4 2\r\n4\r\n1 3 2 1\r\n5\r\n1 3 3 3 2\r\n10\r\n1 2 3 4 5 6 7 8 9 10\r\n3\r\n3 3 2\r\n",
                "10111\r\n0001\r\n00111\r\n1111111111\r\n000\r\n"
            ]
        ],
        "private_cases": []
    }
]