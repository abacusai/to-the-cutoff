[
    {
        "name": "Matrix Rotation",
        "description": "You have a matrix \n    2 \n    \u00d7 2\n filled with distinct integers. You want\nyour matrix to become beautiful. The matrix is beautiful if the following two\nconditions are satisfied: in each row, the first element is smaller than the\nsecond element; in each column, the first element is smaller than the second\nelement. You can perform the following operation on the matrix any number of\ntimes: rotate it clockwise by \n    90\n degrees, so the top left element shifts\nto the top right cell, the top right element shifts to the bottom right cell,\nand so on: Determine if it is possible to make the matrix beautiful by\napplying zero or more operations. Input The first line contains one integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. Each test\ncase consists of two lines. Each of those lines contains two integers \u2014 the\nelements of the corresponding row of the matrix. In each matrix, all four\nelements are distinct integers from \n    1\n to \n    100\n. Output For each test\ncase, print YES if the matrix can become beautiful, or NO otherwise. You may\nprint each letter in any case (YES, yes, Yes will all be recognized as\npositive answer, NO, no and nO will all be recognized as negative answer).\nExample Input 6 1 3 5 7 8 10 3 4 8 10 4 3 6 1 9 2 7 5 4 2 1 2 4 3 Output YES\nYES NO YES YES NO\n\n",
        "cf_contest_id": 1772,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "6\r\n1 3\r\n5 7\r\n8 10\r\n3 4\r\n8 10\r\n4 3\r\n6 1\r\n9 2\r\n7 5\r\n4 2\r\n1 2\r\n4 3\r\n",
                "YES\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2 3\r\n4 5\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n3 5\r\n91 1\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n1 2\r\n3 4\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n13 54\r\n91 10\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n14 54\r\n91 11\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n91 51\r\n11 69\r\n",
                "NO\r\n"
            ]
        ]
    }
]