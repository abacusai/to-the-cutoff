[
    {
        "name": "Karen and Supermarket",
        "description": "On the way home, Karen decided to stop by the supermarket to buy some\ngroceries. She needs to buy a lot of goods, but since she is a student her\nbudget is still quite limited. In fact, she can only spend up to b dollars.\nThe supermarket sells n goods. The i-th good can be bought for ci dollars. Of\ncourse, each good can only be bought once. Lately, the supermarket has been\ntrying to increase its business. Karen, being a loyal customer, was given n\ncoupons. If Karen purchases the i-th good, she can use the i-th coupon to\ndecrease its price by di. Of course, a coupon cannot be used without buying\nthe corresponding good. There is, however, a constraint with the coupons. For\nall i \u2265 2, in order to use the i-th coupon, Karen must also use the xi-th\ncoupon (which may mean using even more coupons to satisfy the requirement for\nthat coupon). Karen wants to know the following. What is the maximum number of\ngoods she can buy, without exceeding her budget b? Input The first line of\ninput contains two integers n and b (1 \u2264 n \u2264 5000, 1 \u2264 b \u2264 10^9), the number\nof goods in the store and the amount of money Karen has, respectively. The\nnext n lines describe the items. Specifically: The i-th line among these\nstarts with two integers, ci and di (1 \u2264 di < ci \u2264 10^9), the price of the\ni-th good and the discount when using the coupon for the i-th good,\nrespectively. If i \u2265 2, this is followed by another integer, xi (1 \u2264 xi < i),\ndenoting that the xi-th coupon must also be used before this coupon can be\nused. Output Output a single integer on a line by itself, the number of\ndifferent goods Karen can buy, without exceeding her budget. Examples Input 6\n16 10 9 10 5 1 12 2 1 20 18 3 10 2 3 2 1 5 Output 4 Input 5 10 3 1 3 1 1 3 1 2\n3 1 3 3 1 4 Output 5 Note In the first test case, Karen can purchase the\nfollowing 4 items: Use the first coupon to buy the first item for 10 - 9 = 1\ndollar. Use the third coupon to buy the third item for 12 - 2 = 10 dollars.\nUse the fourth coupon to buy the fourth item for 20 - 18 = 2 dollars. Buy the\nsixth item for 2 dollars. The total cost of these goods is 15, which falls\nwithin her budget. Note, for example, that she cannot use the coupon on the\nsixth item, because then she should have also used the fifth coupon to buy the\nfifth item, which she did not do here. In the second test case, Karen has\nenough money to use all the coupons and purchase everything.\n\n",
        "cf_contest_id": 815,
        "cf_index": "C",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "6 16\r\n10 9\r\n10 5 1\r\n12 2 1\r\n20 18 3\r\n10 2 3\r\n2 1 5\r\n",
                "4"
            ],
            [
                "5 10\r\n3 1\r\n3 1 1\r\n3 1 2\r\n3 1 3\r\n3 1 4\r\n",
                "5"
            ]
        ],
        "private_cases": [
            [
                "13 30\r\n6 4\r\n25 5 1\r\n7 1 2\r\n9 4 2\r\n10 2 1\r\n12 3 1\r\n5 2 3\r\n10 9 6\r\n2 1 1\r\n5 3 9\r\n10 2 10\r\n10 9 6\r\n3 2 11\r\n",
                "9"
            ],
            [
                "8 9\r\n4 3\r\n8 3 1\r\n2 1 1\r\n4 2 2\r\n7 2 2\r\n3 1 2\r\n7 3 5\r\n2 1 3\r\n",
                "4"
            ],
            [
                "9 15\r\n3 1\r\n6 2 1\r\n8 3 2\r\n4 1 2\r\n2 1 2\r\n3 2 3\r\n8 7 1\r\n6 5 5\r\n8 4 4\r\n",
                "7"
            ],
            [
                "15 1000\r\n449 257\r\n881 657 1\r\n182 101 1\r\n733 545 2\r\n277 13 2\r\n991 689 3\r\n360 302 3\r\n965 570 4\r\n502 178 4\r\n43 28 5\r\n446 406 5\r\n484 152 6\r\n451 335 6\r\n874 600 7\r\n602 34 7\r\n",
                "7"
            ],
            [
                "9 7\r\n3 1\r\n6 2 1\r\n8 3 2\r\n4 1 2\r\n2 1 2\r\n3 2 3\r\n8 7 1\r\n6 5 5\r\n8 4 4\r\n",
                "3"
            ],
            [
                "3 100\r\n100 48\r\n50 1 1\r\n50 1 1\r\n",
                "2"
            ],
            [
                "1 1\r\n2 1\r\n",
                "1"
            ],
            [
                "1 1\r\n1000000000 1\r\n",
                "0"
            ],
            [
                "1 1000000000\r\n1000000000 1\r\n",
                "1"
            ],
            [
                "2 1000000000\r\n500000001 1\r\n500000001 1 1\r\n",
                "2"
            ]
        ]
    }
]