[
    {
        "name": "Kill Demodogs",
        "description": "Demodogs from the Upside-down have attacked Hawkins again. El wants to reach\nMike and also kill as many Demodogs in the way as possible. Hawkins can be\nrepresented as an \n    n \n    \u00d7 n\n grid. The number of Demodogs in a cell at\nthe \n    i\n-th row and the \n    j\n-th column is \n    i \n    \u00b7 j\n. El is at\nposition \n    (1, 1)\n of the grid, and she has to reach \n    (n, n)\n where she\ncan find Mike. The only directions she can move are the right (from \n    (i,\n    j)\n to \n    (i, j + 1)\n) and the down (from \n    (i, j)\n to \n    (i + 1,\n    j)\n). She can't go out of the grid, as there are doors to the Upside-down at\nthe boundaries. Calculate the maximum possible number of Demodogs\n\n    ans\n she can kill on the way, considering that she kills all\nDemodogs in cells she visits (including starting and finishing cells). Print\n\n    2022 \n    \u00b7\n    ans\n modulo \n    10^9 + 7\n. Modulo \n    10^9 + 7\n\nbecause the result can be too large and multiplied by \n    2022\n because we\nare never gonna see it again! (Note, you firstly multiply by \n    2022\n and\nonly after that take the remainder.) Input Each test contains multiple test\ncases. The first line contains the number of test cases \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^4\n). Description of the test cases follows. The first line of each\ntest case contains one integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^9\n) \u2014 the\nsize of the grid. Output For each test case, print a single integer \u2014 the\nmaximum number of Demodogs that can be killed multiplied by \n    2022\n, modulo\n\n    10^9 + 7\n. Example Input 4 2 3 50 1000000000 Output 14154 44484 171010650\n999589541 Note In the first test case, for any path chosen by her the number\nof Demodogs to be killed would be \n    7\n, so the answer would be \n    2022\n    \n    \u00b7 7 = 14154\n.\n\n",
        "cf_contest_id": 1731,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2\r\n3\r\n50\r\n1000000000\r\n",
                "14154\r\n44484\r\n171010650\r\n999589541\r\n"
            ]
        ],
        "private_cases": []
    }
]