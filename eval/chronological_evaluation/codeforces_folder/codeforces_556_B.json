[
    {
        "name": "Case of Fake Numbers",
        "description": "Andrewid the Android is a galaxy-famous detective. He is now investigating a\ncase of frauds who make fake copies of the famous Stolp's gears, puzzles that\nare as famous as the Rubik's cube once was. Its most important components are\na button and a line of n similar gears. Each gear has n teeth containing all\nnumbers from 0 to n - 1 in the counter-clockwise order. When you push a\nbutton, the first gear rotates clockwise, then the second gear rotates\ncounter-clockwise, the the third gear rotates clockwise an so on. Besides,\neach gear has exactly one active tooth. When a gear turns, a new active tooth\nis the one following after the current active tooth according to the direction\nof the rotation. For example, if n = 5, and the active tooth is the one\ncontaining number 0, then clockwise rotation makes the tooth with number 1\nactive, or the counter-clockwise rotating makes the tooth number 4 active.\nAndrewid remembers that the real puzzle has the following property: you can\npush the button multiple times in such a way that in the end the numbers on\nthe active teeth of the gears from first to last form sequence 0, 1, 2, ..., n\n- 1. Write a program that determines whether the given puzzle is real or fake.\nInput The first line contains integer n (1 \u2264 n \u2264 1000) \u2014 the number of gears.\nThe second line contains n digits a1, a2, ..., an (0 \u2264 ai \u2264 n - 1) \u2014 the\nsequence of active teeth: the active tooth of the i-th gear contains number\nai. Output In a single line print \"Yes\" (without the quotes), if the given\nStolp's gears puzzle is real, and \"No\" (without the quotes) otherwise.\nExamples Input 3 1 0 0 Output Yes Input 5 4 2 1 4 3 Output Yes Input 4 0 2 3 1\nOutput No Note In the first sample test when you push the button for the first\ntime, the sequence of active teeth will be 2 2 1, when you push it for the\nsecond time, you get 0 1 2.\n\n",
        "cf_contest_id": 556,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 0 0\r\n",
                "Yes\r\n"
            ],
            [
                "5\r\n4 2 1 4 3\r\n",
                "Yes\r\n"
            ],
            [
                "4\r\n0 2 3 1\r\n",
                "No\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0\r\n",
                "Yes\r\n"
            ],
            [
                "2\r\n1 0\r\n",
                "Yes\r\n"
            ],
            [
                "5\r\n2 4 4 1 1\r\n",
                "Yes\r\n"
            ],
            [
                "10\r\n0 1 2 3 4 5 6 7 8 9\r\n",
                "Yes\r\n"
            ],
            [
                "10\r\n1 5 1 0 6 1 3 5 9 9\r\n",
                "No\r\n"
            ],
            [
                "20\r\n10 11 12 13 14 15 16 17 18 19 0 1 2 3 4 5 6 7 8 9\r\n",
                "Yes\r\n"
            ],
            [
                "20\r\n2 15 18 0 3 12 4 16 13 7 17 9 8 2 15 18 19 17 5 8\r\n",
                "No\r\n"
            ],
            [
                "50\r\n38 13 40 15 42 17 44 19 46 21 48 23 0 25 2 27 4 29 6 31 8 33 10 35 12 37 14 39 16 41 18 43 20 45 22 47 24 49 26 1 28 3 30 5 32 7 34 9 36 11\r\n",
                "Yes\r\n"
            ],
            [
                "50\r\n12 16 9 0 18 36 5 42 28 1 4 43 38 35 14 37 39 13 23 15 37 45 31 38 20 13 18 38 1 13 5 24 35 11 0 44 16 42 8 10 27 3 1 33 33 29 29 33 49 48\r\n",
                "No\r\n"
            ],
            [
                "100\r\n15 86 17 88 19 90 21 92 23 94 25 96 27 98 29 0 31 2 33 4 35 6 37 8 39 10 41 12 43 14 45 16 47 18 49 20 51 22 53 24 55 26 57 28 59 30 61 32 63 34 65 36 67 38 69 40 71 42 73 44 75 46 77 48 79 50 81 52 83 54 85 56 87 58 89 60 91 62 93 64 95 66 97 68 99 70 1 72 3 74 5 76 7 78 9 80 11 82 13 84\r\n",
                "Yes\r\n"
            ],
            [
                "15\r\n2 14 4 1 6 3 8 5 10 7 12 9 14 11 1\r\n",
                "Yes\r\n"
            ],
            [
                "30\r\n19 12 21 14 23 16 25 18 27 20 29 22 1 24 3 26 5 28 7 0 9 2 11 4 13 6 15 8 17 10\r\n",
                "Yes\r\n"
            ],
            [
                "50\r\n27 24 29 26 31 28 33 30 35 32 37 34 39 36 41 38 43 40 45 42 47 44 49 46 1 48 3 0 5 2 7 4 9 6 11 8 13 10 15 12 17 14 19 16 21 18 23 20 25 22\r\n",
                "Yes\r\n"
            ],
            [
                "50\r\n23 19 25 45 22 37 49 22 36 16 30 19 21 4 46 28 39 19 24 12 22 36 41 46 34 40 11 46 29 10 6 21 30 29 6 5 49 45 13 39 34 17 44 45 28 34 7 43 15 25\r\n",
                "No\r\n"
            ],
            [
                "100\r\n95 6 97 8 99 10 1 12 3 14 5 16 7 18 9 20 11 22 13 24 15 26 17 28 19 30 21 32 23 34 25 36 27 38 29 40 31 42 33 44 35 46 37 48 39 50 41 52 43 54 45 56 47 58 49 60 51 62 53 64 55 66 57 68 59 70 61 72 63 74 65 76 67 78 69 80 71 82 73 84 75 86 77 88 79 90 81 92 83 94 85 96 87 98 89 0 91 2 93 4\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n20 45 10 74 41 81 78 74 91 17 21 65 89 63 7 44 97 3 1 89 87 44 32 10 44 73 73 88 62 77 96 59 4 8 55 1 82 52 63 11 59 53 9 47 29 73 38 44 36 24 72 61 24 11 38 6 91 4 0 65 37 58 20 56 70 87 54 42 79 45 46 73 7 85 43 76 69 35 72 79 38 6 8 0 49 39 32 24 28 54 8 43 98 65 50 20 22 23 2 85\r\n",
                "No\r\n"
            ],
            [
                "100\r\n79 74 22 11 73 70 33 50 9 81 17 14 23 44 4 90 20 22 19 94 66 80 70 42 22 82 49 42 36 7 90 91 80 33 26 52 6 77 30 94 99 6 46 84 96 40 89 2 88 65 80 93 5 60 25 15 32 26 68 85 62 74 69 55 84 0 85 91 23 43 84 94 25 65 28 92 16 0 7 83 48 74 15 20 5 97 34 42 99 97 18 39 21 23 95 77 42 17 32 94\r\n",
                "No\r\n"
            ],
            [
                "100\r\n74 27 76 29 78 31 80 33 82 35 84 37 86 39 88 41 90 43 92 45 94 47 96 49 98 51 0 53 2 55 4 57 6 59 8 61 10 63 12 65 14 67 16 69 18 71 20 73 22 75 24 77 26 79 28 81 30 83 32 85 34 87 36 89 38 91 40 93 42 95 44 97 46 99 48 1 50 3 52 5 54 7 56 9 58 11 60 13 62 15 64 17 66 19 68 21 70 23 72 25\r\n",
                "Yes\r\n"
            ],
            [
                "2\r\n0 0\r\n",
                "No\r\n"
            ],
            [
                "2\r\n0 1\r\n",
                "Yes\r\n"
            ],
            [
                "2\r\n1 0\r\n",
                "Yes\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "No\r\n"
            ],
            [
                "3\r\n0 1 1\r\n",
                "No\r\n"
            ],
            [
                "3\r\n0 2 2\r\n",
                "No\r\n"
            ],
            [
                "4\r\n0 1 2 2\r\n",
                "No\r\n"
            ],
            [
                "3\r\n1 1 0\r\n",
                "No\r\n"
            ]
        ]
    }
]