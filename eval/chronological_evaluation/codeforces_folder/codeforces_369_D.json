[
    {
        "name": "Valera and Fools",
        "description": "One fine morning, n fools lined up in a row. After that, they numbered each\nother with numbers from 1 to n, inclusive. Each fool got a unique number. The\nfools decided not to change their numbers before the end of the fun. Every\nfool has exactly k bullets and a pistol. In addition, the fool number i has\nprobability of pi (in percent) that he kills the fool he shoots at. The fools\ndecided to have several rounds of the fun. Each round of the fun looks like\nthis: each currently living fool shoots at another living fool with the\nsmallest number (a fool is not stupid enough to shoot at himself). All shots\nof the round are perfomed at one time (simultaneously). If there is exactly\none living fool, he does not shoot. Let's define a situation as the set of\nnumbers of all the living fools at the some time. We say that a situation is\npossible if for some integer number j (0 \u2264 j \u2264 k) there is a nonzero\nprobability that after j rounds of the fun this situation will occur. Valera\nknows numbers p1, p2, ..., pn and k. Help Valera determine the number of\ndistinct possible situations. Input The first line contains two integers n, k\n(1 \u2264 n, k \u2264 3000) \u2014 the initial number of fools and the number of bullets for\neach fool. The second line contains n integers p1, p2, ..., pn (0 \u2264 pi \u2264 100)\n\u2014 the given probabilities (in percent). Output Print a single number \u2014 the\nanswer to the problem. Examples Input 3 3 50 50 50 Output 7 Input 1 1 100\nOutput 1 Input 2 1 100 100 Output 2 Input 3 3 0 0 0 Output 1 Note In the first\nsample, any situation is possible, except for situation 1, 2. In the second\nsample there is exactly one fool, so he does not make shots. In the third\nsample the possible situations are 1, 2 (after zero rounds) and the \"empty\"\nsituation  (after one round). In the fourth sample, the only possible\nsituation is 1, 2, 3.\n\n",
        "cf_contest_id": 369,
        "cf_index": "D",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n50 50 50\r\n",
                "7\r\n"
            ],
            [
                "1 1\r\n100\r\n",
                "1\r\n"
            ],
            [
                "2 1\r\n100 100\r\n",
                "2\r\n"
            ],
            [
                "3 3\r\n0 0 0\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 2\r\n0 63 92 89 28\r\n",
                "5\r\n"
            ],
            [
                "103 42\r\n78 30 16 12 87 82 14 1 66 6 86 92 71 60 59 40 32 95 73 94 56 57 29 51 6 19 22 69 43 41 66 94 87 61 62 90 90 39 96 26 20 4 10 39 38 4 79 51 75 79 63 85 9 54 11 49 6 45 46 69 18 30 70 14 44 38 4 53 44 52 5 28 10 41 35 47 62 59 83 31 43 22 95 58 61 78 14 58 50 32 89 30 72 34 24 25 42 42 72 67 19 53 99\r\n",
                "1849\r\n"
            ],
            [
                "1 1\r\n50\r\n",
                "1\r\n"
            ],
            [
                "50 25\r\n100 50 0 0 50 100 100 0 50 50 100 50 50 100 50 100 100 100 50 100 0 50 50 100 50 100 0 100 0 50 100 0 0 100 100 100 100 100 0 100 100 50 0 100 0 100 100 100 100 50\r\n",
                "39\r\n"
            ],
            [
                "1 1\r\n0\r\n",
                "1\r\n"
            ],
            [
                "2 1\r\n0 1\r\n",
                "2\r\n"
            ],
            [
                "2 1\r\n1 0\r\n",
                "2\r\n"
            ],
            [
                "2 2\r\n0 1\r\n",
                "2\r\n"
            ],
            [
                "2 2\r\n1 0\r\n",
                "2\r\n"
            ],
            [
                "5 2\r\n30 30 30 30 30\r\n",
                "9\r\n"
            ],
            [
                "3 2\r\n100 100 100\r\n",
                "2\r\n"
            ],
            [
                "1 1000\r\n4\r\n",
                "1\r\n"
            ],
            [
                "4 2\r\n0 30 30 30\r\n",
                "5\r\n"
            ],
            [
                "2 100\r\n100 0\r\n",
                "2\r\n"
            ],
            [
                "2 1\r\n0 100\r\n",
                "2\r\n"
            ]
        ]
    }
]