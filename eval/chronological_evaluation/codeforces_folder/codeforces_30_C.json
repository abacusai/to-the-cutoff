[
    {
        "name": "Shooting Gallery",
        "description": "One warm and sunny day king Copa decided to visit the shooting gallery,\nlocated at the Central Park, and try to win the main prize \u2014 big pink plush\npanda. The king is not good at shooting, so he invited you to help him. The\nshooting gallery is an infinite vertical plane with Cartesian coordinate\nsystem on it. The targets are points on this plane. Each target is described\nby it's coordinates xi, and yi, by the time of it's appearance ti and by the\nnumber pi, which gives the probability that Copa hits this target if he aims\nat it. A target appears and disappears instantly, so Copa can hit the target\nonly if at the moment ti his gun sight aimed at (xi, yi). Speed of movement of\nthe gun sight on the plane is equal to 1. Copa knows all the information about\nthe targets beforehand (remember, he is a king!). He wants to play in the\noptimal way, which maximizes the expected value of the amount of hit targets.\nHe can aim at any target at the moment 0. Input The first line contains\ninteger n (1 \u2264 n \u2264 1000) \u2014 amount of targets in the shooting gallery. Then n\nlines follow, each describing one target. Each description consists of four\nnumbers xi, yi, ti, pi (where xi, yi, ti \u2014 integers, - 1000 \u2264 xi, yi \u2264 1000, 0\n\u2264 ti \u2264 10^9, real number pi is given with no more than 6 digits after the\ndecimal point, 0 \u2264 pi \u2264 1). No two targets may be at the same point. Output\nOutput the maximum expected value of the amount of targets that was shot by\nthe king. Your answer will be accepted if it differs from the correct answer\nby not more than 10^-6. Examples Input 1 0 0 0 0.5 Output 0.5000000000 Input 2\n0 0 0 0.6 5 0 5 0.7 Output 1.3000000000\n\n",
        "cf_contest_id": 30,
        "cf_index": "C",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "probabilities"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n0 0 0 0.5\r\n",
                "0.500000000\r\n"
            ],
            [
                "2\r\n0 0 0 0.6\r\n5 0 5 0.7\r\n",
                "1.300000000\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n-5 2 3 0.886986\r\n",
                "0.886986000\r\n"
            ],
            [
                "4\r\n10 -7 14 0.926305\r\n-7 -8 12 0.121809\r\n-7 7 14 0.413446\r\n3 -8 6 0.859061\r\n",
                "1.785366000\r\n"
            ],
            [
                "5\r\n-2 -2 34 0.127276\r\n5 -5 4 0.459998\r\n10 3 15 0.293766\r\n1 -3 7 0.089869\r\n-4 -7 11 0.772515\r\n",
                "0.899791000\r\n"
            ],
            [
                "5\r\n2 5 1 0.955925\r\n9 -9 14 0.299977\r\n0 1 97 0.114582\r\n-4 -2 66 0.561033\r\n0 -10 75 0.135937\r\n",
                "1.767477000\r\n"
            ],
            [
                "10\r\n-4 7 39 0.921693\r\n3 -1 50 0.111185\r\n-2 -8 27 0.976475\r\n-9 -2 25 0.541029\r\n6 -4 21 0.526054\r\n-7 2 19 0.488637\r\n-6 -5 50 0.819011\r\n-7 3 39 0.987596\r\n-3 -8 16 0.685997\r\n4 10 1 0.246686\r\n",
                "3.082959000\r\n"
            ]
        ]
    }
]