[
    {
        "name": "Kalila and Dimna in the Logging Industry",
        "description": "Kalila and Dimna are two jackals living in a huge jungle. One day they decided\nto join a logging factory in order to make money. The manager of logging\nfactory wants them to go to the jungle and cut n trees with heights a1, a2,\n..., an. They bought a chain saw from a shop. Each time they use the chain saw\non the tree number i, they can decrease the height of this tree by one unit.\nEach time that Kalila and Dimna use the chain saw, they need to recharge it.\nCost of charging depends on the id of the trees which have been cut completely\n(a tree is cut completely if its height equal to 0). If the maximum id of a\ntree which has been cut completely is i (the tree that have height ai in the\nbeginning), then the cost of charging the chain saw would be bi. If no tree is\ncut completely, Kalila and Dimna cannot charge the chain saw. The chainsaw is\ncharged in the beginning. We know that for each i < j, ai < aj and bi > bj and\nalso bn = 0 and a1 = 1. Kalila and Dimna want to cut all the trees completely,\nwith minimum cost. They want you to help them! Will you? Input The first line\nof input contains an integer n (1 \u2264 n \u2264 10^5). The second line of input\ncontains n integers a1, a2, ..., an (1 \u2264 ai \u2264 10^9). The third line of input\ncontains n integers b1, b2, ..., bn (0 \u2264 bi \u2264 10^9). It's guaranteed that a1 =\n1, bn = 0, a1 < a2 < ... < an and b1 > b2 > ... > bn. Output The only line of\noutput must contain the minimum cost of cutting all the trees completely.\nPlease, do not write the \n\u0421++. It is preferred to use the cin, cout streams or the \nExamples Input 5 1 2 3 4 5 5 4 3 2 0 Output 25 Input 6 1 2 3 10 20 30 6 5 4 3\n2 0 Output 138\n\n",
        "cf_contest_id": 319,
        "cf_index": "C",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "geometry"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2 3 4 5\r\n5 4 3 2 0\r\n",
                "25\r\n"
            ],
            [
                "6\r\n1 2 3 10 20 30\r\n6 5 4 3 2 0\r\n",
                "138\r\n"
            ]
        ],
        "private_cases": []
    }
]