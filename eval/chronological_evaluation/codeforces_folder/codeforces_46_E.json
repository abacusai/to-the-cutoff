[
    {
        "name": "Comb",
        "description": "Having endured all the hardships, Lara Croft finally found herself in a room\nwith treasures. To her surprise she didn't find golden mountains there. Lara\nlooked around and noticed on the floor a painted table n \u00d7 m panels in size\nwith integers written on the panels. There also was a huge number of stones\nlying by the wall. On the pillar near the table Lara found a guidance note\nwhich said that to get hold of the treasures one has to choose some non-zero\nnumber of the first panels in each row of the table and put stones on all\nthose panels to push them down. After that she will receive a number of golden\ncoins equal to the sum of numbers written on the chosen panels. Lara quickly\nmade up her mind on how to arrange the stones and was about to start when she\nnoticed an addition to the note in small font below. According to the\naddition, for the room ceiling not to crush and smash the adventurer, the\nchosen panels should form a comb. It was explained that the chosen panels form\na comb when the sequence c1, c2, ..., cn made from the quantities of panels\nchosen in each table line satisfies the following property: c1 > c2 < c3 > c4\n< ..., i.e. the inequation mark interchanges between the neighboring elements.\nNow Lara is bewildered and doesn't know what to do. Help her to determine the\nlargest number of coins she can get and survive at the same time. Input The\nfirst line contains a pair of integers n, m (2 \u2264 n, m \u2264 1500). Next n lines\ncontain m integers each \u2014 that is the table itself. The absolute value of the\nnumbers in the table does not exceed 10000. Output Print the single number \u2014\nthe maximum number of coins Lara can get. Examples Input 2 2 -1 2 1 3 Output 2\n\n",
        "cf_contest_id": 46,
        "cf_index": "E",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2\r\n-1 2\r\n1 3\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "3 3\r\n-2 1 -5\r\n4 -5 -4\r\n-1 1 -1\r\n",
                "3"
            ],
            [
                "3 3\r\n-3 -4 2\r\n-1 2 -1\r\n-4 -3 0\r\n",
                "-11"
            ],
            [
                "2 3\r\n2 -6 2\r\n-2 -2 1\r\n",
                "-4"
            ],
            [
                "3 2\r\n-3 5\r\n-1 5\r\n0 3\r\n",
                "4"
            ],
            [
                "2 2\r\n7 4\r\n-1 0\r\n",
                "10"
            ],
            [
                "5 5\r\n8 -8 7 -5 0\r\n-6 3 1 5 5\r\n2 6 -8 -7 2\r\n6 -8 7 0 -7\r\n-4 -6 0 7 -6\r\n",
                "12"
            ],
            [
                "5 5\r\n-1 0 -8 0 2\r\n-8 4 -8 -1 3\r\n-4 -7 6 -1 -5\r\n-3 2 -8 -1 6\r\n0 7 1 6 2\r\n",
                "1"
            ],
            [
                "5 5\r\n4 -8 -7 7 -1\r\n0 -2 2 5 5\r\n2 -2 -7 3 4\r\n-6 2 -1 1 2\r\n6 -5 -1 -4 7\r\n",
                "-1"
            ],
            [
                "5 5\r\n-10 9 0 -10 6\r\n-6 -4 -3 -10 1\r\n-9 -7 -8 -10 -9\r\n8 1 8 6 6\r\n4 -6 10 1 6\r\n",
                "0"
            ],
            [
                "5 5\r\n1 -5 -9 -4 -6\r\n-5 6 4 1 4\r\n7 2 5 4 -1\r\n5 -2 3 -4 9\r\n5 -6 -1 9 7\r\n",
                "29"
            ],
            [
                "5 5\r\n-7 -1 4 2 4\r\n-1 -6 -10 -8 5\r\n0 9 -1 -3 7\r\n2 -6 -3 7 10\r\n6 -8 9 -4 10\r\n",
                "28"
            ],
            [
                "7 7\r\n-9 2 -2 0 2 -8 0\r\n0 5 -8 6 -10 -4 -2\r\n-3 -7 -7 5 -1 5 2\r\n-10 -3 -8 8 -4 -1 -4\r\n6 1 0 1 10 7 -8\r\n-5 -7 2 -3 -1 2 -2\r\n8 10 1 -3 6 -1 1\r\n",
                "24"
            ],
            [
                "7 7\r\n-5 7 0 1 0 -4 4\r\n9 -4 -1 9 -3 7 2\r\n7 0 6 5 -1 -5 7\r\n-8 9 -9 -7 -5 -1 -6\r\n9 -7 -1 8 -7 6 0\r\n-7 -3 -1 7 1 -8 6\r\n-7 -10 4 1 5 -2 9\r\n",
                "45"
            ],
            [
                "8 8\r\n-5 4 -8 1 -9 -7 7 -1\r\n10 9 9 -3 -9 -7 -5 5\r\n-2 1 -9 -6 -2 -5 -1 8\r\n4 -5 -3 3 5 -2 -4 -1\r\n10 2 7 -3 -10 -3 -3 1\r\n7 9 -6 -10 1 -8 8 0\r\n-4 3 1 -4 0 -6 -9 -1\r\n6 -6 4 2 -2 -10 9 -7\r\n",
                "53"
            ],
            [
                "8 8\r\n5 3 -4 10 4 5 -10 -10\r\n-5 1 0 7 -3 -1 10 -6\r\n10 7 -7 -3 -10 -6 -8 2\r\n5 4 3 -10 -3 -5 -5 3\r\n2 2 4 -9 2 -1 -9 5\r\n-3 3 9 -8 4 6 -8 8\r\n8 -4 -3 0 0 -7 -5 -4\r\n7 4 4 -4 5 9 -5 10\r\n",
                "66"
            ],
            [
                "9 9\r\n-9 5 -6 -6 2 -7 5 -10 -4\r\n2 -4 1 10 -1 10 2 -9 -3\r\n-9 8 -7 3 -8 1 2 1 6\r\n-7 -1 3 -6 -1 7 5 8 -3\r\n1 7 5 10 -4 10 -7 10 -3\r\n-2 2 -5 -4 9 -1 7 -7 5\r\n7 -4 -3 -6 -2 -10 7 -7 1\r\n2 7 8 -5 5 -3 -5 7 7\r\n5 -6 -9 6 -7 0 1 9 -7\r\n",
                "46"
            ],
            [
                "10 8\r\n-546 -9395 -7482 -2930 -5120 -5563 -4150 -3686\r\n-7579 -4575 -9990 -6650 -33 -7667 -3812 -8608\r\n-5789 -2728 -4757 -6827 -5366 -5923 -5712 -4110\r\n-3098 -5028 -4362 -8318 -4493 -417 -8806 -243\r\n-1350 -1379 -5963 -3752 -3736 -3100 -5135 -5737\r\n-5948 -6886 -703 -9386 -9736 -6410 -8867 -6801\r\n-6464 -5851 -1066 -1033 -9915 -8391 -5789 -9500\r\n-2383 -74 -1455 -4088 -2400 -5353 -3359 -1849\r\n-1077 -3662 -367 -5583 -1995 -2670 -1714 -265\r\n-5092 -5852 -1496 -9971 -9877 -923 -1246 -6205\r\n",
                "-62341"
            ]
        ]
    }
]