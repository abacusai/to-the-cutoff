[
    {
        "name": "Chess Rush",
        "description": "The mythic world of Chess Land is a rectangular grid of squares with \n    R\n\nrows and \n    C\n columns, \n    R\n being greater than or equal to \n    C\n. Its\nrows and columns are numbered from \n    1\n to \n    R\n and \n    1\n to \n    C\n,\nrespectively. The inhabitants of Chess Land are usually mentioned as pieces in\neveryday language, and there are \n    5\n specific types of them roaming the\nland: pawns, rooks, bishops, queens and kings. Contrary to popular belief,\nchivalry is long dead in Chess Land, so there are no knights to be found. Each\npiece is unique in the way it moves around from square to square: in one step,\na pawn can move one row forward (i.e. from row \n    r\n to \n    r+1\n), without\nchanging columns; a rook can move any number of columns left/right without\nchanging rows OR move any number of rows forward/backward without changing\ncolumns; a bishop can move to any square of the two diagonals intersecting at\nits currently occupied square; a queen can move to any square where a rook or\na bishop could move to from her position; and a king can move to any of the\n\n    8\n adjacent squares. In the following figure, we marked by X the squares\neach piece can move to in a single step (here, the rows are numbered from\nbottom to top, and the columns from left to right). Recently, Chess Land has\nbecome a dangerous place: pieces that are passing through the land can get\ncaptured unexpectedly by unknown forces and simply disappear. As a\nconsequence, they would like to reach their destinations as fast (i.e. in as\nfew moves) as possible, and they are also interested in the number of\ndifferent ways it is possible for them to reach it, using the minimal number\nof steps \u2013 because more paths being available could mean lower chances of\ngetting captured. Two paths are considered different if they differ in at\nleast one visited square. For this problem, let us assume that pieces are\nentering Chess Land in a given column of row \n    1\n, and exit the land in a\ngiven column of row \n    R\n. Your task is to answer \n    Q\n questions: given\nthe type of a piece, the column it enters row \n    1\n and the column it must\nreach in row \n    R\n in order to exit, compute the minimal number of moves it\nhas to make in Chess Land, and the number of different ways it is able to do\nso. Input The first line contains three space-separated integers \n    R\n,\n\n    C\n, and \n    Q\n \n    (1 \n    \u2264 Q \n    \u2264 1000\n, \n    2 \n    \u2264 C \n    \u2264\n    1000\n and \n    C \n    \u2264 R \n    \u2264 10^9)\n \u2013 the number of rows and columns of\nChess Land, and the number of questions, respectively. Then \n    Q\n lines\nfollow. Each line consists of a character \n    T\n, corresponding to the type\nof the piece in question ('P' for pawn, 'R' for rook, 'B' for bishop, 'Q' for\nqueen and 'K' for king); two integers \n    c_1\n and \n    c_R\n, \n    1\n    \u2264\n    c_1,c_R\n    \u2264 C\n, denoting that the piece starts from the \n    c_1\n-th\ncolumn of row \n    1\n, and has to reach the \n    c_R\n-th column of row\n\n    R\n. Output You have to print \n    Q\n lines, the \n    i\n-th one containing\ntwo space separated integers, the answer to the \n    i\n-th question: the first\none is the minimal number of steps needed, the second is the number of\ndifferent paths available using this number of steps. Since the answer can be\nquite large, you have to compute it modulo \n    10^9+7\n. If it is impossible\nto reach the target square, output the line \"0 0\". Scoring \n    [                                             ;                                             ;                                      Subtask                                             ;                                       Points                                             ;                                  Constraints; ; ;                                             ;                                            1                                            0                                             ;                                      samples; ; ;                                             ;                                            2                                            8                                            T;                                            \u2208; ;                                  'P','R','Q'; , i.e. all pieces are\n    pawns, rooks or queens; ; ;                                             ;                                            3                                           15                                           T=;                                      'B' and;                                          C,R;                                        \u2264 100; ; ;                                             ;                                            4                                           22                                           T=;                                          'B'; ; ;                                             ;                                            5                                            5                                           T=;                                      'K' and;                                          C,R;                                        \u2264 100;                                             ;                                          and;                                            Q;                                         \u2264 50; ; ;                                             ;                                            6                                            8                                           T=;                                      'K' and;                                          C,R;                                        \u2264 100; ; ;                                             ;                                            7                                           15                                           T=;                                      'K' and;                                            C;                                        \u2264 100; ; ;                                             ;                                            8                                           20                                           T=;                                          'K'; ; ;                                             ;                                            9                                            7                                             ;                    no additional\n    constraints; ; ;                                             ;                                             ;  ]\n Example Input 8 8 5 P 1 2 R 4 8\nQ 2 3 B 3 6 K 5 5 Output 0 0 2 2 2 5 2 2 7 393 Note You can download the above\nexample and an additional (bigger) sample input here:\nhttps://gofile.io/d/GDzwfC\n\n",
        "cf_contest_id": 1403,
        "cf_index": "C",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "combinatorics",
            "dp",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]