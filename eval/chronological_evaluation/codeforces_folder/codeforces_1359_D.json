[
    {
        "name": "Yet Another Yet Another Task",
        "description": "Alice and Bob are playing yet another card game. This time the rules are the\nfollowing. There are \n    n\n cards lying in a row in front of them. The\n\n    i\n-th card has value \n    a_i\n. First, Alice chooses a non-empty\nconsecutive segment of cards \n    [l; r]\n (\n    l \n    \u2264 r\n). After that Bob\nremoves a single card \n    j\n from that segment \n    (l \n    \u2264 j \n    \u2264 r)\n. The\nscore of the game is the total value of the remaining cards on the segment\n\n    (a_l + a_l + 1 + \n    \u2026 + a_j - 1 + a_j + 1 + \n    \u2026 + a_r - 1 +\n    a_r)\n. In particular, if Alice chooses a segment with just one element, then\nthe score after Bob removes the only card is \n    0\n. Alice wants to make the\nscore as big as possible. Bob takes such a card that the score is as small as\npossible. What segment should Alice choose so that the score is maximum\npossible? Output the maximum score. Input The first line contains a single\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of cards. The second\nline contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    -30 \n    \u2264 a_i\n    \n    \u2264 30\n) \u2014 the values on the cards. Output Print a single integer \u2014 the\nfinal score of the game. Examples Input 5 5 -2 10 -1 4 Output 6 Input 8 5 2 5\n3 -30 -30 6 9 Output 10 Input 3 -10 6 -15 Output 0 Note In the first example\nAlice chooses a segment \n    [1;5]\n \u2014 the entire row of cards. Bob removes\ncard \n    3\n with the value \n    10\n from the segment. Thus, the final score\nis \n    5 + (-2) + (-1) + 4 = 6\n. In the second example Alice chooses a\nsegment \n    [1;4]\n, so that Bob removes either card \n    1\n or \n    3\n with\nthe value \n    5\n, making the answer \n    5 + 2 + 3 = 10\n. In the third\nexample Alice can choose any of the segments of length \n    1\n: \n    [1;1]\n,\n\n    [2;2]\n or \n    [3;3]\n. Bob removes the only card, so the score is\n\n    0\n. If Alice chooses some other segment then the answer will be less than\n\n    0\n.\n\n",
        "cf_contest_id": 1359,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "implementation",
            "two pointers"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n5 -2 10 -1 4\r\n",
                "6\r\n"
            ],
            [
                "8\r\n5 2 5 3 -30 -30 6 9\r\n",
                "10\r\n"
            ],
            [
                "3\r\n-10 6 -15\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n6\r\n",
                "0\r\n"
            ],
            [
                "5\r\n0 5 -4 3 -1\r\n",
                "0\r\n"
            ],
            [
                "15\r\n1 -26 -6 26 7 10 -2 -4 -6 14 -9 25 9 -12 -28\r\n",
                "44\r\n"
            ],
            [
                "11\r\n3 0 1 -2 5 -5 -1 0 3 2 2\r\n",
                "4\r\n"
            ],
            [
                "7\r\n25 -13 17 -23 12 12 9\r\n",
                "21\r\n"
            ],
            [
                "8\r\n4 -10 13 -13 2 2 -11 6\r\n",
                "2\r\n"
            ],
            [
                "7\r\n30 -20 5 1 3 -20 30\r\n",
                "4\r\n"
            ],
            [
                "7\r\n5 -4 1 1 1 -4 5\r\n",
                "2\r\n"
            ],
            [
                "10\r\n-5 28 -18 -10 9 -2 11 -6 -19 30\r\n",
                "7\r\n"
            ],
            [
                "7\r\n30 -25 0 6 9 -2 10\r\n",
                "13\r\n"
            ],
            [
                "6\r\n8 -7 7 -6 5 5\r\n",
                "5\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "4\r\n1 1 -4 10\r\n",
                "1\r\n"
            ],
            [
                "5\r\n17 -16 12 -11 15\r\n",
                "1\r\n"
            ],
            [
                "7\r\n15 -14 10 10 10 -14 15\r\n",
                "20\r\n"
            ],
            [
                "7\r\n30 -29 10 10 10 -29 30\r\n",
                "20\r\n"
            ],
            [
                "4\r\n2 2 -3 4\r\n",
                "2\r\n"
            ],
            [
                "7\r\n25 -17 13 13 -25 25 -24\r\n",
                "13\r\n"
            ],
            [
                "5\r\n30 -29 4 -3 4\r\n",
                "1\r\n"
            ],
            [
                "6\r\n10 -8 3 3 -8 10\r\n",
                "3\r\n"
            ],
            [
                "9\r\n11 -5 -5 1 2 3 -5 -5 11\r\n",
                "3\r\n"
            ],
            [
                "7\r\n5 -4 3 -1 3 -4 4\r\n",
                "2\r\n"
            ],
            [
                "10\r\n-1 2 0 -1 2 -1 4 3 -5 1\r\n",
                "5\r\n"
            ],
            [
                "6\r\n30 -29 5 5 -29 30\r\n",
                "5\r\n"
            ],
            [
                "10\r\n4 -2 -2 -2 2 0 1 0 -4 -1\r\n",
                "1\r\n"
            ],
            [
                "10\r\n3 -3 2 1 -4 -2 3 -2 -3 0\r\n",
                "1\r\n"
            ],
            [
                "10\r\n4 -3 1 -2 1 1 0 -4 4 -2\r\n",
                "1\r\n"
            ],
            [
                "17\r\n15 -13 7 8 8 1 -19 12 8 -23 -4 16 -13 -28 10 -30 -14\r\n",
                "16\r\n"
            ],
            [
                "10\r\n-5 -5 -3 1 -2 2 0 2 -3 4\r\n",
                "2\r\n"
            ],
            [
                "35\r\n-23 -22 23 4 -22 29 -4 -6 -28 18 -5 21 -7 -8 -11 -7 30 -25 -1 12 19 5 -8 12 -1 10 -24 -19 24 -17 -7 24 20 -22 16\r\n",
                "30\r\n"
            ],
            [
                "10\r\n4 -2 1 0 1 -5 -2 1 0 -5\r\n",
                "1\r\n"
            ],
            [
                "10\r\n1 -4 -4 4 -2 -3 3 0 -2 3\r\n",
                "1\r\n"
            ],
            [
                "10\r\n-3 4 -4 1 1 -4 -5 3 -4 -2\r\n",
                "1\r\n"
            ],
            [
                "10\r\n4 -4 3 -2 3 -4 -2 0 1 0\r\n",
                "1\r\n"
            ],
            [
                "10\r\n-2 -3 -1 4 -3 2 0 1 -5 4\r\n",
                "1\r\n"
            ],
            [
                "11\r\n3 -2 1 1 1 1 1 1 1 -3 4\r\n",
                "6\r\n"
            ],
            [
                "10\r\n4 -5 0 4 0 0 -3 1 1 -4\r\n",
                "1\r\n"
            ],
            [
                "10\r\n0 -1 4 -2 3 -2 -1 -5 -5 2\r\n",
                "1\r\n"
            ],
            [
                "10\r\n-4 -5 4 -3 2 -2 2 1 -1 0\r\n",
                "1\r\n"
            ],
            [
                "10\r\n-4 4 0 -2 3 0 1 2 3 -4\r\n",
                "7\r\n"
            ],
            [
                "10\r\n1 0 -4 3 -5 3 -1 2 2 -5\r\n",
                "3\r\n"
            ],
            [
                "5\r\n30 -29 10 -1 10\r\n",
                "9\r\n"
            ],
            [
                "10\r\n-5 2 -3 -3 -4 3 3 0 2 4\r\n",
                "8\r\n"
            ],
            [
                "10\r\n2 -4 -2 3 1 1 -2 -1 -3 4\r\n",
                "2\r\n"
            ],
            [
                "11\r\n-11 -7 -2 -24 30 -26 24 9 -8 -9 23\r\n",
                "15\r\n"
            ],
            [
                "31\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 -29 30\r\n",
                "28\r\n"
            ],
            [
                "6\r\n30 -29 10 10 -29 30\r\n",
                "10\r\n"
            ],
            [
                "6\r\n30 -22 6 7 -22 30\r\n",
                "6\r\n"
            ],
            [
                "10\r\n3 0 0 -4 3 1 -2 -1 -1 4\r\n",
                "1\r\n"
            ],
            [
                "10\r\n0 4 4 1 -3 4 2 1 4 -1\r\n",
                "13\r\n"
            ],
            [
                "6\r\n5 -4 2 -1 2 -2\r\n",
                "1\r\n"
            ],
            [
                "4\r\n1 -10 1 10\r\n",
                "1\r\n"
            ],
            [
                "7\r\n5 -5 3 4 3 -5 5\r\n",
                "6\r\n"
            ],
            [
                "5\r\n10 -3 -5 3 5\r\n",
                "3\r\n"
            ],
            [
                "4\r\n2 3 -10 11\r\n",
                "2\r\n"
            ],
            [
                "10\r\n16 -15 13 -1 10 -2 -20 26 5 -30\r\n",
                "9\r\n"
            ],
            [
                "10\r\n27 -17 15 -22 18 17 -6 2 16 -14\r\n",
                "29\r\n"
            ],
            [
                "9\r\n7 2 -1 1 1 -10 6 -1 6\r\n",
                "5\r\n"
            ],
            [
                "10\r\n-9 -6 -1 9 -2 0 0 -1 5 0\r\n",
                "2\r\n"
            ],
            [
                "131\r\n30 -29 29 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 28 -28 27 -26 27\r\n",
                "1\r\n"
            ],
            [
                "2\r\n3 9\r\n",
                "3\r\n"
            ],
            [
                "10\r\n8 9 -10 -10 -4 -3 5 9 -9 9\r\n",
                "8\r\n"
            ],
            [
                "10\r\n-2 -8 5 4 -1 -6 -9 6 1 -6\r\n",
                "4\r\n"
            ],
            [
                "24\r\n-8 -6 6 -11 -15 -7 10 -19 -6 21 14 -4 -21 -10 12 17 1 -1 5 19 2 0 -4 -23\r\n",
                "36\r\n"
            ],
            [
                "5\r\n19 -6 1 -11 19\r\n",
                "3\r\n"
            ]
        ]
    }
]