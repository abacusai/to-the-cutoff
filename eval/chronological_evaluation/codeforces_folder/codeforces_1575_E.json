[
    {
        "name": "Eye-Pleasing City Park Tour",
        "description": "There is a city park represented as a tree with \n    n\n attractions as its\nvertices and \n    n - 1\n rails as its edges. The \n    i\n-th attraction has\nhappiness value \n    a_i\n. Each rail has a color. It is either black if \n    t_i\n    = 0\n, or white if \n    t_i = 1\n. Black trains only operate on a black rail\ntrack, and white trains only operate on a white rail track. If you are\npreviously on a black train and want to ride a white train, or you are\npreviously on a white train and want to ride a black train, you need to use\n\n    1\n ticket. The path of a tour must be a simple path \u2014 it must not visit\nan attraction more than once. You do not need a ticket the first time you\nboard a train. You only have \n    k\n tickets, meaning you can only switch\ntrain types at most \n    k\n times. In particular, you do not need a ticket to\ngo through a path consisting of one rail color. Define \n    f(u, v)\n as the\nsum of happiness values of the attractions in the tour \n    (u, v)\n, which is\na simple path that starts at the \n    u\n-th attraction and ends at the\n\n    v\n-th attraction. Find the sum of \n    f(u,v)\n for all valid tours \n    (u,\n    v)\n (\n    1 \n    \u2264 u \n    \u2264 v \n    \u2264 n\n) that does not need more than\n\n    k\n tickets, modulo \n    10^9 + 7\n. Input The first line contains two\nintegers \n    n\n and \n    k\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    0\n    \n    \u2264 k \n    \u2264 n-1\n) \u2014 the number of attractions in the city park and the\nnumber of tickets you have. The second line contains \n    n\n integers \n    a_1,\n    a_2,\n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the happiness value of\neach attraction. The \n    i\n-th of the next \n    n - 1\n lines contains three\nintegers \n    u_i\n, \n    v_i\n, and \n    t_i\n (\n    1 \n    \u2264 u_i, v_i \n    \u2264\n    n\n, \n    0 \n    \u2264 t_i \n    \u2264 1\n) \u2014 an edge between vertices \n    u_i\n and\n\n    v_i\n with color \n    t_i\n. The given edges form a tree. Output Output an\ninteger denoting the total happiness value for all valid tours \n    (u, v)\n\n(\n    1 \n    \u2264 u \n    \u2264 v \n    \u2264 n\n), modulo \n    10^9 + 7\n. Examples Input 5\n0 1 3 2 6 4 1 2 1 1 4 0 3 2 1 2 5 0 Output 45 Input 3 1 1 1 1 1 2 1 3 2 0\nOutput 10\n\n",
        "cf_contest_id": 1575,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "trees"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5 0\r\n1 3 2 6 4\r\n1 2 1\r\n1 4 0\r\n3 2 1\r\n2 5 0\r\n",
                "45\r\n"
            ],
            [
                "3 1\r\n1 1 1\r\n1 2 1\r\n3 2 0\r\n",
                "10\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 0\r\n589284011 636562059 767928733 906523440\r\n4 1 0\r\n4 2 0\r\n3 2 0\r\n",
                "687363872\r\n"
            ],
            [
                "2 1\r\n1000000000 0\r\n2 1 0\r\n",
                "999999993\r\n"
            ]
        ]
    }
]