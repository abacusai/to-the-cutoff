[
    {
        "name": "Vladik and flights",
        "description": "Vladik is a competitive programmer. This year he is going to win the\nInternational Olympiad in Informatics. But it is not as easy as it sounds: the\nquestion Vladik face now is to find the cheapest way to get to the olympiad.\nVladik knows n airports. All the airports are located on a straight line. Each\nairport has unique id from 1 to n, Vladik's house is situated next to the\nairport with id a, and the place of the olympiad is situated next to the\nairport with id b. It is possible that Vladik's house and the place of the\nolympiad are located near the same airport. To get to the olympiad, Vladik can\nfly between any pair of airports any number of times, but he has to start his\nroute at the airport a and finish it at the airport b. Each airport belongs to\none of two companies. The cost of flight from the airport i to the airport j\nis zero if both airports belong to the same company, and |i - j| if they\nbelong to different companies. Print the minimum cost Vladik has to pay to get\nto the olympiad. Input The first line contains three integers n, a, and b (1 \u2264\nn \u2264 10^5, 1 \u2264 a, b \u2264 n) \u2014 the number of airports, the id of the airport from\nwhich Vladik starts his route and the id of the airport which he has to reach.\nThe second line contains a string with length n, which consists only of\ncharacters 0 and 1. If the i-th character in this string is 0, then i-th\nairport belongs to first company, otherwise it belongs to the second. Output\nPrint single integer \u2014 the minimum cost Vladik has to pay to get to the\nolympiad. Examples Input 4 1 4 1010 Output 1 Input 5 5 2 10110 Output 0 Note\nIn the first example Vladik can fly to the airport 2 at first and pay |1 - 2|\n= 1 (because the airports belong to different companies), and then fly from\nthe airport 2 to the airport 4 for free (because the airports belong to the\nsame company). So the cost of the whole flight is equal to 1. It's impossible\nto get to the olympiad for free, so the answer is equal to 1. In the second\nexample Vladik can fly directly from the airport 5 to the airport 2, because\nthey belong to the same company.\n\n",
        "cf_contest_id": 743,
        "cf_index": "A",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 1 4\r\n1010\r\n",
                "1\r\n"
            ],
            [
                "5 5 2\r\n10110\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 9 5\r\n1011111001\r\n",
                "1\r\n"
            ],
            [
                "7 3 7\r\n1110111\r\n",
                "0\r\n"
            ],
            [
                "1 1 1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "10 3 3\r\n1001011011\r\n",
                "0\r\n"
            ],
            [
                "1 1 1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "10 5 8\r\n1000001110\r\n",
                "1\r\n"
            ],
            [
                "10 1 10\r\n0000011111\r\n",
                "1\r\n"
            ],
            [
                "4 1 4\r\n0011\r\n",
                "1\r\n"
            ],
            [
                "10 3 7\r\n0000011111\r\n",
                "1\r\n"
            ],
            [
                "5 1 5\r\n11010\r\n",
                "1\r\n"
            ],
            [
                "6 1 6\r\n111000\r\n",
                "1\r\n"
            ],
            [
                "2 1 2\r\n01\r\n",
                "1\r\n"
            ],
            [
                "10 10 1\r\n0000011111\r\n",
                "1\r\n"
            ],
            [
                "6 1 6\r\n000111\r\n",
                "1\r\n"
            ],
            [
                "10 2 10\r\n0000011111\r\n",
                "1\r\n"
            ],
            [
                "8 1 8\r\n11110000\r\n",
                "1\r\n"
            ],
            [
                "6 1 5\r\n100000\r\n",
                "1\r\n"
            ],
            [
                "16 4 12\r\n0000000011111111\r\n",
                "1\r\n"
            ],
            [
                "6 1 5\r\n111000\r\n",
                "1\r\n"
            ],
            [
                "8 2 7\r\n11110000\r\n",
                "1\r\n"
            ],
            [
                "6 2 5\r\n111000\r\n",
                "1\r\n"
            ],
            [
                "9 9 1\r\n111000000\r\n",
                "1\r\n"
            ],
            [
                "2 2 1\r\n01\r\n",
                "1\r\n"
            ],
            [
                "5 2 5\r\n00001\r\n",
                "1\r\n"
            ],
            [
                "5 1 5\r\n10000\r\n",
                "1\r\n"
            ],
            [
                "6 1 6\r\n011111\r\n",
                "1\r\n"
            ],
            [
                "5 5 1\r\n11110\r\n",
                "1\r\n"
            ],
            [
                "2 1 2\r\n10\r\n",
                "1\r\n"
            ],
            [
                "4 2 4\r\n0001\r\n",
                "1\r\n"
            ],
            [
                "10 1 10\r\n1111100000\r\n",
                "1\r\n"
            ],
            [
                "8 4 5\r\n00001111\r\n",
                "1\r\n"
            ],
            [
                "4 4 1\r\n0111\r\n",
                "1\r\n"
            ],
            [
                "8 1 8\r\n00101001\r\n",
                "1\r\n"
            ]
        ]
    }
]