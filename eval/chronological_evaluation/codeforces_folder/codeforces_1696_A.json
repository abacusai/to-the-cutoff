[
    {
        "name": "NIT orz!",
        "description": "NIT, the cleaver, is new in town! Thousands of people line up to orz him. To\nkeep his orzers entertained, NIT decided to let them solve the following\nproblem related to \n    or z\n. Can you solve this problem\ntoo? You are given a 1-indexed array of \n    n\n integers, \n    a\n, and an\ninteger \n    z\n. You can do the following operation any number (possibly zero)\nof times: Select a positive integer \n    i\n such that \n    1\n    \u2264 i\n    \u2264 n\n.\nThen, simutaneously set \n    a_i\n to \n    (a_i\n    or z)\n and set\n\n    z\n to \n    (a_i\n    and z)\n. In other words, let \n    x\n and\n\n    y\n respectively be the current values of \n    a_i\n and \n    z\n. Then set\n\n    a_i\n to \n    (x\n    ory)\n and set \n    z\n to\n\n    (x\n    andy)\n. Here \n    or\n and\n\n    and\n denote the bitwise operations OR and AND\nrespectively. Find the maximum possible value of the maximum value in \n    a\n\nafter any number (possibly zero) of operations. Input Each test contains\nmultiple test cases. The first line contains the number of test cases \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 100\n). Description of the test cases follows. The first\nline of each test case contains two integers \n    n\n and \n    z\n (\n    1\n    \u2264\n    n\n    \u2264 2000\n, \n    0\n    \u2264 z<2^30\n). The second line of each test case\ncontains \n    n\n integers \n    a_1\n,\n    a_2\n,\n    \u2026\n,\n    a_n\n\n(\n    0\n    \u2264 a_i<2^30\n). It is guaranteed that the sum of \n    n\n over all\ntest cases does not exceed \n    10^4\n. Output For each test case, print one\ninteger \u2014 the answer to the problem. Example Input 5 2 3 3 4 5 5 0 2 4 6 8 1 9\n10 5 7 7 15 30 29 27 3 39548743 10293834 10284344 13635445 Output 7 13 11 31\n48234367 Note In the first test case of the sample, one optimal sequence of\noperations is: Do the operation with \n    i=1\n. Now \n    a_1\n becomes\n\n    (3\n    or3)=3\n and \n    z\n becomes\n\n    (3\n    and3)=3\n. Do the operation with \n    i=2\n. Now\n\n    a_2\n becomes \n    (4\n    or3)=7\n and \n    z\n becomes\n\n    (4\n    and3)=0\n. Do the operation with \n    i=1\n. Now\n\n    a_1\n becomes \n    (3\n    or0)=3\n and \n    z\n becomes\n\n    (3\n    and0)=0\n. After these operations, the sequence \n    a\n\nbecomes \n    [3,7]\n, and the maximum value in it is \n    7\n. We can prove that\nthe maximum value in \n    a\n can never exceed \n    7\n, so the answer is\n\n    7\n. In the fourth test case of the sample, one optimal sequence of\noperations is: Do the operation with \n    i=1\n. Now \n    a_1\n becomes\n\n    (7\n    or7)=7\n and \n    z\n becomes\n\n    (7\n    and7)=7\n. Do the operation with \n    i=3\n. Now\n\n    a_3\n becomes \n    (30\n    or7)=31\n and \n    z\n becomes\n\n    (30\n    and7)=6\n. Do the operation with \n    i=5\n. Now\n\n    a_5\n becomes \n    (27\n    or6)=31\n and \n    z\n becomes\n\n    (27\n    and6)=2\n.\n\n",
        "cf_contest_id": 1696,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n2 3\r\n3 4\r\n5 5\r\n0 2 4 6 8\r\n1 9\r\n10\r\n5 7\r\n7 15 30 29 27\r\n3 39548743\r\n10293834 10284344 13635445\r\n",
                "7\r\n13\r\n11\r\n31\r\n48234367\r\n"
            ]
        ],
        "private_cases": []
    }
]