[
    {
        "name": "Number Replacement",
        "description": "An integer array \n    a_1, a_2, \n    \u2026, a_n\n is being transformed into an\narray of lowercase English letters using the following prodecure: While there\nis at least one number in the array: Choose any number \n    x\n from the array\n\n    a\n, and any letter of the English alphabet \n    y\n. Replace all\noccurrences of number \n    x\n with the letter \n    y\n. For example, if we\ninitially had an array \n    a = [2, 3, 2, 4, 1]\n, then we could transform it\nthe following way: Choose the number \n    2\n and the letter c. After that \n    a\n    = [c, 3, c, 4, 1]\n. Choose the number \n    3\n and the letter a. After that\n\n    a = [c, a, c, 4, 1]\n. Choose the number \n    4\n and the letter t. After\nthat \n    a = [c, a, c, t, 1]\n. Choose the number \n    1\n and the letter a.\nAfter that \n    a = [c, a, c, t, a]\n. After the transformation all letters are\nunited into a string, in our example we get the string \"cacta\". Having the\narray \n    a\n and the string \n    s\n determine if the string \n    s\n could be\ngot from the array \n    a\n after the described transformation? Input The first\nline contains a single integer \n    t\n \n    (1 \n    \u2264 t \n    \u2264 10^3\n) \u2014 the\nnumber of test cases. Then the description of the test cases follows. The\nfirst line of each test case contains a single integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 50\n) \u2014 the length of the array \n    a\n and the string \n    s\n. The\nsecond line of each test case contains exactly \n    n\n integers: \n    a_1, a_2,\n    \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 50\n) \u2014 the elements of the array\n\n    a\n. The third line of each test case contains a string \n    s\n of length\n\n    n\n, consisting of lowercase English letters. Output For each test case,\noutput \"YES\", if we can get the string \n    s\n from the array \n    a\n, and\n\"NO\" otherwise. You can output each letter in any case. Example Input 7 5 2 3\n2 4 1 cacta 1 50 a 2 11 22 ab 4 1 2 2 1 aaab 5 1 2 3 2 1 aaaaa 6 1 10 2 9 3 8\nazzfdb 7 1 2 3 4 1 1 2 abababb Output YES YES YES NO YES YES NO Note The first\ntest case corresponds to the sample described in the statement. In the second\ntest case we can choose the number \n    50\n and the letter a. In the third\ntest case we can choose the number \n    11\n and the letter a, after that \n    a\n    = [a, 22]\n. Then we choose the number \n    22\n and the letter b and get \n    a\n    = [a, b]\n. In the fifth test case we can change all numbers one by one to\nthe letter a.\n\n",
        "cf_contest_id": 1744,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n5\r\n2 3 2 4 1\r\ncacta\r\n1\r\n50\r\na\r\n2\r\n11 22\r\nab\r\n4\r\n1 2 2 1\r\naaab\r\n5\r\n1 2 3 2 1\r\naaaaa\r\n6\r\n1 10 2 9 3 8\r\nazzfdb\r\n7\r\n1 2 3 4 1 1 2\r\nabababb\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": []
    }
]