[
    {
        "name": "Dormitory",
        "description": "Student Vasya came to study in Berland State University from the country, so\nhe is living in a dormitory. A semester has n days, and in each of those days\nhis parents send him some food. In the morning of the i-th day he receives ai\nkilograms of food that can be eaten on that day and on the next one (then the\nfood goes bad and becomes unfit for consumption). Every day Vasya eats v\nkilograms of food. It is known that Vasya's parents do not allow him to\nstarve, so there always is enough food for Vasya. Vasya has m friends who\nsometimes live with him. Let's index the friends from 1 to m. Friend number j\nlives with Vasya from day lj to day rj, inclusive. Also, the j-th friend\nrequires fj kilograms of food per day. Usually Vasya's friends eat in the\ncanteen, but sometimes generous Vasya feeds some of them. Every day Vasya can\nfeed some friends who live with him this day (or may feed nobody). Every time\nVasya feeds his friend, he gives him as much food as the friend needs for the\nday, and Vasya's popularity rating at the University increases by one. Vasya\ncannot feed the same friend multiple times in one day. In addition, he knows\nthat eating habits must be regular, so he always eats v kilograms of food per\nday. Vasya wants so choose whom he will feed each day of the semester to make\nhis rating as high as possible. Originally Vasya's rating is 0 because he is a\nfreshman. Input The first line contains two integers n and v (1 \u2264 n, v \u2264 400).\nThe second line contains n integers a1, a2, ..., an (1 \u2264 ai \u2264 400), separated\nby single spaces. Value ai means that in the morning of the i-th day ai\nkilograms of food come, the food is good for eating on day i and/or on day i +\n1 (then the food goes bad). It is guaranteed that if Vasya doesn't feed\nanyone, there is a way for him to eat so as to consume v kilograms of food\nevery day. The third line contains integer m (1 \u2264 m \u2264 400). Each of the\nfollowing m lines describes one Vasya's friend: the j-th of these lines\ncontains three integers lj, rj, fj (1 \u2264 lj \u2264 rj \u2264 n, 1 \u2264 fj \u2264 400), separated\nby single spaces. Output In the first line print the highest rating Vasya can\nreach. In the next n lines print, which friends Vasya needs to feed on each\nday. In the i-th of these lines first print the number of friends to feed on\nthe i-th day, and then list the indexes of these friends. Print the friends in\nthese lists in any order. If there are multiple optimal solutions, print any\nof them. Examples Input 4 1 3 2 5 4 3 1 3 2 1 4 1 3 4 2 Output 7 1 2 1 2 3 2 1\n3 2 2 3\n\n",
        "cf_contest_id": 254,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 1\r\n3 2 5 4\r\n3\r\n1 3 2\r\n1 4 1\r\n3 4 2\r\n",
                "7\r\n1 2\r\n1 2\r\n3 2 1 3\r\n2 2 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 10\r\n257 357\r\n1\r\n1 1 211\r\n",
                "1\r\n1 1\r\n0\r\n"
            ],
            [
                "3 100\r\n108 289 337\r\n2\r\n3 3 137\r\n3 3 89\r\n",
                "2\r\n0\r\n0\r\n2 2 1\r\n"
            ],
            [
                "5 5\r\n233 358 153 273 268\r\n9\r\n1 5 73\r\n4 4 73\r\n1 1 73\r\n1 2 73\r\n5 5 73\r\n1 5 73\r\n4 5 73\r\n3 4 73\r\n5 5 73\r\n",
                "17\r\n2 1 3\r\n3 1 4 6\r\n3 1 6 8\r\n4 1 2 6 7\r\n5 1 5 6 7 9\r\n"
            ],
            [
                "10 25\r\n79 30 129 301 351 360 155 346 250 251\r\n5\r\n2 2 209\r\n2 10 271\r\n9 10 67\r\n5 5 35\r\n7 7 196\r\n",
                "9\r\n0\r\n0\r\n0\r\n0\r\n2 4 2\r\n1 2\r\n2 5 2\r\n0\r\n2 3 2\r\n2 3 2\r\n"
            ],
            [
                "15 39\r\n241 167 87 257 101 322 182 180 55 79 101 178 225 72 393\r\n9\r\n8 8 129\r\n15 15 204\r\n12 15 32\r\n13 13 86\r\n13 15 167\r\n8 8 150\r\n10 10 45\r\n7 8 204\r\n11 12 96\r\n",
                "13\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n1 8\r\n2 1 6\r\n0\r\n1 7\r\n1 9\r\n2 3 9\r\n2 3 4\r\n1 3\r\n3 3 5 2\r\n"
            ],
            [
                "25 2\r\n195 138 8 165 6 264 57 111 333 200 165 248 331 191 199 2 275 206 75 82 377 372 289 323 239\r\n15\r\n7 23 12\r\n24 25 12\r\n25 25 12\r\n13 16 12\r\n14 25 12\r\n4 17 12\r\n3 20 12\r\n16 19 12\r\n22 23 12\r\n16 20 12\r\n7 17 12\r\n6 16 12\r\n9 10 12\r\n9 12 12\r\n21 24 12\r\n",
                "111\r\n0\r\n0\r\n1 7\r\n2 6 7\r\n2 6 7\r\n3 6 7 12\r\n5 1 6 7 11 12\r\n5 1 6 7 11 12\r\n7 1 6 7 11 12 13 14\r\n7 1 6 7 11 12 13 14\r\n6 1 6 7 11 12 14\r\n6 1 6 7 11 12 14\r\n6 1 4 6 7 11 12\r\n7 1 4 5 6 7 11 12\r\n7 1 4 5 6 7 11 12\r\n9 1 4 5 6 7 8 10 11 12\r\n7 1 5 6 7 8 10 11\r\n5 1 5 7 8 10\r\n5 1 5 7 8 10\r\n4 1 5 7 10\r\n3 1 5 15\r\n4 1 5 9 15\r\n4 1 5 9 15\r\n3 2 5 15\r\n3 2 3 5\r\n"
            ]
        ]
    }
]