[
    {
        "name": "Code Parsing",
        "description": "Little Vitaly loves different algorithms. Today he has invented a new\nalgorithm just for you. Vitaly's algorithm works with string s, consisting of\ncharacters \"x\" and \"y\", and uses two following operations at runtime: Find two\nconsecutive characters in the string, such that the first of them equals \"y\",\nand the second one equals \"x\" and swap them. If there are several suitable\npairs of characters, we choose the pair of characters that is located closer\nto the beginning of the string. Find in the string two consecutive characters,\nsuch that the first of them equals \"x\" and the second one equals \"y\". Remove\nthese characters from the string. If there are several suitable pairs of\ncharacters, we choose the pair of characters that is located closer to the\nbeginning of the string. The input for the new algorithm is string s, and the\nalgorithm works as follows: If you can apply at least one of the described\noperations to the string, go to step 2 of the algorithm. Otherwise, stop\nexecuting the algorithm and print the current string. If you can apply\noperation 1, then apply it. Otherwise, apply operation 2. After you apply the\noperation, go to step 1 of the algorithm. Now Vitaly wonders, what is going to\nbe printed as the result of the algorithm's work, if the input receives string\ns. Input The first line contains a non-empty string s. It is guaranteed that\nthe string only consists of characters \"x\" and \"y\". It is guaranteed that the\nstring consists of at most 10^6 characters. It is guaranteed that as the\nresult of the algorithm's execution won't be an empty string. Output In the\nonly line print the string that is printed as the result of the algorithm's\nwork, if the input of the algorithm input receives string s. Examples Input x\nOutput x Input yxyxy Output y Input xxxxxy Output xxxx Note In the first test\nthe algorithm will end after the first step of the algorithm, as it is\nimpossible to apply any operation. Thus, the string won't change. In the\nsecond test the transformation will be like this: string \"yxyxy\" transforms\ninto string \"xyyxy\"; string \"xyyxy\" transforms into string \"xyxyy\"; string\n\"xyxyy\" transforms into string \"xxyyy\"; string \"xxyyy\" transforms into string\n\"xyy\"; string \"xyy\" transforms into string \"y\". As a result, we've got string\n\"y\". In the third test case only one transformation will take place: string\n\"xxxxxy\" transforms into string \"xxxx\". Thus, the answer will be string\n\"xxxx\".\n\n",
        "cf_contest_id": 255,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "x\r\n",
                "x\r\n"
            ],
            [
                "yxyxy\r\n",
                "y\r\n"
            ],
            [
                "xxxxxy\r\n",
                "xxxx\r\n"
            ]
        ],
        "private_cases": [
            [
                "yxyyxyyx\r\n",
                "yy\r\n"
            ],
            [
                "yxxyxyx\r\n",
                "x\r\n"
            ],
            [
                "xxx\r\n",
                "xxx\r\n"
            ],
            [
                "xxyxx\r\n",
                "xxx\r\n"
            ],
            [
                "xxxyx\r\n",
                "xxx\r\n"
            ],
            [
                "yxxxx\r\n",
                "xxx\r\n"
            ],
            [
                "xyyxyyyyyxxxxxxxyxyxyyxyyxyyxxyxyxyxxxyxxy\r\n",
                "xx\r\n"
            ],
            [
                "xyyxyyyyyxxxxxxxyxyxyyxyyxyyxxyxyxyxxxyxxy\r\n",
                "xx\r\n"
            ],
            [
                "xxxxxxxxxxxyxyyxxxxyxxxxxyxxxxxyxxxxxxxxyx\r\n",
                "xxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n"
            ],
            [
                "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n",
                "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n"
            ],
            [
                "yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\r\n",
                "yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\r\n"
            ]
        ]
    }
]