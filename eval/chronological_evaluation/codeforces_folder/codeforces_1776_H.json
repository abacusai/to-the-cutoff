[
    {
        "name": "Beppa and SwerChat",
        "description": "Beppa and her circle of geek friends keep up to date on a group chat in the\ninstant messaging app SwerChat\n    ^\n    TM\n. The group has \n    n\n\nmembers, excluding Beppa. Each of those members has a unique ID between\n\n    1\n and \n    n\n. When a user opens a group chat,\nSwerChat\n    ^\n    TM\n displays the list of other members of that group,\nsorted by decreasing times of last seen online (so the member who opened the\nchat most recently is the first of the list). However, the times of last seen\nare not displayed. Today, Beppa has been busy all day: she has only opened the\ngroup chat twice, once at 9:00 and once at 22:00. Both times, she wrote down\nthe list of members in the order they appeared at that time. Now she wonders:\nwhat is the minimum number of other members that must have been online at\nleast once between 9:00 and 22:00? Beppa is sure that no two members are ever\nonline at the same time and no members are online when Beppa opens the group\nchat at 9:00 and 22:00. Input Each test contains multiple test cases. The\nfirst line contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n     000\n) \u2014\nthe number of test cases. The descriptions of the \n    t\n test cases follow.\nThe first line of each test case contains an integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 10^5\n) \u2014 the number of members of the group excluding Beppa. The\nsecond line contains \n    n\n integers \n    a_1, \n      a_2, \n     \n    \u2026, \n     \n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014 the list of IDs of the members, sorted by\ndecreasing times of last seen online at 9:00. The third line contains \n    n\n\nintegers \n    b_1, \n      b_2, \n     \n    \u2026, \n      b_n\n (\n    1 \n    \u2264 b_i \n    \u2264\n    n\n) \u2014 the list of IDs of the members, sorted by decreasing times of last\nseen online at 22:00. For all \n    1\n    \u2264 i < j\n    \u2264 n\n, it is guaranteed that\n\n    a_i \n     a_j\n and \n    b_i \n     b_j\n. It is also guaranteed that the\nsum of the values of \n    n\n over all test cases does not exceed \n    10^5\n.\nOutput For each test case, print the minimum number of members that must have\nbeen online between 9:00 and 22:00. Example Input 4 5 1 4 2 5 3 4 5 1 2 3 6 1\n2 3 4 5 6 1 2 3 4 5 6 8 8 2 4 7 1 6 5 3 5 6 1 4 8 2 7 3 1 1 1 Output 2 0 4 0\nNote In the first test case, members \n    4, 5\n must have been online between\n9:00 and 22:00. In the second test case, it is possible that nobody has been\nonline between 9:00 and 22:00.\n\n",
        "cf_contest_id": 1776,
        "cf_index": "H",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5\r\n1 4 2 5 3\r\n4 5 1 2 3\r\n6\r\n1 2 3 4 5 6\r\n1 2 3 4 5 6\r\n8\r\n8 2 4 7 1 6 5 3\r\n5 6 1 4 8 2 7 3\r\n1\r\n1\r\n1\r\n",
                "2\r\n0\r\n4\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]