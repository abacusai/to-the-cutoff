[
    {
        "name": "AB Tree",
        "description": "Kilani and Abd are neighbors for 3000 years, but then the day came and Kilani\ndecided to move to another house. As a farewell gift, Kilani is going to\nchallenge Abd with a problem written by their other neighbor with the same\nname Abd. The problem is: You are given a connected tree rooted at node\n\n    1\n. You should assign a character a or b to every node in the tree so\nthat the total number of a's is equal to \n    x\n and the total number of b's\nis equal to \n    n - x\n. Let's define a string for each node \n    v\n of the\ntree as follows: if \n    v\n is root then the string is just one character\nassigned to \n    v\n: otherwise, let's take a string defined for the \n    v\n's\nparent \n    p_v\n and add to the end of it a character assigned to \n    v\n. You\nshould assign every node a character in a way that minimizes the number of\ndistinct strings among the strings of all nodes. Input The first line contains\ntwo integers \n    n\n and \n    x\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n; \n    0 \n    \u2264 x\n    \n    \u2264 n\n) \u2014 the number of vertices in the tree the number of a's. The\nsecond line contains \n    n - 1\n integers \n    p_2, p_3, \n    \u2026, p_n\n (\n    1\n    \n    \u2264 p_i \n    \u2264 n\n; \n    p_i \n    \u2260 i\n), where \n    p_i\n is the parent of\nnode \n    i\n. It is guaranteed that the input describes a connected tree.\nOutput In the first line, print the minimum possible total number of distinct\nstrings. In the second line, print \n    n\n characters, where all characters\nare either a or b and the \n    i\n-th character is the character assigned to\nthe \n    i\n-th node. Make sure that the total number of a's is equal to\n\n    x\n and the total number of b's is equal to \n    n - x\n. If there is more\nthan one answer you can print any of them. Example Input 9 3 1 2 2 4 4 4 3 1\nOutput 4 aabbbbbba Note The tree from the sample is shown below: The tree\nafter assigning characters to every node (according to the output) is the\nfollowing: Strings for all nodes are the following: string of node \n    1\n is:\na string of node \n    2\n is: aa string of node \n    3\n is: aab string of node\n\n    4\n is: aab string of node \n    5\n is: aabb string of node \n    6\n is:\naabb string of node \n    7\n is: aabb string of node \n    8\n is: aabb string of\nnode \n    9\n is: aa The set of unique strings is \n    a,\n    \n    aa, \n    aab, \n    aabb\n, so the number of distinct\nstrings is \n    4\n.\n\n",
        "cf_contest_id": 1481,
        "cf_index": "F",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9 3\r\n1 2 2 4 4 4 3 1\r\n",
                "4\r\naabbbbbba"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n\r\n",
                "1\r\na"
            ],
            [
                "1 0\r\n\r\n",
                "1\r\nb"
            ],
            [
                "10 8\r\n8 1 7 10 4 10 4 1 9\r\n",
                "7\r\nababaaaaaa"
            ],
            [
                "15 3\r\n1 15 10 6 15 9 7 11 5 2 7 11 1 2\r\n",
                "7\r\naabbbbbbbbbbbab"
            ],
            [
                "15 12\r\n1 2 2 8 5 1 1 2 11 8 6 12 1 11\r\n",
                "6\r\nbaaaaaaaaaabbaa"
            ],
            [
                "20 7\r\n12 11 5 16 17 9 6 15 12 16 6 20 3 4 1 7 16 3 8\r\n",
                "12\r\nabaaabbbbbabbbbababb"
            ],
            [
                "100 60\r\n1 10 1 1 1 1 1 8 1 33 38 1 59 1 1 1 63 1 1 39 1 1 1 50 1 1 1 1 1 96 1 1 23 1 1 15 1 1 1 1 1 1 16 46 1 91 89 1 1 5 1 1 69 1 1 6 49 1 1 1 1 1 36 24 1 1 1 1 5 1 41 29 62 60 28 68 1 15 30 1 22 27 59 1 1 95 1 1 67 1 40 1 1 1 1 1 66 13 52\r\n",
                "3\r\nbabaaaaababbabaaabaabaaabaaaaabaabaabaaaaaabbabbaabaabaabbaaaaabbaaaababbbbbbabbabbbaabaababaaaaabbb"
            ]
        ]
    }
]