[
    {
        "name": "XORinacci",
        "description": "Cengiz recently learned Fibonacci numbers and now he is studying different\nalgorithms to find them. After getting bored of reading them, he came with his\nown new type of numbers that he named XORinacci numbers. He defined them as\nfollows: \n    f(0) = a\n; \n    f(1) = b\n; \n    f(n) = f(n-1) \n    \u2295 f(n-2)\n\nwhen \n    n > 1\n, where \n    \u2295\n denotes the bitwise XOR operation. You\nare given three integers \n    a\n, \n    b\n, and \n    n\n, calculate \n    f(n)\n.\nYou have to answer for \n    T\n independent test cases. Input The input\ncontains one or more independent test cases. The first line of input contains\na single integer \n    T\n (\n    1 \n    \u2264 T \n    \u2264 10^3\n), the number of test\ncases. Each of the \n    T\n following lines contains three space-separated\nintegers \n    a\n, \n    b\n, and \n    n\n (\n    0 \n    \u2264 a, b, n \n    \u2264 10^9\n)\nrespectively. Output For each test case, output \n    f(n)\n. Example Input 3 3\n4 2 4 5 0 325 265 1231232 Output 7 4 76 Note In the first example, \n    f(2) =\n    f(0) \n    \u2295 f(1) = 3 \n    \u2295 4 = 7\n.\n\n",
        "cf_contest_id": 1208,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 4 2\r\n4 5 0\r\n325 265 1231232\r\n",
                "7\r\n4\r\n76\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n0 0 1000000000\r\n1002 2003 36523\r\n233 5656 898989\r\n0 2352 0\r\n21132 23256 2323256\r\n12313 454878 11000\r\n1213 0 21\r\n11 1 1\r\n1 1 98532\r\n1000000000 1000000000 1000000000\r\n",
                "0\r\n2003\r\n233\r\n0\r\n2132\r\n442567\r\n1213\r\n1\r\n1\r\n1000000000\r\n"
            ],
            [
                "1\r\n25369 85223 58963241\r\n",
                "77822\r\n"
            ],
            [
                "2\r\n168342 440469 517112\r\n841620 806560 140538\r\n",
                "272643\r\n841620\r\n"
            ],
            [
                "10\r\n669924290 408119795 804030560\r\n663737793 250734602 29671646\r\n431160679 146708815 289491233\r\n189259304 606497663 379372476\r\n707829111 49504411 81710658\r\n54555019 65618101 626948607\r\n578351356 288589794 974275296\r\n400531973 205638174 323247740\r\n219131617 178762989 799964854\r\n825160173 502080627 608216046\r\n",
                "1069371953\r\n696139211\r\n286024744\r\n189259304\r\n707829111\r\n54555019\r\n578351356\r\n463366171\r\n178762989\r\n825160173\r\n"
            ],
            [
                "1\r\n1 2 3\r\n",
                "1\r\n"
            ]
        ]
    }
]