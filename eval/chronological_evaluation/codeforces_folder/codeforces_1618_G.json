[
    {
        "name": "Trader Problem",
        "description": "Monocarp plays a computer game (yet again!). This game has a unique trading\nmechanics. To trade with a character, Monocarp has to choose one of the items\nhe possesses and trade it for some item the other character possesses. Each\nitem has an integer price. If Monocarp's chosen item has price \n    x\n, then\nhe can trade it for any item (exactly one item) with price not greater than\n\n    x+k\n. Monocarp initially has \n    n\n items, the price of the \n    i\n-th\nitem he has is \n    a_i\n. The character Monocarp is trading with has \n    m\n\nitems, the price of the \n    i\n-th item they have is \n    b_i\n. Monocarp can\ntrade with this character as many times as he wants (possibly even zero\ntimes), each time exchanging one of his items with one of the other\ncharacter's items according to the aforementioned constraints. Note that if\nMonocarp gets some item during an exchange, he can trade it for another item\n(since now the item belongs to him), and vice versa: if Monocarp trades one of\nhis items for another item, he can get his item back by trading something for\nit. You have to answer \n    q\n queries. Each query consists of one integer,\nwhich is the value of \n    k\n, and asks you to calculate the maximum possible\ntotal cost of items Monocarp can have after some sequence of trades, assuming\nthat he can trade an item of cost \n    x\n for an item of cost not greater than\n\n    x+k\n during each trade. Note that the queries are independent: the trades\ndo not actually occur, Monocarp only wants to calculate the maximum total cost\nhe can get. Input The first line contains three integers \n    n\n, \n    m\n and\n\n    q\n (\n    1 \n    \u2264 n, m, q \n    \u2264 2 \n    \u00b7 10^5\n). The second line contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014\nthe prices of the items Monocarp has. The third line contains \n    m\n integers\n\n    b_1, b_2, \n    \u2026, b_m\n (\n    1 \n    \u2264 b_i \n    \u2264 10^9\n) \u2014 the prices of\nthe items the other character has. The fourth line contains \n    q\n integers,\nwhere the \n    i\n-th integer is the value of \n    k\n for the \n    i\n-th query\n(\n    0 \n    \u2264 k \n    \u2264 10^9\n). Output For each query, print one integer \u2014 the\nmaximum possible total cost of items Monocarp can have after some sequence of\ntrades, given the value of \n    k\n from the query. Example Input 3 4 5 10 30\n15 12 31 14 18 0 1 2 3 4 Output 55 56 60 64 64\n\n",
        "cf_contest_id": 1618,
        "cf_index": "G",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dsu",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 4.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 4 5\r\n10 30 15\r\n12 31 14 18\r\n0 1 2 3 4\r\n",
                "55\r\n56\r\n60\r\n64\r\n64\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n1\r\n1\r\n1\r\n",
                "1\r\n"
            ]
        ]
    }
]