[
    {
        "name": "Dasha and cyclic table",
        "description": "Dasha is fond of challenging puzzles: Rubik's Cube 3 \u00d7 3 \u00d7 3, 4 \u00d7 4 \u00d7 4, 5 \u00d7 5\n\u00d7 5 and so on. This time she has a cyclic table of size n \u00d7 m, and each cell\nof the table contains a lowercase English letter. Each cell has coordinates\n(i, j) (0 \u2264 i < n, 0 \u2264 j < m). The table is cyclic means that to the right of\ncell (i, j) there is the cell , and to the down there is the cell . Dasha has\na pattern as well. A pattern is a non-cyclic table of size r \u00d7 c. Each cell is\neither a lowercase English letter or a question mark. Each cell has\ncoordinates (i, j) (0 \u2264 i < r, 0 \u2264 j < c). The goal of the puzzle is to find\nall the appearance positions of the pattern in the cyclic table. We say that\nthe cell (i, j) of cyclic table is an appearance position, if for every pair\n(x, y) such that 0 \u2264 x < r and 0 \u2264 y < c one of the following conditions\nholds: There is a question mark in the cell (x, y) of the pattern, or The cell\nof the cyclic table equals to the cell (x, y) of the pattern. Dasha solved\nthis puzzle in no time, as well as all the others she ever tried. Can you\nsolve it?. Input The first line contains two integers n and m (1 \u2264 n, m \u2264 400)\n\u2014 the cyclic table sizes. Each of the next n lines contains a string of m\nlowercase English characters \u2014 the description of the cyclic table. The next\nline contains two integers r and c (1 \u2264 r, c \u2264 400) \u2014 the sizes of the\npattern. Each of the next r lines contains a string of c lowercase English\nletter and/or characters '?' \u2014 the description of the pattern. Output Print n\nlines. Each of the n lines should contain m characters. Each of the characters\nshould equal '0' or '1'. The j-th character of the i-th (0-indexed) line\nshould be equal to '1', in case the cell (i, j) is an appearance position,\notherwise it should be equal to '0'. Examples Input 5 7 qcezchs hhedywq\nwikywqy qckrqzt bqexcxz 3 2 ?? yw ?q Output 0000100 0001001 0000000 0000000\n0000000 Input 10 10 fwtoayylhw yyaryyjawr ywrdzwhscy hnsyyxiphn bnjwzyyjvo\nkkjgseenwn gvmiflpcsy lxvkwrobwu wyybbcocyy yysijsvqry 2 2 ?? yy Output\n1000100000 0000000001 0001000000 0000010000 0000000000 0000000000 0000000000\n0100000010 1000000001 0000010000 Input 8 6 ibrgxl xqdcsg okbcgi tvpetc xgxxig\nigghzo lmlaza gpswzv 1 4 gx?? Output 000100 000001 000000 000000 010001 000000\n000000 000000\n\n",
        "cf_contest_id": 754,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force",
            "fft",
            "strings",
            "trees"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5 7\r\nqcezchs\r\nhhedywq\r\nwikywqy\r\nqckrqzt\r\nbqexcxz\r\n3 2\r\n??\r\nyw\r\n?q\r\n",
                "0000100\r\n0001001\r\n0000000\r\n0000000\r\n0000000\r\n"
            ],
            [
                "10 10\r\nfwtoayylhw\r\nyyaryyjawr\r\nywrdzwhscy\r\nhnsyyxiphn\r\nbnjwzyyjvo\r\nkkjgseenwn\r\ngvmiflpcsy\r\nlxvkwrobwu\r\nwyybbcocyy\r\nyysijsvqry\r\n2 2\r\n??\r\nyy\r\n",
                "1000100000\r\n0000000001\r\n0001000000\r\n0000010000\r\n0000000000\r\n0000000000\r\n0000000000\r\n0100000010\r\n1000000001\r\n0000010000\r\n"
            ],
            [
                "8 6\r\nibrgxl\r\nxqdcsg\r\nokbcgi\r\ntvpetc\r\nxgxxig\r\nigghzo\r\nlmlaza\r\ngpswzv\r\n1 4\r\ngx??\r\n",
                "000100\r\n000001\r\n000000\r\n000000\r\n010001\r\n000000\r\n000000\r\n000000\r\n"
            ]
        ],
        "private_cases": [
            [
                "8 10\r\ncwcwcwcwcw\r\ncrcrcrcrcr\r\ncwcwcwcwcw\r\ncrcrcrcrcr\r\ncwcwcwcwcw\r\ncrcrcrcrcr\r\ncwcwcwcwcw\r\ncrcrcrcrcr\r\n12 14\r\n?????r??c?????\r\n?????w????cw?w\r\n??????cr????c?\r\nc?????c??????w\r\nc???????????c?\r\n??c?????cw????\r\n????c?c?c?????\r\nc?????????c???\r\nc?????c?????c?\r\n??????????c??w\r\n?r????c??r????\r\n???w?w??c???c?\r\n",
                "0000000000\r\n1010101010\r\n0000000000\r\n1010101010\r\n0000000000\r\n1010101010\r\n0000000000\r\n1010101010\r\n"
            ]
        ]
    }
]