[
    {
        "name": "Rooms and Staircases",
        "description": "Nikolay lives in a two-storied house. There are \n    n\n rooms on each floor,\narranged in a row and numbered from one from left to right. So each room can\nbe represented by the number of the floor and the number of the room on this\nfloor (room number is an integer between \n    1\n and \n    n\n). If Nikolay is\ncurrently in some room, he can move to any of the neighbouring rooms (if they\nexist). Rooms with numbers \n    i\n and \n    i+1\n on each floor are\nneighbouring, for all \n    1 \n    \u2264 i \n    \u2264 n - 1\n. There may also be\nstaircases that connect two rooms from different floors having the same\nnumbers. If there is a staircase connecting the room \n    x\n on the first\nfloor and the room \n    x\n on the second floor, then Nikolay can use it to\nmove from one room to another. The picture illustrates a house with \n    n =\n    4\n. There is a staircase between the room \n    2\n on the first floor and the\nroom \n    2\n on the second floor, and another staircase between the room\n\n    4\n on the first floor and the room \n    4\n on the second floor. The\narrows denote possible directions in which Nikolay can move. The picture\ncorresponds to the string \"0101\" in the input. Nikolay wants to move through\nsome rooms in his house. To do this, he firstly chooses any room where he\nstarts. Then Nikolay moves between rooms according to the aforementioned\nrules. Nikolay never visits the same room twice (he won't enter a room where\nhe has already been). Calculate the maximum number of rooms Nikolay can visit\nduring his tour, if: he can start in any room on any floor of his choice, and\nhe won't visit the same room twice. Input The first line of the input contains\none integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases in\nthe input. Then test cases follow. Each test case consists of two lines. The\nfirst line contains one integer \n    n\n \n    (1 \n    \u2264 n \n    \u2264 1\n     000)\n \u2014 the\nnumber of rooms on each floor. The second line contains one string consisting\nof \n    n\n characters, each character is either a '0' or a '1'. If the\n\n    i\n-th character is a '1', then there is a staircase between the room\n\n    i\n on the first floor and the room \n    i\n on the second floor. If the\n\n    i\n-th character is a '0', then there is no staircase between the room\n\n    i\n on the first floor and the room \n    i\n on the second floor. In hacks\nit is allowed to use only one test case in the input, so \n    t = 1\n should be\nsatisfied. Output For each test case print one integer \u2014 the maximum number of\nrooms Nikolay can visit during his tour, if he can start in any room on any\nfloor, and he won't visit the same room twice. Example Input 4 5 00100 8\n00000000 5 11111 3 110 Output 6 8 10 6 Note In the first test case Nikolay may\nstart in the first room of the first floor. Then he moves to the second room\non the first floor, and then \u2014 to the third room on the first floor. Then he\nuses a staircase to get to the third room on the second floor. Then he goes to\nthe fourth room on the second floor, and then \u2014 to the fifth room on the\nsecond floor. So, Nikolay visits \n    6\n rooms. There are no staircases in the\nsecond test case, so Nikolay can only visit all rooms on the same floor (if he\nstarts in the leftmost or in the rightmost room). In the third test case it is\npossible to visit all rooms: first floor, first room \n    \u2192\n\nsecond floor, first room \n    \u2192\n second floor, second room\n\n    \u2192\n first floor, second room \n    \u2192\n first floor,\nthird room \n    \u2192\n second floor, third room \n    \u2192\n\nsecond floor, fourth room \n    \u2192\n first floor, fourth room\n\n    \u2192\n first floor, fifth room \n    \u2192\n second floor,\nfifth room. In the fourth test case it is also possible to visit all rooms:\nsecond floor, third room \n    \u2192\n second floor, second room\n\n    \u2192\n second floor, first room \n    \u2192\n first floor,\nfirst room \n    \u2192\n first floor, second room \n    \u2192\n\nfirst floor, third room.\n\n",
        "cf_contest_id": 1244,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5\r\n00100\r\n8\r\n00000000\r\n5\r\n11111\r\n3\r\n110\r\n",
                "6\r\n8\r\n10\r\n6\r\n"
            ]
        ],
        "private_cases": [
            [
                "14\r\n1\r\n0\r\n1\r\n1\r\n2\r\n00\r\n2\r\n01\r\n2\r\n10\r\n2\r\n11\r\n3\r\n000\r\n3\r\n001\r\n3\r\n010\r\n3\r\n011\r\n3\r\n100\r\n3\r\n101\r\n3\r\n110\r\n3\r\n111\r\n",
                "1\r\n2\r\n2\r\n4\r\n4\r\n4\r\n3\r\n6\r\n4\r\n6\r\n6\r\n6\r\n6\r\n6\r\n"
            ],
            [
                "1\r\n100\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n",
                "100\r\n"
            ]
        ]
    }
]