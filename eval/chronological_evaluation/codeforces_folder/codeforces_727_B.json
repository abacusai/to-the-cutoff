[
    {
        "name": "Bill Total Value",
        "description": "Vasily exited from a store and now he wants to recheck the total price of all\npurchases in his bill. The bill is a string in which the names of the\npurchases and their prices are printed in a row without any spaces. Check has\nthe format \"name1price1name2price2...namenpricen\", where namei (name of the\ni-th purchase) is a non-empty string of length not more than 10, consisting of\nlowercase English letters, and pricei (the price of the i-th purchase) is a\nnon-empty string, consisting of digits and dots (decimal points). It is\npossible that purchases with equal names have different prices. The price of\neach purchase is written in the following format. If the price is an integer\nnumber of dollars then cents are not written. Otherwise, after the number of\ndollars a dot (decimal point) is written followed by cents in a two-digit\nformat (if number of cents is between 1 and 9 inclusively, there is a leading\nzero). Also, every three digits (from less significant to the most) in dollars\nare separated by dot (decimal point). No extra leading zeroes are allowed. The\nprice always starts with a digit and ends with a digit. For example: \"234\",\n\"1.544\", \"149.431.10\", \"0.99\" and \"123.05\" are valid prices, \".333\",\n\"3.33.11\", \"12.00\", \".33\", \"0.1234\" and \"1.2\" are not valid. Write a program\nthat will find the total price of all purchases in the given bill. Input The\nonly line of the input contains a non-empty string s with length not greater\nthan 1000 \u2014 the content of the bill. It is guaranteed that the bill meets the\nformat described above. It is guaranteed that each price in the bill is not\nless than one cent and not greater than 10^6 dollars. Output Print the total\nprice exactly in the same format as prices given in the input. Examples Input\nchipsy48.32televizor12.390 Output 12.438.32 Input a1b2c3.38 Output 6.38 Input\naa0.01t0.03 Output 0.04\n\n",
        "cf_contest_id": 727,
        "cf_index": "B",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "expression parsing",
            "implementation",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "chipsy48.32televizor12.390\r\n",
                "12.438.32"
            ],
            [
                "a1b2c3.38\r\n",
                "6.38"
            ],
            [
                "aa0.01t0.03\r\n",
                "0.04"
            ]
        ],
        "private_cases": [
            [
                "test0.50test0.50\r\n",
                "1"
            ],
            [
                "a500b500\r\n",
                "1.000"
            ],
            [
                "tcjbjlbtjf329.910\r\n",
                "329.910"
            ],
            [
                "iwpcfsmzen297.618.42ff585.209.84\r\n",
                "882.828.26"
            ],
            [
                "dpinb27.277fwxpdbfg709.917vocemjru16.491ade860.722tvb870.469.51wrpgy565.046gddrwv202.271.28\r\n",
                "3.252.193.79"
            ],
            [
                "vayscqiwpc686.919.75bwyudkz759.174kgqq444.563.54feupje806.486.78vojngmlc385.668.02jrkzbsa819.334b32.509wmjg980.332yh894.786hw356.243oiuueu662.016ychbsklfln21.860.87p836.999.94huhiiqlqoc596.917.99\r\n",
                "8.283.810.89"
            ],
            [
                "amhppqxei543.370.32o544.196nocwgxticn776.562nm212.195dcftrrg635.773n646.814.94vrfmjjsgoi405.114k821.983.12rb749.955.62jifmdlgs615.101hg42.083.41gdqififg908.729qrrgopyn684.451avcjul727.150s864.068bcd196.732.37jd349.984.25ghn379.763.11dw881.650.19eysthrm790.534.68gilg546.048qs648.876pdudevipn986.325jcwqq376.669.92qp169.861qyjguum254.785.35kcxgl820.940adtenavaj279.104naaxcl531.444.02jh478.042.53\r\n",
                "16.868.306.83"
            ],
            [
                "aasf0.01egfr0.50edfasdf0.99rwer999.999.99\r\n",
                "1.000.001.49"
            ],
            [
                "a1.01\r\n",
                "1.01"
            ],
            [
                "a0.11\r\n",
                "0.11"
            ],
            [
                "r0.30q0.10\r\n",
                "0.40"
            ],
            [
                "asd0.03sgbgfh0.27\r\n",
                "0.30"
            ],
            [
                "sadfa4.44f0.56\r\n",
                "5"
            ],
            [
                "tr999.999.99r0.01\r\n",
                "1.000.000"
            ],
            [
                "f999.999.99fsdf0.01wef1.10dfs2.90\r\n",
                "1.000.004"
            ],
            [
                "a0.01\r\n",
                "0.01"
            ],
            [
                "q999.10\r\n",
                "999.10"
            ],
            [
                "a0.40\r\n",
                "0.40"
            ],
            [
                "t999.000.01\r\n",
                "999.000.01"
            ],
            [
                "kapusta123.456\r\n",
                "123.456"
            ]
        ]
    }
]