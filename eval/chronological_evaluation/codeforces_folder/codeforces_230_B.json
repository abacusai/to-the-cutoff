[
    {
        "name": "T-primes",
        "description": "We know that prime numbers are positive integers that have exactly two\ndistinct positive divisors. Similarly, we'll call a positive integer t\n\u0422-prime, if t has exactly three distinct positive divisors. You are given an\narray of n positive integers. For each of them determine whether it is \u0422-prime\nor not. Input The first line contains a single positive integer, n (1 \u2264 n \u2264\n10^5), showing how many numbers are in the array. The next line contains n\nspace-separated integers xi (1 \u2264 xi \u2264 10^12). Please, do not use the \nspecifier to read or write 64-bit integers in \u0421++. It is advised to use the\ncin, cout streams or the \nshould contain \"YES\" (without the quotes), if number xi is \u0422-prime, and \"NO\"\n(without the quotes), if it isn't. Examples Input 3 4 5 6 Output YES NO NO\nNote The given test has three numbers. The first number 4 has exactly three\ndivisors \u2014 1, 2 and 4, thus the answer for this number is \"YES\". The second\nnumber 5 has two divisors (1 and 5), and the third number 6 has four divisors\n(1, 2, 3, 6), hence the answer for them is \"NO\".\n\n",
        "cf_contest_id": 230,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "implementation",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4 5 6\r\n",
                "YES\r\nNO \r\nNO \r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n48 49\r\n",
                "NO \r\nYES\r\n"
            ],
            [
                "10\r\n10 9 8 7 6 5 4 3 2 1\r\n",
                "NO \r\nYES\r\nNO \r\nNO \r\nNO \r\nNO \r\nYES\r\nNO \r\nNO \r\nNO \r\n"
            ],
            [
                "1\r\n36\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n999966000289\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n999993399999\r\n",
                "NO \r\n"
            ],
            [
                "9\r\n111 121 131 111 121 131 111 121 131\r\n",
                "NO \r\nYES\r\nNO \r\nNO \r\nYES\r\nNO \r\nNO \r\nYES\r\nNO \r\n"
            ],
            [
                "1\r\n1\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n10\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n976197352729\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n1000000000000\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n9\r\n",
                "YES\r\n"
            ],
            [
                "6\r\n549755813888 847288609443 762939453125 678223072849 285311670611 137858491849\r\n",
                "NO \r\nNO \r\nNO \r\nNO \r\nNO \r\nNO \r\n"
            ],
            [
                "3\r\n223092870 6469693230 200560490130\r\n",
                "NO \r\nNO \r\nNO \r\n"
            ],
            [
                "2\r\n81 25\r\n",
                "NO \r\nYES\r\n"
            ],
            [
                "1\r\n16\r\n",
                "NO \r\n"
            ],
            [
                "22\r\n1 2 3 4 5 6 7 8 9 10 12752041 64 121 144 27550356289 124 24657 23756 135153365 25235235235 42351351 81\r\n",
                "NO \r\nNO \r\nNO \r\nYES\r\nNO \r\nNO \r\nNO \r\nNO \r\nYES\r\nNO \r\nYES\r\nNO \r\nYES\r\nNO \r\nYES\r\nNO \r\nNO \r\nNO \r\nNO \r\nNO \r\nNO \r\nNO \r\n"
            ],
            [
                "1\r\n225\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n1521\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n81\r\n",
                "NO \r\n"
            ]
        ]
    }
]