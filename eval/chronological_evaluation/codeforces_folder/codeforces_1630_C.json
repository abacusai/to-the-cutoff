[
    {
        "name": "Paint the Middle",
        "description": "You are given \n    n\n elements numbered from \n    1\n to \n    n\n, the element\n\n    i\n has value \n    a_i\n and color \n    c_i\n, initially, \n    c_i = 0\n for\nall \n    i\n. The following operation can be applied: Select three elements\n\n    i\n, \n    j\n and \n    k\n (\n    1 \n    \u2264 i < j < k \n    \u2264 n\n), such that\n\n    c_i\n, \n    c_j\n and \n    c_k\n are all equal to \n    0\n and \n    a_i =\n    a_k\n, then set \n    c_j = 1\n. Find the maximum value of\n\n    \u2211\n    _i=1^nc_i\n that can be obtained after applying the\ngiven operation any number of times. Input The first line contains an integer\n\n    n\n (\n    3 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of elements. The\nsecond line consists of \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1\n    \n    \u2264 a_i \n    \u2264 n\n), where \n    a_i\n is the value of the \n    i\n-th\nelement. Output Print a single integer in a line \u2014 the maximum value of\n\n    \u2211\n    _i=1^nc_i\n that can be obtained after applying the\ngiven operation any number of times. Examples Input 7 1 2 1 2 7 4 7 Output 2\nInput 13 1 2 3 2 1 3 3 4 5 5 5 4 7 Output 7 Note In the first test, it is\npossible to apply the following operations in order:\n\n",
        "cf_contest_id": 1630,
        "cf_index": "C",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n1 2 1 2 7 4 7\r\n",
                "2"
            ],
            [
                "13\r\n1 2 3 2 1 3 3 4 5 5 5 4 7\r\n",
                "7"
            ]
        ],
        "private_cases": [
            [
                "3\r\n1 1 2\r\n",
                "0"
            ],
            [
                "3\r\n1 1 1\r\n",
                "1"
            ],
            [
                "3\r\n1 2 1\r\n",
                "1"
            ],
            [
                "3\r\n1 2 2\r\n",
                "0"
            ],
            [
                "3\r\n1 2 3\r\n",
                "0"
            ]
        ]
    }
]