[
    {
        "name": "Find Square",
        "description": "Consider a table of size \n    n \n    \u00d7 m\n, initially fully white. Rows are\nnumbered \n    1\n through \n    n\n from top to bottom, columns \n    1\n through\n\n    m\n from left to right. Some square inside the table with odd side length\nwas painted black. Find the center of this square. Input The first line\ncontains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 115\n) \u2014 the\nnumber of rows and the number of columns in the table. The \n    i\n-th of the\nnext \n    n\n lines contains a string of \n    m\n characters \n    s_i1 s_i2\n    \u2026 s_im\n (\n    s_ij\n is 'W' for white cells and 'B' for black\ncells), describing the \n    i\n-th row of the table. Output Output two integers\n\n    r\n and \n    c\n (\n    1 \n    \u2264 r \n    \u2264 n\n, \n    1 \n    \u2264 c \n    \u2264 m\n)\nseparated by a space \u2014 the row and column numbers of the center of the black\nsquare. Examples Input 5 6 WWBBBW WWBBBW WWBBBW WWWWWW WWWWWW Output 2 4 Input\n3 3 WWW BWW WWW Output 2 1\n\n",
        "cf_contest_id": 1028,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 6\r\nWWBBBW\r\nWWBBBW\r\nWWBBBW\r\nWWWWWW\r\nWWWWWW\r\n",
                "2 4"
            ],
            [
                "3 3\r\nWWW\r\nBWW\r\nWWW\r\n",
                "2 1"
            ]
        ],
        "private_cases": [
            [
                "5 5\r\nWWWWW\r\nWBBBW\r\nWBBBW\r\nWBBBW\r\nWWWWW\r\n",
                "3 3"
            ],
            [
                "3 3\r\nBBB\r\nBBB\r\nBBB\r\n",
                "2 2"
            ],
            [
                "3 3\r\nWBW\r\nWWW\r\nWWW\r\n",
                "1 2"
            ],
            [
                "3 3\r\nWWB\r\nWWW\r\nWWW\r\n",
                "1 3"
            ],
            [
                "3 3\r\nWWW\r\nWBW\r\nWWW\r\n",
                "2 2"
            ],
            [
                "3 3\r\nWWW\r\nWWB\r\nWWW\r\n",
                "2 3"
            ],
            [
                "3 3\r\nWWW\r\nWWW\r\nBWW\r\n",
                "3 1"
            ],
            [
                "3 3\r\nWWW\r\nWWW\r\nWBW\r\n",
                "3 2"
            ],
            [
                "3 3\r\nWWW\r\nWWW\r\nWWB\r\n",
                "3 3"
            ],
            [
                "1 89\r\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\r\n",
                "1 45"
            ],
            [
                "96 1\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nB\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\nW\r\n",
                "89 1"
            ],
            [
                "1 1\r\nB\r\n",
                "1 1"
            ],
            [
                "3 3\r\nBWW\r\nWWW\r\nWWW\r\n",
                "1 1"
            ],
            [
                "2 3\r\nWWB\r\nWWW\r\n",
                "1 3"
            ],
            [
                "3 5\r\nWWWWW\r\nWWWWW\r\nWWWWB\r\n",
                "3 5"
            ],
            [
                "1 1\r\nB\r\n",
                "1 1"
            ],
            [
                "1 5\r\nWWWWB\r\n",
                "1 5"
            ],
            [
                "3 3\r\nWWW\r\nWBW\r\nWWW\r\n",
                "2 2"
            ],
            [
                "7 7\r\nBBBBBWW\r\nBBBBBWW\r\nBBBBBWW\r\nBBBBBWW\r\nBBBBBWW\r\nWWWWWWW\r\nWWWWWWW\r\n",
                "3 3"
            ],
            [
                "3 4\r\nWBBB\r\nWBBB\r\nWBBB\r\n",
                "2 3"
            ],
            [
                "5 9\r\nWWWWBBBBB\r\nWWWWBBBBB\r\nWWWWBBBBB\r\nWWWWBBBBB\r\nWWWWBBBBB\r\n",
                "3 7"
            ],
            [
                "4 9\r\nWWWWWWBBB\r\nWWWWWWBBB\r\nWWWWWWBBB\r\nWWWWWWWWW\r\n",
                "2 8"
            ],
            [
                "5 12\r\nWWWWWWWBBBBB\r\nWWWWWWWBBBBB\r\nWWWWWWWBBBBB\r\nWWWWWWWBBBBB\r\nWWWWWWWBBBBB\r\n",
                "3 10"
            ],
            [
                "3 10\r\nWWWWWWWBBB\r\nWWWWWWWBBB\r\nWWWWWWWBBB\r\n",
                "2 9"
            ],
            [
                "7 7\r\nWWWWWWW\r\nWWWWWWW\r\nWWWWWWW\r\nWWWWBWW\r\nWWWWWWW\r\nWWWWWWW\r\nWWWWWWW\r\n",
                "4 5"
            ],
            [
                "1 4\r\nWWBW\r\n",
                "1 3"
            ],
            [
                "5 1\r\nW\r\nW\r\nB\r\nW\r\nW\r\n",
                "3 1"
            ],
            [
                "5 10\r\nWWWWWWBBBW\r\nWWWWWWBBBW\r\nWWWWWWBBBW\r\nWWWWWWWWWW\r\nWWWWWWWWWW\r\n",
                "2 8"
            ]
        ]
    }
]