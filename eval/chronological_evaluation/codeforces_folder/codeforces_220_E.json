[
    {
        "name": "Little Elephant and Inversions",
        "description": "The Little Elephant has array a, consisting of n positive integers, indexed\nfrom 1 to n. Let's denote the number with index i as ai. The Little Elephant\nwants to count, how many pairs of integers l and r are there, such that 1 \u2264 l\n< r \u2264 n and sequence b = a1a2... alarar + 1... an has no more than k\ninversions. An inversion in sequence b is a pair of elements of the sequence\nb, that change their relative order after a stable sorting of the sequence. In\nother words, an inversion is a pair of integers i and j, such that 1 \u2264 i < j \u2264\n|b| and bi > bj, where |b| is the length of sequence b, and bj is its j-th\nelement. Help the Little Elephant and count the number of the described pairs.\nInput The first line contains two integers n and k (2 \u2264 n \u2264 10^5, 0 \u2264 k \u2264\n10^18) \u2014 the size of array a and the maximum allowed number of inversions\nrespectively. The next line contains n positive integers, separated by single\nspaces, a1, a2, ..., an (1 \u2264 ai \u2264 10^9) \u2014 elements of array a. Please, do not\nuse the \npreferred to use cin, cout streams or the \nline print a single number \u2014 the answer to the problem. Examples Input 3 1 1 3\n2 Output 3 Input 5 2 1 3 2 1 7 Output 6\n\n",
        "cf_contest_id": 220,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 1\r\n1 3 2\r\n",
                "3\r\n"
            ],
            [
                "5 2\r\n1 3 2 1 7\r\n",
                "6\r\n"
            ]
        ],
        "private_cases": [
            [
                "7 3\r\n1 7 6 4 9 5 3\r\n",
                "6\r\n"
            ],
            [
                "5 0\r\n1 2 3 4 5\r\n",
                "10\r\n"
            ],
            [
                "2 1\r\n2 1\r\n",
                "1\r\n"
            ],
            [
                "3 1000000000000\r\n3 2 1\r\n",
                "3\r\n"
            ],
            [
                "10 5\r\n1 4 4 2 3 7 6 5 1 2\r\n",
                "10\r\n"
            ],
            [
                "10 10\r\n7 5 5 5 9 10 9 8 7 5\r\n",
                "22\r\n"
            ],
            [
                "7 1\r\n10 38 46 40 88 5 94\r\n",
                "6\r\n"
            ],
            [
                "20 7\r\n5 10 23 7 24 7 15 11 13 18 18 18 8 20 5 16 7 25 2 22\r\n",
                "17\r\n"
            ],
            [
                "40 1000000000000000000\r\n83 35 47 18 96 63 24 91 15 100 40 23 20 34 65 22 52 87 55 19 11 73 45 28 60 61 24 42 30 43 65 75 31 84 100 12 69 98 49 25\r\n",
                "780\r\n"
            ],
            [
                "74 9\r\n23 15 38 22 47 8 2 38 17 3 39 10 33 26 19 27 11 15 42 18 44 22 47 44 18 29 25 6 4 44 12 44 30 26 5 41 18 6 17 15 40 28 44 37 27 32 31 13 1 13 3 19 39 3 27 23 25 27 30 31 14 42 31 3 1 26 40 42 26 33 43 11 33 15\r\n",
                "15\r\n"
            ],
            [
                "100 25\r\n457 226 629 226 147 284 72 23 247 76 972 829 173 591 581 373 533 474 521 219 181 278 890 27 345 478 595 678 971 157 776 156 970 955 584 786 692 774 228 459 118 419 671 24 128 76 677 66 923 800 870 124 420 528 609 131 88 118 19 807 288 973 896 305 268 486 830 149 529 399 894 71 101 971 620 671 367 206 252 103 905 528 429 185 768 103 407 371 376 807 638 44 193 835 134 542 47 50 238 668\r\n",
                "45\r\n"
            ],
            [
                "128 1\r\n96 56 71 72 37 31 41 55 63 79 64 59 32 8 55 17 25 97 11 38 100 76 80 99 1 17 23 8 42 33 28 86 60 10 11 7 93 49 96 90 2 94 21 53 88 39 64 81 8 55 67 42 69 79 9 13 66 72 36 3 10 61 15 56 6 75 63 87 87 49 71 22 74 7 53 52 17 13 97 69 69 31 66 14 72 84 18 59 61 1 96 86 61 52 73 7 13 59 66 83 19 88 25 59 12 28 61 100 20 54 25 14 27 18 89 23 8 24 2 50 70 32 100 58 76 90 91 78\r\n",
                "1\r\n"
            ],
            [
                "50 1000000000\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "1225\r\n"
            ],
            [
                "6 10\r\n4 3 2 4 1 1\r\n",
                "10\r\n"
            ],
            [
                "2 2\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "2 0\r\n2 1\r\n",
                "0\r\n"
            ]
        ]
    }
]