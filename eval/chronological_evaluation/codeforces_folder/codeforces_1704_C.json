[
    {
        "name": "Virus",
        "description": "There are \n    n\n houses numbered from \n    1\n to \n    n\n on a circle. For\neach \n    1 \n    \u2264 i \n    \u2264 n - 1\n, house \n    i\n and house \n    i + 1\n are\nneighbours; additionally, house \n    n\n and house \n    1\n are also neighbours.\nInitially, \n    m\n of these \n    n\n houses are infected by a deadly virus.\nEach morning, Cirno can choose a house which is uninfected and protect the\nhouse from being infected permanently. Every day, the following things happen\nin order: Cirno chooses an uninfected house, and protect it permanently. All\nuninfected, unprotected houses which have at least one infected neighbor\nbecome infected. Cirno wants to stop the virus from spreading. Find the\nminimum number of houses that will be infected in the end, if she optimally\nchoose the houses to protect. Note that every day Cirno always chooses a house\nto protect before the virus spreads. Also, a protected house will not be\ninfected forever. Input The input consists of multiple test cases. The first\nline contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the\nnumber of test cases. Description of test cases follows. The first line of\neach test case consists of two positive integers \n    n, m\n (\n    5 \n    \u2264 n\n    \n    \u2264 10^9\n, \n    1 \n    \u2264 m \n    \u2264\n    min(n, 10^5)\n) \u2014 the number of\nhouses on the circle, and the number of houses that are initially infected.\nThe second line of each test case consists of \n    m\n distinct positive\nintegers \n    a_1, a_2, \n    \u22ef , a_m\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) \u2014 the\nindices of the houses infected initially. It is guaranteed that the sum of\n\n    m\n over all test cases does not exceed \n    10^5\n. Output For each test\ncase, output an integer on a separate line, which is the minimum number of\ninfected houses in the end. Example Input 8 10 3 3 6 8 6 2 2 5 20 3 3 7 12 41\n5 1 11 21 31 41 10 5 2 4 6 8 10 5 5 3 2 5 4 1 1000000000 1 1 1000000000 4 1\n1000000000 10 16 Output 7 5 11 28 9 5 2 15 Note In the first test case: At the\nstart of the first day, house \n    3\n, \n    6\n, \n    8\n are infected. Choose\nhouse \n    2\n to protect. At the start of the second day, house \n    3\n,\n\n    4\n, \n    5\n, \n    6\n, \n    7\n, \n    8\n, \n    9\n are infected. Choose\nhouse \n    10\n to protect. At the start of the third day, no more houses are\ninfected. In the second test case: At the start of the first day, house\n\n    2\n, \n    5\n are infected. Choose house \n    1\n to protect. At the start\nof the second day, house \n    2\n, \n    3\n, \n    4\n, \n    5\n, \n    6\n are\ninfected. No more available houses can be protected.\n\n",
        "cf_contest_id": 1704,
        "cf_index": "C",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8\r\n10 3\r\n3 6 8\r\n6 2\r\n2 5\r\n20 3\r\n3 7 12\r\n41 5\r\n1 11 21 31 41\r\n10 5\r\n2 4 6 8 10\r\n5 5\r\n3 2 5 4 1\r\n1000000000 1\r\n1\r\n1000000000 4\r\n1 1000000000 10 16\r\n",
                "7\r\n5\r\n11\r\n28\r\n9\r\n5\r\n2\r\n15\r\n"
            ]
        ],
        "private_cases": []
    }
]