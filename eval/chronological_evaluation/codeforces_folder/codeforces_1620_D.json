[
    {
        "name": "Exact Change",
        "description": "One day, early in the morning, you decided to buy yourself a bag of chips in\nthe nearby store. The store has chips of \n    n\n different flavors. A bag of\nthe \n    i\n-th flavor costs \n    a_i\n burles. The store may run out of some\nflavors, so you'll decide which one to buy after arriving there. But there are\ntwo major flaws in this plan: you have only coins of \n    1\n, \n    2\n and\n\n    3\n burles; since it's morning, the store will ask you to pay in exact\nchange, i. e. if you choose the \n    i\n-th flavor, you'll have to pay exactly\n\n    a_i\n burles. Coins are heavy, so you'd like to take the least possible\nnumber of coins in total. That's why you are wondering: what is the minimum\ntotal number of coins you should take with you, so you can buy a bag of chips\nof any flavor in exact change? Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The first\nline of each test case contains the single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    100\n) \u2014 the number of flavors in the store. The second line of each test\ncase contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 10^9\n) \u2014 the cost of one bag of each flavor. Output For each test\ncase, print one integer \u2014 the minimum number of coins you need to buy one bag\nof any flavor you'll choose in exact change. Example Input 4 1 1337 3 10 8 10\n5 1 2 3 4 5 3 7 77 777 Output 446 4 3 260 Note In the first test case, you\nshould, for example, take with you \n    445\n coins of value \n    3\n and\n\n    1\n coin of value \n    2\n. So, \n    1337 = 445 \n    \u00b7 3 + 1 \n    \u00b7 2\n.\nIn the second test case, you should, for example, take \n    2\n coins of value\n\n    3\n and \n    2\n coins of value \n    2\n. So you can pay either exactly \n    8\n    = 2 \n    \u00b7 3 + 1 \n    \u00b7 2\n or \n    10 = 2 \n    \u00b7 3 + 2 \n    \u00b7 2\n. In the\nthird test case, it's enough to take \n    1\n coin of value \n    3\n and \n    2\n\ncoins of value \n    1\n.\n\n",
        "cf_contest_id": 1620,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1\r\n1337\r\n3\r\n10 8 10\r\n5\r\n1 2 3 4 5\r\n3\r\n7 77 777\r\n",
                "446\r\n4\r\n3\r\n260\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n6006\r\n",
                "2002\r\n"
            ]
        ]
    }
]