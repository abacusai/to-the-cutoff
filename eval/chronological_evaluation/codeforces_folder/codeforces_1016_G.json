[
    {
        "name": "Appropriate Team",
        "description": "Since next season are coming, you'd like to form a team from two or three\nparticipants. There are \n    n\n candidates, the \n    i\n-th candidate has rank\n\n    a_i\n. But you have weird requirements for your teammates: if you have\nrank \n    v\n and have chosen the \n    i\n-th and \n    j\n-th candidate, then\n\n    GCD(v, a_i) = X\n and \n    LCM(v, a_j) = Y\n must be met. You are very\nexperienced, so you can change your rank to any non-negative integer but\n\n    X\n and \n    Y\n are tied with your birthdate, so they are fixed. Now you\nwant to know, how many are there pairs \n    (i, j)\n such that there exists an\ninteger \n    v\n meeting the following constraints: \n    GCD(v, a_i) = X\n and\n\n    LCM(v, a_j) = Y\n. It's possible that \n    i = j\n and you form a team of\ntwo. \n    GCD\n is the greatest common divisor of two number, \n    LCM\n \u2014 the\nleast common multiple. Input First line contains three integers \n    n\n,\n\n    X\n and \n    Y\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    1 \n    \u2264 X \n    \u2264\n    Y \n    \u2264 10^18\n) \u2014 the number of candidates and corresponding constants.\nSecond line contains \n    n\n space separated integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^18\n) \u2014 ranks of candidates. Output Print\nthe only integer \u2014 the number of pairs \n    (i, j)\n such that there exists an\ninteger \n    v\n meeting the following constraints: \n    GCD(v, a_i) = X\n and\n\n    LCM(v, a_j) = Y\n. It's possible that \n    i = j\n. Examples Input 12 2 2 1\n2 3 4 5 6 7 8 9 10 11 12 Output 12 Input 12 1 6 1 3 5 7 9 11 12 10 8 6 4 2\nOutput 30 Note In the first example next pairs are valid: \n    a_j = 1\n and\n\n    a_i = [2, 4, 6, 8, 10, 12]\n or \n    a_j = 2\n and \n    a_i = [2, 4, 6, 8,\n    10, 12]\n. The \n    v\n in both cases can be equal to \n    2\n. In the second\nexample next pairs are valid: \n    a_j = 1\n and \n    a_i = [1, 5, 7, 11]\n;\n\n    a_j = 2\n and \n    a_i = [1, 5, 7, 11, 10, 8, 4, 2]\n; \n    a_j = 3\n and\n\n    a_i = [1, 3, 5, 7, 9, 11]\n; \n    a_j = 6\n and \n    a_i = [1, 3, 5, 7, 9,\n    11, 12, 10, 8, 6, 4, 2]\n.\n\n",
        "cf_contest_id": 1016,
        "cf_index": "G",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "12 2 2\r\n1 2 3 4 5 6 7 8 9 10 11 12\r\n",
                "12"
            ],
            [
                "12 1 6\r\n1 3 5 7 9 11 12 10 8 6 4 2\r\n",
                "30"
            ]
        ],
        "private_cases": [
            [
                "2 999999999999999999 1000000000000000000\r\n12345678910 111213141516\r\n",
                "0\r\n"
            ],
            [
                "10 3 9\r\n9 9 9 9 9 9 9 9 9 9\r\n",
                "100"
            ],
            [
                "1 1 6\r\n3\r\n",
                "1"
            ],
            [
                "10 3 7\r\n14 13 12 9 2 14 10 7 4 16\r\n",
                "0\r\n"
            ],
            [
                "10 5 8\r\n11 15 13 6 5 2 10 9 3 4\r\n",
                "0\r\n"
            ],
            [
                "10 3 8\r\n17 12 7 15 5 10 5 12 7 8\r\n",
                "0\r\n"
            ],
            [
                "10 7 10\r\n11 10 20 8 4 18 1 14 6 7\r\n",
                "0\r\n"
            ],
            [
                "10 1 9\r\n20 20 18 4 3 6 4 16 10 15\r\n",
                "6"
            ]
        ]
    }
]