[
    {
        "name": "Two Elevators",
        "description": "Vlad went into his appartment house entrance, now he is on the \n    1\n-th\nfloor. He was going to call the elevator to go up to his apartment. There are\nonly two elevators in his house. Vlad knows for sure that: the first elevator\nis currently on the floor \n    a\n (it is currently motionless), the second\nelevator is located on floor \n    b\n and goes to floor \n    c\n (\n    b \n    \n    c\n). Please note, if \n    b=1\n, then the elevator is already leaving the\nfloor \n    1\n and Vlad does not have time to enter it. If you call the first\nelevator, it will immediately start to go to the floor \n    1\n. If you call\nthe second one, then first it will reach the floor \n    c\n and only then it\nwill go to the floor \n    1\n. It takes \n    |x - y|\n seconds for each elevator\nto move from floor \n    x\n to floor \n    y\n. Vlad wants to call an elevator\nthat will come to him faster. Help him choose such an elevator. Input The\nfirst line of the input contains the only \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n)\n\u2014 the number of test cases. This is followed by \n    t\n lines, three integers\neach \n    a\n, \n    b\n and \n    c\n (\n    1 \n    \u2264 a, b, c \n    \u2264 10^8\n, \n    b\n    \n     c\n) \u2014 floor numbers described in the statement. Output Output \n    t\n\nnumbers, each of which is the answer to the corresponding test case. As an\nanswer, output: \n    1\n, if it is better to call the first elevator; \n    2\n,\nif it is better to call the second one; \n    3\n, if it doesn't matter which\nelevator to call (both elevators will arrive in the same time). Example Input\n3 1 2 3 3 1 2 3 2 1 Output 1 3 2 Note In the first test case of the example,\nthe first elevator is already on the floor of \n    1\n. In the second test case\nof the example, when called, the elevators would move as follows: At the time\nof the call, the first elevator is on the floor of \n    3\n, and the second one\nis on the floor of \n    1\n, but is already going to another floor; in \n    1\n\nsecond after the call, the first elevator would be on the floor \n    2\n, the\nsecond one would also reach the floor \n    2\n and now can go to the floor\n\n    1\n; in \n    2\n seconds, any elevator would reach the floor \n    1\n. In\nthe third test case of the example, the first elevator will arrive in \n    2\n\nseconds, and the second in \n    1\n.\n\n",
        "cf_contest_id": 1729,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n",
                "1\r\n3\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1902 3 5\r\n",
                "2\r\n"
            ],
            [
                "1\r\n2001 1 2\r\n",
                "2\r\n"
            ],
            [
                "1\r\n2001 1 3\r\n",
                "2\r\n"
            ],
            [
                "1\r\n5086 5607 4560\r\n",
                "1\r\n"
            ],
            [
                "1\r\n5086 1 2\r\n",
                "2\r\n"
            ],
            [
                "4\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n5080 1000 500\r\n",
                "1\r\n3\r\n2\r\n2\r\n"
            ],
            [
                "1\r\n2002 1 2\r\n",
                "2\r\n"
            ],
            [
                "1\r\n2003 3 2\r\n",
                "2\r\n"
            ],
            [
                "69\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n1 2 3\r\n3 1 2\r\n3 2 1\r\n",
                "1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n1\r\n3\r\n2\r\n"
            ],
            [
                "1\r\n2002 2 3\r\n",
                "2\r\n"
            ]
        ]
    }
]