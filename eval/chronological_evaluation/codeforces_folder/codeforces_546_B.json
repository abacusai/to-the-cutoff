[
    {
        "name": "Soldier and Badges",
        "description": "Colonel has n badges. He wants to give one badge to every of his n soldiers.\nEach badge has a coolness factor, which shows how much it's owner reached.\nCoolness factor can be increased by one for the cost of one coin. For every\npair of soldiers one of them should get a badge with strictly higher factor\nthan the second one. Exact values of their factors aren't important, they just\nneed to have distinct factors. Colonel knows, which soldier is supposed to get\nwhich badge initially, but there is a problem. Some of badges may have the\nsame factor of coolness. Help him and calculate how much money has to be paid\nfor making all badges have different factors of coolness. Input First line of\ninput consists of one integer n (1 \u2264 n \u2264 3000). Next line consists of n\nintegers ai (1 \u2264 ai \u2264 n), which stand for coolness factor of each badge.\nOutput Output single integer \u2014 minimum amount of coins the colonel has to pay.\nExamples Input 4 1 3 1 4 Output 1 Input 5 1 2 3 2 5 Output 2 Note In first\nsample test we can increase factor of first badge by 1. In second sample test\nwe can increase factors of the second and the third badge by 1.\n\n",
        "cf_contest_id": 546,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 3 1 4\r\n",
                "1\r\n"
            ],
            [
                "5\r\n1 2 3 2 5\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n1 5 3 2 4\r\n",
                "0\r\n"
            ],
            [
                "10\r\n1 1 2 3 4 5 6 7 8 9\r\n",
                "9\r\n"
            ],
            [
                "11\r\n9 2 10 3 1 5 7 1 4 8 6\r\n",
                "10\r\n"
            ],
            [
                "4\r\n4 3 2 2\r\n",
                "3\r\n"
            ],
            [
                "1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "50\r\n49 37 30 2 18 48 14 48 50 27 1 43 46 5 21 28 44 2 24 17 41 38 25 18 43 28 25 21 28 23 26 27 4 31 50 18 23 11 13 28 44 47 1 26 43 25 22 46 32 45\r\n",
                "170\r\n"
            ],
            [
                "50\r\n37 31 19 46 45 1 9 37 15 19 15 10 17 16 38 13 26 25 36 13 7 21 12 41 46 19 3 50 14 49 49 40 29 41 47 29 3 42 13 21 10 21 9 33 38 30 24 40 5 26\r\n",
                "135\r\n"
            ],
            [
                "50\r\n18 13 50 12 23 29 31 44 28 29 33 31 17 38 27 37 36 34 40 4 27 2 8 27 50 27 21 28 11 13 47 25 15 26 9 15 22 3 22 45 9 12 5 5 46 44 23 34 12 25\r\n",
                "138\r\n"
            ],
            [
                "50\r\n24 44 39 44 11 20 6 43 4 21 43 12 41 3 25 25 24 7 16 36 32 2 2 29 34 30 33 9 18 3 14 28 26 49 29 5 5 36 44 21 36 37 1 25 46 10 10 24 10 39\r\n",
                "128\r\n"
            ],
            [
                "50\r\n7 5 18 2 7 12 8 20 41 4 7 3 7 10 22 1 19 9 20 10 23 3 6 3 30 13 6 18 3 3 18 38 9 7 2 1 2 5 25 10 13 1 8 34 1 26 13 8 13 2\r\n",
                "699\r\n"
            ],
            [
                "50\r\n2 19 24 3 12 4 14 9 10 19 6 1 26 6 11 1 4 34 17 1 3 35 17 2 17 17 5 5 12 1 24 35 2 5 43 23 21 4 18 3 11 5 1 21 3 3 3 1 10 10\r\n",
                "692\r\n"
            ],
            [
                "50\r\n2 2 4 19 5 7 2 35 3 12 1 18 17 16 40 4 15 36 1 11 13 3 14 1 4 10 1 12 43 7 9 9 4 3 28 9 12 12 1 33 3 23 11 24 20 20 2 4 26 4\r\n",
                "660\r\n"
            ],
            [
                "50\r\n5 3 25 6 30 6 39 15 3 19 1 38 1 3 17 3 8 13 4 10 14 3 2 3 20 1 21 21 27 31 6 6 14 28 3 13 49 8 12 6 17 13 45 1 6 18 12 7 31 14\r\n",
                "574\r\n"
            ],
            [
                "50\r\n10 25 27 13 28 35 40 39 3 6 18 29 44 1 26 2 45 36 9 46 41 12 33 19 8 22 15 48 34 20 11 32 1 47 43 23 7 5 14 30 31 21 38 42 24 49 4 37 16 17\r\n",
                "49\r\n"
            ],
            [
                "50\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "1225\r\n"
            ],
            [
                "50\r\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\r\n",
                "1225\r\n"
            ],
            [
                "3\r\n1 3 3\r\n",
                "1\r\n"
            ],
            [
                "10\r\n4 4 4 4 4 4 5 5 5 5\r\n",
                "41\r\n"
            ],
            [
                "4\r\n1 4 4 4\r\n",
                "3\r\n"
            ],
            [
                "3\r\n1 1 1\r\n",
                "3\r\n"
            ],
            [
                "3\r\n3 3 3\r\n",
                "3\r\n"
            ]
        ]
    }
]