[
    {
        "name": "Product Sum",
        "description": "Blake is the boss of Kris, however, this doesn't spoil their friendship. They\noften gather at the bar to talk about intriguing problems about maximising\nsome values. This time the problem is really special. You are given an array a\nof length n. The characteristic of this array is the value \u2014 the sum of the\nproducts of the values ai by i. One may perform the following operation\nexactly once: pick some element of the array and move to any position. In\nparticular, it's allowed to move the element to the beginning or to the end of\nthe array. Also, it's allowed to put it back to the initial position. The goal\nis to get the array with the maximum possible value of characteristic. Input\nThe first line of the input contains a single integer n (2 \u2264 n \u2264 200 000) \u2014\nthe size of the array a. The second line contains n integers ai (1 \u2264 i \u2264 n,\n|ai| \u2264 1 000 000) \u2014 the elements of the array a. Output Print a single integer\n\u2014 the maximum possible value of characteristic of a that can be obtained by\nperforming no more than one move. Examples Input 4 4 3 2 5 Output 39 Input 5 1\n1 2 7 1 Output 49 Input 3 1 1 2 Output 9 Note In the first sample, one may\npick the first element and place it before the third (before 5). Thus, the\nanswer will be 3\u00b71 + 2\u00b72 + 4\u00b73 + 5\u00b74 = 39. In the second sample, one may pick\nthe fifth element of the array and place it before the third. The answer will\nbe 1\u00b71 + 1\u00b72 + 1\u00b73 + 2\u00b74 + 7\u00b75 = 49.\n\n",
        "cf_contest_id": 631,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "geometry"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n4 3 2 5\r\n",
                "39"
            ],
            [
                "5\r\n1 1 2 7 1\r\n",
                "49"
            ],
            [
                "3\r\n1 1 2\r\n",
                "9"
            ]
        ],
        "private_cases": [
            [
                "5\r\n1 2 3 4 5\r\n",
                "55"
            ],
            [
                "5\r\n-1 -2 -3 -4 -5\r\n",
                "-45"
            ],
            [
                "4\r\n0 0 0 0\r\n",
                "0"
            ],
            [
                "7\r\n0 0 0 -1 0 0 0\r\n",
                "-1"
            ],
            [
                "2\r\n1000000 -1000000\r\n",
                "1000000"
            ],
            [
                "2\r\n1 1\r\n",
                "3"
            ],
            [
                "2\r\n-1 -1\r\n",
                "-3"
            ],
            [
                "2\r\n-1000000 1000000\r\n",
                "1000000"
            ],
            [
                "2\r\n0 0\r\n",
                "0"
            ],
            [
                "4\r\n2 1 3 4\r\n",
                "30"
            ],
            [
                "5\r\n1 2 5 4 5\r\n",
                "62"
            ],
            [
                "4\r\n2 3 4 1\r\n",
                "30"
            ],
            [
                "4\r\n4 1 2 3\r\n",
                "30"
            ],
            [
                "6\r\n5 7 11 83 14 999\r\n",
                "6517"
            ],
            [
                "4\r\n87 213 141 1\r\n",
                "1378"
            ]
        ]
    }
]