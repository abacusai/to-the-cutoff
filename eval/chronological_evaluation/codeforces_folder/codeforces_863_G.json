[
    {
        "name": "Graphic Settings",
        "description": "Recently Ivan bought a new computer. Excited, he unpacked it and installed his\nfavourite game. With his old computer Ivan had to choose the worst possible\ngraphic settings (because otherwise the framerate would be really low), but\nnow he wants to check, maybe his new computer can perform well even with the\nbest possible graphics? There are m graphics parameters in the game. i-th\nparameter can be set to any positive integer from 1 to ai, and initially is\nset to bi (bi \u2264 ai). So there are different combinations of parameters. Ivan\ncan increase or decrease any of these parameters by 1; after that the game\nwill be restarted with new parameters (and Ivan will have the opportunity to\ncheck chosen combination of parameters). Ivan wants to try all p possible\ncombinations. Also he wants to return to the initial settings after trying all\ncombinations, because he thinks that initial settings can be somehow best\nsuited for his hardware. But Ivan doesn't really want to make a lot of\nrestarts. So he wants you to tell the following: If there exists a way to make\nexactly p changes (each change either decreases or increases some parameter by\n1) to try all possible combinations and return to initial combination, then\nIvan wants to know this way. Otherwise, if there exists a way to make exactly\np - 1 changes to try all possible combinations (including the initial one),\nthen Ivan wants to know this way. Help Ivan by showing him the way to change\nparameters! Input The first line of input contains one integer number m (1 \u2264 m\n\u2264 6). The second line contains m integer numbers a1, a2, ..., am (2 \u2264 ai \u2264\n1000). It is guaranteed that . The third line contains m integer numbers b1,\nb2, ..., bm (1 \u2264 bi \u2264 ai). Output If there is a way to make exactly p changes\n(each change either decreases or increases some parameter by 1) to try all\npossible combinations and return to initial combination, then output Cycle in\nthe first line. Then p lines must follow, each desribing a change. The line\nmust be either inc x (increase parameter x by 1) or dec x (decrease it).\nOtherwise, if there is a way to make exactly p - 1 changes to try all possible\ncombinations (including the initial one), then output Path in the first line.\nThen p - 1 lines must follow, each describing the change the same way as\nmentioned above. Otherwise, output No. Examples Input 1 3 1 Output Path inc 1\ninc 1 Input 1 3 2 Output No Input 2 3 2 1 1 Output Cycle inc 1 inc 1 inc 2 dec\n1 dec 1 dec 2\n\n",
        "cf_contest_id": 863,
        "cf_index": "G",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n3\r\n1\r\n",
                "Path\r\ninc 1\r\ninc 1\r\n"
            ],
            [
                "1\r\n3\r\n2\r\n",
                "No\r\n"
            ],
            [
                "2\r\n3 2\r\n1 1\r\n",
                "Cycle\r\ninc 1\r\ninc 1\r\ninc 2\r\ndec 1\r\ndec 1\r\ndec 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n2 2\r\n1 1\r\n",
                "Cycle\r\ninc 2\r\ninc 1\r\ndec 2\r\ndec 1\r\n"
            ],
            [
                "3\r\n2 2 2\r\n1 1 1\r\n",
                "Cycle\r\ninc 2\r\ninc 3\r\ndec 2\r\ninc 1\r\ninc 2\r\ndec 3\r\ndec 2\r\ndec 1\r\n"
            ],
            [
                "3\r\n2 3 2\r\n1 1 2\r\n",
                "Cycle\r\ninc 1\r\ninc 2\r\ninc 2\r\ndec 3\r\ndec 2\r\ndec 2\r\ndec 1\r\ninc 2\r\ninc 2\r\ninc 3\r\ndec 2\r\ndec 2\r\n"
            ],
            [
                "4\r\n5 9 7 3\r\n4 2 4 3\r\n",
                "No\r\n"
            ],
            [
                "6\r\n2 2 2 2 2 2\r\n1 1 1 1 1 1\r\n",
                "Cycle\r\ninc 2\r\ninc 3\r\ndec 2\r\ninc 4\r\ninc 2\r\ndec 3\r\ndec 2\r\ninc 5\r\ninc 2\r\ninc 3\r\ndec 2\r\ndec 4\r\ninc 2\r\ndec 3\r\ndec 2\r\ninc 6\r\ninc 2\r\ninc 3\r\ndec 2\r\ninc 4\r\ninc 2\r\ndec 3\r\ndec 2\r\ndec 5\r\ninc 2\r\ninc 3\r\ndec 2\r\ndec 4\r\ninc 2\r\ndec 3\r\ndec 2\r\ninc 1\r\ninc 2\r\ninc 3\r\ndec 2\r\ninc 4\r\ninc 2\r\ndec 3\r\ndec 2\r\ninc 5\r\ninc 2\r\ninc 3\r\ndec 2\r\ndec 4\r\ninc 2\r\ndec 3\r\ndec 2\r\ndec 6\r\ninc 2\r\ninc 3\r\ndec 2\r\ninc 4\r\ninc 2\r\ndec 3\r\ndec 2\r\ndec 5\r\ninc 2\r\ninc 3\r\ndec 2\r\ndec 4\r\ninc 2\r\ndec 3\r\ndec 2\r\ndec 1\r\n"
            ],
            [
                "6\r\n3 3 3 3 3 3\r\n1 2 1 1 1 1\r\n",
                "No\r\n"
            ],
            [
                "2\r\n99 999\r\n1 2\r\n",
                "No\r\n"
            ],
            [
                "1\r\n2\r\n1\r\n",
                "Cycle\r\ninc 1\r\ndec 1\r\n"
            ],
            [
                "1\r\n2\r\n2\r\n",
                "Cycle\r\ndec 1\r\ninc 1\r\n"
            ],
            [
                "2\r\n5 5\r\n3 3\r\n",
                "Path\r\ndec 1\r\ndec 1\r\ndec 2\r\ndec 2\r\ninc 1\r\ninc 2\r\ninc 1\r\ndec 2\r\ninc 1\r\ninc 1\r\ninc 2\r\ndec 1\r\ninc 2\r\ninc 1\r\ninc 2\r\ndec 1\r\ndec 1\r\ndec 1\r\ndec 1\r\ninc 2\r\ninc 1\r\ninc 1\r\ninc 1\r\ninc 1\r\n"
            ],
            [
                "2\r\n7 9\r\n4 8\r\n",
                "Path\r\ndec 1\r\ndec 1\r\ndec 1\r\ndec 2\r\ninc 1\r\ninc 1\r\ninc 1\r\ndec 2\r\ndec 1\r\ndec 1\r\ndec 1\r\ndec 2\r\ninc 1\r\ninc 1\r\ninc 1\r\ndec 2\r\ndec 1\r\ndec 1\r\ndec 1\r\ndec 2\r\ninc 1\r\ninc 1\r\ninc 1\r\ndec 2\r\ndec 1\r\ndec 1\r\ndec 1\r\ndec 2\r\ninc 1\r\ninc 1\r\ninc 1\r\ninc 1\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 1\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\ninc 1\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ndec 1\r\ndec 1\r\ndec 1\r\ndec 1\r\ndec 1\r\ndec 1\r\n"
            ],
            [
                "3\r\n3 3 3\r\n1 3 3\r\n",
                "Path\r\ndec 2\r\ndec 2\r\ndec 3\r\ninc 2\r\ninc 2\r\ndec 3\r\ndec 2\r\ndec 2\r\ninc 1\r\ninc 2\r\ninc 2\r\ninc 3\r\ndec 2\r\ndec 2\r\ninc 3\r\ninc 2\r\ninc 2\r\ninc 1\r\ndec 2\r\ndec 2\r\ndec 3\r\ninc 2\r\ninc 2\r\ndec 3\r\ndec 2\r\ndec 2\r\n"
            ],
            [
                "2\r\n5 3\r\n1 3\r\n",
                "Path\r\ndec 2\r\ndec 2\r\ninc 1\r\ninc 2\r\ninc 2\r\ninc 1\r\ndec 2\r\ndec 2\r\ninc 1\r\ninc 2\r\ninc 2\r\ninc 1\r\ndec 2\r\ndec 2\r\n"
            ],
            [
                "2\r\n3 9\r\n3 7\r\n",
                "Path\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 1\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 2\r\ninc 1\r\ninc 2\r\ndec 1\r\ndec 1\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\ndec 2\r\n"
            ],
            [
                "3\r\n7 7 5\r\n3 7 4\r\n",
                "No\r\n"
            ],
            [
                "3\r\n13 11 13\r\n6 5 5\r\n",
                "No\r\n"
            ],
            [
                "3\r\n27 19 11\r\n2 12 10\r\n",
                "No\r\n"
            ],
            [
                "3\r\n19 29 3\r\n17 22 3\r\n",
                "No\r\n"
            ]
        ]
    }
]