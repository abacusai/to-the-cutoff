[
    {
        "name": "Mashtali vs AtCoder",
        "description": "After many unsuccessful tries, Mashtali decided to copy modify an AtCoder\nproblem. So here is his copied new problem: There is a tree with \n    n\n\nvertices and some non-empty set of the vertices are pinned to the ground. Two\nplayers play a game against each other on the tree. They alternately perform\nthe following action: Remove an edge from the tree, then remove every\nconnected component that has no pinned vertex.The player who cannot move\nloses(every edge has been deleted already). You are given the tree, but not\nthe set of the pinned vertices. Your task is to determine, for each \n    k\n,\nthe winner of the game, if only the vertices \n    1, 2, 3, \n    \u2026, k\n are\npinned and both players play optimally. Input The first line of input contains\nan integer \n    n\n \u2014 the number of vertices (\n    1 \n    \u2264 n \n    \u2264 3 \n    \u00b7\n    10^5\n). The \n    i\n-th of the following \n    n-1\n lines contains two\nintegers \n    u_i, v_i\n (\n    1 \n    \u2264 u_i, v_i \n    \u2264 n\n, \n    u_i \n     v_i\n)\n\u2014 the endpoints of the \n    i\n-th edge. It's guaranteed that these edges form\na tree. Output Print a string of length \n    n\n. The \n    i\n-th character\nshould be '1' if the first player wins the \n    i\n-th scenario, and '2'\notherwise. Examples Input 5 1 2 2 3 2 4 4 5 Output 11122 Input 5 1 2 2 3 1 4 4\n5 Output 21122 Input 6 1 2 2 4 5 1 6 3 3 2 Output 111111 Input 7 1 2 3 7 4 6 2\n3 2 4 1 5 Output 2212222 Note Below you can see the tree in the first sample :\nIf \n    k = 1\n then the first player can cut the edge \n    (1, 2)\n. If \n    k =\n    2\n or \n    k = 3\n, the first player can cut the edge \n    (2, 4)\n, after\nthat only the edges \n    (1, 2)\n and \n    (2, 3)\n remain. After the second\nplayers move, there will be a single edge left for the first player to cut. So\nfirst player wins.\n\n",
        "cf_contest_id": 1610,
        "cf_index": "I",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2\r\n2 3\r\n2 4\r\n4 5\r\n",
                "11122"
            ],
            [
                "5\r\n1 2\r\n2 3\r\n1 4\r\n4 5\r\n",
                "21122"
            ],
            [
                "6\r\n1 2\r\n2 4\r\n5 1\r\n6 3\r\n3 2\r\n",
                "111111"
            ],
            [
                "7\r\n1 2\r\n3 7\r\n4 6\r\n2 3\r\n2 4\r\n1 5\r\n",
                "2212222"
            ]
        ],
        "private_cases": [
            [
                "5\r\n1 4\r\n3 2\r\n5 4\r\n2 1\r\n",
                "21122"
            ],
            [
                "5\r\n5 4\r\n1 5\r\n2 4\r\n1 3\r\n",
                "12222"
            ],
            [
                "10\r\n4 5\r\n1 10\r\n1 2\r\n3 10\r\n10 8\r\n10 7\r\n5 10\r\n9 10\r\n5 6\r\n",
                "1111111111"
            ],
            [
                "10\r\n2 3\r\n6 7\r\n6 1\r\n9 8\r\n10 1\r\n5 3\r\n3 4\r\n4 9\r\n7 9\r\n",
                "1111111111"
            ]
        ]
    }
]