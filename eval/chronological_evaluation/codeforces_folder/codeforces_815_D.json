[
    {
        "name": "Karen and Cards",
        "description": "Karen just got home from the supermarket, and is getting ready to go to sleep.\nAfter taking a shower and changing into her pajamas, she looked at her shelf\nand saw an album. Curious, she opened it and saw a trading card collection.\nShe recalled that she used to play with those cards as a child, and, although\nshe is now grown-up, she still wonders a few things about it. Each card has\nthree characteristics: strength, defense and speed. The values of all\ncharacteristics of all cards are positive integers. The maximum possible\nstrength any card can have is p, the maximum possible defense is q and the\nmaximum possible speed is r. There are n cards in her collection. The i-th\ncard has a strength ai, defense bi and speed ci, respectively. A card beats\nanother card if at least two of its characteristics are strictly greater than\nthe corresponding characteristics of the other card. She now wonders how many\ndifferent cards can beat all the cards in her collection. Two cards are\nconsidered different if at least one of their characteristics have different\nvalues. Input The first line of input contains four integers, n, p, q and r (1\n\u2264 n, p, q, r \u2264 500000), the number of cards in the collection, the maximum\npossible strength, the maximum possible defense, and the maximum possible\nspeed, respectively. The next n lines each contain three integers. In\nparticular, the i-th line contains ai, bi and ci (1 \u2264 ai \u2264 p, 1 \u2264 bi \u2264 q, 1 \u2264\nci \u2264 r), the strength, defense and speed of the i-th collection card,\nrespectively. Output Output a single integer on a line by itself, the number\nof different cards that can beat all the cards in her collection. Examples\nInput 3 4 4 5 2 2 5 1 3 4 4 1 1 Output 10 Input 5 10 10 10 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 Output 972 Note In the first test case, the maximum possible\nstrength is 4, the maximum possible defense is 4 and the maximum possible\nspeed is 5. Karen has three cards: The first card has strength 2, defense 2\nand speed 5. The second card has strength 1, defense 3 and speed 4. The third\ncard has strength 4, defense 1 and speed 1. There are 10 cards that beat all\nthe cards here: The card with strength 3, defense 3 and speed 5. The card with\nstrength 3, defense 4 and speed 2. The card with strength 3, defense 4 and\nspeed 3. The card with strength 3, defense 4 and speed 4. The card with\nstrength 3, defense 4 and speed 5. The card with strength 4, defense 3 and\nspeed 5. The card with strength 4, defense 4 and speed 2. The card with\nstrength 4, defense 4 and speed 3. The card with strength 4, defense 4 and\nspeed 4. The card with strength 4, defense 4 and speed 5. In the second test\ncase, the maximum possible strength is 10, the maximum possible defense is 10\nand the maximum possible speed is 10. Karen has five cards, all with strength\n1, defense 1 and speed 1. Any of the 972 cards which have at least two\ncharacteristics greater than 1 can beat all of the cards in her collection.\n\n",
        "cf_contest_id": 815,
        "cf_index": "D",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "combinatorics",
            "data structures",
            "geometry"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 4 4 5\r\n2 2 5\r\n1 3 4\r\n4 1 1\r\n",
                "10"
            ],
            [
                "5 10 10 10\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n",
                "972"
            ]
        ],
        "private_cases": [
            [
                "21 39 42 69\r\n32 30 45\r\n8 18 36\r\n39 39 8\r\n8 32 66\r\n6 12 18\r\n37 27 2\r\n24 27 19\r\n31 1 38\r\n17 7 26\r\n2 36 53\r\n17 13 11\r\n11 37 17\r\n25 37 54\r\n30 12 47\r\n39 11 58\r\n18 25 6\r\n12 33 30\r\n13 6 13\r\n18 36 32\r\n36 37 19\r\n30 35 6\r\n",
                "1095"
            ],
            [
                "29 48 92 53\r\n42 32 45\r\n9 76 47\r\n24 87 24\r\n10 20 19\r\n32 58 25\r\n6 76 15\r\n33 80 37\r\n37 66 7\r\n14 26 6\r\n9 70 23\r\n6 53 20\r\n26 75 26\r\n39 29 43\r\n1 39 44\r\n21 50 44\r\n35 16 41\r\n6 26 42\r\n15 37 3\r\n16 47 3\r\n26 28 33\r\n6 55 45\r\n25 23 47\r\n15 36 27\r\n15 1 41\r\n40 80 29\r\n25 20 18\r\n29 65 17\r\n7 4 39\r\n35 65 53\r\n",
                "4456"
            ],
            [
                "1 500000 500000 500000\r\n1 1 1\r\n",
                "124999999998500002"
            ],
            [
                "1 500000 500000 500000\r\n1 1 500000\r\n",
                "124999500000500000"
            ],
            [
                "1 500000 500000 500000\r\n1 500000 1\r\n",
                "124999500000500000"
            ],
            [
                "1 500000 500000 500000\r\n500000 1 1\r\n",
                "124999500000500000"
            ],
            [
                "1 500000 500000 500000\r\n500000 500000 1\r\n",
                "0"
            ],
            [
                "1 500000 500000 500000\r\n500000 1 500000\r\n",
                "0"
            ],
            [
                "1 500000 500000 500000\r\n1 500000 500000\r\n",
                "0"
            ],
            [
                "1 500000 500000 500000\r\n500000 500000 500000\r\n",
                "0"
            ],
            [
                "1 1 1 1\r\n1 1 1\r\n",
                "0"
            ]
        ]
    }
]