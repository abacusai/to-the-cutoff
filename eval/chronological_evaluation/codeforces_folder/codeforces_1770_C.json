[
    {
        "name": "Koxia and Number Theory",
        "description": "Joi has an array \n    a\n of \n    n\n positive integers. Koxia wants you to\ndetermine whether there exists a positive integer \n    x > 0\n such that\n\n    (a_i+x,a_j+x)=1\n for all \n    1 \n    \u2264 i < j \n    \u2264 n\n. Here\n\n    (y, z)\n denotes the greatest common divisor (GCD) of integers\n\n    y\n and \n    z\n. Input Each test consists of multiple test cases. The\nfirst line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the\nnumber of test cases. The description of test cases follows. The first line of\neach test case contains an integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 100\n) \u2014 the\nsize of the array. The second line of each test case contains \n    n\n integers\n\n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u226410^18\n). It is\nguaranteed that the sum of \n    n\n over all test cases does not exceed\n\n    1000\n. Output For each test case, output \"YES\" (without quotes) if there\nexists a positive integer \n    x\n such that \n    (a_i+x,a_j+x)=1\n for\nall \n    1 \n    \u2264 i < j \n    \u2264 n\n, and \"NO\" (without quotes) otherwise. You\ncan output the answer in any case (upper or lower). For example, the strings\n\"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive responses.\nExample Input 2 3 5 7 10 3 3 3 4 Output YES NO Note In the first test case, we\ncan set \n    x = 4\n. This is valid because: When \n    i=1\n and \n    j=2\n,\n\n    (a_i+x,a_j+x)=\n    (5+4,7+4)=\n    (9,11)=1\n. When \n    i=1\n and\n\n    j=3\n, \n    (a_i+x,a_j+x)=\n    (5+4,10+4)=\n    (9,14)=1\n. When\n\n    i=2\n and \n    j=3\n,\n\n    (a_i+x,a_j+x)=\n    (7+4,10+4)=\n    (11,14)=1\n. In the second test\ncase, any choice of \n    x\n makes \n    (a_1 + x, a_2 + x) =\n    \n    (3+x,3+x)=3+x\n. Therefore, no such \n    x\n exists.\n\n",
        "cf_contest_id": 1770,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "chinese remainder theorem",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n3\r\n5 7 10\r\n3\r\n3 3 4\r\n",
                "YES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2\r\n4294967296 4294967296\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n2\r\n499122169512289529 998244339024579058\r\n",
                "YES\r\n"
            ]
        ]
    }
]