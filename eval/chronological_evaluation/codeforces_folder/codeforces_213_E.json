[
    {
        "name": "Two Permutations",
        "description": "Rubik is very keen on number permutations. A permutation a with length n is a\nsequence, consisting of n different numbers from 1 to n. Element number i (1 \u2264\ni \u2264 n) of this permutation will be denoted as ai. Furik decided to make a\npresent to Rubik and came up with a new problem on permutations. Furik tells\nRubik two number permutations: permutation a with length n and permutation b\nwith length m. Rubik must give an answer to the problem: how many distinct\nintegers d exist, such that sequence c (c1 = a1 + d, c2 = a2 + d, ..., cn = an\n+ d) of length n is a subsequence of b. Sequence a is a subsequence of\nsequence b, if there are such indices i1, i2, ..., in (1 \u2264 i1 < i2 < ... < in\n\u2264 m), that a1 = bi1, a2 = bi2, ..., an = bin, where n is the length of\nsequence a, and m is the length of sequence b. You are given permutations a\nand b, help Rubik solve the given problem. Input The first line contains two\nintegers n and m (1 \u2264 n \u2264 m \u2264 200000) \u2014 the sizes of the given permutations.\nThe second line contains n distinct integers \u2014 permutation a, the third line\ncontains m distinct integers \u2014 permutation b. Numbers on the lines are\nseparated by spaces. Output On a single line print the answer to the problem.\nExamples Input 1 1 1 1 Output 1 Input 1 2 1 2 1 Output 2 Input 3 3 2 3 1 1 2 3\nOutput 0\n\n",
        "cf_contest_id": 213,
        "cf_index": "E",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "hashing",
            "strings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 1\r\n1\r\n1\r\n",
                "1"
            ],
            [
                "1 2\r\n1\r\n2 1\r\n",
                "2"
            ],
            [
                "3 3\r\n2 3 1\r\n1 2 3\r\n",
                "0"
            ]
        ],
        "private_cases": [
            [
                "2 4\r\n2 1\r\n1 4 2 3\r\n",
                "1"
            ],
            [
                "2 5\r\n1 2\r\n2 5 1 3 4\r\n",
                "2"
            ],
            [
                "1 6\r\n1\r\n3 4 1 6 5 2\r\n",
                "6"
            ],
            [
                "3 7\r\n1 2 3\r\n1 2 3 4 5 7 6\r\n",
                "4"
            ],
            [
                "2 8\r\n2 1\r\n8 3 1 4 2 7 5 6\r\n",
                "3"
            ],
            [
                "5 9\r\n3 5 2 4 1\r\n1 6 8 9 4 2 7 3 5\r\n",
                "0"
            ],
            [
                "2 10\r\n1 2\r\n5 7 8 3 1 10 2 4 9 6\r\n",
                "5"
            ]
        ]
    }
]