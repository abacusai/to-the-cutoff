[
    {
        "name": "Caisa and Pylons",
        "description": "Caisa solved the problem with the sugar and now he is on the way back to home.\nCaisa is playing a mobile game during his path. There are (n + 1) pylons\nnumbered from 0 to n in this game. The pylon with number 0 has zero height,\nthe pylon with number i (i > 0) has height hi. The goal of the game is to\nreach n-th pylon, and the only move the player can do is to jump from the\ncurrent pylon (let's denote its number as k) to the next one (its number will\nbe k + 1). When the player have made such a move, its energy increases by hk -\nhk + 1 (if this value is negative the player loses energy). The player must\nhave non-negative amount of energy at any moment of the time. Initially Caisa\nstand at 0 pylon and has 0 energy. The game provides a special opportunity:\none can pay a single dollar and increase the height of anyone pylon by one.\nCaisa may use that opportunity several times, but he doesn't want to spend too\nmuch money. What is the minimal amount of money he must paid to reach the goal\nof the game? Input The first line contains integer n (1 \u2264 n \u2264 10^5). The next\nline contains n integers h1, h2, ..., hn (1 \u2264 hi \u2264 10^5) representing the\nheights of the pylons. Output Print a single number representing the minimum\nnumber of dollars paid by Caisa. Examples Input 5 3 4 3 2 4 Output 4 Input 3 4\n4 4 Output 4 Note In the first sample he can pay 4 dollars and increase the\nheight of pylon with number 0 by 4 units. Then he can safely pass to the last\npylon.\n\n",
        "cf_contest_id": 463,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n3 4 3 2 4\r\n",
                "4\r\n"
            ],
            [
                "3\r\n4 4 4\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "99\r\n1401 2019 1748 3785 3236 3177 3443 3772 2138 1049 353 908 310 2388 1322 88 2160 2783 435 2248 1471 706 2468 2319 3156 3506 2794 1999 1983 2519 2597 3735 537 344 3519 3772 3872 2961 3895 2010 10 247 3269 671 2986 942 758 1146 77 1545 3745 1547 2250 2565 217 1406 2070 3010 3404 404 1528 2352 138 2065 3047 3656 2188 2919 2616 2083 1280 2977 2681 548 4000 1667 1489 1109 3164 1565 2653 3260 3463 903 1824 3679 2308 245 2689 2063 648 568 766 785 2984 3812 440 1172 2730\r\n",
                "4000\r\n"
            ],
            [
                "68\r\n477 1931 3738 3921 2306 1823 3328 2057 661 3993 2967 3520 171 1739 1525 1817 209 3475 1902 2666 518 3283 3412 3040 3383 2331 1147 1460 1452 1800 1327 2280 82 1416 2200 2388 3238 1879 796 250 1872 114 121 2042 1853 1645 211 2061 1472 2464 726 1989 1746 489 1380 1128 2819 2527 2939 622 678 265 2902 1111 2032 1453 3850 1621\r\n",
                "3993\r\n"
            ],
            [
                "30\r\n30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\r\n",
                "30\r\n"
            ],
            [
                "3\r\n3 2 1\r\n",
                "3\r\n"
            ],
            [
                "1\r\n69\r\n",
                "69\r\n"
            ]
        ]
    }
]