[
    {
        "name": "Mafia",
        "description": "One day n friends gathered together to play \"Mafia\". During each round of the\ngame some player must be the supervisor and other n - 1 people take part in\nthe game. For each person we know in how many rounds he wants to be a player,\nnot the supervisor: the i-th person wants to play ai rounds. What is the\nminimum number of rounds of the \"Mafia\" game they need to play to let each\nperson play at least as many rounds as they want? Input The first line\ncontains integer n (3 \u2264 n \u2264 10^5). The second line contains n space-separated\nintegers a1, a2, ..., an (1 \u2264 ai \u2264 10^9) \u2014 the i-th number in the list is the\nnumber of rounds the i-th person wants to play. Output In a single line print\na single integer \u2014 the minimum number of game rounds the friends need to let\nthe i-th person play at least ai rounds. Please, do not use the \nto read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout\nstreams or the \n2 Output 3 Note You don't need to know the rules of \"Mafia\" to solve this\nproblem. If you're curious, it's a game Russia got from the Soviet times:\nhttp://en.wikipedia.org/wiki/Mafia_(party_game).\n\n",
        "cf_contest_id": 348,
        "cf_index": "A",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 2 2\r\n",
                "4\r\n"
            ],
            [
                "4\r\n2 2 2 2\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n9 7 7 8 8 7 8\r\n",
                "9\r\n"
            ],
            [
                "10\r\n13 12 10 13 13 14 10 10 12 12\r\n",
                "14\r\n"
            ],
            [
                "10\r\n94 96 91 95 99 94 96 92 95 99\r\n",
                "106\r\n"
            ],
            [
                "100\r\n1 555 876 444 262 234 231 598 416 261 206 165 181 988 469 123 602 592 533 97 864 716 831 156 962 341 207 377 892 51 866 96 757 317 832 476 549 472 770 1000 887 145 956 515 992 653 972 677 973 527 984 559 280 346 580 30 372 547 209 929 492 520 446 726 47 170 699 560 814 206 688 955 308 287 26 102 77 430 262 71 415 586 532 562 419 615 732 658 108 315 268 574 86 12 23 429 640 995 342 305\r\n",
                "1000\r\n"
            ],
            [
                "3\r\n1 1 1\r\n",
                "2\r\n"
            ],
            [
                "30\r\n94 93 90 94 90 91 93 91 93 94 93 90 100 94 97 94 94 95 94 96 94 98 97 95 97 91 91 95 98 96\r\n",
                "100\r\n"
            ],
            [
                "5\r\n1000000000 5 5 4 4\r\n",
                "1000000000\r\n"
            ],
            [
                "3\r\n1 2 1\r\n",
                "2\r\n"
            ],
            [
                "3\r\n2 1 1\r\n",
                "2\r\n"
            ],
            [
                "4\r\n1 2 3 4\r\n",
                "4\r\n"
            ],
            [
                "3\r\n1000000000 1000000000 10000000\r\n",
                "1005000000\r\n"
            ],
            [
                "3\r\n677876423 834056477 553175531\r\n",
                "1032554216\r\n"
            ],
            [
                "5\r\n1000000000 1 1 1 1\r\n",
                "1000000000\r\n"
            ],
            [
                "4\r\n1000000000 1000000000 1000000000 1000000000\r\n",
                "1333333334\r\n"
            ],
            [
                "3\r\n4 10 11\r\n",
                "13\r\n"
            ],
            [
                "5\r\n1000000000 1000000000 1000000000 1000000000 1000000000\r\n",
                "1250000000\r\n"
            ]
        ]
    }
]