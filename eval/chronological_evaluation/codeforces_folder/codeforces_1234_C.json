[
    {
        "name": "Pipes",
        "description": "You are given a system of pipes. It consists of two rows, each row consists of\n\n    n\n pipes. The top left pipe has the coordinates \n    (1, 1)\n and the\nbottom right \u2014 \n    (2, n)\n. There are six types of pipes: two types of\nstraight pipes and four types of curved pipes. Here are the examples of all\nsix types: Types of pipes You can turn each of the given pipes \n    90\n\ndegrees clockwise or counterclockwise arbitrary (possibly, zero) number of\ntimes (so the types \n    1\n and \n    2\n can become each other and types \n    3,\n    4, 5, 6\n can become each other). You want to turn some pipes in a way that\nthe water flow can start at \n    (1, 0)\n (to the left of the top left pipe),\nmove to the pipe at \n    (1, 1)\n, flow somehow by connected pipes to the pipe\nat \n    (2, n)\n and flow right to \n    (2, n + 1)\n. Pipes are connected if\nthey are adjacent in the system and their ends are connected. Here are\nexamples of connected pipes: Examples of connected pipes Let's describe the\nproblem using some example: The first example input And its solution is below:\nThe first example answer As you can see, the water flow is the poorly drawn\nblue line. To obtain the answer, we need to turn the pipe at \n    (1, 2)\n\n\n    90\n degrees clockwise, the pipe at \n    (2, 3)\n \n    90\n degrees, the\npipe at \n    (1, 6)\n \n    90\n degrees, the pipe at \n    (1, 7)\n \n    180\n\ndegrees and the pipe at \n    (2, 7)\n \n    180\n degrees. Then the flow of water\ncan reach \n    (2, n + 1)\n from \n    (1, 0)\n. You have to answer \n    q\n\nindependent queries. Input The first line of the input contains one integer\n\n    q\n (\n    1 \n    \u2264 q \n    \u2264 10^4\n) \u2014 the number of queries. Then \n    q\n\nqueries follow. Each query consists of exactly three lines. The first line of\nthe query contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n)\n\u2014 the number of pipes in each row. The next two lines contain a description of\nthe first and the second rows correspondingly. Each row description consists\nof \n    n\n digits from \n    1\n to \n    6\n without any whitespaces between\nthem, each digit corresponds to the type of pipe in the corresponding cell.\nSee the problem statement to understand which digits correspond to which types\nof pipes. It is guaranteed that the sum of \n    n\n over all queries does not\nexceed \n    2 \n    \u00b7 10^5\n. Output For the \n    i\n-th query print the answer\nfor it \u2014 \"YES\" (without quotes) if it is possible to turn some pipes in a way\nthat the water flow can reach \n    (2, n + 1)\n from \n    (1, 0)\n, and \"NO\"\notherwise. Example Input 6 7 2323216 1615124 1 3 4 2 13 24 2 12 34 3 536 345 2\n46 54 Output YES YES YES NO YES NO Note The first query from the example is\ndescribed in the problem statement.\n\n",
        "cf_contest_id": 1234,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n7\r\n2323216\r\n1615124\r\n1\r\n3\r\n4\r\n2\r\n13\r\n24\r\n2\r\n12\r\n34\r\n3\r\n536\r\n345\r\n2\r\n46\r\n54\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": []
    }
]