[
    {
        "name": "Hilbert's Hotel",
        "description": "Hilbert's Hotel is a very unusual hotel since the number of rooms is infinite!\nIn fact, there is exactly one room for every integer, including zero and\nnegative integers. Even stranger, the hotel is currently at full capacity,\nmeaning there is exactly one guest in every room. The hotel's manager, David\nHilbert himself, decides he wants to shuffle the guests around because he\nthinks this will create a vacancy (a room without a guest). For any integer\n\n    k\n and positive integer \n    n\n, let \n    k\n     n\n denote the\nremainder when \n    k\n is divided by \n    n\n. More formally, \n    r=k\n    \n    n\n is the smallest non-negative integer such that \n    k-r\n is divisible by\n\n    n\n. It always holds that \n    0\n    \u2264 k\n     n\n    \u2264 n-1\n. For example,\n\n    100\n     12=4\n and \n    (-1337)\n     3=1\n. Then the shuffling works\nas follows. There is an array of \n    n\n integers\n\n    a_0,a_1,\n    \u2026,a_n-1\n. Then for each integer \n    k\n, the guest in\nroom \n    k\n is moved to room number \n    k+a_k\n     n\n. After this\nshuffling process, determine if there is still exactly one guest assigned to\neach room. That is, there are no vacancies or rooms with multiple guests.\nInput Each test consists of multiple test cases. The first line contains a\nsingle integer \n    t\n (\n    1\n    \u2264 t\n    \u2264 10^4\n) \u2014 the number of test cases.\nNext \n    2t\n lines contain descriptions of test cases. The first line of each\ntest case contains a single integer \n    n\n (\n    1\n    \u2264 n\n    \u2264 2\n    \u00b7\n    10^5\n) \u2014 the length of the array. The second line of each test case contains\n\n    n\n integers \n    a_0,a_1,\n    \u2026,a_n-1\n (\n    -10^9\n    \u2264 a_i\n    \u2264\n    10^9\n). It is guaranteed that the sum of \n    n\n over all test cases does\nnot exceed \n    2\n    \u00b7 10^5\n. Output For each test case, output a single\nline containing \"YES\" if there is exactly one guest assigned to each room\nafter the shuffling process, or \"NO\" otherwise. You can print each letter in\nany case (upper or lower). Example Input 6 1 14 2 1 -1 4 5 5 5 1 3 3 2 1 2 0 1\n5 -239 -2 -100 -3 -11 Output YES YES YES NO NO YES Note In the first test\ncase, every guest is shifted by \n    14\n rooms, so the assignment is still\nunique. In the second test case, even guests move to the right by \n    1\n\nroom, and odd guests move to the left by \n    1\n room. We can show that the\nassignment is still unique. In the third test case, every fourth guest moves\nto the right by \n    1\n room, and the other guests move to the right by\n\n    5\n rooms. We can show that the assignment is still unique. In the fourth\ntest case, guests \n    0\n and \n    1\n are both assigned to room \n    3\n. In\nthe fifth test case, guests \n    1\n and \n    2\n are both assigned to room\n\n    2\n.\n\n",
        "cf_contest_id": 1344,
        "cf_index": "A",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "number theory",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1\r\n14\r\n2\r\n1 -1\r\n4\r\n5 5 5 1\r\n3\r\n3 2 1\r\n2\r\n0 1\r\n5\r\n-239 -2 -100 -3 -11\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1\r\n1000000000\r\n1\r\n-1000000000\r\n2\r\n1000000000 0\r\n2\r\n0 1000000000\r\n2\r\n1000000000 1\r\n2\r\n1 1000000000\r\n2\r\n-1000000000 0\r\n2\r\n0 -1000000000\r\n2\r\n-1000000000 1\r\n2\r\n1 -1000000000\r\n",
                "YES\r\nYES\r\nYES\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nNO\r\nNO\r\n"
            ],
            [
                "10\r\n3\r\n-15 -33 79\r\n16\r\n45 -84 19 85 69 -64 93 -70 0 -53 2 -52 -55 66 33 -60\r\n2\r\n14 -2\r\n4\r\n-65 -76 5 25\r\n5\r\n55 -66 63 -66 -35\r\n5\r\n-87 59 78 2 -10\r\n1\r\n25\r\n1\r\n-19\r\n1\r\n-8\r\n12\r\n32 34 43 -83 57 8 -86 88 -25 96 22 -44\r\n",
                "NO\r\nNO\r\nYES\r\nNO\r\nNO\r\nNO\r\nYES\r\nYES\r\nYES\r\nNO\r\n"
            ]
        ]
    }
]