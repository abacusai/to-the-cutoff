[
    {
        "name": "Mice problem",
        "description": "Igor the analyst fell asleep on the work and had a strange dream. In the dream\nhis desk was crowded with computer mice, so he bought a mousetrap to catch\nthem. The desk can be considered as an infinite plane, then the mousetrap is a\nrectangle which sides are parallel to the axes, and which opposite sides are\nlocated in points (x1, y1) and (x2, y2). Igor wants to catch all mice. Igor\nhas analysed their behavior and discovered that each mouse is moving along a\nstraight line with constant speed, the speed of the i-th mouse is equal to\n(vi^x, vi^y), that means that the x coordinate of the mouse increases by vi^x\nunits per second, while the y coordinates increases by vi^y units. The\nmousetrap is open initially so that the mice are able to move freely on the\ndesk. Igor can close the mousetrap at any moment catching all the mice that\nare strictly inside the mousetrap. Igor works a lot, so he is busy in the\ndream as well, and he asks you to write a program that by given mousetrap's\ncoordinates, the initial coordinates of the mice and their speeds determines\nthe earliest time moment in which he is able to catch all the mice. Please\nnote that Igor can close the mousetrap only once. Input The first line\ncontains single integer n (1 \u2264 n \u2264 100 000) \u2014 the number of computer mice on\nthe desk. The second line contains four integers x1, y1, x2 and y2 (0 \u2264 x1 \u2264\nx2 \u2264 100 000), (0 \u2264 y1 \u2264 y2 \u2264 100 000) \u2014 the coordinates of the opposite\ncorners of the mousetrap. The next n lines contain the information about mice.\nThe i-th of these lines contains four integers ri^x, ri^y, vi^x and vi^y, (0 \u2264\nri^x, ri^y \u2264 100 000, - 100 000 \u2264 vi^x, vi^y \u2264 100 000), where (ri^x, ri^y) is\nthe initial position of the mouse, and (vi^x, vi^y) is its speed. Output In\nthe only line print minimum possible non-negative number t such that if Igor\ncloses the mousetrap at t seconds from the beginning, then all the mice are\nstrictly inside the mousetrap. If there is no such t, print -1. Your answer is\nconsidered correct if its absolute or relative error doesn't exceed 10^ - 6.\nFormally, let your answer be a, and the jury's answer be b. Your answer is\nconsidered correct if . Examples Input 4 7 7 9 8 3 5 7 5 7 5 2 4 3 3 7 8 6 6 3\n2 Output 0.57142857142857139685 Input 4 7 7 9 8 0 3 -5 4 5 0 5 4 9 9 -1 -6 10\n5 -7 -10 Output -1 Note Here is a picture of the first sample Points A, B, C,\nD - start mice positions, segments are their paths. Then, at first time when\nall mice will be in rectangle it will be looks like this: Here is a picture of\nthe second sample Points A, D, B will never enter rectangle.\n\n",
        "cf_contest_id": 793,
        "cf_index": "C",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "geometry",
            "implementation",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n7 7 9 8\r\n3 5 7 5\r\n7 5 2 4\r\n3 3 7 8\r\n6 6 3 2\r\n",
                "0.571429"
            ],
            [
                "4\r\n7 7 9 8\r\n0 3 -5 4\r\n5 0 5 4\r\n9 9 -1 -6\r\n10 5 -7 -10\r\n",
                "-1"
            ]
        ],
        "private_cases": [
            [
                "4\r\n8 42 60 54\r\n9 54 -58 -62\r\n46 47 52 -76\r\n15 50 -37 -40\r\n54 51 78 64\r\n",
                "0"
            ],
            [
                "4\r\n17501 63318 51967 74514\r\n1305 84026 79493 -78504\r\n41159 81000 -44104 -42722\r\n31063 65435 25578 33487\r\n18330 79949 83467 -74531\r\n",
                "0.203741"
            ],
            [
                "7\r\n24 38 44 47\r\n44 45 -50 -36\r\n33 48 -11 -39\r\n43 44 13 15\r\n42 47 24 -21\r\n40 41 19 7\r\n26 41 -20 -15\r\n42 40 43 19\r\n",
                "0.025641"
            ],
            [
                "1\r\n0 0 100000 100000\r\n0 0 1 0\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 100000 100000\r\n0 0 0 1\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 100000 100000\r\n0 0 -1 -1\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 100000 100000\r\n1 1 1 1\r\n",
                "0"
            ],
            [
                "1\r\n0 0 10000 10000\r\n20000 2 -1 0\r\n",
                "10000"
            ],
            [
                "1\r\n0 0 10000 10000\r\n20000 2 1 0\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 10000 10000\r\n10001 10001 -1 -1\r\n",
                "1"
            ],
            [
                "1\r\n0 0 10000 10000\r\n10001 9999 -1 1\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 1 1\r\n1 1 1 1\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 10 10\r\n5 5 0 0\r\n",
                "0"
            ],
            [
                "1\r\n0 0 10 10\r\n5 5 5 5\r\n",
                "0"
            ],
            [
                "1\r\n0 1 2 1\r\n0 0 1 1\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 5 5\r\n1 0 0 1\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 2 2\r\n1 1 1 0\r\n",
                "-1"
            ],
            [
                "2\r\n2 2 5 5\r\n3 3 1 1\r\n10 3 -1 0\r\n",
                "-1"
            ],
            [
                "1\r\n99998 99998 99999 99999\r\n0 0 99999 100000\r\n",
                "0.99999"
            ],
            [
                "1\r\n1 1 3 3\r\n2 2 0 0\r\n",
                "0"
            ],
            [
                "2\r\n99999 99999 100000 100000\r\n1 1 100000 100000\r\n1 1 99999 99999\r\n",
                "0.99999"
            ],
            [
                "1\r\n0 0 2 2\r\n1 1 0 0\r\n",
                "0"
            ],
            [
                "1\r\n0 0 1 1\r\n0 0 0 0\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 1 1\r\n0 0 1 0\r\n",
                "-1"
            ],
            [
                "1\r\n7 7 8 8\r\n7 7 0 0\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 3 3\r\n4 4 0 0\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 2 2\r\n1 0 0 0\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 99999 1\r\n0 99999 100000 -99999\r\n",
                "0.99999"
            ],
            [
                "1\r\n1 0 2 0\r\n0 0 1 0\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 11 11\r\n5 5 0 0\r\n",
                "0"
            ],
            [
                "1\r\n1 1 1 1\r\n1 1 0 0\r\n",
                "-1"
            ],
            [
                "4\r\n0 49998 2 50002\r\n1 50000 0 0\r\n1 50000 0 0\r\n1 0 0 1\r\n1 100000 0 -1\r\n",
                "49998"
            ],
            [
                "1\r\n0 0 10 10\r\n0 0 0 0\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 11 11\r\n1 2 0 1\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 100 100\r\n0 0 1 0\r\n",
                "-1"
            ],
            [
                "1\r\n1 0 1 2\r\n0 0 1 1\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 3 3\r\n1 1 0 0\r\n",
                "-1"
            ],
            [
                "2\r\n0 0 5 5\r\n5 3 0 1\r\n3 3 1 1\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 3 3\r\n1 1 1 0\r\n",
                "-1"
            ],
            [
                "1\r\n10 10 20 20\r\n0 10 1 1\r\n",
                "-1"
            ],
            [
                "1\r\n5 5 10 10\r\n4 6 1 0\r\n",
                "1"
            ],
            [
                "1\r\n0 0 5 5\r\n2 5 0 0\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 2 2\r\n0 2 1 0\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 3 3\r\n0 1 1 0\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 2 2\r\n1 1 0 0\r\n",
                "-1"
            ],
            [
                "2\r\n10 0 12 2\r\n9 1 1 0\r\n7 1 1 0\r\n",
                "-1"
            ],
            [
                "1\r\n2 2 4 4\r\n3 1 1 1\r\n",
                "-1"
            ],
            [
                "2\r\n1 1 3 3\r\n2 10 0 -1\r\n10000 2 -1 0\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 3 3\r\n2 0 1 1\r\n",
                "-1"
            ],
            [
                "2\r\n0 0 2 100000\r\n1 1 0 100000\r\n100000 1 -99999 0\r\n",
                "0.99999"
            ],
            [
                "2\r\n1 1 2 2\r\n0 0 1 1\r\n1 1 1 1\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 2 2\r\n0 1 0 0\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 2 2\r\n0 0 0 0\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 10 10\r\n0 0 0 1337\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 3 3\r\n1 1 0 1\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 2 2\r\n0 1 0 1\r\n",
                "-1"
            ],
            [
                "1\r\n1 1 3 3\r\n2 1 0 0\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 3 3\r\n1 3 1 0\r\n",
                "-1"
            ],
            [
                "1\r\n0 0 100 100\r\n0 0 100 0\r\n",
                "-1"
            ]
        ]
    }
]