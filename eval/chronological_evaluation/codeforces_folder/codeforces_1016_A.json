[
    {
        "name": "Death Note",
        "description": "You received a notebook which is called Death Note. This notebook has infinite\nnumber of pages. A rule is written on the last page (huh) of this notebook. It\nsays: \"You have to write names in this notebook during \n    n\n consecutive\ndays. During the \n    i\n-th day you have to write exactly \n    a_i\n names.\".\nYou got scared (of course you got scared, who wouldn't get scared if he just\nreceive a notebook which is named Death Note with a some strange rule written\nin it?). Of course, you decided to follow this rule. When you calmed down, you\ncame up with a strategy how you will write names in the notebook. You have\ncalculated that each page of the notebook can contain exactly \n    m\n names.\nYou will start writing names from the first page. You will write names on the\ncurrent page as long as the limit on the number of names on this page is not\nexceeded. When the current page is over, you turn the page. Note that you\nalways turn the page when it ends, it doesn't matter if it is the last day or\nnot. If after some day the current page still can hold at least one name,\nduring the next day you will continue writing the names from the current page.\nNow you are interested in the following question: how many times will you turn\nthe page during each day? You are interested in the number of pages you will\nturn each day from \n    1\n to \n    n\n. Input The first line of the input\ncontains two integers \n    n\n, \n    m\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n,\n\n    1 \n    \u2264 m \n    \u2264 10^9\n) \u2014 the number of days you will write names in the\nnotebook and the number of names which can be written on each page of the\nnotebook. The second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n), where \n    a_i\n means the number of\nnames you will write in the notebook during the \n    i\n-th day. Output Print\nexactly \n    n\n integers \n    t_1, t_2, \n    \u2026, t_n\n, where \n    t_i\n is the\nnumber of times you will turn the page during the \n    i\n-th day. Examples\nInput 3 5 3 7 9 Output 0 2 1 Input 4 20 10 9 19 2 Output 0 0 1 1 Input 1 100\n99 Output 0 Note In the first example pages of the Death Note will look like\nthis \n    [1, 1, 1, 2, 2], [2, 2, 2, 2, 2], [3, 3, 3, 3, 3], [3, 3, 3, 3]\n.\nEach number of the array describes during which day name on the corresponding\nposition will be written. It is easy to see that you should turn the first and\nthe second page during the second day and the third page during the third day.\n\n",
        "cf_contest_id": 1016,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 5\r\n3 7 9\r\n",
                "0 2 1\r\n"
            ],
            [
                "4 20\r\n10 9 19 2\r\n",
                "0 0 1 1\r\n"
            ],
            [
                "1 100\r\n99\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n2\r\n",
                "2\r\n"
            ],
            [
                "16 2\r\n999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999\r\n",
                "499999999 500000000 499999999 500000000 499999999 500000000 499999999 500000000 499999999 500000000 499999999 500000000 499999999 500000000 499999999 500000000\r\n"
            ],
            [
                "1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "10 4\r\n9 5 6 4 3 9 5 1 10 7\r\n",
                "2 1 2 1 0 3 1 0 3 1\r\n"
            ],
            [
                "9 9\r\n1 7 1 8 4 7 9 8 8\r\n",
                "0 0 1 0 1 1 1 1 0\r\n"
            ]
        ]
    }
]