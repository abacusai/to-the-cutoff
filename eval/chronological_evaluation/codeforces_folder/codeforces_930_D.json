[
    {
        "name": "Game with Tokens",
        "description": "Consider the following game for two players. There is one white token and some\nnumber of black tokens. Each token is placed on a plane in a point with\ninteger coordinates x and y. The players take turn making moves, white starts.\nOn each turn, a player moves all tokens of their color by 1 to up, down, left\nor right. Black player can choose directions for each token independently.\nAfter a turn of the white player the white token can not be in a point where a\nblack token is located. There are no other constraints on locations of the\ntokens: positions of black tokens can coincide, after a turn of the black\nplayer and initially the white token can be in the same point with some black\npoint. If at some moment the white player can't make a move, he loses. If the\nwhite player makes 10^100500 moves, he wins. You are to solve the following\nproblem. You are given initial positions of all black tokens. It is guaranteed\nthat initially all these positions are distinct. In how many places can the\nwhite token be located initially so that if both players play optimally, the\nblack player wins? Input The first line contains a single integer n (1 \u2264 n \u2264\n10^5) \u2014 the number of black points. The (i + 1)-th line contains two integers\nxi, yi ( - 10^5 \u2264 xi, yi, \u2264 10^5) \u2014 the coordinates of the point where the\ni-th black token is initially located. It is guaranteed that initial positions\nof black tokens are distinct. Output Print the number of points where the\nwhite token can be located initially, such that if both players play\noptimally, the black player wins. Examples Input 4 -2 -1 0 1 0 -3 2 -1 Output\n4 Input 4 -2 0 -1 1 0 -2 1 -1 Output 2 Input 16 2 1 1 2 -1 1 0 1 0 0 1 1 2 -1\n2 0 1 0 -1 -1 1 -1 2 2 0 -1 -1 0 0 2 -1 2 Output 4 Note In the first and\nsecond examples initial positions of black tokens are shown with black points,\npossible positions of the white token (such that the black player wins) are\nshown with white points. The first example: The second example: In the third\nexample the white tokens should be located in the inner square 2 \u00d7 2, to make\nthe black player win.\n\n",
        "cf_contest_id": 930,
        "cf_index": "D",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "games",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n-2 -1\r\n0 1\r\n0 -3\r\n2 -1\r\n",
                "4\r\n"
            ],
            [
                "4\r\n-2 0\r\n-1 1\r\n0 -2\r\n1 -1\r\n",
                "2\r\n"
            ],
            [
                "16\r\n2 1\r\n1 2\r\n-1 1\r\n0 1\r\n0 0\r\n1 1\r\n2 -1\r\n2 0\r\n1 0\r\n-1 -1\r\n1 -1\r\n2 2\r\n0 -1\r\n-1 0\r\n0 2\r\n-1 2\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 2\r\n",
                "0\r\n"
            ],
            [
                "4\r\n0 99999\r\n-99999 0\r\n99999 0\r\n0 -99999\r\n",
                "9999800001\r\n"
            ],
            [
                "10\r\n-1 3\r\n-1 7\r\n-8 -4\r\n5 14\r\n-6 -7\r\n11 -8\r\n-11 0\r\n5 -1\r\n9 4\r\n-2 -14\r\n",
                "110\r\n"
            ],
            [
                "50\r\n-15 -80\r\n-80 21\r\n90 38\r\n-100 27\r\n-64 -75\r\n-10 59\r\n38 44\r\n-31 -91\r\n97 76\r\n87 43\r\n5 43\r\n-73 74\r\n-45 42\r\n31 -100\r\n-87 19\r\n-21 -13\r\n-71 38\r\n-54 -39\r\n-89 -32\r\n-18 99\r\n-44 -78\r\n9 76\r\n-69 -40\r\n-29 23\r\n-88 42\r\n-95 86\r\n45 15\r\n-39 100\r\n17 -33\r\n5 -48\r\n-4 -22\r\n-19 54\r\n-13 -64\r\n-86 68\r\n-52 -95\r\n-73 -29\r\n-24 -93\r\n-60 96\r\n41 57\r\n55 43\r\n-64 15\r\n-43 9\r\n29 88\r\n44 -2\r\n67 -94\r\n-20 -81\r\n-75 -74\r\n-80 -44\r\n-49 -7\r\n39 -59\r\n",
                "17145\r\n"
            ],
            [
                "2\r\n-3 0\r\n3 2\r\n",
                "0\r\n"
            ],
            [
                "3\r\n-5 3\r\n4 -5\r\n-3 2\r\n",
                "0\r\n"
            ],
            [
                "4\r\n-5 1\r\n0 -3\r\n-1 4\r\n5 -5\r\n",
                "0\r\n"
            ],
            [
                "4\r\n-1 4\r\n-3 2\r\n-2 1\r\n-5 3\r\n",
                "0\r\n"
            ],
            [
                "5\r\n-3 -5\r\n5 2\r\n-4 1\r\n-2 0\r\n1 2\r\n",
                "0\r\n"
            ],
            [
                "5\r\n2 3\r\n1 -1\r\n0 2\r\n0 5\r\n3 2\r\n",
                "0\r\n"
            ],
            [
                "6\r\n-1 2\r\n5 -4\r\n0 4\r\n3 0\r\n-4 -1\r\n-3 -2\r\n",
                "3\r\n"
            ],
            [
                "6\r\n-3 4\r\n-1 -3\r\n1 -4\r\n1 -1\r\n-5 -1\r\n1 4\r\n",
                "0\r\n"
            ],
            [
                "7\r\n0 4\r\n0 3\r\n-1 3\r\n4 3\r\n1 3\r\n-4 4\r\n5 4\r\n",
                "0\r\n"
            ],
            [
                "7\r\n4 4\r\n2 3\r\n5 -2\r\n-1 1\r\n2 2\r\n-2 -2\r\n-1 2\r\n",
                "0\r\n"
            ],
            [
                "8\r\n2 -4\r\n-4 -2\r\n-3 3\r\n-3 -1\r\n4 -4\r\n2 3\r\n4 -5\r\n0 0\r\n",
                "4\r\n"
            ],
            [
                "8\r\n4 -4\r\n5 -5\r\n3 2\r\n-2 5\r\n-4 -2\r\n2 5\r\n-5 5\r\n5 4\r\n",
                "2\r\n"
            ],
            [
                "9\r\n4 -5\r\n-4 -3\r\n4 -4\r\n1 0\r\n5 -1\r\n-3 1\r\n5 -4\r\n2 -4\r\n4 -3\r\n",
                "4\r\n"
            ],
            [
                "9\r\n-2 0\r\n-4 -4\r\n0 4\r\n2 2\r\n-3 -2\r\n1 3\r\n-5 5\r\n-3 -3\r\n-1 1\r\n",
                "5\r\n"
            ],
            [
                "10\r\n-1 -2\r\n-5 2\r\n-5 0\r\n-1 0\r\n4 0\r\n4 5\r\n0 -3\r\n-3 -3\r\n-5 5\r\n3 -4\r\n",
                "2\r\n"
            ],
            [
                "10\r\n2 -3\r\n-3 3\r\n-1 -1\r\n3 -5\r\n5 -3\r\n0 5\r\n-4 -4\r\n2 -4\r\n-2 -5\r\n-2 4\r\n",
                "11\r\n"
            ],
            [
                "10\r\n2 -4\r\n0 -3\r\n3 2\r\n-1 3\r\n1 -1\r\n4 -5\r\n-4 2\r\n1 0\r\n-2 -5\r\n-2 2\r\n",
                "3\r\n"
            ],
            [
                "10\r\n-4 -2\r\n-1 0\r\n1 -3\r\n2 5\r\n3 1\r\n3 -3\r\n2 4\r\n-2 -1\r\n-3 3\r\n5 2\r\n",
                "7\r\n"
            ],
            [
                "10\r\n2 0\r\n1 2\r\n4 0\r\n3 -1\r\n4 3\r\n-5 4\r\n-4 -1\r\n1 -1\r\n2 -1\r\n-5 -4\r\n",
                "3\r\n"
            ],
            [
                "10\r\n3 4\r\n-2 -3\r\n-2 5\r\n-2 1\r\n5 4\r\n2 -1\r\n5 -4\r\n0 1\r\n4 4\r\n3 -1\r\n",
                "6\r\n"
            ],
            [
                "10\r\n-1 3\r\n2 3\r\n3 2\r\n-4 -3\r\n-2 -5\r\n5 -5\r\n-4 -4\r\n0 1\r\n4 -1\r\n3 3\r\n",
                "11\r\n"
            ],
            [
                "10\r\n1 -3\r\n0 4\r\n-1 3\r\n-2 3\r\n4 1\r\n-1 5\r\n5 4\r\n-5 5\r\n-4 -2\r\n-5 1\r\n",
                "5\r\n"
            ],
            [
                "10\r\n5 -1\r\n-2 5\r\n-5 -1\r\n-3 -3\r\n-5 -4\r\n-3 -2\r\n-1 -4\r\n2 5\r\n4 -5\r\n1 -4\r\n",
                "5\r\n"
            ],
            [
                "10\r\n-1 0\r\n5 -1\r\n-4 1\r\n-3 0\r\n-5 -1\r\n-3 -4\r\n3 3\r\n-2 2\r\n-3 -2\r\n3 -1\r\n",
                "2\r\n"
            ],
            [
                "20\r\n-16 24\r\n9 13\r\n-1 -3\r\n5 7\r\n-20 17\r\n21 5\r\n-10 8\r\n0 -14\r\n17 -5\r\n7 1\r\n-6 16\r\n-18 -9\r\n-7 -8\r\n-13 -23\r\n4 4\r\n10 -3\r\n2 -5\r\n-18 24\r\n19 -19\r\n12 -25\r\n",
                "268\r\n"
            ],
            [
                "20\r\n-4 23\r\n-10 3\r\n20 25\r\n24 -23\r\n1 18\r\n-23 -24\r\n-20 -6\r\n7 22\r\n11 -18\r\n-25 -19\r\n7 -6\r\n-9 22\r\n-24 -2\r\n-9 -17\r\n-1 12\r\n-20 -21\r\n-19 -24\r\n10 -20\r\n20 8\r\n25 -14\r\n",
                "312\r\n"
            ],
            [
                "20\r\n21 20\r\n23 -21\r\n-22 24\r\n-18 -2\r\n-6 -15\r\n-20 -10\r\n-15 21\r\n-18 5\r\n13 10\r\n-11 15\r\n-6 -1\r\n17 6\r\n-13 -23\r\n8 -9\r\n-24 21\r\n8 11\r\n21 9\r\n22 12\r\n-2 -21\r\n-12 -10\r\n",
                "459\r\n"
            ],
            [
                "20\r\n-5 -7\r\n-17 22\r\n13 -4\r\n19 8\r\n2 6\r\n-4 1\r\n7 -15\r\n-5 -15\r\n-14 -13\r\n14 8\r\n-13 -23\r\n8 4\r\n-13 18\r\n-17 3\r\n9 3\r\n7 -11\r\n6 -16\r\n-15 9\r\n-24 -17\r\n-20 -18\r\n",
                "227\r\n"
            ],
            [
                "20\r\n-9 5\r\n-25 -4\r\n14 -22\r\n-17 23\r\n-20 -8\r\n19 22\r\n23 -3\r\n-23 -11\r\n-2 -15\r\n22 -4\r\n-10 -16\r\n16 22\r\n9 9\r\n-18 16\r\n-25 6\r\n8 -10\r\n-2 -17\r\n-12 6\r\n20 -10\r\n17 -6\r\n",
                "529\r\n"
            ],
            [
                "20\r\n-13 15\r\n1 14\r\n-12 7\r\n-18 -15\r\n-19 -11\r\n-7 6\r\n7 -15\r\n4 18\r\n-4 10\r\n-23 16\r\n-8 -15\r\n-3 14\r\n-8 1\r\n17 19\r\n15 19\r\n-3 -12\r\n-25 16\r\n-7 -1\r\n-14 1\r\n18 3\r\n",
                "295\r\n"
            ],
            [
                "20\r\n-17 7\r\n0 -21\r\n15 -10\r\n-5 12\r\n18 -12\r\n-19 11\r\n24 -19\r\n-25 -1\r\n-5 -25\r\n20 -23\r\n-4 9\r\n7 -15\r\n8 -9\r\n23 -15\r\n-2 5\r\n10 -4\r\n12 -24\r\n25 2\r\n5 -6\r\n2 25\r\n",
                "577\r\n"
            ],
            [
                "20\r\n17 23\r\n-7 8\r\n3 9\r\n9 -22\r\n-9 -14\r\n-18 -10\r\n-4 2\r\n10 -3\r\n-9 19\r\n-7 9\r\n-22 4\r\n6 14\r\n-9 -18\r\n2 0\r\n-17 4\r\n6 20\r\n24 13\r\n22 4\r\n-14 -1\r\n-6 -14\r\n",
                "454\r\n"
            ],
            [
                "20\r\n-10 16\r\n24 18\r\n-1 -22\r\n1 4\r\n4 -19\r\n-22 8\r\n-20 -20\r\n25 24\r\n-4 8\r\n7 -11\r\n-17 -14\r\n25 -12\r\n24 23\r\n-18 15\r\n23 -1\r\n-11 -14\r\n-4 -6\r\n-14 18\r\n-10 18\r\n2 -17\r\n",
                "487\r\n"
            ],
            [
                "20\r\n11 1\r\n-15 23\r\n5 24\r\n7 -13\r\n-13 -13\r\n-25 20\r\n22 -16\r\n-23 -2\r\n11 -21\r\n12 1\r\n2 3\r\n-3 -17\r\n4 21\r\n-17 12\r\n13 -14\r\n1 4\r\n23 -22\r\n-18 9\r\n14 5\r\n-23 -3\r\n",
                "502\r\n"
            ]
        ]
    }
]