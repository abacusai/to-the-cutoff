[
    {
        "name": "Conveyor Belts",
        "description": "Conveyor matrix \n    m_n\n is matrix of size \n    n \n    \u00d7 n\n, where \n    n\n\nis an even number. The matrix consists of concentric ribbons moving clockwise.\nIn other words, the conveyor matrix for \n    n = 2\n is simply a matrix \n    2\n    \n    \u00d7 2\n, whose cells form a cycle of length \n    4\n clockwise. For any\nnatural \n    k \n    \u2265 2\n, the matrix \n    m_2k\n is obtained by adding to the\nmatrix \n    m_2k - 2\n an outer layer forming a clockwise cycle. The conveyor\nmatrix \n    8 \n    \u00d7 8\n. You are standing in a cell with coordinates \n    x_1,\n    y_1\n and you want to get into a cell with coordinates \n    x_2, y_2\n. A cell\nhas coordinates \n    x, y\n if it is located at the intersection of the\n\n    x\nth row and the \n    y\nth column. Standing on some cell, every second\nyou will move to the cell next in the direction of movement of the tape on\nwhich you are. You can also move to a neighboring cell by spending one unit of\nenergy. Movements happen instantly and you can make an unlimited number of\nthem at any time. Your task is to find the minimum amount of energy that will\nhave to be spent to get from the cell with coordinates \n    x_1, y_1\n to the\ncell with coordinates \n    x_2, y_2\n. For example, \n    n=8\n initially you are\nin a cell with coordinates \n    1,3\n and you want to get into a cell with\ncoordinates \n    6, 4\n. You can immediately make \n    2\n movements, once you\nare in a cell with coordinates \n    3, 3\n, and then after \n    8\n seconds you\nwill be in the right cell. Input The first line contains an integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of test cases. The\ndescriptions of the test cases follow. The description of each test case\nconsists of one string containing five integers \n    n\n, \n    x_1\n, \n    y_1\n,\n\n    x_2\n and \n    y_2\n (\n    1 \n    \u2264 x_1, y_1, x_2, y_2 \n    \u2264 n \n    \u2264 10^9\n)\n\u2014 matrix size and the coordinates of the start and end cells. It is guaranteed\nthat the number \n    n\n is even. Output For each test case, print one integer\nin a separate line \u2014 the minimum amount of energy that will have to be spent\nto get from the cell with coordinates \n    x_1, y_1\n to the cell with\ncoordinates \n    x_2, y_2\n. Example Input 5 2 1 1 2 2 4 1 4 3 3 8 1 3 4 6 100\n10 20 50 100 1000000000 123456789 987654321 998244353 500000004 Output 0 1 2 9\n10590032\n\n",
        "cf_contest_id": 1811,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 1 1 2 2\r\n4 1 4 3 3\r\n8 1 3 4 6\r\n100 10 20 50 100\r\n1000000000 123456789 987654321 998244353 500000004\r\n",
                "0\r\n1\r\n2\r\n9\r\n10590032\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n2 1 1 2 2\r\n4 1 4 3 3\r\n8 1 3 4 6\r\n",
                "0\r\n1\r\n2\r\n"
            ],
            [
                "1\r\n4 1 1 3 3\r\n",
                "1\r\n"
            ],
            [
                "1\r\n2 1 1 2 2\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1919810 114514 114514 233 2333\r\n",
                "114281\r\n"
            ]
        ]
    }
]