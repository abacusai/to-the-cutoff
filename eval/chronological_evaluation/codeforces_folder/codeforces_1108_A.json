[
    {
        "name": "Two distinct points",
        "description": "You are given two segments \n    [l_1; r_1]\n and \n    [l_2; r_2]\n on the\n\n    x\n-axis. It is guaranteed that \n    l_1 < r_1\n and \n    l_2 < r_2\n.\nSegments may intersect, overlap or even coincide with each other. The example\nof two segments on the \n    x\n-axis. Your problem is to find two integers\n\n    a\n and \n    b\n such that \n    l_1 \n    \u2264 a \n    \u2264 r_1\n, \n    l_2 \n    \u2264 b\n    \n    \u2264 r_2\n and \n    a \n     b\n. In other words, you have to choose two\ndistinct integer points in such a way that the first point belongs to the\nsegment \n    [l_1; r_1]\n and the second one belongs to the segment \n    [l_2;\n    r_2]\n. It is guaranteed that the answer exists. If there are multiple\nanswers, you can print any of them. You have to answer \n    q\n independent\nqueries. Input The first line of the input contains one integer \n    q\n (\n    1\n    \n    \u2264 q \n    \u2264 500\n) \u2014 the number of queries. Each of the next \n    q\n lines\ncontains four integers \n    l_1_i, r_1_i, l_2_i\n and \n    r_2_i\n (\n    1\n    \n    \u2264 l_1_i, r_1_i, l_2_i, r_2_i\n    \u2264 10^9, l_1_i < r_1_i,\n    l_2_i < r_2_i\n) \u2014 the ends of the segments in the \n    i\n-th query.\nOutput Print \n    2q\n integers. For the \n    i\n-th query print two integers\n\n    a_i\n and \n    b_i\n \u2014 such numbers that \n    l_1_i\n    \u2264 a_i \n    \u2264\n    r_1_i\n, \n    l_2_i\n    \u2264 b_i \n    \u2264 r_2_i\n and \n    a_i \n     b_i\n.\nQueries are numbered in order of the input. It is guaranteed that the answer\nexists. If there are multiple answers, you can print any. Example Input 5 1 2\n1 2 2 6 3 4 2 4 1 3 1 2 1 3 1 4 5 8 Output 2 1 3 4 3 2 1 2 3 7\n\n",
        "cf_contest_id": 1108,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2 1 2\r\n2 6 3 4\r\n2 4 1 3\r\n1 2 1 3\r\n1 4 5 8\r\n",
                "1 2\r\n2 3\r\n2 1\r\n1 3\r\n1 5\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 2 1 2\r\n",
                "1 2\r\n"
            ],
            [
                "1\r\n233 233333 123 456\r\n",
                "233 123\r\n"
            ]
        ]
    }
]