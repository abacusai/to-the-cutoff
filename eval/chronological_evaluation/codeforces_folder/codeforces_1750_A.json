[
    {
        "name": "Indirect Sort",
        "description": "You are given a permutation \n    a_1, a_2, \n    \u2026, a_n\n of size \n    n\n,\nwhere each integer from \n    1\n to \n    n\n appears exactly once. You can do\nthe following operation any number of times (possibly, zero): Choose any three\nindices \n    i, j, k\n (\n    1 \n    \u2264 i < j < k \n    \u2264 n\n). If \n    a_i > a_k\n,\nreplace \n    a_i\n with \n    a_i + a_j\n. Otherwise, swap \n    a_j\n and\n\n    a_k\n. Determine whether you can make the array \n    a\n sorted in non-\ndescending order. Input Each test consists of multiple test cases. The first\nline contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 5000\n) \u2014 the\nnumber of test cases. The description of test cases follows. The first line of\neach test case contains a single integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264 10\n) \u2014\nthe length of the array \n    a\n. The second line contains \n    n\n integers\n\n    a_1,a_2,\n    \u2026,a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n, \n    a_i \n    \u2260 a_j\n if\n\n    i \n    \u2260 j\n) \u2014 the elements of the array \n    a\n. Output For each test\ncase, output \"Yes\" (without quotes) if the array can be sorted in non-\ndescending order, and \"No\" (without quotes) otherwise. You can output \"Yes\"\nand \"No\" in any case (for example, strings \"YES\", \"yEs\" and \"yes\" will be\nrecognized as a positive response). Example Input 7 3 1 2 3 3 1 3 2 7 5 3 4 7\n6 2 1 7 7 6 5 4 3 2 1 5 2 1 4 5 3 5 2 1 3 4 5 7 1 2 6 7 4 3 5 Output Yes Yes\nNo No No No Yes Note In the first test case, \n    [1,2,3]\n is already sorted\nin non-descending order. In the second test case, we can choose \n    i = 1,j =\n    2,k = 3\n. Since \n    a_1 \n    \u2264 a_3\n, swap \n    a_2\n and \n    a_3\n, the array\nthen becomes \n    [1,2,3]\n, which is sorted in non-descending order. In the\nseventh test case, we can do the following operations successively: Choose\n\n    i = 5,j = 6,k = 7\n. Since \n    a_5 \n    \u2264 a_7\n, swap \n    a_6\n and\n\n    a_7\n, the array then becomes \n    [1,2,6,7,4,5,3]\n. Choose \n    i = 5,j =\n    6,k = 7\n. Since \n    a_5 > a_7\n, replace \n    a_5\n with \n    a_5+a_6=9\n, the\narray then becomes \n    [1,2,6,7,9,5,3]\n. Choose \n    i = 2,j = 5,k = 7\n.\nSince \n    a_2 \n    \u2264 a_7\n, swap \n    a_5\n and \n    a_7\n, the array then\nbecomes \n    [1,2,6,7,3,5,9]\n. Choose \n    i = 2,j = 4,k = 6\n. Since \n    a_2\n    \n    \u2264 a_6\n, swap \n    a_4\n and \n    a_6\n, the array then becomes\n\n    [1,2,6,5,3,7,9]\n. Choose \n    i = 1,j = 3,k = 5\n. Since \n    a_1 \n    \u2264\n    a_5\n, swap \n    a_3\n and \n    a_5\n, the array then becomes\n\n    [1,2,3,5,6,7,9]\n, which is sorted in non-descending order. In the third,\nthe fourth, the fifth and the sixth test cases, it can be shown that the array\ncannot be sorted in non-descending order.\n\n",
        "cf_contest_id": 1750,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n3\r\n1 2 3\r\n3\r\n1 3 2\r\n7\r\n5 3 4 7 6 2 1\r\n7\r\n7 6 5 4 3 2 1\r\n5\r\n2 1 4 5 3\r\n5\r\n2 1 3 4 5\r\n7\r\n1 2 6 7 4 3 5\r\n",
                "YES\r\nYES\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\n"
            ]
        ],
        "private_cases": []
    }
]