[
    {
        "name": "Buy One, Get One Free",
        "description": "A nearby pie shop is having a special sale. For each pie you pay full price\nfor, you may select one pie of a strictly lesser value to get for free. Given\nthe prices of all the pies you wish to acquire, determine the minimum total\namount you must pay for all of the pies. Input Input will begin with an\ninteger n (1 \u2264 n \u2264 500000), the number of pies you wish to acquire. Following\nthis is a line with n integers, each indicating the cost of a pie. All costs\nare positive integers not exceeding 10^9. Output Print the minimum cost to\nacquire all the pies. Please, do not use the \n64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the\n\nOutput 25 Input 4 309999 6000 2080 2080 Output 314159 Note In the first test\ncase you can pay for a pie with cost 5 and get a pie with cost 4 for free,\nthen pay for a pie with cost 5 and get a pie with cost 3 for free, then pay\nfor a pie with cost 4 and get a pie with cost 3 for free. In the second test\ncase you have to pay full price for every pie.\n\n",
        "cf_contest_id": 335,
        "cf_index": "F",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n3 4 5 3 4 5\r\n",
                "14\r\n"
            ],
            [
                "5\r\n5 5 5 5 5\r\n",
                "25\r\n"
            ],
            [
                "4\r\n309999 6000 2080 2080\r\n",
                "314159\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 1 1 1 1 2 3 4 5 6\r\n",
                "16\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "7\r\n10 9 5 5 4 3 2\r\n",
                "22\r\n"
            ],
            [
                "30\r\n3 6 3 8 6 4 4 2 4 10 8 5 9 6 7 7 9 4 7 4 10 1 9 10 4 7 7 4 2 3\r\n",
                "96\r\n"
            ],
            [
                "40\r\n2 6 5 5 6 6 7 8 6 5 3 9 9 1 8 3 7 3 7 2 3 1 3 1 5 8 1 3 8 2 3 2 2 1 4 4 4 3 5 5\r\n",
                "100\r\n"
            ],
            [
                "50\r\n4 2 6 7 2 6 3 8 8 2 4 8 4 4 1 4 5 2 2 5 6 4 3 3 3 6 8 2 1 3 1 8 2 3 7 4 7 5 4 8 3 5 7 8 6 7 5 8 7 1\r\n",
                "130\r\n"
            ],
            [
                "2\r\n505072434 3351179\r\n",
                "505072434\r\n"
            ],
            [
                "1\r\n880460566\r\n",
                "880460566\r\n"
            ]
        ]
    }
]