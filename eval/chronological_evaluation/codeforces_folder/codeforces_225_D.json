[
    {
        "name": "Snake",
        "description": "Let us remind you the rules of a very popular game called \"Snake\" (or\nsometimes \"Boa\", \"Python\" or \"Worm\"). The game field is represented by an n \u00d7\nm rectangular table. Some squares of the field are considered impassable\n(walls), all other squares of the fields are passable. You control a snake,\nthe snake consists of segments. Each segment takes up exactly one passable\nsquare of the field, but any passable square contains at most one segment. All\nsegments are indexed by integers from 1 to k, where k is the snake's length.\nThe 1-th segment is the head and the k-th segment is the tail. For any i (1 \u2264\ni < k), segments with indexes i and i + 1 are located in the adjacent squares\nof the field, that is, these squares share a common side. One of the passable\nfield squares contains an apple. The snake's aim is to reach the apple and eat\nit (that is, to position its head in the square with the apple). The snake\nmoves throughout the game. During one move the snake can move its head to an\nadjacent field square. All other segments follow the head. That is, each\nsegment number i (1 < i \u2264 k) moves to the square that has just had segment\nnumber i - 1. Consider that all segments including the head move\nsimultaneously (see the second test sample). If the snake's head moves to an\nunpassable square or to the square, occupied by its other segment, the snake\ndies. That's why we will consider such moves unvalid. Your task is to\ndetermine the minimum number of valid moves that the snake needs to reach the\napple. Input The first line contains two space-separated integers n and m (1 \u2264\nn, m \u2264 15) \u2014 the number of rows and columns of the game field. Next n lines\ndescribe the game field. Each of these lines contains m characters. Character\n\"#\" represents a wall, \".\" is a passable square, \"@\" is an apple. The snake's\nfirst segment is represented by character \"1\", the second one segment \u2014 by\ncharacter \"2\" and so on. The game field description doesn't contain any\ncharacters besides \"#', \".\", \"@\" and digits (except 0). It is guaranteed that\nthe described field is correct. It is guaranteed that the described field\ncontains exactly one apple and exactly one snake, the snake's length is at\nleast 3 and at most 9. Output Print a single integer to the output \u2014 the\nminimum number of moves needed to reach the apple. If the snake can't reach\nthe apple, print -1. Examples Input 4 5 ##... ..1#@ 432#. ...#. Output 4 Input\n4 4 #78# .612 .543 [email protected] Output 6 Input 3 2 [email protected] 2#\n1# Output -1\n\n",
        "cf_contest_id": 225,
        "cf_index": "D",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dfs and similar",
            "graphs",
            "implementation"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 5\r\n##...\r\n..1#@\r\n432#.\r\n...#.\r\n",
                "4\r\n"
            ],
            [
                "4 4\r\n#78#\r\n.612\r\n.543\r\n..@.\r\n",
                "6\r\n"
            ],
            [
                "3 2\r\n3@\r\n2#\r\n1#\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 1\r\n.\r\n.\r\n3\r\n2\r\n1\r\n.\r\n.\r\n.\r\n.\r\n@\r\n",
                "5\r\n"
            ],
            [
                "10 1\r\n@\r\n.\r\n3\r\n2\r\n1\r\n.\r\n.\r\n.\r\n.\r\n.\r\n",
                "-1\r\n"
            ],
            [
                "5 5\r\n678.#\r\n5.9##\r\n4..#.\r\n32..#\r\n.1.#@\r\n",
                "-1\r\n"
            ],
            [
                "4 15\r\n########.12####\r\n#.#####@##3####\r\n.##############\r\n####..###.##.##\r\n",
                "-1\r\n"
            ],
            [
                "15 15\r\n###############\r\n###############\r\n###############\r\n###############\r\n###############\r\n###############\r\n###############\r\n###############\r\n#####1678###@##\r\n#####25#9######\r\n#####34########\r\n###############\r\n###############\r\n###############\r\n###############\r\n",
                "-1\r\n"
            ],
            [
                "15 1\r\n.\r\n.\r\n.\r\n.\r\n9\r\n8\r\n7\r\n6\r\n5\r\n4\r\n3\r\n2\r\n1\r\n@\r\n.\r\n",
                "1\r\n"
            ],
            [
                "10 1\r\n@\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n",
                "1\r\n"
            ],
            [
                "9 1\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n@\r\n",
                "-1\r\n"
            ],
            [
                "8 1\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n@\r\n",
                "-1\r\n"
            ],
            [
                "1 15\r\n..123456789..@.\r\n",
                "-1\r\n"
            ],
            [
                "1 10\r\n@123456789\r\n",
                "1\r\n"
            ],
            [
                "1 9\r\n12345678@\r\n",
                "-1\r\n"
            ],
            [
                "1 8\r\n@7654321\r\n",
                "-1\r\n"
            ]
        ]
    }
]