[
    {
        "name": "Inna and Large Sweet Matrix",
        "description": "Inna loves sweets very much. That's why she wants to play the \"Sweet Matrix\"\ngame with Dima and Sereja. But Sereja is a large person, so the game proved\nsmall for him. Sereja suggested playing the \"Large Sweet Matrix\" game. The\n\"Large Sweet Matrix\" playing field is an n \u00d7 m matrix. Let's number the rows\nof the matrix from 1 to n, and the columns \u2014 from 1 to m. Let's denote the\ncell in the i-th row and j-th column as (i, j). Each cell of the matrix can\ncontain multiple candies, initially all cells are empty. The game goes in w\nmoves, during each move one of the two following events occurs: Sereja chooses\nfive integers x1, y1, x2, y2, v (x1 \u2264 x2, y1 \u2264 y2) and adds v candies to each\nmatrix cell (i, j) (x1 \u2264 i \u2264 x2; y1 \u2264 j \u2264 y2). Sereja chooses four integers\nx1, y1, x2, y2 (x1 \u2264 x2, y1 \u2264 y2). Then he asks Dima to calculate the total\nnumber of candies in cells (i, j) (x1 \u2264 i \u2264 x2; y1 \u2264 j \u2264 y2) and he asks Inna\nto calculate the total number of candies in the cells of matrix (p, q), which\nmeet the following logical criteria: (p < x1 OR p > x2) AND (q < y1 OR q >\ny2). Finally, Sereja asks to write down the difference between the number Dima\nhas calculated and the number Inna has calculated (D - I). Unfortunately,\nSereja's matrix is really huge. That's why Inna and Dima aren't coping with\nthe calculating. Help them! Input The first line of the input contains three\nintegers n, m and w (3 \u2264 n, m \u2264 4\u00b710^6; 1 \u2264 w \u2264 10^5). The next w lines\ndescribe the moves that were made in the game. A line that describes an event\nof the first type contains 6 integers: 0, x1, y1, x2, y2 and v (1 \u2264 x1 \u2264 x2 \u2264\nn; 1 \u2264 y1 \u2264 y2 \u2264 m; 1 \u2264 v \u2264 10^9). A line that describes an event of the\nsecond type contains 5 integers: 1, x1, y1, x2, y2 (2 \u2264 x1 \u2264 x2 \u2264 n - 1; 2 \u2264\ny1 \u2264 y2 \u2264 m - 1). It is guaranteed that the second type move occurs at least\nonce. It is guaranteed that a single operation will not add more than 10^9\ncandies. Be careful, the constraints are very large, so please use optimal\ndata structures. Max-tests will be in pretests. Output For each second type\nmove print a single integer on a single line \u2014 the difference between Dima and\nInna's numbers. Examples Input 4 5 5 0 1 1 2 3 2 0 2 2 3 3 3 0 1 5 4 5 1 1 2 3\n3 4 1 3 4 3 4 Output 2 -21 Note Note to the sample. After the first query the\nmatrix looks as: 22200 22200 00000 00000 After the second one it is: 22200\n25500 03300 00000 After the third one it is: 22201 25501 03301 00001 For the\nfourth query, Dima's sum equals 5 + 0 + 3 + 0 = 8 and Inna's sum equals 4 + 1\n+ 0 + 1 = 6. The answer to the query equals 8 - 6 = 2. For the fifth query,\nDima's sum equals 0 and Inna's sum equals 18 + 2 + 0 + 1 = 21. The answer to\nthe query is 0 - 21 = -21.\n\n",
        "cf_contest_id": 390,
        "cf_index": "E",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4 5 5\r\n0 1 1 2 3 2\r\n0 2 2 3 3 3\r\n0 1 5 4 5 1\r\n1 2 3 3 4\r\n1 3 4 3 4\r\n",
                "2\r\n-21\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 3 1\r\n1 2 2 2 2\r\n",
                "0\r\n"
            ],
            [
                "4000000 4000000 1\r\n1 2 2 3999999 3999999\r\n",
                "0\r\n"
            ],
            [
                "52 27 8\r\n1 2 2 2 2\r\n0 17 16 26 19 23114845\r\n1 23 7 33 17\r\n1 2 11 26 13\r\n0 14 21 27 21 36953730\r\n1 18 12 24 14\r\n0 23 25 27 27 49008751\r\n0 23 19 33 25 5754688\r\n",
                "0\r\n-92459380\r\n0\r\n-536054250\r\n"
            ],
            [
                "89 25 25\r\n1 2 2 2 2\r\n0 29 7 69 12 2609321\r\n1 17 4 53 7\r\n0 72 13 75 20 4360299\r\n0 72 4 82 7 16432669\r\n0 71 16 86 16 25824234\r\n1 2 24 44 24\r\n1 5 16 5 16\r\n0 78 20 81 23 24291998\r\n0 34 10 82 17 819901\r\n1 83 8 84 18\r\n0 64 16 70 24 7896578\r\n0 49 10 83 24 713719\r\n0 4 16 12 16 7608322\r\n0 59 23 82 23 12797033\r\n0 20 11 76 16 980481\r\n0 72 6 72 10 3036815\r\n1 50 2 61 13\r\n0 44 20 50 24 16865019\r\n1 23 12 32 13\r\n0 49 23 54 25 50991326\r\n1 8 14 11 19\r\n1 71 2 85 4\r\n1 49 19 59 19\r\n1 86 18 88 22\r\n",
                "0\r\n-143512655\r\n-1667152898\r\n-1487018774\r\n-1201925489\r\n-1896144091\r\n-4328334312\r\n-4418048436\r\n-3492846234\r\n-4110309210\r\n-4609041311\r\n"
            ]
        ]
    }
]