[
    {
        "name": "Dreamoon and Binary",
        "description": "Dreamoon saw a large integer x written on the ground and wants to print its\nbinary form out. Dreamoon has accomplished the part of turning x into its\nbinary format. Now he is going to print it in the following manner. He has an\ninteger n = 0 and can only perform the following two operations in any order\nfor unlimited times each: Print n in binary form without leading zeros, each\nprint will append to the right of previous prints. Increase n by 1. Let's\ndefine an ideal sequence as a sequence of operations that can successfully\nprint binary representation of x without leading zeros and ends with a print\noperation (i.e. operation 1). Dreamoon wants to know how many different ideal\nsequences are there and the length (in operations) of the shortest ideal\nsequence. The answers might be large so please print them modulo 1000000007\n(10^9 + 7). Let's define the string representation of an ideal sequence as a\nstring of '1' and '2' where the i-th character in the string matches the i-th\noperation performed. Two ideal sequences are called different if their string\nrepresentations are different. Input The single line of the input contains a\nbinary integer representing x (1 \u2264 x < 2^5000) without leading zeros. Output\nThe first line of the output should contain an integer representing the number\nof different ideal sequences modulo 1000000007 (10^9 + 7). The second line of\nthe output contains an integer representing the minimal length of an ideal\nsequence modulo 1000000007 (10^9 + 7). Examples Input 101 Output 1 6 Input\n11010 Output 3 5 Note For the first sample, the shortest and the only ideal\nsequence is \u00ab222221\u00bb of length 6. For the second sample, there are three ideal\nsequences \u00ab21211\u00bb, \u00ab212222222221\u00bb, \u00ab222222222222222222222222221\u00bb. Among them\nthe shortest one has length 5.\n\n",
        "cf_contest_id": 477,
        "cf_index": "D",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "101\r\n",
                "1\r\n6\r\n"
            ],
            [
                "11010\r\n",
                "3\r\n5\r\n"
            ]
        ],
        "private_cases": [
            [
                "100000000000000000000\r\n",
                "1\r\n1048577\r\n"
            ],
            [
                "1111111111111111111111111111111\r\n",
                "6842\r\n18\r\n"
            ],
            [
                "100110011010000111010101\r\n",
                "19\r\n89\r\n"
            ],
            [
                "1\r\n",
                "1\r\n2\r\n"
            ],
            [
                "11\r\n",
                "2\r\n3\r\n"
            ],
            [
                "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\r\n",
                "190569292\r\n40\r\n"
            ],
            [
                "10\r\n",
                "1\r\n3\r\n"
            ],
            [
                "1000000010\r\n",
                "1\r\n515\r\n"
            ],
            [
                "10101010001011000111110110001000001111001010100100\r\n",
                "330\r\n4776\r\n"
            ],
            [
                "11011011101001101101000000011110011001001100110101\r\n",
                "601\r\n4922\r\n"
            ],
            [
                "11100111000001010000011011000000111000111111010110\r\n",
                "233\r\n36827\r\n"
            ],
            [
                "10100010101001011010101101010110001101111001001100\r\n",
                "283\r\n595\r\n"
            ],
            [
r\n",
                "39250746\r\n781070949\r\n"
            ],
            [
r\n",
                "998686701\r\n895080503\r\n"
            ],
            [
                "1100011110111111111110110001111101110111001100011001101\r\n",
                "1624\r\n2259\r\n"
            ],
            [
                "100000000000000000000000000000000001\r\n",
                "1\r\n359738132\r\n"
            ]
        ]
    }
]