[
    {
        "name": "Even Odds",
        "description": "Being a nonconformist, Volodya is displeased with the current state of things,\nparticularly with the order of natural numbers (natural number is positive\ninteger number). He is determined to rearrange them. But there are too many\nnatural numbers, so Volodya decided to start with the first n. He writes down\nthe following sequence of numbers: firstly all odd integers from 1 to n (in\nascending order), then all even integers from 1 to n (also in ascending\norder). Help our hero to find out which number will stand at the position\nnumber k. Input The only line of input contains integers n and k (1 \u2264 k \u2264 n \u2264\n10^12). Please, do not use the \nin C++. It is preferred to use the cin, cout streams or the \nOutput Print the number that will stand at the position number k after\nVolodya's manipulations. Examples Input 10 3 Output 5 Input 7 7 Output 6 Note\nIn the first sample Volodya's sequence will look like this: 1, 3, 5, 7, 9, 2,\n4, 6, 8, 10. The third place in the sequence is therefore occupied by the\nnumber 5.\n\n",
        "cf_contest_id": 318,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10 3\r\n",
                "5\r\n"
            ],
            [
                "7 7\r\n",
                "6\r\n"
            ]
        ],
        "private_cases": [
            [
                "7 1\r\n",
                "1\r\n"
            ],
            [
                "7 2\r\n",
                "3\r\n"
            ],
            [
                "8 5\r\n",
                "2\r\n"
            ],
            [
                "8 3\r\n",
                "5\r\n"
            ],
            [
                "8 4\r\n",
                "7\r\n"
            ],
            [
                "1000000000000 500000000001\r\n",
                "2\r\n"
            ],
            [
                "999999999997 499999999999\r\n",
                "999999999997\r\n"
            ],
            [
                "999999999999 999999999999\r\n",
                "999999999998\r\n"
            ],
            [
                "1000000000000 1\r\n",
                "1\r\n"
            ],
            [
                "999999999999 1\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n",
                "1\r\n"
            ],
            [
                "1000000000000 1000000000000\r\n",
                "1000000000000\r\n"
            ],
            [
                "1000000000000 500000000000\r\n",
                "999999999999\r\n"
            ],
            [
                "1000000000000 499999999999\r\n",
                "999999999997\r\n"
            ],
            [
                "999999999997 499999999998\r\n",
                "999999999995\r\n"
            ],
            [
                "619234238 556154835\r\n",
                "493075432\r\n"
            ],
            [
                "38151981 36650624\r\n",
                "35149266\r\n"
            ],
            [
                "680402465 442571217\r\n",
                "204739968\r\n"
            ],
            [
                "109135284 9408714\r\n",
                "18817427\r\n"
            ],
            [
                "603701841 56038951\r\n",
                "112077901\r\n"
            ],
            [
                "356764822 321510177\r\n",
                "286255532\r\n"
            ],
            [
                "284911189 142190783\r\n",
                "284381565\r\n"
            ],
            [
                "91028405 61435545\r\n",
                "31842684\r\n"
            ]
        ]
    }
]