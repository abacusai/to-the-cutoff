[
    {
        "name": "Hyper String",
        "description": "Paul Erd\u0151s's prediction came true. Finally an alien force landed on the Earth.\nIn contrary to our expectation they didn't asked the humans to compute the\nvalue of a Ramsey number (maybe they had solved it themselves). They asked\nanother question which seemed as hard as calculating Ramsey numbers. Aliens\nthreatened that if humans don't solve this problem in less than 2 hours they\nwill destroy the Earth. Before telling the problem they introduced the concept\nof Hyper Strings. A Hyper String is made by concatenation of some base\nstrings. Suppose you are given a list of base strings b1, b2, ..., bn. Now the\nHyper String made from indices list i1, i2, ..., im is concatenation of base\nstrings bi1, bi2, ..., bim. A Hyper String can be very large and doing\noperations on it is very costly for computers. The aliens asked humans to\ncompute the length of the longest common sub-sequence of a Hyper String t with\na string s. Input The first line of input contains the single integer n (1 \u2264 n\n\u2264 2000) \u2014 the number of base strings. The next n lines contains values of base\nstrings. Each base string is made of lowercase Latin letters. A base string\ncannot be empty string and the sum of lengths of all n base strings doesn't\nexceed 10^6. The next line contains the single integer m (1 \u2264 m \u2264 2000) \u2014 the\nnumber of base strings in the given Hyper String t. The next line contains m\nspace-separated integer numbers i1, i2, ..., im (1 \u2264 ij \u2264 n) \u2014 the indices of\nbase strings in the Hyper String t. The last line contains a non-empty string\ns. String s is made of lowercase Latin letters and its length is no more than\n2000 characters. Output Print the length of longest common sub-sequence of\nHyper String t and string s. If there is no common sub-sequence print 0.\nExamples Input 2 cba dgh 2 1 2 aedfhr Output 3 Input 2 b a 5 1 2 1 2 1 aaa\nOutput 2 Note The length of string s is the number of characters in it. If the\nlength of string s is marked as |s|, then string s can be represented as s =\ns1s2... s|s|. A non-empty string y = s[p1p2... p|y|] = sp1sp2... sp|y| (1 \u2264 p1\n< p2 < ... < p|y| \u2264 |s|) is a subsequence of string s. For example, \"coders\"\nis a subsequence of \"codeforces\".\n\n",
        "cf_contest_id": 176,
        "cf_index": "D",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\ncba\r\ndgh\r\n2\r\n1 2\r\naedfhr\r\n",
                "3\r\n"
            ],
            [
                "2\r\nb\r\na\r\n5\r\n1 2 1 2 1\r\naaa\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nsalam\r\n1\r\n1\r\nmalam\r\n",
                "4\r\n"
            ],
            [
                "2\r\na\r\na\r\n3\r\n1 2 1\r\nb\r\n",
                "0\r\n"
            ],
            [
                "4\r\neevery\r\ntthing\r\niis\r\nook\r\n4\r\n4 3 1 2\r\nimokyoureok\r\n",
                "3\r\n"
            ],
            [
                "11\r\nall\r\nin\r\nall\r\nyou\r\nare\r\njust\r\nanother\r\nbrick\r\nin\r\nthe\r\nwall\r\n21\r\n1 2 4 3 6 8 7 10 1 2 11 3 9 8 7 3 5 2 2 10 6\r\npinkfloyd\r\n",
                "5\r\n"
            ],
            [
                "1\r\na\r\n1\r\n1\r\na\r\n",
                "1\r\n"
            ],
            [
                "1\r\nz\r\n1\r\n1\r\nx\r\n",
                "0\r\n"
            ],
            [
                "5\r\na\r\nb\r\nc\r\nd\r\ne\r\n5\r\n1 4 3 2 5\r\nedcba\r\n",
                "3\r\n"
            ],
            [
                "4\r\nevery\r\nthing\r\nis\r\nok\r\n4\r\n4 3 1 2\r\nokiseverything\r\n",
                "14\r\n"
            ]
        ]
    }
]