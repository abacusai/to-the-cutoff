[
    {
        "name": "Exploration plan",
        "description": "The competitors of Bubble Cup X gathered after the competition and discussed\nwhat is the best way to get to know the host country and its cities. After\nexploring the map of Serbia for a while, the competitors came up with the\nfollowing facts: the country has V cities which are indexed with numbers from\n1 to V, and there are E bi-directional roads that connect the cites. Each road\nhas a weight (the time needed to cross that road). There are N teams at the\nBubble Cup and the competitors came up with the following plan: each of the N\nteams will start their journey in one of the V cities, and some of the teams\nshare the starting position. They want to find the shortest time T, such that\nevery team can move in these T minutes, and the number of different cities\nthey end up in is at least K (because they will only get to know the cities\nthey end up in). A team doesn't have to be on the move all the time, if they\nlike it in a particular city, they can stay there and wait for the time to\npass. Please help the competitors to determine the shortest time T so it's\npossible for them to end up in at least K different cities or print -1 if that\nis impossible no matter how they move. Note that there can exist multiple\nroads between some cities. Input The first line contains four integers: V, E,\nN and K (1 \u2264 V \u2264 600, 1 \u2264 E \u2264 20000, 1 \u2264 N \u2264 min(V, 200), 1 \u2264 K \u2264 N), number\nof cities, number of roads, number of teams and the smallest number of\ndifferent cities they need to end up in, respectively. The second line\ncontains N integers, the cities where the teams start their journey. Next E\nlines contain information about the roads in following format: Ai Bi Ti (1 \u2264\nAi, Bi \u2264 V, 1 \u2264 Ti \u2264 10000), which means that there is a road connecting\ncities Ai and Bi, and you need Ti minutes to cross that road. Output Output a\nsingle integer that represents the minimal time the teams can move for, such\nthat they end up in at least K different cities or output -1 if there is no\nsolution. If the solution exists, result will be no greater than 1731311.\nExample Input 6 7 5 4 5 5 2 2 5 1 3 3 1 5 2 1 6 5 2 5 4 2 6 7 3 4 11 3 5 3\nOutput 3 Note Three teams start from city 5, and two teams start from city 2.\nIf they agree to move for 3 minutes, one possible situation would be the\nfollowing: Two teams in city 2, one team in city 5, one team in city 3 , and\none team in city 1. And we see that there are four different cities the teams\nend their journey at.\n\n",
        "cf_contest_id": 852,
        "cf_index": "D",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "flows",
            "graph matchings",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 7 5 4\r\n5 5 2 2 5\r\n1 3 3\r\n1 5 2\r\n1 6 5\r\n2 5 4\r\n2 6 7\r\n3 4 11\r\n3 5 3\r\n",
                "3"
            ]
        ],
        "private_cases": [
            [
                "5 6 4 1\r\n4 4 4 4\r\n5 4 40\r\n3 2 989\r\n1 2 29\r\n4 3 18\r\n2 5 697\r\n4 3 51\r\n",
                "0"
            ],
            [
                "15 6 9 8\r\n3 4 2 7 7 4 3 3 2\r\n13 2 9569\r\n15 1 8936\r\n12 5 3842\r\n13 4 5637\r\n12 2 8406\r\n7 2 667\r\n",
                "-1"
            ],
            [
                "8 20 6 5\r\n6 2 2 1 2 6\r\n4 7 40\r\n7 2 756\r\n1 2 24\r\n3 4 69\r\n2 3 333\r\n4 6 67\r\n6 2 25\r\n1 5 128\r\n3 8 3\r\n7 6 290\r\n7 1 50\r\n5 6 40\r\n2 8 16\r\n7 3 3\r\n1 4 732\r\n5 4 9\r\n2 7 2\r\n6 3 586\r\n6 2 69\r\n4 6 29\r\n",
                "5"
            ],
            [
                "15 1 2 2\r\n5 5\r\n15 14 1711\r\n",
                "-1"
            ]
        ]
    }
]