[
    {
        "name": "Eugeny and Play List",
        "description": "Eugeny loves listening to music. He has n songs in his play list. We know that\nsong number i has the duration of ti minutes. Eugeny listens to each song,\nperhaps more than once. He listens to song number i ci times. Eugeny's play\nlist is organized as follows: first song number 1 plays c1 times, then song\nnumber 2 plays c2 times, ..., in the end the song number n plays cn times.\nEugeny took a piece of paper and wrote out m moments of time when he liked a\nsong. Now for each such moment he wants to know the number of the song that\nplayed at that moment. The moment x means that Eugeny wants to know which song\nwas playing during the x-th minute of his listening to the play list. Help\nEugeny and calculate the required numbers of songs. Input The first line\ncontains two integers n, m (1 \u2264 n, m \u2264 10^5). The next n lines contain pairs\nof integers. The i-th line contains integers ci, ti (1 \u2264 ci, ti \u2264 10^9) \u2014 the\ndescription of the play list. It is guaranteed that the play list's total\nduration doesn't exceed 10^9 . The next line contains m positive integers v1,\nv2, ..., vm, that describe the moments Eugeny has written out. It is\nguaranteed that there isn't such moment of time vi, when the music doesn't\nplay any longer. It is guaranteed that vi < vi + 1 (i < m). The moment of time\nvi means that Eugeny wants to know which song was playing during the vi-th\nmunite from the start of listening to the playlist. Output Print m integers \u2014\nthe i-th number must equal the number of the song that was playing during the\nvi-th minute after Eugeny started listening to the play list. Examples Input 1\n2 2 8 1 16 Output 1 1 Input 4 9 1 2 2 1 1 1 2 2 1 2 3 4 5 6 7 8 9 Output 1 1 2\n2 3 4 4 4 4\n\n",
        "cf_contest_id": 302,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "implementation",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 2\r\n2 8\r\n1 16\r\n",
                "1\r\n1\r\n"
            ],
            [
                "4 9\r\n1 2\r\n2 1\r\n1 1\r\n2 2\r\n1 2 3 4 5 6 7 8 9\r\n",
                "1\r\n1\r\n2\r\n2\r\n3\r\n4\r\n4\r\n4\r\n4\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 3\r\n2 8\r\n5 1\r\n10 5\r\n13 16 62\r\n",
                "1\r\n1\r\n3\r\n"
            ],
            [
                "4 4\r\n2 8\r\n2 2\r\n6 3\r\n8 7\r\n13 23 29 85\r\n",
                "1\r\n3\r\n3\r\n4\r\n"
            ],
            [
                "5 5\r\n9 6\r\n8 7\r\n2 9\r\n10 3\r\n8 10\r\n69 95 146 162 177\r\n",
                "2\r\n2\r\n4\r\n5\r\n5\r\n"
            ],
            [
                "6 6\r\n4 9\r\n8 5\r\n3 8\r\n8 10\r\n4 2\r\n10 9\r\n15 45 97 197 231 265\r\n",
                "1\r\n2\r\n3\r\n6\r\n6\r\n6\r\n"
            ],
            [
                "7 7\r\n1 10\r\n1 1\r\n7 2\r\n4 9\r\n10 4\r\n5 5\r\n7 1\r\n48 71 86 87 110 113 127\r\n",
                "4\r\n5\r\n5\r\n5\r\n6\r\n6\r\n7\r\n"
            ],
            [
                "8 8\r\n4 6\r\n10 9\r\n5 1\r\n8 7\r\n4 7\r\n2 6\r\n5 3\r\n1 10\r\n21 91 93 142 145 157 181 206\r\n",
                "1\r\n2\r\n2\r\n4\r\n4\r\n4\r\n5\r\n6\r\n"
            ],
            [
                "9 9\r\n2 5\r\n7 1\r\n8 2\r\n8 8\r\n8 8\r\n4 4\r\n6 10\r\n10 9\r\n2 9\r\n1 10 36 48 76 151 229 276 310\r\n",
                "1\r\n1\r\n4\r\n4\r\n4\r\n5\r\n7\r\n8\r\n8\r\n"
            ],
            [
                "10 10\r\n3 1\r\n2 7\r\n5 1\r\n7 2\r\n9 10\r\n9 5\r\n2 5\r\n4 10\r\n9 9\r\n1 9\r\n26 34 37 141 146 201 239 245 296 299\r\n",
                "4\r\n4\r\n5\r\n6\r\n6\r\n8\r\n9\r\n9\r\n9\r\n9\r\n"
            ],
            [
                "2 3\r\n1 500000000\r\n1 500000000\r\n499999999 500000000 500000001\r\n",
                "1\r\n1\r\n2\r\n"
            ],
            [
                "2 3\r\n500000000 1\r\n1 500000000\r\n499999999 500000000 500000001\r\n",
                "1\r\n1\r\n2\r\n"
            ],
            [
                "2 3\r\n500000000 1\r\n500000000 1\r\n499999999 500000000 500000001\r\n",
                "1\r\n1\r\n2\r\n"
            ],
            [
                "3 1\r\n2 50\r\n1 50\r\n1 50\r\n160\r\n",
                "3\r\n"
            ]
        ]
    }
]