[
    {
        "name": "Simplified Nonogram",
        "description": "In this task you have to write a program dealing with nonograms on fields no\nlarger than 5 \u00d7 20. Simplified nonogram is a task where you have to build such\nfield (each cell is either white or black) that satisfies the given\ninformation about rows and columns. For each row and each column the number of\ncontiguous black segments is specified. For example if size of the field is n\n= 3, m = 5, \u0430nd numbers of contiguous black segments in rows are: [2, 3, 2]\nand in columns are: [1, 0, 1, 2, 1] then the solution may look like: It is\nguaranteed that on each test in the testset there exists at least one\nsolution. Input In the first line there follow two integers n, m (1 \u2264 n \u2264 5, 1\n\u2264 m \u2264 20) \u2014 number of rows and number of columns respectively. Second line\ncontains n integers a1, a2, ..., an where ai is the number of contiguous black\nsegments in i-th row of the field. Similarly, third line contains m integers\nb1, b2, ..., bm where bi is the number of contiguous black segments in the\ni-th column of the field. It is guaranteed that there exists at least one\nsolution. Output Output any possible solution. Output should consist of n\nlines each containing m characters. Denote white cell as \".\" and black cell as\n\"*\". Examples Input 3 5 2 3 2 1 0 1 2 1 Output *.**. *.*.* *..** Input 3 3 2 1\n2 2 1 2 Output *.* .*. *.* Input 3 3 1 0 1 2 2 2 Output *** ... ***\n\n",
        "cf_contest_id": 534,
        "cf_index": "F",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dp",
            "hashing",
            "meet-in-the-middle"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 5\r\n2 3 2\r\n1 0 1 2 1\r\n",
                "*.**.\r\n*.*.*\r\n*.**.\r\n"
            ],
            [
                "3 3\r\n2 1 2\r\n2 1 2\r\n",
                "*.*\r\n.*.\r\n*.*\r\n"
            ],
            [
                "3 3\r\n1 0 1\r\n2 2 2\r\n",
                "***\r\n...\r\n***\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n1\r\n",
                "*\r\n"
            ],
            [
                "1 1\r\n0\r\n0\r\n",
                ".\r\n"
            ],
            [
                "1 2\r\n1\r\n0 1\r\n",
                ".*\r\n"
            ],
            [
                "2 2\r\n1 1\r\n1 1\r\n",
                "*.\r\n.*\r\n"
            ],
            [
                "2 2\r\n1 0\r\n0 1\r\n",
                ".*\r\n..\r\n"
            ],
            [
                "2 2\r\n0 1\r\n1 1\r\n",
                "..\r\n**\r\n"
            ],
            [
                "3 2\r\n1 1 1\r\n1 2\r\n",
                ".*\r\n*.\r\n.*\r\n"
            ],
            [
                "3 2\r\n1 1 1\r\n1 0\r\n",
                "*.\r\n*.\r\n*.\r\n"
            ],
            [
                "3 3\r\n1 1 1\r\n2 2 1\r\n",
                "**.\r\n..*\r\n**.\r\n"
            ],
            [
                "3 3\r\n1 1 2\r\n1 1 1\r\n",
                ".*.\r\n..*\r\n*.*\r\n"
            ],
            [
                "3 3\r\n1 2 1\r\n1 2 1\r\n",
                ".*.\r\n*.*\r\n.*.\r\n"
            ],
            [
                "4 4\r\n2 2 1 1\r\n1 1 1 0\r\n",
                "*.*.\r\n*.*.\r\n..*.\r\n.*..\r\n"
            ],
            [
                "5 20\r\n10 10 10 10 10\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "*.*.*.*.*.*.*.*.*.*.\r\n.*.*.*.*.*.*.*.*.*.*\r\n.*.*.*.*.*.*.*.*.*.*\r\n.*.*.*.*.*.*.*.*.*.*\r\n.*.*.*.*.*.*.*.*.*.*\r\n"
            ],
            [
                "5 20\r\n10 10 10 10 10\r\n3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2\r\n",
                "*.*.*.*.*.*.*.*.*.*.\r\n.*.*.*.*.*.*.*.*.*.*\r\n*.*.*.*.*.*.*.*.*.*.\r\n.*.*.*.*.*.*.*.*.*.*\r\n*.*.*.*.*.*.*.*.*.*.\r\n"
            ],
            [
                "5 20\r\n10 10 10 10 10\r\n2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3 2 3\r\n",
                ".*.*.*.*.*.*.*.*.*.*\r\n*.*.*.*.*.*.*.*.*.*.\r\n.*.*.*.*.*.*.*.*.*.*\r\n*.*.*.*.*.*.*.*.*.*.\r\n.*.*.*.*.*.*.*.*.*.*\r\n"
            ]
        ]
    }
]