[
    {
        "name": "Directional Increase",
        "description": "We have an array of length \n    n\n. Initially, each element is equal to\n\n    0\n and there is a pointer located on the first element. We can do the\nfollowing two kinds of operations any number of times (possibly zero) in any\norder: If the pointer is not on the last element, increase the element the\npointer is currently on by \n    1\n. Then move it to the next element. If the\npointer is not on the first element, decrease the element the pointer is\ncurrently on by \n    1\n. Then move it to the previous element.But there is one\nadditional rule. After we are done, the pointer has to be on the first\nelement. You are given an array \n    a\n. Determine whether it's possible to\nobtain \n    a\n after some operations or not. Input The first line contains a\nsingle integer \n    t\n \n    (1\n    \u2264 t\n    \u2264 1000)\n \u2014 the number of test cases.\nThe description of the test cases follows. The first line of each test case\ncontains a single integer \n    n\n \n    (1\n    \u2264 n\n    \u2264 2 \n    \u00b7 10^5)\n \u2014 the\nsize of array \n    a\n. The second line of each test case contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    -10^9 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014\nelements of the array. It is guaranteed that the sum of \n    n\n over all test\ncases doesn't exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, print\n\"Yes\" (without quotes) if it's possible to obtain \n    a\n after some\noperations, and \"No\" (without quotes) otherwise. You can output \"Yes\" and \"No\"\nin any case (for example, strings \"yEs\", \"yes\" and \"Yes\" will be recognized as\na positive response). Example Input 7 2 1 0 4 2 -1 -1 0 4 1 -4 3 0 4 1 -1 1 -1\n5 1 2 3 4 -10 7 2 -1 1 -2 0 0 0 1 0 Output No Yes No No Yes Yes Yes Note In\nthe first test case we can obtain the array after some operations, but the\npointer won't be on the first element. One way of obtaining the array in the\nsecond test case is shown below. \n    \u27e8\n    0, 0, 0,\n    0\n    \u27e9\n    \u2192\n    \u27e8 1, \n    0, 0, 0 \n    \u27e9\n    \u2192\n    \u27e8\n    1, -1, 0, 0\n    \u27e9\n    \u2192\n    \u27e8 2, \n    -1, 0,\n    0\n    \u27e9\n    \u2192\n    \u27e8 2, 0, \n    0, 0\n    \u27e9\n    \u2192\n    \u27e8\n    2, \n    0, -1, 0\n    \u27e9\n    \u2192\n    \u27e8\n    2, -1, -1,\n    0\n    \u27e9\n\n\n",
        "cf_contest_id": 1693,
        "cf_index": "A",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n2\r\n1 0\r\n4\r\n2 -1 -1 0\r\n4\r\n1 -4 3 0\r\n4\r\n1 -1 1 -1\r\n5\r\n1 2 3 4 -10\r\n7\r\n2 -1 1 -2 0 0 0\r\n1\r\n0\r\n",
                "NO\r\nYES\r\nNO\r\nNO\r\nYES\r\nYES\r\nYES\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2\r\n-800372697 800372697\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n2\r\n2 2\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n1\r\n1\r\n",
                "NO\r\n"
            ]
        ]
    }
]