[
    {
        "name": "Glory Addicts",
        "description": "The hero is addicted to glory, and is fighting against a monster. The hero has\n\n    n\n skills. The \n    i\n-th skill is of type \n    a_i\n (either fire or\nfrost) and has initial damage \n    b_i\n. The hero can perform all of the\n\n    n\n skills in any order (with each skill performed exactly once). When\nperforming each skill, the hero can play a magic as follows: If the current\nskill immediately follows another skill of a different type, then its damage\nis doubled. In other words, If a skill of type fire and with initial damage\n\n    c\n is performed immediately after a skill of type fire, then it will deal\n\n    c\n damage; If a skill of type fire and with initial damage \n    c\n is\nperformed immediately after a skill of type frost, then it will deal \n    2c\n\ndamage; If a skill of type frost and with initial damage \n    c\n is performed\nimmediately after a skill of type fire, then it will deal \n    2c\n damage; If\na skill of type frost and with initial damage \n    c\n is performed immediately\nafter a skill of type frost , then it will deal \n    c\n damage. Your task is\nto find the maximum damage the hero can deal. Input Each test contains\nmultiple test cases. The first line contains an integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^5\n) \u2014 the number of test cases. The following lines contain the\ndescription of each test case. The first line of each test case contains an\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n), indicating the number of\nskills. The second line of each test case contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 1\n), where \n    a_i\n indicates\nthe type of the \n    i\n-th skill. Specifically, the \n    i\n-th skill is of\ntype fire if \n    a_i = 0\n, and of type frost if \n    a_i = 1\n. The third line\nof each test case contains \n    n\n integers \n    b_1, b_2, \n    \u2026, b_n\n (\n    1\n    \n    \u2264 b_i \n    \u2264 10^9\n), where \n    b_i\n indicates the initial damage of\nthe \n    i\n-th skill. It is guaranteed that the sum of \n    n\n over all test\ncases does not exceed \n    10^5\n. Output For each test case, output the\nmaximum damage the hero can deal. Example Input 4 4 0 1 1 1 1 10 100 1000 6 0\n0 0 1 1 1 3 4 5 6 7 8 3 1 1 1 1000000000 1000000000 1000000000 1 1 1 Output\n2112 63 3000000000 1 Note In the first test case, we can order the skills by\n\n    [3, 1, 4, 2]\n, and the total damage is \n    100 + 2 \n    \u00d7 1 + 2 \n    \u00d7\n    1000 + 10 = 2112\n. In the second test case, we can order the skills by\n\n    [1, 4, 2, 5, 3, 6]\n, and the total damage is \n    3 + 2 \n    \u00d7 6 + 2\n    \n    \u00d7 4 + 2 \n    \u00d7 7 + 2 \n    \u00d7 5 + 2 \n    \u00d7 8 = 63\n. In the third\ntest case, we can order the skills by \n    [1, 2, 3]\n, and the total damage is\n\n    1000000000 + 1000000000 + 1000000000 = 3000000000\n. In the fourth test\ncase, there is only one skill with initial damage \n    1\n, so the total damage\nis \n    1\n.\n\n",
        "cf_contest_id": 1738,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n4\r\n0 1 1 1\r\n1 10 100 1000\r\n6\r\n0 0 0 1 1 1\r\n3 4 5 6 7 8\r\n3\r\n1 1 1\r\n1000000000 1000000000 1000000000\r\n1\r\n1\r\n1\r\n",
                "2112\r\n63\r\n3000000000\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n6\r\n0 0 0 1 1 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n",
                "11000000000\r\n"
            ]
        ]
    }
]