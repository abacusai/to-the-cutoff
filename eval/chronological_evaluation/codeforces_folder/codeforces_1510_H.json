[
    {
        "name": "Hard Optimization",
        "description": "You are given a set of \n    n\n segments on a line \n    [L_i; R_i]\n. All\n\n    2n\n segment endpoints are pairwise distinct integers. The set is laminar\n\u2014 any two segments are either disjoint or one of them contains the other.\nChoose a non-empty subsegment \n    [l_i, r_i]\n with integer endpoints in each\nsegment (\n    L_i \n    \u2264 l_i < r_i \n    \u2264 R_i\n) in such a way that no two\nsubsegments intersect (they are allowed to have common endpoints though) and\nthe sum of their lengths (\n    \u2211_i=1^n r_i - l_i\n) is maximized. Input\nThe first line contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^3\n) \u2014 the number of segments. The \n    i\n-th of the next \n    n\n lines\ncontains two integers \n    L_i\n and \n    R_i\n (\n    0 \n    \u2264 L_i < R_i \n    \u2264\n    10^9\n) \u2014 the endpoints of the \n    i\n-th segment. All the given \n    2n\n\nsegment endpoints are distinct. The set of segments is laminar. Output On the\nfirst line, output the maximum possible sum of subsegment lengths. On the\n\n    i\n-th of the next \n    n\n lines, output two integers \n    l_i\n and\n\n    r_i\n (\n    L_i \n    \u2264 l_i < r_i \n    \u2264 R_i\n), denoting the chosen\nsubsegment of the \n    i\n-th segment. Example Input 4 1 10 2 3 5 9 6 7 Output\n7 3 6 2 3 7 9 6 7 Note The example input and the example output are\nillustrated below.\n\n",
        "cf_contest_id": 1510,
        "cf_index": "H",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n1 10\r\n2 3\r\n5 9\r\n6 7\r\n",
                "7\r\n3 6\r\n2 3\r\n7 9\r\n6 7\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n23 81\r\n",
                "58\r\n23 81\r\n"
            ],
            [
                "2\r\n8 30\r\n56 93\r\n",
                "59\r\n8 30\r\n56 93\r\n"
            ],
            [
                "3\r\n36 93\r\n43 67\r\n45 62\r\n",
                "50\r\n62 93\r\n43 45\r\n45 62\r\n"
            ],
            [
                "4\r\n72 85\r\n17 70\r\n54 65\r\n22 33\r\n",
                "56\r\n72 85\r\n33 54\r\n54 65\r\n22 33\r\n"
            ],
            [
                "5\r\n1 11\r\n46 69\r\n19 78\r\n48 58\r\n27 44\r\n",
                "59\r\n1 11\r\n46 48\r\n58 78\r\n48 58\r\n27 44\r\n"
            ],
            [
                "6\r\n8 53\r\n64 67\r\n28 33\r\n60 62\r\n13 19\r\n86 97\r\n",
                "47\r\n33 53\r\n64 67\r\n28 33\r\n60 62\r\n13 19\r\n86 97\r\n"
            ],
            [
                "7\r\n2 78\r\n26 52\r\n56 77\r\n86 97\r\n38 43\r\n69 71\r\n37 51\r\n",
                "76\r\n2 38\r\n51 52\r\n56 69\r\n86 97\r\n38 43\r\n69 71\r\n43 51\r\n"
            ],
            [
                "8\r\n17 71\r\n1 97\r\n25 27\r\n76 93\r\n40 52\r\n23 53\r\n55 68\r\n82 83\r\n",
                "78\r\n68 71\r\n1 25\r\n25 27\r\n83 93\r\n40 52\r\n27 40\r\n55 68\r\n82 83\r\n"
            ],
            [
                "9\r\n31 62\r\n97 98\r\n53 59\r\n17 79\r\n3 87\r\n40 60\r\n72 77\r\n22 29\r\n7 11\r\n",
                "69\r\n31 53\r\n97 98\r\n53 59\r\n60 72\r\n11 22\r\n59 60\r\n72 77\r\n22 29\r\n7 11\r\n"
            ],
            [
                "10\r\n77 78\r\n43 49\r\n60 75\r\n11 32\r\n81 94\r\n64 67\r\n17 19\r\n52 53\r\n40 76\r\n46 48\r\n",
                "57\r\n77 78\r\n43 46\r\n67 75\r\n19 32\r\n81 94\r\n64 67\r\n17 19\r\n52 53\r\n53 64\r\n46 48\r\n"
            ],
            [
                "19\r\n8314 8691\r\n4849 5182\r\n9756 9945\r\n2065 2266\r\n978 1381\r\n9074 9104\r\n4416 8279\r\n36 8854\r\n4637 5261\r\n9068 9265\r\n8980 9338\r\n9601 9624\r\n651 4145\r\n7653 8067\r\n1778 1799\r\n845 1421\r\n1385 1410\r\n6408 7531\r\n6733 7290\r\n",
                "7704\r\n8314 8691\r\n4849 5182\r\n9756 9945\r\n2065 2266\r\n978 1381\r\n9074 9104\r\n5261 6733\r\n2266 4849\r\n5182 5261\r\n9104 9265\r\n8980 9074\r\n9601 9624\r\n1410 1778\r\n7653 8067\r\n1778 1799\r\n845 978\r\n1385 1410\r\n7290 7531\r\n6733 7290\r\n"
            ]
        ]
    }
]