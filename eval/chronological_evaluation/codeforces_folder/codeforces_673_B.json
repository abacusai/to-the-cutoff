[
    {
        "name": "Problems for Round",
        "description": "There are n problems prepared for the next Codeforces round. They are arranged\nin ascending order by their difficulty, and no two problems have the same\ndifficulty. Moreover, there are m pairs of similar problems. Authors want to\nsplit problems between two division according to the following rules:\nProblemset of each division should be non-empty. Each problem should be used\nin exactly one division (yes, it is unusual requirement). Each problem used in\ndivision 1 should be harder than any problem used in division 2. If two\nproblems are similar, they should be used in different divisions. Your goal is\ncount the number of ways to split problem between two divisions and satisfy\nall the rules. Two ways to split problems are considered to be different if\nthere is at least one problem that belongs to division 1 in one of them and to\ndivision 2 in the other. Note, that the relation of similarity is not\ntransitive. That is, if problem i is similar to problem j and problem j is\nsimilar to problem k, it doesn't follow that i is similar to k. Input The\nfirst line of the input contains two integers n and m (2 \u2264 n \u2264 100 000, 0 \u2264 m\n\u2264 100 000) \u2014 the number of problems prepared for the round and the number of\npairs of similar problems, respectively. Each of the following m lines\ncontains a pair of similar problems ui and vi (1 \u2264 ui, vi \u2264 n, ui \u2260 vi). It's\nguaranteed, that no pair of problems meets twice in the input. Output Print\none integer \u2014 the number of ways to split problems in two divisions. Examples\nInput 5 2 1 4 5 2 Output 2 Input 3 3 1 2 2 3 1 3 Output 0 Input 3 2 3 1 3 2\nOutput 1 Note In the first sample, problems 1 and 2 should be used in division\n2, while problems 4 and 5 in division 1. Problem 3 may be used either in\ndivision 1 or in division 2. In the second sample, all pairs of problems are\nsimilar and there is no way to split problem between two divisions without\nbreaking any rules. Third sample reminds you that the similarity relation is\nnot transitive. Problem 3 is similar to both 1 and 2, but 1 is not similar to\n2, so they may be used together.\n\n",
        "cf_contest_id": 673,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 2\r\n1 4\r\n5 2\r\n",
                "2\r\n"
            ],
            [
                "3 3\r\n1 2\r\n2 3\r\n1 3\r\n",
                "0\r\n"
            ],
            [
                "3 2\r\n3 1\r\n3 2\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 0\r\n",
                "1\r\n"
            ],
            [
                "2 1\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "3 0\r\n",
                "2\r\n"
            ],
            [
                "3 1\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "3 1\r\n1 3\r\n",
                "2\r\n"
            ],
            [
                "100000 0\r\n",
                "99999\r\n"
            ],
            [
                "4 2\r\n1 2\r\n3 4\r\n",
                "0\r\n"
            ],
            [
                "3 1\r\n2 3\r\n",
                "1\r\n"
            ],
            [
                "3 2\r\n1 2\r\n1 3\r\n",
                "1\r\n"
            ],
            [
                "3 2\r\n1 2\r\n2 3\r\n",
                "0\r\n"
            ],
            [
                "4 0\r\n",
                "3\r\n"
            ],
            [
                "100000 1\r\n100000 1\r\n",
                "99999\r\n"
            ],
            [
                "100000 1\r\n26711 97965\r\n",
                "71254\r\n"
            ],
            [
                "100000 10\r\n99562 479\r\n643 99684\r\n593 99867\r\n99529 175\r\n99738 616\r\n99523 766\r\n99503 121\r\n99784 158\r\n199 99199\r\n15 99849\r\n",
                "98433\r\n"
            ],
            [
                "10 10\r\n8 3\r\n2 8\r\n3 7\r\n3 9\r\n9 4\r\n7 2\r\n1 8\r\n1 9\r\n10 2\r\n10 1\r\n",
                "3\r\n"
            ],
            [
                "55 1\r\n55 1\r\n",
                "54\r\n"
            ],
            [
                "4 2\r\n1 4\r\n3 2\r\n",
                "1\r\n"
            ],
            [
                "5 1\r\n1 5\r\n",
                "4\r\n"
            ],
            [
                "7 1\r\n3 5\r\n",
                "2\r\n"
            ],
            [
                "7 2\r\n1 6\r\n2 7\r\n",
                "4\r\n"
            ],
            [
                "5 1\r\n2 3\r\n",
                "1\r\n"
            ],
            [
                "5 2\r\n3 5\r\n1 2\r\n",
                "0\r\n"
            ],
            [
                "4 2\r\n3 4\r\n1 2\r\n",
                "0\r\n"
            ],
            [
                "7 2\r\n1 5\r\n5 2\r\n",
                "3\r\n"
            ],
            [
                "7 2\r\n1 3\r\n3 6\r\n",
                "0\r\n"
            ],
            [
                "10 11\r\n1 10\r\n1 9\r\n1 8\r\n1 7\r\n2 10\r\n2 9\r\n2 8\r\n2 7\r\n3 10\r\n3 9\r\n3 8\r\n",
                "4\r\n"
            ],
            [
                "4 2\r\n1 2\r\n1 3\r\n",
                "1\r\n"
            ]
        ]
    }
]