[
    {
        "name": "An express train to reveries",
        "description": "Sengoku still remembers the mysterious \"colourful meteoroids\" she discovered\nwith Lala-chan when they were little. In particular, one of the nights\nimpressed her deeply, giving her the illusion that all her fancies would be\nrealized. On that night, Sengoku constructed a permutation p1, p2, ..., pn of\nintegers from 1 to n inclusive, with each integer representing a colour,\nwishing for the colours to see in the coming meteor outburst. Two incredible\noutbursts then arrived, each with n meteorids, colours of which being integer\nsequences a1, a2, ..., an and b1, b2, ..., bn respectively. Meteoroids'\ncolours were also between 1 and n inclusive, and the two sequences were not\nidentical, that is, at least one i (1 \u2264 i \u2264 n) exists, such that ai \u2260 bi\nholds. Well, she almost had it all \u2014 each of the sequences a and b matched\nexactly n - 1 elements in Sengoku's permutation. In other words, there is\nexactly one i (1 \u2264 i \u2264 n) such that ai \u2260 pi, and exactly one j (1 \u2264 j \u2264 n)\nsuch that bj \u2260 pj. For now, Sengoku is able to recover the actual colour\nsequences a and b through astronomical records, but her wishes have been long\nforgotten. You are to reconstruct any possible permutation Sengoku could have\nhad on that night. Input The first line of input contains a positive integer n\n(2 \u2264 n \u2264 1 000) \u2014 the length of Sengoku's permutation, being the length of\nboth meteor outbursts at the same time. The second line contains n space-\nseparated integers a1, a2, ..., an (1 \u2264 ai \u2264 n) \u2014 the sequence of colours in\nthe first meteor outburst. The third line contains n space-separated integers\nb1, b2, ..., bn (1 \u2264 bi \u2264 n) \u2014 the sequence of colours in the second meteor\noutburst. At least one i (1 \u2264 i \u2264 n) exists, such that ai \u2260 bi holds. Output\nOutput n space-separated integers p1, p2, ..., pn, denoting a possible\npermutation Sengoku could have had. If there are more than one possible\nanswer, output any one of them. Input guarantees that such permutation exists.\nExamples Input 5 1 2 3 4 3 1 2 5 4 5 Output 1 2 5 4 3 Input 5 4 4 2 3 1 5 4 5\n3 1 Output 5 4 2 3 1 Input 4 1 1 3 4 1 4 3 4 Output 1 2 3 4 Note In the first\nsample, both 1, 2, 5, 4, 3 and 1, 2, 3, 4, 5 are acceptable outputs. In the\nsecond sample, 5, 4, 2, 3, 1 is the only permutation to satisfy the\nconstraints.\n\n",
        "cf_contest_id": 814,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 2 3 4 3\r\n1 2 5 4 5\r\n",
                "1 2 5 4 3\r\n"
            ],
            [
                "5\r\n4 4 2 3 1\r\n5 4 5 3 1\r\n",
                "5 4 2 3 1\r\n"
            ],
            [
                "4\r\n1 1 3 4\r\n1 4 3 4\r\n",
                "1 2 3 4\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 2 3 4 7 6 7 8 9 10\r\n1 2 3 4 5 6 5 8 9 10\r\n",
                "1 2 3 4 5 6 7 8 9 10\r\n"
            ],
            [
                "10\r\n1 2 3 4 5 6 7 8 7 10\r\n1 2 3 4 5 6 7 8 9 9\r\n",
                "1 2 3 4 5 6 7 8 9 10\r\n"
            ],
            [
                "10\r\n1 2 3 4 5 6 7 8 4 10\r\n1 2 3 4 5 6 7 6 9 10\r\n",
                "1 2 3 4 5 6 7 8 9 10\r\n"
            ],
            [
                "10\r\n8 6 1 7 9 3 5 2 10 9\r\n8 6 1 7 4 3 5 2 10 4\r\n",
                "8 6 1 7 4 3 5 2 10 9\r\n"
            ],
            [
                "10\r\n2 9 7 7 8 5 4 10 6 1\r\n2 8 7 3 8 5 4 10 6 1\r\n",
                "2 9 7 3 8 5 4 10 6 1\r\n"
            ],
            [
                "2\r\n2 2\r\n1 1\r\n",
                "1 2\r\n"
            ],
            [
                "3\r\n1 2 2\r\n1 3 3\r\n",
                "1 3 2\r\n"
            ],
            [
                "3\r\n2 2 3\r\n1 2 1\r\n",
                "1 2 3\r\n"
            ],
            [
                "3\r\n1 3 3\r\n1 1 3\r\n",
                "1 2 3\r\n"
            ],
            [
                "3\r\n2 1 1\r\n2 3 3\r\n",
                "2 3 1\r\n"
            ],
            [
                "3\r\n3 3 2\r\n1 1 2\r\n",
                "1 3 2\r\n"
            ],
            [
                "3\r\n1 3 3\r\n3 3 2\r\n",
                "1 3 2\r\n"
            ],
            [
                "4\r\n3 2 3 4\r\n1 2 1 4\r\n",
                "1 2 3 4\r\n"
            ],
            [
                "4\r\n2 2 3 4\r\n1 2 3 2\r\n",
                "1 2 3 4\r\n"
            ],
            [
                "4\r\n1 2 4 4\r\n2 2 3 4\r\n",
                "1 2 3 4\r\n"
            ],
            [
                "4\r\n4 1 3 4\r\n2 1 3 2\r\n",
                "2 1 3 4\r\n"
            ],
            [
                "4\r\n3 2 1 3\r\n4 2 1 2\r\n",
                "4 2 1 3\r\n"
            ],
            [
                "4\r\n1 4 1 3\r\n2 4 1 4\r\n",
                "2 4 1 3\r\n"
            ],
            [
                "4\r\n1 3 4 4\r\n3 3 2 4\r\n",
                "1 3 2 4\r\n"
            ],
            [
                "5\r\n5 4 5 3 1\r\n4 4 2 3 1\r\n",
                "5 4 2 3 1\r\n"
            ],
            [
                "5\r\n4 1 2 4 5\r\n3 1 2 5 5\r\n",
                "3 1 2 4 5\r\n"
            ],
            [
                "3\r\n2 2 3\r\n1 3 3\r\n",
                "1 2 3\r\n"
            ],
            [
                "3\r\n1 1 3\r\n2 3 3\r\n",
                "2 1 3\r\n"
            ],
            [
                "5\r\n5 4 5 3 1\r\n2 4 4 3 1\r\n",
                "2 4 5 3 1\r\n"
            ],
            [
                "3\r\n3 3 1\r\n2 1 1\r\n",
                "2 3 1\r\n"
            ],
            [
                "5\r\n5 4 3 5 2\r\n5 4 1 1 2\r\n",
                "5 4 3 1 2\r\n"
            ],
            [
                "6\r\n1 2 3 4 2 5\r\n1 6 3 4 4 5\r\n",
                "1 6 3 4 2 5\r\n"
            ],
            [
                "4\r\n1 3 2 1\r\n2 3 2 1\r\n",
                "4 3 2 1\r\n"
            ],
            [
                "4\r\n1 3 3 4\r\n1 4 3 4\r\n",
                "1 2 3 4\r\n"
            ],
            [
                "11\r\n1 2 3 4 5 6 7 8 9 10 10\r\n1 2 3 4 5 6 7 8 9 10 3\r\n",
                "1 2 3 4 5 6 7 8 9 10 11\r\n"
            ],
            [
                "5\r\n1 2 3 2 5\r\n1 4 3 3 5\r\n",
                "1 4 3 2 5\r\n"
            ],
            [
                "5\r\n1 2 3 4 3\r\n1 2 5 4 2\r\n",
                "1 2 5 4 3\r\n"
            ],
            [
                "5\r\n1 2 3 4 4\r\n1 2 3 4 3\r\n",
                "1 2 3 4 5\r\n"
            ],
            [
                "4\r\n1 3 1 4\r\n1 3 4 4\r\n",
                "1 3 2 4\r\n"
            ],
            [
                "5\r\n2 5 3 2 1\r\n4 5 3 3 1\r\n",
                "4 5 3 2 1\r\n"
            ],
            [
                "5\r\n1 2 3 2 5\r\n1 3 3 4 5\r\n",
                "1 2 3 4 5\r\n"
            ],
            [
                "5\r\n5 2 3 4 5\r\n2 2 3 4 5\r\n",
                "1 2 3 4 5\r\n"
            ],
            [
                "5\r\n5 4 1 1 2\r\n5 4 3 5 2\r\n",
                "5 4 3 1 2\r\n"
            ],
            [
                "4\r\n1 4 3 4\r\n1 3 3 4\r\n",
                "1 2 3 4\r\n"
            ],
            [
                "4\r\n1 2 3 1\r\n1 2 3 2\r\n",
                "1 2 3 4\r\n"
            ],
            [
                "5\r\n4 5 3 3 1\r\n2 5 3 2 1\r\n",
                "4 5 3 2 1\r\n"
            ],
            [
                "5\r\n1 2 3 5 5\r\n1 2 3 4 3\r\n",
                "1 2 3 4 5\r\n"
            ],
            [
                "4\r\n2 3 3 4\r\n2 4 3 4\r\n",
                "2 1 3 4\r\n"
            ]
        ]
    }
]