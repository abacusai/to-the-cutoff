[
    {
        "name": "Matryoshkas",
        "description": "Matryoshka is a wooden toy in the form of a painted doll, inside which you can\nput a similar doll of a smaller size. A set of nesting dolls contains one or\nmore nesting dolls, their sizes are consecutive positive integers. Thus, a set\nof nesting dolls is described by two numbers: \n    s\n \u2014 the size of a smallest\nnesting doll in a set and \n    m\n \u2014 the number of dolls in a set. In other\nwords, the set contains sizes of \n    s, s + 1, \n    \u2026, s + m - 1\n for some\ninteger \n    s\n and \n    m\n (\n    s,m > 0\n). You had one or more sets of\nnesting dolls. Recently, you found that someone mixed all your sets in one and\nrecorded a sequence of doll sizes \u2014 integers \n    a_1, a_2, \n    \u2026, a_n\n. You\ndo not remember how many sets you had, so you want to find the minimum number\nof sets that you could initially have. For example, if a given sequence is\n\n    a=[2, 2, 3, 4, 3, 1]\n. Initially, there could be \n    2\n sets: the first\nset consisting of \n    4\n nesting dolls with sizes \n    [1, 2, 3, 4]\n; a\nsecond set consisting of \n    2\n nesting dolls with sizes \n    [2, 3]\n.\nAccording to a given sequence of sizes of nesting dolls \n    a_1, a_2, \n    \u2026,\n    a_n\n, determine the minimum number of nesting dolls that can make this\nsequence. Each set is completely used, so all its nesting dolls are used. Each\nelement of a given sequence must correspond to exactly one doll from some set.\nInput The first line of input data contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The description of the test\ncases follows. The first line of each test case contains one integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the total number of matryoshkas that\nwere in all sets. The second line of each test case contains \n    n\n integers\n\n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the sizes of the\nmatryoshkas. It is guaranteed that the sum of values of \n    n\n over all test\ncases does not exceed \n    2\n    \u00b710^5\n. Output For each test case, print one\ninteger \n    k\n \u2014 the minimum possible number of matryoshkas sets. Example\nInput 10 6 2 2 3 4 3 1 5 11 8 7 10 9 6 1000000000 1000000000 1000000000\n1000000000 1000000000 1000000000 8 1 1 4 4 2 3 2 3 6 1 2 3 2 3 4 7 10 11 11 12\n12 13 13 7 8 8 9 9 10 10 11 8 4 14 5 15 6 16 7 17 8 5 15 6 14 8 12 9 11 5 4 2\n2 3 4 Output 2 1 6 2 2 2 2 2 4 3 Note The first test case is described in the\nproblem statement. In the second test case, all matryoshkas could be part of\nthe same set with minimum size \n    s=7\n. In the third test case, each\nmatryoshka represents a separate set.\n\n",
        "cf_contest_id": 1790,
        "cf_index": "D",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10\r\n6\r\n2 2 3 4 3 1\r\n5\r\n11 8 7 10 9\r\n6\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n8\r\n1 1 4 4 2 3 2 3\r\n6\r\n1 2 3 2 3 4\r\n7\r\n10 11 11 12 12 13 13\r\n7\r\n8 8 9 9 10 10 11\r\n8\r\n4 14 5 15 6 16 7 17\r\n8\r\n5 15 6 14 8 12 9 11\r\n5\r\n4 2 2 3 4\r\n",
                "2\r\n1\r\n6\r\n2\r\n2\r\n2\r\n2\r\n2\r\n4\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n999999999\r\n",
                "1\r\n"
            ],
            [
                "1\r\n4\r\n12 45 12 12345\r\n",
                "4\r\n"
            ]
        ]
    }
]