[
    {
        "name": "Even Number Addicts",
        "description": "Alice and Bob are playing a game on a sequence \n    a_1, a_2, \n    \u2026, a_n\n of\nlength \n    n\n. They move in turns and Alice moves first. In the turn of each\nplayer, he or she should select an integer and remove it from the sequence.\nThe game ends when there is no integer left in the sequence. Alice wins if the\nsum of her selected integers is even; otherwise, Bob wins. Your task is to\ndetermine who will win the game, if both players play optimally. Input Each\ntest contains multiple test cases. The first line contains an integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases. The following lines\ncontain the description of each test case. The first line of each test case\ncontains an integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n), indicating the\nlength of the sequence. The second line of each test case contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    -10^9 \n    \u2264 a_i \n    \u2264 10^9\n),\nindicating the elements of the sequence. Output For each test case, output\n\"Alice\" (without quotes) if Alice wins and \"Bob\" (without quotes) otherwise.\nExample Input 4 3 1 3 5 4 1 3 5 7 4 1 2 3 4 4 10 20 30 40 Output Alice Alice\nBob Alice Note In the first and second test cases, Alice always selects two\nodd numbers, so the sum of her selected numbers is always even. Therefore,\nAlice always wins. In the third test case, Bob has a winning strategy that he\nalways selects a number with the same parity as Alice selects in her last\nturn. Therefore, Bob always wins. In the fourth test case, Alice always\nselects two even numbers, so the sum of her selected numbers is always even.\nTherefore, Alice always wins.\n\n",
        "cf_contest_id": 1738,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "games",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n3\r\n1 3 5\r\n4\r\n1 3 5 7\r\n4\r\n1 2 3 4\r\n4\r\n10 20 30 40\r\n",
                "Alice\r\nAlice\r\nBob\r\nAlice\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n100\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n",
                "Alice\r\n"
            ]
        ]
    }
]