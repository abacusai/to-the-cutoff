[
    {
        "name": "Choosing flowers",
        "description": "Vladimir would like to prepare a present for his wife: they have an\nanniversary! He decided to buy her exactly \n    n\n flowers. Vladimir went to a\nflower shop, and he was amazed to see that there are \n    m\n types of flowers\nbeing sold there, and there is unlimited supply of flowers of each type.\nVladimir wants to choose flowers to maximize the happiness of his wife. He\nknows that after receiving the first flower of the \n    i\n-th type happiness\nof his wife increases by \n    a_i\n and after receiving each consecutive flower\nof this type her happiness increases by \n    b_i\n. That is, if among the\nchosen flowers there are \n    x_i > 0\n flowers of type \n    i\n, his wife gets\n\n    a_i + (x_i - 1) \n    \u00b7 b_i\n additional happiness (and if there are no\nflowers of type \n    i\n, she gets nothing for this particular type). Please\nhelp Vladimir to choose exactly \n    n\n flowers to maximize the total\nhappiness of his wife. Input The first line contains the only integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 10\n     000\n), the number of test cases. It is followed\nby \n    t\n descriptions of the test cases. Each test case description starts\nwith two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 10^9\n, \n    1 \n    \u2264\n    m \n    \u2264 100\n     000\n), the number of flowers Vladimir needs to choose and the\nnumber of types of available flowers. The following \n    m\n lines describe the\ntypes of flowers: each line contains integers \n    a_i\n and \n    b_i\n (\n    0\n    \n    \u2264 a_i, b_i \n    \u2264 10^9\n) for \n    i\n-th available type of flowers. The\ntest cases are separated by a blank line. It is guaranteed that the sum of\nvalues \n    m\n among all test cases does not exceed \n    100\n     000\n. Output\nFor each test case output a single integer: the maximum total happiness of\nVladimir's wife after choosing exactly \n    n\n flowers optimally. Example\nInput 2 4 3 5 0 1 4 2 2 5 3 5 2 4 2 3 1 Output 14 16 Note In the first example\ncase Vladimir can pick 1 flower of the first type and 3 flowers of the second\ntype, in this case the total happiness equals \n    5 + (1 + 2 \n    \u00b7 4) =\n    14\n. In the second example Vladimir can pick 2 flowers of the first type, 2\nflowers of the second type, and 1 flower of the third type, in this case the\ntotal happiness equals \n    (5 + 1 \n    \u00b7 2) + (4 + 1 \n    \u00b7 2) + 3 = 16\n.\n\n",
        "cf_contest_id": 1379,
        "cf_index": "C",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "greedy",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n4 3\r\n5 0\r\n1 4\r\n2 2\r\n\r\n5 3\r\n5 2\r\n4 2\r\n3 1\r\n",
                "14\r\n16\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 7\r\n334569692 287790954\r\n828776938 450248098\r\n812787473 543828736\r\n353202854 229469066\r\n105035292 19740770\r\n294918734 142174357\r\n944609166 419900619\r\n",
                "944609166\r\n"
            ],
            [
                "1\r\n7 7\r\n875211518 78149272\r\n372527826 28528254\r\n777595365 608227558\r\n861586350 722262664\r\n996903444 323312570\r\n299704754 233926739\r\n778198166 197484491\r\n",
                "5734020171\r\n"
            ],
            [
                "1\r\n7 1\r\n107402237 913999333\r\n",
                "5591398235\r\n"
            ],
            [
                "1\r\n7 7\r\n10122721 121764855\r\n397678435 423586551\r\n203091798 455230154\r\n500000000 409776311\r\n421303531 418861532\r\n455230153 307287064\r\n417664664 419771248\r\n",
                "3053512092\r\n"
            ],
            [
                "1\r\n7 7\r\n873108721 195635452\r\n42649954 997221147\r\n873108721 801676035\r\n787324511 873108721\r\n873108720 541066719\r\n873108721 372607189\r\n1000000000 427003887\r\n",
                "6152868116\r\n"
            ]
        ]
    }
]