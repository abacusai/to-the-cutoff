[
    {
        "name": "Heaters",
        "description": "Vova's house is an array consisting of \n    n\n elements (yeah, this is the\nfirst problem, I think, where someone lives in the array). There are heaters\nin some positions of the array. The \n    i\n-th element of the array is \n    1\n\nif there is a heater in the position \n    i\n, otherwise the \n    i\n-th element\nof the array is \n    0\n. Each heater has a value \n    r\n (\n    r\n is the same\nfor all heaters). This value means that the heater at the position \n    pos\n\ncan warm up all the elements in range \n    [pos - r + 1; pos + r - 1]\n. Vova\nlikes to walk through his house while he thinks, and he hates cold positions\nof his house. Vova wants to switch some of his heaters on in such a way that\neach element of his house will be warmed up by at least one heater. Vova's\ntarget is to warm up the whole house (all the elements of the array), i.e. if\n\n    n = 6\n, \n    r = 2\n and heaters are at positions \n    2\n and \n    5\n,\nthen Vova can warm up the whole house if he switches all the heaters in the\nhouse on (then the first \n    3\n elements will be warmed up by the first\nheater and the last \n    3\n elements will be warmed up by the second heater).\nInitially, all the heaters are off. But from the other hand, Vova didn't like\nto pay much for the electricity. So he wants to switch the minimum number of\nheaters on in such a way that each element of his house is warmed up by at\nleast one heater. Your task is to find this number of heaters or say that it\nis impossible to warm up the whole house. Input The first line of the input\ncontains two integers \n    n\n and \n    r\n (\n    1 \n    \u2264 n, r \n    \u2264 1000\n) \u2014\nthe number of elements in the array and the value of heaters. The second line\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264\n    1\n) \u2014 the Vova's house description. Output Print one integer \u2014 the minimum\nnumber of heaters needed to warm up the whole house or -1 if it is impossible\nto do it. Examples Input 6 2 0 1 1 0 0 1 Output 3 Input 5 3 1 0 0 0 1 Output 2\nInput 5 10 0 0 0 0 0 Output -1 Input 10 3 0 0 1 1 0 1 0 0 0 1 Output 3 Note In\nthe first example the heater at the position \n    2\n warms up elements \n    [1;\n    3]\n, the heater at the position \n    3\n warms up elements \n    [2, 4]\n and\nthe heater at the position \n    6\n warms up elements \n    [5; 6]\n so the\nanswer is \n    3\n. In the second example the heater at the position \n    1\n\nwarms up elements \n    [1; 3]\n and the heater at the position \n    5\n warms up\nelements \n    [3; 5]\n so the answer is \n    2\n. In the third example there are\nno heaters so the answer is -1. In the fourth example the heater at the\nposition \n    3\n warms up elements \n    [1; 5]\n, the heater at the position\n\n    6\n warms up elements \n    [4; 8]\n and the heater at the position \n    10\n\nwarms up elements \n    [8; 10]\n so the answer is \n    3\n.\n\n",
        "cf_contest_id": 1066,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 2\r\n0 1 1 0 0 1\r\n",
                "3\r\n"
            ],
            [
                "5 3\r\n1 0 0 0 1\r\n",
                "2\r\n"
            ],
            [
                "5 10\r\n0 0 0 0 0\r\n",
                "-1\r\n"
            ],
            [
                "10 3\r\n0 0 1 1 0 1 0 0 0 1\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 6\r\n1 1 1\r\n",
                "1\r\n"
            ],
            [
                "4 3\r\n1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "2 888\r\n1 0\r\n",
                "1\r\n"
            ],
            [
                "6 1\r\n1 1 0 0 1 1\r\n",
                "-1\r\n"
            ],
            [
                "1 81\r\n0\r\n",
                "-1\r\n"
            ],
            [
                "3 1\r\n1 0 1\r\n",
                "-1\r\n"
            ],
            [
                "69 2\r\n0 0 0 0 0 0 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 1 0 0 1 0 0 0 1 0 0 0 1 0\r\n",
                "-1\r\n"
            ],
            [
                "25 12\r\n0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 0 1 0 0\r\n",
                "2\r\n"
            ],
            [
                "1 769\r\n0\r\n",
                "-1\r\n"
            ],
            [
                "1 79\r\n0\r\n",
                "-1\r\n"
            ],
            [
                "1 502\r\n1\r\n",
                "1\r\n"
            ],
            [
                "7 3\r\n1 1 1 1 1 0 0\r\n",
                "2\r\n"
            ],
            [
                "6 4\r\n1 0 1 0 0 0\r\n",
                "1\r\n"
            ],
            [
                "19 8\r\n0 1 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0\r\n",
                "-1\r\n"
            ],
            [
                "16 4\r\n0 0 0 1 1 0 1 0 0 0 0 0 0 1 0 0\r\n",
                "3\r\n"
            ],
            [
                "2 1\r\n1 0\r\n",
                "-1\r\n"
            ],
            [
                "4 2\r\n0 0 1 1\r\n",
                "-1\r\n"
            ],
            [
                "2 1000\r\n1 0\r\n",
                "1\r\n"
            ],
            [
                "2 3\r\n1 0\r\n",
                "1\r\n"
            ],
            [
                "13 6\r\n0 0 1 0 0 1 1 1 0 0 0 0 0\r\n",
                "2\r\n"
            ],
            [
                "2 300\r\n1 0\r\n",
                "1\r\n"
            ],
            [
                "1 1000\r\n0\r\n",
                "-1\r\n"
            ],
            [
                "10 4\r\n0 0 0 1 1 0 1 0 0 0\r\n",
                "2\r\n"
            ],
            [
                "4 2\r\n0 0 1 0\r\n",
                "-1\r\n"
            ],
            [
                "140 35\r\n1 1 1 0 0 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 0 0 0 0 1 0 1 1 0 0 1 1 0 1 1 1 0 0 1 1 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 0 1 0 1 1 0 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 0 0 0 0 1 0 1 0 0 1 1 0 0 1 0 0 1 0 1 0 0 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 0 0 1 1 0 0 1 1 0 0\r\n",
                "3\r\n"
            ],
            [
                "10 3\r\n0 0 1 1 1 0 0 0 0 1\r\n",
                "3\r\n"
            ],
            [
                "5 4\r\n1 0 0 0 0\r\n",
                "-1\r\n"
            ],
            [
                "4 3\r\n1 0 0 0\r\n",
                "-1\r\n"
            ],
            [
                "33 729\r\n0 1 1 0 0 0 0 0 1 0 0 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1\r\n",
                "1\r\n"
            ],
            [
                "8 2\r\n0 1 1 0 0 1 1 0\r\n",
                "4\r\n"
            ],
            [
                "6 5\r\n1 0 0 0 0 0\r\n",
                "-1\r\n"
            ],
            [
                "13 7\r\n0 0 0 0 0 0 0 1 0 0 0 1 0\r\n",
                "-1\r\n"
            ],
            [
                "187 64\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "2\r\n"
            ]
        ]
    }
]