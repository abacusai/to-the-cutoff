[
    {
        "name": "Megacity",
        "description": "The administration of the Tomsk Region firmly believes that it's time to\nbecome a megacity (that is, get population of one million). Instead of\nimproving the demographic situation, they decided to achieve its goal by\nexpanding the boundaries of the city. The city of Tomsk can be represented as\npoint on the plane with coordinates (0; 0). The city is surrounded with n\nother locations, the i-th one has coordinates (xi, yi) with the population of\nki people. You can widen the city boundaries to a circle of radius r. In such\ncase all locations inside the circle and on its border are included into the\ncity. Your goal is to write a program that will determine the minimum radius\nr, to which is necessary to expand the boundaries of Tomsk, so that it becomes\na megacity. Input The first line of the input contains two integers n and s (1\n\u2264 n \u2264 10^3; 1 \u2264 s < 10^6) \u2014 the number of locatons around Tomsk city and the\npopulation of the city. Then n lines follow. The i-th line contains three\nintegers \u2014 the xi and yi coordinate values of the i-th location and the number\nki of people in it (1 \u2264 ki < 10^6). Each coordinate is an integer and doesn't\nexceed 10^4 in its absolute value. It is guaranteed that no two locations are\nat the same point and no location is at point (0; 0). Output In the output,\nprint \"-1\" (without the quotes), if Tomsk won't be able to become a megacity.\nOtherwise, in the first line print a single real number \u2014 the minimum radius\nof the circle that the city needs to expand to in order to become a megacity.\nThe answer is considered correct if the absolute or relative error don't\nexceed 10^-6. Examples Input 4 999998 1 1 1 2 2 1 3 3 1 2 -2 1 Output\n2.8284271 Input 4 999998 1 1 2 2 2 1 3 3 1 2 -2 1 Output 1.4142136 Input 2 1 1\n1 999997 2 2 1 Output -1\n\n",
        "cf_contest_id": 424,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 999998\r\n1 1 1\r\n2 2 1\r\n3 3 1\r\n2 -2 1\r\n",
                "2.82842712475\r\n"
            ],
            [
                "4 999998\r\n1 1 2\r\n2 2 1\r\n3 3 1\r\n2 -2 1\r\n",
                "1.41421356237\r\n"
            ],
            [
                "2 1\r\n1 1 999997\r\n2 2 1\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 999998\r\n3 3 10\r\n-3 3 10\r\n3 -3 10\r\n-3 -3 10\r\n",
                "4.24264068712\r\n"
            ],
            [
                "15 95473\r\n-9 6 199715\r\n0 -8 110607\r\n0 2 6621\r\n-3 -2 59894\r\n-10 -8 175440\r\n-2 0 25814\r\n10 -4 68131\r\n7 1 9971\r\n6 7 821\r\n6 5 20208\r\n6 2 68468\r\n0 7 37427\r\n1 -3 13337\r\n-10 7 113041\r\n-6 -2 44028\r\n",
                "12.8062484749\r\n"
            ],
            [
                "20 93350\r\n13 -28 486\r\n26 -26 48487\r\n5 -23 143368\r\n-23 -25 10371\r\n-2 -7 75193\r\n0 -8 3\r\n-6 -11 5015\r\n-19 -18 315278\r\n28 -15 45801\r\n21 8 4590\r\n-4 -28 12926\r\n-16 17 9405\r\n-28 -23 222092\r\n1 -10 1857\r\n14 -28 35170\r\n-4 -22 22036\r\n-2 -10 1260\r\n-1 12 375745\r\n-19 -24 38845\r\n10 -25 9256\r\n",
                "26.1725046566\r\n"
            ],
            [
                "30 505231\r\n-18 16 88130\r\n-10 16 15693\r\n16 -32 660\r\n-27 17 19042\r\n30 -37 6680\r\n36 19 299674\r\n-45 21 3300\r\n11 27 76\r\n-49 -34 28649\r\n-1 11 31401\r\n25 42 20858\r\n-40 6 455660\r\n-29 43 105001\r\n-38 10 6042\r\n19 -45 65551\r\n20 -9 148533\r\n-5 -24 393442\r\n-43 2 8577\r\n-39 18 97059\r\n12 28 39189\r\n35 23 28178\r\n40 -34 51687\r\n23 41 219028\r\n21 -44 927\r\n47 8 13206\r\n33 41 97342\r\n10 18 24895\r\n0 12 288\r\n0 -44 1065\r\n-25 43 44231\r\n",
                "24.5153013443\r\n"
            ],
            [
                "2 500000\r\n936 1000 500000\r\n961 976 500000\r\n",
                "1369.70653791\r\n"
            ],
            [
                "10 764008\r\n959 32 23049\r\n-513 797 38979\r\n-603 -838 24916\r\n598 -430 25414\r\n-280 -624 18714\r\n330 891 21296\r\n-347 -68 27466\r\n650 -842 30125\r\n-314 889 35394\r\n275 969 5711\r\n",
                "1063.70296606\r\n"
            ],
            [
                "30 295830\r\n1 -4 24773\r\n4 3 26175\r\n-2 -3 14789\r\n2 -1 46618\r\n-2 -2 52997\r\n-3 0 517\r\n-2 0 18173\r\n-4 -3 54465\r\n2 4 63579\r\n4 -4 41821\r\n2 2 11018\r\n0 4 42856\r\n0 -1 51885\r\n-3 4 57137\r\n3 0 4688\r\n0 2 60137\r\n-4 4 33484\r\n-1 3 66196\r\n3 -1 53634\r\n0 -2 41630\r\n-2 1 54606\r\n2 -2 2978\r\n2 -3 23733\r\n1 -2 35248\r\n-3 -3 15124\r\n-2 -4 26518\r\n4 0 28151\r\n4 -1 18348\r\n3 3 16914\r\n-4 2 26013\r\n",
                "4.472135955\r\n"
            ],
            [
                "10 511500\r\n-5129 -3858 76954\r\n1296 1130 36126\r\n1219 6732 102003\r\n-8026 -178 4150\r\n-3261 1342 105429\r\n7965 -3013 62561\r\n5607 8963 53539\r\n-9044 -3999 16509\r\n1406 4103 115667\r\n-3716 2522 110626\r\n",
                "6841.47535258\r\n"
            ],
            [
                "20 39342\r\n2 0 36476\r\n-3 1 136925\r\n1 3 31234\r\n0 -3 23785\r\n-1 3 77700\r\n-3 -1 50490\r\n-1 -3 13965\r\n-3 2 121093\r\n3 0 118933\r\n-3 0 125552\r\n-3 3 54779\r\n-2 0 96250\r\n1 2 142643\r\n2 2 23848\r\n0 2 29845\r\n0 -2 80462\r\n-1 1 91852\r\n-1 2 26526\r\n0 -1 136272\r\n1 1 108999\r\n",
                "3.0\r\n"
            ],
            [
                "2 1\r\n1 0 1\r\n0 1 999999\r\n",
                "1.0\r\n"
            ],
            [
                "2 999997\r\n1 1 1\r\n1 2 1\r\n",
                "-1\r\n"
            ]
        ]
    }
]