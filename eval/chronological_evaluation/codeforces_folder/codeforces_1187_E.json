[
    {
        "name": "Tree Painting",
        "description": "You are given a tree (an undirected connected acyclic graph) consisting of\n\n    n\n vertices. You are playing a game on this tree. Initially all vertices\nare white. On the first turn of the game you choose one vertex and paint it\nblack. Then on each turn you choose a white vertex adjacent (connected by an\nedge) to any black vertex and paint it black. Each time when you choose a\nvertex (even during the first turn), you gain the number of points equal to\nthe size of the connected component consisting only of white vertices that\ncontains the chosen vertex. The game ends when all vertices are painted black.\nLet's see the following example: Vertices \n    1\n and \n    4\n are painted\nblack already. If you choose the vertex \n    2\n, you will gain \n    4\n points\nfor the connected component consisting of vertices \n    2, 3, 5\n and \n    6\n.\nIf you choose the vertex \n    9\n, you will gain \n    3\n points for the\nconnected component consisting of vertices \n    7, 8\n and \n    9\n. Your task\nis to maximize the number of points you gain. Input The first line contains an\ninteger \n    n\n \u2014 the number of vertices in the tree (\n    2 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n). Each of the next \n    n - 1\n lines describes an edge of the\ntree. Edge \n    i\n is denoted by two integers \n    u_i\n and \n    v_i\n, the\nindices of vertices it connects (\n    1 \n    \u2264 u_i, v_i \n    \u2264 n\n, \n    u_i \n    \n    v_i\n). It is guaranteed that the given edges form a tree. Output Print one\ninteger \u2014 the maximum number of points you gain if you will play optimally.\nExamples Input 9 1 2 2 3 2 5 2 6 1 4 4 9 9 7 9 8 Output 36 Input 5 1 2 1 3 2 4\n2 5 Output 14 Note The first example tree is shown in the problem statement.\n\n",
        "cf_contest_id": 1187,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9\r\n1 2\r\n2 3\r\n2 5\r\n2 6\r\n1 4\r\n4 9\r\n9 7\r\n9 8\r\n",
                "36\r\n"
            ],
            [
                "5\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n",
                "14\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 2\r\n",
                "3\r\n"
            ],
            [
                "4\r\n1 3\r\n1 4\r\n1 2\r\n",
                "9\r\n"
            ],
            [
                "4\r\n2 1\r\n1 3\r\n3 4\r\n",
                "10\r\n"
            ],
            [
                "4\r\n4 3\r\n3 2\r\n2 1\r\n",
                "10\r\n"
            ],
            [
                "5\r\n2 1\r\n2 3\r\n2 4\r\n2 5\r\n",
                "12\r\n"
            ],
            [
                "5\r\n4 5\r\n4 1\r\n1 2\r\n2 3\r\n",
                "15\r\n"
            ],
            [
                "5\r\n1 4\r\n4 3\r\n3 2\r\n2 5\r\n",
                "15\r\n"
            ],
            [
                "6\r\n4 5\r\n4 1\r\n4 6\r\n4 2\r\n4 3\r\n",
                "15\r\n"
            ],
            [
                "6\r\n6 5\r\n6 2\r\n2 3\r\n5 4\r\n4 1\r\n",
                "21\r\n"
            ],
            [
                "6\r\n1 5\r\n5 4\r\n4 2\r\n2 6\r\n6 3\r\n",
                "21\r\n"
            ],
            [
                "7\r\n7 5\r\n7 3\r\n7 6\r\n7 4\r\n7 1\r\n7 2\r\n",
                "18\r\n"
            ],
            [
                "7\r\n7 6\r\n7 5\r\n7 2\r\n7 1\r\n5 4\r\n5 3\r\n",
                "21\r\n"
            ],
            [
                "7\r\n2 7\r\n7 6\r\n6 5\r\n5 4\r\n4 1\r\n1 3\r\n",
                "28\r\n"
            ],
            [
                "8\r\n8 6\r\n8 7\r\n8 2\r\n8 5\r\n8 1\r\n8 4\r\n8 3\r\n",
                "21\r\n"
            ],
            [
                "8\r\n6 3\r\n3 7\r\n6 1\r\n1 2\r\n3 5\r\n5 4\r\n2 8\r\n",
                "34\r\n"
            ],
            [
                "8\r\n4 1\r\n1 3\r\n3 6\r\n6 2\r\n2 7\r\n7 5\r\n5 8\r\n",
                "36\r\n"
            ],
            [
                "9\r\n3 2\r\n3 1\r\n3 8\r\n3 5\r\n3 6\r\n3 9\r\n3 4\r\n3 7\r\n",
                "24\r\n"
            ],
            [
                "9\r\n2 6\r\n6 1\r\n2 8\r\n6 7\r\n1 5\r\n7 3\r\n8 9\r\n5 4\r\n",
                "39\r\n"
            ],
            [
                "9\r\n9 4\r\n4 6\r\n6 2\r\n2 1\r\n1 3\r\n3 5\r\n5 8\r\n8 7\r\n",
                "45\r\n"
            ],
            [
                "10\r\n3 2\r\n3 7\r\n3 6\r\n3 8\r\n3 1\r\n3 5\r\n3 9\r\n3 4\r\n3 10\r\n",
                "27\r\n"
            ],
            [
                "10\r\n8 2\r\n8 10\r\n10 3\r\n2 4\r\n3 6\r\n8 1\r\n2 7\r\n10 9\r\n4 5\r\n",
                "43\r\n"
            ],
            [
                "10\r\n7 10\r\n10 6\r\n6 4\r\n4 5\r\n5 8\r\n8 2\r\n2 1\r\n1 3\r\n3 9\r\n",
                "55\r\n"
            ],
            [
                "4\r\n3 4\r\n4 1\r\n1 2\r\n",
                "10\r\n"
            ],
            [
                "5\r\n1 4\r\n4 2\r\n2 3\r\n3 5\r\n",
                "15\r\n"
            ],
            [
                "6\r\n5 3\r\n3 6\r\n6 1\r\n1 4\r\n4 2\r\n",
                "21\r\n"
            ],
            [
                "7\r\n1 2\r\n2 3\r\n3 6\r\n6 7\r\n7 4\r\n4 5\r\n",
                "28\r\n"
            ],
            [
                "8\r\n6 2\r\n2 1\r\n1 8\r\n8 5\r\n5 7\r\n7 3\r\n3 4\r\n",
                "36\r\n"
            ],
            [
                "9\r\n1 6\r\n6 4\r\n4 5\r\n5 9\r\n9 8\r\n8 7\r\n7 3\r\n3 2\r\n",
                "45\r\n"
            ],
            [
                "10\r\n5 1\r\n1 6\r\n6 2\r\n2 8\r\n8 3\r\n3 4\r\n4 10\r\n10 9\r\n9 7\r\n",
                "55\r\n"
            ],
            [
                "4\r\n3 4\r\n3 1\r\n3 2\r\n",
                "9\r\n"
            ],
            [
                "5\r\n1 4\r\n1 2\r\n1 3\r\n1 5\r\n",
                "12\r\n"
            ],
            [
                "6\r\n5 3\r\n5 6\r\n5 1\r\n5 4\r\n5 2\r\n",
                "15\r\n"
            ],
            [
                "7\r\n1 2\r\n1 3\r\n1 6\r\n1 7\r\n1 4\r\n1 5\r\n",
                "18\r\n"
            ],
            [
                "8\r\n6 2\r\n6 1\r\n6 8\r\n6 5\r\n6 7\r\n6 3\r\n6 4\r\n",
                "21\r\n"
            ],
            [
                "9\r\n1 6\r\n1 4\r\n1 5\r\n1 9\r\n1 8\r\n1 7\r\n1 3\r\n1 2\r\n",
                "24\r\n"
            ],
            [
                "10\r\n5 1\r\n5 6\r\n5 2\r\n5 8\r\n5 3\r\n5 4\r\n5 10\r\n5 9\r\n5 7\r\n",
                "27\r\n"
            ],
            [
                "10\r\n4 10\r\n10 5\r\n5 1\r\n1 6\r\n6 8\r\n8 9\r\n9 2\r\n9 3\r\n9 7\r\n",
                "52\r\n"
            ],
            [
                "10\r\n5 8\r\n8 4\r\n4 9\r\n9 6\r\n6 1\r\n6 2\r\n6 7\r\n6 3\r\n6 10\r\n",
                "45\r\n"
            ],
            [
                "10\r\n5 6\r\n6 7\r\n7 3\r\n7 8\r\n7 4\r\n7 2\r\n7 1\r\n7 10\r\n7 9\r\n",
                "34\r\n"
            ],
            [
                "52\r\n1 52\r\n2 52\r\n3 52\r\n4 52\r\n5 52\r\n6 52\r\n7 52\r\n8 52\r\n9 52\r\n10 52\r\n11 52\r\n12 52\r\n13 52\r\n14 52\r\n15 52\r\n16 52\r\n17 52\r\n18 52\r\n19 52\r\n20 52\r\n21 52\r\n22 52\r\n23 52\r\n24 52\r\n25 52\r\n26 52\r\n27 52\r\n28 52\r\n29 52\r\n30 52\r\n31 52\r\n32 52\r\n33 52\r\n34 52\r\n35 52\r\n36 52\r\n37 52\r\n38 52\r\n39 52\r\n40 52\r\n41 52\r\n42 52\r\n43 52\r\n44 52\r\n45 52\r\n46 52\r\n47 52\r\n48 52\r\n49 52\r\n50 52\r\n51 52\r\n",
                "153\r\n"
            ]
        ]
    }
]