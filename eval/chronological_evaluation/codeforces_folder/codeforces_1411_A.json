[
    {
        "name": "In-game Chat",
        "description": "You have been assigned to develop a filter for bad messages in the in-game\nchat. A message is a string \n    S\n of length \n    n\n, consisting of lowercase\nEnglish letters and characters ')'. The message is bad if the number of\ncharacters ')' at the end of the string strictly greater than the number of\nremaining characters. For example, the string \")bc)))\" has three parentheses\nat the end, three remaining characters, and is not considered bad. Input The\nfirst line contains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    100\n). Description of the \n    t\n test cases follows. The first line of each\ntest case contains an integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n). The\nsecond line of each test case contains a string \n    S\n of length \n    n\n,\nconsisting of lowercase English letters and characters ')'. Output For each of\n\n    t\n test cases, print \"Yes\" if the string is bad. Otherwise, print \"No\".\nYou can print each letter in any case (upper or lower). Example Input 5 2 ))\n12 gl))hf)))))) 9 gege))))) 14 )aa))b)))))))) 1 ) Output Yes No Yes Yes Yes\n\n",
        "cf_contest_id": 1411,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2\r\n))\r\n12\r\ngl))hf))))))\r\n9\r\ngege)))))\r\n14\r\n)aa))b))))))))\r\n1\r\n)\r\n",
                "Yes\r\nNo\r\nYes\r\nYes\r\nYes\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n6\r\naaaaa)\r\n6\r\n))))))\r\n",
                "No\r\nYes\r\n"
            ],
            [
                "1\r\n4\r\naaaa\r\n",
                "No\r\n"
            ],
            [
                "1\r\n10\r\nsa)ttttttt\r\n",
                "No\r\n"
            ],
            [
                "1\r\n7\r\nabcd)))\r\n",
                "No\r\n"
            ],
            [
                "1\r\n1\r\nk\r\n",
                "No\r\n"
            ],
            [
                "1\r\n1\r\ng\r\n",
                "No\r\n"
            ],
            [
                "1\r\n1\r\na\r\n",
                "No\r\n"
            ],
            [
                "1\r\n5\r\naaaaa\r\n",
                "No\r\n"
            ]
        ]
    }
]