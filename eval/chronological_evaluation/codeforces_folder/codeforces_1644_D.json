[
    {
        "name": "Cross Coloring",
        "description": "There is a sheet of paper that can be represented with a grid of size \n    n\n    \n    \u00d7 m\n: \n    n\n rows and \n    m\n columns of cells. All cells are\ncolored in white initially. \n    q\n operations have been applied to the sheet.\nThe \n    i\n-th of them can be described as follows: \n    x_i\n \n    y_i\n \u2014\nchoose one of \n    k\n non-white colors and color the entire row \n    x_i\n and\nthe entire column \n    y_i\n in it. The new color is applied to each cell,\nregardless of whether the cell was colored before the operation. The sheet\nafter applying all \n    q\n operations is called a coloring. Two colorings are\ndifferent if there exists at least one cell that is colored in different\ncolors. How many different colorings are there? Print the number modulo\n\n    998\n     244\n     353\n. Input The first line contains a single integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of testcases. The first line\nof the testcase contains four integers \n    n, m, k\n and \n    q\n (\n    1 \n    \u2264\n    n, m, k, q \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the size of the sheet, the number of\nnon-white colors and the number of operations. The \n    i\n-th of the following\n\n    q\n lines contains a description of the \n    i\n-th operation \u2014 two\nintegers \n    x_i\n and \n    y_i\n (\n    1 \n    \u2264 x_i \n    \u2264 n\n; \n    1 \n    \u2264 y_i\n    \n    \u2264 m\n) \u2014 the row and the column the operation is applied to. The sum of\n\n    q\n over all testcases doesn't exceed \n    2 \n    \u00b7 10^5\n. Output For\neach testcase, print a single integer \u2014 the number of different colorings\nmodulo \n    998\n     244\n     353\n. Example Input 2 1 1 3 2 1 1 1 1 2 2 2 3 2 1 1\n1 2 2 Output 3 4\n\n",
        "cf_contest_id": 1644,
        "cf_index": "D",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1 1 3 2\r\n1 1\r\n1 1\r\n2 2 2 3\r\n2 1\r\n1 1\r\n2 2\r\n",
                "3\r\n4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2 4 2 5\r\n2 3\r\n2 4\r\n2 1\r\n1 3\r\n2 4\r\n",
                "4\r\n"
            ],
            [
                "3\r\n5 5 7 6\r\n1 1\r\n2 2\r\n3 3\r\n4 4\r\n5 5\r\n1 5\r\n5 5 7 5\r\n1 1\r\n2 2\r\n3 3\r\n4 4\r\n5 5\r\n5 5 7 7\r\n1 1\r\n2 2\r\n3 3\r\n4 4\r\n5 5\r\n1 5\r\n2 3\r\n",
                "16807\r\n16807\r\n16807\r\n"
            ]
        ]
    }
]