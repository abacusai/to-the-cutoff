[
    {
        "name": " D\u00e9j\u00e0 Vu",
        "description": "A palindrome is a string that reads the same backward as forward. For example,\nthe strings \"z\", \"aaa\", \"aba\", and \"abccba\" are palindromes, but \"codeforces\"\nand \"ab\" are not. You hate palindromes because they give you d\u00e9j\u00e0 vu. There is\na string \n    s\n. You must insert exactly one character 'a' somewhere in\n\n    s\n. If it is possible to create a string that is not a palindrome, you\nshould find one example. Otherwise, you should report that it is impossible.\nFor example, suppose \n    s=\n \"cbabc\". By inserting an 'a', you can create\n\"acbabc\", \"cababc\", \"cbaabc\", \"cbabac\", or \"cbabca\". However \"cbaabc\" is a\npalindrome, so you must output one of the other options. Input The first line\ncontains a single integer \n    t\n (\n    1\n    \u2264 t\n    \u2264 10^4\n) \u2014 the number of\ntest cases. The only line of each test case contains a string \n    s\n\nconsisting of lowercase English letters. The total length of all strings does\nnot exceed \n    3\n    \u00b7 10^5\n. Output For each test case, if there is no\nsolution, output \"NO\". Otherwise, output \"YES\" followed by your constructed\nstring of length \n    |s|+1\n on the next line. If there are multiple\nsolutions, you may print any. You can print each letter of \"YES\" and \"NO\" in\nany case (upper or lower). Example Input 6 cbabc ab zza ba a nutforajaroftuna\nOutput YES cbabac YES aab YES zaza YES baa NO YES nutforajarofatuna Note The\nfirst test case is described in the statement. In the second test case, we can\nmake either \"aab\" or \"aba\". But \"aba\" is a palindrome, so \"aab\" is the only\ncorrect answer. In the third test case, \"zaza\" and \"zzaa\" are correct answers,\nbut not \"azza\". In the fourth test case, \"baa\" is the only correct answer. In\nthe fifth test case, we can only make \"aa\", which is a palindrome. So the\nanswer is \"NO\". In the sixth test case, \"anutforajaroftuna\" is a palindrome,\nbut inserting 'a' elsewhere is valid.\n\n",
        "cf_contest_id": 1504,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\ncbabc\r\nab\r\nzza\r\nba\r\na\r\nnutforajaroftuna\r\n",
                "YES acbabc\r\nYES aab\r\nYES zzaa\r\nYES baa\r\nNO\r\nYES nutforajaroftunaa\r\n"
            ]
        ],
        "private_cases": []
    }
]