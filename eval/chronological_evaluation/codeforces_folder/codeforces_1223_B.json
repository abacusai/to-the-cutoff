[
    {
        "name": "Strings Equalization",
        "description": "You are given two strings of equal length \n    s\n and \n    t\n consisting of\nlowercase Latin letters. You may perform any number (possibly, zero)\noperations on these strings. During each operation you choose two adjacent\ncharacters in any string and assign the value of the first character to the\nvalue of the second or vice versa. For example, if \n    s\n is \"acbc\" you can\nget the following strings in one operation: \"aabc\" (if you perform \n    s_2 =\n    s_1\n); \"ccbc\" (if you perform \n    s_1 = s_2\n); \"accc\" (if you perform\n\n    s_3 = s_2\n or \n    s_3 = s_4\n); \"abbc\" (if you perform \n    s_2 = s_3\n);\n\"acbb\" (if you perform \n    s_4 = s_3\n); Note that you can also apply this\noperation to the string \n    t\n. Please determine whether it is possible to\ntransform \n    s\n into \n    t\n, applying the operation above any number of\ntimes. Note that you have to answer \n    q\n independent queries. Input The\nfirst line contains one integer \n    q\n (\n    1 \n    \u2264 q \n    \u2264 100\n) \u2014 the\nnumber of queries. Each query is represented by two consecutive lines. The\nfirst line of each query contains the string \n    s\n (\n    1 \n    \u2264 |s| \n    \u2264\n    100\n) consisting of lowercase Latin letters. The second line of each query\ncontains the string \n    t\n (\n    1 \n    \u2264 |t| \n    \u2264 100\n, \n    |t| = |s|\n)\nconsisting of lowercase Latin letters. Output For each query, print \"YES\" if\nit is possible to make \n    s\n equal to \n    t\n, and \"NO\" otherwise. You may\nprint every letter in any case you want (so, for example, the strings \"yEs\",\n\"yes\", \"Yes\", and \"YES\" will all be recognized as positive answer). Example\nInput 3 xabb aabx technocup technocup a z Output YES YES NO Note In the first\nquery, you can perform two operations \n    s_1 = s_2\n (after it \n    s\n turns\ninto \"aabb\") and \n    t_4 = t_3\n (after it \n    t\n turns into \"aabb\"). In the\nsecond query, the strings are equal initially, so the answer is \"YES\". In the\nthird query, you can not make strings \n    s\n and \n    t\n equal. Therefore,\nthe answer is \"NO\".\n\n",
        "cf_contest_id": 1223,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\nxabb\r\naabx\r\ntechnocup\r\ntechnocup\r\na\r\nz\r\n",
                "YES\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": []
    }
]