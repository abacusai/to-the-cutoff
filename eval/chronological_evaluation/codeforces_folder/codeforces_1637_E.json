[
    {
        "name": "Best Pair",
        "description": "You are given an array \n    a\n of length \n    n\n. Let \n    cnt_x\n be the\nnumber of elements from the array which are equal to \n    x\n. Let's also\ndefine \n    f(x, y)\n as \n    (cnt_x + cnt_y) \n    \u00b7 (x + y)\n. Also you are\ngiven \n    m\n bad pairs \n    (x_i, y_i)\n. Note that if \n    (x, y)\n is a bad\npair, then \n    (y, x)\n is also bad. Your task is to find the maximum value of\n\n    f(u, v)\n over all pairs \n    (u, v)\n, such that \n    u \n    \u2260 v\n, that\nthis pair is not bad, and also that \n    u\n and \n    v\n each occur in the\narray \n    a\n. It is guaranteed that such a pair exists. Input The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n     000\n) \u2014 the\nnumber of test cases. The first line of each test case contains two integers\n\n    n\n and \n    m\n (\n    2 \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n, \n    0 \n    \u2264 m \n    \u2264\n    3 \n    \u00b7 10^5\n) \u2014 the length of the array and the number of bad pairs. The\nsecond line of each test case contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 elements of the array. The \n    i\n-th\nof the next \n    m\n lines contains two integers \n    x_i\n and \n    y_i\n (\n    1\n    \n    \u2264 x_i < y_i \n    \u2264 10^9\n), which represent a bad pair. It is guaranteed\nthat no bad pair occurs twice in the input. It is also guaranteed that\n\n    cnt_x_i > 0\n and \n    cnt_y_i > 0\n. It is guaranteed that for each\ntest case there is a pair of integers \n    (u, v)\n, \n    u \n     v\n, that is\nnot bad, and such that both of these numbers occur in \n    a\n. It is\nguaranteed that the total sum of \n    n\n and the total sum of \n    m\n don't\nexceed \n    3 \n    \u00b7 10^5\n. Output For each test case print a single integer\n\u2014 the answer to the problem. Example Input 3 6 1 6 3 6 7 3 3 3 6 2 0 3 4 7 4 1\n2 2 3 1 5 1 1 5 3 5 1 3 2 5 Output 40 14 15 Note In the first test case\n\n    3\n, \n    6\n, \n    7\n occur in the array. \n    f(3, 6) = (cnt_3 + cnt_6)\n    \n    \u00b7 (3 + 6) = (3 + 2) \n    \u00b7 (3 + 6) = 45\n. But \n    (3, 6)\n is bad so\nwe ignore it. \n    f(3, 7) = (cnt_3 + cnt_7) \n    \u00b7 (3 + 7) = (3 + 1) \n    \u00b7\n    (3 + 7) = 40\n. \n    f(6, 7) = (cnt_6 + cnt_7) \n    \u00b7 (6 + 7) = (2 + 1)\n    \n    \u00b7 (6 + 7) = 39\n. The answer to the problem is \n    max(40, 39) =\n    40\n.\n\n",
        "cf_contest_id": 1637,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n6 1\r\n6 3 6 7 3 3\r\n3 6\r\n2 0\r\n3 4\r\n7 4\r\n1 2 2 3 1 5 1\r\n1 5\r\n3 5\r\n1 3\r\n2 5\r\n",
                "40\r\n14\r\n15\r\n"
            ]
        ],
        "private_cases": []
    }
]