[
    {
        "name": "Array Covering",
        "description": "Misha has an array of integers of length n. He wants to choose k different\ncontinuous subarrays, so that each element of the array belongs to at least\none of the chosen subarrays. Misha wants to choose the subarrays in such a way\nthat if he calculated the sum of elements for each subarray, and then add up\nall these sums, the resulting value was maximum possible. Input The first line\nof input contains two integers: n, k (1 \u2264 n \u2264 100 000, 1 \u2264 k \u2264 n\u00b7(n + 1) / 2)\n\u2014 the number of elements in the array and the number of different subarrays\nthat must be chosen. The second line contains n integers ai ( - 50 000 \u2264 ai \u2264\n50 000) \u2014 the elements of the array. Output Output one integer \u2014 the maximum\npossible value Misha can get by choosing k different subarrays. Example Input\n5 4 6 -4 -10 -4 7 Output 11\n\n",
        "cf_contest_id": 720,
        "cf_index": "F",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4\r\n6 -4 -10 -4 7\r\n",
                "11\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 10\r\n0 0 -1 1\r\n",
                "-2\r\n"
            ],
            [
                "2 2\r\n0 -5\r\n",
                "-5\r\n"
            ],
            [
                "3 5\r\n0 0 0\r\n",
                "0\r\n"
            ],
            [
                "2 3\r\n-1 1\r\n",
                "0\r\n"
            ],
            [
                "5 6\r\n1 -4 1 -7 -3\r\n",
                "-12\r\n"
            ],
            [
                "3 6\r\n957 -819 -414\r\n",
                "-1647\r\n"
            ],
            [
                "6 6\r\n0 -4 -6 -6 -5 3\r\n",
                "-15\r\n"
            ],
            [
                "8 8\r\n-8 3 3 -5 0 1 4 -1\r\n",
                "33\r\n"
            ],
            [
                "10 7\r\n-3 -8 7 9 -5 -6 -10 2 -8 8\r\n",
                "54\r\n"
            ],
            [
                "11 31\r\n1 1 1 1 1 -50000 1 1 1 1 1\r\n",
                "-49920\r\n"
            ],
            [
                "15 100\r\n-5 -10 30 -50 24 -27 26 -64 -12 -59 -1 -27 8 7 -28\r\n",
                "-6453\r\n"
            ],
            [
                "33 33\r\n-6 -33 28 5 25 -3 -20 22 4 -12 20 26 -2 -30 -29 -4 -1 16 -7 -25 -8 1 12 27 2 22 5 16 2 -29 -2 25 3\r\n",
                "2533\r\n"
            ],
            [
                "40 60\r\n-282 -553 -604 -186 -445 -939 -505 -506 -728 -775 -524 -329 -265 -648 -325 -502 -345 -839 -755 -547 -773 -772 -56 -692 -286 -737 -317 -605 -569 -870 -16 -232 -921 -875 -175 -627 -928 -281 -781 -405\r\n",
                "-38313\r\n"
            ],
            [
                "45 19\r\n-7 1 7 -7 -3 -7 2 -12 -1 0 -4 9 -10 -17 -1 9 -2 3 4 -19 -14 0 -16 -4 -18 2 -9 -11 -9 -4 -17 -18 -5 -11 -4 -3 -16 7 4 7 -2 -13 -5 -9 -4\r\n",
                "-26\r\n"
            ],
            [
                "50 10\r\n-100 -51 63 -40 -82 -68 27 44 -10 17 -100 -76 -51 34 -39 -15 -72 26 52 -76 -7 29 -38 61 -12 -72 69 50 -49 -93 -2 -39 -29 71 -80 18 -16 -74 73 4 44 43 -23 18 12 -97 13 58 11 -11\r\n",
                "762\r\n"
            ]
        ]
    }
]