[
    {
        "name": "Hiking",
        "description": "A traveler is planning a water hike along the river. He noted the suitable\nrest points for the night and wrote out their distances from the starting\npoint. Each of these locations is further characterized by its\npicturesqueness, so for the i-th rest point the distance from the start equals\nxi, and its picturesqueness equals bi. The traveler will move down the river\nin one direction, we can assume that he will start from point 0 on the\ncoordinate axis and rest points are points with coordinates xi. Every day the\ntraveler wants to cover the distance l. In practice, it turns out that this is\nnot always possible, because he needs to end each day at one of the resting\npoints. In addition, the traveler is choosing between two desires: cover\ndistance l every day and visit the most picturesque places. Let's assume that\nif the traveler covers distance rj in a day, then he feels frustration , and\nhis total frustration over the hike is calculated as the total frustration on\nall days. Help him plan the route so as to minimize the relative total\nfrustration: the total frustration divided by the total picturesqueness of all\nthe rest points he used. The traveler's path must end in the farthest rest\npoint. Input The first line of the input contains integers n, l (1 \u2264 n \u2264 1000,\n1 \u2264 l \u2264 10^5) \u2014 the number of rest points and the optimal length of one day\npath. Then n lines follow, each line describes one rest point as a pair of\nintegers xi, bi (1 \u2264 xi, bi \u2264 10^6). No two rest points have the same xi, the\nlines are given in the order of strictly increasing xi. Output Print the\ntraveler's path as a sequence of the numbers of the resting points he used in\nthe order he used them. Number the points from 1 to n in the order of\nincreasing xi. The last printed number must be equal to n. Examples Input 5 9\n10 10 20 10 30 1 31 5 40 10 Output 1 2 4 5 Note In the sample test the minimum\nvalue of relative total frustration approximately equals 0.097549. This value\ncan be calculated as .\n\n",
        "cf_contest_id": 489,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "dp"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 9\r\n10 10\r\n20 10\r\n30 1\r\n31 5\r\n40 10\r\n",
                "1 2 4 5 "
            ]
        ],
        "private_cases": [
            [
                "1 20\r\n9 1\r\n",
                "1 "
            ],
            [
                "2 7\r\n1 9\r\n5 6\r\n",
                "2 "
            ],
            [
                "3 2\r\n2 6\r\n3 9\r\n6 8\r\n",
                "1 2 3 "
            ],
            [
                "4 3\r\n1 6\r\n5 10\r\n9 9\r\n10 6\r\n",
                "2 3 4 "
            ],
            [
                "5 1\r\n2 3\r\n5 4\r\n7 9\r\n8 10\r\n10 7\r\n",
                "3 4 5 "
            ],
            [
                "10 6\r\n1 16\r\n8 27\r\n23 2\r\n26 21\r\n32 50\r\n38 53\r\n51 79\r\n62 97\r\n77 18\r\n100 5\r\n",
                "2 4 5 6 7 8 10 "
            ],
            [
                "11 6\r\n9 50\r\n10 56\r\n14 39\r\n17 91\r\n22 1\r\n25 65\r\n38 15\r\n39 93\r\n54 62\r\n62 31\r\n90 12\r\n",
                "1 2 4 6 8 9 10 11 "
            ],
            [
                "12 9\r\n2 64\r\n4 14\r\n9 53\r\n11 39\r\n12 46\r\n14 39\r\n40 24\r\n67 77\r\n71 23\r\n72 47\r\n74 33\r\n95 90\r\n",
                "3 6 8 11 12 "
            ],
            [
                "13 6\r\n7 75\r\n8 84\r\n16 95\r\n29 21\r\n49 33\r\n54 56\r\n55 80\r\n65 63\r\n67 50\r\n73 47\r\n80 26\r\n82 74\r\n86 77\r\n",
                "2 3 5 7 9 10 11 13 "
            ],
            [
                "14 5\r\n5 93\r\n19 25\r\n26 43\r\n42 6\r\n53 51\r\n55 39\r\n56 41\r\n67 71\r\n74 71\r\n78 8\r\n84 46\r\n89 45\r\n93 99\r\n97 32\r\n",
                "1 8 9 10 11 12 13 14 "
            ],
            [
                "15 9\r\n5 84\r\n15 84\r\n22 60\r\n31 18\r\n37 2\r\n42 80\r\n48 88\r\n58 61\r\n77 55\r\n79 11\r\n80 25\r\n87 6\r\n93 71\r\n96 26\r\n99 38\r\n",
                "1 2 3 4 6 7 8 9 12 13 15 "
            ],
            [
                "16 11\r\n4 32\r\n12 62\r\n14 69\r\n16 94\r\n20 59\r\n26 100\r\n33 10\r\n34 21\r\n39 79\r\n43 81\r\n46 47\r\n54 81\r\n72 58\r\n74 59\r\n77 47\r\n99 33\r\n",
                "2 4 6 9 10 12 13 16 "
            ],
            [
                "17 10\r\n1 73\r\n2 16\r\n16 8\r\n27 31\r\n31 82\r\n38 87\r\n45 52\r\n51 73\r\n52 59\r\n55 49\r\n63 95\r\n68 52\r\n76 33\r\n83 84\r\n85 50\r\n90 32\r\n95 35\r\n",
                "3 4 6 7 10 11 13 15 17 "
            ],
            [
                "18 7\r\n12 48\r\n19 35\r\n22 8\r\n29 30\r\n33 91\r\n34 25\r\n45 44\r\n49 23\r\n52 64\r\n54 41\r\n56 10\r\n66 25\r\n73 69\r\n77 46\r\n87 31\r\n88 89\r\n91 92\r\n92 22\r\n",
                "1 2 4 5 7 9 12 13 14 16 18 "
            ],
            [
                "19 2\r\n1 73\r\n2 96\r\n3 24\r\n5 96\r\n11 13\r\n14 96\r\n16 31\r\n17 60\r\n34 69\r\n39 41\r\n60 40\r\n61 96\r\n66 7\r\n67 56\r\n68 28\r\n73 12\r\n74 81\r\n78 77\r\n95 99\r\n",
                "2 3 4 6 7 8 11 12 14 17 18 19 "
            ],
            [
                "20 8\r\n2 37\r\n9 28\r\n13 63\r\n14 85\r\n27 27\r\n29 90\r\n34 96\r\n36 60\r\n41 14\r\n45 25\r\n46 95\r\n48 59\r\n53 12\r\n55 69\r\n61 11\r\n76 24\r\n79 71\r\n89 58\r\n96 15\r\n99 77\r\n",
                "2 4 6 8 11 14 17 18 20 "
            ]
        ]
    }
]