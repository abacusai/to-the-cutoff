[
    {
        "name": "AB-Strings",
        "description": "There are two strings s and t, consisting only of letters a and b. You can\nmake the following operation several times: choose a prefix of s, a prefix of\nt and swap them. Prefixes can be empty, also a prefix can coincide with a\nwhole string. Your task is to find a sequence of operations after which one of\nthe strings consists only of a letters and the other consists only of b\nletters. The number of operations should be minimized. Input The first line\ncontains a string s (1 \u2264 |s| \u2264 2\u00b710^5). The second line contains a string t (1\n\u2264 |t| \u2264 2\u00b710^5). Here |s| and |t| denote the lengths of s and t, respectively.\nIt is guaranteed that at least one of the strings contains at least one a\nletter and at least one of the strings contains at least one b letter. Output\nThe first line should contain a single integer n (0 \u2264 n \u2264 5\u00b710^5) \u2014 the number\nof operations. Each of the next n lines should contain two space-separated\nintegers ai, bi \u2014 the lengths of prefixes of s and t to swap, respectively. If\nthere are multiple possible solutions, you can print any of them. It's\nguaranteed that a solution with given constraints exists. Examples Input bab\nbb Output 2 1 0 1 3 Input bbbb aaa Output 0 Note In the first example, you can\nsolve the problem in two operations: Swap the prefix of the first string with\nlength 1 and the prefix of the second string with length 0. After this swap,\nyou'll have strings ab and bbb. Swap the prefix of the first string with\nlength 1 and the prefix of the second string with length 3. After this swap,\nyou'll have strings bbbb and a. In the second example, the strings are already\nappropriate, so no operations are needed.\n\n",
        "cf_contest_id": 1012,
        "cf_index": "D",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "bab\r\nbb\r\n",
                "2\r\n1 0\r\n1 3\r\n"
            ],
            [
                "bbbb\r\naaa\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "aaaaaa\r\nbbbbbb\r\n",
                "0\r\n"
            ],
            [
                "aaaaaa\r\naaaabb\r\n",
                "1\r\n0 4\r\n"
            ],
            [
                "aaaaba\r\naaaaaa\r\n",
                "2\r\n4 0\r\n1 10\r\n"
            ],
            [
                "bbabba\r\nbbbbbb\r\n",
                "3\r\n3 6\r\n8 0\r\n1 10\r\n"
            ],
            [
                "bbabab\r\nbbbbbb\r\n",
                "3\r\n4 0\r\n2 3\r\n2 1\r\n"
            ],
            [
                "bbbbba\r\nbbbba\r\n",
                "2\r\n0 4\r\n9 1\r\n"
            ],
            [
                "aaaaba\r\naaabbb\r\n",
                "2\r\n4 0\r\n1 7\r\n"
            ],
            [
                "bbbbba\r\nbaaaba\r\n",
                "3\r\n0 1\r\n7 4\r\n3 6\r\n"
            ],
            [
                "baabab\r\nbbbbaa\r\n",
                "3\r\n3 4\r\n5 0\r\n1 6\r\n"
            ],
            [
                "abbbba\r\naaaaba\r\n",
                "3\r\n0 4\r\n9 2\r\n1 5\r\n"
            ],
            [
                "abbaa\r\nabbabb\r\n",
                "3\r\n0 1\r\n4 3\r\n2 2\r\n"
            ],
            [
                "baabab\r\nbbbabb\r\n",
                "4\r\n1 0\r\n4 7\r\n5 3\r\n2 4\r\n"
            ],
            [
                "baabaa\r\nbaabaa\r\n",
                "4\r\n0 1\r\n5 5\r\n3 4\r\n2 2\r\n"
            ],
            [
                "bbbbba\r\naaaaaa\r\n",
                "1\r\n5 6\r\n"
            ],
            [
                "aabaaa\r\nbbbbbb\r\n",
                "2\r\n3 6\r\n6 2\r\n"
            ],
            [
                "bbabba\r\naaaaaa\r\n",
                "3\r\n5 6\r\n7 2\r\n2 8\r\n"
            ],
            [
                "abbaba\r\nbbbbbb\r\n",
                "3\r\n4 6\r\n8 3\r\n1 7\r\n"
            ],
            [
                "bbbaa\r\naaaabb\r\n",
                "1\r\n3 4\r\n"
            ],
            [
                "bbbbba\r\naabaaa\r\n",
                "2\r\n6 3\r\n2 5\r\n"
            ],
            [
                "bbaaaa\r\naababb\r\n",
                "3\r\n2 3\r\n3 3\r\n2 2\r\n"
            ],
            [
                "bbbbaa\r\nabbaba\r\n",
                "3\r\n4 4\r\n3 6\r\n5 1\r\n"
            ],
            [
                "bbaaab\r\nabaaaa\r\n",
                "2\r\n5 2\r\n1 2\r\n"
            ],
            [
                "baabaa\r\naabba\r\n",
                "3\r\n4 5\r\n4 3\r\n1 2\r\n"
            ],
            [
                "babbab\r\nabbbaa\r\n",
                "4\r\n2 1\r\n4 5\r\n2 3\r\n1 1\r\n"
            ],
            [
                "aabbab\r\nbaaaba\r\n",
                "3\r\n5 5\r\n4 4\r\n2 1\r\n"
            ],
            [
                "bbbbbb\r\nbababa\r\n",
                "3\r\n0 3\r\n2 2\r\n1 1\r\n"
            ],
            [
                "bababa\r\nbbbaaa\r\n",
                "4\r\n3 0\r\n3 6\r\n2 2\r\n1 1\r\n"
            ],
            [
                "bababa\r\nbbbabb\r\n",
                "4\r\n2 3\r\n4 0\r\n2 7\r\n5 1\r\n"
            ],
            [
                "bbbaba\r\nbababb\r\n",
                "4\r\n0 1\r\n6 3\r\n2 5\r\n4 1\r\n"
            ],
            [
                "bababa\r\nbbabaa\r\n",
                "5\r\n1 0\r\n4 7\r\n5 3\r\n2 4\r\n3 1\r\n"
            ],
            [
                "babaab\r\nbbabab\r\n",
                "5\r\n0 2\r\n7 4\r\n3 5\r\n4 2\r\n1 3\r\n"
            ],
            [
                "bbabab\r\nbababa\r\n",
                "5\r\n0 1\r\n6 4\r\n3 5\r\n4 2\r\n1 3\r\n"
            ],
            [
                "bababa\r\nbababa\r\n",
                "6\r\n0 1\r\n6 5\r\n4 5\r\n4 3\r\n2 3\r\n2 1\r\n"
            ],
            [
                "bbbbbb\r\nababab\r\n",
                "3\r\n6 3\r\n2 8\r\n7 1\r\n"
            ],
            [
                "bababa\r\naaaabb\r\n",
                "3\r\n3 4\r\n6 2\r\n1 5\r\n"
            ],
            [
                "aaabba\r\nbababa\r\n",
                "4\r\n3 3\r\n5 6\r\n5 2\r\n1 4\r\n"
            ],
            [
                "baabab\r\naabbab\r\n",
                "4\r\n5 6\r\n5 4\r\n3 4\r\n2 1\r\n"
            ],
            [
                "bbabba\r\nababab\r\n",
                "5\r\n2 2\r\n5 5\r\n4 3\r\n2 3\r\n2 1\r\n"
            ],
            [
                "aababa\r\nbaabab\r\n",
                "4\r\n5 5\r\n4 4\r\n3 3\r\n1 2\r\n"
            ],
            [
                "babaab\r\nababab\r\n",
                "5\r\n6 5\r\n4 5\r\n3 3\r\n2 2\r\n1 1\r\n"
            ],
            [
                "ababab\r\nbababa\r\n",
                "5\r\n5 5\r\n4 4\r\n3 3\r\n2 2\r\n1 1\r\n"
            ],
            [
                "b\r\naabaaaaaabaabbbbaaaaabbbbaaba\r\n",
                "6\r\n1 16\r\n12 13\r\n12 10\r\n9 10\r\n6 3\r\n2 1\r\n"
            ]
        ]
    }
]