[
    {
        "name": "Fedya the Potter",
        "description": "Fedya loves problems involving data structures. Especially ones about\ndifferent queries on subsegments. Fedya had a nice array \n    a_1, a_2, \n    \u2026\n    a_n\n and a beautiful data structure. This data structure, given \n    l\n and\n\n    r\n, \n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 n\n, could find the greatest integer\n\n    d\n, such that \n    d\n divides each of \n    a_l\n, \n    a_l+1\n, ...,\n\n    a_r\n. Fedya really likes this data structure, so he applied it to every\nnon-empty contiguous subarray of array \n    a\n, put all answers into the array\nand sorted it. He called this array \n    b\n. It's easy to see that array\n\n    b\n contains \n    n(n+1)/2\n elements. After that, Fedya implemented\nanother cool data structure, that allowed him to find sum \n    b_l + b_l+1 +\n    \n    \u2026 + b_r\n for given \n    l\n and \n    r\n, \n    1 \n    \u2264 l \n    \u2264 r \n    \u2264\n    n(n+1)/2\n. Surely, Fedya applied this data structure to every contiguous\nsubarray of array \n    b\n, called the result \n    c\n and sorted it. Help Fedya\nfind the lower median of array \n    c\n. Recall that for a sorted array of\nlength \n    k\n the lower median is an element at position \n    \u230a\n    k + 1/2\n    \u230b\n, if elements of the array are enumerated\nstarting from \n    1\n. For example, the lower median of array \n    (1, 1, 2, 3,\n    6)\n is \n    2\n, and the lower median of \n    (0, 17, 23, 96)\n is \n    17\n.\nInput First line contains a single integer \n    n\n \u2014 number of elements in\narray \n    a\n (\n    1 \n    \u2264 n \n    \u2264 50\n     000\n). Second line contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n \u2014 elements of the array (\n    1 \n    \u2264 a_i\n    \n    \u2264 100\n     000\n). Output Print a single integer \u2014 the lower median of\narray \n    c\n. Examples Input 2 6 3 Output 6 Input 2 8 8 Output 8 Input 5 19\n16 2 12 15 Output 12 Note In the first sample array \n    b\n is equal to \n    3,\n    3, 6\n, then array \n    c\n is equal to \n    3, 3, 6, 6, 9, 12\n, so the\nlower median is \n    6\n. In the second sample \n    b\n is \n    8, 8, 8\n,\n\n    c\n is \n    8, 8, 8, 16, 16, 24\n, so the lower median is \n    8\n.\n\n",
        "cf_contest_id": 1098,
        "cf_index": "E",
        "cf_rating": 3400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "implementation",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n6 3\r\n",
                "6"
            ],
            [
                "2\r\n8 8\r\n",
                "8"
            ],
            [
                "5\r\n19 16 2 12 15\r\n",
                "12"
            ]
        ],
        "private_cases": [
            [
                "1\r\n12\r\n",
                "12"
            ],
            [
                "2\r\n10 12\r\n",
                "12"
            ],
            [
                "3\r\n18 9 17\r\n",
                "19"
            ],
            [
                "5\r\n11 9 4 12 16\r\n",
                "16"
            ],
            [
                "7\r\n16 16 3 3 5 19 19\r\n",
                "15"
            ],
            [
                "10\r\n152 108 184 105 30 185 171 193 101 64\r\n",
                "26"
            ],
            [
                "23\r\n151 136 31 156 184 173 148 3 183 32 46 156 14 189 143 129 177 151 182 91 193 65 165\r\n",
                "93"
            ],
            [
                "59\r\n22 78 90 11 177 25 163 94 180 10 7 169 94 134 161 101 21 192 63 101 19 86 119 154 116 51 141 72 153 108 150 167 96 19 57 26 161 199 73 195 162 2 164 93 37 66 63 193 173 144 79 114 100 84 57 121 104 31 83\r\n",
                "542"
            ],
            [
                "5\r\n8 16 8 32 16\r\n",
                "48"
            ],
            [
                "32\r\n1 1 8 16 8 4 2 16 2 64 2 4 32 4 64 2 32 2 8 64 32 64 16 32 32 8 2 8 1 4 4 1\r\n",
                "294"
            ],
            [
                "10\r\n1 1 16 64 64 32 16 4 32 64\r\n",
                "80"
            ]
        ]
    }
]