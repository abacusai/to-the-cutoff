[
    {
        "name": "Letters Cyclic Shift",
        "description": "You are given a non-empty string s consisting of lowercase English letters.\nYou have to pick exactly one non-empty substring of s and shift all its\nletters 'z' 'y' 'x' 'b' 'a' 'z'. In other words, each character is replaced\nwith the previous character of English alphabet and 'a' is replaced with 'z'.\nWhat is the lexicographically minimum string that can be obtained from s by\nperforming this shift exactly once? Input The only line of the input contains\nthe string s (1 \u2264 |s| \u2264 100 000) consisting of lowercase English letters.\nOutput Print the lexicographically minimum string that can be obtained from s\nby shifting letters of exactly one non-empty substring. Examples Input\ncodeforces Output bncdenqbdr Input abacaba Output aaacaba Note String s is\nlexicographically smaller than some other string t of the same length if there\nexists some 1 \u2264 i \u2264 |s|, such that s1 = t1, s2 = t2, ..., si - 1 = ti - 1, and\nsi < ti.\n\n",
        "cf_contest_id": 708,
        "cf_index": "A",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "codeforces\r\n",
                "bncdenqbdr\r\n"
            ],
            [
                "abacaba\r\n",
                "aaacaba\r\n"
            ]
        ],
        "private_cases": [
            [
                "babbbabaababbaa\r\n",
                "aabbbabaababbaa\r\n"
            ],
            [
                "bcbacaabcababaccccaaaabacbbcbbaa\r\n",
                "abaacaabcababaccccaaaabacbbcbbaa\r\n"
            ],
            [
                "cabaccaacccabaacdbdcbcdbccbccbabbdadbdcdcdbdbcdcdbdadcbcda\r\n",
                "babaccaacccabaacdbdcbcdbccbccbabbdadbdcdcdbdbcdcdbdadcbcda\r\n"
            ],
            [
                "a\r\n",
                "z\r\n"
            ],
            [
                "eeeedddccbceaabdaecaebaeaecccbdeeeaadcecdbeacecdcdcceabaadbcbbadcdaeddbcccaaeebccecaeeeaebcaaccbdaccbdcadadaaeacbbdcbaeeaecedeeeedadec\r\n",
                "ddddcccbbabdaabdaecaebaeaecccbdeeeaadcecdbeacecdcdcceabaadbcbbadcdaeddbcccaaeebccecaeeeaebcaaccbdaccbdcadadaaeacbbdcbaeeaecedeeeedadec\r\n"
            ],
            [
                "fddfbabadaadaddfbfecadfaefaefefabcccdbbeeabcbbddefbafdcafdfcbdffeeaffcaebbbedabddeaecdddffcbeaafffcddccccfffdbcddcfccefafdbeaacbdeeebdeaaacdfdecadfeafaeaefbfdfffeeaefebdceebcebbfeaccfafdccdcecedeedadcadbfefccfdedfaaefabbaeebdebeecaadbebcfeafbfeeefcfaecadfe\r\n",
                "ecceaabadaadaddfbfecadfaefaefefabcccdbbeeabcbbddefbafdcafdfcbdffeeaffcaebbbedabddeaecdddffcbeaafffcddccccfffdbcddcfccefafdbeaacbdeeebdeaaacdfdecadfeafaeaefbfdfffeeaefebdceebcebbfeaccfafdccdcecedeedadcadbfefccfdedfaaefabbaeebdebeecaadbebcfeafbfeeefcfaecadfe\r\n"
            ],
            [
                "aaaaaaaaaa\r\n",
                "aaaaaaaaaz\r\n"
            ],
            [
                "abbabaaaaa\r\n",
                "aaaabaaaaa\r\n"
            ],
            [
                "bbbbbbbbbbbb\r\n",
                "aaaaaaaaaaaa\r\n"
            ],
            [
                "aabaaaaaaaaaaaa\r\n",
                "aaaaaaaaaaaaaaa\r\n"
            ],
            [
                "aaaaaaaaaaaaaaaaaaaa\r\n",
                "aaaaaaaaaaaaaaaaaaaz\r\n"
            ],
            [
                "abaabaaaaaabbaaaaaaabaaaaaaaaabaaaabaaaaaaabaaaaaaaaaabaaaaaaaaaaaaaaabaaaabbaaaaabaaaaaaaabaaaaaaaa\r\n",
                "aaaabaaaaaabbaaaaaaabaaaaaaaaabaaaabaaaaaaabaaaaaaaaaabaaaaaaaaaaaaaaabaaaabbaaaaabaaaaaaaabaaaaaaaa\r\n"
            ],
            [
                "abbbbbbbabbbbbbbbbbbbbbbbbbbbbbbabbabbbbbabbbbbbbbbbbabbbbbbbbabbabbbbbbbbbbbbbbabbabbbaababbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbabbabbbbbbbbbbbbbbbbabbbbabbbbbbbbbbbbbbbabbbbbbbbbaababbbbbbbbabbbbbbbbbbbbbbbbbbbbbbbbbbbbabbbbbbbbbbbbbbbbbbbbabbabbbbbbbbbbbbbbbbabbbabbbbbaabbabbbbbbbbbbbbbbbbbbbbbbbbbbbbbabbbbbbbbbbbbbbbbaabbbbbbbbbbbbababbabbbbbbbbbbbbbbbbbbbbbbbbabbbbbbbbbbbbbbbabbbbbbbbbbbabbbbbbbbbbbbbbbbbbbbbbabbbbbbbabbbbbbb\r\n",
                "aaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbabbabbbbbabbbbbbbbbbbabbbbbbbbabbabbbbbbbbbbbbbbabbabbbaababbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbabbabbbbbbbbbbbbbbbbabbbbabbbbbbbbbbbbbbbabbbbbbbbbaababbbbbbbbabbbbbbbbbbbbbbbbbbbbbbbbbbbbabbbbbbbbbbbbbbbbbbbbabbabbbbbbbbbbbbbbbbabbbabbbbbaabbabbbbbbbbbbbbbbbbbbbbbbbbbbbbbabbbbbbbbbbbbbbbbaabbbbbbbbbbbbababbabbbbbbbbbbbbbbbbbbbbbbbbabbbbbbbbbbbbbbbabbbbbbbbbbbabbbbbbbbbbbbbbbbbbbbbbabbbbbbbabbbbbbb\r\n"
            ],
            [
                "aaaaa\r\n",
                "aaaaz\r\n"
            ],
            [
                "aaa\r\n",
                "aaz\r\n"
            ],
            [
                "aa\r\n",
                "az\r\n"
            ]
        ]
    }
]