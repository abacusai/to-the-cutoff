[
    {
        "name": "Fruit Sequences",
        "description": "Zookeeper is buying a carton of fruit to feed his pet wabbit. The fruits are a\nsequence of apples and oranges, which is represented by a binary string\n\n    s_1s_2\n    \u2026 s_n\n of length \n    n\n. \n    1\n represents an apple and\n\n    0\n represents an orange. Since wabbit is allergic to eating oranges,\nZookeeper would like to find the longest contiguous sequence of apples. Let\n\n    f(l,r)\n be the longest contiguous sequence of apples in the substring\n\n    s_ls_l+1\n    \u2026 s_r\n. Help Zookeeper find \n    \u2211_l=1^n\n    \u2211_r=l^n f(l,r)\n, or the sum of \n    f\n across all substrings. Input\nThe first line contains a single integer \n    n\n \n    (1 \n    \u2264 n \n    \u2264 5\n    \n    \u00b7 10^5)\n. The next line contains a binary string \n    s\n of length\n\n    n\n \n    (s_i \n    \u2208\n    \n    0,1\n    \n    )\n Output Print a single integer:\n\n    \u2211_l=1^n\n    \u2211_r=l^n f(l,r)\n. Examples Input 4 0110 Output\n12 Input 7 1101001 Output 30 Input 12 011100011100 Output 156 Note In the\nfirst test, there are ten substrings. The list of them (we let \n    [l,r]\n be\nthe substring \n    s_l s_l+1\n    \u2026 s_r\n): \n    [1,1]\n: 0 \n    [1,2]\n: 01\n\n    [1,3]\n: 011 \n    [1,4]\n: 0110 \n    [2,2]\n: 1 \n    [2,3]\n: 11 \n    [2,4]\n:\n110 \n    [3,3]\n: 1 \n    [3,4]\n: 10 \n    [4,4]\n: 0 The lengths of the longest\ncontiguous sequence of ones in each of these ten substrings are\n\n    0,1,2,2,1,2,2,1,1,0\n respectively. Hence, the answer is\n\n    0+1+2+2+1+2+2+1+1+0 = 12\n.\n\n",
        "cf_contest_id": 1428,
        "cf_index": "F",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n0110\r\n",
                "12"
            ],
            [
                "7\r\n1101001\r\n",
                "30"
            ],
            [
                "12\r\n011100011100\r\n",
                "156"
            ]
        ],
        "private_cases": [
            [
                "100\r\n0110110011011111001110000110010010000111111001100001011101101000001011001101100111011111100111101110\r\n",
                "23254"
            ],
            [
                "1\r\n0\r\n",
                "0"
            ]
        ]
    }
]