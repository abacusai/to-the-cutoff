[
    {
        "name": "Parkway Walk",
        "description": "You are walking through a parkway near your house. The parkway has \n    n+1\n\nbenches in a row numbered from \n    1\n to \n    n+1\n from left to right. The\ndistance between the bench \n    i\n and \n    i+1\n is \n    a_i\n meters.\nInitially, you have \n    m\n units of energy. To walk \n    1\n meter of\ndistance, you spend \n    1\n unit of your energy. You can't walk if you have no\nenergy. Also, you can restore your energy by sitting on benches (and this is\nthe only way to restore the energy). When you are sitting, you can restore any\ninteger amount of energy you want (if you sit longer, you restore more\nenergy). Note that the amount of your energy can exceed \n    m\n. Your task is\nto find the minimum amount of energy you have to restore (by sitting on\nbenches) to reach the bench \n    n+1\n from the bench \n    1\n (and end your\nwalk). You have to answer \n    t\n independent test cases. Input The first line\nof the input contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the\nnumber of test cases. Then \n    t\n test cases follow. The first line of the\ntest case contains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264\n    100\n; \n    1 \n    \u2264 m \n    \u2264 10^4\n). The second line of the test case contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 100\n),\nwhere \n    a_i\n is the distance between benches \n    i\n and \n    i+1\n. Output\nFor each test case, print one integer \u2014 the minimum amount of energy you have\nto restore (by sitting on benches) to reach the bench \n    n+1\n from the bench\n\n    1\n (and end your walk) in the corresponding test case. Example Input 3 3\n1 1 2 1 4 5 3 3 5 2 5 16 1 2 3 4 5 Output 3 8 0 Note In the first test case of\nthe example, you can walk to the bench \n    2\n, spending \n    1\n unit of\nenergy, then restore \n    2\n units of energy on the second bench, walk to the\nbench \n    3\n, spending \n    2\n units of energy, restore \n    1\n unit of\nenergy and go to the bench \n    4\n. In the third test case of the example, you\nhave enough energy to just go to the bench \n    6\n without sitting at all.\n\n",
        "cf_contest_id": 1697,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 1\r\n1 2 1\r\n4 5\r\n3 3 5 2\r\n5 16\r\n1 2 3 4 5\r\n",
                "3\r\n8\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2 1\r\n99 99\r\n",
                "197\r\n"
            ],
            [
                "1\r\n5 100\r\n1 99 99 80 5\r\n",
                "184\r\n"
            ],
            [
                "1\r\n100 7773\r\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\r\n",
                "2227\r\n"
            ],
            [
                "1\r\n5 100\r\n1 91 99 80 5\r\n",
                "176\r\n"
            ],
            [
                "1\r\n37 234\r\n1 2 3 4 5 6 7 8 4 5 6 7 8 9 11 1 2 3 4 5 6 7 8 9 4 1 2 3 4 5 6 7 8 9 1 2 3\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1 1\r\n3\r\n",
                "2\r\n"
            ],
            [
                "1\r\n1 1\r\n69\r\n",
                "68\r\n"
            ],
            [
                "1\r\n1 1\r\n2\r\n",
                "1\r\n"
            ],
            [
                "1\r\n5 3\r\n1 91 99 80 5\r\n",
                "273\r\n"
            ]
        ]
    }
]