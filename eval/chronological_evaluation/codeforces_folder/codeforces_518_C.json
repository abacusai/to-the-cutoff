[
    {
        "name": "Anya and Smartphone",
        "description": "Anya has bought a new smartphone that uses Berdroid operating system. The\nsmartphone menu has exactly n applications, each application has its own icon.\nThe icons are located on different screens, one screen contains k icons. The\nicons from the first to the k-th one are located on the first screen, from the\n(k + 1)-th to the 2k-th ones are on the second screen and so on (the last\nscreen may be partially empty). Initially the smartphone menu is showing the\nscreen number 1. To launch the application with the icon located on the screen\nt, Anya needs to make the following gestures: first she scrolls to the\nrequired screen number t, by making t - 1 gestures (if the icon is on the\nscreen t), and then make another gesture \u2014 press the icon of the required\napplication exactly once to launch it. After the application is launched, the\nmenu returns to the first screen. That is, to launch the next application you\nneed to scroll through the menu again starting from the screen number 1. All\napplications are numbered from 1 to n. We know a certain order in which the\nicons of the applications are located in the menu at the beginning, but it\nchanges as long as you use the operating system. Berdroid is intelligent\nsystem, so it changes the order of the icons by moving the more frequently\nused icons to the beginning of the list. Formally, right after an application\nis launched, Berdroid swaps the application icon and the icon of a preceding\napplication (that is, the icon of an application on the position that is\nsmaller by one in the order of menu). The preceding icon may possibly be\nlocated on the adjacent screen. The only exception is when the icon of the\nlaunched application already occupies the first place, in this case the icon\narrangement doesn't change. Anya has planned the order in which she will\nlaunch applications. How many gestures should Anya make to launch the\napplications in the planned order? Note that one application may be launched\nmultiple times. Input The first line of the input contains three numbers n, m,\nk (1 \u2264 n, m, k \u2264 10^5) \u2014 the number of applications that Anya has on her\nsmartphone, the number of applications that will be launched and the number of\nicons that are located on the same screen. The next line contains n integers,\npermutation a1, a2, ..., an \u2014 the initial order of icons from left to right in\nthe menu (from the first to the last one), ai \u2014 is the id of the application,\nwhose icon goes i-th in the menu. Each integer from 1 to n occurs exactly once\namong ai. The third line contains m integers b1, b2, ..., bm(1 \u2264 bi \u2264 n) \u2014 the\nids of the launched applications in the planned order. One application may be\nlaunched multiple times. Output Print a single number \u2014 the number of gestures\nthat Anya needs to make to launch all the applications in the desired order.\nExamples Input 8 3 3 1 2 3 4 5 6 7 8 7 8 1 Output 7 Input 5 4 2 3 1 5 2 4 4 4\n4 4 Output 8 Note In the first test the initial configuration looks like\n(123)(456)(78), that is, the first screen contains icons of applications 1, 2,\n3, the second screen contains icons 4, 5, 6, the third screen contains icons\n7, 8. After application 7 is launched, we get the new arrangement of the icons\n\u2014 (123)(457)(68). To launch it Anya makes 3 gestures. After application 8 is\nlaunched, we get configuration (123)(457)(86). To launch it Anya makes 3\ngestures. After application 1 is launched, the arrangement of icons in the\nmenu doesn't change. To launch it Anya makes 1 gesture. In total, Anya makes 7\ngestures.\n\n",
        "cf_contest_id": 518,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8 3 3\r\n1 2 3 4 5 6 7 8\r\n7 8 1\r\n",
                "7\r\n"
            ],
            [
                "5 4 2\r\n3 1 5 2 4\r\n4 4 4 4\r\n",
                "8\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 10 3\r\n1 2 3 4 5 6 7 8 9 10\r\n2 3 4 5 6 7 8 9 10 1\r\n",
                "25\r\n"
            ],
            [
                "10 12 3\r\n6 1 2 9 3 10 8 5 7 4\r\n3 9 9 4 8 2 3 8 10 8 3 4\r\n",
                "29\r\n"
            ],
            [
                "16 12 8\r\n6 11 12 5 1 10 16 3 13 15 9 4 8 2 14 7\r\n6 13 8 12 8 15 12 16 8 11 3 16\r\n",
                "18\r\n"
            ],
            [
                "4 3 5\r\n3 1 4 2\r\n4 2 4\r\n",
                "3\r\n"
            ],
            [
                "4 2 15\r\n2 4 3 1\r\n1 2\r\n",
                "2\r\n"
            ],
            [
                "71 96 75634\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71\r\n27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26 27 26\r\n",
                "96\r\n"
            ],
            [
                "71 81 2149\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 29 28 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71\r\n29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29 28 29\r\n",
                "81\r\n"
            ]
        ]
    }
]