[
    {
        "name": "Kingdom of Criticism",
        "description": "Pak Chanek is visiting a kingdom that earned a nickname \"Kingdom of Criticism\"\nbecause of how often its residents criticise each aspect of the kingdom. One\naspect that is often criticised is the heights of the buildings. The kingdom\nhas \n    N\n buildings. Initially, building \n    i\n has a height of \n    A_i\n\nunits. At any point in time, the residents can give a new criticism, namely\nthey currently do not like buildings with heights between \n    l\n and \n    r\n\nunits inclusive for some two integers \n    l\n and \n    r\n. It is known that\n\n    r-l\n is always odd. In \n    1\n minute, the kingdom's construction team\ncan increase or decrease the height of any building by \n    1\n unit as long as\nthe height still becomes a positive number. Each time they receive the current\ncriticism from the residents, the kingdom's construction team makes it so that\nthere are no buildings with heights between \n    l\n and \n    r\n units\ninclusive in the minimum time possible. It can be obtained that there is only\none way to do this. Note that the construction team only cares about the\ncurrent criticism from the residents. All previous criticisms are forgotten.\nThere will be \n    Q\n queries that you must solve. Each query is one of the\nthree following possibilities: 1 k w: The kingdom's construction team changes\nthe height of building \n    k\n to be \n    w\n units (\n    1 \n    \u2264 k \n    \u2264 N\n,\n\n    1 \n    \u2264 w \n    \u2264 10^9\n). 2 k: The kingdom's construction team wants you\nto find the height of building \n    k\n (\n    1 \n    \u2264 k \n    \u2264 N\n). 3 l r: The\nresidents currently do not like buildings with heights between \n    l\n and\n\n    r\n units inclusive (\n    2 \n    \u2264 l \n    \u2264 r \n    \u2264 10^9-1\n, \n    r-l\n is\nodd). Note that each change in height still persists to the next queries.\nInput The first line contains a single integer \n    N\n (\n    1 \n    \u2264 N \n    \u2264 4\n    \n    \u00b7 10^5\n) \u2014 the number buildings in the kingdom. The second line\ncontains \n    N\n integers \n    A_1, A_2, \n    \u2026, A_N\n (\n    1 \n    \u2264 A_i\n    \n    \u2264 10^9\n) \u2014 the initial heights of the buildings. The next line contains\na single integer \n    Q\n (\n    1 \n    \u2264 Q \n    \u2264 4 \n    \u00b7 10^5\n) \u2014 the number\nof queries. The \n    j\n-th of the next \n    Q\n lines contains the \n    j\n-th\nquery as described. There is at least one query of type \n    2\n. Output For\neach query of type \n    2\n, output a line containing an integer representing\nthe height of the building asked. Example Input 5 2 6 5 6 2 9 1 5 10 2 5 1 1 3\n3 3 6 3 8 9 1 2 9 2 3 2 2 2 4 Output 10 7 9 7 Note After the \n    1\n-st query,\nthe height of each building is \n    2, 6, 5, 6, 10\n. After the \n    3\n-rd\nquery, the height of each building is \n    3, 6, 5, 6, 10\n. After the\n\n    4\n-th query, the height of each building is \n    2, 7, 7, 7, 10\n. After\nthe \n    5\n-th query, the height of each building is \n    2, 7, 7, 7, 10\n.\nAfter the \n    6\n-th query, the height of each building is \n    2, 9, 7, 7,\n    10\n.\n\n",
        "cf_contest_id": 1725,
        "cf_index": "K",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dsu"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n2 6 5 6 2\r\n9\r\n1 5 10\r\n2 5\r\n1 1 3\r\n3 3 6\r\n3 8 9\r\n1 2 9\r\n2 3\r\n2 2\r\n2 4\r\n",
                "10\r\n7\r\n9\r\n7\r\n"
            ]
        ],
        "private_cases": []
    }
]