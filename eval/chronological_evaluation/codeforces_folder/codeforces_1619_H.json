[
    {
        "name": "Permutation and Queries",
        "description": "You are given a permutation \n    p\n of \n    n\n elements. A permutation of\n\n    n\n elements is an array of length \n    n\n containing each integer from\n\n    1\n to \n    n\n exactly once. For example, \n    [1, 2, 3]\n and \n    [4, 3, 5,\n    1, 2]\n are permutations, but \n    [1, 2, 4]\n and \n    [4, 3, 2, 1, 2]\n are\nnot permutations. You should perform \n    q\n queries. There are two types of\nqueries: \n    1\n \n    x\n \n    y\n \u2014 swap \n    p_x\n and \n    p_y\n. \n    2\n\n\n    i\n \n    k\n \u2014 print the number that \n    i\n will become if we assign \n    i\n    = p_i\n \n    k\n times. Input The first line contains two integers \n    n\n and\n\n    q\n (\n    1 \n    \u2264 n, q \n    \u2264 10^5\n). The second line contains \n    n\n\nintegers \n    p_1, p_2, \n    \u2026, p_n\n. Each of the next \n    q\n lines contains\nthree integers. The first integer is \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2\n) \u2014 type\nof query. If \n    t = 1\n, then the next two integers are \n    x\n and \n    y\n\n(\n    1 \n    \u2264 x, y \n    \u2264 n\n; \n    x \n     y\n) \u2014 first-type query. If \n    t =\n    2\n, then the next two integers are \n    i\n and \n    k\n (\n    1 \n    \u2264 i, k\n    \n    \u2264 n\n) \u2014 second-type query. It is guaranteed that there is at least one\nsecond-type query. Output For every second-type query, print one integer in a\nnew line \u2014 answer to this query. Examples Input 5 4 5 3 4 2 1 2 3 1 2 1 2 1 1\n3 2 1 2 Output 4 1 2 Input 5 9 2 3 5 1 4 2 3 5 2 5 5 2 5 1 2 5 3 2 5 4 1 5 4 2\n5 3 2 2 5 2 5 1 Output 3 5 4 2 3 3 3 1 Note In the first example \n    p =\n    \n    \n    5, 3, 4, 2, 1\n. The first query is to print \n    p_3\n. The answer\nis \n    4\n. The second query is to print \n    p_p_1\n. The answer is \n    1\n.\nThe third query is to swap \n    p_1\n and \n    p_3\n. Now \n    p = \n    \n    4, 3, 5,\n    2, 1\n. The fourth query is to print \n    p_p_1\n. The answer is\n\n    2\n.\n\n",
        "cf_contest_id": 1619,
        "cf_index": "H",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "divide and conquer",
            "two pointers"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4\r\n5 3 4 2 1\r\n2 3 1\r\n2 1 2\r\n1 1 3\r\n2 1 2\r\n",
                "4\r\n1\r\n2\r\n"
            ],
            [
                "5 9\r\n2 3 5 1 4\r\n2 3 5\r\n2 5 5\r\n2 5 1\r\n2 5 3\r\n2 5 4\r\n1 5 4\r\n2 5 3\r\n2 2 5\r\n2 5 1\r\n",
                "3\r\n5\r\n4\r\n2\r\n3\r\n3\r\n3\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n2 1 1\r\n",
                "1\r\n"
            ],
            [
                "10 10\r\n6 7 4 1 5 3 10 2 8 9\r\n2 10 5\r\n1 7 6\r\n1 10 6\r\n2 3 3\r\n1 6 2\r\n2 9 4\r\n1 4 6\r\n1 7 9\r\n2 9 8\r\n1 3 6\r\n",
                "10\r\n6\r\n8\r\n4\r\n"
            ],
            [
                "100 10\r\n71 72 20 93 38 81 19 44 88 57 3 37 86 64 63 97 15 85 53 99 61 66 75 96 48 67 6 31 92 70 27 54 74 43 7 5 84 33 60 65 95 76 11 14 49 24 77 21 50 98 46 25 83 45 94 8 68 91 28 4 80 18 17 1 47 34 40 26 69 35 58 9 36 32 22 16 10 79 13 90 78 29 23 41 100 51 55 59 62 56 12 30 82 2 89 52 73 87 39 42\r\n1 64 46\r\n1 97 45\r\n2 50 22\r\n2 1 72\r\n2 65 8\r\n1 18 37\r\n1 19 89\r\n1 86 6\r\n2 36 69\r\n1 100 59\r\n",
                "71\r\n6\r\n40\r\n54\r\n"
            ]
        ]
    }
]