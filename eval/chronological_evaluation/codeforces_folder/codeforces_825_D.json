[
    {
        "name": "Suitable Replacement",
        "description": "You are given two strings s and t consisting of small Latin letters, string s\ncan also contain '?' characters. Suitability of string s is calculated by\nfollowing metric: Any two letters can be swapped positions, these operations\ncan be performed arbitrary number of times over any pair of positions. Among\nall resulting strings s, you choose the one with the largest number of non-\nintersecting occurrences of string t. Suitability is this number of\noccurrences. You should replace all '?' characters with small Latin letters in\nsuch a way that the suitability of string s is maximal. Input The first line\ncontains string s (1 \u2264 |s| \u2264 10^6). The second line contains string t (1 \u2264 |t|\n\u2264 10^6). Output Print string s with '?' replaced with small Latin letters in\nsuch a way that suitability of that string is maximal. If there are multiple\nstrings with maximal suitability then print any of them. Examples Input ?aa?\nab Output baab Input ??b? za Output azbz Input abcd abacaba Output abcd Note\nIn the first example string \"baab\" can be transformed to \"abab\" with swaps,\nthis one has suitability of 2. That means that string \"baab\" also has\nsuitability of 2. In the second example maximal suitability you can achieve is\n1 and there are several dozens of such strings, \"azbz\" is just one of them. In\nthe third example there are no '?' characters and the suitability of the\nstring is 0.\n\n",
        "cf_contest_id": 825,
        "cf_index": "D",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "?aa?\r\nab\r\n",
                "baab"
            ],
            [
                "??b?\r\nza\r\n",
                "azba"
            ],
            [
                "abcd\r\nabacaba\r\n",
                "abcd"
            ]
        ],
        "private_cases": [
            [
                "mqwstphetbfrsyxuzdww\r\nrutseqtsbh\r\n",
                "mqwstphetbfrsyxuzdww"
            ],
            [
                "????????????????????\r\nxwkxsxlrre\r\n",
                "wkxsxlrrexwkxsxlrrex"
            ],
            [
                "fzjqgrgzzzghrwgwhfjq\r\nggwfrjzzqh\r\n",
                "fzjqgrgzzzghrwgwhfjq"
            ],
            [
                "ng?\r\nvu\r\n",
                "ngu"
            ],
            [
                "???\r\nb\r\n",
                "bbb"
            ],
            [
                "??a?\r\na\r\n",
                "aaaa"
            ],
            [
                "c?aa???a?cdcc??\r\nabcadbaccb\r\n",
                "cbaabbbaacdccdb"
            ],
            [
                "cc?cdb?????b?cc?b?\r\ncabdacd\r\n",
                "ccacdbadadabdccabd"
            ],
            [
                "ccaaa?bc?baccbccccbca?cccab??aacccbaac?bccacc?accccaccbcbbcbc\r\ncbaaacccc\r\n",
                "ccaaaabcabaccbccccbcaacccabaaaacccbaacabccaccaaccccaccbcbbcbc"
            ],
            [
                "aacaacbabc?bcca?ccca\r\nbc\r\n",
                "aacaacbabcbbccabccca"
            ]
        ]
    }
]