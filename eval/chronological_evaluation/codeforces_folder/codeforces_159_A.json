[
    {
        "name": "Friends or Not",
        "description": "Polycarpus has a hobby \u2014 he develops an unusual social network. His work is\nalmost completed, and there is only one more module to implement \u2014 the module\nwhich determines friends. Oh yes, in this social network one won't have to add\nfriends manually! Pairs of friends are deduced in the following way. Let's\nassume that user A sent user B a message at time t1, and user B sent user A a\nmessage at time t2. If 0 < t2 - t1 \u2264 d, then user B's message was an answer to\nuser A's one. Users A and B are considered to be friends if A answered at\nleast one B's message or B answered at least one A's message. You are given\nthe log of messages in chronological order and a number d. Find all pairs of\nusers who will be considered to be friends. Input The first line of the input\ncontains two integers n and d (1 \u2264 n, d \u2264 1000). The next n lines contain the\nmessages log. The i-th line contains one line of the log formatted as \"Ai Bi\nti\" (without the quotes), which means that user Ai sent a message to user Bi\nat time ti (1 \u2264 i \u2264 n). Ai and Bi are non-empty strings at most 20 characters\nlong, consisting of lowercase letters ('a' ... 'z'), and ti is an integer (0 \u2264\nti \u2264 10000). It is guaranteed that the lines are given in non-decreasing order\nof ti's and that no user sent a message to himself. The elements in the lines\nare separated by single spaces. Output In the first line print integer k \u2014 the\nnumber of pairs of friends. In the next k lines print pairs of friends as \"Ai\nBi\" (without the quotes). You can print users in pairs and the pairs\nthemselves in any order. Each pair must be printed exactly once. Examples\nInput 4 1 vasya petya 1 petya vasya 2 anya ivan 2 ivan anya 4 Output 1 petya\nvasya Input 1 1000 a b 0 Output 0 Note In the first sample test case Vasya and\nPetya are friends because their messages' sending times are one second apart.\nAnya and Ivan are not, because their messages' sending times differ by more\nthan one second.\n\n",
        "cf_contest_id": 159,
        "cf_index": "A",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 1\r\nvasya petya 1\r\npetya vasya 2\r\nanya ivan 2\r\nivan anya 4\r\n",
                "1\npetya vasya\n"
            ],
            [
                "1 1000\r\na b 0\r\n",
                "0\n\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\na b 0\r\nb a 0\r\n",
                "0\n\n"
            ],
            [
                "3 1\r\na b 1\r\nb c 2\r\nc d 3\r\n",
                "0\n\n"
            ],
            [
                "10 2\r\nrvmykneiddpqyf jdhmt 0\r\nwcsjvh jdhmt 0\r\njdhmt rvmykneiddpqyf 1\r\nrvmykneiddpqyf jdhmt 1\r\nwcsjvh rvmykneiddpqyf 2\r\nrvmykneiddpqyf jdhmt 2\r\njdhmt rvmykneiddpqyf 3\r\njdhmt wcsjvh 5\r\njdhmt wcsjvh 5\r\nrvmykneiddpqyf jdhmt 6\r\n",
                "1\njdhmt rvmykneiddpqyf\n"
            ],
            [
                "10 2\r\nliazxawm spxwktiqjgs 0\r\nnolq liazxawm 1\r\nliazxawm nolq 2\r\nliazxawm spxwktiqjgs 2\r\nnolq liazxawm 3\r\nspxwktiqjgs liazxawm 3\r\nspxwktiqjgs liazxawm 3\r\nspxwktiqjgs liazxawm 3\r\nspxwktiqjgs nolq 3\r\nnolq spxwktiqjgs 4\r\n",
                "3\nliazxawm nolq\nliazxawm spxwktiqjgs\nnolq spxwktiqjgs\n"
            ],
            [
                "10 2\r\nfxn ipntr 0\r\nipntr fxn 1\r\nfxn ipntr 1\r\npfvpfteadph ipntr 2\r\nfxn pfvpfteadph 4\r\nipntr fxn 4\r\npfvpfteadph fxn 5\r\nfxn pfvpfteadph 5\r\npfvpfteadph ipntr 6\r\nipntr pfvpfteadph 6\r\n",
                "2\nfxn ipntr\nfxn pfvpfteadph\n"
            ],
            [
                "3 1\r\na b 1\r\na b 2\r\nb a 2\r\n",
                "1\na b\n"
            ]
        ]
    }
]