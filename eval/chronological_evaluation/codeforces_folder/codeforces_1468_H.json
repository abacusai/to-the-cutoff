[
    {
        "name": "K and Medians",
        "description": "Let's denote the median of a sequence \n    s\n with odd length as the value in\nthe middle of \n    s\n if we sort \n    s\n in non-decreasing order. For example,\nlet \n    s = [1, 2, 5, 7, 2, 3, 12]\n. After sorting, we get sequence \n    [1, 2,\n    2, \n    3, 5, 7, 12]\n, and the median is equal to \n    3\n. You have\na sequence of \n    n\n integers \n    [1, 2, \n    \u2026, n]\n and an odd integer\n\n    k\n. In one step, you choose any \n    k\n elements from the sequence and\nerase all chosen elements except their median. These elements do not have to\ngo continuously (gaps are allowed between them). For example, if you have a\nsequence \n    [1, 2, 3, 4, 5, 6, 7]\n (i.e. \n    n=7\n) and \n    k = 3\n, then\nthe following options for the first step are possible: choose \n    [1,\n    \n    2, 3]\n; \n    2\n is their median, so it is not erased, and the\nresulting sequence is \n    [2, 4, 5, 6, 7]\n; choose \n    [2, \n    4,\n    6]\n; \n    4\n is their median, so it is not erased, and the resulting\nsequence is \n    [1, 3, 4, 5, 7]\n; choose \n    [1, \n    6, 7]\n;\n\n    6\n is their median, so it is not erased, and the resulting sequence is\n\n    [2, 3, 4, 5, 6]\n; and several others. You can do zero or more steps. Can\nyou get a sequence \n    b_1\n, \n    b_2\n, ..., \n    b_m\n after several steps?\nYou'll be given \n    t\n test cases. Solve each test case independently. Input\nThe first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n)\n\u2014 the number of test cases. The first line of each test case contains three\nintegers \n    n\n, \n    k\n, and \n    m\n (\n    3 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n;\n\n    3 \n    \u2264 k \n    \u2264 n\n; \n    k\n is odd; \n    1 \n    \u2264 m < n\n) \u2014 the length of\nthe sequence you have, the number of elements you choose in each step and the\nlength of the sequence you'd like to get. The second line of each test case\ncontains \n    m\n integers \n    b_1, b_2, \n    \u2026, b_m\n (\n    1 \n    \u2264 b_1 < b_2 <\n    \n    \u2026 < b_m \n    \u2264 n\n) \u2014 the sequence you'd like to get, given in the\nascending order. It's guaranteed that the total sum of \n    n\n over all test\ncases doesn't exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, print\nYES if you can obtain the sequence \n    b\n or NO otherwise. You may print each\nletter in any case (for example, YES, Yes, yes, yEs will all be recognized as\npositive answer). Example Input 4 3 3 1 1 7 3 3 1 5 7 10 5 3 4 5 6 13 7 7 1 3\n5 7 9 11 12 Output NO YES NO YES Note In the first test case, you have\nsequence \n    [1, 2, 3]\n. Since \n    k = 3\n you have only one way to choose\n\n    k\n elements \u2014 it's to choose all elements \n    [1, \n    2, 3]\n\nwith median \n    2\n. That's why after erasing all chosen elements except its\nmedian you'll get sequence \n    [2]\n. In other words, there is no way to get\nsequence \n    b = [1]\n as the result. In the second test case, you have\nsequence \n    [1, 2, 3, 4, 5, 6, 7]\n and one of the optimal strategies is\nfollowing: choose \n    k = 3\n elements \n    [2, \n    3, 4]\n and erase\nthem except its median; you'll get sequence \n    [1, 3, 5, 6, 7]\n; choose\n\n    3\n elements \n    [3, \n    5, 6]\n and erase them except its\nmedian; you'll get desired sequence \n    [1, 5, 7]\n; In the fourth test case,\nyou have sequence \n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\n. You can\nchoose \n    k=7\n elements \n    [2, 4, 6, \n    7, 8, 10, 13]\n and\nerase them except its median to get sequence \n    b\n.\n\n",
        "cf_contest_id": 1468,
        "cf_index": "H",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n3 3 1\r\n1\r\n7 3 3\r\n1 5 7\r\n10 5 3\r\n4 5 6\r\n13 7 7\r\n1 3 5 7 9 11 12\r\n",
                "NO\r\nYES\r\nNO\r\nYES\r\n"
            ]
        ],
        "private_cases": []
    }
]