[
    {
        "name": "Frets On Fire",
        "description": "Miyako came to the flea kingdom with a ukulele. She became good friends with\nlocal flea residents and played beautiful music for them every day. In return,\nthe fleas made a bigger ukulele for her: it has \n    n\n strings, and each\nstring has \n    (10^18 + 1)\n frets numerated from \n    0\n to \n    10^18\n.\nThe fleas use the array \n    s_1, s_2, \n    \u2026, s_n\n to describe the\nukulele's tuning, that is, the pitch of the \n    j\n-th fret on the \n    i\n-th\nstring is the integer \n    s_i + j\n. Miyako is about to leave the kingdom, but\nthe fleas hope that Miyako will answer some last questions for them. Each\nquestion is in the form of: \"How many different pitches are there, if we\nconsider frets between \n    l\n and \n    r\n (inclusive) on all strings?\" Miyako\nis about to visit the cricket kingdom and has no time to answer all the\nquestions. Please help her with this task! Formally, you are given a matrix\nwith \n    n\n rows and \n    (10^18+1)\n columns, where the cell in the\n\n    i\n-th row and \n    j\n-th column (\n    0 \n    \u2264 j \n    \u2264 10^18\n) contains\nthe integer \n    s_i + j\n. You are to answer \n    q\n queries, in the\n\n    k\n-th query you have to answer the number of distinct integers in the\nmatrix from the \n    l_k\n-th to the \n    r_k\n-th columns, inclusive. Input The\nfirst line contains an integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n     000\n) \u2014\nthe number of strings. The second line contains \n    n\n integers \n    s_1, s_2,\n    \n    \u2026, s_n\n (\n    0 \n    \u2264 s_i \n    \u2264 10^18\n) \u2014 the tuning of the\nukulele. The third line contains an integer \n    q\n (\n    1 \n    \u2264 q \n    \u2264\n    100\n     000\n) \u2014 the number of questions. The \n    k\n-th among the following\n\n    q\n lines contains two integers \n    l_k\n\uff0c\n    r_k\n (\n    0 \n    \u2264 l_k\n    \n    \u2264 r_k \n    \u2264 10^18\n) \u2014 a question from the fleas. Output Output one\nnumber for each question, separated by spaces \u2014 the number of different\npitches. Examples Input 6 3 1 4 1 5 9 3 7 7 0 2 8 17 Output 5 10 18 Input 2 1\n500000000000000000 2 1000000000000000000 1000000000000000000 0\n1000000000000000000 Output 2 1500000000000000000 Note For the first example,\nthe pitches on the \n    6\n strings are as follows. \n    \n\n    Fret   \n    0   \n    1   \n    2   \n    3   \n    4   \n    5   \n    6   \n    7   \n    \u2026\n    \n    \n    s_1:     3     4     5     6     7     8     9     10    \n    \u2026\n    \n    \n     s_2:     1     2     3     4    \n    5     6     7     8    \n    \u2026\n    \n    \n     s_3:     4     5     6     7     8     9     10     11    \n    \u2026\n    \n    \n     s_4:     1     2     3     4     5     6     7     8    \n    \u2026\n    \n    \n     s_5:    \n    5     6     7     8     9     10     11     12    \n    \u2026\n    \n    \n     s_6:     9     10     11     12    \n    13     14     15     16    \n    \u2026\n\n    \n There are \n    5\n different\npitches on fret \n    7\n \u2014 \n    8, 10, 11, 12, 16\n. There are \n    10\n\ndifferent pitches on frets \n    0, 1, 2\n \u2014 \n    1, 2, 3, 4, 5, 6, 7, 9, 10,\n    11\n.\n\n",
        "cf_contest_id": 1119,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "sortings"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n3 1 4 1 5 9\r\n3\r\n7 7\r\n0 2\r\n8 17\r\n",
                "5 10 18 "
            ],
            [
                "2\r\n1 500000000000000000\r\n2\r\n1000000000000000000 1000000000000000000\r\n0 1000000000000000000\r\n",
                "2 1500000000000000000 "
            ]
        ],
        "private_cases": [
            [
                "10\r\n13 18 10 3 9 19 20 4 10 5\r\n20\r\n0 9\r\n5 11\r\n1 5\r\n1 16\r\n3 3\r\n0 7\r\n10 19\r\n14 20\r\n6 15\r\n11 12\r\n13 16\r\n11 13\r\n3 9\r\n7 10\r\n2 2\r\n10 11\r\n17 20\r\n17 18\r\n0 15\r\n0 6\r\n",
                "27 24 22 33 9 25 27 24 27 13 20 17 24 20 9 13 20 13 33 24 "
            ],
            [
                "10\r\n2 5 3 3 4 2 3 5 3 0\r\n20\r\n4 5\r\n2 4\r\n0 2\r\n1 2\r\n0 1\r\n2 3\r\n0 4\r\n1 4\r\n2 4\r\n0 5\r\n1 5\r\n1 5\r\n2 5\r\n1 4\r\n0 3\r\n0 4\r\n5 5\r\n1 3\r\n0 3\r\n3 5\r\n",
                "7 8 8 7 7 7 10 9 8 11 10 10 9 9 9 10 5 8 9 8 "
            ]
        ]
    }
]