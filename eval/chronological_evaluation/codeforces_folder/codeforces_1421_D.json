[
    {
        "name": "Hexagons",
        "description": "Lindsey Buckingham told Stevie Nicks \"Go your own way\". Nicks is now sad and\nwants to go away as quickly as possible, but she lives in a 2D hexagonal\nworld. Consider a hexagonal tiling of the plane as on the picture below. Nicks\nwishes to go from the cell marked \n    (0, 0)\n to a certain cell given by the\ncoordinates. She may go from a hexagon to any of its six neighbors you want,\nbut there is a cost associated with each of them. The costs depend only on the\ndirection in which you travel. Going from \n    (0, 0)\n to \n    (1, 1)\n will\ntake the exact same cost as going from \n    (-2, -1)\n to \n    (-1, 0)\n. The\ncosts are given in the input in the order \n    c_1\n, \n    c_2\n, \n    c_3\n,\n\n    c_4\n, \n    c_5\n, \n    c_6\n as in the picture below. Print the smallest\ncost of a path from the origin which has coordinates \n    (0, 0)\n to the given\ncell. Input Each test contains multiple test cases. The first line contains\nthe number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n). Description\nof the test cases follows. The first line of each test case contains two\nintegers \n    x\n and \n    y\n (\n    -10^9\n    \u2264 x, y \n    \u2264 10^9\n)\nrepresenting the coordinates of the target hexagon. The second line of each\ntest case contains six integers \n    c_1\n, \n    c_2\n, \n    c_3\n, \n    c_4\n,\n\n    c_5\n, \n    c_6\n (\n    1 \n    \u2264 c_1, c_2, c_3, c_4, c_5, c_6 \n    \u2264 10^9\n)\nrepresenting the six costs of the making one step in a particular direction\n(refer to the picture above to see which edge is for each value). Output For\neach testcase output the smallest cost of a path from the origin to the given\ncell. Example Input 2 -3 1 1 3 5 7 9 11 1000000000 1000000000 1000000000\n1000000000 1000000000 1000000000 1000000000 1000000000 Output 18\n1000000000000000000 Note The picture below shows the solution for the first\nsample. The cost \n    18\n is reached by taking \n    c_3\n 3 times and \n    c_2\n\nonce, amounting to \n    5+5+5+3=18\n.\n\n",
        "cf_contest_id": 1421,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "implementation",
            "math",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n-3 1\r\n1 3 5 7 9 11\r\n1000000000 1000000000\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n",
                "18\r\n1000000000000000000\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0 0\r\n1 2 3 4 5 6\r\n",
                "0\r\n"
            ],
            [
                "1\r\n-1000000000 -1000000000\r\n10000 20000 30000 40000 50000 60000\r\n",
                "40000000000000\r\n"
            ]
        ]
    }
]