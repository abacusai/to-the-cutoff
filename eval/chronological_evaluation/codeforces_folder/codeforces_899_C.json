[
    {
        "name": "Dividing the numbers",
        "description": "Petya has n integers: 1, 2, 3, ..., n. He wants to split these integers in two\nnon-empty groups in such a way that the absolute difference of sums of\nintegers in each group is as small as possible. Help Petya to split the\nintegers. Each of n integers should be exactly in one group. Input The first\nline contains a single integer n (2 \u2264 n \u2264 60 000) \u2014 the number of integers\nPetya has. Output Print the smallest possible absolute difference in the first\nline. In the second line print the size of the first group, followed by the\nintegers in that group. You can print these integers in arbitrary order. If\nthere are multiple answers, print any of them. Examples Input 4 Output 0 2 1 4\nInput 2 Output 1 1 1 Note In the first example you have to put integers 1 and\n4 in the first group, and 2 and 3 in the second. This way the sum in each\ngroup is 5, and the absolute difference is 0. In the second example there are\nonly two integers, and since both groups should be non-empty, you have to put\none integer in the first group and one in the second. This way the absolute\ndifference of sums of integers in each group is 1.\n\n",
        "cf_contest_id": 899,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graphs",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n",
                "0 2\r\n4 1\r\n"
            ],
            [
                "2\r\n",
                "1 1\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n",
                "0 1\r\n3\r\n"
            ],
            [
                "5\r\n",
                "1 2\r\n5 2\r\n"
            ],
            [
                "6\r\n",
                "1 3\r\n6 3 2\r\n"
            ],
            [
                "7\r\n",
                "0 3\r\n7 4 3\r\n"
            ],
            [
                "8\r\n",
                "0 4\r\n8 5 4 1\r\n"
            ],
            [
                "9\r\n",
                "1 4\r\n9 6 5 2\r\n"
            ],
            [
                "10\r\n",
                "1 5\r\n10 7 6 3 2\r\n"
            ],
            [
                "11\r\n",
                "0 5\r\n11 8 7 4 3\r\n"
            ],
            [
                "12\r\n",
                "0 6\r\n12 9 8 5 4 1\r\n"
            ],
            [
                "13\r\n",
                "1 6\r\n13 10 9 6 5 2\r\n"
            ],
            [
                "14\r\n",
                "1 7\r\n14 11 10 7 6 3 2\r\n"
            ],
            [
                "15\r\n",
                "0 7\r\n15 12 11 8 7 4 3\r\n"
            ],
            [
                "16\r\n",
                "0 8\r\n16 13 12 9 8 5 4 1\r\n"
            ],
            [
                "17\r\n",
                "1 8\r\n17 14 13 10 9 6 5 2\r\n"
            ],
            [
                "18\r\n",
                "1 9\r\n18 15 14 11 10 7 6 3 2\r\n"
            ],
            [
                "19\r\n",
                "0 9\r\n19 16 15 12 11 8 7 4 3\r\n"
            ],
            [
                "20\r\n",
                "0 10\r\n20 17 16 13 12 9 8 5 4 1\r\n"
            ],
            [
                "21\r\n",
                "1 10\r\n21 18 17 14 13 10 9 6 5 2\r\n"
            ],
            [
                "22\r\n",
                "1 11\r\n22 19 18 15 14 11 10 7 6 3 2\r\n"
            ],
            [
                "23\r\n",
                "0 11\r\n23 20 19 16 15 12 11 8 7 4 3\r\n"
            ],
            [
                "24\r\n",
                "0 12\r\n24 21 20 17 16 13 12 9 8 5 4 1\r\n"
            ],
            [
                "100\r\n",
                "0 50\r\n100 97 96 93 92 89 88 85 84 81 80 77 76 73 72 69 68 65 64 61 60 57 56 53 52 49 48 45 44 41 40 37 36 33 32 29 28 25 24 21 20 17 16 13 12 9 8 5 4 1\r\n"
            ],
            [
                "103\r\n",
                "0 51\r\n103 100 99 96 95 92 91 88 87 84 83 80 79 76 75 72 71 68 67 64 63 60 59 56 55 52 51 48 47 44 43 40 39 36 35 32 31 28 27 24 23 20 19 16 15 12 11 8 7 4 3\r\n"
            ]
        ]
    }
]