[
    {
        "name": "Same Sum Blocks (Hard)",
        "description": "This problem is given in two editions, which differ exclusively in the\nconstraints on the number \n    n\n. You are given an array of integers \n    a[1],\n    a[2], \n    \u2026, a[n].\n A block is a sequence of contiguous (consecutive)\nelements \n    a[l], a[l+1], \n    \u2026, a[r]\n (\n    1 \n    \u2264 l \n    \u2264 r \n    \u2264 n\n).\nThus, a block is defined by a pair of indices \n    (l, r)\n. Find a set of\nblocks \n    (l_1, r_1), (l_2, r_2), \n    \u2026, (l_k, r_k)\n such that: They do\nnot intersect (i.e. they are disjoint). Formally, for each pair of blocks\n\n    (l_i, r_i)\n and \n    (l_j, r_j\n) where \n    i \n    \u2260 j\n either \n    r_i <\n    l_j\n or \n    r_j < l_i\n. For each block the sum of its elements is the same.\nFormally,\n\n    \n\n    a[l_1]+a[l_1+1]+\n    \u2026+a[r_1]=a[l_2]+a[l_2+1]+\n    \u2026+a[r_2]=\n\n    \n\n\n    \n\n    \u2026 =\n\n    \n \n    \n\n    a[l_k]+a[l_k+1]+\n    \u2026+a[r_k].\n\n    \n The number\nof the blocks in the set is maximum. Formally, there does not exist a set of\nblocks \n    (l_1', r_1'), (l_2', r_2'), \n    \u2026, (l_k'', r_k'')\n\nsatisfying the above two requirements with \n    k' > k\n. The picture\ncorresponds to the first example. Blue boxes illustrate blocks. Write a\nprogram to find such a set of blocks. Input The first line contains integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 1500\n) \u2014 the length of the given array. The\nsecond line contains the sequence of elements \n    a[1], a[2], \n    \u2026, a[n]\n\n(\n    -10^5 \n    \u2264 a_i \n    \u2264 10^5\n). Output In the first line print the integer\n\n    k\n (\n    1 \n    \u2264 k \n    \u2264 n\n). The following \n    k\n lines should contain\nblocks, one per line. In each line print a pair of indices \n    l_i, r_i\n\n(\n    1 \n    \u2264 l_i \n    \u2264 r_i \n    \u2264 n\n) \u2014 the bounds of the \n    i\n-th block.\nYou can print blocks in any order. If there are multiple answers, print any of\nthem. Examples Input 7 4 1 2 2 1 5 3 Output 3 7 7 2 3 4 5 Input 11 -5 -4 -3 -2\n-1 0 1 2 3 4 5 Output 2 3 4 1 1 Input 4 1 1 1 1 Output 4 4 4 1 1 2 2 3 3\n\n",
        "cf_contest_id": 1141,
        "cf_index": "F2",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n4 1 2 2 1 5 3\r\n",
                "3\r\n1 2\r\n3 5\r\n6 6\r\n"
            ],
            [
                "11\r\n-5 -4 -3 -2 -1 0 1 2 3 4 5\r\n",
                "2\r\n1 1\r\n3 4\r\n"
            ],
            [
                "4\r\n1 1 1 1\r\n",
                "4\r\n1 1\r\n2 2\r\n3 3\r\n4 4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n100000\r\n",
                "1\r\n1 1\r\n"
            ],
            [
                "2\r\n-100000 -100000\r\n",
                "2\r\n1 1\r\n2 2\r\n"
            ],
            [
                "2\r\n10000 99999\r\n",
                "1\r\n1 1\r\n"
            ],
            [
                "3\r\n4 2 2\r\n",
                "2\r\n1 1\r\n2 3\r\n"
            ],
            [
                "3\r\n1 3 4\r\n",
                "2\r\n1 2\r\n3 3\r\n"
            ],
            [
                "3\r\n7 1 7\r\n",
                "2\r\n1 1\r\n3 3\r\n"
            ],
            [
                "3\r\n-2 -4 -4\r\n",
                "2\r\n2 2\r\n3 3\r\n"
            ],
            [
                "10\r\n2 10 9 1 10 4 7 8 5 4\r\n",
                "3\r\n2 2\r\n3 4\r\n5 5\r\n"
            ],
            [
                "20\r\n1 2 1 4 1 4 3 5 5 4 3 2 4 5 2 3 4 4 3 5\r\n",
                "8\r\n3 4\r\n5 6\r\n8 8\r\n9 9\r\n11 12\r\n14 14\r\n15 16\r\n20 20\r\n"
            ],
            [
                "100\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "5\r\n1 20\r\n27 33\r\n40 44\r\n51 54\r\n69 71\r\n"
            ],
            [
                "61\r\n15 8 19 10 6 13 19 10 19 5 6 9 17 17 6 9 12 18 15 15 15 17 3 17 15 4 13 8 23 -2 12 27 16 17 11 18 23 15 100 57 43 36 37 27 13 11 9 9 10 16 15 9 3 5 21 13 14 8 21 13 10\r\n",
                "10\r\n1 8\r\n9 17\r\n18 24\r\n25 32\r\n33 38\r\n39 39\r\n40 41\r\n42 44\r\n45 54\r\n55 61\r\n"
            ],
            [
                "7\r\n-1 -2 -1 2 -3 9 -8\r\n",
                "3\r\n1 1\r\n3 3\r\n4 5\r\n"
            ]
        ]
    }
]