[
    {
        "name": "k-LCM (easy version)",
        "description": "It is the easy version of the problem. The only difference is that in this\nversion \n    k = 3\n. You are given a positive integer \n    n\n. Find \n    k\n\npositive integers \n    a_1, a_2, \n    \u2026, a_k\n, such that: \n    a_1 + a_2 +\n    \n    \u2026 + a_k = n\n \n    LCM(a_1, a_2, \n    \u2026, a_k) \n    \u2264\n    n/2\n\nHere \n    LCM\n is the least common multiple of numbers \n    a_1, a_2, \n    \u2026,\n    a_k\n. We can show that for given constraints the answer always exists. Input\nThe first line contains a single integer \n    t\n \n    (1 \n    \u2264 t \n    \u2264 10^4)\n\n\u2014 the number of test cases. The only line of each test case contains two\nintegers \n    n\n, \n    k\n (\n    3 \n    \u2264 n \n    \u2264 10^9\n, \n    k = 3\n). Output\nFor each test case print \n    k\n positive integers \n    a_1, a_2, \n    \u2026,\n    a_k\n, for which all conditions are satisfied. Example Input 3 3 3 8 3 14 3\nOutput 1 1 1 4 2 2 2 6 6\n\n",
        "cf_contest_id": 1497,
        "cf_index": "C1",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 3\r\n8 3\r\n14 3\r\n",
                "1 1 1\r\n4 2 2\r\n6 6 2\r\n"
            ]
        ],
        "private_cases": []
    }
]