[
    {
        "name": "Two Railroads",
        "description": "There are \n    n\n cities in Berland, and they are connected by two railroads \u2014\nthe Main railroad and the Auxiliary railroad. Each city has two railway\nstations, one connected to the Main railroad (called the Main station), and\nthe other connected to the Auxiliary railroad. The railroads are identical in\ntheir structure. The Main railroad consists of \n    n-1\n railroad segments;\nthe \n    i\n-th railroad segment connects the Main station of the city \n    i\n\nwith the Main station of the city \n    i+1\n. Similarly, the Auxiliary railroad\nconsists of \n    n-1\n railroad segments; the \n    i\n-th railroad segment\nconnects the Auxiliary station of the city \n    i\n with the Auxiliary station\nof the city \n    i+1\n. These railroads are used to transfer different goods\nand resources from one city to another. In particular, the Ministry of\nEnergetics is interested in using these railroads to transfer coal. The\nMinistry has estimated the following capabilities of the railroads: for every\n\n    i \n    \u2208 [1, n-1]\n, at most \n    a_i\n tons of coal per day can be\ntransferred from the Main station \n    i\n to the Main station \n    i+1\n (only\nin this direction); for every \n    i \n    \u2208 [1, n-1]\n, at most \n    b_i\n tons\nof coal per day can be transferred from the Auxiliary station \n    i\n to the\nAuxiliary station \n    i+1\n (only in this direction); for every \n    i \n    \u2208 [1,\n    n]\n, at most \n    c_i\n tons of coal per day can be transferred from the Main\nstation \n    i\n to the Auxiliary station \n    i\n, or in the opposite\ndirection. To analyze the capacity of the whole railroad network, the Ministry\nrequires a software that would process and answer queries of the following\nformat: calculate the maximum number of tons of coal that can be transferred\nper day from the Main station \n    l_i\n to the Main station \n    r_i\n. Your\ntask is to implement this software. Input The first line contains one integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the number of cities. The\nsecond line contains \n    n-1\n integers \n    a_1, a_2, \n    \u2026, a_n-1\n (\n    1\n    \n    \u2264 a_i \n    \u2264 10^9\n). The third line contains \n    n-1\n integers \n    b_1,\n    b_2, \n    \u2026, b_n-1\n (\n    1 \n    \u2264 b_i \n    \u2264 10^9\n). The fourth line\ncontains \n    n\n integers \n    c_1, c_2, \n    \u2026, c_n\n (\n    1 \n    \u2264 c_i \n    \u2264\n    10^9\n). The fifth line contains one integer \n    q\n (\n    1 \n    \u2264 q \n    \u2264 3\n    \n    \u00b7 10^5\n) \u2014 the number of queries. Then \n    q\n lines follow, the\n\n    i\n-th line contains two integers \n    l_i\n and \n    r_i\n (\n    1 \n    \u2264 l_i\n    < r_i \n    \u2264 n\n) \u2014 the parameters of the \n    i\n-th query. Output Print\n\n    q\n integers, where the \n    i\n-th integer should be the answer to the\n\n    i\n-th query, i. e. the maximum number of tons of coal that can be\ntransferred per day from the Main station \n    l_i\n to the Main station\n\n    r_i\n. Example Input 5 3 4 7 4 8 5 3 5 10 5 3 4 10 4 1 4 1 2 3 4 2 4\nOutput 9 8 10 9\n\n",
        "cf_contest_id": 1571,
        "cf_index": "J",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "*special"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "5\r\n3 4 7 4\r\n8 5 3 5\r\n10 5 3 4 10\r\n4\r\n1 4\r\n1 2\r\n3 4\r\n2 4\r\n",
                "9 8 10 9 \n"
            ]
        ],
        "private_cases": []
    }
]