[
    {
        "name": "Circular Spanning Tree",
        "description": "There are \n    n\n nodes arranged in a circle numbered from \n    1\n to \n    n\n\nin the clockwise order. You are also given a binary string \n    s\n of length\n\n    n\n. Your task is to construct a tree on the given \n    n\n nodes\nsatisfying the two conditions below or report that there such tree does not\nexist: For each node \n    i\n \n    (1 \n    \u2264 i \n    \u2264 n)\n, the degree of node is\neven if \n    s_i = 0\n and odd if \n    s_i = 1\n. No two edges of the tree\nintersect internally in the circle. The edges are allowed to intersect on the\ncircumference. Note that all edges are drawn as straight line segments. For\nexample, edge \n    (u, v)\n in the tree is drawn as a line segment connecting\n\n    u\n and \n    v\n on the circle. A tree on \n    n\n nodes is a connected\ngraph with \n    n - 1\n edges. Input The input consists of multiple test cases.\nThe first line contains a single integer \n    t\n \n    (1 \n    \u2264 t \n    \u2264\n    2\n    \u00b7 10^4)\n \u2014 the number of test cases. Description of the test cases\nfollows. The first line of each test case contains a single integer \n    n\n\n\n    (2 \n    \u2264 n \n    \u2264 2\n    \u00b7 10^5)\n \u2014 the number of nodes. The second line\nof each test case contains a binary string \n    s\n of length \n    n\n. It is\nguaranteed that the sum of \n    n\n over all test cases does not exceed\n\n    2\n    \u00b7 10^5\n. Output For each test case, if there does not exist a tree\nthat satisfies the given conditions, then output \"NO\" (without quotes),\notherwise output \"YES\" followed by the description of tree. You can output\neach letter in any case (for example, \"YES\", \"Yes\", \"yes\", \"yEs\", \"yEs\" will\nbe recognized as a positive answer). If there exists a tree, then output \n    n\n    - 1\n lines, each containing two integers \n    u\n and \n    v\n \n    (1 \n    \u2264\n    u,v \n    \u2264 n, u \n    \u2260 v)\n denoting an edge between \n    u\n and \n    v\n in\nthe tree. If there are multiple possible answers, output any. Example Input 3\n4 0110 2 10 6 110110 Output YES 2 1 3 4 1 4 NO YES 2 3 1 2 5 6 6 2 3 4 Note In\nthe first test case, the tree looks as follows: In the second test case, there\nis only one possible tree with an edge between \n    1\n and \n    2\n, and it\ndoes not satisfy the degree constraints. In the third test case, The tree on\nthe left satisfies the degree constraints but the edges intersect internally,\ntherefore it is not a valid tree, while the tree on the right is valid.\n\n",
        "cf_contest_id": 1682,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4\r\n0110\r\n2\r\n10\r\n6\r\n110110\r\n",
                "YES\r\n3 4\r\n4 1\r\n1 2\r\nNO\r\nYES\r\n2 3\r\n3 4\r\n2 5\r\n2 6\r\n6 1\r\n"
            ]
        ],
        "private_cases": []
    }
]