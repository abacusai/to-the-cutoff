[
    {
        "name": "Lost Arithmetic Progression",
        "description": "Long ago, you thought of two finite arithmetic progressions \n    A\n and\n\n    B\n. Then you found out another sequence \n    C\n containing all elements\ncommon to both \n    A\n and \n    B\n. It is not hard to see that \n    C\n is also\na finite arithmetic progression. After many years, you forgot what \n    A\n was\nbut remember \n    B\n and \n    C\n. You are, for some reason, determined to find\nthis lost arithmetic progression. Before you begin this eternal search, you\nwant to know how many different finite arithmetic progressions exist which can\nbe your lost progression \n    A\n. Two arithmetic progressions are considered\ndifferent if they differ in their first term, common difference or number of\nterms. It may be possible that there are infinitely many such progressions, in\nwhich case you won't even try to look for them! Print \n    -1\n in all such\ncases. Even if there are finite number of them, the answer might be very\nlarge. So, you are only interested to find the answer modulo \n    10^9+7\n.\nInput The first line of input contains a single integer \n    t\n (\n    1\n    \u2264\n    t\n    \u2264 100\n) denoting the number of testcases. The first line of each\ntestcase contains three integers \n    b\n, \n    q\n and \n    y\n (\n    -10^9\n    \u2264\n    b\n    \u2264 10^9\n, \n    1\n    \u2264 q\n    \u2264 10^9\n, \n    2\n    \u2264 y\n    \u2264 10^9\n)\ndenoting the first term, common difference and number of terms of \n    B\n\nrespectively. The second line of each testcase contains three integers\n\n    c\n, \n    r\n and \n    z\n (\n    -10^9\n    \u2264 c\n    \u2264 10^9\n, \n    1\n    \u2264\n    r\n    \u2264 10^9\n, \n    2\n    \u2264 z\n    \u2264 10^9\n) denoting the first term, common\ndifference and number of terms of \n    C\n respectively. Output For each\ntestcase, print a single line containing a single integer. If there are\ninfinitely many finite arithmetic progressions which could be your lost\nprogression \n    A\n, print \n    -1\n. Otherwise, print the number of finite\narithmetic progressions which could be your lost progression \n    A\n modulo\n\n    10^9+7\n. In particular, if there are no such finite arithmetic\nprogressions, print \n    0\n. Example Input 8 -3 1 7 -1 2 4 -9 3 11 0 6 3 2 5 5\n7 5 4 2 2 11 10 5 3 0 2 9 2 4 3 -11 4 12 1 12 2 -27 4 7 -17 8 2 -8400 420\n1000000000 0 4620 10 Output 0 10 -1 0 -1 21 0 273000 Note For the first\ntestcase, \n    B=\n    \n    -3,-2,-1,0,1,2,3\n and \n    C=\n    \n    -1,1,3,5\n.\nThere is no such arithmetic progression which can be equal to \n    A\n because\n\n    5\n is not present in \n    B\n and for any \n    A\n, \n    5\n should not be\npresent in \n    C\n also. For the second testcase,\n\n    B=\n    \n    -9,-6,-3,0,3,6,9,12,15,18,21\n and \n    C=\n    \n    0,6,12\n.\nThere are \n    10\n possible arithmetic progressions which can be \n    A\n:\n\n    0,6,12\n \n    0,2,4,6,8,10,12\n\n\n    0,2,4,6,8,10,12,14\n \n    0,2,4,6,8,10,12,14,16\n\n\n    -2,0,2,4,6,8,10,12\n \n    -2,0,2,4,6,8,10,12,14\n\n\n    -2,0,2,4,6,8,10,12,14,16\n \n    -4,-2,0,2,4,6,8,10,12\n\n\n    -4,-2,0,2,4,6,8,10,12,14\n\n\n    -4,-2,0,2,4,6,8,10,12,14,16\n For the third testcase,\n\n    B=\n    \n    2,7,12,17,22\n and \n    C=\n    \n    7,12,17,22\n. There are\ninfinitely many arithmetic progressions which can be \n    A\n like:\n\n    7,12,17,22\n \n    7,12,17,22,27\n\n\n    7,12,17,22,27,32\n \n    7,12,17,22,27,32,37\n\n\n    7,12,17,22,27,32,37,42\n \n    \u2026\n\n\n",
        "cf_contest_id": 1673,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8\r\n-3 1 7\r\n-1 2 4\r\n-9 3 11\r\n0 6 3\r\n2 5 5\r\n7 5 4\r\n2 2 11\r\n10 5 3\r\n0 2 9\r\n2 4 3\r\n-11 4 12\r\n1 12 2\r\n-27 4 7\r\n-17 8 2\r\n-8400 420 1000000000\r\n0 4620 10\r\n",
                "0\r\n10\r\n-1\r\n0\r\n-1\r\n21\r\n0\r\n273000\r\n"
            ]
        ],
        "private_cases": []
    }
]