[
    {
        "name": "Constructive Problem",
        "description": "As you know, any problem that does not require the use of complex data\nstructures is considered constructive. You are offered to solve one of such\nproblems. You are given an array \n    a\n of \n    n\n non-negative integers. You\nare allowed to perform the following operation exactly once: choose some non-\nempty subsegment \n    a_l, a_l+1, \n    \u2026, a_r\n of the array \n    a\n and a\nnon-negative integer \n    k\n, and assign value \n    k\n to all elements of the\narray on the chosen subsegment. The task is to find out whether\n\n    MEX(a)\n can be increased by exactly one by performing\nsuch an operation. In other words, if before the operation\n\n    MEX(a) = m\n held, then after the operation it must hold\nthat \n    MEX(a) = m + 1\n. Recall that\n\n    MEX\n of a set of integers \n    c_1, c_2, \n    \u2026, c_k\n\nis defined as the smallest non-negative integer \n    x\n which does not occur\nin the set \n    c\n. Input Each test contains multiple test cases. The first\nline contains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    50\n     000\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 200\n     000\n) \u2014 the number of elements of array \n    a\n.\nThe second line of each test case contains \n    n\n integers \n    a_1, a_2,\n    \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 elements of array \n    a\n.\nIt is guaranteed that the sum \n    n\n over all test cases does not exceed\n\n    200\n     000\n. Output For each test case, print \"Yes\" if you can increase\n\n    MEX(a)\n by exactly one by performing the operation from\nthe statement exactly once, otherwise print \"No\". You can output the answer in\nany case (upper or lower). For example, the strings \"yEs\", \"yes\", \"Yes\", and\n\"YES\" will be recognized as positive responses. Example Input 4 3 1 2 1 4 0 2\n2 0 4 3 2 0 2 1 0 Output Yes Yes No No Note In the first test case,\n\n    MEX(a) = 0\n. If you set all elements of \n    a\n to\n\n    0\n, then \n    MEX\n of the resulting array will be\n\n    1\n, and thus will increase by one. In the second test case,\n\n    MEX(a) = 1\n. If we assign a value of \n    1\n to the\nelements of \n    a\n on a subsegment from \n    2\n to \n    3\n, we get an array\n\n    [0, 1, 1, 0]\n for which \n    MEX\n is \n    2\n, and thus\nis increased by one compared to the original. It can be shown that in the\nthird and fourth test cases it is impossible to perform an operation so that\nthe value of \n    MEX(a)\n increases by exactly one.\n\n",
        "cf_contest_id": 1819,
        "cf_index": "A",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3\r\n1 2 1\r\n4\r\n0 2 2 0\r\n4\r\n3 2 0 2\r\n1\r\n0\r\n",
                "Yes\r\nYes\r\nNo\r\nNo\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n7\r\n0 1 2 3 4 5 1000000000\r\n",
                "Yes\r\n"
            ],
            [
                "1\r\n3\r\n1 1000000000 1\r\n",
                "Yes\r\n"
            ],
            [
                "2\r\n5\r\n0 1 3 6 3\r\n7\r\n0 1 2 3 4 5 6\r\n",
                "Yes\r\nNo\r\n"
            ],
            [
                "1\r\n3\r\n0 1 922\r\n",
                "Yes\r\n"
            ],
            [
                "1\r\n5\r\n0 1 5 6 7\r\n",
                "Yes\r\n"
            ],
            [
                "2\r\n3\r\n5 6 7\r\n4\r\n8 9 10 11\r\n",
                "Yes\r\nYes\r\n"
            ]
        ]
    }
]