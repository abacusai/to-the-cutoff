[
    {
        "name": "Swap Pass",
        "description": "Based on a peculiar incident at basketball practice, Akari came up with the\nfollowing competitive programming problem! You are given \n    n\n points on the\nplane, no three of which are collinear. The \n    i\n-th point initially has a\nlabel \n    a_i\n, in such a way that the labels \n    a_1, a_2, \n    \u2026, a_n\n\nform a permutation of \n    1, 2, \n    \u2026, n\n. You are allowed to modify the\nlabels through the following operation: Choose two distinct integers \n    i\n\nand \n    j\n between \n    1\n and \n    n\n. Swap the labels of points \n    i\n and\n\n    j\n, and finally Draw the segment between points \n    i\n and \n    j\n. A\nsequence of operations is valid if after applying all of the operations in the\nsequence in order, the \n    k\n-th point ends up having the label \n    k\n for\nall \n    k\n between \n    1\n and \n    n\n inclusive, and the drawn segments\ndon't intersect each other internally. Formally, if two of the segments\nintersect, then they must do so at a common endpoint of both segments. In\nparticular, all drawn segments must be distinct. Find any valid sequence of\noperations, or say that none exist. Input The first line contains an integer\n\n    n\n (\n    3 \n    \u2264 n \n    \u2264 2000\n) \u2014 the number of points. The \n    i\n-th of\nthe following \n    n\n lines contains three integers \n    x_i\n, \n    y_i\n,\n\n    a_i\n (\n    -10^6 \n    \u2264 x_i, y_i \n    \u2264 10^6\n, \n    1 \n    \u2264 a_i \n    \u2264 n\n),\nrepresenting that the \n    i\n-th point has coordinates \n    (x_i, y_i)\n and\ninitially has label \n    a_i\n. It is guaranteed that all points are distinct,\nno three points are collinear, and the labels \n    a_1, a_2, \n    \u2026, a_n\n\nform a permutation of \n    1, 2, \n    \u2026, n\n. Output If it is impossible to\nperform a valid sequence of operations, print \n    -1\n. Otherwise, print an\ninteger \n    k\n (\n    0 \n    \u2264 k \n    \u2264\n    n(n - 1)/2\n) \u2014 the number of\noperations to perform, followed by \n    k\n lines, each containing two integers\n\n    i\n and \n    j\n (\n    1 \n    \u2264 i, j \n    \u2264 n\n, \n    i\n    \u2260 j\n) \u2014 the\nindices of the points chosen for the operation. Note that you are not required\nto minimize or maximize the value of \n    k\n. If there are multiple possible\nanswers, you may print any of them. Examples Input 5 -1 -2 2 3 0 5 1 3 4 4 -3\n3 5 2 1 Output 5 1 2 5 3 4 5 1 5 1 3 Input 3 5 4 1 0 0 2 -3 -2 3 Output 0 Note\nThe following animation showcases the first sample test case. The black\nnumbers represent the indices of the points, while the boxed orange numbers\nrepresent their labels. In the second test case, all labels are already in\ntheir correct positions, so no operations are necessary.\n\n",
        "cf_contest_id": 1508,
        "cf_index": "D",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "geometry",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n-1 -2 2\r\n3 0 5\r\n1 3 4\r\n4 -3 3\r\n5 2 1\r\n",
                "5\r\n4 2\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n"
            ],
            [
                "3\r\n5 4 1\r\n0 0 2\r\n-3 -2 3\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "20\r\n13 -20 3\r\n-11 -44 19\r\n33 -29 16\r\n36 -27 13\r\n-6 -33 12\r\n-26 21 8\r\n7 -33 15\r\n-19 2 10\r\n34 37 14\r\n-21 -17 6\r\n-24 20 17\r\n-22 27 18\r\n20 2 4\r\n3 32 9\r\n-42 14 2\r\n-17 29 11\r\n-45 -25 7\r\n-10 35 5\r\n21 42 1\r\n-5 -45 20\r\n",
                "22\r\n2 5\r\n3 4\r\n1 10\r\n13 9\r\n17 7\r\n17 15\r\n17 2\r\n17 12\r\n17 18\r\n17 5\r\n17 19\r\n17 1\r\n17 6\r\n17 8\r\n17 10\r\n17 3\r\n17 13\r\n17 14\r\n17 9\r\n17 4\r\n17 16\r\n17 11\r\n"
            ],
            [
                "5\r\n42 31 3\r\n-4 46 1\r\n-14 34 2\r\n9 -3 5\r\n-39 -30 4\r\n",
                "5\r\n4 1\r\n5 4\r\n5 3\r\n5 2\r\n5 1\r\n"
            ],
            [
                "20\r\n7 -33 5\r\n-13 6 10\r\n37 45 17\r\n18 29 11\r\n-17 29 1\r\n26 -31 12\r\n-8 -3 16\r\n44 -1 20\r\n-11 -44 14\r\n0 26 2\r\n16 -37 4\r\n10 15 6\r\n-1 28 15\r\n-38 -7 9\r\n-21 -17 13\r\n33 -29 7\r\n42 31 3\r\n-4 46 19\r\n-16 -5 18\r\n25 20 8\r\n",
                "28\r\n9 15\r\n15 1\r\n1 11\r\n11 6\r\n6 16\r\n16 8\r\n8 19\r\n12 17\r\n17 2\r\n14 9\r\n14 13\r\n14 15\r\n14 5\r\n14 1\r\n14 4\r\n14 11\r\n14 12\r\n14 3\r\n14 17\r\n14 10\r\n14 2\r\n14 6\r\n14 7\r\n14 16\r\n14 20\r\n14 8\r\n14 18\r\n14 19\r\n"
            ],
            [
                "5\r\n31 47 2\r\n-33 37 4\r\n38 18 5\r\n-16 -5 3\r\n-42 14 1\r\n",
                "4\r\n5 1\r\n5 2\r\n5 4\r\n5 3\r\n"
            ],
            [
                "10\r\n-37 18 10\r\n-28 30 1\r\n1 26 4\r\n44 -1 8\r\n-41 31 2\r\n-18 -36 5\r\n-23 -28 9\r\n-2 32 6\r\n-25 -31 3\r\n-8 -3 7\r\n",
                "9\r\n5 2\r\n5 1\r\n5 10\r\n5 7\r\n5 9\r\n5 3\r\n5 4\r\n5 8\r\n5 6\r\n"
            ],
            [
                "10\r\n41 50 6\r\n-26 21 7\r\n-7 -19 5\r\n40 -30 3\r\n35 4 8\r\n51 -50 9\r\n46 -25 1\r\n37 45 10\r\n9 -3 2\r\n4 38 4\r\n",
                "10\r\n3 6\r\n2 7\r\n2 1\r\n2 6\r\n2 5\r\n2 8\r\n2 10\r\n2 4\r\n2 3\r\n2 9\r\n"
            ],
            [
                "10\r\n-6 -33 3\r\n0 26 7\r\n-8 -3 9\r\n-18 -36 5\r\n28 -26 1\r\n5 46 8\r\n42 31 2\r\n-22 27 10\r\n-24 20 4\r\n39 -7 6\r\n",
                "11\r\n5 10\r\n10 7\r\n9 4\r\n9 5\r\n9 6\r\n9 8\r\n9 10\r\n9 2\r\n9 7\r\n9 1\r\n9 3\r\n"
            ],
            [
                "10\r\n5 46 3\r\n45 -14 9\r\n0 26 1\r\n9 -3 8\r\n-29 -13 10\r\n-7 -19 7\r\n46 -25 6\r\n33 -29 4\r\n-38 -7 2\r\n-34 4 5\r\n",
                "13\r\n5 6\r\n6 8\r\n7 2\r\n4 3\r\n9 2\r\n9 6\r\n9 4\r\n9 1\r\n9 3\r\n9 8\r\n9 10\r\n9 5\r\n9 7\r\n"
            ],
            [
                "20\r\n14 6 8\r\n-42 14 1\r\n-5 -45 10\r\n16 -37 18\r\n26 -31 6\r\n-33 37 19\r\n-9 15 11\r\n48 -41 16\r\n44 -1 9\r\n-47 -41 4\r\n-49 -49 15\r\n42 31 17\r\n-35 -27 5\r\n-30 47 12\r\n46 -25 14\r\n23 27 3\r\n41 50 13\r\n-19 2 7\r\n-24 20 2\r\n-23 -28 20\r\n",
                "17\r\n11 15\r\n11 14\r\n11 12\r\n11 17\r\n11 13\r\n11 5\r\n11 6\r\n11 19\r\n11 2\r\n11 1\r\n11 8\r\n11 16\r\n11 3\r\n11 10\r\n11 4\r\n11 18\r\n11 7\r\n"
            ],
            [
                "20\r\n15 34 16\r\n-22 27 5\r\n-36 45 6\r\n-31 8 11\r\n-15 -37 7\r\n-9 15 12\r\n29 30 8\r\n-8 -3 13\r\n40 -30 20\r\n-40 50 3\r\n-21 -17 1\r\n49 -46 14\r\n-43 -1 2\r\n19 -36 17\r\n4 38 19\r\n-41 31 9\r\n36 -27 4\r\n-47 -41 15\r\n51 -50 10\r\n37 45 18\r\n",
                "20\r\n14 5\r\n18 15\r\n18 19\r\n18 10\r\n18 3\r\n18 6\r\n18 12\r\n18 14\r\n18 7\r\n18 8\r\n18 13\r\n18 2\r\n18 5\r\n18 17\r\n18 4\r\n18 11\r\n18 1\r\n18 16\r\n18 9\r\n18 20\r\n"
            ],
            [
                "5\r\n266234 -845505 4\r\n-88340 -135459 2\r\n-826339 -751526 5\r\n-344926 447403 1\r\n-986774 -72315 3\r\n",
                "4\r\n3 1\r\n5 3\r\n5 4\r\n5 1\r\n"
            ],
            [
                "5\r\n-35437 37313 3\r\n387096 -952637 4\r\n-671421 -462885 2\r\n428873 196023 5\r\n-65576 267801 1\r\n",
                "4\r\n3 2\r\n3 4\r\n3 5\r\n3 1\r\n"
            ],
            [
                "5\r\n479854 526225 2\r\n-794039 -918009 1\r\n529143 -501550 4\r\n692730 -118396 5\r\n953413 703988 3\r\n",
                "5\r\n5 1\r\n2 1\r\n2 3\r\n2 4\r\n2 5\r\n"
            ],
            [
                "10\r\n223 85 8\r\n-50 441 9\r\n-226 78 10\r\n64 427 5\r\n68 -63 4\r\n241 122 7\r\n-266 177 6\r\n-14 -78 1\r\n-82 430 2\r\n-267 186 3\r\n",
                "13\r\n7 3\r\n3 8\r\n8 5\r\n4 2\r\n10 3\r\n10 1\r\n10 8\r\n10 4\r\n10 9\r\n10 2\r\n10 5\r\n10 6\r\n10 7\r\n"
            ],
            [
                "10\r\n90 471 5\r\n220 65 4\r\n62 -66 8\r\n263 154 7\r\n197 391 3\r\n-209 56 9\r\n99 -48 10\r\n-256 183 2\r\n108 463 1\r\n207 47 6\r\n",
                "9\r\n8 2\r\n8 4\r\n8 7\r\n8 10\r\n8 6\r\n8 9\r\n8 1\r\n8 5\r\n8 3\r\n"
            ],
            [
                "10\r\n-450195 -403974 9\r\n-590526 543514 8\r\n-465338 -545232 1\r\n132306 365056 3\r\n687937 287959 10\r\n226695 889769 2\r\n656184 42195 5\r\n668064 246657 7\r\n-302532 313641 4\r\n669125 -983417 6\r\n",
                "10\r\n1 10\r\n2 8\r\n2 7\r\n2 5\r\n2 10\r\n2 9\r\n2 4\r\n2 3\r\n2 1\r\n2 6\r\n"
            ],
            [
                "10\r\n425376 852333 5\r\n-716649 -929791 9\r\n-911424 735230 4\r\n-949731 -18798 3\r\n-576326 -713474 1\r\n189718 873536 10\r\n-682437 -388070 2\r\n-129478 204819 7\r\n-239892 -806155 8\r\n-223106 -600283 6\r\n",
                "12\r\n2 5\r\n9 10\r\n6 3\r\n4 3\r\n4 10\r\n4 8\r\n4 7\r\n4 2\r\n4 1\r\n4 5\r\n4 9\r\n4 6\r\n"
            ],
            [
                "20\r\n498 423 9\r\n-214 -68 16\r\n-467 264 17\r\n108 -128 10\r\n417 118 8\r\n495 268 7\r\n-151 -107 6\r\n-301 1 5\r\n116 -125 1\r\n399 95 4\r\n-67 799 14\r\n-453 213 19\r\n-376 559 20\r\n502 301 11\r\n173 782 18\r\n-364 574 2\r\n175 -97 3\r\n-463 246 15\r\n492 444 12\r\n336 668 13\r\n",
                "28\r\n18 12\r\n12 8\r\n8 2\r\n2 7\r\n7 4\r\n4 9\r\n9 17\r\n6 14\r\n19 20\r\n3 17\r\n3 15\r\n3 18\r\n3 19\r\n3 13\r\n3 20\r\n3 12\r\n3 5\r\n3 8\r\n3 16\r\n3 2\r\n3 6\r\n3 11\r\n3 14\r\n3 7\r\n3 10\r\n3 4\r\n3 1\r\n3 9\r\n"
            ],
            [
                "20\r\n-463 309 4\r\n472 359 14\r\n-194 -83 18\r\n-416 474 13\r\n-96 746 3\r\n163 -114 7\r\n-458 347 16\r\n177 -108 5\r\n314 615 2\r\n480 305 8\r\n-196 701 20\r\n-423 462 15\r\n477 329 6\r\n-457 265 19\r\n192 -100 17\r\n346 578 10\r\n455 409 1\r\n-454 371 12\r\n435 450 11\r\n452 180 9\r\n",
                "20\r\n14 3\r\n1 4\r\n1 13\r\n1 6\r\n1 7\r\n1 16\r\n1 10\r\n1 8\r\n1 5\r\n1 3\r\n1 19\r\n1 11\r\n1 20\r\n1 9\r\n1 2\r\n1 14\r\n1 18\r\n1 12\r\n1 15\r\n1 17\r\n"
            ],
            [
                "20\r\n-201268 40733 12\r\n279503 656971 20\r\n-193510 -603402 5\r\n414438 858084 13\r\n-331542 661690 3\r\n-249371 867695 16\r\n312886 681855 17\r\n-478053 624307 9\r\n279517 483377 8\r\n165271 255951 15\r\n937060 -423651 18\r\n-683788 -621091 1\r\n870049 502230 4\r\n681566 -890785 19\r\n215558 -577085 10\r\n788742 141192 6\r\n46330 -699265 7\r\n97242 -779632 11\r\n-908184 -792639 14\r\n-388039 576257 2\r\n",
                "28\r\n14 18\r\n18 17\r\n17 15\r\n11 3\r\n3 16\r\n16 13\r\n13 12\r\n10 9\r\n7 2\r\n19 14\r\n19 11\r\n19 5\r\n19 3\r\n19 6\r\n19 16\r\n19 4\r\n19 13\r\n19 1\r\n19 12\r\n19 18\r\n19 7\r\n19 20\r\n19 2\r\n19 17\r\n19 10\r\n19 8\r\n19 9\r\n19 15\r\n"
            ],
            [
                "20\r\n-765264 182546 10\r\n152192 51289 15\r\n-243204 -809787 5\r\n651517 947595 16\r\n939117 900340 18\r\n304931 -125264 3\r\n506579 -772501 4\r\n-845009 -705842 6\r\n654333 253780 1\r\n647347 636569 14\r\n-225078 -792145 7\r\n335093 557322 9\r\n555319 658345 2\r\n882001 -839209 13\r\n949513 -760682 12\r\n-299934 -880315 20\r\n798565 381186 11\r\n-687840 -793346 17\r\n87664 117452 8\r\n-79527 509181 19\r\n",
                "20\r\n11 14\r\n8 6\r\n8 3\r\n8 5\r\n8 18\r\n8 17\r\n8 11\r\n8 13\r\n8 2\r\n8 15\r\n8 12\r\n8 9\r\n8 1\r\n8 10\r\n8 14\r\n8 7\r\n8 4\r\n8 16\r\n8 20\r\n8 19\r\n"
            ],
            [
                "20\r\n266304 432771 7\r\n159318 -70799 18\r\n784164 -679722 16\r\n-9297 869438 1\r\n-381558 846009 4\r\n325974 202418 15\r\n-341183 358629 5\r\n-792122 414126 20\r\n-625988 465738 19\r\n-234469 763094 2\r\n170581 -326515 13\r\n-36254 603344 17\r\n761752 -27266 10\r\n879171 -993223 6\r\n610794 -608233 3\r\n-539047 -588118 11\r\n-490482 500952 12\r\n17664 641643 14\r\n746442 -665391 9\r\n186004 -588849 8\r\n",
                "23\r\n16 20\r\n15 19\r\n6 7\r\n1 12\r\n8 20\r\n8 11\r\n8 13\r\n8 10\r\n8 2\r\n8 18\r\n8 14\r\n8 6\r\n8 5\r\n8 4\r\n8 1\r\n8 17\r\n8 12\r\n8 7\r\n8 15\r\n8 9\r\n8 19\r\n8 3\r\n8 16\r\n"
            ]
        ]
    }
]