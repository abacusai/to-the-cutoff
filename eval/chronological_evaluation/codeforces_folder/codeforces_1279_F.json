[
    {
        "name": "New Year and Handle Change",
        "description": "New Year is getting near. So it's time to change handles on codeforces. Mishka\nwants to change his handle but in such a way that people would not forget who\nhe is. To make it work, he only allowed to change letters case. More formally,\nduring one handle change he can choose any segment of his handle \n    [i; i + l\n    - 1]\n and apply tolower or toupper to all letters of his handle on this\nsegment (more fomally, replace all uppercase letters with corresponding\nlowercase or vice versa). The length \n    l\n is fixed for all changes. Because\nit is not allowed to change codeforces handle too often, Mishka can perform at\nmost \n    k\n such operations. What is the minimum value of \n    min(lower,\n    upper)\n (where \n    lower\n is the number of lowercase letters, and\n\n    upper\n is the number of uppercase letters) can be obtained after optimal\nsequence of changes? Input The first line of the input contains three integers\n\n    n, k\n and \n    l\n (\n    1 \n    \u2264 n, k, l \n    \u2264 10^6, l \n    \u2264 n)\n \u2014 the\nlength of Mishka's handle, the number of changes and the length of the\nsegment. The second line of the input contains one string \n    s\n, consisting\nof \n    n\n lowercase and uppercase Latin letters \u2014 Mishka's handle. Output\nPrint one integer \u2014 the minimum value of \n    min(lower, upper)\n after that\nMishka change his handle at most \n    k\n times in a way described in the\nproblem statement. Examples Input 7 1 4 PikMike Output 0 Input 15 2 2\nAaAaAAaaAAAAaaA Output 2 Input 14 2 6 aBcdEFGHIJklMn Output 0 Input 9 2 2\naAaAAAaaA Output 1\n\n",
        "cf_contest_id": 1279,
        "cf_index": "F",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "dp"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 1 4\r\nPikMike\r\n",
                "0\r\n"
            ],
            [
                "15 2 2\r\nAaAaAAaaAAAAaaA\r\n",
                "2\r\n"
            ],
            [
                "14 2 6\r\naBcdEFGHIJklMn\r\n",
                "0\r\n"
            ],
            [
                "9 2 2\r\naAaAAAaaA\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "52 10 7\r\neTnmeHRmaTetSTsGqigLFYciMFLbwJHCScPRRIvxCFcevZVRmprk\r\n",
                "0\r\n"
            ],
            [
                "1 1 1\r\na\r\n",
                "0\r\n"
            ],
            [
                "8 6 5\r\nAaAAaaAa\r\n",
                "0\r\n"
            ],
            [
                "9 3 5\r\nAaAAaaAaa\r\n",
                "0\r\n"
            ],
            [
                "9 5 5\r\naBaBaBBaa\r\n",
                "0\r\n"
            ],
            [
                "10 6 6\r\nkVUhbNkdXw\r\n",
                "0\r\n"
            ],
            [
                "10 2 6\r\nAaAAAAAaaA\r\n",
                "0\r\n"
            ],
            [
                "6 6 2\r\nAaaaaa\r\n",
                "0\r\n"
            ],
            [
                "8 2 5\r\nAaaaAAAa\r\n",
                "0\r\n"
            ],
            [
                "6 4 2\r\nAaaaaa\r\n",
                "0\r\n"
            ]
        ]
    }
]