[
    {
        "name": "Technogoblet of Fire",
        "description": "Everybody knows that the \n    m\n-coder Tournament will happen soon. \n    m\n\nschools participate in the tournament, and only one student from each school\nparticipates. There are a total of \n    n\n students in those schools. Before\nthe tournament, all students put their names and the names of their schools\ninto the Technogoblet of Fire. After that, Technogoblet selects the strongest\nstudent from each school to participate. Arkady is a hacker who wants to have\n\n    k\n Chosen Ones selected by the Technogoblet. Unfortunately, not all of\nthem are the strongest in their schools, but Arkady can make up some new\nschool names and replace some names from Technogoblet with those. You can't\nuse each made-up name more than once. In that case, Technogoblet would select\nthe strongest student in those made-up schools too. You know the power of each\nstudent and schools they study in. Calculate the minimal number of schools\nArkady has to make up so that \n    k\n Chosen Ones would be selected by the\nTechnogoblet. Input The first line contains three integers \n    n\n, \n    m\n\nand \n    k\n (\n    1 \n    \u2264 n \n    \u2264 100\n, \n    1 \n    \u2264 m, k \n    \u2264 n\n) \u2014 the\ntotal number of students, the number of schools and the number of the Chosen\nOnes. The second line contains \n    n\n different integers \n    p_1, p_2,\n    \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n), where \n    p_i\n denotes the\npower of \n    i\n-th student. The bigger the power, the stronger the student.\nThe third line contains \n    n\n integers \n    s_1, s_2, \n    \u2026, s_n\n (\n    1\n    \n    \u2264 s_i \n    \u2264 m\n), where \n    s_i\n denotes the school the \n    i\n-th\nstudent goes to. At least one student studies in each of the schools. The\nfourth line contains \n    k\n different integers \n    c_1, c_2, \n    \u2026, c_k\n\n(\n    1 \n    \u2264 c_i \n    \u2264 n\n) \u2014 the id's of the Chosen Ones. Output Output a\nsingle integer \u2014 the minimal number of schools to be made up by Arkady so that\n\n    k\n Chosen Ones would be selected by the Technogoblet. Examples Input 7 3\n1 1 5 3 4 6 7 2 1 3 1 2 1 2 3 3 Output 1 Input 8 4 4 1 2 3 4 5 6 7 8 4 3 2 1 4\n3 2 1 3 4 5 6 Output 2 Note In the first example there's just a single Chosen\nOne with id \n    3\n. His power is equal to \n    3\n, but in the same school\n\n    1\n, there's a student with id \n    5\n and power \n    6\n, and that means\ninaction would not lead to the latter being chosen. If we, however, make up a\nnew school (let its id be \n    4\n) for the Chosen One, Technogoblet would\nselect students with ids \n    2\n (strongest in \n    3\n), \n    5\n (strongest in\n\n    1\n), \n    6\n (strongest in \n    2\n) and \n    3\n (strongest in \n    4\n).\nIn the second example, you can change the school of student \n    3\n to the\nmade-up \n    5\n and the school of student \n    4\n to the made-up \n    6\n. It\nwill cause the Technogoblet to choose students \n    8\n, \n    7\n, \n    6\n,\n\n    5\n, \n    3\n and \n    4\n.\n\n",
        "cf_contest_id": 1121,
        "cf_index": "A",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 3 1\r\n1 5 3 4 6 7 2\r\n1 3 1 2 1 2 3\r\n3\r\n",
                "1\r\n"
            ],
            [
                "8 4 4\r\n1 2 3 4 5 6 7 8\r\n4 3 2 1 4 3 2 1\r\n3 4 5 6\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n1\r\n1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "2 1 1\r\n1 2\r\n1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "2 1 1\r\n1 2\r\n1 1\r\n2\r\n",
                "0\r\n"
            ],
            [
                "10 1 10\r\n9 1 2 3 5 7 4 10 6 8\r\n1 1 1 1 1 1 1 1 1 1\r\n8 9 5 7 1 10 6 2 4 3\r\n",
                "9\r\n"
            ],
            [
                "10 5 4\r\n4 2 1 7 10 9 6 3 5 8\r\n3 2 1 4 5 1 4 2 4 2\r\n9 3 2 6\r\n",
                "3\r\n"
            ],
            [
                "10 10 4\r\n3 4 6 1 5 2 8 7 10 9\r\n4 10 5 7 6 2 1 3 8 9\r\n5 8 4 7\r\n",
                "0\r\n"
            ],
            [
                "13 2 4\r\n8 13 2 4 6 9 5 12 3 11 1 7 10\r\n2 2 1 2 2 1 1 1 1 2 1 1 2\r\n6 8 4 13\r\n",
                "3\r\n"
            ],
            [
                "5 1 1\r\n4 3 2 1 5\r\n1 1 1 1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "5 1 1\r\n4 3 2 1 5\r\n1 1 1 1 1\r\n5\r\n",
                "0\r\n"
            ],
            [
                "100 10 1\r\n62 68 24 82 66 47 73 43 85 23 78 13 94 14 84 17 27 5 72 48 59 46 97 81 88 9 76 69 11 15 12 61 70 7 91 34 99 52 54 57 56 64 55 67 40 38 74 25 30 4 22 92 33 3 86 45 37 26 87 53 75 71 58 96 98 20 36 1 95 63 10 49 19 41 89 21 39 100 93 42 32 90 28 83 6 29 60 65 44 35 18 16 8 50 80 31 51 2 77 79\r\n6 6 6 4 6 6 6 6 6 6 6 6 6 6 6 3 6 2 6 6 6 6 6 6 6 9 6 6 5 6 8 6 6 6 6 6 6 10 6 6 6 6 6 6 6 6 6 1 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6\r\n84\r\n",
                "1\r\n"
            ]
        ]
    }
]