[
    {
        "name": "Maximum Cost Deletion",
        "description": "You are given a string \n    s\n of length \n    n\n consisting only of the\ncharacters 0 and 1. You perform the following operation until the string\nbecomes empty: choose some consecutive substring of equal characters, erase it\nfrom the string and glue the remaining two parts together (any of them can be\nempty) in the same order. For example, if you erase the substring 111 from the\nstring 111110, you will get the string 110. When you delete a substring of\nlength \n    l\n, you get \n    a \n    \u00b7 l + b\n points. Your task is to\ncalculate the maximum number of points that you can score in total, if you\nhave to make the given string empty. Input The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2000\n) \u2014 the number of testcases. The\nfirst line of each testcase contains three integers \n    n\n, \n    a\n and\n\n    b\n (\n    1 \n    \u2264 n \n    \u2264 100; -100 \n    \u2264 a, b \n    \u2264 100\n) \u2014 the length of\nthe string \n    s\n and the parameters \n    a\n and \n    b\n. The second line\ncontains the string \n    s\n. The string \n    s\n consists only of the\ncharacters 0 and 1. Output For each testcase, print a single integer \u2014 the\nmaximum number of points that you can score. Example Input 3 3 2 0 000 5 -2 5\n11001 6 1 -4 100111 Output 6 15 -2 Note In the first example, it is enough to\ndelete the entire string, then we will get \n    2 \n    \u00b7 3 + 0 = 6\n points.\nIn the second example, if we delete characters one by one, then for each\ndeleted character we will get \n    (-2) \n    \u00b7 1 + 5 = 3\n points, i. e.\n\n    15\n points in total. In the third example, we can delete the substring 00\nfrom the string 100111, we get \n    1 \n    \u00b7 2 + (-4) = -2\n points, and the\nstring will be equal to 1111, removing it entirely we get \n    1 \n    \u00b7 4 +\n    (-4) = 0\n points. In total, we got \n    -2\n points for \n    2\n operations.\n\n",
        "cf_contest_id": 1550,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 2 0\r\n000\r\n5 -2 5\r\n11001\r\n6 1 -4\r\n100111\r\n",
                "6\r\n15\r\n-2\r\n"
            ]
        ],
        "private_cases": []
    }
]