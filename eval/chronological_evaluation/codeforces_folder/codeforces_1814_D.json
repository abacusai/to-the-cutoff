[
    {
        "name": "Balancing Weapons",
        "description": "You've got a job in a game studio that developed an online shooter, and your\nfirst big task is to help to balance weapons. The game has \n    n\n weapons:\nthe \n    i\n-th gun has an integer fire rate \n    f_i\n and an integer damage\nper bullet \n    d_i\n. The \n    i\n-th gun's total firepower is equal to \n    p_i\n    = f_i \n    \u00b7 d_i\n. You have to modify the values \n    d_i\n of some guns in\nsuch a way that the new values \n    d_i\n will still be integers, and the\nfirepower of all guns will become balanced. Given an integer \n    k\n, the guns\nare said to be balanced if \n    max\n    _1 \n    \u2264 i \n    \u2264 np_i -\n    \n    min\n    _1 \n    \u2264 i \n    \u2264 np_i\n    \u2264 k\n. Since gamers that play\nyour game don't like big changes, you need to change the values \n    d_i\n for\nthe minimum possible number of guns. What is the minimum number of guns for\nwhich you have to change these values to make the guns balanced? Note that the\nnew values \n    d_i\n must be integers greater than \n    0\n. Input The first\nline contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the\nnumber of test cases. The first line of each test case contains two integers\n\n    n\n and \n    k\n (\n    2 \n    \u2264 n \n    \u2264 3000\n; \n    0 \n    \u2264 k \n    \u2264 1500\n) \u2014\nthe number of guns to balance, and the maximum allowed gap between the most\nand the least powerful weapons. The second line contains \n    n\n integers\n\n    f_1, f_2, \n    \u2026, f_n\n (\n    1 \n    \u2264 f_i \n    \u2264 2000\n), where \n    f_i\n\nis the fire rate of the \n    i\n-th gun. The third line contains \n    n\n\nintegers \n    d_1, d_2, \n    \u2026, d_n\n (\n    1 \n    \u2264 d_i \n    \u2264 10^9\n), where\n\n    d_i\n is the damage per bullet of the \n    i\n-th gun. It's guaranteed that\nthe sum of \n    n\n over all test cases doesn't exceed \n    3000\n. Output For\neach test case, print the minimum number of guns which damage \n    d_i\n you\nhave to change in order to make the guns balanced. Note that the new values\n\n    d_i\n must be integers greater than \n    0\n. Example Input 5 4 2 6 3 13 7\n1 2 1 2 3 2 100 101 102 100 99 98 5 0 1 12 4 4 3 12 1 3 3 4 2 50 1000 10\n1000000000 1 3 5 1 19 11 49 4 72 Output 2 3 0 1 2 Note In the first test case,\nyou can set \n    d_1 = 2\n and \n    d_2 = 4\n. You'll get an array \n    d = [2, 4,\n    1, 2]\n, and the values of firepower will be \n    p = [12, 12, 13, 14]\n. The\nguns are balanced, since \n    14 - 12 \n    \u2264 2\n. In the second test case, you\nhave to change the value \n    d_i\n for all three guns. For example, you can\nset \n    d = [5151, 5100, 5050]\n. In the third test case, all guns are already\nbalanced, so you don't have to change anything.\n\n",
        "cf_contest_id": 1814,
        "cf_index": "D",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "data structures",
            "math",
            "two pointers"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n4 2\r\n6 3 13 7\r\n1 2 1 2\r\n3 2\r\n100 101 102\r\n100 99 98\r\n5 0\r\n1 12 4 4 3\r\n12 1 3 3 4\r\n2 50\r\n1000 10\r\n1000000000 1\r\n3 5\r\n1 19 11\r\n49 4 72\r\n",
                "2\r\n3\r\n0\r\n1\r\n2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n13 3\r\n7 5 7 8 9 8 8 3 9 8 7 1 6\r\n3 10 1 6 3 5 1 6 5 4 4 2 4\r\n",
                "13\r\n"
            ],
            [
                "1\r\n8 2\r\n10 20 30 1 1 1 1 1\r\n1 1 1 1 1 1 1 1\r\n",
                "8\r\n"
            ],
            [
                "1\r\n3 2\r\n2 2 17\r\n1 1 5\r\n",
                "2\r\n"
            ],
            [
                "1\r\n6 2\r\n2 4 8 1 1 1\r\n1 1 1 1 1 1\r\n",
                "5\r\n"
            ],
            [
                "1\r\n8 3\r\n8 3 2 1 7 2 6 10\r\n1 10 2 8 8 2 2 6\r\n",
                "8\r\n"
            ],
            [
                "1\r\n3 2\r\n2 8 1\r\n1 1 1\r\n",
                "2\r\n"
            ],
            [
                "1\r\n3 2\r\n2 7 9\r\n1 3 5\r\n",
                "3\r\n"
            ],
            [
                "1\r\n3 2\r\n5 7 4\r\n1 1 1\r\n",
                "3\r\n"
            ],
            [
                "1\r\n4 3\r\n21 23 6 5\r\n1 1 4 5\r\n",
                "4\r\n"
            ],
            [
                "1\r\n5 5\r\n491 493 9 8 7\r\n1 1 55 62 71\r\n",
                "5\r\n"
            ],
            [
                "1\r\n3 10\r\n50 22 10\r\n2 4 9\r\n",
                "2\r\n"
            ],
            [
                "1\r\n3 2\r\n100 3 98\r\n1 34 2\r\n",
                "2\r\n"
            ],
            [
                "1\r\n6 3\r\n3 1 4 1 1 3\r\n5 3 1 1 1 2\r\n",
                "2\r\n"
            ],
            [
                "1\r\n5 15\r\n1 9 8 5 1\r\n4 10 1 7 8\r\n",
                "2\r\n"
            ],
            [
                "1\r\n16 11\r\n4 8 9 1 4 10 7 5 5 1 4 3 2 4 5 7\r\n7 7 2 2 2 8 8 1 10 3 9 1 4 7 3 3\r\n",
                "10\r\n"
            ],
            [
                "1\r\n3 10\r\n10 10 100\r\n1 1 1\r\n",
                "2\r\n"
            ]
        ]
    }
]