[
    {
        "name": "Up the Strip (simplified version)",
        "description": "This version of the problem differs from the next one only in the constraint\non \n    n\n. Note that the memory limit in this problem is lower than in\nothers. You have a vertical strip with \n    n\n cells, numbered consecutively\nfrom \n    1\n to \n    n\n from top to bottom. You also have a token that is\ninitially placed in cell \n    n\n. You will move the token up until it arrives\nat cell \n    1\n. Let the token be in cell \n    x > 1\n at some moment. One\nshift of the token can have either of the following kinds: Subtraction: you\nchoose an integer \n    y\n between \n    1\n and \n    x-1\n, inclusive, and move\nthe token from cell \n    x\n to cell \n    x - y\n. Floored division: you choose\nan integer \n    z\n between \n    2\n and \n    x\n, inclusive, and move the token\nfrom cell \n    x\n to cell \n    \u230a\n    x/z\n    \u230b\n (\n    x\n\ndivided by \n    z\n rounded down). Find the number of ways to move the token\nfrom cell \n    n\n to cell \n    1\n using one or more shifts, and print it\nmodulo \n    m\n. Note that if there are several ways to move the token from one\ncell to another in one shift, all these ways are considered distinct (check\nexample explanation for a better understanding). Input The only line contains\ntwo integers \n    n\n and \n    m\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n;\n\n    10^8 < m < 10^9\n; \n    m\n is a prime number) \u2014 the length of the strip\nand the modulo. Output Print the number of ways to move the token from cell\n\n    n\n to cell \n    1\n, modulo \n    m\n. Examples Input 3 998244353 Output 5\nInput 5 998244353 Output 25 Input 42 998244353 Output 793019428 Note In the\nfirst test, there are three ways to move the token from cell \n    3\n to cell\n\n    1\n in one shift: using subtraction of \n    y = 2\n, or using division by\n\n    z = 2\n or \n    z = 3\n. There are also two ways to move the token from\ncell \n    3\n to cell \n    1\n via cell \n    2\n: first subtract \n    y = 1\n, and\nthen either subtract \n    y = 1\n again or divide by \n    z = 2\n. Therefore,\nthere are five ways in total.\n\n",
        "cf_contest_id": 1561,
        "cf_index": "D1",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "dp",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 128.0,
        "public_cases": [
            [
                "3 998244353\r\n",
                "5"
            ],
            [
                "5 998244353\r\n",
                "25"
            ],
            [
                "42 998244353\r\n",
                "793019428"
            ]
        ],
        "private_cases": [
            [
                "349 528449821\r\n",
                "190306170"
            ],
            [
                "158032 121694641\r\n",
                "114975792"
            ],
            [
                "200000 665880409\r\n",
                "86083213"
            ],
            [
                "2 554714911\r\n",
                "2"
            ],
            [
                "199568 100000007\r\n",
                "31278679"
            ],
            [
                "199862 999999937\r\n",
                "750469605"
            ],
            [
                "140750 872921717\r\n",
                "17972639"
            ],
            [
                "8045 992942057\r\n",
                "882251038"
            ],
            [
                "634 982032773\r\n",
                "695544646"
            ],
            [
                "48 166017469\r\n",
                "119670181"
            ],
            [
                "6 732284177\r\n",
                "55"
            ],
            [
                "200000 187160003\r\n",
                "147468989"
            ],
            [
                "199995 597768679\r\n",
                "390104637"
            ],
            [
                "200000 558920641\r\n",
                "14322946"
            ],
            [
                "199660 160959167\r\n",
                "32483089"
            ],
            [
                "191683 549754339\r\n",
                "207301921"
            ],
            [
                "124953 922406879\r\n",
                "768303295"
            ]
        ]
    }
]