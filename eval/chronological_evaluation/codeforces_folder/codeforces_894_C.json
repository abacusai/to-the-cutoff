[
    {
        "name": "Marco and GCD Sequence",
        "description": "In a dream Marco met an elderly man with a pair of black glasses. The man told\nhim the key to immortality and then disappeared with the wind of time. When he\nwoke up, he only remembered that the key was a sequence of positive integers\nof some length n, but forgot the exact sequence. Let the elements of the\nsequence be a1, a2, ..., an. He remembered that he calculated gcd(ai, ai + 1,\n..., aj) for every 1 \u2264 i \u2264 j \u2264 n and put it into a set S. gcd here means the\ngreatest common divisor. Note that even if a number is put into the set S\ntwice or more, it only appears once in the set. Now Marco gives you the set S\nand asks you to help him figure out the initial sequence. If there are many\nsolutions, print any of them. It is also possible that there are no sequences\nthat produce the set S, in this case print -1. Input The first line contains a\nsingle integer m (1 \u2264 m \u2264 1000) \u2014 the size of the set S. The second line\ncontains m integers s1, s2, ..., sm (1 \u2264 si \u2264 10^6) \u2014 the elements of the set\nS. It's guaranteed that the elements of the set are given in strictly\nincreasing order, that means s1 < s2 < ... < sm. Output If there is no\nsolution, print a single line containing -1. Otherwise, in the first line\nprint a single integer n denoting the length of the sequence, n should not\nexceed 4000. In the second line print n integers a1, a2, ..., an (1 \u2264 ai \u2264\n10^6) \u2014 the sequence. We can show that if a solution exists, then there is a\nsolution with n not exceeding 4000 and ai not exceeding 10^6. If there are\nmultiple solutions, print any of them. Examples Input 4 2 4 6 12 Output 3 4 6\n12 Input 2 2 3 Output -1 Note In the first example 2 = gcd(4, 6), the other\nelements from the set appear in the sequence, and we can show that there are\nno values different from 2, 4, 6 and 12 among gcd(ai, ai + 1, ..., aj) for\nevery 1 \u2264 i \u2264 j \u2264 n.\n\n",
        "cf_contest_id": 894,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2 4 6 12\r\n",
                "7\r\n2 2 4 2 6 2 12\r\n"
            ],
            [
                "2\r\n2 3\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 6\r\n",
                "3\r\n1 1 6\r\n"
            ],
            [
                "3\r\n1 2 7\r\n",
                "5\r\n1 1 2 1 7\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "2\r\n1 10\r\n",
                "3\r\n1 1 10\r\n"
            ],
            [
                "3\r\n1 2 6\r\n",
                "5\r\n1 1 2 1 6\r\n"
            ],
            [
                "15\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\r\n",
                "29\r\n1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 1 10 1 11 1 12 1 13 1 14 1 15\r\n"
            ],
            [
                "14\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\r\n",
                "27\r\n1 1 2 1 3 1 4 1 5 1 6 1 7 1 8 1 9 1 10 1 11 1 12 1 13 1 14\r\n"
            ],
            [
                "5\r\n2 5 6 7 11\r\n",
                "-1\r\n"
            ],
            [
                "11\r\n3 4 5 6 7 8 9 10 11 12 13\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n4 9 11\r\n",
                "-1\r\n"
            ],
            [
                "6\r\n5 6 9 11 14 16\r\n",
                "-1\r\n"
            ],
            [
                "12\r\n8 9 10 11 12 13 14 15 16 17 18 19\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1007 397765 414884\r\n",
                "5\r\n1007 1007 397765 1007 414884\r\n"
            ],
            [
                "19\r\n1007 27189 32224 47329 93651 172197 175218 234631 289009 340366 407835 468255 521626 579025 601179 605207 614270 663613 720005\r\n",
                "37\r\n1007 1007 27189 1007 32224 1007 47329 1007 93651 1007 172197 1007 175218 1007 234631 1007 289009 1007 340366 1007 407835 1007 468255 1007 521626 1007 579025 1007 601179 1007 605207 1007 614270 1007 663613 1007 720005\r\n"
            ],
            [
                "36\r\n1007 27189 42294 81567 108756 133931 149036 161120 200393 231610 234631 270883 302100 307135 343387 344394 362520 383667 421933 463220 486381 526661 546801 571976 595137 615277 616284 629375 661599 674690 680732 714970 744173 785460 787474 823726\r\n",
                "71\r\n1007 1007 27189 1007 42294 1007 81567 1007 108756 1007 133931 1007 149036 1007 161120 1007 200393 1007 231610 1007 234631 1007 270883 1007 302100 1007 307135 1007 343387 1007 344394 1007 362520 1007 383667 1007 421933 1007 463220 1007 486381 1007 526661 1007 546801 1007 571976 1007 595137 1007 615277 1007 616284 1007 629375 1007 661599 1007 674690 1007 680732 1007 714970 1007 744173 1007 785460 1007 787474 1007 823726\r\n"
            ],
            [
                "3\r\n99997 599982 999970\r\n",
                "5\r\n99997 99997 599982 99997 999970\r\n"
            ],
            [
                "2\r\n99997 399988\r\n",
                "3\r\n99997 99997 399988\r\n"
            ],
            [
                "4\r\n99997 399988 499985 599982\r\n",
                "7\r\n99997 99997 399988 99997 499985 99997 599982\r\n"
            ],
            [
                "4\r\n19997 339949 539919 719892\r\n",
                "7\r\n19997 19997 339949 19997 539919 19997 719892\r\n"
            ],
            [
                "2\r\n299997 599994\r\n",
                "3\r\n299997 299997 599994\r\n"
            ],
            [
                "1\r\n999997\r\n",
                "1\r\n999997\r\n"
            ],
            [
                "1\r\n1000000\r\n",
                "1\r\n1000000\r\n"
            ],
            [
                "2\r\n999999 1000000\r\n",
                "-1\r\n"
            ],
            [
                "2\r\n999996 1000000\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n250000 750000 1000000\r\n",
                "5\r\n250000 250000 750000 250000 1000000\r\n"
            ],
            [
                "2\r\n666666 999999\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n111111 666666 777777 999999\r\n",
                "7\r\n111111 111111 666666 111111 777777 111111 999999\r\n"
            ],
            [
                "5\r\n111111 233333 666666 777777 999999\r\n",
                "-1\r\n"
            ],
            [
                "6\r\n111111 222222 333333 666666 777777 999999\r\n",
                "11\r\n111111 111111 222222 111111 333333 111111 666666 111111 777777 111111 999999\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "3\r\n1 1 2\r\n"
            ],
            [
                "1\r\n233333\r\n",
                "1\r\n233333\r\n"
            ]
        ]
    }
]