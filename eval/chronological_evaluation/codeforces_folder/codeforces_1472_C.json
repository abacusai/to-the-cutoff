[
    {
        "name": "Long Jumps",
        "description": "Polycarp found under the Christmas tree an array \n    a\n of \n    n\n elements\nand instructions for playing with it: At first, choose index \n    i\n (\n    1\n    \n    \u2264 i \n    \u2264 n\n) \u2014 starting position in the array. Put the chip at the\nindex \n    i\n (on the value \n    a_i\n). While \n    i \n    \u2264 n\n, add \n    a_i\n\nto your score and move the chip \n    a_i\n positions to the right (i.e. replace\n\n    i\n with \n    i + a_i\n). If \n    i > n\n, then Polycarp ends the game. For\nexample, if \n    n = 5\n and \n    a = [7, 3, 1, 2, 3]\n, then the following game\noptions are possible: Polycarp chooses \n    i = 1\n. Game process: \n    i = 1\n    \n    +7\n    \u27f6 8\n. The score of the game is: \n    a_1 =\n    7\n. Polycarp chooses \n    i = 2\n. Game process: \n    i = 2\n    \n    +3\n    \u27f6 5 \n    +3\n    \u27f6 8\n.\nThe score of the game is: \n    a_2 + a_5 = 6\n. Polycarp chooses \n    i = 3\n.\nGame process: \n    i = 3 \n    +1\n    \u27f6 4\n    \n    +2\n    \u27f6 6\n. The score of the game is: \n    a_3 + a_4\n    = 3\n. Polycarp chooses \n    i = 4\n. Game process: \n    i = 4\n    \n    +2\n    \u27f6 6\n. The score of the game is: \n    a_4 =\n    2\n. Polycarp chooses \n    i = 5\n. Game process: \n    i = 5\n    \n    +3\n    \u27f6 8\n. The score of the game is: \n    a_5 =\n    3\n. Help Polycarp to find out the maximum score he can get if he chooses the\nstarting index in an optimal way. Input The first line contains one integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. Then\n\n    t\n test cases follow. The first line of each test case contains one\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of the\narray \n    a\n. The next line contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 elements of the array \n    a\n. It is\nguaranteed that the sum of \n    n\n over all test cases does not exceed \n    2\n    \n    \u00b7 10^5\n. Output For each test case, output on a separate line one\nnumber \u2014 the maximum score that Polycarp can get by playing the game on the\ncorresponding array according to the instruction from the statement. Note that\nPolycarp chooses any starting position from \n    1\n to \n    n\n in such a way\nas to maximize his result. Example Input 4 5 7 3 1 2 3 3 2 1 4 6 2 1000 2 3\n995 1 5 1 1 1 1 1 Output 7 6 1000 5 Note The first test case is explained in\nthe statement. In the second test case, the maximum score can be achieved by\nchoosing \n    i = 1\n. In the third test case, the maximum score can be\nachieved by choosing \n    i = 2\n. In the fourth test case, the maximum score\ncan be achieved by choosing \n    i = 1\n.\n\n",
        "cf_contest_id": 1472,
        "cf_index": "C",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5\r\n7 3 1 2 3\r\n3\r\n2 1 4\r\n6\r\n2 1000 2 3 995 1\r\n5\r\n1 1 1 1 1\r\n",
                "7\r\n6\r\n1000\r\n5\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n3\r\n1 1 234872\r\n3\r\n1 1 234872\r\n",
                "234874\r\n234874\r\n"
            ],
            [
                "1\r\n4\r\n100 1 1 200\r\n",
                "202\r\n"
            ],
            [
                "1\r\n7\r\n5 1 1 1 1 14 15\r\n",
                "19\r\n"
            ],
            [
                "1\r\n21\r\n5 5 5 5 5 5 5 5 5 5 1 1 1 1 2 5 20 1 1 1 1000000\r\n",
                "1000005\r\n"
            ]
        ]
    }
]