[
    {
        "name": "Wojtek and Card Tricks",
        "description": "Wojtek has just won a maths competition in Byteland! The prize is admirable \u2014\na great book called 'Card Tricks for Everyone.' 'Great!' he thought, 'I can\nfinally use this old, dusted deck of cards that's always been lying unused on\nmy desk!' The first chapter of the book is 'How to Shuffle \n    k\n Cards in\nAny Order You Want.' It's basically a list of \n    n\n intricate methods of\nshuffling the deck of \n    k\n cards in a deterministic way. Specifically, the\n\n    i\n-th recipe can be described as a permutation \n    (P_i,1, P_i,2,\n    \n    \u2026, P_i,k)\n of integers from \n    1\n to \n    k\n. If we enumerate the\ncards in the deck from \n    1\n to \n    k\n from top to bottom, then\n\n    P_i,j\n indicates the number of the \n    j\n-th card from the top of the\ndeck after the shuffle. The day is short and Wojtek wants to learn only some\nof the tricks today. He will pick two integers \n    l, r\n (\n    1 \n    \u2264 l \n    \u2264\n    r \n    \u2264 n\n), and he will memorize each trick from the \n    l\n-th to the\n\n    r\n-th, inclusive. He will then take a sorted deck of \n    k\n cards and\nrepeatedly apply random memorized tricks until he gets bored. He still likes\nmaths, so he started wondering: how many different decks can he have after he\nstops shuffling it? Wojtek still didn't choose the integers \n    l\n and\n\n    r\n, but he is still curious. Therefore, he defined \n    f(l, r)\n as the\nnumber of different decks he can get if he memorizes all the tricks between\nthe \n    l\n-th and the \n    r\n-th, inclusive. What is the value of\n\n    \n\n    \u2211_l=1^n \n    \u2211_r=l^n f(l, r)?\n\n    \n Input The first line\ncontains two integers \n    n\n, \n    k\n (\n    1 \n    \u2264 n \n    \u2264 200\n     000\n, \n    1\n    \n    \u2264 k \n    \u2264 5\n) \u2014 the number of tricks and the number of cards in Wojtek's\ndeck. Each of the following \n    n\n lines describes a single trick and is\ndescribed by \n    k\n distinct integers \n    P_i,1, P_i,2, \n    \u2026, P_i,\n    k\n (\n    1 \n    \u2264 P_i, j\n    \u2264 k\n). Output Output the value of the sum\ndescribed in the statement. Examples Input 3 3 2 1 3 3 1 2 1 3 2 Output 25\nInput 2 4 4 1 3 2 4 3 1 2 Output 31 Note Consider the first sample: The first\ntrick swaps two top cards. The second trick takes a card from the bottom and\nputs it on the top of the deck. The third trick swaps two bottom cards. The\nfirst or the third trick allow Wojtek to generate only two distinct decks\n(either the two cards are swapped or not). Therefore, \n    f(1, 1) = f(3, 3) =\n    2\n. The second trick allows him to shuffle the deck in a cyclic order.\nTherefore, \n    f(2,2)=3\n. It turns that two first tricks or two last tricks\nare enough to shuffle the deck in any way desired by Wojtek. Therefore,\n\n    f(1,2) = f(2,3) = f(1,3) = 3! = 6\n.\n\n",
        "cf_contest_id": 1210,
        "cf_index": "E",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 3.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n2 1 3\r\n3 1 2\r\n1 3 2\r\n",
                "25\r\n"
            ],
            [
                "2 4\r\n4 1 3 2\r\n4 3 1 2\r\n",
                "31\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "2 5\r\n1 2 4 3 5\r\n5 1 2 3 4\r\n",
                "127\r\n"
            ],
            [
                "2 5\r\n2 1 3 4 5\r\n1 3 4 5 2\r\n",
                "126\r\n"
            ],
            [
                "2 5\r\n2 1 4 3 5\r\n1 3 2 5 4\r\n",
                "14\r\n"
            ]
        ]
    }
]