[
    {
        "name": "Friends Meeting",
        "description": "Two friends are on the coordinate axis Ox in points with integer coordinates.\nOne of them is in the point x1 = a, another one is in the point x2 = b. Each\nof the friends can move by one along the line in any direction unlimited\nnumber of times. When a friend moves, the tiredness of a friend changes\naccording to the following rules: the first move increases the tiredness by 1,\nthe second move increases the tiredness by 2, the third \u2014 by 3 and so on. For\nexample, if a friend moves first to the left, then to the right (returning to\nthe same point), and then again to the left his tiredness becomes equal to 1 +\n2 + 3 = 6. The friends want to meet in a integer point. Determine the minimum\ntotal tiredness they should gain, if they meet in the same point. Input The\nfirst line contains a single integer a (1 \u2264 a \u2264 1000) \u2014 the initial position\nof the first friend. The second line contains a single integer b (1 \u2264 b \u2264\n1000) \u2014 the initial position of the second friend. It is guaranteed that a \u2260\nb. Output Print the minimum possible total tiredness if the friends meet in\nthe same point. Examples Input 3 4 Output 1 Input 101 99 Output 2 Input 5 10\nOutput 9 Note In the first example the first friend should move by one to the\nright (then the meeting happens at point 4), or the second friend should move\nby one to the left (then the meeting happens at point 3). In both cases, the\ntotal tiredness becomes 1. In the second example the first friend should move\nby one to the left, and the second friend should move by one to the right.\nThen they meet in the point 100, and the total tiredness becomes 1 + 1 = 2. In\nthe third example one of the optimal ways is the following. The first friend\nshould move three times to the right, and the second friend \u2014 two times to the\nleft. Thus the friends meet in the point 8, and the total tiredness becomes 1\n+ 2 + 3 + 1 + 2 = 9.\n\n",
        "cf_contest_id": 931,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4\r\n",
                "1\r\n"
            ],
            [
                "101\r\n99\r\n",
                "2\r\n"
            ],
            [
                "5\r\n10\r\n",
                "9\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2\r\n",
                "1\r\n"
            ],
            [
                "1\r\n1000\r\n",
                "250000\r\n"
            ],
            [
                "999\r\n1000\r\n",
                "1\r\n"
            ],
            [
                "1000\r\n999\r\n",
                "1\r\n"
            ],
            [
                "1000\r\n1\r\n",
                "250000\r\n"
            ],
            [
                "2\r\n1\r\n",
                "1\r\n"
            ],
            [
                "2\r\n999\r\n",
                "249001\r\n"
            ],
            [
                "2\r\n998\r\n",
                "248502\r\n"
            ],
            [
                "999\r\n2\r\n",
                "249001\r\n"
            ],
            [
                "998\r\n2\r\n",
                "248502\r\n"
            ],
            [
                "2\r\n1000\r\n",
                "249500\r\n"
            ],
            [
                "1000\r\n2\r\n",
                "249500\r\n"
            ],
            [
                "1\r\n999\r\n",
                "249500\r\n"
            ],
            [
                "999\r\n1\r\n",
                "249500\r\n"
            ],
            [
                "188\r\n762\r\n",
                "82656\r\n"
            ],
            [
                "596\r\n777\r\n",
                "8281\r\n"
            ],
            [
                "773\r\n70\r\n",
                "123904\r\n"
            ],
            [
                "825\r\n729\r\n",
                "2352\r\n"
            ],
            [
                "944\r\n348\r\n",
                "89102\r\n"
            ],
            [
                "352\r\n445\r\n",
                "2209\r\n"
            ],
            [
                "529\r\n656\r\n",
                "4096\r\n"
            ],
            [
                "19\r\n315\r\n",
                "22052\r\n"
            ],
            [
                "138\r\n370\r\n",
                "13572\r\n"
            ],
            [
                "546\r\n593\r\n",
                "576\r\n"
            ],
            [
                "285\r\n242\r\n",
                "484\r\n"
            ],
            [
                "773\r\n901\r\n",
                "4160\r\n"
            ],
            [
                "892\r\n520\r\n",
                "34782\r\n"
            ],
            [
                "864\r\n179\r\n",
                "117649\r\n"
            ],
            [
                "479\r\n470\r\n",
                "25\r\n"
            ],
            [
                "967\r\n487\r\n",
                "57840\r\n"
            ],
            [
                "648\r\n106\r\n",
                "73712\r\n"
            ],
            [
                "58\r\n765\r\n",
                "125316\r\n"
            ],
            [
                "235\r\n56\r\n",
                "8100\r\n"
            ],
            [
                "285\r\n153\r\n",
                "4422\r\n"
            ],
            [
                "943\r\n13\r\n",
                "216690\r\n"
            ],
            [
                "675\r\n541\r\n",
                "4556\r\n"
            ],
            [
                "4\r\n912\r\n",
                "206570\r\n"
            ]
        ]
    }
]