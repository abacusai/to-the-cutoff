[
    {
        "name": "Bots",
        "description": "Sasha and Ira are two best friends. But they aren\u2019t just friends, they are\nsoftware engineers and experts in artificial intelligence. They are developing\nan algorithm for two bots playing a two-player game. The game is cooperative\nand turn based. In each turn, one of the players makes a move (it doesn\u2019t\nmatter which player, it's possible that players turns do not alternate).\nAlgorithm for bots that Sasha and Ira are developing works by keeping track of\nthe state the game is in. Each time either bot makes a move, the state\nchanges. And, since the game is very dynamic, it will never go back to the\nstate it was already in at any point in the past. Sasha and Ira are\nperfectionists and want their algorithm to have an optimal winning strategy.\nThey have noticed that in the optimal winning strategy, both bots make exactly\nN moves each. But, in order to find the optimal strategy, their algorithm\nneeds to analyze all possible states of the game (they haven\u2019t learned about\nalpha-beta pruning yet) and pick the best sequence of moves. They are worried\nabout the efficiency of their algorithm and are wondering what is the total\nnumber of states of the game that need to be analyzed? Input The first and\nonly line contains integer N. 1 \u2264 N \u2264 10^6 Output Output should contain a\nsingle integer \u2013 number of possible states modulo 10^9 + 7. Examples Input 2\nOutput 19 Note Start: Game is in state A. Turn 1: Either bot can make a move\n(first bot is red and second bot is blue), so there are two possible states\nafter the first turn \u2013 B and C. Turn 2: In both states B and C, either bot can\nagain make a turn, so the list of possible states is expanded to include D, E,\nF and G. Turn 3: Red bot already did N=2 moves when in state D, so it cannot\nmake any more moves there. It can make moves when in state E, F and G, so\nstates I, K and M are added to the list. Similarly, blue bot cannot make a\nmove when in state G, but can when in D, E and F, so states H, J and L are\nadded. Turn 4: Red bot already did N=2 moves when in states H, I and K, so it\ncan only make moves when in J, L and M, so states P, R and S are added. Blue\nbot cannot make a move when in states J, L and M, but only when in H, I and K,\nso states N, O and Q are added. Overall, there are 19 possible states of the\ngame their algorithm needs to analyze.\n\n",
        "cf_contest_id": 575,
        "cf_index": "H",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n",
                "19\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n",
                "5\r\n"
            ],
            [
                "3\r\n",
                "69\r\n"
            ],
            [
                "4\r\n",
                "251\r\n"
            ],
            [
                "5\r\n",
                "923\r\n"
            ],
            [
                "6\r\n",
                "3431\r\n"
            ],
            [
                "7\r\n",
                "12869\r\n"
            ],
            [
                "8\r\n",
                "48619\r\n"
            ],
            [
                "9\r\n",
                "184755\r\n"
            ],
            [
                "10\r\n",
                "705431\r\n"
            ],
            [
                "99\r\n",
                "407336794\r\n"
            ],
            [
                "999\r\n",
                "72475737\r\n"
            ],
            [
                "9999\r\n",
                "703593269\r\n"
            ],
            [
                "99999\r\n",
                "879467332\r\n"
            ],
            [
                "999999\r\n",
                "192151599\r\n"
            ],
            [
                "524287\r\n",
                "295397547\r\n"
            ],
            [
                "131071\r\n",
                "920253602\r\n"
            ],
            [
                "178481\r\n",
                "845172388\r\n"
            ],
            [
                "524288\r\n",
                "250289717\r\n"
            ],
            [
                "1000000\r\n",
                "627314155\r\n"
            ]
        ]
    }
]