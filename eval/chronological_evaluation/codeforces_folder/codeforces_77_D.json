[
    {
        "name": "Domino Carpet",
        "description": "...Mike the TV greets you again! Tired of the monotonous furniture? Sick of\ngray routine? Dreaming about dizzying changes in your humble abode? We have\nsomething to offer you! This domino carpet for only 99.99 will change your\nlife! You can lay it on the floor, hang it on the wall or even on the ceiling!\nAmong other things ... Having watched the commercial, virus Hexadecimal also\nwanted to get a Domino Carpet and wanted badly to be photographed in front of\nit. But of course, a virus will never consent to buying a licensed Carpet! So\nshe ordered a truck of dominoes and decided to make such a Carpet herself. The\noriginal Domino Carpet is a field of squares n \u00d7 m in size. Each square is\nhalf of a domino, and can be rotated either vertically or horizontally,\nindependently from its neighbors. Vertically rotated domino halves look like\nthis: And horizontally rotated halves look like this: Notice, that some halves\nlooks the same in both rotations, but other halves differ. Dominoes bought by\nHexadecimal are represented by uncuttable chips 1 \u00d7 2 in size, which can be\nlaid either vertically or horizontally. If the chip is laid vertically, then\nboth of it's halves should be laid vertically orientated; if the chip is laid\nhorizontally, then both of it's halves should be laid horizontally. The\nsamples of valid and invalid dominoes laid vertically and horizontally are:\nVirus Hexadecimal assembles her own Domino Carpet so that the following\nconditions are satisfied: each carpet square is covered by a domino chip, i.e.\nthere are no empty squares; all domino chips lie entirely within the carpet\nand don't overlap with each other; if there is a horizontal domino chip with\nits left half in column j then there are no horizontal domino chips with their\nleft halves in columns j - 1 or j + 1. Before starting to assemble her own\nDomino Carpet, the virus wants to know the number of ways to achieve the\nintended purpose modulo 10^9 + 7. You can assume that the virus has an\ninfinitely large number of dominoes of each type. Input The first line\ncontains two integers n and m, separated by a space \u2014 the size of the Domino\nCarpet (1 \u2264 n, m \u2264 250). Next 4n + 1 lines contain 4m + 1 symbols. Each square\nof the Domino Carpet, which is a domino half, is described by a 3 \u00d7 3 square.\nSymbol 'O' in this square indicates the presence of a point, symbol '.' \u2014 its\nabsence. Each 3 \u00d7 3 square is delineated from adjacent squares by symbols '#'\nas shown in the examples. It is guaranteed that every box describes the\ncorrect half of a domino. In all pretests the Domino Carpets have the size of\n2 \u00d7 2 and 4 \u00d7 4. Output Print a single number, the number of ways to assemble\nthe Domino Carpet modulo 10^9 + 7, using only standard dominoes of size 1 \u00d7 2.\nExamples Input 3 4 ################# #O..#...#O.O#...# #.O.#.O.#.O.#...#\n#..O#...#O.O#...# ################# #O.O#OOO#O.O#...# #.O.#...#...#.O.#\n#O.O#OOO#O.O#...# ################# #O.O#...#O.O#...# #...#...#...#.O.#\n#O.O#...#O.O#...# ################# Output 3 Input 2 2 ######### #O.O#O.O#\n#.O.#...# #O.O#O.O# ######### #...#O.O# #...#...# #...#O.O# ######### Output 2\nInput 2 2 ######### #..O#O..# #...#...# #O..#..O# ######### #O..#..O#\n#...#...# #..O#O..# ######### Output 0 Note A note to the first example: all\ncorrect ways to make Domino Carpet are represented below: And this way is\nincorrect:",
        "cf_contest_id": 77,
        "cf_index": "D",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 4\r\n#################\r\n#O..#...#O.O#...#\r\n#.O.#.O.#.O.#...#\r\n#..O#...#O.O#...#\r\n#################\r\n#O.O#OOO#O.O#...#\r\n#.O.#...#...#.O.#\r\n#O.O#OOO#O.O#...#\r\n#################\r\n#O.O#...#O.O#...#\r\n#...#...#...#.O.#\r\n#O.O#...#O.O#...#\r\n#################\r\n",
                "3"
            ],
            [
                "2 2\r\n#########\r\n#O.O#O.O#\r\n#.O.#...#\r\n#O.O#O.O#\r\n#########\r\n#...#O.O#\r\n#...#...#\r\n#...#O.O#\r\n#########\r\n",
                "2"
            ],
            [
                "2 2\r\n#########\r\n#..O#O..#\r\n#...#...#\r\n#O..#..O#\r\n#########\r\n#O..#..O#\r\n#...#...#\r\n#..O#O..#\r\n#########\r\n",
                "0"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n#####\r\n#O.O#\r\n#.O.#\r\n#O.O#\r\n#####\r\n",
                "0"
            ]
        ]
    }
]