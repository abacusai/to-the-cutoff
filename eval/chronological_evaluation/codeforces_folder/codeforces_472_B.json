[
    {
        "name": "Design Tutorial: Learn from Life",
        "description": "One way to create a task is to learn from life. You can choose some experience\nin real life, formalize it and then you will get a new task. Let's think about\na scene in real life: there are lots of people waiting in front of the\nelevator, each person wants to go to a certain floor. We can formalize it in\nthe following way. We have n people standing on the first floor, the i-th\nperson wants to go to the fi-th floor. Unfortunately, there is only one\nelevator and its capacity equal to k (that is at most k people can use it\nsimultaneously). Initially the elevator is located on the first floor. The\nelevator needs |a - b| seconds to move from the a-th floor to the b-th floor\n(we don't count the time the people need to get on and off the elevator). What\nis the minimal number of seconds that is needed to transport all the people to\nthe corresponding floors and then return the elevator to the first floor?\nInput The first line contains two integers n and k (1 \u2264 n, k \u2264 2000) \u2014 the\nnumber of people and the maximal capacity of the elevator. The next line\ncontains n integers: f1, f2, ..., fn (2 \u2264 fi \u2264 2000), where fi denotes the\ntarget floor of the i-th person. Output Output a single integer \u2014 the minimal\ntime needed to achieve the goal. Examples Input 3 2 2 3 4 Output 8 Input 4 2\n50 100 50 100 Output 296 Input 10 3 2 2 2 2 2 2 2 2 2 2 Output 8 Note In first\nsample, an optimal solution is: The elevator takes up person #1 and person #2.\nIt goes to the 2nd floor. Both people go out of the elevator. The elevator\ngoes back to the 1st floor. Then the elevator takes up person #3. And it goes\nto the 2nd floor. It picks up person #2. Then it goes to the 3rd floor. Person\n#2 goes out. Then it goes to the 4th floor, where person #3 goes out. The\nelevator goes back to the 1st floor.\n\n",
        "cf_contest_id": 472,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n2 3 4\r\n",
                "8\r\n"
            ],
            [
                "4 2\r\n50 100 50 100\r\n",
                "296\r\n"
            ],
            [
                "10 3\r\n2 2 2 2 2 2 2 2 2 2\r\n",
                "8\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n2\r\n",
                "2\r\n"
            ],
            [
                "2 1\r\n2 2\r\n",
                "4\r\n"
            ],
            [
                "2 2\r\n2 2\r\n",
                "2\r\n"
            ],
            [
                "11 4\r\n2 3 4 5 6 7 8 9 10 11 12\r\n",
                "42\r\n"
            ],
            [
                "70 1311\r\n1146 769 1530 1132 877 1352 1295 1282 1086 914 852 1351 1432 847 1105 776 1278 716 1435 749 1320 869 812 1179 1239 1426 1403 1296 1489 1018 848 1215 1278 1203 1386 1113 812 896 1287 733 1328 1517 964 1317 1487 1322 1281 843 863 1220 790 1121 1442 726 957 1465 974 1314 993 1286 1163 938 902 1197 859 807 718 916 783 1450\r\n",
                "3058\r\n"
            ],
            [
                "22 1481\r\n1555 1499 1615 535 399 795 432 1830 1645 452 278 1173 1501 1779 317 796 1855 1631 651 495 236 1122\r\n",
                "3708\r\n"
            ],
            [
                "100 1\r\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\r\n",
                "19800\r\n"
            ],
            [
                "100 100\r\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\r\n",
                "198\r\n"
            ],
            [
                "2 1\r\n2000 2000\r\n",
                "7996\r\n"
            ],
            [
                "5 3\r\n2000 2000 2000 2000 1999\r\n",
                "7996\r\n"
            ]
        ]
    }
]