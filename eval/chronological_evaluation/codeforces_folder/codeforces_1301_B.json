[
    {
        "name": "Motarack's Birthday",
        "description": "Dark is going to attend Motarack's birthday. Dark decided that the gift he is\ngoing to give to Motarack is an array \n    a\n of \n    n\n non-negative\nintegers. Dark created that array \n    1000\n years ago, so some elements in\nthat array disappeared. Dark knows that Motarack hates to see an array that\nhas two adjacent elements with a high absolute difference between them. He\ndoesn't have much time so he wants to choose an integer \n    k\n (\n    0 \n    \u2264 k\n    \n    \u2264 10^9\n) and replaces all missing elements in the array \n    a\n with\n\n    k\n. Let \n    m\n be the maximum absolute difference between all adjacent\nelements (i.e. the maximum value of \n    |a_i - a_i+1|\n for all \n    1 \n    \u2264\n    i \n    \u2264 n - 1\n) in the array \n    a\n after Dark replaces all missing\nelements with \n    k\n. Dark should choose an integer \n    k\n so that \n    m\n\nis minimized. Can you help him? Input The input consists of multiple test\ncases. The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains one integer \n    n\n (\n    2\n    \n    \u2264 n \n    \u2264 10^5\n) \u2014 the size of the array \n    a\n. The second line of\neach test case contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    -1\n    \n    \u2264 a_i \n    \u2264 10 ^ 9\n). If \n    a_i = -1\n, then the \n    i\n-th integer\nis missing. It is guaranteed that at least one integer is missing in every\ntest case. It is guaranteed, that the sum of \n    n\n for all test cases does\nnot exceed \n    4 \n    \u00b7 10 ^ 5\n. Output Print the answers for each test\ncase in the following format: You should print two integers, the minimum\npossible value of \n    m\n and an integer \n    k\n (\n    0 \n    \u2264 k \n    \u2264\n    10^9\n) that makes the maximum absolute difference between adjacent\nelements in the array \n    a\n equal to \n    m\n. Make sure that after replacing\nall the missing elements with \n    k\n, the maximum absolute difference between\nadjacent elements becomes \n    m\n. If there is more than one possible \n    k\n,\nyou can print any of them. Example Input 7 5 -1 10 -1 12 -1 5 -1 40 35 -1 35 6\n-1 -1 9 -1 3 -1 2 -1 -1 2 0 -1 4 1 -1 3 -1 7 1 -1 7 5 2 -1 5 Output 1 11 5 35\n3 6 0 42 0 0 1 2 3 4 Note In the first test case after replacing all missing\nelements with \n    11\n the array becomes \n    [11, 10, 11, 12, 11]\n. The\nabsolute difference between any adjacent elements is \n    1\n. It is impossible\nto choose a value of \n    k\n, such that the absolute difference between any\nadjacent element will be \n    \u2264 0\n. So, the answer is \n    1\n. In the\nthird test case after replacing all missing elements with \n    6\n the array\nbecomes \n    [6, 6, 9, 6, 3, 6]\n. \n    |a_1 - a_2| = |6 - 6| = 0\n; \n    |a_2 -\n    a_3| = |6 - 9| = 3\n; \n    |a_3 - a_4| = |9 - 6| = 3\n; \n    |a_4 - a_5| = |6 -\n    3| = 3\n; \n    |a_5 - a_6| = |3 - 6| = 3\n. So, the maximum difference between\nany adjacent elements is \n    3\n.\n\n",
        "cf_contest_id": 1301,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "ternary search"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n5\r\n-1 10 -1 12 -1\r\n5\r\n-1 40 35 -1 35\r\n6\r\n-1 -1 9 -1 3 -1\r\n2\r\n-1 -1\r\n2\r\n0 -1\r\n4\r\n1 -1 3 -1\r\n7\r\n1 -1 7 5 2 -1 5\r\n",
                "1 11\r\n5 40\r\n3 6\r\n0 0\r\n0 0\r\n1 2\r\n3 4\r\n"
            ]
        ],
        "private_cases": []
    }
]