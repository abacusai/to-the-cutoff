[
    {
        "name": "Roads Orientation Problem",
        "description": "Berland consists of n cities and m bidirectional roads connecting pairs of\ncities. There is no road connecting a city to itself, and between any pair of\ncities there is no more than one road. It is possible to reach any city from\nany other moving along roads. Currently Mr. President is in the city s and his\ndestination is the city t. He plans to move along roads from s to t (s \u2260 t).\nThat's why Ministry of Fools and Roads has difficult days. The minister is\nafraid that Mr. President could get into a traffic jam or get lost. Who knows\nwhat else can happen! To be sure that everything goes as planned, the minister\ndecided to temporarily make all roads one-way. So each road will be oriented\nin one of two possible directions. The following conditions must be satisfied:\nThere should be no cycles along roads after orientation. The city s should be\nthe only such city that all its roads are oriented out (i.e. there are no\ningoing roads to the city s and the city s is the only such city). The city t\nshould be the only such city that all its roads are oriented in (i.e. there\nare no outgoing roads from the city t and the city t is the only such city).\nHelp the minister solve his problem. Write a program to find any such\norientation of all roads or report that no solution exists. Input Each test in\nthis problem contains one or more test cases to solve. The first line of the\ninput contains positive number T \u2014 the number of cases to solve. Each case\nstarts with a line containing four integers n, m, s and t (2 \u2264 n \u2264 4\u00b710^5, 1 \u2264\nm \u2264 10^6, 1 \u2264 s, t \u2264 n, s \u2260 t) \u2014 the number of cities, the number of roads and\nindices of departure and destination cities. The cities are numbered from 1 to\nn. The following m lines contain roads, one road per line. Each road is given\nas two integer numbers xj, yj (1 \u2264 xj, yj \u2264 n, xj \u2260 yj), which means that the\nj-th road connects cities xj and yj. There is at most one road between any\npair of cities. It is possible to reach any city from any other moving along\nroads. The sum of values n over all cases in a test doesn't exceed 4\u00b710^5. The\nsum of values m over all cases in a test doesn't exceed 10^6. Output For each\ncase print \"Yes\" if the answer exists. In the following m lines print roads in\nthe required directions. You can print roads in arbitrary order. If there are\nmultiple answers, print any of them. Print the only line \"No\" if there is no\nanswer for a case. Example Input 2 4 4 1 2 1 2 2 3 3 4 4 1 3 2 1 3 3 1 2 3\nOutput Yes 1 2 3 2 4 3 1 4 No\n\n",
        "cf_contest_id": 730,
        "cf_index": "K",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "graphs"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n4 4 1 2\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n3 2 1 3\r\n3 1\r\n2 3\r\n",
                "Yes\r\n1 2\r\n3 2\r\n4 3\r\n1 4\r\nNo\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n7 11 1 2\r\n1 2\r\n1 3\r\n1 4\r\n1 7\r\n2 3\r\n2 5\r\n3 4\r\n4 6\r\n4 5\r\n5 6\r\n6 7\r\n7 11 7 6\r\n1 2\r\n1 3\r\n1 4\r\n1 7\r\n2 3\r\n2 5\r\n3 4\r\n4 6\r\n4 5\r\n5 6\r\n6 7\r\n7 10 1 2\r\n1 3\r\n1 4\r\n1 7\r\n2 3\r\n2 5\r\n3 4\r\n4 6\r\n4 5\r\n5 6\r\n6 7\r\n",
                "Yes\r\n1 2\r\n1 3\r\n1 4\r\n1 7\r\n3 2\r\n5 2\r\n4 3\r\n6 4\r\n5 4\r\n6 5\r\n7 6\r\nYes\r\n1 2\r\n1 3\r\n1 4\r\n7 1\r\n2 3\r\n2 5\r\n3 4\r\n4 6\r\n4 5\r\n5 6\r\n7 6\r\nYes\r\n1 3\r\n1 4\r\n1 7\r\n3 2\r\n5 2\r\n3 4\r\n6 4\r\n4 5\r\n6 5\r\n7 6\r\n"
            ]
        ]
    }
]