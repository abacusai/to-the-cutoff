[
    {
        "name": "Make It Increasing",
        "description": "You are given an array of \n    n\n integers \n    a_1\n, \n    a_2\n, ...,\n\n    a_n\n, and a set \n    b\n of \n    k\n distinct integers from \n    1\n to\n\n    n\n. In one operation, you may choose two integers \n    i\n and \n    x\n\n(\n    1 \n    \u2264 i \n    \u2264 n\n, \n    x\n can be any integer) and assign \n    a_i :=\n    x\n. This operation can be done only if \n    i\n does not belong to the set\n\n    b\n. Calculate the minimum number of operations you should perform so the\narray \n    a\n is increasing (that is, \n    a_1 < a_2 < a_3 < \n    \u2026 < a_n\n),\nor report that it is impossible. Input The first line contains two integers\n\n    n\n and \n    k\n (\n    1 \n    \u2264 n \n    \u2264 5 \n    \u00b7 10^5\n, \n    0 \n    \u2264 k \n    \u2264\n    n\n) \u2014 the size of the array \n    a\n and the set \n    b\n, respectively. The\nsecond line contains \n    n\n integers \n    a_1\n, \n    a_2\n, ..., \n    a_n\n\n(\n    1 \n    \u2264 a_i \n    \u2264 10^9\n). Then, if \n    k \n     0\n, the third line\nfollows, containing \n    k\n integers \n    b_1\n, \n    b_2\n, ..., \n    b_k\n\n(\n    1 \n    \u2264 b_1 < b_2 < \n    \u2026 < b_k \n    \u2264 n\n). If \n    k = 0\n, this line\nis skipped. Output If it is impossible to make the array \n    a\n increasing\nusing the given operations, print \n    -1\n. Otherwise, print one integer \u2014 the\nminimum number of operations you have to perform. Examples Input 7 2 1 2 1 1 3\n5 1 3 5 Output 4 Input 3 3 1 3 2 1 2 3 Output -1 Input 5 0 4 3 1 2 3 Output 2\nInput 10 3 1 3 5 6 12 9 8 10 13 15 2 4 9 Output 3\n\n",
        "cf_contest_id": 1437,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "dp",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 2\r\n1 2 1 1 3 5 1\r\n3 5\r\n",
                "4\r\n"
            ],
            [
                "3 3\r\n1 3 2\r\n1 2 3\r\n",
                "-1\r\n"
            ],
            [
                "5 0\r\n4 3 1 2 3\r\n",
                "2\r\n"
            ],
            [
                "10 3\r\n1 3 5 6 12 9 8 10 13 15\r\n2 4 9\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "20 5\r\n19 4 11 10 7 18 7 10 12 13 14 15 16 17 22 26 29 23 30 22\r\n2 9 11 12 14\r\n",
                "8\r\n"
            ],
            [
                "50 15\r\n1 2 3 5 9 10 14 15 17 16 18 19 21 23 22 27 27 36 26 23 23 32 27 38 40 41 42 46 51 56 55 52 55 59 60 62 66 68 69 76 83 84 89 90 29 92 94 95 98 99\r\n1 3 4 8 12 24 27 29 34 35 36 41 43 48 49\r\n",
                "13\r\n"
            ],
            [
                "50 40\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\r\n1 2 4 5 6 7 8 10 11 12 13 14 15 17 18 19 21 22 23 24 25 26 28 29 30 31 33 35 36 37 38 40 41 42 45 46 47 48 49 50\r\n",
                "0\r\n"
            ],
            [
                "50 35\r\n69 2 3 15 16 18 18 20 21 22 33 31 38 47 50 42 50 13 1 58 58 59 60 67 61 52 61 61 64 65 33 28 66 4 8 96 32 68 69 74 83 84 85 87 87 88 64 89 89 93\r\n2 3 4 5 6 7 8 9 10 11 13 14 15 17 20 21 22 23 27 28 29 30 33 38 39 40 41 42 43 44 45 46 48 49 50\r\n",
                "-1\r\n"
            ],
            [
                "100 0\r\n4 20 52 2 7 36 8 73 9 99 13 19 14 89 32 2 6 2 16 21 47 22 66 23 25 95 28 4 29 64 30 31 7 48 32 51 35 37 77 57 40 42 56 40 43 44 46 13 47 12 48 49 24 51 69 53 54 98 21 57 59 61 62 52 63 30 68 32 69 39 8 67 71 59 72 81 76 77 11 82 85 14 83 33 86 89 89 90 43 96 91 31 93 69 58 94 45 96 2 99\r\n",
                "80\r\n"
            ],
            [
                "1 0\r\n1337\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n1337\r\n1\r\n",
                "0\r\n"
            ],
            [
                "4 2\r\n1 1 2 2\r\n2 4\r\n",
                "-1\r\n"
            ],
            [
                "100 2\r\n96 58 6 51 50 14 42 14 8 23 50 87 18 38 66 12 60 34 67 79 73 79 100 94 89 73 4 13 30 3 34 26 41 65 18 71 29 3 40 65 77 83 51 20 38 45 43 64 7 12 97 42 88 32 62 61 92 17 83 14 3 23 5 58 3 64 17 35 23 86 65 22 44 81 30 95 62 63 17 85 3 3 17 56 26 94 59 84 3 88 70 53 52 74 12 47 79 96 72 30\r\n4 21\r\n",
                "94\r\n"
            ]
        ]
    }
]