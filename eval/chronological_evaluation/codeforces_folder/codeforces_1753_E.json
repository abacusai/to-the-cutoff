[
    {
        "name": "N Machines",
        "description": "You have been invited as a production process optimization specialist to some\nvery large company. The company has \n    n\n machines at its factory, standing\none behind another in the production chain. Each machine can be described in\none of the following two ways: \n    (+,\u00a0a_i)\n or \n    (*,\u00a0a_i)\n. If a\nworkpiece with the value \n    x\n is supplied to the machine of kind\n\n    (+,\u00a0a_i)\n, then the output workpiece has value \n    x + a_i\n. If a\nworkpiece with the value \n    x\n is supplied to the machine of kind\n\n    (*,\u00a0a_i)\n, then the output workpiece has value \n    x \n    \u00b7 a_i\n. The\nwhole production process is as follows. The workpiece with the value \n    1\n\nis supplied to the first machine, then the workpiece obtained after the\noperation of the first machine is supplied to the second machine, then the\nworkpiece obtained after the operation of the second machine is supplied to\nthe third machine, and so on. The company is not doing very well, so now the\nvalue of the resulting product does not exceed \n    2 \n    \u00b7 10^9\n. The\ndirectors of the company are not satisfied with the efficiency of the\nproduction process and have given you a budget of \n    b\n coins to optimize\nit. To optimize production you can change the order of machines in the chain.\nNamely, by spending \n    p\n coins, you can take any machine of kind\n\n    (+,\u00a0a_i)\n and move it to any place in the chain without changing the\norder of other machines. Also, by spending \n    m\n coins, you can take any\nmachine of kind \n    (*,\u00a0a_i)\n and move it to any place in the chain. What is\nthe maximum value of the resulting product that can be achieved if the total\ncost of movements that are made should not exceed \n    b\n coins? Input The\nfirst line contains four integers \n    n\n, \n    b\n, \n    p\n and \n    m\n (\n    1\n    \n    \u2264 n \n    \u2264 10^6\n, \n    1 \n    \u2264 b, p, m \n    \u2264 10^9\n) \u2014 the number of\nmachine at the factory, your budget and costs of movements of both kinds of\nmachines. Each of the following \n    n\n lines contains description of a\nmachine. The description begins with one of the following characters: \"+\" or\n\"*\", that denotes the kind of the machine. Then an integer \n    a_i\n follows\n(\n    1 \n    \u2264 a_i \n    \u2264 2 \n    \u00b7 10^9\n). It's guaranteed that the current\nvalue of the resulting product does not exceed \n    2 \n    \u00b7 10^9\n. Output\nPrint one integer \u2014 the maximum value of the resulting product that can be\nachieved if the total cost of movements that are made does not exceed \n    b\n\ncoins. Examples Input 3 2 1 3 * 2  1  1 Output 6 Input 4 2 2 2 * 2  1 *\n3  2 Output 21 Input 8 2 1 1 * 2  1 * 4  1  1  1 * 5  3 Output 240\nNote In the first example our budget is too low to move machine \n    (*,\u00a02)\n,\nbut we can move both machines \n    (+,\u00a01)\n to the beginning of the chain. So\nthe final chain will be \n    (+,\u00a01)\n \n    (+,\u00a01)\n \n    (*,\u00a02)\n. If the\nworkpiece with the value \n    1\n is supplied to the first machine, its value\nwill be changed in the following way: \n    1, 2, 3, 6\n. In the second example\nwe can move only one machine. Let's move machine \n    (+,\u00a02)\n to the beginning\nof the chain. The final chain will be \n    (+,\u00a02)\n \n    (*,\u00a02)\n \n    (+,\u00a01)\n\n\n    (*,\u00a03)\n. The value of the workpiece will be changed in the following way:\n\n    1, 3, 6, 7, 21\n. In the third example we can place machine \n    (*,\u00a04)\n\nbefore the machine \n    (*,\u00a05)\n, and move machine \n    (+,\u00a03)\n to the\nbeginning of the chain. The final chain will be \n    (+,\u00a03)\n \n    (*,\u00a02)\n\n\n    (+,\u00a01)\n \n    (+,\u00a01)\n \n    (+,\u00a01)\n \n    (+,\u00a01)\n \n    (*,\u00a04)\n \n    (*,\u00a05)\n.\nThe value of the workpiece will be changed in the following way: \n    1, 4, 8,\n    9, 10, 11, 12, 48, 240\n.\n\n",
        "cf_contest_id": 1753,
        "cf_index": "E",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2 1 3\r\n* 2\r\n+ 1\r\n+ 1\r\n",
                "6"
            ],
            [
                "4 2 2 2\r\n* 2\r\n+ 1\r\n* 3\r\n+ 2\r\n",
                "21"
            ],
            [
                "8 2 1 1\r\n* 2\r\n+ 1\r\n* 4\r\n+ 1\r\n+ 1\r\n+ 1\r\n* 5\r\n+ 3\r\n",
                "240"
            ]
        ],
        "private_cases": []
    }
]