[
    {
        "name": "Array Partition",
        "description": "You are given an array \n    a\n consisting of \n    n\n integers. Let \n    min(l,\n    r)\n be the minimum value among \n    a_l, a_l + 1, \n    \u2026, a_r\n and\n\n    max(l, r)\n be the maximum value among \n    a_l, a_l + 1, \n    \u2026,\n    a_r\n. Your task is to choose three positive (greater than \n    0\n) integers\n\n    x\n, \n    y\n and \n    z\n such that: \n    x + y + z = n\n; \n    max(1, x) =\n    min(x + 1, x + y) = max(x + y + 1, n)\n. In other words, you have to split\nthe array \n    a\n into three consecutive non-empty parts that cover the whole\narray and the maximum in the first part equals the minimum in the second part\nand equals the maximum in the third part (or determine it is impossible to\nfind such a partition). Among all such triples (partitions), you can choose\nany. You have to answer \n    t\n independent test cases. Input The first line\nof the input contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2 \n    \u00b7\n    10^4\n) \u2014 the number of test cases. Then \n    t\n test cases follow. The first\nline of the test case contains one integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the length of \n    a\n. The second line of the test case\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^9\n), where \n    a_i\n is the \n    i\n-th element of \n    a\n. It is\nguaranteed that the sum of \n    n\n does not exceed \n    2 \n    \u00b7 10^5\n\n(\n    \u2211 n \n    \u2264 2 \n    \u00b7 10^5\n). Output For each test case, print the\nanswer: NO in the only line if there is no such partition of \n    a\n that\nsatisfies the conditions from the problem statement. Otherwise, print YES in\nthe first line and three integers \n    x\n, \n    y\n and \n    z\n (\n    x + y + z =\n    n\n) in the second line. If there are several answers, you can print any.\nExample Input 6 11 1 2 3 3 3 4 4 3 4 2 1 8 2 9 1 7 3 9 4 1 9 2 1 4 2 4 3 3 1 2\n7 4 2 1 1 4 1 4 5 1 1 1 1 1 7 4 3 4 3 3 3 4 Output YES 6 1 4 NO YES 2 5 2 YES\n4 1 2 YES 1 1 3 YES 2 1 4\n\n",
        "cf_contest_id": 1454,
        "cf_index": "F",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n11\r\n1 2 3 3 3 4 4 3 4 2 1\r\n8\r\n2 9 1 7 3 9 4 1\r\n9\r\n2 1 4 2 4 3 3 1 2\r\n7\r\n4 2 1 1 4 1 4\r\n5\r\n1 1 1 1 1\r\n7\r\n4 3 4 3 3 3 4\r\n",
                "YES\r\n6 1 4\r\nNO\r\nYES\r\n2 5 2\r\nYES\r\n4 1 2\r\nYES\r\n1 1 3\r\nYES\r\n2 1 4\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n3\r\n1 1 1\r\n3\r\n1 1 1\r\n3\r\n1 1 1\r\n3\r\n1 1 1\r\n",
                "YES\r\n1 1 1\r\nYES\r\n1 1 1\r\nYES\r\n1 1 1\r\nYES\r\n1 1 1\r\n"
            ],
            [
                "3\r\n3\r\n1 1 1\r\n3\r\n1 1 1\r\n3\r\n1 1 1\r\n",
                "YES\r\n1 1 1\r\nYES\r\n1 1 1\r\nYES\r\n1 1 1\r\n"
            ],
            [
                "8\r\n3\r\n1000000000 1000000000 1000000000\r\n3\r\n1 1000000000 1000000000\r\n3\r\n1000000000 1 1000000000\r\n3\r\n1 1 1000000000\r\n3\r\n1000000000 1000000000 1\r\n3\r\n1 1000000000 1\r\n3\r\n1000000000 1 1\r\n3\r\n1 1 1\r\n",
                "YES\r\n1 1 1\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nNO\r\nYES\r\n1 1 1\r\n"
            ]
        ]
    }
]