[
    {
        "name": "Working Week",
        "description": "Your working week consists of \n    n\n days numbered from \n    1\n to \n    n\n,\nafter day \n    n\n goes day \n    1\n again. And \n    3\n of them are days off.\nOne of the days off is the last day, day \n    n\n. You have to decide when the\nother two are. Choosing days off, you pursue two goals: No two days should go\none after the other. Note that you can't make day \n    1\n a day off because it\nfollows day \n    n\n. Working segments framed by days off should be as\ndissimilar as possible in duration. More specifically, if the segments are of\nsize \n    l_1\n, \n    l_2\n, and \n    l_3\n days long, you want to maximize\n\n    min(|l_1 - l_2|, |l_2 - l_3|, |l_3 - l_1|)\n. Output the maximum value\nof \n    min(|l_1 - l_2|, |l_2 - l_3|, |l_3 - l_1|)\n that can be obtained.\nInput The first line of the input contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The description of test\ncases follows. The only line of each test case contains the integer \n    n\n\n(\n    6 \n    \u2264 n \n    \u2264 10^9\n). Output For each test case, output one integer \u2014\nthe maximum possible obtained value. Example Input 3 6 10 1033 Output 0 1 342\nNote In the image below you can see the example solutions for the first two\ntest cases. Chosen days off are shown in purple. Working segments are\nunderlined in green. In test case \n    1\n, the only options for days off are\ndays \n    2\n, \n    3\n, and \n    4\n (because \n    1\n and \n    5\n are next to\nday \n    n\n). So the only way to place them without selecting neighboring days\nis to choose days \n    2\n and \n    4\n. Thus, \n    l_1 = l_2 = l_3 = 1\n, and\nthe answer \n    min(|l_1 - l_2|, |l_2 - l_3|, |l_3 - l_1|) = 0\n. For test\ncase \n    2\n, one possible way to choose days off is shown. The working\nsegments have the lengths of \n    2\n, \n    1\n, and \n    4\n days. So the\nminimum difference is \n    1 = \n    min(1, 3, 2) = \n    min(|2 - 1|, |1 - 4|, |4 -\n    2|)\n. It can be shown that there is no way to make it larger.\n\n",
        "cf_contest_id": 1735,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n6\r\n10\r\n1033\r\n",
                "0\r\n1\r\n342\r\n"
            ]
        ],
        "private_cases": []
    }
]