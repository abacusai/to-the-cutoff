[
    {
        "name": "Sum on Subarrays",
        "description": "For an array \n    a = [a_1, a_2, \n    \u2026, a_n]\n, let's denote its subarray\n\n    a[l, r]\n as the array \n    [a_l, a_l+1, \n    \u2026, a_r]\n. For example,\nthe array \n    a = [1, -3, 1]\n has \n    6\n non-empty subarrays: \n    a[1,1] =\n    [1]\n; \n    a[1,2] = [1,-3]\n; \n    a[1,3] = [1,-3,1]\n; \n    a[2,2] = [-3]\n;\n\n    a[2,3] = [-3,1]\n; \n    a[3,3] = [1]\n. You are given two integers \n    n\n\nand \n    k\n. Construct an array \n    a\n consisting of \n    n\n integers such\nthat: all elements of \n    a\n are from \n    -1000\n to \n    1000\n; \n    a\n has\nexactly \n    k\n subarrays with positive sums; the rest \n    (n+1)\n    \n    \u00b7 n2-k\n subarrays of \n    a\n have negative sums. Input The first\nline contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 5000\n) \u2014 the number of\ntest cases. Each test case consists of one line containing two integers\n\n    n\n and \n    k\n (\n    2 \n    \u2264 n \n    \u2264 30\n; \n    0 \n    \u2264 k \n    \u2264\n    (n+1) \n    \u00b7 n2\n). Output For each test case, print \n    n\n\nintegers \u2014 the elements of the array meeting the constraints. It can be shown\nthat the answer always exists. If there are multiple answers, print any of\nthem. Example Input 4 3 2 2 0 2 2 4 6 Output 1 -3 1 -13 -42 -13 42 -3 -4 10 -2\n\n",
        "cf_contest_id": 1809,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n3 2\r\n2 0\r\n2 2\r\n4 6\r\n",
                "2 -1 -99\r\n-99 -99\r\n2 -1\r\n2 2 2 -99\r\n"
            ]
        ],
        "private_cases": []
    }
]