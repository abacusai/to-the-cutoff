[
    {
        "name": "Number Deletion Game",
        "description": "Alice and Bob play a game. They have a set that initially consists of \n    n\n\nintegers. The game is played in \n    k\n turns. During each turn, the following\nevents happen: firstly, Alice chooses an integer from the set. She can choose\nany integer except for the maximum one. Let the integer chosen by Alice be\n\n    a\n; secondly, Bob chooses an integer from the set. He can choose any\ninteger that is greater than \n    a\n. Let the integer chosen by Bob be\n\n    b\n; finally, both \n    a\n and \n    b\n are erased from the set, and the\nvalue of \n    b - a\n is added to the score of the game. Initially, the score\nis \n    0\n. Alice wants to maximize the resulting score, Bob wants to minimize\nit. Assuming that both Alice and Bob play optimally, calculate the resulting\nscore of the game. Input The first line contains two integers \n    n\n and\n\n    k\n (\n    2 \n    \u2264 n \n    \u2264 400\n, \n    1 \n    \u2264 k \n    \u2264\n    \u230a\n    n/2\n    \u230b\n) \u2014 the initial size of the set and the\nnumber of turns in the game. The second line contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^6\n) \u2014 the initial contents of\nthe set. These integers are pairwise distinct. Output Print one integer \u2014 the\nresulting score of the game (assuming that both Alice and Bob play optimally).\nExamples Input 5 2 3 4 1 5 2 Output 4 Input 7 3 101 108 200 1 201 109 100\nOutput 283\n\n",
        "cf_contest_id": 1431,
        "cf_index": "G",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "dp",
            "games",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5 2\r\n3 4 1 5 2\r\n",
                "4\r\n"
            ],
            [
                "7 3\r\n101 108 200 1 201 109 100\r\n",
                "283\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1000000 1\r\n",
                "999999\r\n"
            ],
            [
                "2 1\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "10 1\r\n574159 311905 962312 419776 161298 821630 659552 209764 24964 780839\r\n",
                "154383\r\n"
            ],
            [
                "11 1\r\n699220 14874 766999 571060 95453 125812 952695 578020 825054 574568 110759\r\n",
                "445248\r\n"
            ],
            [
                "10 2\r\n653623 910298 449009 318843 292841 950471 138670 816575 407928 884642\r\n",
                "613261\r\n"
            ],
            [
                "11 2\r\n2877 580563 220992 535535 226997 254653 431814 376319 208019 678371 104564\r\n",
                "336377\r\n"
            ],
            [
                "10 3\r\n989983 475987 903001 442102 648576 79313 841980 456090 15085 245341\r\n",
                "1154311\r\n"
            ],
            [
                "11 3\r\n115045 178956 642281 658794 582732 416199 135124 983130 590983 814878 98369\r\n",
                "1160789\r\n"
            ],
            [
                "10 4\r\n134856 41675 324290 373873 780120 208154 545291 287093 398049 349144\r\n",
                "928652\r\n"
            ],
            [
                "11 4\r\n451405 777348 128977 557861 714275 545040 805730 814133 198139 142873 316366\r\n",
                "1485741\r\n"
            ],
            [
                "10 5\r\n438512 640068 810987 497131 135855 369699 248601 893904 781013 452947\r\n",
                "1977489\r\n"
            ],
            [
                "11 5\r\n563574 343037 550266 713823 70011 673882 284848 453648 613808 279380 310172\r\n",
                "1567730\r\n"
            ]
        ]
    }
]