[
    {
        "name": "Vasya and Maximum Matching",
        "description": "Vasya has got a tree consisting of \n    n\n vertices. He wants to delete some\n(possibly zero) edges in this tree such that the maximum matching in the\nresulting graph is unique. He asks you to calculate the number of ways to\nchoose a set of edges to remove. A matching in the graph is a subset of its\nedges such that there is no vertex incident to two (or more) edges from the\nsubset. A maximum matching is a matching such that the number of edges in the\nsubset is maximum possible among all matchings in this graph. Since the answer\nmay be large, output it modulo \n    998244353\n. Input The first line contains\none integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the number of\nvertices in the tree. Each of the next \n    n \u2212 1\n lines contains two integers\n\n    u\n and \n    v\n (\n    1 \n    \u2264 u, v \n    \u2264 n, u \n    \u2260 v\n) denoting an edge\nbetween vertex \n    u\n and vertex \n    v\n. It is guaranteed that these edges\nform a tree. Output Print one integer \u2014 the number of ways to delete some\n(possibly empty) subset of edges so that the maximum matching in the resulting\ngraph is unique. Print the answer modulo \n    998244353\n. Examples Input 4 1 2\n1 3 1 4 Output 4 Input 4 1 2 2 3 3 4 Output 6 Input 1 Output 1 Note Possible\nways to delete edges in the first example: delete \n    (1, 2)\n and \n    (1,\n    3)\n. delete \n    (1, 2)\n and \n    (1, 4)\n. delete \n    (1, 3)\n and \n    (1,\n    4)\n. delete all edges. Possible ways to delete edges in the second example:\ndelete no edges. delete \n    (1, 2)\n and \n    (2, 3)\n. delete \n    (1, 2)\n and\n\n    (3, 4)\n. delete \n    (2, 3)\n and \n    (3, 4)\n. delete \n    (2, 3)\n.\ndelete all edges.\n\n",
        "cf_contest_id": 1032,
        "cf_index": "F",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 2\r\n1 3\r\n1 4\r\n",
                "4"
            ],
            [
                "4\r\n1 2\r\n2 3\r\n3 4\r\n",
                "6"
            ],
            [
                "1\r\n",
                "1"
            ]
        ],
        "private_cases": [
            [
                "10\r\n7 4\r\n3 8\r\n7 8\r\n9 5\r\n10 8\r\n9 7\r\n2 4\r\n1 3\r\n6 9\r\n",
                "161"
            ]
        ]
    }
]