[
    {
        "name": "Omkar and Waterslide",
        "description": "Omkar is building a waterslide in his water park, and he needs your help to\nensure that he does it as efficiently as possible. Omkar currently has \n    n\n\nsupports arranged in a line, the \n    i\n-th of which has height \n    a_i\n.\nOmkar wants to build his waterslide from the right to the left, so his\nsupports must be nondecreasing in height in order to support the waterslide.\nIn \n    1\n operation, Omkar can do the following: take any contiguous\nsubsegment of supports which is nondecreasing by heights and add \n    1\n to\neach of their heights. Help Omkar find the minimum number of operations he\nneeds to perform to make his supports able to support his waterslide! An array\n\n    b\n is a subsegment of an array \n    c\n if \n    b\n can be obtained from\n\n    c\n by deletion of several (possibly zero or all) elements from the\nbeginning and several (possibly zero or all) elements from the end. An array\n\n    b_1, b_2, \n    \u2026, b_n\n is called nondecreasing if \n    b_i\n    \u2264 b_i+1\n\nfor every \n    i\n from \n    1\n to \n    n-1\n. Input Each test contains multiple\ntest cases. The first line contains the number of test cases \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 100\n). Description of the test cases follows. The first line\nof each test case contains an integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n) \u2014 the number of supports Omkar has. The second line of each test case\ncontains \n    n\n integers \n    a_1,a_2,...,a_n\n \n    (0 \n    \u2264 a_i\n    \u2264 10^9)\n \u2014 the heights of the supports. It is guaranteed that the sum\nof \n    n\n over all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output\nFor each test case, output a single integer \u2014 the minimum number of operations\nOmkar needs to perform to make his supports able to support his waterslide.\nExample Input 3 4 5 3 2 5 5 1 2 3 5 3 3 1 1 1 Output 3 2 0 Note The subarray\nwith which Omkar performs the operation is bolded. In the first test case:\nFirst operation: \n    [5, 3, \n    2, 5] \n    \u2192 [5, 3, \n    3, 5]\n\nSecond operation: \n    [5, \n    3, \n    3, 5] \n    \u2192 [5,\n    \n    4, \n    4, 5]\n Third operation: \n    [5, \n    4,\n    \n    4, 5] \n    \u2192 [5, \n    5, \n    5, 5]\n In the third test\ncase, the array is already nondecreasing, so Omkar does \n    0\n operations.\n\n",
        "cf_contest_id": 1392,
        "cf_index": "C",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4\r\n5 3 2 5\r\n5\r\n1 2 3 5 3\r\n3\r\n1 1 1\r\n",
                "3\r\n2\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1\r\n943795198\r\n",
                "0\r\n"
            ],
            [
                "2\r\n2\r\n1 3\r\n2\r\n3 1\r\n",
                "0\r\n2\r\n"
            ],
            [
                "1\r\n4\r\n6 5 5 6\r\n",
                "1\r\n"
            ],
            [
                "1\r\n5\r\n4 4 1 1 1\r\n",
                "3\r\n"
            ]
        ]
    }
]