[
    {
        "name": "Replace the Numbers",
        "description": "You have an array of integers (initially empty). You have to perform \n    q\n\nqueries. Each query is of one of two types: \"\n    1\n \n    x\n\" \u2014 add the\nelement \n    x\n to the end of the array; \"\n    2\n \n    x\n \n    y\n\" \u2014 replace\nall occurrences of \n    x\n in the array with \n    y\n. Find the resulting array\nafter performing all the queries. Input The first line contains a single\ninteger \n    q\n (\n    1 \n    \u2264 q \n    \u2264 5 \n    \u00b7 10^5\n) \u2014 the number of\nqueries. Next \n    q\n lines contain queries (one per line). Each query is of\none of two types: \"\n    1\n \n    x\n\" (\n    1 \n    \u2264 x \n    \u2264 5 \n    \u00b7 10^5\n);\n\"\n    2\n \n    x\n \n    y\n\" (\n    1 \n    \u2264 x, y \n    \u2264 5 \n    \u00b7 10^5\n). It's\nguaranteed that there is at least one query of the first type. Output In a\nsingle line, print \n    k\n integers \u2014 the resulting array after performing all\nthe queries, where \n    k\n is the number of queries of the first type.\nExamples Input 7 1 3 1 1 2 1 2 1 2 1 1 1 2 2 1 3 Output 3 2 2 3 2 Input 4 1 1\n1 2 1 1 2 2 2 Output 1 2 1 Input 8 2 1 4 1 1 1 4 1 2 2 2 4 2 4 3 1 2 2 2 7\nOutput 1 3 3 7 Note In the first example, the array changes as follows:\n\n    []\n \n    \u2192\n \n    [3]\n \n    \u2192\n \n    [3, 1]\n\n\n    \u2192\n \n    [3, 2]\n \n    \u2192\n \n    [3, 2, 2]\n\n\n    \u2192\n \n    [3, 2, 2, 1]\n \n    \u2192\n \n    [3, 2, 2, 1,\n    2]\n \n    \u2192\n \n    [3, 2, 2, 3, 2]\n. In the second example, the\narray changes as follows: \n    []\n \n    \u2192\n \n    [1]\n\n\n    \u2192\n \n    [1, 2]\n \n    \u2192\n \n    [1, 2, 1]\n\n\n    \u2192\n \n    [1, 2, 1]\n. In the third example, the array changes\nas follows: \n    []\n \n    \u2192\n \n    []\n \n    \u2192\n\n\n    [1]\n \n    \u2192\n \n    [1, 4]\n \n    \u2192\n \n    [1, 4, 2]\n\n\n    \u2192\n \n    [1, 4, 4]\n \n    \u2192\n \n    [1, 3, 3]\n\n\n    \u2192\n \n    [1, 3, 3, 2]\n \n    \u2192\n \n    [1, 3, 3, 7]\n.\n\n",
        "cf_contest_id": 1620,
        "cf_index": "E",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures",
            "dsu",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n1 3\r\n1 1\r\n2 1 2\r\n1 2\r\n1 1\r\n1 2\r\n2 1 3\r\n",
                "3 2 2 3 2\r\n"
            ],
            [
                "4\r\n1 1\r\n1 2\r\n1 1\r\n2 2 2\r\n",
                "1 2 1\r\n"
            ],
            [
                "8\r\n2 1 4\r\n1 1\r\n1 4\r\n1 2\r\n2 2 4\r\n2 4 3\r\n1 2\r\n2 2 7\r\n",
                "1 3 3 7\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 2002\r\n",
                "2002\r\n"
            ],
            [
                "1\r\n1 500\r\n",
                "500\r\n"
            ],
            [
                "1\r\n1 50\r\n",
                "50\r\n"
            ],
            [
                "1\r\n1 114514\r\n",
                "114514\r\n"
            ]
        ]
    }
]