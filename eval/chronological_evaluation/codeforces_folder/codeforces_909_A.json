[
    {
        "name": "Generate Login",
        "description": "The preferred way to generate user login in Polygon is to concatenate a prefix\nof the user's first name and a prefix of their last name, in that order. Each\nprefix must be non-empty, and any of the prefixes can be the full name.\nTypically there are multiple possible logins for each person. You are given\nthe first and the last name of a user. Return the alphabetically earliest\nlogin they can get (regardless of other potential Polygon users). As a\nreminder, a prefix of a string s is its substring which occurs at the\nbeginning of s: \"a\", \"ab\", \"abc\" etc. are prefixes of string \"abcdef\" but\n\"b\" and 'bc\" are not. A string a is alphabetically earlier than a string b, if\na is a prefix of b, or a and b coincide up to some position, and then a has a\nletter that is alphabetically earlier than the corresponding letter in b: \"a\"\nand \"ab\" are alphabetically earlier than \"ac\" but \"b\" and \"ba\" are\nalphabetically later than \"ac\". Input The input consists of a single line\ncontaining two space-separated strings: the first and the last names. Each\ncharacter of each string is a lowercase English letter. The length of each\nstring is between 1 and 10, inclusive. Output Output a single string \u2014\nalphabetically earliest possible login formed from these names. The output\nshould be given in lowercase as well. Examples Input harry potter Output hap\nInput tom riddle Output tomr\n\n",
        "cf_contest_id": 909,
        "cf_index": "A",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "harry potter\r\n",
                "hap"
            ],
            [
                "tom riddle\r\n",
                "tomr"
            ]
        ],
        "private_cases": [
            [
                "a qdpinbmcrf\r\n",
                "aq"
            ],
            [
                "wixjzniiub ssdfodfgap\r\n",
                "wis"
            ],
            [
                "z z\r\n",
                "zz"
            ],
            [
                "ertuyivhfg v\r\n",
                "ertuv"
            ],
            [
                "asdfghjkli ware\r\n",
                "asdfghjkliw"
            ],
            [
                "udggmyop ze\r\n",
                "udggmyopz"
            ],
            [
                "fapkdme rtzxovx\r\n",
                "fapkdmer"
            ],
            [
                "mybiqxmnqq l\r\n",
                "ml"
            ],
            [
                "dtbqya fyyymv\r\n",
                "df"
            ],
            [
                "fyclu zokbxiahao\r\n",
                "fycluz"
            ],
            [
                "qngatnviv rdych\r\n",
                "qngar"
            ],
            [
                "ttvnhrnng lqkfulhrn\r\n",
                "tl"
            ],
            [
                "fya fgx\r\n",
                "ff"
            ],
            [
                "nuis zvjjqlre\r\n",
                "nuisz"
            ],
            [
                "ly qtsmze\r\n",
                "lq"
            ],
            [
                "d kgfpjsurfw\r\n",
                "dk"
            ],
            [
                "lwli ewrpu\r\n",
                "le"
            ],
            [
                "rr wldsfubcs\r\n",
                "rrw"
            ],
            [
                "h qart\r\n",
                "hq"
            ],
            [
                "vugvblnzx kqdwdulm\r\n",
                "vk"
            ],
            [
                "xohesmku ef\r\n",
                "xe"
            ],
            [
                "twvvsl wtcyawv\r\n",
                "tw"
            ],
            [
                "obljndajv q\r\n",
                "obljndajq"
            ],
            [
                "jjxwj kxccwx\r\n",
                "jjk"
            ],
            [
                "sk fftzmv\r\n",
                "sf"
            ],
            [
                "cgpegngs aufzxkyyrw\r\n",
                "ca"
            ],
            [
                "reyjzjdvq skuch\r\n",
                "res"
            ],
            [
                "ardaae mxgdulijf\r\n",
                "am"
            ],
            [
                "bgopsdfji uaps\r\n",
                "bgopsdfjiu"
            ],
            [
                "amolfed pun\r\n",
                "amolfedp"
            ],
            [
                "badkiln yort\r\n",
                "badkilny"
            ],
            [
                "aaaaaaaaaz york\r\n",
                "aaaaaaaaay"
            ],
            [
                "bbbbcbbbbd c\r\n",
                "bbbbc"
            ],
            [
                "aa ab\r\n",
                "aa"
            ],
            [
                "ab b\r\n",
                "ab"
            ],
            [
                "aaaaa ab\r\n",
                "aa"
            ],
            [
                "aa a\r\n",
                "aa"
            ],
            [
                "aba b\r\n",
                "ab"
            ],
            [
                "aaaaaaa aaaaaa\r\n",
                "aa"
            ],
            [
                "a a\r\n",
                "aa"
            ],
            [
                "a aa\r\n",
                "aa"
            ],
            [
                "a b\r\n",
                "ab"
            ],
            [
                "b a\r\n",
                "ba"
            ],
            [
                "z a\r\n",
                "za"
            ],
            [
                "aaa a\r\n",
                "aa"
            ],
            [
                "aa aa\r\n",
                "aa"
            ],
            [
                "a aaa\r\n",
                "aa"
            ],
            [
                "aaaaaaaaaa aaaaaaaaaa\r\n",
                "aa"
            ],
            [
                "aaaaaaaaaa a\r\n",
                "aa"
            ],
            [
                "a aaaaaaaaaa\r\n",
                "aa"
            ],
            [
                "zzaa b\r\n",
                "zb"
            ],
            [
                "ca cf\r\n",
                "cac"
            ],
            [
                "abhi ia\r\n",
                "abhi"
            ],
            [
                "aaaa aaaab\r\n",
                "aa"
            ],
            [
                "aar raa\r\n",
                "aar"
            ],
            [
                "harry hotter\r\n",
                "hah"
            ],
            [
                "aaaaaaa a\r\n",
                "aa"
            ],
            [
                "apple pie\r\n",
                "ap"
            ],
            [
                "aaa aaa\r\n",
                "aa"
            ],
            [
                "kabc buba\r\n",
                "kab"
            ],
            [
                "asd ss\r\n",
                "as"
            ],
            [
                "bbb b\r\n",
                "bb"
            ]
        ]
    }
]