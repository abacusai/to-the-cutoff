[
    {
        "name": "Juicer",
        "description": "Kolya is going to make fresh orange juice. He has n oranges of sizes a1, a2,\n..., an. Kolya will put them in the juicer in the fixed order, starting with\norange of size a1, then orange of size a2 and so on. To be put in the juicer\nthe orange must have size not exceeding b, so if Kolya sees an orange that is\nstrictly greater he throws it away and continues with the next one. The juicer\nhas a special section to collect waste. It overflows if Kolya squeezes oranges\nof the total size strictly greater than d. When it happens Kolya empties the\nwaste section (even if there are no more oranges) and continues to squeeze the\njuice. How many times will he have to empty the waste section? Input The first\nline of the input contains three integers n, b and d (1 \u2264 n \u2264 100 000, 1 \u2264 b \u2264\nd \u2264 1 000 000) \u2014 the number of oranges, the maximum size of the orange that\nfits in the juicer and the value d, which determines the condition when the\nwaste section should be emptied. The second line contains n integers a1, a2,\n..., an (1 \u2264 ai \u2264 1 000 000) \u2014 sizes of the oranges listed in the order Kolya\nis going to try to put them in the juicer. Output Print one integer \u2014 the\nnumber of times Kolya will have to empty the waste section. Examples Input 2 7\n10 5 6 Output 1 Input 1 5 10 7 Output 0 Input 3 10 10 5 7 7 Output 1 Input 1 1\n1 1 Output 0 Note In the first sample, Kolya will squeeze the juice from two\noranges and empty the waste section afterwards. In the second sample, the\norange won't fit in the juicer so Kolya will have no juice at all.\n\n",
        "cf_contest_id": 709,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 7 10\r\n5 6\r\n",
                "1\r\n"
            ],
            [
                "1 5 10\r\n7\r\n",
                "0\r\n"
            ],
            [
                "3 10 10\r\n5 7 7\r\n",
                "1\r\n"
            ],
            [
                "1 1 1\r\n1\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 951637 951638\r\n44069 951637\r\n",
                "1\r\n"
            ],
            [
                "50 100 129\r\n55 130 91 19 116 3 63 52 104 76 75 27 151 99 149 147 39 148 84 9 132 49 40 112 124 141 144 93 36 32 146 74 48 38 150 55 94 32 107 69 77 81 33 57 62 98 78 127 154 126\r\n",
                "12\r\n"
            ],
            [
                "100 1000 1083\r\n992 616 818 359 609 783 263 989 501 929 362 394 919 1081 870 830 1097 975 62 346 531 367 323 457 707 360 949 334 867 116 478 417 961 963 1029 114 867 1008 988 916 983 1077 959 942 572 961 579 318 721 337 488 717 111 70 416 685 987 130 353 107 61 191 827 849 106 815 211 953 111 398 889 860 801 71 375 320 395 1059 116 222 931 444 582 74 677 655 88 173 686 491 661 186 114 832 615 814 791 464 517 850\r\n",
                "36\r\n"
            ],
            [
                "2 6 8\r\n2 1\r\n",
                "0\r\n"
            ],
            [
                "5 15 16\r\n7 11 5 12 8\r\n",
                "2\r\n"
            ],
            [
                "15 759966 759967\r\n890397 182209 878577 548548 759966 812923 759966 860479 200595 381358 299175 339368 759966 907668 69574\r\n",
                "4\r\n"
            ],
            [
                "5 234613 716125\r\n642626 494941 234613 234613 234613\r\n",
                "0\r\n"
            ],
            [
                "50 48547 567054\r\n529808 597004 242355 559114 78865 537318 631455 733020 655072 645093 309010 855034 306058 625046 524574 834944 27330 664392 443637 821584 338013 490702 289520 675471 885846 258814 134220 571301 84875 94132 200425 928833 375166 521232 317961 175315 947093 89971 322071 174033 48547 998535 954205 704114 943163 438900 48547 538422 48547 48547\r\n",
                "0\r\n"
            ],
            [
                "5 10 20\r\n10 10 10 10 1\r\n",
                "1\r\n"
            ],
            [
                "5 10 11\r\n10 10 10 10 1\r\n",
                "2\r\n"
            ],
            [
                "3 10 10\r\n4 3 3\r\n",
                "0\r\n"
            ],
            [
                "3 5 5\r\n5 5 5\r\n",
                "1\r\n"
            ],
            [
                "3 4 14\r\n5 5 5\r\n",
                "0\r\n"
            ],
            [
                "2 7 10\r\n1234 1234\r\n",
                "0\r\n"
            ],
            [
                "1 5 6\r\n10\r\n",
                "0\r\n"
            ],
            [
                "3 4 6\r\n1 2 3\r\n",
                "0\r\n"
            ],
            [
                "5 10 12\r\n13 13 13 13 13\r\n",
                "0\r\n"
            ],
            [
                "3 4 5\r\n5 7 9\r\n",
                "0\r\n"
            ],
            [
                "3 10 100\r\n5 5 5\r\n",
                "0\r\n"
            ],
            [
                "5 1 2\r\n2 2 2 2 2\r\n",
                "0\r\n"
            ],
            [
                "5 5 5\r\n5 5 5 5 5\r\n",
                "2\r\n"
            ],
            [
                "2 2 5\r\n5 5\r\n",
                "0\r\n"
            ],
            [
                "3 1 4\r\n2 2 2\r\n",
                "0\r\n"
            ]
        ]
    }
]