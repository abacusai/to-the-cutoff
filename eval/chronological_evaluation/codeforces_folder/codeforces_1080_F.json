[
    {
        "name": "Katya and Segments Sets",
        "description": "It is a very important day for Katya. She has a test in a programming class.\nAs always, she was given an interesting problem that she solved very fast. Can\nyou solve that problem? You are given \n    n\n ordered segments sets. Each\nsegment can be represented as a pair of two integers \n    [l, r]\n where\n\n    l\n    \u2264 r\n. Each set can contain an arbitrary number of segments (even\n\n    0\n). It is possible that some segments are equal. You are also given\n\n    m\n queries, each of them can be represented as four numbers: \n    a, b, x,\n    y\n. For each segment, find out whether it is true that each set \n    p\n\n(\n    a\n    \u2264 p\n    \u2264 b\n) contains at least one segment \n    [l, r]\n that lies\nentirely on the segment \n    [x, y]\n, that is \n    x\n    \u2264 l\n    \u2264 r\n    \u2264 y\n.\nFind out the answer to each query. Note that you need to solve this problem\nonline. That is, you will get a new query only after you print the answer for\nthe previous query. Input The first line contains three integers \n    n\n,\n\n    m\n, and \n    k\n \n    (1\n    \u2264 n,m\n    \u2264 10^5, 1\n    \u2264 k\n    \u2264\n    3\n    \u00b710^5)\n \u2014 the number of sets, queries, and segments respectively.\nEach of the next \n    k\n lines contains three integers \n    l\n, \n    r\n, and\n\n    p\n \n    (1\n    \u2264 l\n    \u2264 r\n    \u2264 10^9, 1\n    \u2264 p\n    \u2264 n)\n \u2014 the limits\nof the segment and the index of a set, to which this segment belongs. Each of\nthe next \n    m\n lines contains four integers \n    a, b, x, y\n \n    (1\n    \u2264\n    a\n    \u2264 b\n    \u2264 n, 1\n    \u2264 x\n    \u2264 y\n    \u2264 10^9)\n \u2014 the description of the\nquery. Output For each query, print \"yes\" or \"no\" in a new line. Interaction\nAfter printing a query, do not forget to output end of line and flush the\noutput. Otherwise, you will get Idleness limit exceeded. To do this, use:\nfflush(stdout) or cout.flush() in C++; System.out.flush() in Java;\nflush(output) in Pascal; stdout.flush() in Python; see documentation for other\nlanguages. Example Input 5 5 9 3 6 3 1 3 1 2 4 2 1 2 3 4 6 5 2 5 3 7 9 4 2 3 1\n4 10 4 1 2 2 3 1 2 2 4 1 3 1 5 2 3 3 6 2 4 2 9 Output no yes yes no yes Note\nFor the first query, the answer is negative since the second set does not\ncontain a segment that lies on the segment \n    [2, 3]\n. In the second query,\nthe first set contains \n    [2, 3]\n, and the second set contains \n    [2, 4]\n.\nIn the third query, the first set contains \n    [2, 3]\n, the second set\ncontains \n    [2, 4]\n, and the third set contains \n    [2, 5]\n. In the fourth\nquery, the second set does not contain a segment that lies on the segment\n\n    [3, 6]\n. In the fifth query, the second set contains \n    [2, 4]\n, the\nthird set contains \n    [2, 5]\n, and the fourth contains \n    [7, 9]\n.\n\n",
        "cf_contest_id": 1080,
        "cf_index": "F",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "interactive",
            "sortings"
        ],
        "time_limit_seconds": 3.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5 5 9\r\n3 6 3\r\n1 3 1\r\n2 4 2\r\n1 2 3\r\n4 6 5\r\n2 5 3\r\n7 9 4\r\n2 3 1\r\n4 10 4\r\n1 2 2 3\r\n1 2 2 4\r\n1 3 1 5\r\n2 3 3 6\r\n2 4 2 9\r\n",
                "no\r\nyes\r\nyes\r\nno\r\nyes\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 2 1\r\n1 1000000000 1\r\n1 1 1 1\r\n1 1 1000000000 1000000000\r\n",
                "no\r\nno\r\n"
            ],
            [
                "1 1 1\r\n1000000000 1000000000 1\r\n1 1 1 1000000000\r\n",
                "yes\r\n"
            ]
        ]
    }
]