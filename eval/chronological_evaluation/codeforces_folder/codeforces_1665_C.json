[
    {
        "name": "Tree Infection",
        "description": "A tree is a connected graph without cycles. A rooted tree has a special vertex\ncalled the root. The parent of a vertex \n    v\n (different from root) is the\nprevious to \n    v\n vertex on the shortest path from the root to the vertex\n\n    v\n. Children of the vertex \n    v\n are all vertices for which \n    v\n is\nthe parent. You are given a rooted tree with \n    n\n vertices. The vertex\n\n    1\n is the root. Initially, all vertices are healthy. Each second you do\ntwo operations, the spreading operation and, after that, the injection\noperation: Spreading: for each vertex \n    v\n, if at least one child of\n\n    v\n is infected, you can spread the disease by infecting at most one other\nchild of \n    v\n of your choice. Injection: you can choose any healthy vertex\nand infect it. This process repeats each second until the whole tree is\ninfected. You need to find the minimal number of seconds needed to infect the\nwhole tree. Input The input consists of multiple test cases. The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of\ntest cases. Description of the test cases follows. The first line of each test\ncase contains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n)\n\u2014 the number of the vertices in the given tree. The second line of each test\ncase contains \n    n - 1\n integers \n    p_2, p_3, \n    \u2026, p_n\n (\n    1 \n    \u2264\n    p_i \n    \u2264 n\n), where \n    p_i\n is the ancestor of the \n    i\n-th vertex in\nthe tree. It is guaranteed that the given graph is a tree. It is guaranteed\nthat the sum of \n    n\n over all test cases doesn't exceed \n    2 \n    \u00b7\n    10^5\n. Output For each test case you should output a single integer \u2014 the\nminimal number of seconds needed to infect the whole tree. Example Input 5 7 1\n1 1 2 2 4 5 5 5 1 4 2 1 3 3 1 6 1 1 1 1 1 Output 4 4 2 3 4 Note The image\ndepicts the tree from the first test case during each second. A vertex is\nblack if it is not infected. A vertex is blue if it is infected by injection\nduring the previous second. A vertex is green if it is infected by spreading\nduring the previous second. A vertex is red if it is infected earlier than the\nprevious second. Note that you are able to choose which vertices are infected\nby spreading and by injections.\n\n",
        "cf_contest_id": 1665,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n7\r\n1 1 1 2 2 4\r\n5\r\n5 5 1 4\r\n2\r\n1\r\n3\r\n3 1\r\n6\r\n1 1 1 1 1\r\n",
                "4\r\n4\r\n2\r\n3\r\n4\r\n"
            ]
        ],
        "private_cases": []
    }
]