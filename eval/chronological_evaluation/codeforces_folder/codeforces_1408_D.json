[
    {
        "name": "Searchlights",
        "description": "There are \n    n\n robbers at coordinates \n    (a_1, b_1)\n, \n    (a_2, b_2)\n,\n..., \n    (a_n, b_n)\n and \n    m\n searchlight at coordinates \n    (c_1, d_1)\n,\n\n    (c_2, d_2)\n, ..., \n    (c_m, d_m)\n. In one move you can move each robber\nto the right (increase \n    a_i\n of each robber by one) or move each robber up\n(increase \n    b_i\n of each robber by one). Note that you should either\nincrease all \n    a_i\n or all \n    b_i\n, you can't increase \n    a_i\n for some\npoints and \n    b_i\n for some other points. Searchlight \n    j\n can see a\nrobber \n    i\n if \n    a_i \n    \u2264 c_j\n and \n    b_i \n    \u2264 d_j\n. A\nconfiguration of robbers is safe if no searchlight can see a robber (i.e. if\nthere is no pair \n    i,j\n such that searchlight \n    j\n can see a robber\n\n    i\n). What is the minimum number of moves you need to perform to reach a\nsafe configuration? Input The first line of input contains two integers\n\n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 2000\n): the number of robbers\nand the number of searchlight. Each of the next \n    n\n lines contains two\nintegers \n    a_i\n, \n    b_i\n (\n    0 \n    \u2264 a_i, b_i \n    \u2264 10^6\n),\ncoordinates of robbers. Each of the next \n    m\n lines contains two integers\n\n    c_i\n, \n    d_i\n (\n    0 \n    \u2264 c_i, d_i \n    \u2264 10^6\n), coordinates of\nsearchlights. Output Print one integer: the minimum number of moves you need\nto perform to reach a safe configuration. Examples Input 1 1 0 0 2 3 Output 3\nInput 2 3 1 6 6 1 10 1 1 10 7 7 Output 4 Input 1 2 0 0 0 0 0 0 Output 1 Input\n7 3 0 8 3 8 2 7 0 10 5 5 7 0 3 5 6 6 3 11 11 5 Output 6 Note In the first\ntest, you can move each robber to the right three times. After that there will\nbe one robber in the coordinates \n    (3, 0)\n. The configuration of the\nrobbers is safe, because the only searchlight can't see the robber, because it\nis in the coordinates \n    (2, 3)\n and \n    3 > 2\n. In the second test, you\ncan move each robber to the right two times and two times up. After that\nrobbers will be in the coordinates \n    (3, 8)\n, \n    (8, 3)\n. It's easy the\nsee that the configuration of the robbers is safe. It can be proved that you\ncan't reach a safe configuration using no more than \n    3\n moves.\n\n",
        "cf_contest_id": 1408,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 1\r\n0 0\r\n2 3\r\n",
                "3\r\n"
            ],
            [
                "2 3\r\n1 6\r\n6 1\r\n10 1\r\n1 10\r\n7 7\r\n",
                "4\r\n"
            ],
            [
                "1 2\r\n0 0\r\n0 0\r\n0 0\r\n",
                "1\r\n"
            ],
            [
                "7 3\r\n0 8\r\n3 8\r\n2 7\r\n0 10\r\n5 5\r\n7 0\r\n3 5\r\n6 6\r\n3 11\r\n11 5\r\n",
                "6\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n0 0\r\n0 0\r\n",
                "1\r\n"
            ],
            [
                "2 1\r\n0 0\r\n0 0\r\n0 0\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n279 365\r\n566 88\r\n",
                "0\r\n"
            ],
            [
                "1 2\r\n244 520\r\n590 781\r\n867 704\r\n",
                "262\r\n"
            ],
            [
                "2 1\r\n469 963\r\n697 509\r\n456 80\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n0 0\r\n1000000 1000000\r\n",
                "1000001\r\n"
            ],
            [
                "1 1\r\n2 0\r\n1000000 1000000\r\n",
                "999999\r\n"
            ]
        ]
    }
]