[
    {
        "name": "Crossword Expert",
        "description": "Today Adilbek is taking his probability theory test. Unfortunately, when\nAdilbek arrived at the university, there had already been a long queue of\nstudents wanting to take the same test. Adilbek has estimated that he will be\nable to start the test only \n    T\n seconds after coming. Fortunately, Adilbek\ncan spend time without revising any boring theorems or formulas. He has an app\non this smartphone which contains \n    n\n Japanese crosswords to solve.\nAdilbek has decided to solve them all one by one in the order they are listed\nin the app, without skipping any crossword. For each crossword, a number\n\n    t_i\n is given that represents the time it takes an average crossword\nexpert to solve this crossword (the time is given in seconds). Adilbek is a\ntrue crossword expert, but, unfortunately, he is sometimes unlucky in choosing\nthe way to solve the crossword. So, it takes him either \n    t_i\n seconds or\n\n    t_i + 1\n seconds to solve the \n    i\n-th crossword, equiprobably (with\nprobability \n    1/2\n he solves the crossword in exactly \n    t_i\n\nseconds, and with probability \n    1/2\n he has to spend an\nadditional second to finish the crossword). All these events are independent.\nAfter \n    T\n seconds pass (or after solving the last crossword, if he manages\nto do it in less than \n    T\n seconds), Adilbek closes the app (if he finishes\nsome crossword at the same moment, that crossword is considered solved;\notherwise Adilbek does not finish solving the current crossword at all). He\nthinks it would be an interesting probability theory problem to calculate\n\n    E\n \u2014 the expected number of crosswords he will be able to solve\ncompletely. Can you calculate it? Recall that the expected value of a discrete\nrandom variable is the probability-weighted average of all possible values \u2014\nin this problem it means that the expected value of the number of solved\ncrosswords can be calculated as \n    E = \n    \u2211\n    _i = 0^n i p_i\n,\nwhere \n    p_i\n is the probability that Adilbek will solve exactly \n    i\n\ncrosswords. We can represent \n    E\n as rational fraction \n    P/Q\n\nwith \n    Q > 0\n. To give the answer, you should print \n    P \n    \u00b7 Q^-1\n     (10^9 + 7)\n. Input The first line contains two integers \n    n\n and\n\n    T\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    1 \n    \u2264 T \n    \u2264 2 \n    \u00b7\n    10^14\n) \u2014 the number of crosswords and the time Adilbek has to spend,\nrespectively. The second line contains \n    n\n integers \n    t_1, t_2, \n    \u2026,\n    t_n\n (\n    1 \n    \u2264 t_i \n    \u2264 10^9\n), where \n    t_i\n is the time it takes a\ncrossword expert to solve the \n    i\n-th crossword. Note that Adilbek solves\nthe crosswords in the order they are given in the input without skipping any\nof them. Output Print one integer \u2014 the expected value of the number of\ncrosswords Adilbek solves in \n    T\n seconds, expressed in the form of \n    P\n    \n    \u00b7 Q^-1\n     (10^9 + 7)\n. Examples Input 3 5 2 2 2 Output\n750000007 Input 3 5 2 1 2 Output 125000003 Note The answer for the first\nsample is equal to \n    14/8\n. The answer for the second sample is\nequal to \n    17/8\n.\n\n",
        "cf_contest_id": 1194,
        "cf_index": "F",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "number theory",
            "probabilities",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 5\r\n2 2 2\r\n",
                "750000007"
            ],
            [
                "3 5\r\n2 1 2\r\n",
                "125000003"
            ]
        ],
        "private_cases": [
            [
                "5 5\r\n1 1 1 2 2\r\n",
                "437500006"
            ],
            [
                "5 10\r\n2 2 2 2 1\r\n",
                "875000010"
            ],
            [
                "20 25\r\n1 1 1 1 1 1 2 2 1 1 2 1 2 2 1 2 1 1 2 2\r\n",
                "846324940"
            ],
            [
                "20 26\r\n1 2 1 1 1 2 1 1 2 2 2 1 2 1 2 1 1 2 2 1\r\n",
                "509799974"
            ],
            [
                "20 27\r\n1 2 1 2 1 2 1 2 2 1 2 2 1 2 2 2 1 1 2 1\r\n",
                "867942829"
            ],
            [
                "20 28\r\n2 1 1 2 2 1 2 2 2 1 2 1 1 1 1 2 1 1 2 1\r\n",
                "81361785"
            ],
            [
                "20 29\r\n2 2 1 2 2 1 1 1 2 2 2 2 2 2 1 1 2 2 2 2\r\n",
                "468261735"
            ],
            [
                "20 30\r\n2 1 1 2 1 1 1 1 2 1 1 1 1 1 2 2 1 1 1 2\r\n",
                "888820671"
            ],
            [
                "20 31\r\n2 2 1 2 1 1 2 1 2 2 1 2 1 2 1 1 1 2 1 2\r\n",
                "153515832"
            ],
            [
                "20 32\r\n2 1 1 1 1 2 2 2 1 1 1 1 2 1 2 1 2 2 2 1\r\n",
                "240958232"
            ],
            [
                "20 33\r\n1 1 1 1 1 2 1 1 1 2 1 1 1 2 2 2 2 1 2 1\r\n",
                "165332813"
            ],
            [
                "20 34\r\n2 2 2 1 2 1 2 2 2 2 1 2 2 2 2 1 1 1 2 2\r\n",
                "676596661"
            ],
            [
                "20 29\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "356287024"
            ],
            [
                "20 30\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "310937903"
            ],
            [
                "20 31\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "333612464"
            ],
            [
                "1 1\r\n1\r\n",
                "500000004"
            ]
        ]
    }
]