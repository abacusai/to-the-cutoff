[
    {
        "name": "Reducing Delivery Cost",
        "description": "You are a mayor of Berlyatov. There are \n    n\n districts and \n    m\n two-way\nroads between them. The \n    i\n-th road connects districts \n    x_i\n and\n\n    y_i\n. The cost of travelling along this road is \n    w_i\n. There is some\npath between each pair of districts, so the city is connected. There are\n\n    k\n delivery routes in Berlyatov. The \n    i\n-th route is going from the\ndistrict \n    a_i\n to the district \n    b_i\n. There is one courier on each\nroute and the courier will always choose the cheapest (minimum by total cost)\npath from the district \n    a_i\n to the district \n    b_i\n to deliver\nproducts. The route can go from the district to itself, some couriers routes\ncan coincide (and you have to count them independently). You can make at most\none road to have cost zero (i.e. you choose at most one road and change its\ncost with \n    0\n). Let \n    d(x, y)\n be the cheapest cost of travel between\ndistricts \n    x\n and \n    y\n. Your task is to find the minimum total courier\nroutes cost you can achieve, if you optimally select the some road and change\nits cost with \n    0\n. In other words, you have to find the minimum possible\nvalue of \n    \u2211\n    _i = 1^k d(a_i, b_i)\n after applying the\noperation described above optimally. Input The first line of the input\ncontains three integers \n    n\n, \n    m\n and \n    k\n (\n    2 \n    \u2264 n \n    \u2264\n    1000\n; \n    n - 1 \n    \u2264 m \n    \u2264 min(1000, \n    n(n-1)/2)\n; \n    1 \n    \u2264 k\n    \n    \u2264 1000\n) \u2014 the number of districts, the number of roads and the number\nof courier routes. The next \n    m\n lines describe roads. The \n    i\n-th road\nis given as three integers \n    x_i\n, \n    y_i\n and \n    w_i\n (\n    1 \n    \u2264 x_i,\n    y_i \n    \u2264 n\n; \n    x_i \n     y_i\n; \n    1 \n    \u2264 w_i \n    \u2264 1000\n), where\n\n    x_i\n and \n    y_i\n are districts the \n    i\n-th road connects and\n\n    w_i\n is its cost. It is guaranteed that there is some path between each\npair of districts, so the city is connected. It is also guaranteed that there\nis at most one road between each pair of districts. The next \n    k\n lines\ndescribe courier routes. The \n    i\n-th route is given as two integers\n\n    a_i\n and \n    b_i\n (\n    1 \n    \u2264 a_i, b_i \n    \u2264 n\n) \u2014 the districts of\nthe \n    i\n-th route. The route can go from the district to itself, some\ncouriers routes can coincide (and you have to count them independently).\nOutput Print one integer \u2014 the minimum total courier routes cost you can\nachieve (i.e. the minimum value \n    \u2211\n    _i=1^k d(a_i, b_i)\n,\nwhere \n    d(x, y)\n is the cheapest cost of travel between districts \n    x\n\nand \n    y\n) if you can make some (at most one) road cost zero. Examples Input\n6 5 2 1 2 5 2 3 7 2 4 4 4 5 2 4 6 8 1 6 5 3 Output 22 Input 5 5 4 1 2 5 2 3 4\n1 4 3 4 3 7 3 5 2 1 5 1 3 3 3 1 5 Output 13 Note The picture corresponding to\nthe first example: There, you can choose either the road \n    (2, 4)\n or the\nroad \n    (4, 6)\n. Both options lead to the total cost \n    22\n. The picture\ncorresponding to the second example: There, you can choose the road \n    (3,\n    4)\n. This leads to the total cost \n    13\n.\n\n",
        "cf_contest_id": 1433,
        "cf_index": "G",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 5 2\r\n1 2 5\r\n2 3 7\r\n2 4 4\r\n4 5 2\r\n4 6 8\r\n1 6\r\n5 3\r\n",
                "22\r\n"
            ],
            [
                "5 5 4\r\n1 2 5\r\n2 3 4\r\n1 4 3\r\n4 3 7\r\n3 5 2\r\n1 5\r\n1 3\r\n3 3\r\n1 5\r\n",
                "13\r\n"
            ]
        ],
        "private_cases": []
    }
]