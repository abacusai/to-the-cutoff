[
    {
        "name": "Shower Line",
        "description": "Many students live in a dormitory. A dormitory is a whole new world of funny\namusements and possibilities but it does have its drawbacks. There is only one\nshower and there are multiple students who wish to have a shower in the\nmorning. That's why every morning there is a line of five people in front of\nthe dormitory shower door. As soon as the shower opens, the first person from\nthe line enters the shower. After a while the first person leaves the shower\nand the next person enters the shower. The process continues until everybody\nin the line has a shower. Having a shower takes some time, so the students in\nthe line talk as they wait. At each moment of time the students talk in pairs:\nthe (2i - 1)-th man in the line (for the current moment) talks with the\n(2i)-th one. Let's look at this process in more detail. Let's number the\npeople from 1 to 5. Let's assume that the line initially looks as 23154\n(person number 2 stands at the beginning of the line). Then, before the shower\nopens, 2 talks with 3, 1 talks with 5, 4 doesn't talk with anyone. Then 2\nenters the shower. While 2 has a shower, 3 and 1 talk, 5 and 4 talk too. Then,\n3 enters the shower. While 3 has a shower, 1 and 5 talk, 4 doesn't talk to\nanyone. Then 1 enters the shower and while he is there, 5 and 4 talk. Then 5\nenters the shower, and then 4 enters the shower. We know that if students i\nand j talk, then the i-th student's happiness increases by gij and the j-th\nstudent's happiness increases by gji. Your task is to find such initial order\nof students in the line that the total happiness of all students will be\nmaximum in the end. Please note that some pair of students may have a talk\nseveral times. In the example above students 1 and 5 talk while they wait for\nthe shower to open and while 3 has a shower. Input The input consists of five\nlines, each line contains five space-separated integers: the j-th number in\nthe i-th line shows gij (0 \u2264 gij \u2264 10^5). It is guaranteed that gii = 0 for\nall i. Assume that the students are numbered from 1 to 5. Output Print a\nsingle integer \u2014 the maximum possible total happiness of the students.\nExamples Input 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 0 0 0 Output 32\nInput 0 43 21 18 2 3 0 21 11 65 5 2 0 1 4 54 62 12 0 99 87 64 81 33 0 Output\n620 Note In the first sample, the optimal arrangement of the line is 23154. In\nthis case, the total happiness equals: (g23 + g32 + g15 + g51) + (g13 + g31 +\ng54 + g45) + (g15 + g51) + (g54 + g45) = 32 .\n\n",
        "cf_contest_id": 431,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "0 0 0 0 9\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n7 0 0 0 0\r\n",
                "32\r\n"
            ],
            [
                "0 43 21 18 2\r\n3 0 21 11 65\r\n5 2 0 1 4\r\n54 62 12 0 99\r\n87 64 81 33 0\r\n",
                "620\r\n"
            ]
        ],
        "private_cases": [
            [
                "0 4 2 4 9\r\n6 0 2 5 0\r\n2 5 0 6 3\r\n6 3 3 0 10\r\n0 3 1 3 0\r\n",
                "63\r\n"
            ],
            [
                "0 65 90 2 32\r\n69 0 9 97 67\r\n77 97 0 16 84\r\n18 50 94 0 63\r\n69 12 82 16 0\r\n",
                "947\r\n"
            ],
            [
                "0 70 10 0 0\r\n70 0 50 90 0\r\n10 50 0 80 0\r\n0 90 80 0 100\r\n0 0 0 100 0\r\n",
                "960\r\n"
            ],
            [
                "0 711 647 743 841\r\n29 0 109 38 682\r\n329 393 0 212 512\r\n108 56 133 0 579\r\n247 92 933 164 0\r\n",
                "6265\r\n"
            ],
            [
                "0 9699 6962 6645 7790\r\n9280 0 6215 8661 6241\r\n2295 7817 0 7373 9681\r\n693 6298 1381 0 4633\r\n7626 3761 694 4073 0\r\n",
                "93667\r\n"
            ],
            [
                "0 90479 71577 33797 88848\r\n45771 0 96799 78707 72708\r\n5660 26421 0 10991 22757\r\n78919 24804 90645 0 48665\r\n92787 43671 38727 17302 0\r\n",
                "860626\r\n"
            ],
            [
                "0 61256 85109 94834 32902\r\n55269 0 67023 1310 85444\r\n23497 84998 0 55618 80701\r\n30324 1713 62127 0 55041\r\n47799 52448 40072 28971 0\r\n",
                "822729\r\n"
            ],
            [
                "0 7686 20401 55871 74372\r\n29526 0 15486 2152 84700\r\n27854 30093 0 62418 14297\r\n43903 76036 36194 0 50522\r\n29743 9945 38831 75882 0\r\n",
                "605229\r\n"
            ],
            [
                "0 5271 65319 64976 13673\r\n80352 0 41169 66004 47397\r\n33603 44407 0 55079 36122\r\n4277 9834 92810 0 80276\r\n1391 1145 92132 51595 0\r\n",
                "744065\r\n"
            ],
            [
                "0 75763 33154 32389 12897\r\n5095 0 6375 61517 46063\r\n35354 82789 0 24814 310\r\n37373 45993 61355 0 76865\r\n24383 84258 71887 71430 0\r\n",
                "714904\r\n"
            ],
            [
                "0 89296 32018 98206 22395\r\n15733 0 69391 74253 50419\r\n80450 89589 0 20583 51716\r\n38629 93129 67730 0 69703\r\n44054 83018 21382 64478 0\r\n",
                "874574\r\n"
            ],
            [
                "0 14675 94714 27735 99544\r\n45584 0 43621 94734 66110\r\n72838 45781 0 47389 99394\r\n75870 95368 33311 0 63379\r\n21974 70489 53797 23747 0\r\n",
                "974145\r\n"
            ],
            [
                "0 9994 14841 63916 37926\r\n80090 0 90258 96988 18217\r\n674 69024 0 17641 54436\r\n35046 21380 14213 0 67188\r\n49360 19086 68337 70856 0\r\n",
                "801116\r\n"
            ],
            [
                "0 28287 52158 19163 10096\r\n93438 0 19260 88892 12429\r\n22525 60034 0 78163 18126\r\n11594 8506 56066 0 17732\r\n59561 82486 23419 57406 0\r\n",
                "654636\r\n"
            ],
            [
                "0 35310 30842 63415 91022\r\n30553 0 25001 38944 92355\r\n48906 33736 0 96880 80893\r\n80507 79652 45299 0 38212\r\n72488 77736 19203 56436 0\r\n",
                "953303\r\n"
            ],
            [
                "0 42865 18485 37168 43099\r\n41476 0 58754 73410 51163\r\n76093 44493 0 51611 93773\r\n87223 80979 58422 0 63327\r\n51215 63346 84797 52809 0\r\n",
                "864938\r\n"
            ],
            [
                "0 63580 51022 25392 84354\r\n39316 0 17516 63801 92440\r\n5447 2074 0 11758 4772\r\n26329 55642 62442 0 75330\r\n6164 83831 10741 15214 0\r\n",
                "738415\r\n"
            ],
            [
                "0 0 0 0 0\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n0 0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "0 1 1 1 0\r\n1 0 0 1 0\r\n0 1 0 0 1\r\n1 1 0 0 0\r\n1 0 0 1 0\r\n",
                "10\r\n"
            ],
            [
                "0 3 6 9 8\r\n2 0 8 7 7\r\n4 6 0 6 1\r\n9 0 3 0 6\r\n6 5 0 2 0\r\n",
                "90\r\n"
            ],
            [
                "0 97 67 53 6\r\n96 0 100 57 17\r\n27 79 0 66 16\r\n89 46 71 0 28\r\n27 26 27 12 0\r\n",
                "926\r\n"
            ],
            [
                "0 670 904 349 56\r\n446 0 941 590 993\r\n654 888 0 423 752\r\n16 424 837 0 433\r\n418 655 459 897 0\r\n",
                "9752\r\n"
            ],
            [
                "0 4109 129 1340 7124\r\n7815 0 8991 2828 909\r\n5634 799 0 5691 9604\r\n3261 7013 8062 0 5160\r\n2433 4742 694 4786 0\r\n",
                "69867\r\n"
            ],
            [
                "0 14299 32984 96001 30445\r\n77723 0 75669 14101 55389\r\n30897 9956 0 52675 29987\r\n36518 90812 92955 0 64020\r\n91242 50085 86272 62454 0\r\n",
                "783459\r\n"
            ],
            [
                "0 46183 30304 63049 13191\r\n37244 0 23076 12594 43885\r\n98470 1788 0 37335 7775\r\n33822 50804 27921 0 56734\r\n38313 67579 77714 46687 0\r\n",
                "666175\r\n"
            ],
            [
                "0 39037 87960 13497 38526\r\n5528 0 44220 23338 92550\r\n87887 86544 0 30269 82845\r\n24590 60325 90979 0 20186\r\n64959 69875 93564 68355 0\r\n",
                "950600\r\n"
            ],
            [
                "0 27677 88187 87515 82582\r\n98177 0 22852 28214 99977\r\n52662 14066 0 79760 68188\r\n56883 30561 91843 0 79777\r\n12461 14821 29284 54372 0\r\n",
                "878207\r\n"
            ],
            [
                "0 37330 91942 67667 42061\r\n1978 0 84218 17 10834\r\n11303 6279 0 48597 26591\r\n82688 5437 34983 0 92556\r\n79574 32231 23167 16637 0\r\n",
                "718057\r\n"
            ],
            [
                "0 3 0 0 0\r\n3 0 2 0 0\r\n0 2 0 1 0\r\n0 0 1 0 1\r\n0 0 0 1 0\r\n",
                "24\r\n"
            ]
        ]
    }
]