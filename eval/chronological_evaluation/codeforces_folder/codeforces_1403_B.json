[
    {
        "name": "Spring cleaning",
        "description": "Spring cleanings are probably the most boring parts of our lives, except this\nyear, when Fl\u00f3ra and her mother found a dusty old tree graph under the carpet.\nThis tree has \n    N\n nodes (numbered from \n    1\n to \n    N\n), connected by\n\n    N-1\n edges. The edges gathered too much dust, so Fl\u00f3ra's mom decided to\nclean them. Cleaning the edges of an arbitrary tree is done by repeating the\nfollowing process: She chooses 2 different leaves (a node is a leaf if it is\nconnected to exactly one other node by an edge), and cleans every edge lying\non the shortest path between them. If this path has \n    d\n edges, then the\ncost of cleaning this path is \n    d\n. She doesn't want to harm the leaves of\nthe tree, so she chooses every one of them at most once. A tree is cleaned\nwhen all of its edges are cleaned. The cost of this is the sum of costs for\nall cleaned paths. Fl\u00f3ra thinks the tree they found is too small and simple,\nso she imagines \n    Q\n variations of it. In the \n    i\n-th variation, she\nadds a total of \n    D_i\n extra leaves to the original tree: for each new\nleaf, she chooses a node from the original tree, and connects that node with\nthe new leaf by an edge. Note that some nodes may stop being leaves during\nthis step. For all these \n    Q\n variations, we are interested in the minimum\ncost that is required to clean the tree. Input The first line contains two\nspace-separated integer, \n    N\n and \n    Q\n (\n    3 \n    \u2264 N \n    \u2264 10^5\n,\n\n    1 \n    \u2264 Q \n    \u2264 10^5\n) \u2013 the number of nodes the tree has and the\nnumber of variations. Each of the next \n    N-1\n lines contains two space-\nseparated integers \n    u\n and \n    v\n denoting that nodes \n    u\n and \n    v\n\nare connected by an edge (\n    1 \n    \u2264 u, v \n    \u2264 N\n). The next \n    Q\n\nlines describe the variations. The first integer in the \n    i\nth line is\n\n    D_i\n (\n    1 \n    \u2264 D_i \n    \u2264 10^5\n). Then \n    D_i\n space-separated\nintegers follow: if the \n    j\nth number is \n    a_j\n, it means that Fl\u00f3ra\nadds a new leaf to node \n    a_j\n (\n    1 \n    \u2264 a_j \n    \u2264 N\n). We may add\nmore than one leaf to the same node. \n    \u2211_1^Q D_i \n    \u2264 10^5\n\ni.e. the sum of \n    D_i\n in all varations is at most \n    10^5\n. After each\nvariation, Fl\u00f3ra restarts and adds extra leaves to the original tree. Output\nYou should print \n    Q\n lines. In the \n    i\n-th line, print a single\ninteger: the minimum cost required to clean the \n    i\n-th variation of the\ntree. If the tree cannot be cleaned, print \n    -1\n. Scoring \n    [                                                                      ;                                                                      ;                                                               Subtask                                                                      ;                                                                Points                                                                      ;                                                           Constraints; ; ;                                                                      ;                                                                     1                                                                     0                                                                      ;                                                               samples; ; ;                                                                      ;                                                                     2                                                                     9                                                                Q = 1,;                                         there is an edge between node;                                                                     1;                                                                      ;                                                                   and;                                                                     i;                                                                      ;                                                             for every;                                                                     i;                                                                    (2;                                                                   \u2264 i;                                                                 \u2264 N),; ; ;                                                                                                                                                                                                                  ;                                    Fl\u00f3ra can't add extra leaf to node;                                                                     1; ; ;                                                                      ;                                                                     3                                                                     9                                                                Q\n    = 1,;                                         there is an edge between node;                                                                     i;                                                                      ;                                                                   and;                                                                   i+1;                                                                      ;                                                               for all;                                                                    (1;                                                             \u2264 i < N),; ; ;                                                                                                                                                                                                                  ;                                    Fl\u00f3ra can't\n    add extra leaf to node;                                                                     1;                                                                      ;                                                              nor node;                                                                     N; ; ;                                                                      ;                                                                     4                                                                    16                                                                     N;                                                            \u2264 20000, Q;                                                                 \u2264 300; ; ;                                                                      ;                                                                     5                                                                    19                                                                      ;      the\n    original tree is a perfect binary tree rooted at node \n        1; ; ;                                                                                                                                                                                                                  ; (i.e. each internal node has exactly \n        2\n     children, and every leaf; ; ;                                                                                                                                                                                                                  ;                                  has the same distance from the root); ; ;                                                                      ;                                                                     6                                                                    17                                                               D_i = 1;                                                                      ;                                                               for all;                                                                     i; ; ;                                                                      ;                                                                     7                                                                    30                                                                      ;                                             no\n    additional constraints; ; ;                                                                      ;                                                                      ;  ]\n Example Input 7 3 1\n2 2 4 4 5 5 6 5 7 3 4 1 4 2 2 4 1 1 Output -1 10 8 Note The following picture\nshows the second variation. A possible solution is to clean the path between\nleaves \n    1 - 6\n, \n    A - 7\n and \n    B - 3\n. You can download the above\nexample and an additional (bigger) sample input here:\nhttps://gofile.io/d/8QlbsS\n\n",
        "cf_contest_id": 1403,
        "cf_index": "B",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "data structures",
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]