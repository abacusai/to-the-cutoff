[
    {
        "name": "Make it Beautiful",
        "description": "An array \n    a\n is called ugly if it contains at least one element which is\nequal to the sum of all elements before it. If the array is not ugly, it is\nbeautiful. For example: the array \n    [6, 3, 9, 6]\n is ugly: the element\n\n    9\n is equal to \n    6 + 3\n; the array \n    [5, 5, 7]\n is ugly: the\nelement \n    5\n (the second one) is equal to \n    5\n; the array \n    [8, 4, 10,\n    14]\n is beautiful: \n    8 \n     0\n, \n    4 \n     8\n, \n    10 \n     8 + 4\n,\n\n    14 \n     8 + 4 + 10\n, so there is no element which is equal to the sum of\nall elements before it. You are given an array \n    a\n such that \n    1 \n    \u2264\n    a_1 \n    \u2264 a_2 \n    \u2264\n    \u2026\n    \u2264 a_n \n    \u2264 100\n. You have to reorder the\nelements of \n    a\n in such a way that the resulting array is beautiful. Note\nthat you are not allowed to insert new elements or erase existing ones, you\ncan only change the order of elements of \n    a\n. You are allowed to keep the\narray \n    a\n unchanged, if it is beautiful. Input The first line contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2000\n) \u2014 the number of test cases. Each\ntest case consists of two lines. The first line contains one integer \n    n\n\n(\n    2 \n    \u2264 n \n    \u2264 50\n). The second line contains \n    n\n integers \n    a_1,\n    a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_1 \n    \u2264 a_2 \n    \u2264\n    \u2026\n    \u2264 a_n \n    \u2264\n    100\n). Output For each test case, print the answer as follows: if it is\nimpossible to reorder the elements of \n    a\n in such a way that it becomes\nbeautiful, print NO; otherwise, in the first line, print YES. In the second\nline, print \n    n\n integers \u2014 any beautiful array which can be obtained from\n\n    a\n by reordering its elements. If there are multiple such arrays, print\nany of them. Example Input 4 4 3 3 6 6 2 10 10 5 1 2 3 4 5 3 1 4 4 Output YES\n3 6 3 6 NO YES 2 4 1 5 3 YES 1 4 4\n\n",
        "cf_contest_id": 1783,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n4\r\n3 3 6 6\r\n2\r\n10 10\r\n5\r\n1 2 3 4 5\r\n3\r\n1 4 4\r\n",
                "YES 6 3 3 6\r\nNO\r\nYES 5 1 2 3 4\r\nYES 4 1 4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n4\r\n3 3 6 6\r\n",
                "YES 6 3 3 6\r\n"
            ],
            [
                "1\r\n3\r\n1 1 10\r\n",
                "YES 10 1 1\r\n"
            ],
            [
                "1\r\n2\r\n2 6\r\n",
                "YES 6 2\r\n"
            ],
            [
                "1\r\n38\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38\r\n",
                "YES 38 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37\r\n"
            ]
        ]
    }
]