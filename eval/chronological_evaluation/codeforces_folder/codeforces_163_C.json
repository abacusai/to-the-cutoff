[
    {
        "name": "Conveyor",
        "description": "Anton came to a chocolate factory. There he found a working conveyor and\ndecided to run on it from the beginning to the end. The conveyor is a looped\nbelt with a total length of 2l meters, of which l meters are located on the\nsurface and are arranged in a straight line. The part of the belt which turns\nat any moment (the part which emerges from under the floor to the surface and\nreturns from the surface under the floor) is assumed to be negligibly short.\nThe belt is moving uniformly at speed v1 meters per second. Anton will be\nmoving on it in the same direction at the constant speed of v2 meters per\nsecond, so his speed relatively to the floor will be v1 + v2 meters per\nsecond. Anton will neither stop nor change the speed or the direction of\nmovement. Here and there there are chocolates stuck to the belt (n\nchocolates). They move together with the belt, and do not come off it. Anton\nis keen on the chocolates, but he is more keen to move forward. So he will\npick up all the chocolates he will pass by, but nothing more. If a chocolate\nis at the beginning of the belt at the moment when Anton starts running, he\nwill take it, and if a chocolate is at the end of the belt at the moment when\nAnton comes off the belt, he will leave it. The figure shows an example with\ntwo chocolates. One is located in the position a1 = l - d, and is now on the\ntop half of the belt, the second one is in the position a2 = 2l - d, and is\nnow on the bottom half of the belt. You are given the positions of the\nchocolates relative to the initial start position of the belt 0 \u2264 a1 < a2 <\n... < an < 2l. The positions on the belt from 0 to l correspond to the top,\nand from l to 2l \u2014 to the the bottom half of the belt (see example). All\ncoordinates are given in meters. Anton begins to run along the belt at a\nrandom moment of time. This means that all possible positions of the belt at\nthe moment he starts running are equiprobable. For each i from 0 to n\ncalculate the probability that Anton will pick up exactly i chocolates. Input\nThe first line contains space-separated integers n, l, v1 and v2 (1 \u2264 n \u2264\n10^5, 1 \u2264 l, v1, v2 \u2264 10^9) \u2014 the number of the chocolates, the length of the\nconveyor's visible part, the conveyor's speed and Anton's speed. The second\nline contains a sequence of space-separated integers a1, a2, ..., an (0 \u2264 a1 <\na2 < ... < an < 2l) \u2014 the coordinates of the chocolates. Output Print n + 1\nnumbers (one per line): the probabilities that Anton picks up exactly i\nchocolates, for each i from 0 (the first line) to n (the last line). The\nanswer will be considered correct if each number will have absolute or\nrelative error of at most than 10^-9. Examples Input 1 1 1 1 0 Output\n0.75000000000000000000 0.25000000000000000000 Input 2 3 1 2 2 5 Output\n0.33333333333333331000 0.66666666666666663000 0.00000000000000000000 Note In\nthe first sample test Anton can pick up a chocolate if by the moment he starts\nrunning its coordinate is less than 0.5; but if by the moment the boy starts\nrunning the chocolate's coordinate is greater than or equal to 0.5, then Anton\nwon't be able to pick it up. As all positions of the belt are equiprobable,\nthe probability of picking up the chocolate equals , and the probability of\nnot picking it up equals .\n\n",
        "cf_contest_id": 163,
        "cf_index": "C",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 1 1 1\r\n0\r\n",
                "0.75\r\n0.25\r\n"
            ],
            [
                "2 3 1 2\r\n2 5\r\n",
                "0.333333333333\r\n0.666666666667\r\n0.0\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 3 2 1\r\n2 4\r\n",
                "0.666666666667\r\n0.333333333333\r\n0.0\r\n"
            ],
            [
                "4 2 1 1\r\n0 1 2 3\r\n",
                "0.0\r\n1.0\r\n0.0\r\n0.0\r\n0.0\r\n"
            ],
            [
                "4 2 1 2\r\n0 1 2 3\r\n",
                "0.0\r\n0.666666666667\r\n0.333333333333\r\n0.0\r\n0.0\r\n"
            ],
            [
                "4 2 2 1\r\n0 1 2 3\r\n",
                "0.333333333333\r\n0.666666666667\r\n0.0\r\n0.0\r\n0.0\r\n"
            ],
            [
                "10 7 3 5\r\n0 1 3 4 5 6 9 10 12 13\r\n",
                "0.0\r\n0.0\r\n0.205357142857\r\n0.464285714286\r\n0.330357142857\r\n0.0\r\n0.0\r\n0.0\r\n0.0\r\n0.0\r\n0.0\r\n"
            ],
            [
                "10 7 5 3\r\n0 2 3 4 5 6 8 9 10 12\r\n",
                "0.0\r\n0.303571428571\r\n0.517857142857\r\n0.178571428571\r\n0.0\r\n0.0\r\n0.0\r\n0.0\r\n0.0\r\n0.0\r\n0.0\r\n"
            ],
            [
                "10 100 1 2\r\n25 51 71 126 143 148 167 179 180 199\r\n",
                "0.0\r\n0.0683333333333\r\n0.261666666667\r\n0.276666666667\r\n0.171666666667\r\n0.105\r\n0.116666666667\r\n0.0\r\n0.0\r\n0.0\r\n0.0\r\n"
            ],
            [
                "10 100 2 1\r\n18 53 68 102 123 155 165 173 186 195\r\n",
                "0.0116666666667\r\n0.511666666667\r\n0.303333333333\r\n0.145\r\n0.0283333333333\r\n0.0\r\n0.0\r\n0.0\r\n0.0\r\n0.0\r\n0.0\r\n"
            ],
            [
                "6 1000000000 100000000 100000000\r\n0 100000000 200000000 300000000 400000000 500000000\r\n",
                "0.5\r\n0.1\r\n0.1\r\n0.1\r\n0.1\r\n0.1\r\n0.0\r\n"
            ]
        ]
    }
]