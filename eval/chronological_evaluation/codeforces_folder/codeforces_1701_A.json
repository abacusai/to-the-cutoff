[
    {
        "name": "Grass Field",
        "description": "There is a field of size \n    2 \n    \u00d7 2\n. Each cell of this field can\neither contain grass or be empty. The value \n    a_i, j\n is \n    1\n if the\ncell \n    (i, j)\n contains grass, or \n    0\n otherwise. In one move, you can\nchoose one row and one column and cut all the grass in this row and this\ncolumn. In other words, you choose the row \n    x\n and the column \n    y\n,\nthen you cut the grass in all cells \n    a_x, i\n and all cells \n    a_i,\n    y\n for all \n    i\n from \n    1\n to \n    2\n. After you cut the grass from a\ncell, it becomes empty (i. e. its value is replaced by \n    0\n). Your task is\nto find the minimum number of moves required to cut the grass in all non-empty\ncells of the field (i. e. make all \n    a_i, j\n zeros). You have to answer\n\n    t\n independent test cases. Input The first line of the input contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 16\n) \u2014 the number of test cases. Then\n\n    t\n test cases follow. The test case consists of two lines, each of these\nlines contains two integers. The \n    j\n-th integer in the \n    i\n-th row is\n\n    a_i, j\n. If \n    a_i, j = 0\n then the cell \n    (i, j)\n is empty, and\nif \n    a_i, j = 1\n the cell \n    (i, j)\n contains grass. Output For each\ntest case, print one integer \u2014 the minimum number of moves required to cut the\ngrass in all non-empty cells of the field (i. e. make all \n    a_i, j\n\nzeros) in the corresponding test case. Example Input 3 0 0 0 0 1 0 0 1 1 1 1 1\nOutput 0 1 2\n\n",
        "cf_contest_id": 1701,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n0 0\r\n0 0\r\n1 0\r\n0 1\r\n1 1\r\n1 1\r\n",
                "0 1 2 "
            ]
        ],
        "private_cases": [
            [
                "16\r\n0 0\r\n1 1\r\n0 1\r\n1 0\r\n1 0\r\n0 1\r\n0 0\r\n0 0\r\n0 0\r\n0 1\r\n0 1\r\n1 1\r\n1 1\r\n0 0\r\n0 1\r\n0 1\r\n1 1\r\n0 1\r\n1 0\r\n0 0\r\n1 1\r\n1 0\r\n1 1\r\n1 1\r\n0 1\r\n0 0\r\n0 0\r\n1 0\r\n1 0\r\n1 1\r\n1 0\r\n1 0\r\n",
                "1 1 1 0 1 1 1 1 1 1 1 2 1 1 1 1 "
            ],
            [
                "2\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "2 2 "
            ],
            [
                "4\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n",
                "2 2 2 2 "
            ]
        ]
    }
]