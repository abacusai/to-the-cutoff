[
    {
        "name": "Sum of Round Numbers",
        "description": "A positive (strictly greater than zero) integer is called round if it is of\nthe form d00...0. In other words, a positive integer is round if all its\ndigits except the leftmost (most significant) are equal to zero. In\nparticular, all numbers from \n    1\n to \n    9\n (inclusive) are round. For\nexample, the following numbers are round: \n    4000\n, \n    1\n, \n    9\n,\n\n    800\n, \n    90\n. The following numbers are not round: \n    110\n,\n\n    707\n, \n    222\n, \n    1001\n. You are given a positive integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 10^4\n). Represent the number \n    n\n as a sum of round\nnumbers using the minimum number of summands (addends). In other words, you\nneed to represent the given number \n    n\n as a sum of the least number of\nterms, each of which is a round number. Input The first line contains an\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases in the\ninput. Then \n    t\n test cases follow. Each test case is a line containing an\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^4\n). Output Print \n    t\n answers to\nthe test cases. Each answer must begin with an integer \n    k\n \u2014 the minimum\nnumber of summands. Next, \n    k\n terms must follow, each of which is a round\nnumber, and their sum is \n    n\n. The terms can be printed in any order. If\nthere are several answers, print any of them. Example Input 5 5009 7 9876\n10000 10 Output 2 5000 9 1 7 4 800 70 6 9000 1 10000 1 10\n\n",
        "cf_contest_id": 1352,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n5009\r\n7\r\n9876\r\n10000\r\n10\r\n",
                "2 9 5000\r\n1 7\r\n4 6 70 800 9000\r\n1 10000\r\n1 10\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n",
                "1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n"
            ],
            [
                "2\r\n9999\r\n52\r\n",
                "4 9 90 900 9000\r\n2 2 50\r\n"
            ],
            [
                "2\r\n999\r\n52\r\n",
                "3 9 90 900\r\n2 2 50\r\n"
            ],
            [
                "2\r\n954\r\n18\r\n",
                "3 4 50 900\r\n2 8 10\r\n"
            ]
        ]
    }
]