[
    {
        "name": "Data Recovery",
        "description": "Not so long ago company R2 bought company R1 and consequently, all its\ndevelopments in the field of multicore processors. Now the R2 laboratory is\ntesting one of the R1 processors. The testing goes in n steps, at each step\nthe processor gets some instructions, and then its temperature is measured.\nThe head engineer in R2 is keeping a report record on the work of the\nprocessor: he writes down the minimum and the maximum measured temperature in\nhis notebook. His assistant had to write down all temperatures into his\nnotebook, but (for unknown reasons) he recorded only m. The next day, the\nengineer's assistant filed in a report with all the m temperatures. However,\nthe chief engineer doubts that the assistant wrote down everything correctly\n(naturally, the chief engineer doesn't doubt his notes). So he asked you to\nhelp him. Given numbers n, m, min, max and the list of m temperatures\ndetermine whether you can upgrade the set of m temperatures to the set of n\ntemperatures (that is add n - m temperatures), so that the minimum temperature\nwas min and the maximum one was max. Input The first line contains four\nintegers n, m, min, max (1 \u2264 m < n \u2264 100; 1 \u2264 min < max \u2264 100). The second\nline contains m space-separated integers ti (1 \u2264 ti \u2264 100) \u2014 the temperatures\nreported by the assistant. Note, that the reported temperatures, and the\ntemperatures you want to add can contain equal temperatures. Output If the\ndata is consistent, print 'Correct' (without the quotes). Otherwise, print\n'Incorrect' (without the quotes). Examples Input 2 1 1 2 1 Output Correct\nInput 3 1 1 3 2 Output Correct Input 2 1 1 3 2 Output Incorrect Note In the\nfirst test sample one of the possible initial configurations of temperatures\nis [1, 2]. In the second test sample one of the possible initial\nconfigurations of temperatures is [2, 1, 3]. In the third test sample it is\nimpossible to add one temperature to obtain the minimum equal to 1 and the\nmaximum equal to 3.\n\n",
        "cf_contest_id": 413,
        "cf_index": "A",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1 1 2\r\n1\r\n",
                "Correct\r\n"
            ],
            [
                "3 1 1 3\r\n2\r\n",
                "Correct\r\n"
            ],
            [
                "2 1 1 3\r\n2\r\n",
                "Incorrect\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 1 1 5\r\n3\r\n",
                "Correct\r\n"
            ],
            [
                "3 2 1 5\r\n1 5\r\n",
                "Correct\r\n"
            ],
            [
                "3 2 1 5\r\n1 1\r\n",
                "Correct\r\n"
            ],
            [
                "3 2 1 5\r\n5 5\r\n",
                "Correct\r\n"
            ],
            [
                "3 2 1 5\r\n1 6\r\n",
                "Incorrect\r\n"
            ],
            [
                "3 2 5 10\r\n1 10\r\n",
                "Incorrect\r\n"
            ],
            [
                "6 5 3 6\r\n4 4 4 4 4\r\n",
                "Incorrect\r\n"
            ],
            [
                "100 50 68 97\r\n20 42 93 1 98 6 32 11 48 46 82 96 24 73 40 100 99 10 55 87 65 80 97 54 59 48 30 22 16 92 66 2 22 60 23 81 64 60 34 60 99 99 4 70 91 99 30 20 41 96\r\n",
                "Incorrect\r\n"
            ],
            [
                "100 50 1 2\r\n1 1 2 1 1 2 2 1 1 1 1 1 2 2 1 2 1 2 2 1 1 1 2 2 2 1 1 2 1 1 1 1 2 2 1 1 1 1 1 2 1 1 1 2 1 2 2 2 1 2\r\n",
                "Correct\r\n"
            ],
            [
                "100 99 1 2\r\n2 1 1 1 2 2 1 1 1 2 2 2 1 2 1 1 2 1 1 2 1 2 2 1 2 1 2 1 2 1 2 2 2 2 1 1 1 1 1 2 1 2 2 1 2 2 2 1 1 1 1 1 2 2 2 2 1 2 2 1 1 1 2 1 1 2 1 1 2 1 2 1 2 1 1 1 1 2 1 1 1 1 1 2 2 2 1 1 1 1 2 2 2 2 1 1 2 2 2\r\n",
                "Correct\r\n"
            ],
            [
                "3 2 2 100\r\n40 1\r\n",
                "Incorrect\r\n"
            ],
            [
                "3 2 2 3\r\n4 4\r\n",
                "Incorrect\r\n"
            ],
            [
                "5 2 2 4\r\n2 2\r\n",
                "Correct\r\n"
            ],
            [
                "5 1 1 4\r\n1\r\n",
                "Correct\r\n"
            ],
            [
                "9 7 1 4\r\n4 3 3 2 2 4 1\r\n",
                "Correct\r\n"
            ],
            [
                "9 5 2 3\r\n4 2 4 3 3\r\n",
                "Incorrect\r\n"
            ],
            [
                "6 3 1 3\r\n1 4 2\r\n",
                "Incorrect\r\n"
            ],
            [
                "3 2 1 99\r\n34 100\r\n",
                "Incorrect\r\n"
            ],
            [
                "4 2 1 99\r\n100 38\r\n",
                "Incorrect\r\n"
            ],
            [
                "5 2 1 99\r\n100 38\r\n",
                "Incorrect\r\n"
            ],
            [
                "4 2 1 99\r\n36 51\r\n",
                "Correct\r\n"
            ],
            [
                "7 6 3 10\r\n5 10 7 7 4 5\r\n",
                "Correct\r\n"
            ],
            [
                "8 6 3 10\r\n8 5 7 8 4 4\r\n",
                "Correct\r\n"
            ],
            [
                "9 6 3 10\r\n9 7 7 5 3 10\r\n",
                "Correct\r\n"
            ],
            [
                "16 15 30 40\r\n36 37 35 36 34 34 37 35 32 33 31 38 39 38 38\r\n",
                "Incorrect\r\n"
            ],
            [
                "17 15 30 40\r\n38 36 37 34 30 38 38 31 38 38 36 39 39 37 35\r\n",
                "Correct\r\n"
            ],
            [
                "18 15 30 40\r\n35 37 31 32 30 33 36 38 36 38 31 30 39 32 36\r\n",
                "Correct\r\n"
            ],
            [
                "17 16 30 40\r\n39 32 37 31 40 32 36 34 56 34 40 36 37 36 33 36\r\n",
                "Incorrect\r\n"
            ],
            [
                "18 16 30 40\r\n32 35 33 39 34 30 37 34 30 34 39 18 32 37 37 36\r\n",
                "Incorrect\r\n"
            ],
            [
                "19 16 30 40\r\n36 30 37 30 37 32 34 30 35 35 33 35 39 37 46 37\r\n",
                "Incorrect\r\n"
            ],
            [
                "2 1 2 100\r\n38\r\n",
                "Incorrect\r\n"
            ],
            [
                "3 1 2 100\r\n1\r\n",
                "Incorrect\r\n"
            ],
            [
                "4 1 2 100\r\n1\r\n",
                "Incorrect\r\n"
            ],
            [
                "91 38 1 3\r\n3 2 3 2 3 2 3 3 1 1 1 2 2 1 3 2 3 1 3 3 1 3 3 2 1 2 2 3 1 2 1 3 2 2 3 1 1 2\r\n",
                "Correct\r\n"
            ],
            [
                "4 3 2 10\r\n6 3 10\r\n",
                "Correct\r\n"
            ],
            [
                "41 6 4 10\r\n10 7 4 9 9 10\r\n",
                "Correct\r\n"
            ],
            [
                "21 1 1 9\r\n9\r\n",
                "Correct\r\n"
            ],
            [
                "2 1 9 10\r\n10\r\n",
                "Correct\r\n"
            ],
            [
                "2 1 2 9\r\n9\r\n",
                "Correct\r\n"
            ],
            [
                "8 7 5 9\r\n6 7 8 5 5 6 6\r\n",
                "Correct\r\n"
            ],
            [
                "3 2 2 8\r\n7 2\r\n",
                "Correct\r\n"
            ],
            [
                "71 36 1 10\r\n7 10 8 1 3 8 5 7 3 10 8 1 6 4 5 7 8 2 4 3 4 10 8 5 1 2 8 8 10 10 4 3 7 9 7 8\r\n",
                "Correct\r\n"
            ],
            [
                "85 3 4 9\r\n4 8 7\r\n",
                "Correct\r\n"
            ],
            [
                "4 3 4 10\r\n9 10 5\r\n",
                "Correct\r\n"
            ],
            [
                "2 1 1 5\r\n1\r\n",
                "Correct\r\n"
            ],
            [
                "91 75 1 10\r\n2 6 9 7 4 9 4 8 10 6 4 1 10 6 5 9 7 5 1 4 6 4 8 2 1 3 5 7 6 9 5 5 8 1 7 1 4 2 8 3 1 6 6 2 10 6 2 2 8 5 4 5 5 3 10 9 4 3 1 9 10 3 2 4 8 7 4 9 3 1 1 1 3 4 5\r\n",
                "Correct\r\n"
            ],
            [
                "10 4 1 8\r\n7 9 6 6\r\n",
                "Incorrect\r\n"
            ],
            [
                "18 1 3 10\r\n2\r\n",
                "Incorrect\r\n"
            ],
            [
                "6 2 4 8\r\n6 3\r\n",
                "Incorrect\r\n"
            ],
            [
                "17 6 2 8\r\n3 8 6 1 6 4\r\n",
                "Incorrect\r\n"
            ],
            [
                "21 1 5 8\r\n4\r\n",
                "Incorrect\r\n"
            ],
            [
                "2 1 1 10\r\n9\r\n",
                "Incorrect\r\n"
            ],
            [
                "2 1 4 8\r\n5\r\n",
                "Incorrect\r\n"
            ],
            [
                "2 1 1 7\r\n6\r\n",
                "Incorrect\r\n"
            ],
            [
                "2 1 4 9\r\n5\r\n",
                "Incorrect\r\n"
            ],
            [
                "2 1 3 8\r\n7\r\n",
                "Incorrect\r\n"
            ],
            [
                "2 1 5 9\r\n6\r\n",
                "Incorrect\r\n"
            ],
            [
                "3 2 1 10\r\n4 9\r\n",
                "Incorrect\r\n"
            ],
            [
                "2 1 4 10\r\n7\r\n",
                "Incorrect\r\n"
            ],
            [
                "2 1 2 9\r\n8\r\n",
                "Incorrect\r\n"
            ],
            [
                "2 1 3 9\r\n3\r\n",
                "Correct\r\n"
            ],
            [
                "3 2 6 7\r\n6 6\r\n",
                "Correct\r\n"
            ],
            [
                "6 4 1 10\r\n11 10 9 1\r\n",
                "Incorrect\r\n"
            ],
            [
                "7 6 3 8\r\n3 4 5 6 7 8\r\n",
                "Correct\r\n"
            ],
            [
                "5 3 1 5\r\n2 3 4\r\n",
                "Correct\r\n"
            ]
        ]
    }
]