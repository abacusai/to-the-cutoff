[
    {
        "name": "World Tour",
        "description": "A famous sculptor Cicasso goes to a world tour! Well, it is not actually a\nworld-wide. But not everyone should have the opportunity to see works of\nsculptor, shouldn't he? Otherwise there will be no any exclusivity. So Cicasso\nwill entirely hold the world tour in his native country \u2014 Berland. Cicasso is\nvery devoted to his work and he wants to be distracted as little as possible.\nTherefore he will visit only four cities. These cities will be different, so\nno one could think that he has \"favourites\". Of course, to save money, he will\nchose the shortest paths between these cities. But as you have probably\nguessed, Cicasso is a weird person. Although he doesn't like to organize\nexhibitions, he likes to travel around the country and enjoy its scenery. So\nhe wants the total distance which he will travel to be as large as possible.\nHowever, the sculptor is bad in planning, so he asks you for help. There are n\ncities and m one-way roads in Berland. You have to choose four different\ncities, which Cicasso will visit and also determine the order in which he will\nvisit them. So that the total distance he will travel, if he visits cities in\nyour order, starting from the first city in your list, and ending in the last,\nchoosing each time the shortest route between a pair of cities \u2014 will be the\nlargest. Note that intermediate routes may pass through the cities, which are\nassigned to the tour, as well as pass twice through the same city. For\nexample, the tour can look like that: . Four cities in the order of visiting\nmarked as overlines: [1, 5, 2, 4]. Note that Berland is a high-tech country.\nSo using nanotechnologies all roads were altered so that they have the same\nlength. For the same reason moving using regular cars is not very popular in\nthe country, and it can happen that there are such pairs of cities, one of\nwhich generally can not be reached by car from the other one. However, Cicasso\nis very conservative and cannot travel without the car. Choose cities so that\nthe sculptor can make the tour using only the automobile. It is guaranteed\nthat it is always possible to do. Input In the first line there is a pair of\nintegers n and m (4 \u2264 n \u2264 3000, 3 \u2264 m \u2264 5000) \u2014 a number of cities and one-way\nroads in Berland. Each of the next m lines contains a pair of integers ui, vi\n(1 \u2264 ui, vi \u2264 n) \u2014 a one-way road from the city ui to the city vi. Note that\nui and vi are not required to be distinct. Moreover, it can be several one-way\nroads between the same pair of cities. Output Print four integers \u2014 numbers of\ncities which Cicasso will visit according to optimal choice of the route.\nNumbers of cities should be printed in the order that Cicasso will visit them.\nIf there are multiple solutions, print any of them. Example Input 8 9 1 2 2 3\n3 4 4 1 4 5 5 6 6 7 7 8 8 5 Output 2 1 8 7 Note Let d(x, y) be the shortest\ndistance between cities x and y. Then in the example d(2, 1) = 3, d(1, 8) = 7,\nd(8, 7) = 3. The total distance equals 13.\n\n",
        "cf_contest_id": 666,
        "cf_index": "B",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "8 9\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n4 5\r\n5 6\r\n6 7\r\n7 8\r\n8 5\r\n",
                "2 1 8 7"
            ]
        ],
        "private_cases": [
            [
                "6 16\r\n1 4\r\n1 4\r\n1 1\r\n1 2\r\n2 6\r\n3 3\r\n3 4\r\n3 3\r\n4 6\r\n4 6\r\n5 1\r\n5 2\r\n5 5\r\n5 5\r\n5 2\r\n6 4\r\n",
                "5 1 2 4"
            ],
            [
                "9 20\r\n2 5\r\n3 2\r\n3 4\r\n4 8\r\n4 4\r\n4 3\r\n4 3\r\n4 3\r\n5 9\r\n5 2\r\n5 1\r\n6 2\r\n6 3\r\n7 1\r\n7 9\r\n7 7\r\n8 9\r\n8 9\r\n9 4\r\n9 8\r\n",
                "7 2 8 1"
            ],
            [
                "16 23\r\n1 5\r\n2 16\r\n2 6\r\n2 5\r\n3 16\r\n5 6\r\n5 10\r\n5 5\r\n6 4\r\n6 4\r\n6 9\r\n8 10\r\n9 3\r\n11 2\r\n11 12\r\n11 9\r\n12 14\r\n12 2\r\n13 1\r\n13 4\r\n15 1\r\n15 6\r\n16 2\r\n",
                "13 2 3 4"
            ],
            [
                "4 35\r\n1 1\r\n1 1\r\n1 1\r\n1 4\r\n1 2\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n2 4\r\n2 2\r\n2 1\r\n2 4\r\n2 2\r\n2 1\r\n2 4\r\n2 2\r\n2 2\r\n2 3\r\n3 4\r\n3 3\r\n3 3\r\n3 4\r\n3 2\r\n3 4\r\n3 3\r\n3 2\r\n3 4\r\n3 1\r\n3 3\r\n4 4\r\n4 4\r\n4 2\r\n4 4\r\n4 2\r\n",
                "4 1 3 2"
            ],
            [
                "8 29\r\n1 7\r\n1 2\r\n1 6\r\n1 6\r\n1 7\r\n2 3\r\n2 2\r\n2 1\r\n3 7\r\n3 6\r\n3 7\r\n4 3\r\n4 8\r\n5 4\r\n5 4\r\n5 7\r\n5 7\r\n6 1\r\n6 3\r\n7 1\r\n7 7\r\n7 3\r\n7 5\r\n7 5\r\n7 1\r\n7 1\r\n7 3\r\n8 6\r\n8 1\r\n",
                "3 2 8 4"
            ],
            [
                "4 15\r\n1 2\r\n1 4\r\n1 2\r\n1 4\r\n1 1\r\n1 3\r\n2 1\r\n2 4\r\n3 1\r\n3 2\r\n4 1\r\n4 2\r\n4 2\r\n4 4\r\n4 3\r\n",
                "1 2 3 4"
            ],
            [
                "4 14\r\n1 3\r\n1 1\r\n2 4\r\n2 2\r\n2 3\r\n2 4\r\n2 1\r\n3 3\r\n3 1\r\n3 4\r\n3 4\r\n4 1\r\n4 4\r\n4 1\r\n",
                "2 1 4 3"
            ],
            [
                "4 3\r\n3 2\r\n2 1\r\n1 4\r\n",
                "3 2 1 4"
            ],
            [
                "5 4\r\n1 3\r\n3 5\r\n5 2\r\n2 4\r\n",
                "1 3 2 4"
            ],
            [
                "12 11\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n7 6\r\n7 8\r\n8 9\r\n9 10\r\n10 11\r\n11 12\r\n",
                "1 2 3 6"
            ],
            [
                "4 6\r\n1 2\r\n1 3\r\n1 4\r\n2 3\r\n3 4\r\n4 2\r\n",
                "1 2 4 3"
            ]
        ]
    }
]