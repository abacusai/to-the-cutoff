[
    {
        "name": "Card Trick",
        "description": "Monocarp has just learned a new card trick, and can't wait to present it to\nyou. He shows you the entire deck of \n    n\n cards. You see that the values of\ncards from the topmost to the bottommost are integers \n    a_1, a_2, \n    \u2026,\n    a_n\n, and all values are different. Then he asks you to shuffle the deck\n\n    m\n times. With the \n    j\n-th shuffle, you should take \n    b_j\n topmost\ncards and move them under the remaining \n    (n - b_j)\n cards without changing\nthe order. And then, using some magic, Monocarp tells you the topmost card of\nthe deck. However, you are not really buying that magic. You tell him that you\nknow the topmost card yourself. Can you surprise Monocarp and tell him the\ntopmost card before he shows it? Input The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of testcases. The\nfirst line of each testcase contains a single integer \n    n\n (\n    2 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of cards in the deck. The second line\ncontains \n    n\n pairwise distinct integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1\n    \n    \u2264 a_i \n    \u2264 n\n) \u2014 the values of the cards. The third line contains a\nsingle integer \n    m\n (\n    1 \n    \u2264 m \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of\nshuffles. The fourth line contains \n    m\n integers \n    b_1, b_2, \n    \u2026,\n    b_m\n (\n    1 \n    \u2264 b_j \n    \u2264 n - 1\n) \u2014 the amount of cards that are moved on\nthe \n    j\n-th shuffle. The sum of \n    n\n over all testcases doesn't exceed\n\n    2 \n    \u00b7 10^5\n. The sum of \n    m\n over all testcases doesn't exceed\n\n    2 \n    \u00b7 10^5\n. Output For each testcase, print a single integer \u2014 the\nvalue of the card on the top of the deck after the deck is shuffled \n    m\n\ntimes. Example Input 3 2 1 2 3 1 1 1 4 3 1 4 2 2 3 1 5 2 1 5 4 3 5 3 2 1 2 1\nOutput 2 3 3 Note In the first testcase, each shuffle effectively swaps two\ncards. After three swaps, the deck will be \n    [2, 1]\n. In the second\ntestcase, the second shuffle cancels what the first shuffle did. First, three\ntopmost cards went underneath the last card, then that card went back below\nthe remaining three cards. So the deck remained unchanged from the initial one\n\u2014 the topmost card has value \n    3\n.\n\n",
        "cf_contest_id": 1681,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2\r\n1 2\r\n3\r\n1 1 1\r\n4\r\n3 1 4 2\r\n2\r\n3 1\r\n5\r\n2 1 5 4 3\r\n5\r\n3 2 1 2 1\r\n",
                "2\r\n3\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]