[
    {
        "name": "Prefixes and Suffixes",
        "description": "Ivan wants to play a game with you. He picked some string \n    s\n of length\n\n    n\n consisting only of lowercase Latin letters. You don't know this\nstring. Ivan has informed you about all its improper prefixes and suffixes\n(i.e. prefixes and suffixes of lengths from \n    1\n to \n    n-1\n), but he\ndidn't tell you which strings are prefixes and which are suffixes. Ivan wants\nyou to guess which of the given \n    2n-2\n strings are prefixes of the given\nstring and which are suffixes. It may be impossible to guess the string Ivan\npicked (since multiple strings may give the same set of suffixes and\nprefixes), but Ivan will accept your answer if there is at least one string\nthat is consistent with it. Let the game begin! Input The first line of the\ninput contains one integer number \n    n\n (\n    2 \n    \u2264 n \n    \u2264 100\n) \u2014 the\nlength of the guessed string \n    s\n. The next \n    2n-2\n lines are contain\nprefixes and suffixes, one per line. Each of them is the string of length from\n\n    1\n to \n    n-1\n consisting only of lowercase Latin letters. They can be\ngiven in arbitrary order. It is guaranteed that there are exactly \n    2\n\nstrings of each length from \n    1\n to \n    n-1\n. It is also guaranteed that\nthese strings are prefixes and suffixes of some existing string of length\n\n    n\n. Output Print one string of length \n    2n-2\n \u2014 the string consisting\nonly of characters 'P' and 'S'. The number of characters 'P' should be equal\nto the number of characters 'S'. The \n    i\n-th character of this string\nshould be 'P' if the \n    i\n-th of the input strings is the prefix and 'S'\notherwise. If there are several possible answers, you can print any. Examples\nInput 5 ba a abab a aba baba ab aba Output SPPSPSPS Input 3 a aa aa a Output\nPPSS Input 2 a c Output PS Note The only string which Ivan can guess in the\nfirst example is \"ababa\". The only string which Ivan can guess in the second\nexample is \"aaa\". Answers \"SPSP\", \"SSPP\" and \"PSPS\" are also acceptable. In\nthe third example Ivan can guess the string \"ac\" or the string \"ca\". The\nanswer \"SP\" is also acceptable.\n\n",
        "cf_contest_id": 1532,
        "cf_index": "F",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\nba\r\na\r\nabab\r\na\r\naba\r\nbaba\r\nab\r\naba\r\n",
                "SPPSPSPS"
            ],
            [
                "3\r\na\r\naa\r\naa\r\na\r\n",
                "PPSS"
            ],
            [
                "2\r\na\r\nc\r\n",
                "PS"
            ]
        ],
        "private_cases": [
            [
                "2\r\nz\r\nz\r\n",
                "PS"
            ],
            [
                "5\r\nba\r\na\r\nbaba\r\na\r\naba\r\nabab\r\nab\r\naba\r\n",
                "SSSPSPPP"
            ],
            [
                "5\r\nb\r\nb\r\nba\r\nab\r\nbab\r\nbab\r\nabab\r\nbaba\r\n",
                "SPPSSPSP"
            ],
            [
                "5\r\nc\r\ncd\r\ncdc\r\ncdcc\r\nb\r\ncb\r\nccb\r\ndccb\r\n",
                "PPPPSSSS"
            ],
            [
                "3\r\nba\r\nab\r\na\r\na\r\n",
                "SPSP"
            ],
            [
                "3\r\na\r\nb\r\naa\r\nab\r\n",
                "PSPS"
            ],
            [
                "3\r\na\r\na\r\nba\r\nab\r\n",
                "SPSP"
            ],
            [
                "4\r\nbab\r\naba\r\nab\r\nab\r\na\r\nb\r\n",
                "SPSPPS"
            ],
            [
                "5\r\nabab\r\nbaba\r\nb\r\nb\r\nbab\r\nbab\r\nba\r\nab\r\n",
                "SPSPSPPS"
            ],
            [
                "4\r\na\r\nc\r\nac\r\nab\r\naba\r\nbac\r\n",
                "PSSPPS"
            ],
            [
                "4\r\nb\r\nbb\r\nbba\r\nbbb\r\nba\r\na\r\n",
                "PPSPSS"
            ],
            [
                "4\r\nbab\r\nab\r\na\r\nab\r\naba\r\nb\r\n",
                "SSPPPS"
            ],
            [
                "3\r\nb\r\nb\r\nab\r\nba\r\n",
                "SPSP"
            ],
            [
                "4\r\nzn\r\nz\r\nn\r\nnzn\r\nzn\r\nznz\r\n",
                "SPSSPP"
            ],
            [
                "5\r\nbaba\r\nabab\r\na\r\nab\r\naba\r\na\r\nba\r\naba\r\n",
                "SPSPSPSP"
            ],
            [
                "5\r\nba\r\na\r\nbaba\r\nabab\r\na\r\naba\r\nab\r\naba\r\n",
                "SSSPPSPP"
            ],
            [
                "4\r\nab\r\na\r\nb\r\nbab\r\nab\r\naba\r\n",
                "SPSSPP"
            ],
            [
                "5\r\nh\r\nhwh\r\nwhwh\r\nhw\r\nh\r\nwh\r\nhwh\r\nhwhw\r\n",
                "SSSPPSPP"
            ],
            [
                "5\r\nba\r\na\r\na\r\naba\r\nbaba\r\nab\r\naba\r\nabab\r\n",
                "SSPSSPPP"
            ],
            [
                "4\r\naba\r\na\r\nba\r\nb\r\nba\r\nbab\r\n",
                "SSSPPP"
            ],
            [
                "3\r\nah\r\nha\r\nh\r\nh\r\n",
                "SPSP"
            ],
            [
                "5\r\nxy\r\nyx\r\nx\r\nx\r\nxyx\r\nxyx\r\nyxyx\r\nxyxy\r\n",
                "PSSPSPSP"
            ],
            [
                "5\r\nbaaa\r\nbaa\r\nba\r\nb\r\naaaa\r\naaa\r\naa\r\na\r\n",
                "PPPPSSSS"
            ],
            [
                "4\r\nb\r\nab\r\nbab\r\na\r\nab\r\naba\r\n",
                "SSSPPP"
            ],
            [
                "5\r\na\r\na\r\nab\r\nba\r\naba\r\naba\r\nbaba\r\nabab\r\n",
                "SPPSSPSP"
            ],
            [
                "18\r\nd\r\nh\r\ndj\r\nxh\r\ndjs\r\njxh\r\ndjsh\r\nzjxh\r\ndjshf\r\nkzjxh\r\ndjshfk\r\nhkzjxh\r\ndjshfkj\r\nkhkzjxh\r\ndjshfkje\r\nskhkzjxh\r\ndjshfkjeh\r\ndskhkzjxh\r\ndjshfkjehd\r\nhdskhkzjxh\r\ndjshfkjehds\r\nehdskhkzjxh\r\ndjshfkjehdsk\r\njehdskhkzjxh\r\ndjshfkjehdskh\r\nkjehdskhkzjxh\r\ndjshfkjehdskhk\r\nfkjehdskhkzjxh\r\ndjshfkjehdskhkz\r\nhfkjehdskhkzjxh\r\ndjshfkjehdskhkzj\r\nshfkjehdskhkzjxh\r\ndjshfkjehdskhkzjx\r\njshfkjehdskhkzjxh\r\n",
                "PSPSPSPSPSPSPSPSPSPSPSPSPSPSPSPSPS"
            ],
            [
                "4\r\nza\r\na\r\nz\r\naza\r\nza\r\nzaz\r\n",
                "SSPSPP"
            ],
            [
                "3\r\na\r\nza\r\naz\r\na\r\n",
                "SSPP"
            ],
            [
                "8\r\na\r\nha\r\naha\r\nhaha\r\nahaha\r\nhahaha\r\nahahaha\r\nh\r\nha\r\nhah\r\nhaha\r\nhahah\r\nhahaha\r\nhahahah\r\n",
                "SSSSSSSPPPPPPP"
            ],
            [
                "4\r\na\r\nab\r\nbab\r\nb\r\nab\r\naba\r\n",
                "PSSSPP"
            ],
            [
                "4\r\na\r\nba\r\naba\r\nb\r\nba\r\nbab\r\n",
                "SSSPPP"
            ],
            [
                "4\r\nc\r\ncb\r\nb\r\nbcb\r\ncb\r\ncbc\r\n",
                "PSSSPP"
            ],
            [
                "4\r\nb\r\nbb\r\nbbb\r\na\r\nba\r\nbba\r\n",
                "PPPSSS"
            ],
            [
                "5\r\na\r\naa\r\naaa\r\naaaa\r\nb\r\nba\r\nbaa\r\nbaaa\r\n",
                "SSSSPPPP"
            ],
            [
                "4\r\na\r\nb\r\nab\r\nab\r\nbab\r\naba\r\n",
                "PSSPSP"
            ],
            [
                "3\r\na\r\naa\r\nba\r\nb\r\n",
                "SSPP"
            ]
        ]
    }
]