[
    {
        "name": "Matching Numbers",
        "description": "You are given an integer \n    n\n. Pair the integers \n    1\n to \n    2n\n (i.e.\neach integer should be in exactly one pair) so that each sum of matched pairs\nis consecutive and distinct. Formally, let \n    (a_i, b_i)\n be the pairs that\nyou matched. \n    a_1, b_1, a_2, b_2, \n    \u2026, a_n, b_n\n should be\na permutation of \n    1, 2, \n    \u2026, 2n\n. Let the sorted list of\n\n    a_1+b_1, a_2+b_2, \n    \u2026, a_n+b_n\n be \n    s_1 < s_2 < \n    \u2026\n    < s_n\n. We must have \n    s_i+1-s_i = 1\n for \n    1 \n    \u2264 i \n    \u2264 n - 1\n.\nInput Each test contains multiple test cases. The first line contains the\nnumber of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 500\n). The description of\nthe test cases follows. For each test case, a single integer \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 10^5\n) is given. It is guaranteed that the sum of \n    n\n\nover all test cases doesn't exceed \n    10^5\n. Output For each test case, if\nit is impossible to make such a pairing, print \"No\". Otherwise, print \"Yes\"\nfollowed by \n    n\n lines. At each line, print two integers that are paired.\nYou can output the answer in any case (upper or lower). For example, the\nstrings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as positive\nresponses. If there are multiple solutions, print any. Example Input 4 1 2 3 4\nOutput Yes 1 2 No Yes 1 6 3 5 4 2 No Note For the third test case, each\ninteger from \n    1\n to \n    6\n appears once. The sums of matched pairs are\n\n    4+2=6\n, \n    1+6=7\n, and \n    3+5=8\n, which are consecutive and distinct.\n\n",
        "cf_contest_id": 1788,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1\r\n2\r\n3\r\n4\r\n",
                "Yes\r\n1 2\r\nNo\r\nYes\r\n1 6\r\n2 4\r\n3 5\r\nNo\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n100000\r\n",
                "No\r\n"
            ],
            [
                "1\r\n99988\r\n",
                "No\r\n"
            ],
            [
                "1\r\n99990\r\n",
                "No\r\n"
            ],
            [
                "1\r\n99992\r\n",
                "No\r\n"
            ],
            [
                "1\r\n99994\r\n",
                "No\r\n"
            ],
            [
                "1\r\n99996\r\n",
                "No\r\n"
            ],
            [
                "1\r\n99998\r\n",
                "No\r\n"
            ],
            [
                "1\r\n31704\r\n",
                "No\r\n"
            ]
        ]
    }
]