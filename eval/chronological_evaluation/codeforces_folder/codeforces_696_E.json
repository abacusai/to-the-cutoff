[
    {
        "name": "...Wait for it...",
        "description": "Barney is searching for his dream girl. He lives in NYC. NYC has n junctions\nnumbered from 1 to n and n - 1 roads connecting them. We will consider the NYC\nas a rooted tree with root being junction 1. m girls live in NYC, i-th of them\nlives along junction ci and her weight initially equals i pounds. Barney\nconsider a girl x to be better than a girl y if and only if: girl x has weight\nstrictly less than girl y or girl x and girl y have equal weights and index of\ngirl x living junction index is strictly less than girl y living junction\nindex, i.e. cx < cy. Thus for any two girls one of them is always better than\nanother one. For the next q days, one event happens each day. There are two\ntypes of events: Barney goes from junction v to junction u. As a result he\npicks at most k best girls he still have not invited from junctions on his way\nand invites them to his house to test if one of them is his dream girl. If\nthere are less than k not invited girls on his path, he invites all of them.\nGirls living along junctions in subtree of junction v (including v itself) put\non some weight. As result, their weights increase by k pounds. Your task is\nfor each event of first type tell Barney the indices of girls he will invite\nto his home in this event. Input The first line of input contains three\nintegers n, m and q (1 \u2264 n, m, q \u2264 10^5) \u2014 the number of junctions in NYC, the\nnumber of girls living in NYC and the number of events respectively. The next\nn - 1 lines describes the roads. Each line contains two integers v and u (1 \u2264\nv, u \u2264 n, v \u2260 u) meaning that there is a road connecting junctions v and u .\nThe next line contains m integers c1, c2, ..., cm (1 \u2264 ci \u2264 n) \u2014 the girl's\nliving junctions. The next q lines describe the events in chronological order.\nEach line starts with an integer t (1 \u2264 t \u2264 2) \u2014 type of the event . If t = 1\nthen the line describes event of first type three integers v, u and k (1 \u2264 v,\nu, k \u2264 n) follow \u2014 the endpoints of Barney's path and the number of girls that\nhe will invite at most. Otherwise the line describes event of second type and\ntwo integers v and k (1 \u2264 v \u2264 n, 1 \u2264 k \u2264 10^9) follow \u2014 the root of the\nsubtree and value by which all the girls' weights in the subtree should\nincrease. Output For each event of the first type, print number t and then t\nintegers g1, g2, ..., gt in one line, meaning that in this event Barney will\ninvite t girls whose indices are g1, ..., gt in the order from the best to the\nworst according to Barney's considerations. Example Input 5 7 11 3 5 2 3 4 3 1\n4 4 1 4 5 4 1 4 2 4 3 1 2 1 2 1 4 2 1 2 2 10 2 1 10 1 2 4 1 1 2 3 4 2 5 2 2 4\n9 1 3 5 2 1 1 2 3 Output 2 2 1 1 3 1 5 0 1 4 2 6 7 Note For the first sample\ncase: Description of events: Weights of girls in subtree of junction 4\nincrease by 3. These girls have IDs: 1, 3, 5, 4, 7. Barney goes from junction\n2 to 1. Girls on his way have IDs 1, 2, 3, 5, 6, 7 with weights 4, 2, 6, 8, 6,\n10 respectively. So, he invites girls 2 and 1. Barney goes from junction 4 to\njunction 2. Girls on his way has IDs 3, 5, 7 with weights 6, 8, 10\nrespectively. So he invites girl 3. Weight of girls in subtree of junction 2\nincrease by 10. There are no not invited girls, so nothing happens. Weight of\ngirls in subtree of junction 1 increase by 10. These girls (all girls left)\nhave IDs: 4, 5, 6, 7. Barney goes from junction 2 to junction 4. Girls on his\nway has IDs 5, 7 with weights 18, 20 respectively. So he invites girl 5.\nBarney goes from junction 2 to junction 3. There is no girl on his way. Weight\nof girls in subtree of junction 5 increase by 2. The only girl there is girl\nwith ID 4. Weight of girls in subtree of junction 4 increase by 9. These girls\nhave IDs: 4, 6, 7. Barney goes from junction 3 to junction 5. Only girl on his\nway is girl with ID 4. Barney goes from junction 1 to junction 2. Girls on his\nway has IDs 6, 7 with weights 16, 29 respectively.\n\n",
        "cf_contest_id": 696,
        "cf_index": "E",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dsu",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 7 11\r\n3 5\r\n2 3\r\n4 3\r\n1 4\r\n4 1 4 5 4 1 4\r\n2 4 3\r\n1 2 1 2\r\n1 4 2 1\r\n2 2 10\r\n2 1 10\r\n1 2 4 1\r\n1 2 3 4\r\n2 5 2\r\n2 4 9\r\n1 3 5 2\r\n1 1 2 3\r\n",
                "2 2 1 \r\n1 3 \r\n1 5 \r\n0 \r\n1 4 \r\n2 6 7 \r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n1\r\n1 1 1 1\r\n",
                "1 1 \r\n"
            ],
            [
                "1 10 1\r\n1 1 1 1 1 1 1 1 1 1\r\n1 1 1 1\r\n",
                "1 1 \r\n"
            ]
        ]
    }
]