[
    {
        "name": "Playlist",
        "description": "Arkady has a playlist that initially consists of \n    n\n songs, numerated from\n\n    1\n to \n    n\n in the order they appear in the playlist. Arkady starts\nlistening to the songs in the playlist one by one, starting from song \n    1\n.\nThe playlist is cycled, i. e. after listening to the last song, Arkady will\ncontinue listening from the beginning. Each song has a genre \n    a_i\n, which\nis a positive integer. Let Arkady finish listening to a song with genre\n\n    y\n, and the genre of the next-to-last listened song be \n    x\n. If\n\n    gcd(x, y) = 1\n, he deletes the last listened song (with\ngenre \n    y\n) from the playlist. After that he continues listening normally,\nskipping the deleted songs, and forgetting about songs he listened to before.\nIn other words, after he deletes a song, he can't delete the next song\nimmediately. Here \n    gcd(x, y)\n denotes the greatest common\ndivisor (GCD) of integers \n    x\n and \n    y\n. For example, if the initial\nsongs' genres were \n    [5, 9, 2, 10, 15]\n, then the playlist is converted as\nfollows: [5, 9, 2, 10, 15] \n    \u2192\n [5, 9, 2, 10, 15] \n    \u2192\n [5, 2,\n10, 15] (because \n    gcd(5, 9) = 1\n) \n    \u2192\n [5, 2, 10,\n15] \n    \u2192\n [5, 2, 10, 15] \n    \u2192\n [5, 2, 10, 15] \n    \u2192\n [5, 2,\n10, 15] \n    \u2192\n [5, 2, 10, 15] \n    \u2192\n [5, 10, 15] (because\n\n    gcd(5, 2) = 1\n) \n    \u2192\n [5, 10, 15] \n    \u2192\n [5,\n10, 15] \n    \u2192\n ... The bold numbers represent the two last played songs.\nNote that after a song is deleted, Arkady forgets that he listened to that and\nthe previous songs. Given the initial playlist, please determine which songs\nare eventually deleted and the order these songs are deleted. Input Each test\ncontains multiple test cases. The first line contains the number of test cases\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n     000\n). Description of the test cases\nfollows. The first line of each test case contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of songs. The second line contains\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n)\n\u2014 the genres of the songs. It is guaranteed that the sum of \n    n\n over all\ntest cases does not exceed \n    10^5\n. Output For each test case, print a\nsingle line. First, print a single integer \n    k\n \u2014 the number of deleted\nsongs. After that print \n    k\n distinct integers: deleted songs in the order\nof their deletion. Example Input 5 5 5 9 2 10 15 6 1 2 4 2 4 2 2 1 2 1 1 1 2\nOutput 2 2 3 2 2 1 2 2 1 1 1 0 Note Explanation of the first test case is\ngiven in the statement. In the second test case, the playlist is converted as\nfollows: [1, 2, 4, 2, 4, 2] \n    \u2192\n [1, 2, 4, 2, 4, 2] \n    \u2192\n [1, 4,\n2, 4, 2] (because \n    gcd(1, 2) = 1\n) \n    \u2192\n [1, 4, 2,\n4, 2] \n    \u2192\n [1, 4, 2, 4, 2] \n    \u2192\n [1, 4, 2, 4, 2] \n    \u2192\n [1,\n4, 2, 4, 2] \n    \u2192\n [1, 4, 2, 4, 2] \n    \u2192\n [4, 2, 4, 2] (because\n\n    gcd(2, 1) = 1\n) \n    \u2192\n [4, 2, 4, 2] \n    \u2192\n ...\nIn the third test case, the playlist is converted as follows: [1, 2]\n\n    \u2192\n [1, 2] \n    \u2192\n [1] (because \n    gcd(1, 2) =\n    1\n) \n    \u2192\n [1] \n    \u2192\n [1] (Arkady listened to the same song twice\nin a row) \n    \u2192\n [] (because \n    gcd(1, 1) = 1\n). The\nfourth test case is same as the third after deletion of the second song. In\nthe fifth test case, the same song is listened to over and over again, but\nsince \n    gcd(2, 2) \n     1\n, it is not deleted.\n\n",
        "cf_contest_id": 1482,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dsu",
            "implementation",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]