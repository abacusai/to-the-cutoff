[
    {
        "name": "Han Solo and Lazer Gun",
        "description": "There are n Imperial stormtroopers on the field. The battle field is a plane\nwith Cartesian coordinate system. Each stormtrooper is associated with his\ncoordinates (x, y) on this plane. Han Solo has the newest duplex lazer gun to\nfight these stormtroopers. It is situated at the point (x0, y0). In one shot\nit can can destroy all the stormtroopers, situated on some line that crosses\npoint (x0, y0). Your task is to determine what minimum number of shots Han\nSolo needs to defeat all the stormtroopers. The gun is the newest invention,\nit shoots very quickly and even after a very large number of shots the\nstormtroopers don't have enough time to realize what's happening and change\ntheir location. Input The first line contains three integers n, x0 \u0438 y0 (1 \u2264 n\n\u2264 1000, - 10^4 \u2264 x0, y0 \u2264 10^4) \u2014 the number of stormtroopers on the battle\nfield and the coordinates of your gun. Next n lines contain two integers each\nxi, yi ( - 10^4 \u2264 xi, yi \u2264 10^4) \u2014 the coordinates of the stormtroopers on the\nbattlefield. It is guaranteed that no stormtrooper stands at the same point\nwith the gun. Multiple stormtroopers can stand at the same point. Output Print\na single integer \u2014 the minimum number of shots Han Solo needs to destroy all\nthe stormtroopers. Examples Input 4 0 0 1 1 2 2 2 0 -1 -1 Output 2 Input 2 1 2\n1 1 1 0 Output 1 Note Explanation to the first and second samples from the\nstatement, respectively:\n\n",
        "cf_contest_id": 514,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "geometry",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 0 0\r\n1 1\r\n2 2\r\n2 0\r\n-1 -1\r\n",
                "2\r\n"
            ],
            [
                "2 1 2\r\n1 1\r\n1 0\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n0 0\r\n",
                "1\r\n"
            ],
            [
                "2 0 0\r\n10000 -10000\r\n-10000 10000\r\n",
                "1\r\n"
            ],
            [
                "2 0 0\r\n10000 -10000\r\n10000 10000\r\n",
                "2\r\n"
            ],
            [
                "10 -4 -4\r\n2 -4\r\n2 0\r\n-4 2\r\n5 -4\r\n-3 -5\r\n1 4\r\n-4 2\r\n-3 5\r\n0 -3\r\n2 4\r\n",
                "8\r\n"
            ],
            [
                "10 5 -3\r\n1 1\r\n2 -1\r\n2 2\r\n1 -2\r\n4 -5\r\n1 4\r\n0 1\r\n1 -4\r\n-2 0\r\n-4 -5\r\n",
                "10\r\n"
            ],
            [
                "10 -3 3\r\n3 -5\r\n4 3\r\n0 -2\r\n0 0\r\n3 -3\r\n3 5\r\n4 1\r\n5 5\r\n4 -5\r\n4 -4\r\n",
                "8\r\n"
            ],
            [
                "2 -10000 -10000\r\n10000 10000\r\n10000 9999\r\n",
                "2\r\n"
            ],
            [
                "2 -10000 -10000\r\n9998 9999\r\n9999 10000\r\n",
                "2\r\n"
            ],
            [
                "2 0 0\r\n0 1337\r\n3 9000\r\n",
                "2\r\n"
            ],
            [
                "2 0 -1\r\n0 1\r\n1 10000\r\n",
                "2\r\n"
            ],
            [
                "2 0 0\r\n0 10\r\n1 2000\r\n",
                "2\r\n"
            ],
            [
                "2 0 0\r\n0 2\r\n1 90\r\n",
                "2\r\n"
            ],
            [
                "2 0 0\r\n1001 0\r\n1001 1\r\n",
                "2\r\n"
            ]
        ]
    }
]