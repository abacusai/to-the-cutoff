[
    {
        "name": "Vitaly and Cycle",
        "description": "After Vitaly was expelled from the university, he became interested in the\ngraph theory. Vitaly especially liked the cycles of an odd length in which\neach vertex occurs at most once. Vitaly was wondering how to solve the\nfollowing problem. You are given an undirected graph consisting of n vertices\nand m edges, not necessarily connected, without parallel edges and loops. You\nneed to find t \u2014 the minimum number of edges that must be added to the given\ngraph in order to form a simple cycle of an odd length, consisting of more\nthan one vertex. Moreover, he must find w \u2014 the number of ways to add t edges\nin order to form a cycle of an odd length (consisting of more than one\nvertex). It is prohibited to add loops or parallel edges. Two ways to add\nedges to the graph are considered equal if they have the same sets of added\nedges. Since Vitaly does not study at the university, he asked you to help him\nwith this task. Input The first line of the input contains two integers n and\nm ( \u2014 the number of vertices in the graph and the number of edges in the\ngraph. Next m lines contain the descriptions of the edges of the graph, one\nedge per line. Each edge is given by a pair of integers ai, bi (1 \u2264 ai, bi \u2264\nn) \u2014 the vertices that are connected by the i-th edge. All numbers in the\nlines are separated by a single space. It is guaranteed that the given graph\ndoesn't contain any loops and parallel edges. The graph isn't necessarily\nconnected. Output Print in the first line of the output two space-separated\nintegers t and w \u2014 the minimum number of edges that should be added to the\ngraph to form a simple cycle of an odd length consisting of more than one\nvertex where each vertex occurs at most once, and the number of ways to do\nthis. Examples Input 4 4 1 2 1 3 4 2 4 3 Output 1 2 Input 3 3 1 2 2 3 3 1\nOutput 0 1 Input 3 0 Output 3 1 Note The simple cycle is a cycle that doesn't\ncontain any vertex twice.\n\n",
        "cf_contest_id": 557,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dfs and similar",
            "graphs",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 4\r\n1 2\r\n1 3\r\n4 2\r\n4 3\r\n",
                "1 2"
            ],
            [
                "3 3\r\n1 2\r\n2 3\r\n3 1\r\n",
                "0 1"
            ],
            [
                "3 0\r\n",
                "3 1"
            ]
        ],
        "private_cases": [
            [
                "6 3\r\n1 2\r\n4 3\r\n6 5\r\n",
                "2 12"
            ],
            [
                "100000 0\r\n",
                "3 166661666700000"
            ],
            [
                "5 4\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n",
                "1 6"
            ],
            [
                "6 3\r\n1 2\r\n2 3\r\n4 5\r\n",
                "1 1"
            ],
            [
                "5 5\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n",
                "0 1"
            ],
            [
                "59139 0\r\n",
                "3 34470584559489"
            ],
            [
                "9859 0\r\n",
                "3 159667007809"
            ],
            [
                "25987 0\r\n",
                "3 2924603876545"
            ],
            [
                "9411 0\r\n",
                "3 138872935265"
            ],
            [
                "25539 0\r\n",
                "3 2775935665889"
            ],
            [
                "59139 1\r\n10301 5892\r\n",
                "2 59137"
            ],
            [
                "9859 1\r\n1721 9478\r\n",
                "2 9857"
            ],
            [
                "76259 0\r\n",
                "3 73910302948209"
            ],
            [
                "92387 0\r\n",
                "3 131421748719345"
            ],
            [
                "6 4\r\n1 2\r\n2 3\r\n3 1\r\n4 5\r\n",
                "0 1"
            ]
        ]
    }
]