[
    {
        "name": "How many trees?",
        "description": "In one very old text file there was written Great Wisdom. This Wisdom was so\nGreat that nobody could decipher it, even Phong \u2014 the oldest among the\ninhabitants of Mainframe. But still he managed to get some information from\nthere. For example, he managed to learn that User launches games for pleasure\n\u2014 and then terrible Game Cubes fall down on the city, bringing death to those\nmodules, who cannot win the game... For sure, as guard Bob appeared in\nMainframe many modules stopped fearing Game Cubes. Because Bob (as he is alive\nyet) has never been defeated by User, and he always meddles with Game Cubes,\nbecause he is programmed to this. However, unpleasant situations can happen,\nwhen a Game Cube falls down on Lost Angles. Because there lives a nasty virus\n\u2014 Hexadecimal, who is... mmm... very strange. And she likes to play very much.\nSo, willy-nilly, Bob has to play with her first, and then with User. This time\nHexadecimal invented the following entertainment: Bob has to leap over binary\nsearch trees with n nodes. We should remind you that a binary search tree is a\nbinary tree, each node has a distinct key, for each node the following is\ntrue: the left sub-tree of a node contains only nodes with keys less than the\nnode's key, the right sub-tree of a node contains only nodes with keys greater\nthan the node's key. All the keys are different positive integer numbers from\n1 to n. Each node of such a tree can have up to two children, or have no\nchildren at all (in the case when a node is a leaf). In Hexadecimal's game all\nthe trees are different, but the height of each is not lower than h. In this\nproblem \u00abheight\u00bb stands for the maximum amount of nodes on the way from the\nroot to the remotest leaf, the root node and the leaf itself included. When\nBob leaps over a tree, it disappears. Bob gets the access to a Cube, when\nthere are no trees left. He knows how many trees he will have to leap over in\nthe worst case. And you? Input The input data contains two space-separated\npositive integer numbers n and h (n \u2264 35, h \u2264 n). Output Output one number \u2014\nthe answer to the problem. It is guaranteed that it does not exceed 9\u00b710^18.\nExamples Input 3 2 Output 5 Input 3 3 Output 4\n\n",
        "cf_contest_id": 9,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "divide and conquer",
            "dp"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "3 2\r\n",
                "5\r\n"
            ],
            [
                "3 3\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n",
                "1\r\n"
            ],
            [
                "2 1\r\n",
                "2\r\n"
            ],
            [
                "2 2\r\n",
                "2\r\n"
            ],
            [
                "27 11\r\n",
                "61162698256896\r\n"
            ],
            [
                "32 27\r\n",
                "22643872890880\r\n"
            ],
            [
                "4 1\r\n",
                "14\r\n"
            ],
            [
                "9 1\r\n",
                "4862\r\n"
            ],
            [
                "33 4\r\n",
                "212336130412243110\r\n"
            ],
            [
                "4 4\r\n",
                "8\r\n"
            ],
            [
                "8 5\r\n",
                "1336\r\n"
            ],
            [
                "12 8\r\n",
                "127200\r\n"
            ],
            [
                "15 5\r\n",
                "9694844\r\n"
            ],
            [
                "19 18\r\n",
                "2424832\r\n"
            ],
            [
                "23 17\r\n",
                "19649347584\r\n"
            ],
            [
                "27 15\r\n",
                "25162319484928\r\n"
            ],
            [
                "29 14\r\n",
                "577801978306560\r\n"
            ],
            [
                "33 18\r\n",
                "54307238601375744\r\n"
            ],
            [
                "7 7\r\n",
                "64\r\n"
            ],
            [
                "23 21\r\n",
                "275251200\r\n"
            ],
            [
                "7 3\r\n",
                "429\r\n"
            ],
            [
                "21 18\r\n",
                "211156992\r\n"
            ],
            [
                "4 1\r\n",
                "14\r\n"
            ],
            [
                "21 12\r\n",
                "12153990144\r\n"
            ],
            [
                "35 13\r\n",
                "2690352397519398400\r\n"
            ],
            [
                "19 2\r\n",
                "1767263190\r\n"
            ],
            [
                "33 26\r\n",
                "434871797284864\r\n"
            ],
            [
                "16 9\r\n",
                "25607552\r\n"
            ],
            [
                "16 14\r\n",
                "1032192\r\n"
            ],
            [
                "10 2\r\n",
                "16796\r\n"
            ],
            [
                "4 4\r\n",
                "8\r\n"
            ],
            [
                "33 17\r\n",
                "75307983624118272\r\n"
            ],
            [
                "27 25\r\n",
                "6081740800\r\n"
            ],
            [
                "20 14\r\n",
                "1094473728\r\n"
            ],
            [
                "16 11\r\n",
                "11819008\r\n"
            ],
            [
                "10 10\r\n",
                "512\r\n"
            ],
            [
                "4 3\r\n",
                "14\r\n"
            ],
            [
                "33 21\r\n",
                "14830955929665536\r\n"
            ],
            [
                "24 20\r\n",
                "8171945984\r\n"
            ],
            [
                "30 16\r\n",
                "1375710400053248\r\n"
            ],
            [
                "3 2\r\n",
                "5\r\n"
            ],
            [
                "9 4\r\n",
                "4862\r\n"
            ],
            [
                "16 5\r\n",
                "35357670\r\n"
            ],
            [
                "22 22\r\n",
                "2097152\r\n"
            ],
            [
                "28 23\r\n",
                "739948625920\r\n"
            ],
            [
                "34 1\r\n",
                "812944042149730764\r\n"
            ],
            [
                "7 4\r\n",
                "428\r\n"
            ],
            [
                "14 11\r\n",
                "488448\r\n"
            ],
            [
                "35 1\r\n",
                "3116285494907301262\r\n"
            ],
            [
                "35 35\r\n",
                "17179869184\r\n"
            ]
        ]
    }
]