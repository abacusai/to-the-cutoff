[
    {
        "name": "Make Array Good",
        "description": "An array \n    b\n of \n    m\n positive integers is good if for all pairs \n    i\n\nand \n    j\n (\n    1 \n    \u2264 i,j \n    \u2264 m\n), \n    max(b_i,b_j)\n is divisible\nby \n    min(b_i,b_j)\n. You are given an array \n    a\n of \n    n\n positive\nintegers. You can perform the following operation: Select an index \n    i\n\n(\n    1 \n    \u2264 i \n    \u2264 n\n) and an integer \n    x\n (\n    0 \n    \u2264 x \n    \u2264\n    a_i\n) and add \n    x\n to \n    a_i\n, in other words, \n    a_i := a_i+x\n.\nAfter this operation, \n    a_i \n    \u2264 10^18\n should be satisfied. You have\nto construct a sequence of at most \n    n\n operations that will make \n    a\n\ngood. It can be proven that under the constraints of the problem, such a\nsequence of operations always exists. Input Each test contains multiple test\ncases. The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the length of the array \n    a\n. The second\nline of each test case contains \n    n\n space-separated integers\n\n    a_1,a_2,\n    \u2026,a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 representing the\narray \n    a\n. It is guaranteed that the sum of \n    n\n over all test cases\ndoes not exceed \n    10^5\n. Output For each test, output a single integer\n\n    p\n (\n    0 \n    \u2264 p \n    \u2264 n\n) \u2014 denoting the number of operations in\nyour solution. In each of the following \n    p\n lines, output two space-\nseparated integers \u2014 \n    i\n and \n    x\n. You do not need to minimize the\nnumber of operations. It can be proven that a solution always exists. Example\nInput 4 4 2 3 5 5 2 4 8 5 3 4 343 5 6 3 31 5 17 Output 4 1 2 1 1 2 2 3 0 0 5 1\n3 1 4 2 1 5 4 3 7 3 1 29 2 5 3 3 Note In the first test case, array \n    a\n\nbecomes \n    [5,5,5,5]\n after the operations. It is easy to see that\n\n    [5,5,5,5]\n is good. In the second test case, array \n    a\n is already\ngood. In the third test case, after performing the operations, array \n    a\n\nbecomes \n    [10,5,350,5,10]\n, which is good. In the fourth test case, after\nperforming the operations, array \n    a\n becomes \n    [60,10,20]\n, which is\ngood.\n\n",
        "cf_contest_id": 1762,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation",
            "number theory",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n4\r\n2 3 5 5\r\n2\r\n4 8\r\n5\r\n3 4 343 5 6\r\n3\r\n31 5 17\r\n",
                "4\r\n1 2\r\n2 1\r\n3 3\r\n4 3\r\n2\r\n1 4\r\n2 8\r\n5\r\n1 1\r\n2 4\r\n3 169\r\n4 3\r\n5 2\r\n3\r\n1 1\r\n2 3\r\n3 15\r\n"
            ]
        ],
        "private_cases": []
    }
]