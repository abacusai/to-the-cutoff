[
    {
        "name": "Subtract or Divide",
        "description": "Ridbit starts with an integer \n    n\n. In one move, he can perform one of the\nfollowing operations: divide \n    n\n by one of its proper divisors, or\nsubtract \n    1\n from \n    n\n if \n    n\n is greater than \n    1\n. A proper\ndivisor is a divisor of a number, excluding itself. For example, \n    1\n,\n\n    2\n, \n    4\n, \n    5\n, and \n    10\n are proper divisors of \n    20\n, but\n\n    20\n itself is not. What is the minimum number of moves Ridbit is required\nto make to reduce \n    n\n to \n    1\n? Input The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The\nonly line of each test case contains a single integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 10^9\n). Output For each test case, output the minimum number of moves\nrequired to reduce \n    n\n to \n    1\n. Example Input 6 1 2 3 4 6 9 Output 0 1\n2 2 2 3 Note For the test cases in the example, \n    n\n may be reduced to\n\n    1\n using the following operations in sequence \n    1\n \n    2\n    \n     1\n \n    3 \n     2 \n     1\n \n    4\n    \n     2 \n     1\n \n    6 \n     2\n    \n     1\n \n    9 \n     3 \n    \n    2\n     1\n\n\n",
        "cf_contest_id": 1451,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1\r\n2\r\n3\r\n4\r\n6\r\n9\r\n",
                "0\r\n1\r\n2\r\n2\r\n2\r\n3\r\n"
            ]
        ],
        "private_cases": []
    }
]