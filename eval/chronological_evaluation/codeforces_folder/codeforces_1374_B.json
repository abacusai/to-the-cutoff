[
    {
        "name": "Multiply by 2, divide by 6",
        "description": "You are given an integer \n    n\n. In one move, you can either multiply \n    n\n\nby two or divide \n    n\n by \n    6\n (if it is divisible by \n    6\n without the\nremainder). Your task is to find the minimum number of moves needed to obtain\n\n    1\n from \n    n\n or determine if it's impossible to do that. You have to\nanswer \n    t\n independent test cases. Input The first line of the input\ncontains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2 \n    \u00b7 10^4\n) \u2014 the\nnumber of test cases. Then \n    t\n test cases follow. The only line of the\ntest case contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^9\n). Output\nFor each test case, print the answer \u2014 the minimum number of moves needed to\nobtain \n    1\n from \n    n\n if it's possible to do that or -1 if it's\nimpossible to obtain \n    1\n from \n    n\n. Example Input 7 1 2 3 12 12345\n15116544 387420489 Output 0 -1 2 -1 -1 12 36 Note Consider the sixth test case\nof the example. The answer can be obtained by the following sequence of moves\nfrom the given integer \n    15116544\n: Divide by \n    6\n and get\n\n    2519424\n; divide by \n    6\n and get \n    419904\n; divide by \n    6\n and\nget \n    69984\n; divide by \n    6\n and get \n    11664\n; multiply by \n    2\n\nand get \n    23328\n; divide by \n    6\n and get \n    3888\n; divide by \n    6\n\nand get \n    648\n; divide by \n    6\n and get \n    108\n; multiply by \n    2\n\nand get \n    216\n; divide by \n    6\n and get \n    36\n; divide by \n    6\n and\nget \n    6\n; divide by \n    6\n and get \n    1\n.\n\n",
        "cf_contest_id": 1374,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n1\r\n2\r\n3\r\n12\r\n12345\r\n15116544\r\n387420489\r\n",
                "0\r\n-1\r\n2\r\n-1\r\n-1\r\n12\r\n36\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n999838675\r\n",
                "-1\r\n"
            ]
        ]
    }
]