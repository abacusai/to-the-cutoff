[
    {
        "name": "Permutation Addicts",
        "description": "Given a permutation \n    a_1, a_2, \n    \u2026, a_n\n of integers from \n    1\n to\n\n    n\n, and a threshold \n    k\n with \n    0 \n    \u2264 k \n    \u2264 n\n, you compute a\nsequence \n    b_1, b_2, \n    \u2026, b_n\n as follows. For every \n    1 \n    \u2264 i\n    \n    \u2264 n\n in increasing order, let \n    x = a_i\n. If \n    x \n    \u2264 k\n, set\n\n    b_x\n to the last element \n    a_j\n (\n    1 \n    \u2264 j < i\n) that \n    a_j >\n    k\n. If no such element \n    a_j\n exists, set \n    b_x = n+1\n. If \n    x >\n    k\n, set \n    b_x\n to the last element \n    a_j\n (\n    1 \n    \u2264 j < i\n)\nthat \n    a_j \n    \u2264 k\n. If no such element \n    a_j\n exists, set \n    b_x =\n    0\n. Unfortunately, after the sequence \n    b_1, b_2, \n    \u2026, b_n\n has been\ncompletely computed, the permutation \n    a_1, a_2, \n    \u2026, a_n\n and the\nthreshold \n    k\n are discarded. Now you only have the sequence \n    b_1, b_2,\n    \n    \u2026, b_n\n. Your task is to find any possible permutation \n    a_1, a_2,\n    \n    \u2026, a_n\n and threshold \n    k\n that produce the sequence \n    b_1, b_2,\n    \n    \u2026, b_n\n. It is guaranteed that there exists at least one pair of\npermutation \n    a_1, a_2, \n    \u2026, a_n\n and threshold \n    k\n that produce\nthe sequence \n    b_1, b_2, \n    \u2026, b_n\n. A permutation of integers from\n\n    1\n to \n    n\n is a sequence of length \n    n\n which contains all integers\nfrom \n    1\n to \n    n\n exactly once. Input Each test contains multiple test\ncases. The first line contains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^5\n) \u2014 the number of test cases. The following lines contain the\ndescription of each test case. The first line of each test case contains an\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n), indicating the length of the\npermutation \n    a\n. The second line of each test case contains \n    n\n\nintegers \n    b_1, b_2, \n    \u2026, b_n\n (\n    0 \n    \u2264 b_i \n    \u2264 n+1\n),\nindicating the elements of the sequence \n    b\n. It is guaranteed that there\nexists at least one pair of permutation \n    a_1, a_2, \n    \u2026, a_n\n and\nthreshold \n    k\n that produce the sequence \n    b_1, b_2, \n    \u2026, b_n\n. It\nis guaranteed that the sum of \n    n\n over all test cases does not exceed\n\n    10^5\n. Output For each test case, output the threshold \n    k\n (\n    0\n    \n    \u2264 k \n    \u2264 n\n) in the first line, and then output the permutation\n\n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n) in the second line\nsuch that the permutation \n    a_1, a_2, \n    \u2026, a_n\n and threshold \n    k\n\nproduce the sequence \n    b_1, b_2, \n    \u2026, b_n\n. If there are multiple\nsolutions, you can output any of them. Example Input 3 4 5 3 1 2 6 7 7 7 3 3 3\n6 4 4 4 0 0 0 Output 2 1 3 2 4 3 1 2 3 4 5 6 3 6 5 4 3 2 1 Note For the first\ntest case, permutation \n    a = [1,3,2,4]\n and threshold \n    k = 2\n will\nproduce sequence \n    b\n as follows. When \n    i = 1\n, \n    x = a_i = 1 \n    \u2264\n    k\n, there is no \n    a_j\n (\n    1 \n    \u2264 j < i\n) that \n    a_j > k\n.\nTherefore, \n    b_1 = n + 1 = 5\n. When \n    i = 2\n, \n    x = a_i = 3 > k\n, the\nlast element \n    a_j\n that \n    a_j \n    \u2264 k\n is \n    a_1\n. Therefore, \n    b_3\n    = a_1 = 1\n. When \n    i = 3\n, \n    x = a_i = 2 \n    \u2264 k\n, the last element\n\n    a_j\n that \n    a_j > k\n is \n    a_2\n. Therefore, \n    b_2 = a_2 = 3\n.\nWhen \n    i = 4\n, \n    x = a_i = 4 > k\n, the last element \n    a_j\n that\n\n    a_j \n    \u2264 k\n is \n    a_3\n. Therefore, \n    b_4 = a_3 = 2\n. Finally, we\nobtain sequence \n    b = [5,3,1,2]\n. For the second test case, permutation\n\n    a = [1,2,3,4,5,6]\n and threshold \n    k = 3\n will produce sequence\n\n    b\n as follows. When \n    i = 1, 2, 3\n, \n    a_i \n    \u2264 k\n, there is no\n\n    a_j\n (\n    1 \n    \u2264 j < i\n) that \n    a_j > k\n. Therefore, \n    b_1 = b_2 =\n    b_3 = n + 1 = 7\n. When \n    i = 4, 5, 6\n, \n    a_i > k\n, the last element\n\n    a_j\n that \n    a_j \n    \u2264 k\n is \n    a_3\n. Therefore, \n    b_4 = b_5 = b_6\n    = a_3 = 3\n. Finally, we obtain sequence \n    b = [7,7,7,3,3,3]\n. For the\nthird test case, permutation \n    a = [6,5,4,3,2,1]\n and threshold \n    k = 3\n\nwill produce sequence \n    b\n as follows. When \n    i = 1, 2, 3\n, \n    a_i >\n    k\n, there is no \n    a_j\n (\n    1 \n    \u2264 j < i\n) that \n    a_j \n    \u2264 k\n.\nTherefore, \n    b_4 = b_5 = b_6 = 0\n. When \n    i = 4, 5, 6\n, \n    a_i \n    \u2264\n    k\n, the last element \n    a_j\n that \n    a_j > k\n is \n    a_3\n. Therefore,\n\n    b_1 = b_2 = b_3 = a_3 = 4\n. Finally, we obtain sequence \n    b =\n    [4,4,4,0,0,0]\n.\n\n",
        "cf_contest_id": 1738,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n4\r\n5 3 1 2\r\n6\r\n7 7 7 3 3 3\r\n6\r\n4 4 4 0 0 0\r\n",
                "2\r\n1 3 2 4 \r\n3\r\n1 2 3 4 5 6 \r\n3\r\n5 6 4 1 2 3 \r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n2\r\n",
                "1\r\n1 \r\n"
            ],
            [
                "3\r\n1\r\n0\r\n7\r\n0 0 0 0 0 0 0\r\n10\r\n0 0 0 0 0 0 0 0 0 0\r\n",
                "0\r\n1 \r\n0\r\n1 2 3 4 5 6 7 \r\n0\r\n1 2 3 4 5 6 7 8 9 10 \r\n"
            ]
        ]
    }
]