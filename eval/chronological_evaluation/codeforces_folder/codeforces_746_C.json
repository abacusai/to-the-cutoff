[
    {
        "name": "Tram",
        "description": "The tram in Berland goes along a straight line from the point 0 to the point s\nand back, passing 1 meter per t1 seconds in both directions. It means that the\ntram is always in the state of uniform rectilinear motion, instantly turning\naround at points x = 0 and x = s. Igor is at the point x1. He should reach the\npoint x2. Igor passes 1 meter per t2 seconds. Your task is to determine the\nminimum time Igor needs to get from the point x1 to the point x2, if it is\nknown where the tram is and in what direction it goes at the moment Igor comes\nto the point x1. Igor can enter the tram unlimited number of times at any\nmoment when his and the tram's positions coincide. It is not obligatory that\npoints in which Igor enter and exit the tram are integers. Assume that any\nboarding and unboarding happens instantly. Igor can move arbitrary along the\nline (but not faster than 1 meter per t2 seconds). He can also stand at some\npoint for some time. Input The first line contains three integers s, x1 and x2\n(2 \u2264 s \u2264 1000, 0 \u2264 x1, x2 \u2264 s, x1 \u2260 x2) \u2014 the maximum coordinate of the point\nto which the tram goes, the point Igor is at, and the point he should come to.\nThe second line contains two integers t1 and t2 (1 \u2264 t1, t2 \u2264 1000) \u2014 the time\nin seconds in which the tram passes 1 meter and the time in seconds in which\nIgor passes 1 meter. The third line contains two integers p and d (1 \u2264 p \u2264 s -\n1, d is either 1 or ) \u2014 the position of the tram in the moment Igor came to\nthe point x1 and the direction of the tram at this moment. If , the tram goes\nin the direction from the point s to the point 0. If d = 1, the tram goes in\nthe direction from the point 0 to the point s. Output Print the minimum time\nin seconds which Igor needs to get from the point x1 to the point x2. Examples\nInput 4 2 4 3 4 1 1 Output 8 Input 5 4 0 1 2 3 1 Output 7 Note In the first\nexample it is profitable for Igor to go by foot and not to wait the tram.\nThus, he has to pass 2 meters and it takes 8 seconds in total, because he\npasses 1 meter per 4 seconds. In the second example Igor can, for example, go\ntowards the point x2 and get to the point 1 in 6 seconds (because he has to\npass 3 meters, but he passes 1 meters per 2 seconds). At that moment the tram\nwill be at the point 1, so Igor can enter the tram and pass 1 meter in 1\nsecond. Thus, Igor will reach the point x2 in 7 seconds in total.\n\n",
        "cf_contest_id": 746,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2 4\r\n3 4\r\n1 1\r\n",
                "8\r\n"
            ],
            [
                "5 4 0\r\n1 2\r\n3 1\r\n",
                "7\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 4 0\r\n5 14\r\n1 -1\r\n",
                "55\r\n"
            ],
            [
                "10 7 2\r\n7 9\r\n9 -1\r\n",
                "45\r\n"
            ],
            [
                "20 5 19\r\n163 174\r\n4 1\r\n",
                "2436\r\n"
            ],
            [
                "1000 610 733\r\n226 690\r\n357 1\r\n",
                "84870\r\n"
            ],
            [
                "40 31 14\r\n628 1000\r\n36 1\r\n",
                "17000\r\n"
            ],
            [
                "100 20 83\r\n186 434\r\n64 -1\r\n",
                "27342\r\n"
            ],
            [
                "200 179 81\r\n126 457\r\n37 -1\r\n",
                "44786\r\n"
            ],
            [
                "400 30 81\r\n193 1000\r\n338 1\r\n",
                "51000\r\n"
            ],
            [
                "500 397 440\r\n202 1000\r\n75 1\r\n",
                "43000\r\n"
            ],
            [
                "600 443 587\r\n260 1000\r\n548 -1\r\n",
                "144000\r\n"
            ],
            [
                "799 254 294\r\n539 1000\r\n284 -1\r\n",
                "40000\r\n"
            ],
            [
                "801 489 351\r\n86 702\r\n125 1\r\n",
                "96836\r\n"
            ],
            [
                "999 951 297\r\n62 106\r\n574 1\r\n",
                "69324\r\n"
            ],
            [
                "1000 711 437\r\n42 126\r\n745 1\r\n",
                "34356\r\n"
            ],
            [
                "1000 812 761\r\n230 1000\r\n696 -1\r\n",
                "51000\r\n"
            ],
            [
                "1000 913 474\r\n34 162\r\n566 -1\r\n",
                "71118\r\n"
            ],
            [
                "1000 394 798\r\n155 673\r\n954 -1\r\n",
                "271560\r\n"
            ],
            [
                "1000 876 884\r\n299 1000\r\n825 1\r\n",
                "8000\r\n"
            ],
            [
                "2 0 2\r\n1 1\r\n1 1\r\n",
                "2\r\n"
            ],
            [
                "5 4 2\r\n1 2\r\n3 1\r\n",
                "4\r\n"
            ],
            [
                "4 2 4\r\n3 4\r\n2 1\r\n",
                "6\r\n"
            ],
            [
                "200 10 100\r\n1 100\r\n20 1\r\n",
                "480\r\n"
            ],
            [
                "6 4 2\r\n1 2\r\n3 1\r\n",
                "4\r\n"
            ],
            [
                "3 1 3\r\n1 2\r\n1 1\r\n",
                "2\r\n"
            ],
            [
                "10 3 6\r\n1 2\r\n3 1\r\n",
                "3\r\n"
            ],
            [
                "1000 50 51\r\n1 3\r\n50 1\r\n",
                "1\r\n"
            ],
            [
                "100 1 2\r\n1 100\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "5 1 4\r\n1 100\r\n1 1\r\n",
                "3\r\n"
            ],
            [
                "10 0 5\r\n1 100\r\n7 1\r\n",
                "18\r\n"
            ],
            [
                "5 4 1\r\n1 100\r\n4 -1\r\n",
                "3\r\n"
            ],
            [
                "10 6 9\r\n3 100\r\n5 1\r\n",
                "12\r\n"
            ],
            [
                "50 10 30\r\n1 50\r\n10 1\r\n",
                "20\r\n"
            ],
            [
                "4 1 4\r\n1 100\r\n2 1\r\n",
                "10\r\n"
            ],
            [
                "10 5 9\r\n1 10\r\n5 1\r\n",
                "4\r\n"
            ],
            [
                "20 15 10\r\n5 2\r\n3 1\r\n",
                "10\r\n"
            ],
            [
                "2 2 0\r\n7 3\r\n1 1\r\n",
                "6\r\n"
            ],
            [
                "10 1 9\r\n1 10\r\n1 1\r\n",
                "8\r\n"
            ],
            [
                "1000 2 902\r\n1 1000\r\n2 1\r\n",
                "900\r\n"
            ],
            [
                "100 9 6\r\n3 100\r\n5 1\r\n",
                "300\r\n"
            ],
            [
                "10 1 6\r\n1 10\r\n3 -1\r\n",
                "9\r\n"
            ],
            [
                "1000 902 2\r\n1 1000\r\n902 -1\r\n",
                "900\r\n"
            ],
            [
                "100 50 25\r\n1 1000\r\n10 1\r\n",
                "165\r\n"
            ],
            [
                "5 3 0\r\n1 2\r\n4 -1\r\n",
                "4\r\n"
            ],
            [
                "4 1 2\r\n1 10\r\n3 1\r\n",
                "7\r\n"
            ],
            [
                "10 4 8\r\n1 5\r\n4 -1\r\n",
                "12\r\n"
            ]
        ]
    }
]