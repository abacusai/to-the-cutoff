[
    {
        "name": "NP-Hard Problem",
        "description": "Recently, Pari and Arya did some research about NP-Hard problems and they\nfound the minimum vertex cover problem very interesting. Suppose the graph G\nis given. Subset A of its vertices is called a vertex cover of this graph, if\nfor each edge uv there is at least one endpoint of it in this set, i.e. or (or\nboth). Pari and Arya have won a great undirected graph as an award in a team\ncontest. Now they have to split it in two parts, but both of them want their\nparts of the graph to be a vertex cover. They have agreed to give you their\ngraph and you need to find two disjoint subsets of its vertices A and B, such\nthat both A and B are vertex cover or claim it's impossible. Each vertex\nshould be given to no more than one of the friends (or you can even keep it\nfor yourself). Input The first line of the input contains two integers n and m\n(2 \u2264 n \u2264 100 000, 1 \u2264 m \u2264 100 000) \u2014 the number of vertices and the number of\nedges in the prize graph, respectively. Each of the next m lines contains a\npair of integers ui and vi (1 \u2264 ui, vi \u2264 n), denoting an undirected edge\nbetween ui and vi. It's guaranteed the graph won't contain any self-loops or\nmultiple edges. Output If it's impossible to split the graph between Pari and\nArya as they expect, print \"-1\" (without quotes). If there are two disjoint\nsets of vertices, such that both sets are vertex cover, print their\ndescriptions. Each description must contain two lines. The first line contains\na single integer k denoting the number of vertices in that vertex cover, and\nthe second line contains k integers \u2014 the indices of vertices. Note that\nbecause of m \u2265 1, vertex cover cannot be empty. Examples Input 4 2 1 2 2 3\nOutput 1 2 2 1 3 Input 3 3 1 2 2 3 1 3 Output -1 Note In the first sample, you\ncan give the vertex number 2 to Arya and vertices numbered 1 and 3 to Pari and\nkeep vertex number 4 for yourself (or give it someone, if you wish). In the\nsecond sample, there is no way to satisfy both Pari and Arya.\n\n",
        "cf_contest_id": 687,
        "cf_index": "A",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2\r\n1 2\r\n2 3\r\n",
                "3\r\n1 3 4 1\r\n2 "
            ],
            [
                "3 3\r\n1 2\r\n2 3\r\n1 3\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 7\r\n3 2\r\n5 4\r\n3 4\r\n1 3\r\n1 5\r\n1 4\r\n2 5\r\n",
                "-1\r\n"
            ],
            [
                "10 11\r\n4 10\r\n8 10\r\n2 3\r\n2 4\r\n7 1\r\n8 5\r\n2 8\r\n7 2\r\n1 2\r\n2 9\r\n6 8\r\n",
                "-1\r\n"
            ],
            [
                "10 9\r\n2 5\r\n2 4\r\n2 7\r\n2 9\r\n2 3\r\n2 8\r\n2 6\r\n2 10\r\n2 1\r\n",
                "9\r\n1 3 4 5 6 7 8 9 10 1\r\n2 "
            ],
            [
                "10 16\r\n6 10\r\n5 2\r\n6 4\r\n6 8\r\n5 3\r\n5 4\r\n6 2\r\n5 9\r\n5 7\r\n5 1\r\n6 9\r\n5 8\r\n5 10\r\n6 1\r\n6 7\r\n6 3\r\n",
                "8\r\n1 2 3 4 7 8 9 10 2\r\n5 6 "
            ],
            [
                "10 17\r\n5 1\r\n8 1\r\n2 1\r\n2 6\r\n3 1\r\n5 7\r\n3 7\r\n8 6\r\n4 7\r\n2 7\r\n9 7\r\n10 7\r\n3 6\r\n4 1\r\n9 1\r\n8 7\r\n10 1\r\n",
                "3\r\n1 6 7 7\r\n2 3 4 5 8 9 10 "
            ],
            [
                "10 15\r\n5 9\r\n7 8\r\n2 9\r\n1 9\r\n3 8\r\n3 9\r\n5 8\r\n1 8\r\n6 9\r\n7 9\r\n4 8\r\n4 9\r\n10 9\r\n10 8\r\n6 8\r\n",
                "8\r\n1 2 3 4 5 6 7 10 2\r\n8 9 "
            ],
            [
                "10 9\r\n4 9\r\n1 9\r\n10 9\r\n2 9\r\n3 9\r\n6 9\r\n5 9\r\n7 9\r\n8 9\r\n",
                "9\r\n1 2 3 4 5 6 7 8 10 1\r\n9 "
            ],
            [
                "2 1\r\n1 2\r\n",
                "1\r\n1 1\r\n2 "
            ],
            [
                "10 10\r\n6 4\r\n9 1\r\n3 6\r\n6 7\r\n4 2\r\n9 6\r\n8 6\r\n5 7\r\n1 4\r\n6 10\r\n",
                "4\r\n1 2 5 6 6\r\n3 4 7 8 9 10 "
            ],
            [
                "20 22\r\n20 8\r\n1 3\r\n3 18\r\n14 7\r\n19 6\r\n7 20\r\n14 8\r\n8 10\r\n2 5\r\n11 2\r\n4 19\r\n14 2\r\n7 11\r\n15 1\r\n12 15\r\n7 6\r\n11 13\r\n1 16\r\n9 12\r\n1 19\r\n17 3\r\n11 20\r\n",
                "-1\r\n"
            ],
            [
                "20 22\r\n3 18\r\n9 19\r\n6 15\r\n7 1\r\n16 8\r\n18 7\r\n12 3\r\n18 4\r\n9 15\r\n20 1\r\n4 2\r\n6 7\r\n14 2\r\n7 15\r\n7 10\r\n8 1\r\n13 6\r\n9 7\r\n11 8\r\n2 6\r\n18 5\r\n17 15\r\n",
                "-1\r\n"
            ],
            [
                "5 5\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n",
                "-1\r\n"
            ]
        ]
    }
]