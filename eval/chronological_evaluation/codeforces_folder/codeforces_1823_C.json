[
    {
        "name": "Strongly Composite",
        "description": "A prime number is an integer greater than \n    1\n, which has exactly two\ndivisors. For example, \n    7\n is a prime, since it has two divisors\n\n    1, 7\n. A composite number is an integer greater than \n    1\n,\nwhich has more than two different divisors. Note that the integer \n    1\n is\nneither prime nor composite. Let's look at some composite number \n    v\n. It\nhas several divisors: some divisors are prime, others are composite\nthemselves. If the number of prime divisors of \n    v\n is less or equal to the\nnumber of composite divisors, let's name \n    v\n as strongly composite. For\nexample, number \n    12\n has \n    6\n divisors: \n    1, 2, 3, 4, 6,\n    12\n, two divisors \n    2\n and \n    3\n are prime, while three divisors\n\n    4\n, \n    6\n and \n    12\n are composite. So, \n    12\n is strongly\ncomposite. Other examples of strongly composite numbers are \n    4\n, \n    8\n,\n\n    9\n, \n    16\n and so on. On the other side, divisors of \n    15\n are\n\n    1, 3, 5, 15\n: \n    3\n and \n    5\n are prime, \n    15\n is\ncomposite. So, \n    15\n is not a strongly composite. Other examples are:\n\n    2\n, \n    3\n, \n    5\n, \n    6\n, \n    7\n, \n    10\n and so on. You are given\n\n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    a_i > 1\n). You have to\nbuild an array \n    b_1, b_2, \n    \u2026, b_k\n such that following conditions are\nsatisfied: Product of all elements of array \n    a\n is equal to product of all\nelements of array \n    b\n: \n    a_1 \n    \u00b7 a_2 \n    \u00b7\n    \u2026\n    \u00b7 a_n =\n    b_1 \n    \u00b7 b_2 \n    \u00b7\n    \u2026\n    \u00b7 b_k\n; All elements of array \n    b\n\nare integers greater than \n    1\n and strongly composite; The size \n    k\n of\narray \n    b\n is the maximum possible. Find the size \n    k\n of array \n    b\n,\nor report, that there is no array \n    b\n satisfying the conditions. Input\nEach test contains multiple test cases. The first line contains the number of\ntest cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n). The description of the test\ncases follows. The first line of each test case contains one integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 1000\n) \u2014 the size of the array \n    a\n. The second line\nof each test case contains \n    n\n integer \n    a_1, a_2, \n    \u2026 a_n\n (\n    2\n    \n    \u2264 a_i \n    \u2264 10^7\n) \u2014 the array \n    a\n itself. It is guaranteed that the\nsum of \n    n\n over all test cases does not exceed \n    1000\n. Output For each\ntest case, print the size \n    k\n of array \n    b\n, or \n    0\n, if there is no\narray \n    b\n satisfying the conditions. Example Input 8 2 3 6 3 3 4 5 2 2 3 3\n3 10 14 2 25 30 1 1080 9 3 3 3 5 5 5 7 7 7 20 12 15 2 2 2 2 2 3 3 3 17 21 21\n21 30 6 6 33 31 39 Output 1 1 0 2 2 3 4 15 Note In the first test case, we can\nget array \n    b = [18]\n: \n    a_1 \n    \u00b7 a_2 = 18 = b_1\n; \n    18\n is\nstrongly composite number. In the second test case, we can get array \n    b =\n    [60]\n: \n    a_1 \n    \u00b7 a_2 \n    \u00b7 a_3 = 60 = b_1\n; \n    60\n is strongly\ncomposite number. In the third test case, there is no array \n    b\n satisfying\nthe conditions. In the fourth test case, we can get array \n    b = [4, 105]\n:\n\n    a_1 \n    \u00b7 a_2 \n    \u00b7 a_3 = 420 = b_1 \n    \u00b7 b_2\n; \n    4\n and\n\n    105\n are strongly composite numbers.\n\n",
        "cf_contest_id": 1823,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8\r\n2\r\n3 6\r\n3\r\n3 4 5\r\n2\r\n2 3\r\n3\r\n3 10 14\r\n2\r\n25 30\r\n1\r\n1080\r\n9\r\n3 3 3 5 5 5 7 7 7\r\n20\r\n12 15 2 2 2 2 2 3 3 3 17 21 21 21 30 6 6 33 31 39\r\n",
                "1\r\n1\r\n0\r\n2\r\n2\r\n3\r\n4\r\n15\r\n"
            ]
        ],
        "private_cases": []
    }
]