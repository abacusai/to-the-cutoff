[
    {
        "name": "Interesting Sequence",
        "description": "Berland scientists noticed long ago that the world around them depends on\nBerland population. Due to persistent research in this area the scientists\nmanaged to find out that the Berland chronology starts from the moment when\nthe first two people came to that land (it is considered to have happened in\nthe first year). After one Berland year after the start of the chronology the\npopulation had already equaled 13 people (the second year). However, tracing\nthe population number during the following years was an ultimately difficult\ntask, still it was found out that if di \u2014 the number of people in Berland in\nthe year of i, then either di = 12di - 2, or di = 13di - 1 - 12di - 2. Of\ncourse no one knows how many people are living in Berland at the moment, but\nnow we can tell if there could possibly be a year in which the country\npopulation equaled A. That's what we ask you to determine. Also, if possible,\nyou have to find out in which years it could be (from the beginning of Berland\nchronology). Let's suppose that it could be in the years of a1, a2, ..., ak.\nThen you have to define how many residents could be in the country during\nthose years apart from the A variant. Look at the examples for further\nexplanation. Input The first line contains integer A (1 \u2264 A < 10^300). It is\nguaranteed that the number doesn't contain leading zeros. Output On the first\noutput line print YES, if there could be a year in which the total population\nof the country equaled A, otherwise print NO. If the answer is YES, then you\nalso have to print number k \u2014 the number of years in which the population\ncould equal A. On the next line you have to output precisely k space-separated\nnumbers \u2014 a1, a2, ..., ak. Those numbers have to be output in the increasing\norder. On the next line you should output number p \u2014 how many variants of the\nnumber of people could be in the years of a1, a2, ..., ak, apart from the A\nvariant. On each of the next p lines you have to print one number \u2014 the sought\nnumber of residents. Those number also have to go in the increasing order. If\nany number (or both of them) k or p exceeds 1000, then you have to print 1000\ninstead of it and only the first 1000 possible answers in the increasing\norder. The numbers should have no leading zeros. Examples Input 2 Output YES 1\n1 0 Input 3 Output NO Input 13 Output YES 1 2 0 Input 1729 Output YES 1 4 1\n156\n\n",
        "cf_contest_id": 40,
        "cf_index": "D",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n",
                "YES\r\n1\r\n1\r\n0\r\n"
            ],
            [
                "3\r\n",
                "NO\r\n"
            ],
            [
                "13\r\n",
                "YES\r\n1\r\n2\r\n0\r\n"
            ],
            [
                "1729\r\n",
                "YES\r\n1\r\n4\r\n1\r\n156\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n",
                "NO\r\n"
            ],
            [
                "156\r\n",
                "YES\r\n1\r\n4\r\n1\r\n1729\r\n"
            ],
            [
                "144\r\n",
                "NO\r\n"
            ],
            [
                "15407021574586369\r\n",
                "YES\r\n1\r\n16\r\n7\r\n465813504\r\n5162766336\r\n61917613056\r\n743008391424\r\n8916100449984\r\n106993205379216\r\n1283918464548876\r\n"
            ],
            [
                "1283918464548876\r\n",
                "YES\r\n1\r\n16\r\n7\r\n465813504\r\n5162766336\r\n61917613056\r\n743008391424\r\n8916100449984\r\n106993205379216\r\n15407021574586369\r\n"
            ],
            [
                "106993205379216\r\n",
                "YES\r\n1\r\n16\r\n7\r\n465813504\r\n5162766336\r\n61917613056\r\n743008391424\r\n8916100449984\r\n1283918464548876\r\n15407021574586369\r\n"
            ],
            [
                "8916100449984\r\n",
                "YES\r\n1\r\n16\r\n7\r\n465813504\r\n5162766336\r\n61917613056\r\n743008391424\r\n106993205379216\r\n1283918464548876\r\n15407021574586369\r\n"
            ],
            [
                "743008391424\r\n",
                "YES\r\n1\r\n16\r\n7\r\n465813504\r\n5162766336\r\n61917613056\r\n8916100449984\r\n106993205379216\r\n1283918464548876\r\n15407021574586369\r\n"
            ],
            [
                "61917613056\r\n",
                "YES\r\n1\r\n16\r\n7\r\n465813504\r\n5162766336\r\n743008391424\r\n8916100449984\r\n106993205379216\r\n1283918464548876\r\n15407021574586369\r\n"
            ],
            [
                "5162766336\r\n",
                "YES\r\n1\r\n16\r\n7\r\n465813504\r\n61917613056\r\n743008391424\r\n8916100449984\r\n106993205379216\r\n1283918464548876\r\n15407021574586369\r\n"
            ],
            [
                "465813504\r\n",
                "YES\r\n1\r\n16\r\n7\r\n5162766336\r\n61917613056\r\n743008391424\r\n8916100449984\r\n106993205379216\r\n1283918464548876\r\n15407021574586369\r\n"
            ],
            [
                "25\r\n",
                "NO\r\n"
            ],
            [
                "79360359146807441660707083821018832188095237636414144034857851003419752010124705615779249215657075053438039921073878645370211154334804568157886814559909\r\n",
                "NO\r\n"
            ],
            [
                "63730052926382178992698271572\r\n",
                "NO\r\n"
            ],
            [
                "781127467969689863953686682245136076127159921705034542049372816247984349746396880068864077830521695515007722284098436125466526268962707778595903329840419133974864831578401355678018910046595664462\r\n",
                "NO\r\n"
            ],
            [
                "6158324958633591462725987806787114657822761584945953440793358408\r\n",
                "NO\r\n"
            ],
            [
                "46865942276811740149949176718949673344632458696505595472917789224885825949034661409971763949176343056701403524645790892802371117466746709730235969308113002256137529699677021858777002204698794034488631496662175642982367736619451227\r\n",
                "NO\r\n"
            ],
            [
                "30237645054497458443810364460387991000047179363449854478913094584184671326397148735574822623728870964468880\r\n",
                "NO\r\n"
            ],
            [
                "188808426143782131983811729737047667239979348184409855460833141044812532916921011366813880911319644625405122800255947507577498497005580408229\r\n",
                "NO\r\n"
            ],
            [
                "11\r\n",
                "NO\r\n"
            ],
            [
                "837952166310387766556098005402621146120844433859027080340550200820\r\n",
                "NO\r\n"
            ],
            [
                "6658370691480968202384509492140362150472696196949673577340706113760133821635599667476781507918250717914609488172442814676\r\n",
                "NO\r\n"
            ],
            [
                "496620932866717074931903995027173085744596193421095444317407919730992986418713478580824584919587030125446806223296721174921873955469939680411818878465888018986191990428049489376\r\n",
                "NO\r\n"
            ],
            [
                "1055050055824280186133547527395898666709023463559337207019374080060005629519967890329878081184599905695126755199503698703340223998620951421943134090897041663457029971964336512111472968057533187306110300592753045593222495258017559167383354672\r\n",
                "NO\r\n"
            ],
            [
                "833488\r\n",
                "NO\r\n"
            ],
            [
                "6623739799588591251984406341341227075747347067457011846886851179047097\r\n",
                "NO\r\n"
            ],
            [
                "491137842784568289872893698937459777201151060689848471272003426250808340375567208957554901863756992593841404624991936090178731\r\n",
                "NO\r\n"
            ],
            [
                "921020945402270233565256424740666649108666245414796768645533036514715926608741510409618545180420952947917462937925573726593991655435868735899832746218676826629010574075553051352459309199055\r\n",
                "NO\r\n"
            ],
            [
                "73010581613999159726778758153209240813500342925961695523976131595080552126499402124287397930918281238199343324378719343080627189983992629778313739785259010389762036264197722427990331444297391895841265448905560880286941336214995793596526089977876\r\n",
                "NO\r\n"
            ],
            [
                "20046142930690780976270827075270\r\n",
                "NO\r\n"
            ],
            [
                "9685166910821197056344900917707673568669808490600751439157007968027004377622601634787545920946543261243701428886581331490848676434786296227674864970612484770201\r\n",
                "NO\r\n"
            ],
            [
                "4805043123239964766764344326469867688727869311599746349016084457204677169811854267718990063526979167327981002200329174783850464\r\n",
                "NO\r\n"
            ],
            [
                "2376595620091080825479292544658464163405755746884100218035485700973409491416884420742631899446144679322008453313773241425622490028383089317622842863337164723765526589656211098933400307364163919083790470365474085981340438888606855706394352678991102\r\n",
                "NO\r\n"
            ],
            [
                "145\r\n",
                "YES\r\n1\r\n3\r\n1\r\n24\r\n"
            ],
            [
                "24\r\n",
                "YES\r\n1\r\n3\r\n1\r\n145\r\n"
            ]
        ]
    }
]