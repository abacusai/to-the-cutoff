[
    {
        "name": "Beautiful Mirrors with queries",
        "description": "Creatnx has \n    n\n mirrors, numbered from \n    1\n to \n    n\n. Every day,\nCreatnx asks exactly one mirror \"Am I beautiful?\". The \n    i\n-th mirror will\ntell Creatnx that he is beautiful with probability \n    p_i/100\n for\nall \n    1 \n    \u2264 i \n    \u2264 n\n. Some mirrors are called checkpoints. Initially,\nonly the \n    1\nst mirror is a checkpoint. It remains a checkpoint all the\ntime. Creatnx asks the mirrors one by one, starting from the \n    1\n-st\nmirror. Every day, if he asks \n    i\n-th mirror, there are two possibilities:\nThe \n    i\n-th mirror tells Creatnx that he is beautiful. In this case, if\n\n    i = n\n Creatnx will stop and become happy, otherwise he will continue\nasking the \n    i+1\n-th mirror next day; In the other case, Creatnx will feel\nupset. The next day, Creatnx will start asking from the checkpoint with a\nmaximal number that is less or equal to \n    i\n. There are some changes occur\nover time: some mirrors become new checkpoints and some mirrors are no longer\ncheckpoints. You are given \n    q\n queries, each query is represented by an\ninteger \n    u\n: If the \n    u\n-th mirror isn't a checkpoint then we set it as\na checkpoint. Otherwise, the \n    u\n-th mirror is no longer a checkpoint.\nAfter each query, you need to calculate the expected number of days until\nCreatnx becomes happy. Each of this numbers should be found by modulo\n\n    998244353\n. Formally, let \n    M = 998244353\n. It can be shown that the\nanswer can be expressed as an irreducible fraction \n    p/q\n, where\n\n    p\n and \n    q\n are integers and \n    q \n    \u2261 0 \n    M\n.\nOutput the integer equal to \n    p \n    \u00b7 q^-1\n     M\n. In other words,\noutput such an integer \n    x\n that \n    0 \n    \u2264 x < M\n and \n    x \n    \u00b7 q\n    \n    \u2261 p \n    M\n. Input The first line contains two integers \n    n\n,\n\n    q\n (\n    2 \n    \u2264 n, q \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of mirrors and\nqueries. The second line contains \n    n\n integers: \n    p_1, p_2, \n    \u2026,\n    p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 100\n). Each of \n    q\n following lines\ncontains a single integer \n    u\n (\n    2 \n    \u2264 u \n    \u2264 n\n) \u2014 next query.\nOutput Print \n    q\n numbers \u2013 the answers after each query by modulo\n\n    998244353\n. Examples Input 2 2 50 50 2 2 Output 4 6 Input 5 5 10 20 30 40\n50 2 3 4 5 3 Output 117 665496274 332748143 831870317 499122211 Note In the\nfirst test after the first query, the first and the second mirrors are\ncheckpoints. Creatnx will ask the first mirror until it will say that he is\nbeautiful, after that he will ask the second mirror until it will say that he\nis beautiful because the second mirror is a checkpoint. After that, he will\nbecome happy. Probabilities that the mirrors will say, that he is beautiful\nare equal to \n    1/2\n. So, the expected number of days, until one\nmirror will say, that he is beautiful is equal to \n    2\n and the answer will\nbe equal to \n    4 = 2 + 2\n.\n\n",
        "cf_contest_id": 1264,
        "cf_index": "C",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "probabilities"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2\r\n50 50\r\n2\r\n2\r\n",
                "4\r\n6\r\n"
            ],
            [
                "5 5\r\n10 20 30 40 50\r\n2\r\n3\r\n4\r\n5\r\n3\r\n",
                "117\r\n665496274\r\n332748143\r\n831870317\r\n499122211\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n38 4\r\n2\r\n2\r\n",
                "262695910\r\n577931032\r\n"
            ]
        ]
    }
]