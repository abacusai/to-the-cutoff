[
    {
        "name": "Not Assigning",
        "description": "You are given a tree of \n    n\n vertices numbered from \n    1\n to \n    n\n,\nwith edges numbered from \n    1\n to \n    n-1\n. A tree is a connected\nundirected graph without cycles. You have to assign integer weights to each\nedge of the tree, such that the resultant graph is a prime tree. A prime tree\nis a tree where the weight of every path consisting of one or two edges is\nprime. A path should not visit any vertex twice. The weight of a path is the\nsum of edge weights on that path. Consider the graph below. It is a prime tree\nas the weight of every path of two or less edges is prime. For example, the\nfollowing path of two edges: \n    2 \n    \u2192 1 \n    \u2192 3\n has a weight of \n    11 + 2\n    = 13\n, which is prime. Similarly, the path of one edge: \n    4 \n    \u2192 3\n has\na weight of \n    5\n, which is also prime. Print any valid assignment of\nweights such that the resultant tree is a prime tree. If there is no such\nassignment, then print \n    -1\n. It can be proven that if a valid assignment\nexists, one exists with weights between \n    1\n and \n    10^5\n as well. Input\nThe input consists of multiple test cases. The first line contains an integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The\ndescription of the test cases follows. The first line of each test case\ncontains one integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of\nvertices in the tree. Then, \n    n-1\n lines follow. The \n    i\n-th line\ncontains two integers \n    u\n and \n    v\n (\n    1 \n    \u2264 u, v \n    \u2264 n\n)\ndenoting that edge number \n    i\n is between vertices \n    u\n and \n    v\n. It\nis guaranteed that the edges form a tree. It is guaranteed that the sum of\n\n    n\n over all test cases does not exceed \n    10^5\n. Output For each test\ncase, if a valid assignment exists, then print a single line containing\n\n    n-1\n integers \n    a_1, a_2, \n    \u2026, a_n-1\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^5\n), where \n    a_i\n denotes the weight assigned to the edge numbered\n\n    i\n. Otherwise, print \n    -1\n. If there are multiple solutions, you may\nprint any. Example Input 3 2 1 2 4 1 3 4 3 2 1 7 1 2 1 3 3 4 3 5 6 2 7 2\nOutput 17 2 5 11 -1 Note For the first test case, there are only two paths\nhaving one edge each: \n    1 \n    \u2192 2\n and \n    2 \n    \u2192 1\n, both having a\nweight of \n    17\n, which is prime. The second test case is described in the\nstatement. It can be proven that no such assignment exists for the third test\ncase.\n\n",
        "cf_contest_id": 1627,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar",
            "number theory",
            "trees"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2\r\n1 2\r\n4\r\n1 3\r\n4 3\r\n2 1\r\n7\r\n1 2\r\n1 3\r\n3 4\r\n3 5\r\n6 2\r\n7 2\r\n",
                "2\r\n3 2 2\r\n-1\r\n"
            ]
        ],
        "private_cases": []
    }
]