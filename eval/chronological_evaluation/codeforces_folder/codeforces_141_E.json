[
    {
        "name": "Clearing Up",
        "description": "After Santa Claus and his assistant Elf delivered all the presents and made\nall the wishes come true, they returned to the North Pole and found out that\nit is all covered with snow. Both of them were quite tired and they decided\nonly to remove the snow from the roads connecting huts. The North Pole has n\nhuts connected with m roads. One can go along the roads in both directions.\nThe Elf offered to split: Santa Claus will clear up the wide roads and the Elf\nwill tread out the narrow roads. For each road they decided who will clear it:\nSanta Claus or the Elf. To minimize the efforts they decided to clear the road\nso as to fulfill both those conditions: between any two huts should exist\nexactly one simple path along the cleared roads; Santa Claus and the Elf\nshould clear the same number of roads. At this point Santa Claus and his\nassistant Elf wondered which roads should they clear up? Input The first input\nline contains two positive integers n and m (1 \u2264 n \u2264 10^3, 1 \u2264 m \u2264 10^5) \u2014 the\nnumber of huts and the number of roads. Then follow m lines, each of them\ncontains a road description: the numbers of huts it connects \u2014 x and y (1 \u2264 x,\ny \u2264 n) and the person responsible for clearing out this road (\"S\" \u2014 for the\nElf or \"M\" for Santa Claus). It is possible to go on each road in both\ndirections. Note that there can be more than one road between two huts and a\nroad can begin and end in the same hut. Output Print \"-1\" without the quotes\nif it is impossible to choose the roads that will be cleared by the given\nrule. Otherwise print in the first line how many roads should be cleared and\nin the second line print the numbers of those roads (the roads are numbered\nfrom 1 in the order of occurrence in the input). It is allowed to print the\nnumbers of the roads in any order. Each number should be printed exactly once.\nAs you print the numbers, separate them with spaces. Examples Input 1 2 1 1 S\n1 1 M Output 0 Input 3 3 1 2 S 1 3 M 2 3 S Output 2 2 1 Input 5 6 1 1 S 1 2 M\n1 3 S 1 4 M 1 5 M 2 2 S Output -1 Note A path is called simple if all huts on\nit are pairwise different.\n\n",
        "cf_contest_id": 141,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dp",
            "dsu",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 2\r\n1 1 S\r\n1 1 M\r\n",
                "0\r\n\r\n"
            ],
            [
                "3 3\r\n1 2 S\r\n1 3 M\r\n2 3 S\r\n",
                "2\r\n1 2 \r\n"
            ],
            [
                "5 6\r\n1 1 S\r\n1 2 M\r\n1 3 S\r\n1 4 M\r\n1 5 M\r\n2 2 S\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 11\r\n4 3 S\r\n2 5 M\r\n4 2 M\r\n5 2 S\r\n3 1 S\r\n4 2 M\r\n2 1 M\r\n5 1 M\r\n4 4 S\r\n2 1 S\r\n4 4 M\r\n",
                "4\r\n1 3 4 7 \r\n"
            ],
            [
                "5 2\r\n1 2 S\r\n1 4 M\r\n",
                "-1\r\n"
            ],
            [
                "5 5\r\n5 3 M\r\n4 3 M\r\n5 2 M\r\n3 2 M\r\n2 1 M\r\n",
                "-1\r\n"
            ],
            [
                "11 17\r\n10 3 M\r\n5 9 M\r\n4 6 S\r\n11 4 M\r\n5 4 M\r\n11 4 M\r\n7 5 M\r\n9 8 M\r\n4 1 S\r\n8 6 M\r\n8 6 M\r\n5 3 S\r\n3 1 S\r\n2 1 S\r\n9 8 S\r\n6 3 S\r\n6 8 S\r\n",
                "10\r\n1 2 3 4 7 8 9 12 13 14 \r\n"
            ],
            [
                "10 3\r\n2 9 S\r\n4 4 S\r\n10 4 S\r\n",
                "-1\r\n"
            ],
            [
                "11 23\r\n7 4 S\r\n1 1 S\r\n5 2 S\r\n9 4 M\r\n7 3 S\r\n1 3 S\r\n1 11 S\r\n6 1 S\r\n10 7 M\r\n5 1 M\r\n4 7 S\r\n3 2 M\r\n2 1 M\r\n7 2 S\r\n5 7 M\r\n9 1 M\r\n11 8 M\r\n1 3 M\r\n6 1 M\r\n4 2 M\r\n7 7 M\r\n8 8 S\r\n8 5 M\r\n",
                "10\r\n1 3 4 5 6 7 9 10 17 19 \r\n"
            ],
            [
                "2 2\r\n1 2 S\r\n1 2 M\r\n",
                "-1\r\n"
            ],
            [
                "5 6\r\n1 2 S\r\n2 3 S\r\n3 4 S\r\n4 5 M\r\n4 5 M\r\n4 5 M\r\n",
                "-1\r\n"
            ],
            [
                "5 5\r\n1 2 S\r\n2 3 S\r\n3 4 S\r\n2 3 M\r\n4 5 M\r\n",
                "4\r\n1 3 4 5 \r\n"
            ],
            [
                "5 6\r\n3 4 S\r\n2 3 M\r\n2 3 S\r\n3 4 M\r\n1 3 S\r\n4 5 M\r\n",
                "4\r\n1 2 5 6 \r\n"
            ]
        ]
    }
]