[
    {
        "name": "Lenient Vertex Cover",
        "description": "You are given a simple connected undirected graph, consisting of \n    n\n\nvertices and \n    m\n edges. The vertices are numbered from \n    1\n to \n    n\n.\nA vertex cover of a graph is a set of vertices such that each edge has at\nleast one of its endpoints in the set. Let's call a lenient vertex cover such\na vertex cover that at most one edge in it has both endpoints in the set. Find\na lenient vertex cover of a graph or report that there is none. If there are\nmultiple answers, then print any of them. Input The first line contains a\nsingle integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of testcases.\nThe first line of each testcase contains two integers \n    n\n and \n    m\n\n(\n    2 \n    \u2264 n \n    \u2264 10^6\n; \n    n - 1 \n    \u2264 m \n    \u2264\n    min(10^6, \n    n\n    \n    \u00b7 (n - 1)/2)\n) \u2014 the number of vertices and the number of edges of\nthe graph. Each of the next \n    m\n lines contains two integers \n    v\n and\n\n    u\n (\n    1 \n    \u2264 v, u \n    \u2264 n\n; \n    v \n    \u2260 u\n) \u2014 the descriptions of\nthe edges. For each testcase, the graph is connected and doesn't have multiple\nedges. The sum of \n    n\n over all testcases doesn't exceed \n    10^6\n. The\nsum of \n    m\n over all testcases doesn't exceed \n    10^6\n. Output For each\ntestcase, the first line should contain YES if a lenient vertex cover exists,\nand NO otherwise. If it exists, the second line should contain a binary string\n\n    s\n of length \n    n\n, where \n    s_i = 1\n means that vertex \n    i\n is in\nthe vertex cover, and \n    s_i = 0\n means that vertex \n    i\n isn't. If there\nare multiple answers, then print any of them. Examples Input 4 6 5 1 3 2 4 3 4\n3 5 4 6 4 6 1 2 2 3 3 4 1 4 1 3 2 4 8 11 1 3 2 4 3 5 4 6 5 7 6 8 1 2 3 4 5 6 7\n8 7 2 4 5 1 2 2 3 3 4 1 3 2 4 Output YES 001100 NO YES 01100110 YES 0110 Input\n1 10 15 9 4 3 4 6 4 1 2 8 2 8 3 7 2 9 5 7 8 5 10 1 4 2 10 5 3 5 7 2 9 Output\nYES 0101100100 Input 1 10 19 7 9 5 3 3 4 1 6 9 4 1 4 10 5 7 1 9 2 8 3 7 3 10 9\n2 10 9 8 3 2 1 5 10 7 9 5 1 2 Output YES 1010000011 Note Here are the graphs\nfrom the first example. The vertices in the lenient vertex covers are marked\nred.\n\n",
        "cf_contest_id": 1680,
        "cf_index": "F",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n6 5\r\n1 3\r\n2 4\r\n3 4\r\n3 5\r\n4 6\r\n4 6\r\n1 2\r\n2 3\r\n3 4\r\n1 4\r\n1 3\r\n2 4\r\n8 11\r\n1 3\r\n2 4\r\n3 5\r\n4 6\r\n5 7\r\n6 8\r\n1 2\r\n3 4\r\n5 6\r\n7 8\r\n7 2\r\n4 5\r\n1 2\r\n2 3\r\n3 4\r\n1 3\r\n2 4\r\n",
                "YES\r\n100110\r\nNO\r\nYES\r\n01100110\r\nYES\r\n0110\r\n"
            ],
            [
                "1\r\n10 15\r\n9 4\r\n3 4\r\n6 4\r\n1 2\r\n8 2\r\n8 3\r\n7 2\r\n9 5\r\n7 8\r\n5 10\r\n1 4\r\n2 10\r\n5 3\r\n5 7\r\n2 9\r\n",
                "YES\r\n0101100100\r\n"
            ],
            [
                "1\r\n10 19\r\n7 9\r\n5 3\r\n3 4\r\n1 6\r\n9 4\r\n1 4\r\n10 5\r\n7 1\r\n9 2\r\n8 3\r\n7 3\r\n10 9\r\n2 10\r\n9 8\r\n3 2\r\n1 5\r\n10 7\r\n9 5\r\n1 2\r\n",
                "YES\r\n1010000011\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n3 3\r\n3 2\r\n1 3\r\n1 2\r\n5 7\r\n1 4\r\n3 4\r\n3 2\r\n1 5\r\n3 1\r\n5 2\r\n3 5\r\n6 9\r\n5 1\r\n2 5\r\n3 4\r\n5 4\r\n4 2\r\n6 4\r\n1 2\r\n5 6\r\n1 6\r\n9 10\r\n9 2\r\n9 4\r\n5 7\r\n6 7\r\n8 6\r\n7 8\r\n4 1\r\n9 6\r\n6 1\r\n3 6\r\n7 8\r\n6 5\r\n1 6\r\n3 4\r\n2 4\r\n6 4\r\n1 7\r\n3 7\r\n5 2\r\n7 9\r\n5 1\r\n1 4\r\n3 4\r\n7 5\r\n3 7\r\n1 3\r\n5 6\r\n5 3\r\n2 4\r\n3 2\r\n2 3\r\n3 1\r\n6 6\r\n6 3\r\n3 1\r\n5 3\r\n4 3\r\n1 2\r\n3 2\r\n2 1\r\n2 1\r\n10 10\r\n9 6\r\n5 10\r\n7 8\r\n3 2\r\n1 5\r\n7 10\r\n9 5\r\n8 4\r\n3 9\r\n4 5\r\n",
                "YES\r\n101\r\nNO\r\nNO\r\nYES\r\n010101100\r\nYES\r\n1110010\r\nNO\r\nYES\r\n001\r\nYES\r\n011000\r\nYES\r\n01\r\nYES\r\n0010110101\r\n"
            ]
        ]
    }
]