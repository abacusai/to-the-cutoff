[
    {
        "name": "Fire in the City",
        "description": "The capital of Berland looks like a rectangle of size n \u00d7 m of the square\nblocks of same size. Fire! It is known that k + 1 blocks got caught on fire (k\n+ 1 \u2264 n\u00b7m). Those blocks are centers of ignition. Moreover positions of k of\nthese centers are known and one of these stays unknown. All k + 1 positions\nare distinct. The fire goes the following way: during the zero minute of fire\nonly these k + 1 centers of ignition are burning. Every next minute the fire\ngoes to all neighbouring blocks to the one which is burning. You can consider\nblocks to burn for so long that this time exceeds the time taken in the\nproblem. The neighbouring blocks are those that touch the current block by a\nside or by a corner. Berland Fire Deparment wants to estimate the minimal time\nit takes the fire to lighten up the whole city. Remember that the positions of\nk blocks (centers of ignition) are known and (k + 1)-th can be positioned in\nany other block. Help Berland Fire Department to estimate the minimal time it\ntakes the fire to lighten up the whole city. Input The first line contains\nthree integers n, m and k (1 \u2264 n, m \u2264 10^9, 1 \u2264 k \u2264 500). Each of the next k\nlines contain two integers xi and yi (1 \u2264 xi \u2264 n, 1 \u2264 yi \u2264 m) \u2014 coordinates of\nthe i-th center of ignition. It is guaranteed that the locations of all\ncenters of ignition are distinct. Output Print the minimal time it takes the\nfire to lighten up the whole city (in minutes). Examples Input 7 7 3 1 2 2 1 5\n5 Output 3 Input 10 5 1 3 3 Output 2 Note In the first example the last block\ncan have coordinates (4, 4). In the second example the last block can have\ncoordinates (8, 3).\n\n",
        "cf_contest_id": 845,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 7 3\r\n1 2\r\n2 1\r\n5 5\r\n",
                "3\r\n"
            ],
            [
                "10 5 1\r\n3 3\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 5 19\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 1\r\n2 2\r\n2 3\r\n2 5\r\n3 1\r\n3 2\r\n3 3\r\n3 4\r\n3 5\r\n4 1\r\n4 2\r\n4 3\r\n4 4\r\n4 5\r\n",
                "0\r\n"
            ],
            [
                "5 5 24\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 1\r\n2 2\r\n2 3\r\n2 4\r\n2 5\r\n3 1\r\n3 2\r\n3 3\r\n3 4\r\n3 5\r\n4 1\r\n4 2\r\n4 3\r\n4 4\r\n4 5\r\n5 1\r\n5 2\r\n5 3\r\n5 4\r\n5 5\r\n",
                "0\r\n"
            ],
            [
                "10 10 20\r\n7 5\r\n4 5\r\n5 4\r\n7 4\r\n1 5\r\n6 7\r\n9 5\r\n8 4\r\n1 4\r\n2 10\r\n3 10\r\n4 10\r\n3 6\r\n5 7\r\n6 2\r\n1 1\r\n10 9\r\n7 6\r\n6 4\r\n8 2\r\n",
                "2\r\n"
            ],
            [
                "1000 1000 1\r\n944 844\r\n",
                "500\r\n"
            ],
            [
                "1000 1000 10\r\n630 843\r\n959 696\r\n75 966\r\n691 982\r\n390 44\r\n863 380\r\n467 293\r\n94 96\r\n415 411\r\n161 497\r\n",
                "304\r\n"
            ],
            [
                "1000000 1000000 1\r\n721767 525996\r\n",
                "500000\r\n"
            ],
            [
                "1000000000 1000000000 1\r\n243387905 466399354\r\n",
                "500000000\r\n"
            ],
            [
                "1000000000 1000000000 10\r\n946218581 843926244\r\n730038846 389721428\r\n400508549 779159281\r\n631299905 559948749\r\n352088629 132899572\r\n391396726 503295408\r\n57387601 686114055\r\n298922091 222110600\r\n523083048 28286278\r\n587730768 379340837\r\n",
                "313885945\r\n"
            ],
            [
                "5 1 2\r\n4 1\r\n5 1\r\n",
                "1\r\n"
            ],
            [
                "6 4 3\r\n5 2\r\n5 4\r\n3 3\r\n",
                "2\r\n"
            ],
            [
                "4 5 4\r\n1 5\r\n2 1\r\n2 3\r\n4 1\r\n",
                "1\r\n"
            ]
        ]
    }
]