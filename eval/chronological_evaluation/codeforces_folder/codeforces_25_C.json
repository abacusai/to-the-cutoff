[
    {
        "name": "Roads in Berland",
        "description": "There are n cities numbered from 1 to n in Berland. Some of them are connected\nby two-way roads. Each road has its own length \u2014 an integer number from 1 to\n1000. It is known that from each city it is possible to get to any other city\nby existing roads. Also for each pair of cities it is known the shortest\ndistance between them. Berland Government plans to build k new roads. For each\nof the planned road it is known its length, and what cities it will connect.\nTo control the correctness of the construction of new roads, after the opening\nof another road Berland government wants to check the sum of the shortest\ndistances between all pairs of cities. Help them \u2014 for a given matrix of\nshortest distances on the old roads and plans of all new roads, find out how\nthe sum of the shortest distances between all pairs of cities changes after\nconstruction of each road. Input The first line contains integer n (2 \u2264 n \u2264\n300) \u2014 amount of cities in Berland. Then there follow n lines with n integer\nnumbers each \u2014 the matrix of shortest distances. j-th integer in the i-th row\n\u2014 di, j, the shortest distance between cities i and j. It is guaranteed that\ndi, i = 0, di, j = dj, i, and a given matrix is a matrix of shortest distances\nfor some set of two-way roads with integer lengths from 1 to 1000, such that\nfrom each city it is possible to get to any other city using these roads. Next\nline contains integer k (1 \u2264 k \u2264 300) \u2014 amount of planned roads. Following k\nlines contain the description of the planned roads. Each road is described by\nthree space-separated integers ai, bi, ci (1 \u2264 ai, bi \u2264 n, ai \u2260 bi, 1 \u2264 ci \u2264\n1000) \u2014 ai and bi \u2014 pair of cities, which the road connects, ci \u2014 the length\nof the road. It can be several roads between a pair of cities, but no road\nconnects the city with itself. Output Output k space-separated integers qi (1\n\u2264 i \u2264 k). qi should be equal to the sum of shortest distances between all\npairs of cities after the construction of roads with indexes from 1 to i.\nRoads are numbered from 1 in the input order. Each pair of cities should be\ntaken into account in the sum exactly once, i. e. we count unordered pairs.\nExamples Input 2 0 5 5 0 1 1 2 3 Output 3 Input 3 0 4 5 4 0 9 5 9 0 2 2 3 8 1\n2 1 Output 17 12\n\n",
        "cf_contest_id": 25,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n0 5\r\n5 0\r\n1\r\n1 2 3\r\n",
                "3 "
            ],
            [
                "3\r\n0 4 5\r\n4 0 9\r\n5 9 0\r\n2\r\n2 3 8\r\n1 2 1\r\n",
                "17 12 "
            ]
        ],
        "private_cases": [
            [
                "3\r\n0 983 173\r\n983 0 810\r\n173 810 0\r\n3\r\n3 2 567\r\n2 3 767\r\n1 2 763\r\n",
                "1480 1480 1480 "
            ],
            [
                "4\r\n0 537 1064 656\r\n537 0 527 119\r\n1064 527 0 408\r\n656 119 408 0\r\n4\r\n1 4 123\r\n1 4 344\r\n3 2 982\r\n3 2 587\r\n",
                "1950 1950 1950 1950 "
            ],
            [
                "5\r\n0 954 1255 266 751\r\n954 0 1677 688 1173\r\n1255 1677 0 989 504\r\n266 688 989 0 485\r\n751 1173 504 485 0\r\n5\r\n5 2 837\r\n3 4 692\r\n3 5 756\r\n3 1 151\r\n2 5 262\r\n",
                "8070 7476 7476 6062 5111 "
            ]
        ]
    }
]