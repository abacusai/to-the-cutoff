[
    {
        "name": "Path Queries",
        "description": "You are given a weighted tree consisting of \n    n\n vertices. Recall that a\ntree is a connected graph without cycles. Vertices \n    u_i\n and \n    v_i\n are\nconnected by an edge with weight \n    w_i\n. You are given \n    m\n queries. The\n\n    i\n-th query is given as an integer \n    q_i\n. In this query you need to\ncalculate the number of pairs of vertices \n    (u, v)\n (\n    u < v\n) such that\nthe maximum weight of an edge on a simple path between \n    u\n and \n    v\n\ndoesn't exceed \n    q_i\n. Input The first line of the input contains two\nintegers \n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the\nnumber of vertices in the tree and the number of queries. Each of the next\n\n    n - 1\n lines describes an edge of the tree. Edge \n    i\n is denoted by\nthree integers \n    u_i\n, \n    v_i\n and \n    w_i\n \u2014 the labels of vertices it\nconnects (\n    1 \n    \u2264 u_i, v_i \n    \u2264 n\n, \n    u_i \n     v_i\n) and the weight\nof the edge (\n    1 \n    \u2264 w_i \n    \u2264 2 \n    \u00b7 10^5\n). It is guaranteed that\nthe given edges form a tree. The last line of the input contains \n    m\n\nintegers \n    q_1, q_2, \n    \u2026, q_m\n (\n    1 \n    \u2264 q_i \n    \u2264 2 \n    \u00b7\n    10^5\n), where \n    q_i\n is the maximum weight of an edge in the \n    i\n-th\nquery. Output Print \n    m\n integers \u2014 the answers to the queries. The\n\n    i\n-th value should be equal to the number of pairs of vertices \n    (u,\n    v)\n (\n    u < v\n) such that the maximum weight of an edge on a simple path\nbetween \n    u\n and \n    v\n doesn't exceed \n    q_i\n. Queries are numbered\nfrom \n    1\n to \n    m\n in the order of the input. Examples Input 7 5 1 2 1 3\n2 3 2 4 1 4 5 2 5 7 4 3 6 2 5 2 3 4 1 Output 21 7 15 21 3 Input 1 2 1 2 Output\n0 0 Input 3 3 1 2 1 2 3 2 1 3 2 Output 1 3 3 Note The picture shows the tree\nfrom the first example:\n\n",
        "cf_contest_id": 1213,
        "cf_index": "G",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "divide and conquer",
            "dsu",
            "graphs",
            "sortings",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 5\r\n1 2 1\r\n3 2 3\r\n2 4 1\r\n4 5 2\r\n5 7 4\r\n3 6 2\r\n5 2 3 4 1\r\n",
                "21 7 15 21 3 "
            ],
            [
                "1 2\r\n1 2\r\n",
                "0 0 "
            ],
            [
                "3 3\r\n1 2 1\r\n2 3 2\r\n1 3 2\r\n",
                "1 3 3 "
            ]
        ],
        "private_cases": []
    }
]