[
    {
        "name": "Sherlock and his girlfriend",
        "description": "Sherlock has a new girlfriend (so unlike him!). Valentine's day is coming and\nhe wants to gift her some jewelry. He bought n pieces of jewelry. The i-th\npiece has price equal to i + 1, that is, the prices of the jewelry are 2, 3,\n4, ... n + 1. Watson gave Sherlock a challenge to color these jewelry pieces\nsuch that two pieces don't have the same color if the price of one piece is a\nprime divisor of the price of the other piece. Also, Watson asked him to\nminimize the number of different colors used. Help Sherlock complete this\ntrivial task. Input The only line contains single integer n (1 \u2264 n \u2264 100000) \u2014\nthe number of jewelry pieces. Output The first line of output should contain a\nsingle integer k, the minimum number of colors that can be used to color the\npieces of jewelry with the given constraints. The next line should consist of\nn space-separated integers (between 1 and k) that specify the color of each\npiece in the order of increasing price. If there are multiple ways to color\nthe pieces using k colors, you can output any of them. Examples Input 3 Output\n2 1 1 2 Input 4 Output 2 2 1 1 2 Note In the first input, the colors for\nfirst, second and third pieces of jewelry having respective prices 2, 3 and 4\nare 1, 1 and 2 respectively. In this case, as 2 is a prime divisor of 4,\ncolors of jewelry having prices 2 and 4 must be distinct.\n\n",
        "cf_contest_id": 776,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n",
                "2\r\n1 1 2\r\n"
            ],
            [
                "4\r\n",
                "2\r\n1 1 2 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "17\r\n",
                "2\r\n1 1 2 1 2 1 2 2 2 1 2 1 2 2 2 1 2\r\n"
            ],
            [
                "25\r\n",
                "2\r\n1 1 2 1 2 1 2 2 2 1 2 1 2 2 2 1 2 1 2 2 2 1 2 2 2\r\n"
            ],
            [
                "85\r\n",
                "2\r\n1 1 2 1 2 1 2 2 2 1 2 1 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 1 2 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2 1 2 2 2\r\n"
            ],
            [
                "105\r\n",
                "2\r\n1 1 2 1 2 1 2 2 2 1 2 1 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 1 2 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 1 2 2 2 1 2 1 2 2 2\r\n"
            ],
            [
                "123\r\n",
                "2\r\n1 1 2 1 2 1 2 2 2 1 2 1 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 1 2 2 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2 1 2 1 2 2 2 2 2 1 2 2 2 1 2 2 2 2 2 1 2 2 2 2 2 2 2 1 2 2 2 1 2 1 2 2 2 1 2 1 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2\r\n"
            ],
            [
                "1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "10\r\n",
                "2\r\n1 1 2 1 2 1 2 2 2 1\r\n"
            ],
            [
                "2\r\n",
                "1\r\n1 1\r\n"
            ],
            [
                "1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "2\r\n",
                "1\r\n1 1\r\n"
            ]
        ]
    }
]