[
    {
        "name": "Cyclical Quest",
        "description": "Some days ago, WJMZBMR learned how to answer the query \"how many times does a\nstring x occur in a string s\" quickly by preprocessing the string s. But now\nhe wants to make it harder. So he wants to ask \"how many consecutive\nsubstrings of s are cyclical isomorphic to a given string x\". You are given\nstring s and n strings xi, for each string xi find, how many consecutive\nsubstrings of s are cyclical isomorphic to xi. Two strings are called cyclical\nisomorphic if one can rotate one string to get the other one. 'Rotate' here\nmeans 'to take some consecutive chars (maybe none) from the beginning of a\nstring and put them back at the end of the string in the same order'. For\nexample, string \"abcde\" can be rotated to string \"deabc\". We can take\ncharacters \"abc\" from the beginning and put them at the end of \"de\". Input The\nfirst line contains a non-empty string s. The length of string s is not\ngreater than 10^6 characters. The second line contains an integer n (1 \u2264 n \u2264\n10^5) \u2014 the number of queries. Then n lines follow: the i-th line contains the\nstring xi \u2014 the string for the i-th query. The total length of xi is less than\nor equal to 10^6 characters. In this problem, strings only consist of\nlowercase English letters. Output For each query xi print a single integer\nthat shows how many consecutive substrings of s are cyclical isomorphic to xi.\nPrint the answers to the queries in the order they are given in the input.\nExamples Input baabaabaaa 5 a ba baa aabaa aaba Output 7 5 7 3 5 Input aabbaa\n3 aa aabb abba Output 2 3 3\n\n",
        "cf_contest_id": 235,
        "cf_index": "C",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "string suffix structures",
            "strings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "baabaabaaa\r\n5\r\na\r\nba\r\nbaa\r\naabaa\r\naaba\r\n",
                "7\r\n5\r\n7\r\n3\r\n5\r\n"
            ],
            [
                "aabbaa\r\n3\r\naa\r\naabb\r\nabba\r\n",
                "2\r\n3\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "abbabbabba\r\n5\r\nab\r\nbba\r\nbbab\r\nb\r\nbbabb\r\n",
                "6\r\n8\r\n4\r\n6\r\n2\r\n"
            ],
            [
                "bbbbbbbbbbbbbbb\r\n5\r\nba\r\nbbb\r\nbbbbbb\r\nbbb\r\nb\r\n",
                "0\r\n13\r\n10\r\n13\r\n15\r\n"
            ],
            [
                "baabaabaabaabaa\r\n7\r\nabaa\r\nba\r\naab\r\naab\r\naab\r\nbaab\r\nbb\r\n",
                "8\r\n9\r\n13\r\n13\r\n13\r\n4\r\n0\r\n"
            ],
            [
                "babbabbabbabbabbabbabbabbabbab\r\n10\r\nbbab\r\nabbabbab\r\nabba\r\nabbab\r\nabbabba\r\na\r\nbabb\r\nabba\r\naabaaaa\r\nbabbab\r\n",
                "18\r\n16\r\n9\r\n18\r\n8\r\n10\r\n18\r\n9\r\n0\r\n25\r\n"
            ],
            [
                "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbba\r\n10\r\nbbbbbb\r\nbbbbbb\r\nbbbbbbbb\r\nbbbbbb\r\nbbbbbbbb\r\nbbbbbb\r\nbbbbb\r\nbbb\r\nbbbbbb\r\nabbaba\r\n",
                "34\r\n34\r\n32\r\n34\r\n32\r\n34\r\n35\r\n37\r\n34\r\n0\r\n"
            ],
            [
                "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbba\r\n10\r\nbbbbbbbb\r\nbbbbbbb\r\nbbbbbbb\r\nbbbbbbb\r\nbbb\r\nbbaba\r\nbbbbbb\r\nbbbbbbbbb\r\nbbbbbbbbbb\r\nbbbbbbbb\r\n",
                "42\r\n43\r\n43\r\n43\r\n47\r\n0\r\n44\r\n41\r\n40\r\n42\r\n"
            ]
        ]
    }
]