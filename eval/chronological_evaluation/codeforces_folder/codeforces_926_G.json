[
    {
        "name": "Large Bouquets",
        "description": "A flower shop has got n bouquets, and the i-th bouquet consists of ai flowers.\nVasya, the manager of the shop, decided to make large bouquets from these\nbouquets. Vasya thinks that a bouquet is large if it is made of two or more\ninitial bouquets, and there is a constraint: the total number of flowers in a\nlarge bouquet should be odd. Each of the initial bouquets can be a part of at\nmost one large bouquet. If an initial bouquet becomes a part of a large\nbouquet, all its flowers are included in the large bouquet. Determine the\nmaximum possible number of large bouquets Vasya can make. Input The first line\ncontains a single positive integer n (1 \u2264 n \u2264 10^5) \u2014 the number of initial\nbouquets. The second line contains a sequence of integers a1, a2, ..., an (1 \u2264\nai \u2264 10^6) \u2014 the number of flowers in each of the initial bouquets. Output\nPrint the maximum number of large bouquets Vasya can make. Examples Input 5 2\n3 4 2 7 Output 2 Input 6 2 2 6 8 6 12 Output 0 Input 3 11 4 10 Output 1 Note\nIn the first example Vasya can make 2 large bouquets. For example, the first\nbouquet can contain the first and the fifth initial bouquets (the total number\nof flowers is then equal to 9), and the second bouquet can consist of the\nsecond and the third initial bouquets (the total number of flowers is then\nequal to 7). The fourth initial bouquet is unused in this scheme. In the\nsecond example it is not possible to form a single bouquet with odd number of\nflowers. In the third example Vasya can make one large bouquet. For example,\nhe can make it using all three initial bouquets. The size of the large bouquet\nis then equal to 11 + 4 + 10 = 25.\n\n",
        "cf_contest_id": 926,
        "cf_index": "G",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 3 4 2 7\r\n",
                "2\r\n"
            ],
            [
                "6\r\n2 2 6 8 6 12\r\n",
                "0\r\n"
            ],
            [
                "3\r\n11 4 10\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n2\r\n",
                "0\r\n"
            ],
            [
                "1\r\n999999\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1000000\r\n",
                "0\r\n"
            ],
            [
                "4\r\n943543 151729 379602 589828\r\n",
                "2\r\n"
            ],
            [
                "2\r\n468463 62253\r\n",
                "0\r\n"
            ],
            [
                "3\r\n352987 849349 967007\r\n",
                "1\r\n"
            ],
            [
                "20\r\n274039 899325 798709 157662 963297 276599 529230 80095 252956 980560 358150 82383 29856 901568 123794 275349 512273 508369 120076 170206\r\n",
                "10\r\n"
            ],
            [
                "25\r\n742168 377547 485672 437223 96307 902863 759104 747933 512899 410317 588598 666688 823202 257684 520631 910066 168864 71499 899972 565350 764848 754913 929040 864132 289976\r\n",
                "10\r\n"
            ]
        ]
    }
]