[
    {
        "name": "Sasha and Interesting Fact from Graph Theory",
        "description": "Once, during a lesson, Sasha got bored and decided to talk with his friends.\nSuddenly, he saw Kefa. Since we can talk endlessly about Kefa, we won't even\nstart doing that. The conversation turned to graphs. Kefa promised Sasha to\ntell him about one interesting fact from graph theory if Sasha helps Kefa to\ncount the number of beautiful trees. In this task, a tree is a weighted\nconnected graph, consisting of \n    n\n vertices and \n    n-1\n edges, and\nweights of edges are integers from \n    1\n to \n    m\n. Kefa determines the\nbeauty of a tree as follows: he finds in the tree his two favorite vertices \u2014\nvertices with numbers \n    a\n and \n    b\n, and counts the distance between\nthem. The distance between two vertices \n    x\n and \n    y\n is the sum of\nweights of edges on the simple path from \n    x\n to \n    y\n. If the distance\nbetween two vertices \n    a\n and \n    b\n is equal to \n    m\n, then the tree is\nbeautiful. Sasha likes graph theory, and even more, Sasha likes interesting\nfacts, that's why he agreed to help Kefa. Luckily, Sasha is familiar with you\nthe best programmer in Byteland. Help Sasha to count the number of beautiful\ntrees for Kefa. Two trees are considered to be distinct if there is an edge\nthat occurs in one of them and doesn't occur in the other one. Edge's weight\nmatters. Kefa warned Sasha, that there can be too many beautiful trees, so it\nwill be enough to count the number modulo \n    10^9 + 7\n. Input The first line\ncontains four integers \n    n\n, \n    m\n, \n    a\n, \n    b\n (\n    2 \n    \u2264 n \n    \u2264\n    10^6\n, \n    1 \n    \u2264 m \n    \u2264 10^6\n, \n    1 \n    \u2264 a, b \n    \u2264 n\n, \n    a \n    \u2260\n    b\n) \u2014 the number of vertices in the tree, the maximum weight of an edge and\ntwo Kefa's favorite vertices. Output Print one integer \u2014 the number of\nbeautiful trees modulo \n    10^9+7\n. Examples Input 3 2 1 3 Output 5 Input 3 1\n1 2 Output 2 Input 5 15 1 5 Output 345444 Note There are \n    5\n beautiful\ntrees in the first example: In the second example the following trees are\nbeautiful:\n\n",
        "cf_contest_id": 1109,
        "cf_index": "D",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "combinatorics",
            "dp",
            "math",
            "trees"
        ],
        "time_limit_seconds": 2.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2 1 3\r\n",
                "5"
            ],
            [
                "3 1 1 2\r\n",
                "2"
            ],
            [
                "5 15 1 5\r\n",
                "345444"
            ]
        ],
        "private_cases": [
            [
                "17 223 10 8\r\n",
                "210685217"
            ],
            [
                "32 322 32 25\r\n",
                "121568596"
            ],
            [
                "887 4 119 699\r\n",
                "508081624"
            ],
            [
                "7 10000 4 1\r\n",
                "307812174"
            ],
            [
                "222224 1 222224 1\r\n",
                "724470813"
            ],
            [
                "422 1000000 119 347\r\n",
                "728967168"
            ],
            [
                "1000000 2 1000000 1\r\n",
                "263758990"
            ],
            [
                "1000000 3 1 1000000\r\n",
                "539934696"
            ],
            [
                "2 999947 2 1\r\n",
                "1"
            ],
            [
                "999858 996859 977406 565603\r\n",
                "202027833"
            ],
            [
                "995238 650 318574 384971\r\n",
                "363893435"
            ],
            [
                "995002 10711 668009 431573\r\n",
                "747347011"
            ],
            [
                "999811 995909 552335 962586\r\n",
                "208471501"
            ],
            [
                "999581 6603 576981 514005\r\n",
                "100710946"
            ],
            [
                "999885 995557 206421 701734\r\n",
                "983527829"
            ],
            [
                "998084 11781 60901 523187\r\n",
                "33022795"
            ],
            [
                "999828 991491 117039 307131\r\n",
                "196566491"
            ],
            [
                "996491 34788 589440 834694\r\n",
                "957884998"
            ],
            [
                "999870 979431 679998 944956\r\n",
                "686871059"
            ],
            [
                "998582 23138 498132 731321\r\n",
                "467499436"
            ],
            [
                "999928 984851 788094 219356\r\n",
                "613395830"
            ],
            [
                "997327 53680 160244 499458\r\n",
                "427091180"
            ],
            [
                "999952 988653 567764 610868\r\n",
                "688458563"
            ],
            [
                "998100 56812 328452 350974\r\n",
                "859014702"
            ],
            [
                "999997 1000000 248118 455941\r\n",
                "711220081"
            ],
            [
                "1000000 999999 179331 405072\r\n",
                "338544842"
            ],
            [
                "1000000 1000000 709877 145493\r\n",
                "941568237"
            ]
        ]
    }
]