[
    {
        "name": "Productive Meeting",
        "description": "An important meeting is to be held and there are exactly \n    n\n people\ninvited. At any moment, any two people can step back and talk in private. The\nsame two people can talk several (as many as they want) times per meeting.\nEach person has limited sociability. The sociability of the \n    i\n-th person\nis a non-negative integer \n    a_i\n. This means that after exactly \n    a_i\n\ntalks this person leaves the meeting (and does not talk to anyone else\nanymore). If \n    a_i = 0\n, the \n    i\n-th person leaves the meeting\nimmediately after it starts. A meeting is considered most productive if the\nmaximum possible number of talks took place during it. You are given an array\nof sociability \n    a\n, determine which people should talk to each other so\nthat the total number of talks is as large as possible. Input The first line\ncontains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test\ncases. The next \n    2t\n lines contain descriptions of the test cases. The\nfirst line of each test case description contains an integer \n    n\n (\n    2\n    \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014the number of people in the meeting. The\nsecond line consists of \n    n\n space-separated integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the sociability parameters\nof all people. It is guaranteed that the sum of \n    n\n over all test cases\ndoes not exceed \n    2 \n    \u00b7 10^5\n. It is also guaranteed that the sum of\nall \n    a_i\n (over all test cases and all \n    i\n) does not exceed \n    2\n    \n    \u00b7 10^5\n. Output Print \n    t\n answers to all test cases. On the first\nline of each answer print the number \n    k\n \u2014 the maximum number of talks\npossible in a meeting. On each of the next \n    k\n lines print two integers\n\n    i\n and \n    j\n (\n    1 \n    \u2264 i, j \n    \u2264 n\n and \n    i \n    \u2260 j\n) \u2014 the\nnumbers of people who will have another talk. If there are several possible\nanswers, you may print any of them. Example Input 8 2 2 3 3 1 2 3 4 1 2 3 4 3\n0 0 2 2 6 2 3 0 0 2 5 8 2 0 1 1 5 0 1 0 0 6 Output 2 1 2 1 2 3 1 3 2 3 2 3 5 1\n3 2 4 2 4 3 4 3 4 0 2 1 2 1 2 0 4 1 2 1 5 1 4 1 2 1 5 2\n\n",
        "cf_contest_id": 1579,
        "cf_index": "D",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graphs",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8\r\n2\r\n2 3\r\n3\r\n1 2 3\r\n4\r\n1 2 3 4\r\n3\r\n0 0 2\r\n2\r\n6 2\r\n3\r\n0 0 2\r\n5\r\n8 2 0 1 1\r\n5\r\n0 1 0 0 6\r\n",
                "2\r\n2 1\r\n2 1\r\n3\r\n3 2\r\n3 1\r\n2 3\r\n5\r\n4 3\r\n4 2\r\n3 4\r\n1 2\r\n3 4\r\n0\r\n2\r\n1 2\r\n1 2\r\n0\r\n4\r\n1 2\r\n1 2\r\n1 4\r\n1 5\r\n1\r\n5 2\r\n"
            ]
        ],
        "private_cases": []
    }
]