[
    {
        "name": "Sagheer and Apple Tree",
        "description": "Sagheer is playing a game with his best friend Soliman. He brought a tree with\nn nodes numbered from 1 to n and rooted at node 1. The i-th node has ai\napples. This tree has a special property: the lengths of all paths from the\nroot to any leaf have the same parity (i.e. all paths have even length or all\npaths have odd length). Sagheer and Soliman will take turns to play. Soliman\nwill make the first move. The player who can't make a move loses. In each\nmove, the current player will pick a single node, take a non-empty subset of\napples from it and do one of the following two things: eat the apples, if the\nnode is a leaf. move the apples to one of the children, if the node is non-\nleaf. Before Soliman comes to start playing, Sagheer will make exactly one\nchange to the tree. He will pick two different nodes u and v and swap the\napples of u with the apples of v. Can you help Sagheer count the number of\nways to make the swap (i.e. to choose u and v) after which he will win the\ngame if both players play optimally? (u, v) and (v, u) are considered to be\nthe same pair. Input The first line will contain one integer n (2 \u2264 n \u2264 10^5)\n\u2014 the number of nodes in the apple tree. The second line will contain n\nintegers a1, a2, ..., an (1 \u2264 ai \u2264 10^7) \u2014 the number of apples on each node\nof the tree. The third line will contain n - 1 integers p2, p3, ..., pn (1 \u2264\npi \u2264 n) \u2014 the parent of each node of the tree. Node i has parent pi (for 2 \u2264 i\n\u2264 n). Node 1 is the root of the tree. It is guaranteed that the input\ndescribes a valid tree, and the lengths of all paths from the root to any leaf\nwill have the same parity. Output On a single line, print the number of\ndifferent pairs of nodes (u, v), u \u2260 v such that if they start playing after\nswapping the apples of both nodes, Sagheer will win the game. (u, v) and (v,\nu) are considered to be the same pair. Examples Input 3 2 2 3 1 1 Output 1\nInput 3 1 2 3 1 1 Output 0 Input 8 7 2 2 5 4 3 1 1 1 1 1 4 4 5 6 Output 4 Note\nIn the first sample, Sagheer can only win if he swapped node 1 with node 3. In\nthis case, both leaves will have 2 apples. If Soliman makes a move in a leaf\nnode, Sagheer can make the same move in the other leaf. If Soliman moved some\napples from a root to a leaf, Sagheer will eat those moved apples. Eventually,\nSoliman will not find a move. In the second sample, There is no swap that will\nmake Sagheer win the game. Note that Sagheer must make the swap even if he can\nwin with the initial tree.\n\n",
        "cf_contest_id": 812,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2 2 3\r\n1 1\r\n",
                "1"
            ],
            [
                "3\r\n1 2 3\r\n1 1\r\n",
                "0"
            ],
            [
                "8\r\n7 2 2 5 4 3 1 1\r\n1 1 1 4 4 5 6\r\n",
                "4"
            ]
        ],
        "private_cases": [
            [
                "6\r\n7 7 7 7 7 7\r\n1 1 1 1 1\r\n",
                "0"
            ],
            [
                "6\r\n3 1 1 1 2 2\r\n1 1 1 1 1\r\n",
                "2"
            ],
            [
                "6\r\n1 2 3 4 5 6\r\n1 2 3 4 5\r\n",
                "6"
            ],
            [
                "7\r\n15 3 5 1 2 4 8\r\n1 1 2 2 3 3\r\n",
                "11"
            ],
            [
                "7\r\n15 3 5 1 2 4 9\r\n1 1 2 2 3 3\r\n",
                "2"
            ],
            [
                "7\r\n15 16 32 1 2 4 9\r\n1 1 2 2 3 3\r\n",
                "0"
            ],
            [
                "6\r\n49 70 74 18 64 63\r\n1 2 2 1 5\r\n",
                "0"
            ],
            [
                "9\r\n15 17 68 100 31 32 79 48 100\r\n1 2 3 4 3 6 6 2\r\n",
                "0"
            ],
            [
                "5\r\n87 100 12 93 86\r\n1 1 3 4\r\n",
                "0"
            ],
            [
                "3\r\n7751 9661 9437\r\n1 1\r\n",
                "0"
            ],
            [
                "8\r\n5201 769 1896 5497 1825 9718 7784 5952\r\n1 2 3 4 2 1 7\r\n",
                "0"
            ],
            [
                "2\r\n1848 2048\r\n1\r\n",
                "0"
            ],
            [
                "7\r\n588300 370437 481646 898447 78363 612652 998152\r\n1 2 3 2 5 1\r\n",
                "0"
            ],
            [
                "5\r\n753534 24400 461709 881954 452720\r\n1 2 3 1\r\n",
                "0"
            ],
            [
                "10\r\n191029 704946 159138 387479 61727 310778 534080 300097 442549 542174\r\n1 2 3 4 4 1 7 1 9\r\n",
                "0"
            ],
            [
                "4\r\n9849878 7525175 2569229 7972892\r\n1 2 2\r\n",
                "0"
            ],
            [
                "9\r\n734917 6649640 8476531 7374030 3139097 8258293 114238 8589112 7847119\r\n1 2 3 3 1 1 7 8\r\n",
                "0"
            ],
            [
                "10\r\n20 55 95 66 25 43 94 65 24 93\r\n1 2 3 2 5 5 1 8 9\r\n",
                "0"
            ],
            [
                "10\r\n9039 4789 3817 8625 516 4989 3436 1312 2989 3923\r\n1 2 3 3 1 6 7 6 9\r\n",
                "0"
            ],
            [
                "22\r\n324 4430 3495 8972 1547 9183 849 4663 2959 4715 8984 8016 2744 4451 8468 4549 9013 4124 9087 4823 4839 4635\r\n1 2 3 2 5 2 7 1 9 10 9 12 13 14 14 12 1 18 19 20 21\r\n",
                "0"
            ],
            [
                "21\r\n3735 1580 7599 9670 1414 8033 413 2852 5366 9196 4695 7629 7873 1731 9635 178 5637 3956 9520 8679 5006\r\n1 2 3 3 3 6 7 8 9 3 2 12 12 2 15 1 17 18 18 1\r\n",
                "0"
            ],
            [
                "23\r\n795895 158259 79726 699691 945099 38534 445699 515393 738257 857153 240818 675301 838661 323621 217120 707356 397865 725499 137739 272401 434551 135304 376364\r\n1 2 3 4 5 5 4 8 8 3 3 3 3 14 15 1 1 18 19 18 21 21\r\n",
                "0"
            ],
            [
                "22\r\n400941 84726 528265 945059 220341 935243 984080 215282 279808 757218 684733 72861 632695 371932 965754 849619 155281 780223 216197 591694 713921 293137\r\n1 2 3 4 5 6 3 8 8 1 11 12 13 13 11 16 17 11 1 20 20\r\n",
                "0"
            ],
            [
                "20\r\n889385 521616 271301 16205 522627 403737 958822 160624 675036 93618 352440 574828 756891 28294 239816 662464 835985 931516 576399 904671\r\n1 2 3 4 5 4 7 7 3 10 11 12 13 13 3 16 17 2 19\r\n",
                "0"
            ],
            [
                "19\r\n8746191 7960210 2540730 4331468 8492963 4996162 6655813 3805069 8827753 4274284 8410722 5213133 9813311 4714221 5980788 8244094 1518741 290394 4067514\r\n1 2 3 4 5 5 4 8 4 10 10 3 13 14 2 16 16 1\r\n",
                "0"
            ],
            [
                "21\r\n6194737 6429360 6047962 1014039 9196042 2483033 9232471 5444322 4437778 6614229 4791649 7417126 7679607 790939 3062370 174847 8404336 832859 2083127 9041108 3074902\r\n1 2 3 4 4 6 7 2 9 10 9 12 12 1 15 1 17 1 19 19\r\n",
                "0"
            ]
        ]
    }
]