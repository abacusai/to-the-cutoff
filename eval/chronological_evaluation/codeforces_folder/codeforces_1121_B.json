[
    {
        "name": "Mike and Children",
        "description": "Mike decided to teach programming to children in an elementary school. He\nknows that it is not an easy task to interest children in that age to code.\nThat is why he decided to give each child two sweets. Mike has \n    n\n sweets\nwith sizes \n    a_1, a_2, \n    \u2026, a_n\n. All his sweets have different sizes.\nThat is, there is no such pair \n    (i, j)\n (\n    1 \n    \u2264 i, j \n    \u2264 n\n)\nsuch that \n    i \n     j\n and \n    a_i = a_j\n. Since Mike has taught for many\nyears, he knows that if he gives two sweets with sizes \n    a_i\n and \n    a_j\n\nto one child and \n    a_k\n and \n    a_p\n to another, where \n    (a_i + a_j)\n    \n    \u2260 (a_k + a_p)\n, then a child who has a smaller sum of sizes will be\nupset. That is, if there are two children who have different sums of sweets,\nthen one of them will be upset. Apparently, Mike does not want somebody to be\nupset. Mike wants to invite children giving each of them two sweets.\nObviously, he can't give one sweet to two or more children. His goal is to\ninvite as many children as he can. Since Mike is busy preparing to his first\nlecture in the elementary school, he is asking you to find the maximum number\nof children he can invite giving each of them two sweets in such way that\nnobody will be upset. Input The first line contains one integer \n    n\n (\n    2\n    \n    \u2264 n \n    \u2264 1\n     000\n) \u2014 the number of sweets Mike has. The second line\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i\n    \n    \u2264 10^5\n) \u2014 the sizes of the sweets. It is guaranteed that all integers\nare distinct. Output Print one integer \u2014 the maximum number of children Mike\ncan invite giving each of them two sweets in such way that nobody will be\nupset. Examples Input 8 1 8 3 11 4 9 2 7 Output 3 Input 7 3 1 7 11 9 2 12\nOutput 2 Note In the first example, Mike can give \n    9+2=11\n to one child,\n\n    8+3=11\n to another one, and \n    7+4=11\n to the third child. Therefore,\nMike can invite three children. Note that it is not the only solution. In the\nsecond example, Mike can give \n    3+9=12\n to one child and \n    1+11\n to\nanother one. Therefore, Mike can invite two children. Note that it is not the\nonly solution.\n\n",
        "cf_contest_id": 1121,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8\r\n1 8 3 11 4 9 2 7\r\n",
                "3\r\n"
            ],
            [
                "7\r\n3 1 7 11 9 2 12\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n100000 99999\r\n",
                "1\r\n"
            ],
            [
                "20\r\n43 48 38 34 23 18 8 22 12 7 47 1 13 20 3 15 49 6 10 26\r\n",
                "5\r\n"
            ],
            [
                "6\r\n99997 99995 100000 99992 99994 99999\r\n",
                "2\r\n"
            ],
            [
                "5\r\n99905 99931 99902 99909 99984\r\n",
                "1\r\n"
            ],
            [
                "2\r\n2 1\r\n",
                "1\r\n"
            ]
        ]
    }
]