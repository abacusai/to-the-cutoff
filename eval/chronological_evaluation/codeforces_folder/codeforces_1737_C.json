[
    {
        "name": "Ela and Crickets",
        "description": "Ela likes Chess a lot. During breaks, she usually challenges her co-worker in\nDTL to some chess games. She's not an expert at classic chess, but she's very\ninterested in Chess variants, where she has to adapt to new rules and test her\ntactical mindset to win the game. The problem, which involves a non-standard\nchess pieces type that is described below, reads: given \n    3\n white crickets\non a \n    n \n    \u00b7 n\n board, arranged in an \"L\" shape next to each other,\nthere are no other pieces on the board. Ela wants to know with a finite number\nof moves, can she put any white cricket on the square on row \n    x\n, column\n\n    y\n? An \"L\"-shape piece arrangement can only be one of the below: For\nsimplicity, we describe the rules for crickets on the board where only three\nwhite crickets are. It can move horizontally, vertically, or diagonally, but\nonly to a square in some direction that is immediately after another cricket\npiece (so that it must jump over it). If the square immediately behind the\npiece is unoccupied, the cricket will occupy the square. Otherwise (when the\nsquare is occupied by another cricket, or does not exist), the cricket isn't\nallowed to make such a move. See an example of valid crickets' moves on the\npictures in the Note section. Input Each test contains multiple test cases.\nThe first line contains the number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n). The description of the test cases follows. The first line of each\ntest case contains \n    n\n (\n    4 \n    \u2264 n \n    \u2264 10^5\n) \u2014 denotes the size of\nthe chessboard. The second line of each test case contains 6 numbers:\n\n    r_1\n, \n    c_1\n, \n    r_2\n, \n    c_2\n, \n    r_3\n, \n    c_3\n (\n    1 \n    \u2264\n    r_1, c_1, r_2, c_2, r_3, c_3 \n    \u2264 n\n) \u2014 coordinates of the crickets. The\ninput ensures that the three crickets are arranged in an \"L\" shape that the\nlegend stated. The third line of each test case contains 2 numbers: \n    x\n,\n\n    y\n (\n    1 \n    \u2264 x, y \n    \u2264 n\n) \u2014 coordinates of the target square.\nOutput For each test case, print \"YES\" or \"NO\" to denotes whether Ela can put\na cricket on the target square. Example Input 6 8 7 2 8 2 7 1 5 1 8 2 2 1 2 2\n1 5 5 8 2 2 1 2 2 1 6 6 8 1 1 1 2 2 1 5 5 8 2 2 1 2 2 1 8 8 8 8 8 8 7 7 8 4 8\nOutput YES NO YES NO YES YES Note Here's the solution for the first test case.\nThe red square denotes where the crickets need to reach. Note that in chess\nhorizontals are counted from bottom to top, as well as on this picture.\n\n",
        "cf_contest_id": 1737,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "games",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n8\r\n7 2 8 2 7 1\r\n5 1\r\n8\r\n2 2 1 2 2 1\r\n5 5\r\n8\r\n2 2 1 2 2 1\r\n6 6\r\n8\r\n1 1 1 2 2 1\r\n5 5\r\n8\r\n2 2 1 2 2 1\r\n8 8\r\n8\r\n8 8 8 7 7 8\r\n4 8\r\n",
                "Yes\r\nNo\r\nYes\r\nNo\r\nYes\r\nYes\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n100000\r\n100000 100000 99999 100000 100000 99999\r\n69 100000\r\n100000\r\n2 100000 1 99999 1 100000\r\n100000 9\r\n100000\r\n2 3 3 2 3 3\r\n6 7\r\n",
                "Yes\r\nNo\r\nYes\r\n"
            ],
            [
                "1\r\n100000\r\n1 1 2 1 1 2\r\n26298 33691\r\n",
                "No\r\n"
            ],
            [
                "10\r\n4\r\n2 2 3 3 2 3\r\n2 3\r\n7\r\n1 1 1 2 2 1\r\n6 7\r\n9\r\n9 1 8 1 9 2\r\n5 9\r\n6\r\n2 4 3 4 2 3\r\n6 5\r\n7\r\n2 2 2 1 3 1\r\n3 5\r\n7\r\n6 1 7 2 7 1\r\n2 2\r\n7\r\n2 1 2 2 1 2\r\n7 6\r\n7\r\n3 6 3 7 4 7\r\n3 7\r\n10\r\n2 1 1 2 1 1\r\n6 3\r\n4\r\n2 3 1 3 2 4\r\n3 4\r\n",
                "Yes\r\nNo\r\nNo\r\nYes\r\nYes\r\nNo\r\nYes\r\nYes\r\nNo\r\nNo\r\n"
            ],
            [
                "1\r\n4\r\n4 1 4 2 3 1\r\n1 3\r\n",
                "No\r\n"
            ]
        ]
    }
]