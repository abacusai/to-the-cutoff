[
    {
        "name": "Mastermind",
        "description": "In the game of Mastermind, there are two players \u2014 Alice and Bob. Alice has a\nsecret code, which Bob tries to guess. Here, a code is defined as a sequence\nof \n    n\n colors. There are exactly \n    n+1\n colors in the entire universe,\nnumbered from \n    1\n to \n    n+1\n inclusive. When Bob guesses a code, Alice\ntells him some information about how good of a guess it is, in the form of two\nintegers \n    x\n and \n    y\n. The first integer \n    x\n is the number of\nindices where Bob's guess correctly matches Alice's code. The second integer\n\n    y\n is the size of the intersection of the two codes as multisets. That\nis, if Bob were to change the order of the colors in his guess, \n    y\n is the\nmaximum number of indices he could get correct. For example, suppose\n\n    n=5\n, Alice's code is \n    [3,1,6,1,2]\n, and Bob's guess is\n\n    [3,1,1,2,5]\n. At indices \n    1\n and \n    2\n colors are equal, while in\nthe other indices they are not equal. So \n    x=2\n. And the two codes have the\nfour colors \n    1,1,2,3\n in common, so \n    y=4\n. Solid lines denote a\nmatched color for the same index. Dashed lines denote a matched color at a\ndifferent index. \n    x\n is the number of solid lines, and \n    y\n is the\ntotal number of lines. You are given Bob's guess and two values \n    x\n and\n\n    y\n. Can you find one possibility of Alice's code so that the values of\n\n    x\n and \n    y\n are correct? Input The first line contains a single\ninteger \n    t\n (\n    1\n    \u2264 t\n    \u2264 1000\n) \u2014 the number of test cases. Next\n\n    2t\n lines contain descriptions of test cases. The first line of each test\ncase contains three integers \n    n,x,y\n (\n    1\n    \u2264 n\n    \u2264 10^5, 0\n    \u2264 x\n    \u2264\n    y\n    \u2264 n\n) \u2014 the length of the codes, and two values Alice responds with.\nThe second line of each test case contains \n    n\n integers\n\n    b_1,\n    \u2026,b_n\n (\n    1\n    \u2264 b_i\n    \u2264 n+1\n) \u2014 Bob's guess, where\n\n    b_i\n is the \n    i\n-th color of the guess. It is guaranteed that the sum\nof \n    n\n across all test cases does not exceed \n    10^5\n. Output For each\ntest case, on the first line, output \"YES\" if there is a solution, or \"NO\" if\nthere is no possible secret code consistent with the described situation. You\ncan print each character in any case (upper or lower). If the answer is \"YES\",\non the next line output \n    n\n integers \n    a_1,\n    \u2026,a_n\n (\n    1\n    \u2264\n    a_i\n    \u2264 n+1\n) \u2014 Alice's secret code, where \n    a_i\n is the \n    i\n-th\ncolor of the code. If there are multiple solutions, output any. Example Input\n7 5 2 4 3 1 1 2 5 5 3 4 1 1 2 1 2 4 0 4 5 5 3 3 4 1 4 2 3 2 3 6 1 2 3 2 1 1 1\n1 6 2 4 3 3 2 1 1 1 6 2 6 1 1 3 2 1 1 Output YES 3 1 6 1 2 YES 3 1 1 1 2 YES 3\n3 5 5 NO YES 4 4 4 4 3 1 YES 3 1 3 1 7 7 YES 2 3 1 1 1 1 Note The first test\ncase is described in the statement. In the second test case, \n    x=3\n because\nthe colors are equal at indices \n    2,4,5\n. And \n    y=4\n because they share\nthe colors \n    1,1,1,2\n. In the third test case, \n    x=0\n because there is\nno index where the colors are the same. But \n    y=4\n because they share the\ncolors \n    3,3,5,5\n. In the fourth test case, it can be proved that no\nsolution exists.\n\n",
        "cf_contest_id": 1381,
        "cf_index": "C",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graph matchings",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n5 2 4\r\n3 1 1 2 5\r\n5 3 4\r\n1 1 2 1 2\r\n4 0 4\r\n5 5 3 3\r\n4 1 4\r\n2 3 2 3\r\n6 1 2\r\n3 2 1 1 1 1\r\n6 2 4\r\n3 3 2 1 1 1\r\n6 2 6\r\n1 1 3 2 1 1\r\n",
                "YES\r\n6 2 1 3 5 \r\nYES\r\n2 1 6 1 2 \r\nYES\r\n3 3 5 5 \r\nNO\r\nYES\r\n7 7 7 7 2 1 \r\nYES\r\n7 3 7 3 2 1 \r\nYES\r\n3 2 1 1 1 1 \r\n"
            ]
        ],
        "private_cases": [
            [
                "6\r\n1 0 0\r\n1\r\n1 0 0\r\n2\r\n1 0 1\r\n1\r\n1 0 1\r\n2\r\n1 1 1\r\n1\r\n1 1 1\r\n2\r\n",
                "YES\r\n2 \r\nYES\r\n1 \r\nNO\r\nNO\r\nYES\r\n1 \r\nYES\r\n2 \r\n"
            ]
        ]
    }
]