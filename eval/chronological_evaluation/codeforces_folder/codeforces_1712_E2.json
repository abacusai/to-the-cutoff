[
    {
        "name": "LCM Sum (hard version)",
        "description": "We are sum for we are many Some Number This version of the problem differs\nfrom the previous one only in the constraint on \n    t\n. You can make hacks\nonly if both versions of the problem are solved. You are given two positive\nintegers \n    l\n and \n    r\n. Count the number of distinct triplets of\nintegers \n    (i, j, k)\n such that \n    l \n    \u2264 i < j < k \n    \u2264 r\n and\n\n    lcm(i,j,k) \n    \u2265 i + j + k\n. Here\n\n    lcm(i, j, k)\n denotes the least common multiple (LCM) of\nintegers \n    i\n, \n    j\n, and \n    k\n. Input Each test contains multiple test\ncases. The first line contains the number of test cases \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^5\n). Description of the test cases follows. The only line\nfor each test case contains two integers \n    l\n and \n    r\n (\n    1 \n    \u2264 l\n    \n    \u2264 r \n    \u2264 2 \n    \u00b7 10^5\n, \n    l + 2 \n    \u2264 r\n). Output For each test\ncase print one integer \u2014 the number of suitable triplets. Example Input 5 1 4\n3 5 8 86 68 86 6 86868 Output 3 1 78975 969 109229059713337 Note In the first\ntest case, there are \n    3\n suitable triplets: \n    (1,2,3)\n, \n    (1,3,4)\n,\n\n    (2,3,4)\n. In the second test case, there is \n    1\n suitable triplet:\n\n    (3,4,5)\n.\n\n",
        "cf_contest_id": 1712,
        "cf_index": "E2",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "math",
            "number theory",
            "two pointers"
        ],
        "time_limit_seconds": 3.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n1 4\r\n3 5\r\n8 86\r\n68 86\r\n6 86868\r\n",
                "3\r\n1\r\n78975\r\n969\r\n109229059713337\r\n"
            ]
        ],
        "private_cases": []
    }
]