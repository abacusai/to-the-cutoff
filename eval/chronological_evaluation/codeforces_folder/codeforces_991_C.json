[
    {
        "name": "Candies",
        "description": "After passing a test, Vasya got himself a box of \n    n\n candies. He decided\nto eat an equal amount of candies each morning until there are no more\ncandies. However, Petya also noticed the box and decided to get some candies\nfor himself. This means the process of eating candies is the following: in the\nbeginning Vasya chooses a single integer \n    k\n, same for all days. After\nthat, in the morning he eats \n    k\n candies from the box (if there are less\nthan \n    k\n candies in the box, he eats them all), then in the evening Petya\neats \n    10\n    %\n of the candies remaining in the box. If there are still\ncandies left in the box, the process repeats \u2014 next day Vasya eats \n    k\n\ncandies again, and Petya \u2014 \n    10\n    %\n of the candies left in a box, and so\non. If the amount of candies in the box is not divisible by \n    10\n, Petya\nrounds the amount he takes from the box down. For example, if there were\n\n    97\n candies in the box, Petya would eat only \n    9\n of them. In\nparticular, if there are less than \n    10\n candies in a box, Petya won't eat\nany at all. Your task is to find out the minimal amount of \n    k\n that can be\nchosen by Vasya so that he would eat at least half of the \n    n\n candies he\ninitially got. Note that the number \n    k\n must be integer. Input The first\nline contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^18\n) \u2014 the\ninitial amount of candies in the box. Output Output a single integer \u2014 the\nminimal amount of \n    k\n that would allow Vasya to eat at least half of\ncandies he got. Example Input 68 Output 3 Note In the sample, the amount of\ncandies, with \n    k=3\n, would change in the following way (Vasya eats first):\n\n    68 \n    \u2192 65 \n    \u2192 59 \n    \u2192 56 \n    \u2192 51 \n    \u2192 48 \n    \u2192 44 \n    \u2192 41 \n    \n    \n    \n    \u2192 37 \n    \u2192 34 \n    \u2192 31 \n    \u2192 28 \n    \u2192 26 \n    \u2192 23 \n    \u2192 21 \n    \u2192 18 \n    \u2192\n    17 \n    \u2192 14 \n    \n    \n     \n    \u2192 13 \n    \u2192 10 \n    \u2192 9 \n    \u2192 6 \n    \u2192 6 \n    \u2192 3 \n    \u2192 3\n    \n    \u2192 0\n. In total, Vasya would eat \n    39\n candies, while Petya \u2014\n\n    29\n.\n\n",
        "cf_contest_id": 991,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "68\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n",
                "1\r\n"
            ],
            [
                "2\r\n",
                "1\r\n"
            ],
            [
                "42\r\n",
                "1\r\n"
            ],
            [
                "43\r\n",
                "2\r\n"
            ],
            [
                "756\r\n",
                "29\r\n"
            ],
            [
                "999999972\r\n",
                "39259423\r\n"
            ],
            [
                "999999973\r\n",
                "39259424\r\n"
            ],
            [
                "1000000000000000000\r\n",
                "39259424579862572\r\n"
            ],
            [
                "6\r\n",
                "1\r\n"
            ],
            [
                "3\r\n",
                "1\r\n"
            ],
            [
                "4\r\n",
                "1\r\n"
            ],
            [
                "5\r\n",
                "1\r\n"
            ],
            [
                "66\r\n",
                "2\r\n"
            ],
            [
                "67\r\n",
                "3\r\n"
            ],
            [
                "1000\r\n",
                "39\r\n"
            ],
            [
                "10000\r\n",
                "392\r\n"
            ],
            [
                "100500\r\n",
                "3945\r\n"
            ],
            [
                "1000000\r\n",
                "39259\r\n"
            ],
            [
                "10000000\r\n",
                "392594\r\n"
            ],
            [
                "100000000\r\n",
                "3925942\r\n"
            ],
            [
                "123456789\r\n",
                "4846842\r\n"
            ],
            [
                "543212345\r\n",
                "21326204\r\n"
            ],
            [
                "505050505\r\n",
                "19827992\r\n"
            ],
            [
                "777777777\r\n",
                "30535108\r\n"
            ],
            [
                "888888871\r\n",
                "34897266\r\n"
            ],
            [
                "1000000000\r\n",
                "39259424\r\n"
            ],
            [
                "999999999999999973\r\n",
                "39259424579862572\r\n"
            ],
            [
                "999999999999999998\r\n",
                "39259424579862572\r\n"
            ],
            [
                "999999999999999999\r\n",
                "39259424579862573\r\n"
            ],
            [
                "100000000000000000\r\n",
                "3925942457986257\r\n"
            ],
            [
                "540776028375043656\r\n",
                "21230555700587649\r\n"
            ],
            [
                "210364830044445976\r\n",
                "8258802179385535\r\n"
            ],
            [
                "297107279239074256\r\n",
                "11664260821414605\r\n"
            ],
            [
                "773524766411950187\r\n",
                "30368137227605772\r\n"
            ],
            [
                "228684941775227220\r\n",
                "8978039224174797\r\n"
            ],
            [
                "878782039723446310\r\n",
                "34500477210660436\r\n"
            ],
            [
                "615090701338187389\r\n",
                "24148106998961343\r\n"
            ],
            [
                "325990422297859188\r\n",
                "12798196397960353\r\n"
            ],
            [
                "255163492355051023\r\n",
                "10017571883647466\r\n"
            ],
            [
                "276392003308849171\r\n",
                "10850991008380891\r\n"
            ],
            [
                "601\r\n",
                "23\r\n"
            ],
            [
                "983\r\n",
                "38\r\n"
            ],
            [
                "729\r\n",
                "29\r\n"
            ],
            [
                "70\r\n",
                "3\r\n"
            ],
            [
                "703\r\n",
                "28\r\n"
            ],
            [
                "257\r\n",
                "10\r\n"
            ],
            [
                "526\r\n",
                "20\r\n"
            ],
            [
                "466\r\n",
                "18\r\n"
            ],
            [
                "738\r\n",
                "29\r\n"
            ],
            [
                "116\r\n",
                "5\r\n"
            ],
            [
                "888888888888888887\r\n",
                "34897266293211176\r\n"
            ],
            [
                "888888888888888888\r\n",
                "34897266293211176\r\n"
            ],
            [
                "888888888888888889\r\n",
                "34897266293211176\r\n"
            ],
            [
                "999999999999999969\r\n",
                "39259424579862571\r\n"
            ],
            [
                "999999999999999970\r\n",
                "39259424579862571\r\n"
            ],
            [
                "999999999999999971\r\n",
                "39259424579862572\r\n"
            ],
            [
                "999999999999999943\r\n",
                "39259424579862571\r\n"
            ],
            [
                "999999999999999944\r\n",
                "39259424579862570\r\n"
            ],
            [
                "999999999999999945\r\n",
                "39259424579862571\r\n"
            ],
            [
                "999999999999999917\r\n",
                "39259424579862570\r\n"
            ],
            [
                "999999999999999918\r\n",
                "39259424579862569\r\n"
            ],
            [
                "999999999999999919\r\n",
                "39259424579862570\r\n"
            ],
            [
                "99999999999999957\r\n",
                "3925942457986255\r\n"
            ],
            [
                "99999999999999958\r\n",
                "3925942457986255\r\n"
            ],
            [
                "99999999999999959\r\n",
                "3925942457986256\r\n"
            ],
            [
                "888888888888888853\r\n",
                "34897266293211174\r\n"
            ],
            [
                "888888888888888854\r\n",
                "34897266293211174\r\n"
            ],
            [
                "888888888888888855\r\n",
                "34897266293211175\r\n"
            ]
        ]
    }
]