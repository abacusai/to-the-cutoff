[
    {
        "name": "Rock and Lever",
        "description": "\"You must lift the dam. With a lever. I will give it to you.You must block the\ncanal. With a rock. I will not give the rock to you.\" Danik urgently needs\nrock and lever! Obviously, the easiest way to get these things is to ask\nHermit Lizard for them. Hermit Lizard agreed to give Danik the lever. But to\nget a stone, Danik needs to solve the following task. You are given a positive\ninteger \n    n\n, and an array \n    a\n of positive integers. The task is to\ncalculate the number of such pairs \n    (i,j)\n that \n    i<j\n and \n    a_i\n\n\n    &\n \n    a_j \n    \u2265 a_i \n    \u2295 a_j\n, where \n    &\n denotes the\nbitwise AND operation, and \n    \u2295\n denotes the bitwise XOR operation.\nDanik has solved this task. But can you solve it? Input Each test contains\nmultiple test cases. The first line contains one positive integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 10\n) denoting the number of test cases. Description of\nthe test cases follows. The first line of each test case contains one positive\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 length of the array. The second\nline contains \n    n\n positive integers \n    a_i\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^9\n) \u2014 elements of the array. It is guaranteed that the sum of \n    n\n\nover all test cases does not exceed \n    10^5\n. Output For every test case\nprint one non-negative integer \u2014 the answer to the problem. Example Input 5 5\n1 4 3 7 10 3 1 1 1 4 6 2 5 3 2 2 4 1 1 Output 1 3 2 0 0 Note In the first test\ncase there is only one pair: \n    (4,7)\n: for it \n    4\n \n    &\n \n    7 =\n    4\n, and \n    4 \n    \u2295 7 = 3\n. In the second test case all pairs are good.\nIn the third test case there are two pairs: \n    (6,5)\n and \n    (2,3)\n. In\nthe fourth test case there are no good pairs.\n\n",
        "cf_contest_id": 1420,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n5\r\n1 4 3 7 10\r\n3\r\n1 1 1\r\n4\r\n6 2 5 3\r\n2\r\n2 4\r\n1\r\n1\r\n",
                "1\r\n3\r\n2\r\n0\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n1000000000\r\n",
                "0\r\n"
            ]
        ]
    }
]