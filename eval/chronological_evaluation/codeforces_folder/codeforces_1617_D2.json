[
    {
        "name": "Too Many Impostors (hard version)",
        "description": "This is an interactive problem. The only difference between the easy and hard\nversion is the limit on number of questions. There are \n    n\n players\nlabelled from \n    1\n to \n    n\n. It is guaranteed that \n    n\n is a multiple\nof \n    3\n. Among them, there are \n    k\n impostors and \n    n-k\n crewmates.\nThe number of impostors, \n    k\n, is not given to you. It is guaranteed that\n\n    n/3 < k < \n    2n/3\n. In each question, you can choose\nthree distinct integers \n    a\n, \n    b\n, \n    c\n (\n    1 \n    \u2264 a, b, c \n    \u2264\n    n\n) and ask: \"Among the players labelled \n    a\n, \n    b\n and \n    c\n, are\nthere more impostors or more crewmates?\" You will be given the integer \n    0\n\nif there are more impostors than crewmates, and \n    1\n otherwise. Find the\nnumber of impostors \n    k\n and the indices of players that are impostors\nafter asking at most \n    n+6\n questions. The jury is adaptive, which means\nthe indices of impostors may not be fixed beforehand and can depend on your\nquestions. It is guaranteed that there is at least one set of impostors which\nfulfills the constraints and the answers to your questions at any time. Input\nEach test contains multiple test cases. The first line contains the number of\ntest cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n). Description of the test cases\nfollows. The first and only line of each test case contains a single integer\n\n    n\n (\n    6 \n    \u2264 n < 10^4\n, \n    n\n is a multiple of \n    3\n) \u2014 the\nnumber of players. It is guaranteed that the sum of \n    n\n over all test\ncases does not exceed \n    2 \n    \u00b7 10^4\n. Interaction For each test case,\nthe interaction starts with reading \n    n\n. Then you are allowed to make at\nmost \n    n+6\n questions in the following way: \"? a b c\" (\n    1 \n    \u2264 a, b, c\n    \n    \u2264 n\n, \n    a\n, \n    b\n and \n    c\n are pairwise distinct). After each\none, you should read an integer \n    r\n, which is equal to \n    0\n if there\nare more impostors than crewmates among players labelled \n    a\n, \n    b\n and\n\n    c\n, and equal to \n    1\n otherwise. Answer \n    -1\n instead of \n    0\n or\n\n    1\n means that you made an invalid query. Exit immediately after receiving\n\n    -1\n and you will see Wrong answer verdict. Otherwise you can get an\narbitrary verdict because your solution will continue to read from a closed\nstream. When you have found the indices of all impostors, print a single line\n\"! \" (without quotes), followed by the number of impostors \n    k\n, followed\nby \n    k\n integers representing the indices of the impostors. Please note\nthat you must print all this information on the same line. After printing the\nanswer, your program must then continue to solve the remaining test cases, or\nexit if all test cases have been solved. After printing the queries and\nanswers do not forget to output end of line and flush the output buffer.\nOtherwise, you will get the Idleness limit exceeded verdict. To do flush use:\nfflush(stdout) or cout.flush() in C++; System.out.flush() in Java;\nflush(output) in Pascal; stdout.flush() in Python; Read documentation for\nother languages. Hacks You cannot make hacks in this problem. Example Input 2\n6 0 1 9 1 Output ? 1 2 3 ? 3 4 5 ! 3 4 1 2 ? 7 1 9 ! 4 2 3 6 8 Note\nExplanation for example interaction (note that this example only exists to\ndemonstrate the interaction procedure and does not provide any hint for the\nsolution): For the first test case: Question \"? 1 2 3\" returns \n    0\n, so\nthere are more impostors than crewmates among players \n    1\n, \n    2\n and\n\n    3\n. Question \"? 3 4 5\" returns \n    1\n, so there are more crewmates than\nimpostors among players \n    3\n, \n    4\n and \n    5\n. Outputting \"! 3 4 1 2\"\nmeans that one has found all the impostors, by some miracle. There are \n    k =\n    3\n impostors. The players who are impostors are players \n    4\n, \n    1\n and\n\n    2\n. For the second test case: Question \"? 7 1 9\" returns \n    1\n, so\nthere are more crewmates than impostors among players \n    7\n, \n    1\n and\n\n    9\n. Outputting \"! 4 2 3 6 8\" means that one has found all the impostors,\nby some miracle. There are \n    k = 4\n impostors. The players who are\nimpostors are players \n    2\n, \n    3\n, \n    6\n and \n    8\n.\n\n",
        "cf_contest_id": 1617,
        "cf_index": "D2",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation",
            "interactive",
            "math"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n6\r\n1\r\n9\r\n1\r\n",
                "8\r\n11\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n7620\r\n2\r\n3288\r\n1\r\n",
                "7622\r\n3290\r\n"
            ],
            [
                "2\r\n561\r\n1\r\n1167\r\n1\r\n",
                "563\r\n1169\r\n"
            ],
            [
                "2\r\n9579\r\n1\r\n4581\r\n3\r\n",
                "9581\r\n4583\r\n"
            ],
            [
                "35\r\n423\r\n3\r\n438\r\n1\r\n153\r\n2\r\n366\r\n1\r\n525\r\n2\r\n456\r\n1\r\n525\r\n3\r\n396\r\n3\r\n498\r\n2\r\n522\r\n3\r\n15\r\n2\r\n168\r\n1\r\n327\r\n1\r\n12\r\n3\r\n537\r\n3\r\n222\r\n1\r\n552\r\n3\r\n420\r\n3\r\n528\r\n2\r\n261\r\n2\r\n321\r\n1\r\n456\r\n1\r\n396\r\n2\r\n12\r\n1\r\n54\r\n1\r\n477\r\n2\r\n549\r\n1\r\n384\r\n1\r\n273\r\n1\r\n48\r\n3\r\n465\r\n1\r\n234\r\n3\r\n387\r\n2\r\n498\r\n3\r\n531\r\n1\r\n",
                "425\r\n440\r\n155\r\n368\r\n527\r\n458\r\n527\r\n398\r\n500\r\n524\r\n17\r\n170\r\n329\r\n14\r\n539\r\n224\r\n554\r\n422\r\n530\r\n263\r\n323\r\n458\r\n398\r\n14\r\n56\r\n479\r\n551\r\n386\r\n275\r\n50\r\n467\r\n236\r\n389\r\n500\r\n533\r\n"
            ],
            [
                "19\r\n897\r\n2\r\n639\r\n1\r\n960\r\n2\r\n1011\r\n1\r\n723\r\n1\r\n303\r\n2\r\n552\r\n1\r\n174\r\n3\r\n216\r\n3\r\n609\r\n1\r\n558\r\n1\r\n759\r\n2\r\n321\r\n3\r\n960\r\n1\r\n1014\r\n3\r\n210\r\n2\r\n300\r\n2\r\n381\r\n1\r\n990\r\n1\r\n",
                "899\r\n641\r\n962\r\n1013\r\n725\r\n305\r\n554\r\n176\r\n218\r\n611\r\n560\r\n761\r\n323\r\n962\r\n1016\r\n212\r\n302\r\n383\r\n992\r\n"
            ],
            [
                "3\r\n3924\r\n1\r\n1551\r\n2\r\n966\r\n1\r\n",
                "3926\r\n1553\r\n968\r\n"
            ],
            [
                "2\r\n2286\r\n3\r\n3960\r\n3\r\n",
                "2288\r\n3962\r\n"
            ],
            [
                "2\r\n153\r\n1\r\n5250\r\n1\r\n",
                "155\r\n5252\r\n"
            ],
            [
                "48\r\n198\r\n3\r\n156\r\n2\r\n324\r\n3\r\n255\r\n3\r\n276\r\n3\r\n126\r\n2\r\n390\r\n3\r\n219\r\n2\r\n390\r\n1\r\n33\r\n1\r\n153\r\n1\r\n138\r\n2\r\n339\r\n1\r\n240\r\n2\r\n315\r\n2\r\n318\r\n3\r\n99\r\n2\r\n303\r\n3\r\n126\r\n2\r\n306\r\n2\r\n354\r\n1\r\n87\r\n2\r\n102\r\n3\r\n336\r\n3\r\n246\r\n1\r\n132\r\n3\r\n336\r\n1\r\n390\r\n3\r\n258\r\n2\r\n108\r\n2\r\n42\r\n2\r\n114\r\n1\r\n84\r\n3\r\n276\r\n3\r\n126\r\n2\r\n384\r\n2\r\n333\r\n1\r\n261\r\n3\r\n171\r\n3\r\n171\r\n3\r\n39\r\n1\r\n363\r\n3\r\n405\r\n1\r\n117\r\n3\r\n261\r\n2\r\n366\r\n3\r\n42\r\n2\r\n9\r\n2\r\n",
                "200\r\n158\r\n326\r\n257\r\n278\r\n128\r\n392\r\n221\r\n392\r\n35\r\n155\r\n140\r\n341\r\n242\r\n317\r\n320\r\n101\r\n305\r\n128\r\n308\r\n356\r\n89\r\n104\r\n338\r\n248\r\n134\r\n338\r\n392\r\n260\r\n110\r\n44\r\n116\r\n86\r\n278\r\n128\r\n386\r\n335\r\n263\r\n173\r\n173\r\n41\r\n365\r\n407\r\n119\r\n263\r\n368\r\n44\r\n11\r\n"
            ],
            [
                "26\r\n213\r\n3\r\n498\r\n1\r\n543\r\n1\r\n93\r\n2\r\n333\r\n1\r\n18\r\n3\r\n393\r\n2\r\n621\r\n3\r\n726\r\n1\r\n753\r\n3\r\n738\r\n1\r\n21\r\n3\r\n15\r\n1\r\n486\r\n2\r\n189\r\n1\r\n459\r\n1\r\n264\r\n2\r\n12\r\n3\r\n408\r\n3\r\n60\r\n2\r\n345\r\n2\r\n729\r\n1\r\n684\r\n2\r\n732\r\n3\r\n567\r\n3\r\n138\r\n1\r\n",
                "215\r\n500\r\n545\r\n95\r\n335\r\n20\r\n395\r\n623\r\n728\r\n755\r\n740\r\n23\r\n17\r\n488\r\n191\r\n461\r\n266\r\n14\r\n410\r\n62\r\n347\r\n731\r\n686\r\n734\r\n569\r\n140\r\n"
            ],
            [
                "16\r\n177\r\n3\r\n651\r\n3\r\n219\r\n3\r\n891\r\n3\r\n99\r\n2\r\n894\r\n3\r\n42\r\n2\r\n858\r\n3\r\n132\r\n1\r\n933\r\n1\r\n633\r\n3\r\n942\r\n1\r\n900\r\n2\r\n381\r\n2\r\n108\r\n3\r\n891\r\n3\r\n",
                "179\r\n653\r\n221\r\n893\r\n101\r\n896\r\n44\r\n860\r\n134\r\n935\r\n635\r\n944\r\n902\r\n383\r\n110\r\n893\r\n"
            ],
            [
                "10\r\n1155\r\n2\r\n1512\r\n2\r\n1725\r\n2\r\n1332\r\n1\r\n456\r\n1\r\n1176\r\n1\r\n795\r\n1\r\n990\r\n1\r\n126\r\n3\r\n1044\r\n3\r\n",
                "1157\r\n1514\r\n1727\r\n1334\r\n458\r\n1178\r\n797\r\n992\r\n128\r\n1046\r\n"
            ],
            [
                "9\r\n672\r\n1\r\n930\r\n3\r\n18\r\n2\r\n1761\r\n3\r\n174\r\n2\r\n156\r\n1\r\n1878\r\n1\r\n102\r\n1\r\n507\r\n2\r\n",
                "674\r\n932\r\n20\r\n1763\r\n176\r\n158\r\n1880\r\n104\r\n509\r\n"
            ],
            [
                "4\r\n3747\r\n3\r\n2796\r\n1\r\n3348\r\n2\r\n2703\r\n2\r\n",
                "3749\r\n2798\r\n3350\r\n2705\r\n"
            ],
            [
                "2\r\n2682\r\n3\r\n6912\r\n1\r\n",
                "2684\r\n6914\r\n"
            ],
            [
                "2\r\n9999\r\n2\r\n7764\r\n1\r\n",
                "10001\r\n7766\r\n"
            ],
            [
                "2\r\n1641\r\n2\r\n1557\r\n3\r\n",
                "1643\r\n1559\r\n"
            ],
            [
                "2\r\n5133\r\n3\r\n3225\r\n2\r\n",
                "5135\r\n3227\r\n"
            ],
            [
                "2\r\n9999\r\n1\r\n2598\r\n2\r\n",
                "10001\r\n2600\r\n"
            ]
        ]
    }
]