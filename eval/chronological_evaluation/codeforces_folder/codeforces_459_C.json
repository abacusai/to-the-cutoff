[
    {
        "name": "Pashmak and Buses",
        "description": "Recently Pashmak has been employed in a transportation company. The company\nhas k buses and has a contract with a school which has n students. The school\nplanned to take the students to d different places for d days (each day in one\nplace). Each day the company provides all the buses for the trip. Pashmak has\nto arrange the students in the buses. He wants to arrange the students in a\nway that no two students become close friends. In his ridiculous idea, two\nstudents will become close friends if and only if they are in the same buses\nfor all d days. Please help Pashmak with his weird idea. Assume that each bus\nhas an unlimited capacity. Input The first line of input contains three space-\nseparated integers n, k, d (1 \u2264 n, d \u2264 1000; 1 \u2264 k \u2264 10^9). Output If there is\nno valid arrangement just print -1. Otherwise print d lines, in each of them\nprint n integers. The j-th integer of the i-th line shows which bus the j-th\nstudent has to take on the i-th day. You can assume that the buses are\nnumbered from 1 to k. Examples Input 3 2 2 Output 1 1 2 1 2 1 Input 3 2 1\nOutput -1 Note Note that two students become close friends only if they share\na bus each day. But the bus they share can differ from day to day.\n\n",
        "cf_contest_id": 459,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2 2\r\n",
                "1 2 1\r\n1 1 2\r\n"
            ],
            [
                "3 2 1\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "7 2 3\r\n",
                "1 2 1 2 1 2 1\r\n1 1 2 2 1 1 2\r\n1 1 1 1 2 2 2\r\n"
            ],
            [
                "9 2 3\r\n",
                "-1\r\n"
            ],
            [
                "2 1 1000\r\n",
                "-1\r\n"
            ],
            [
                "1000 2 8\r\n",
                "-1\r\n"
            ],
            [
                "513 2 9\r\n",
                "-1\r\n"
            ],
            [
                "82 3 4\r\n",
                "-1\r\n"
            ],
            [
                "244 3 5\r\n",
                "-1\r\n"
            ],
            [
                "1000 999 1\r\n",
                "-1\r\n"
            ],
            [
                "1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1 1 2\r\n",
                "1\r\n1\r\n"
            ],
            [
                "2 1 1\r\n",
                "-1\r\n"
            ],
            [
                "1 2 1\r\n",
                "1\r\n"
            ],
            [
                "5 3 2\r\n",
                "1 2 3 1 2\r\n1 1 1 2 2\r\n"
            ],
            [
                "1 1000000000 1\r\n",
                "1\r\n"
            ],
            [
                "27 3 3\r\n",
                "1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\r\n1 1 1 2 2 2 3 3 3 1 1 1 2 2 2 3 3 3 1 1 1 2 2 2 3 3 3\r\n1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3\r\n"
            ],
            [
                "1 1 10\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n"
            ]
        ]
    }
]