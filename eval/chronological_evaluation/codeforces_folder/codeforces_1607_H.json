[
    {
        "name": "Banquet Preparations 2",
        "description": "The chef has cooked \n    n\n dishes yet again: the \n    i\n-th dish consists of\n\n    a_i\n grams of fish and \n    b_i\n grams of meat. Banquet organizers\nconsider two dishes \n    i\n and \n    j\n equal if \n    a_i=a_j\n and\n\n    b_i=b_j\n at the same time. The banquet organizers estimate the variety of\n\n    n\n dishes as follows. The variety of a set of dishes is equal to the\nnumber of different dishes in it. The less variety is, the better. In order to\nreduce the variety, a taster was invited. He will eat exactly \n    m_i\n grams\nof food from each dish. For each dish, the taster determines separately how\nmuch fish and how much meat he will eat. The only condition is that he will\neat exactly \n    m_i\n grams of the \n    i\n-th dish in total. Determine how\nmuch of what type of food the taster should eat from each dish so that the\nvalue of variety is the minimum possible. If there are several correct\nanswers, you may output any of them. Input The first line of input data\ncontains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of\ntest cases. Each test case's description is preceded by a blank line. Next\ncomes a line that contains an integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n) \u2014 the number of dishes. Then follows \n    n\n lines, \n    i\n-th of\nwhich contains three integers \n    a_i\n, \n    b_i\n and \n    m_i\n (\n    0 \n    \u2264\n    a_i, b_i \n    \u2264 10^6\n; \n    0 \n    \u2264 m_i \n    \u2264 a_i+b_i\n) \u2014 the mass of fish in\n\n    i\n-th dish, the mass of meat in \n    i\n-th dish and how many grams in\ntotal the taster should eat in \n    i\n-th dish. The sum of all \n    n\n values\nfor all input data sets in the test does not exceed \n    2 \n    \u00b7 10^5\n.\nOutput For each test case, print on the first line the minimum value of\nvariety that can be achieved by eating exactly \n    m_i\n grams of food (for\nall \n    i\n from \n    1\n to \n    n\n) from a dish \n    i\n. Then print \n    n\n\nlines that describe a way to do this: the \n    i\n-th line should contain two\nintegers \n    x_i\n and \n    y_i\n (\n    0 \n    \u2264 x_i \n    \u2264 a_i\n; \n    0 \n    \u2264\n    y_i \n    \u2264 b_i\n; \n    x_i+y_i=m_i\n), where \n    x_i\n is how many grams of\nfish the taster should eat from \n    i\n-th dish, and \n    y_i\n is how many\ngrams of meat. If there are several ways to achieve a minimum balance, print\nany of them. Example Input 5 3 10 10 2 9 9 0 10 9 1 2 3 4 1 5 1 2 3 7 2 5 6 5\n4 5 5 6 1 13 42 50 5 5 7 12 3 1 4 7 3 7 0 0 0 4 1 5 Output 1 1 1 0 0 1 0 2 0 1\n1 1 2 3 2 0 4 1 5 1 8 42 2 5 7 3 1 4 3 0 0 4 1\n\n",
        "cf_contest_id": 1607,
        "cf_index": "H",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n\r\n3\r\n10 10 2\r\n9 9 0\r\n10 9 1\r\n\r\n2\r\n3 4 1\r\n5 1 2\r\n\r\n3\r\n7 2 5\r\n6 5 4\r\n5 5 6\r\n\r\n1\r\n13 42 50\r\n\r\n5\r\n5 7 12\r\n3 1 4\r\n7 3 7\r\n0 0 0\r\n4 1 5\r\n",
                "1 \r\n 1 1\r\n0 0\r\n1 0\r\n2 \r\n 0 1\r\n1 1\r\n2 \r\n 3 2\r\n0 4\r\n1 5\r\n1 \r\n 8 42\r\n2 \r\n 5 7\r\n3 1\r\n4 3\r\n0 0\r\n4 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n\r\n8\r\n1000000 1000000 2000000\r\n100000 100000 200000\r\n10000 10000 20000\r\n1000 1000 2000\r\n100 100 200\r\n10 10 20\r\n1 1 2\r\n0 0 0\r\n\r\n2\r\n1000000 1000000 2000000\r\n1000000 1000000 0\r\n\r\n2\r\n1000000 0 1000000\r\n0 1000000 1000000\r\n",
                "1 \r\n 1000000 1000000\r\n100000 100000\r\n10000 10000\r\n1000 1000\r\n100 100\r\n10 10\r\n1 1\r\n0 0\r\n2 \r\n 1000000 1000000\r\n0 0\r\n1 \r\n 1000000 0\r\n0 1000000\r\n"
            ]
        ]
    }
]