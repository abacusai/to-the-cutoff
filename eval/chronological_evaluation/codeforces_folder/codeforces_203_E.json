[
    {
        "name": "Transportation",
        "description": "Valera came to Japan and bought many robots for his research. He's already at\nthe airport, the plane will fly very soon and Valera urgently needs to bring\nall robots to the luggage compartment. The robots are self-propelled (they can\npotentially move on their own), some of them even have compartments to carry\nother robots. More precisely, for the i-th robot we know value ci \u2014 the number\nof robots it can carry. In this case, each of ci transported robots can\nadditionally carry other robots. However, the robots need to be filled with\nfuel to go, so Valera spent all his last money and bought S liters of fuel. He\nlearned that each robot has a restriction on travel distances. Thus, in\naddition to features ci, the i-th robot has two features fi and li \u2014 the\namount of fuel (in liters) needed to move the i-th robot, and the maximum\ndistance that the robot can go. Due to the limited amount of time and fuel,\nValera wants to move the maximum number of robots to the luggage compartment.\nHe operates as follows. First Valera selects some robots that will travel to\nthe luggage compartment on their own. In this case the total amount of fuel\nrequired to move all these robots must not exceed S. Then Valera seats the\nrobots into the compartments, so as to transport as many robots as possible.\nNote that if a robot doesn't move by itself, you can put it in another not\nmoving robot that is moved directly or indirectly by a moving robot. After\nthat all selected and seated robots along with Valera go to the luggage\ncompartment and the rest robots will be lost. There are d meters to the\nluggage compartment. Therefore, the robots that will carry the rest, must have\nfeature li of not less than d. During the moving Valera cannot stop or change\nthe location of the robots in any way. Help Valera calculate the maximum\nnumber of robots that he will be able to take home, and the minimum amount of\nfuel he will have to spend, because the remaining fuel will come in handy in\nValera's research. Input The first line contains three space-separated\nintegers n, d, S (1 \u2264 n \u2264 10^5, 1 \u2264 d, S \u2264 10^9). The first number represents\nthe number of robots, the second one \u2014 the distance to the luggage compartment\nand the third one \u2014 the amount of available fuel. Next n lines specify the\nrobots. The i-th line contains three space-separated integers ci, fi, li (0 \u2264\nci, fi, li \u2264 10^9) \u2014 the i-th robot's features. The first number is the number\nof robots the i-th robot can carry, the second number is the amount of fuel\nneeded for the i-th robot to move and the third one shows the maximum distance\nthe i-th robot can go. Output Print two space-separated integers \u2014 the maximum\nnumber of robots Valera can transport to the luggage compartment and the\nminimum amount of fuel he will need for that. If Valera won't manage to get\nany robots to the luggage compartment, print two zeroes. Examples Input 3 10\n10 0 12 10 1 6 10 0 1 1 Output 2 6 Input 2 7 10 3 12 10 5 16 8 Output 0 0\nInput 4 8 10 0 12 3 1 1 0 0 3 11 1 6 9 Output 4 9\n\n",
        "cf_contest_id": 203,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 10 10\r\n0 12 10\r\n1 6 10\r\n0 1 1\r\n",
                "2 6\r\n"
            ],
            [
                "2 7 10\r\n3 12 10\r\n5 16 8\r\n",
                "0 0\r\n"
            ],
            [
                "4 8 10\r\n0 12 3\r\n1 1 0\r\n0 3 11\r\n1 6 9\r\n",
                "4 9\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 10 6\r\n0 2 2\r\n0 11 8\r\n2 3 8\r\n0 3 0\r\n1 2 8\r\n",
                "0 0\r\n"
            ],
            [
                "8 9 3\r\n0 3 4\r\n0 15 14\r\n1 2 7\r\n0 1 14\r\n3 5 8\r\n3 8 3\r\n3 1 0\r\n0 5 7\r\n",
                "1 1\r\n"
            ],
            [
                "6 4 3\r\n0 1 2\r\n1 3 0\r\n0 4 5\r\n1 4 4\r\n1 2 2\r\n0 4 2\r\n",
                "0 0\r\n"
            ],
            [
                "20 10 7\r\n3 17 0\r\n3 1 5\r\n0 9 11\r\n3 22 13\r\n4 2 14\r\n1 5 12\r\n0 19 6\r\n0 8 15\r\n4 12 8\r\n3 27 7\r\n3 24 6\r\n1 8 9\r\n3 18 10\r\n3 1 7\r\n1 16 8\r\n5 10 5\r\n0 0 5\r\n2 10 14\r\n0 22 14\r\n4 10 13\r\n",
                "20 2\r\n"
            ],
            [
                "11 2 21\r\n10 22 6\r\n19 3 5\r\n30 40 5\r\n21 25 17\r\n36 3 4\r\n25 46 5\r\n23 42 13\r\n24 30 5\r\n20 4 11\r\n25 36 13\r\n39 38 6\r\n",
                "11 3\r\n"
            ],
            [
                "5 1 7\r\n0 4 1\r\n6 10 5\r\n9 0 2\r\n9 0 0\r\n9 1 4\r\n",
                "5 0\r\n"
            ],
            [
                "10 18 300\r\n0 195 14\r\n0 283 20\r\n0 167 13\r\n0 167 17\r\n0 150 14\r\n0 83 10\r\n0 204 15\r\n0 166 17\r\n0 207 20\r\n0 195 11\r\n",
                "1 207\r\n"
            ],
            [
                "11 1 10\r\n1 10 1\r\n0 1 1\r\n0 1 1\r\n0 1 1\r\n0 1 1\r\n0 1 1\r\n0 1 1\r\n0 1 1\r\n0 1 1\r\n0 1 1\r\n0 1 1\r\n",
                "10 10\r\n"
            ]
        ]
    }
]