[
    {
        "name": "Z mod X = C",
        "description": "You are given three positive integers \n    a\n, \n    b\n, \n    c\n (\n    a < b <\n    c\n). You have to find three positive integers \n    x\n, \n    y\n, \n    z\n such\nthat: \n    \n\n    x \n     y = a,\n\n    \n \n    \n\n    y \n     z = b,\n\n    \n \n    \n\n    z\n    \n     x = c.\n\n    \n Here \n    p \n     q\n denotes the remainder from\ndividing \n    p\n by \n    q\n. It is possible to show that for such constraints\nthe answer always exists. Input The input consists of multiple test cases. The\nfirst line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n     000\n)\n\u2014 the number of test cases. Description of the test cases follows. Each test\ncase contains a single line with three integers \n    a\n, \n    b\n, \n    c\n\n(\n    1 \n    \u2264 a < b < c \n    \u2264 10^8\n). Output For each test case output three\npositive integers \n    x\n, \n    y\n, \n    z\n (\n    1 \n    \u2264 x, y, z \n    \u2264\n    10^18\n) such that \n    x \n     y = a\n, \n    y \n     z = b\n, \n    z\n    \n     x = c\n. You can output any correct answer. Example Input 4 1 3 4 127\n234 421 2 7 8 59 94 388 Output 12 11 4 1063 234 1484 25 23 8 2221 94 2609 Note\nIn the first test case: \n    \n\n    x \n     y = 12 \n     11 = 1;\n\n    \n \n    \n\n    y\n    \n     z = 11 \n     4 = 3;\n\n    \n \n    \n\n    z \n     x = 4 \n     12 =\n    4.\n\n    \n\n\n",
        "cf_contest_id": 1684,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 3 4\r\n127 234 421\r\n2 7 8\r\n59 94 388\r\n",
                "13 3 4\r\n98641 234 421\r\n58 7 8\r\n36531 94 388\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 2 2002\r\n",
                "4005 2 2002\r\n"
            ],
            [
                "1\r\n1 2 100000000\r\n",
                "200000001 2 100000000\r\n"
            ],
            [
                "1\r\n1 2 1000000\r\n",
                "2000001 2 1000000\r\n"
            ]
        ]
    }
]