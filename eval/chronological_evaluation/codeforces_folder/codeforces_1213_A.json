[
    {
        "name": "Chips Moving",
        "description": "You are given \n    n\n chips on a number line. The \n    i\n-th chip is placed at\nthe integer coordinate \n    x_i\n. Some chips can have equal coordinates. You\ncan perform each of the two following types of moves any (possibly, zero)\nnumber of times on any chip: Move the chip \n    i\n by \n    2\n to the left or\n\n    2\n to the right for free (i.e. replace the current coordinate \n    x_i\n\nwith \n    x_i - 2\n or with \n    x_i + 2\n); move the chip \n    i\n by \n    1\n to\nthe left or \n    1\n to the right and pay one coin for this move (i.e. replace\nthe current coordinate \n    x_i\n with \n    x_i - 1\n or with \n    x_i + 1\n).\nNote that it's allowed to move chips to any integer coordinate, including\nnegative and zero. Your task is to find the minimum total number of coins\nrequired to move all \n    n\n chips to the same coordinate (i.e. all \n    x_i\n\nshould be equal after some sequence of moves). Input The first line of the\ninput contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n) \u2014 the number of\nchips. The second line of the input contains \n    n\n integers \n    x_1, x_2,\n    \n    \u2026, x_n\n (\n    1 \n    \u2264 x_i \n    \u2264 10^9\n), where \n    x_i\n is the\ncoordinate of the \n    i\n-th chip. Output Print one integer \u2014 the minimum\ntotal number of coins required to move all \n    n\n chips to the same\ncoordinate. Examples Input 3 1 2 3 Output 1 Input 5 2 2 2 3 3 Output 2 Note In\nthe first example you need to move the first chip by \n    2\n to the right and\nthe second chip by \n    1\n to the right or move the third chip by \n    2\n to\nthe left and the second chip by \n    1\n to the left so the answer is \n    1\n.\nIn the second example you need to move two chips with coordinate \n    3\n by\n\n    1\n to the left so the answer is \n    2\n.\n\n",
        "cf_contest_id": 1213,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 3\r\n",
                "1\r\n"
            ],
            [
                "5\r\n2 2 2 3 3\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n2 3 3\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 2 2\r\n",
                "1\r\n"
            ],
            [
                "30\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\r\n",
                "15\r\n"
            ],
            [
                "1\r\n11\r\n",
                "0\r\n"
            ],
            [
                "5\r\n3 3 1 2 2\r\n",
                "2\r\n"
            ],
            [
                "1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "5\r\n1 2 2 2 2\r\n",
                "1\r\n"
            ],
            [
                "10\r\n10 3 3 1 6 2 1 10 6 6\r\n",
                "4\r\n"
            ],
            [
                "10\r\n6 4 7 8 2 10 2 7 9 7\r\n",
                "4\r\n"
            ],
            [
                "1\r\n1000000000\r\n",
                "0\r\n"
            ],
            [
                "10\r\n5 3 6 4 7 10 4 4 5 5\r\n",
                "5\r\n"
            ],
            [
                "10\r\n1 3 5 3 7 2 10 1 2 2\r\n",
                "4\r\n"
            ],
            [
                "10\r\n4 3 9 5 7 4 9 5 10 2\r\n",
                "4\r\n"
            ],
            [
                "8\r\n1 1 3 4 4 4 5 5\r\n",
                "3\r\n"
            ],
            [
                "6\r\n1 1 3 2 2 4\r\n",
                "3\r\n"
            ],
            [
                "10\r\n3 5 3 2 9 5 7 7 9 10\r\n",
                "2\r\n"
            ],
            [
                "1\r\n5\r\n",
                "0\r\n"
            ],
            [
                "10\r\n4 3 9 1 10 8 10 4 4 5\r\n",
                "4\r\n"
            ],
            [
                "7\r\n2 2 2 2 2 2 2\r\n",
                "0\r\n"
            ],
            [
                "7\r\n2 2 2 2 2 1 1\r\n",
                "2\r\n"
            ],
            [
                "24\r\n237531404 337946240 368396518 580132092 598284356 980126300 288588969 882864616 953826728 432441781 190431218 307028298 780298896 105187973 572137068 28148927 321443861 159804462 974759362 862879627 798856599 608157684 797758503 97033491\r\n",
                "9\r\n"
            ],
            [
                "5\r\n2 2 1 1 1\r\n",
                "2\r\n"
            ],
            [
                "8\r\n2 2 2 2 2 2 1 1\r\n",
                "2\r\n"
            ],
            [
                "66\r\n17474 17509 20550 10873 31311 10156 24680 28012 29609 8266 18126 20151 648 2722 13599 9467 8289 17005 1 31436 21443 265 21543 32682 11647 30228 15498 1331 8459 20026 24054 23702 15400 7243 3017 10315 451 22673 6648 30210 27673 27232 4178 13529 23071 28654 8969 23505 27681 14437 5230 21635 5033 9271 25596 32271 23202 24498 28312 23638 9661 11220 25623 18281 30228 10592\r\n",
                "31\r\n"
            ],
            [
                "1\r\n2\r\n",
                "0\r\n"
            ],
            [
                "2\r\n2 2\r\n",
                "0\r\n"
            ],
            [
                "2\r\n3 3\r\n",
                "0\r\n"
            ],
            [
                "2\r\n3 2\r\n",
                "1\r\n"
            ],
            [
                "2\r\n2 1\r\n",
                "1\r\n"
            ],
            [
                "1\r\n643\r\n",
                "0\r\n"
            ],
            [
                "1\r\n436\r\n",
                "0\r\n"
            ],
            [
                "1\r\n6436\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 1\r\n",
                "0\r\n"
            ],
            [
                "1\r\n43643\r\n",
                "0\r\n"
            ],
            [
                "1\r\n64366\r\n",
                "0\r\n"
            ],
            [
                "1\r\n6043\r\n",
                "0\r\n"
            ],
            [
                "1\r\n4306\r\n",
                "0\r\n"
            ],
            [
                "2\r\n6043 4306\r\n",
                "1\r\n"
            ],
            [
                "53\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "0\r\n"
            ]
        ]
    }
]