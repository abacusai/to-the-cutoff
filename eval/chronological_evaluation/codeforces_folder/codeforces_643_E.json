[
    {
        "name": "Bear and Destroying Subtrees",
        "description": "Limak is a little grizzly bear. He will once attack Deerland but now he can\nonly destroy trees in role-playing games. Limak starts with a tree with one\nvertex. The only vertex has index 1 and is a root of the tree. Sometimes, a\ngame chooses a subtree and allows Limak to attack it. When a subtree is\nattacked then each of its edges is destroyed with probability , independently\nof other edges. Then, Limak gets the penalty \u2014 an integer equal to the height\nof the subtree after the attack. The height is defined as the maximum number\nof edges on the path between the root of the subtree and any vertex in the\nsubtree. You must handle queries of two types. 1 v denotes a query of the\nfirst type. A new vertex appears and its parent is v. A new vertex has the\nnext available index (so, new vertices will be numbered 2, 3, ...). 2 v\ndenotes a query of the second type. For a moment let's assume that the game\nallows Limak to attack a subtree rooted in v. Then, what would be the expected\nvalue of the penalty Limak gets after the attack? In a query of the second\ntype, Limak doesn't actually attack the subtree and thus the query doesn't\naffect next queries. Input The first line of the input contains one integer q\n(1 \u2264 q \u2264 500 000) \u2014 the number of queries. Then, q lines follow. The i-th of\nthem contains two integers typei and vi (1 \u2264 typei \u2264 2). If typei = 1 then vi\ndenotes a parent of a new vertex, while if typei = 2 then you should print the\nanswer for a subtree rooted in vi. It's guaranteed that there will be at least\n1 query of the second type, that is, the output won't be empty. It's\nguaranteed that just before the i-th query a vertex vi already exists. Output\nFor each query of the second type print one real number \u2014the expected value of\nthe penalty if Limak attacks the given subtree. Your answer will be considered\ncorrect if its absolute or relative error does not exceed 10^-6. Namely: let's\nassume that your answer is a, and the answer of the jury is b. The checker\nprogram will consider your answer correct if . Examples Input 7 1 1 1 1 2 1 1\n2 1 3 2 2 2 1 Output 0.7500000000 0.5000000000 1.1875000000 Input 8 2 1 1 1 1\n2 1 3 1 4 2 1 1 4 2 1 Output 0.0000000000 0.9375000000 0.9687500000 Note\nBelow, you can see the drawing for the first sample. Red circles denote\nqueries of the second type.\n\n",
        "cf_contest_id": 643,
        "cf_index": "E",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "math",
            "probabilities",
            "trees"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "7\r\n1 1\r\n1 1\r\n2 1\r\n1 2\r\n1 3\r\n2 2\r\n2 1\r\n",
                "0.75000000\r\n0.50000000\r\n1.18750000\r\n"
            ],
            [
                "8\r\n2 1\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n2 1\r\n1 4\r\n2 1\r\n",
                "0.00000000\r\n0.93750000\r\n0.96875000\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n2 1\r\n2 1\r\n1 1\r\n1 1\r\n1 2\r\n2 2\r\n2 2\r\n2 2\r\n1 4\r\n2 4\r\n",
                "0.00000000\r\n0.00000000\r\n0.50000000\r\n0.50000000\r\n0.50000000\r\n0.50000000\r\n"
            ],
            [
                "20\r\n1 1\r\n1 2\r\n1 2\r\n2 4\r\n2 1\r\n1 2\r\n1 5\r\n2 1\r\n1 6\r\n1 1\r\n1 6\r\n2 1\r\n1 2\r\n2 3\r\n1 6\r\n1 6\r\n2 4\r\n2 1\r\n2 5\r\n2 6\r\n",
                "0.00000000\r\n0.87500000\r\n1.06250000\r\n1.40625000\r\n0.00000000\r\n0.00000000\r\n1.46093750\r\n0.96875000\r\n0.93750000\r\n"
            ],
            [
                "50\r\n1 1\r\n1 1\r\n2 1\r\n2 2\r\n2 3\r\n2 2\r\n2 2\r\n1 1\r\n2 3\r\n2 4\r\n1 3\r\n2 1\r\n1 1\r\n2 5\r\n1 3\r\n2 3\r\n1 5\r\n2 2\r\n1 7\r\n1 2\r\n2 6\r\n2 5\r\n1 7\r\n2 10\r\n2 7\r\n1 5\r\n1 2\r\n1 8\r\n1 5\r\n1 8\r\n2 7\r\n2 7\r\n1 4\r\n1 11\r\n1 10\r\n2 4\r\n2 5\r\n2 18\r\n1 10\r\n2 17\r\n2 5\r\n2 13\r\n1 4\r\n2 12\r\n2 5\r\n1 13\r\n2 10\r\n2 1\r\n2 22\r\n2 5\r\n",
                "0.75000000\r\n0.00000000\r\n0.00000000\r\n0.00000000\r\n0.00000000\r\n0.00000000\r\n0.00000000\r\n1.12500000\r\n0.00000000\r\n0.75000000\r\n0.00000000\r\n0.00000000\r\n0.50000000\r\n0.00000000\r\n0.75000000\r\n0.75000000\r\n0.75000000\r\n0.50000000\r\n1.25000000\r\n0.00000000\r\n0.00000000\r\n1.25000000\r\n0.00000000\r\n0.00000000\r\n1.25000000\r\n0.75000000\r\n2.34161377\r\n0.00000000\r\n1.25000000\r\n"
            ],
            [
                "1\r\n2 1\r\n",
                "0.00000000\r\n"
            ]
        ]
    }
]