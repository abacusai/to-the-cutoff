[
    {
        "name": "Infinite Chess",
        "description": "The black king lives on a chess board with an infinite number of columns\n(files) and \n    8\n rows (ranks). The columns are numbered with all integer\nnumbers (including negative). The rows are numbered from \n    1\n to \n    8\n.\nInitially, the black king is located on the starting square \n    (x_s, y_s)\n,\nand he needs to reach some target square \n    (x_t, y_t)\n. Unfortunately,\nthere are also white pieces on the board, and they threaten the black king.\nAfter negotiations, the white pieces agreed to let the black king pass to the\ntarget square on the following conditions: each turn, the black king makes a\nmove according to the movement rules; the black king cannot move to a square\noccupied by a white piece; the black king cannot move to a square which is\nunder attack by any white piece. A square is under attack if a white piece can\nreach it in one move according to the movement rules; the white pieces never\nmove. Help the black king find the minimum number of moves needed to reach the\ntarget square while not violating the conditions. The black king cannot leave\nthe board at any time. The black king moves according to the movement rules\nbelow. Even though the white pieces never move, squares which they can reach\nin one move are considered to be under attack, so the black king cannot move\ninto those squares. Below are the movement rules. Note that the pieces (except\nfor the knight) cannot jump over other pieces. a king moves exactly one square\nhorizontally, vertically, or diagonally. a rook moves any number of vacant\nsquares horizontally or vertically. a bishop moves any number of vacant\nsquares diagonally. a queen moves any number of vacant squares horizontally,\nvertically, or diagonally. a knight moves to one of the nearest squares not on\nthe same rank, file, or diagonal (this can be thought of as moving two squares\nhorizontally then one square vertically, or moving one square horizontally\nthen two squares vertically \u2014 i. e. in an \"L\" pattern). Knights are not\nblocked by other pieces, they can simply jump over them. There are no pawns on\nthe board. King and knight possible moves, respectively. Dotted line shows\nthat knight can jump over other pieces. Queen, bishop, and rook possible\nmoves, respectively. Input The first line contains two integers \n    x_s\n and\n\n    y_s\n (\n    1 \n    \u2264 x_s \n    \u2264 10^8\n; \n    1 \n    \u2264 y_s \n    \u2264 8\n) \u2014 the\nstarting coordinates of the black king. The second line contains two integers\n\n    x_t\n and \n    y_t\n (\n    1 \n    \u2264 x_t \n    \u2264 10^8\n; \n    1 \n    \u2264 y_t \n    \u2264\n    8\n) \u2014 the coordinates of the target square for the black king. The third\nline contains one integer \n    n\n (\n    0 \n    \u2264 n \n    \u2264 2000\n) \u2014 the number of\nwhite pieces on the board. Then \n    n\n lines follow, the \n    i\n-th line\ncontains one character \n    t_i\n and two integers \n    x_i\n and \n    y_i\n\n(\n    1 \n    \u2264 x_i \n    \u2264 10^8\n; \n    1 \n    \u2264 y_i \n    \u2264 8\n) \u2014 the type and the\ncoordinates of the \n    i\n-th white piece. The types of pieces are represented\nby the following uppercase Latin letters: K \u2014 king Q \u2014 queen R \u2014 rook B \u2014\nbishop N \u2014 knight There can be any number of white pieces of any type listed\nabove on the board, for example, \n    3\n white kings or \n    4\n white queens.\nThere are no pawns on the board. Additional constrains on the input: no square\nis occupied by more than one white piece; the starting square for the black\nking is different from the square he wants to reach, and neither of these two\nsquares is occupied or is under attack by any white piece. Output Print one\ninteger \u2014 the minimum number of moves needed for the black king to reach the\ntarget square while not violating the conditions, or \n    -1\n if it is\nimpossible. Examples Input 1 8 7 8 2 N 4 8 B 4 6 Output 10 Input 1 1 1 5 2 K 1\n3 R 2 3 Output 6 Input 2 2 6 4 1 Q 4 3 Output -1 Note The image below\ndemonstrates the solution for the second example. Here, the letters K, R, s,\nand t represent the white king, the white rook, the starting square, and the\ntarget square, respectively. Bold crosses mark the squares which are under\nattack by the white pieces. Bold dots show the shortest path for the black\nking.\n\n",
        "cf_contest_id": 1765,
        "cf_index": "I",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "shortest paths"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "1 8\r\n7 8\r\n2\r\nN 4 8\r\nB 4 6\r\n",
                "10\r\n"
            ],
            [
                "1 1\r\n1 5\r\n2\r\nK 1 3\r\nR 2 3\r\n",
                "6\r\n"
            ],
            [
                "2 2\r\n6 4\r\n1\r\nQ 4 3\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 8\r\n7 8\r\n2\r\nK 5 7\r\nK 5 6\r\n",
                "10\r\n"
            ],
            [
                "2 8\r\n7 8\r\n8\r\nK 5 8\r\nK 5 7\r\nK 5 6\r\nK 5 5\r\nK 5 4\r\nK 5 3\r\nK 5 2\r\nK 5 1\r\n",
                "-1\r\n"
            ],
            [
                "1 8\r\n5 8\r\n2\r\nK 3 7\r\nK 3 3\r\n",
                "8\r\n"
            ],
            [
                "1 8\r\n5 8\r\n3\r\nK 3 7\r\nK 3 4\r\nK 3 1\r\n",
                "-1\r\n"
            ],
            [
                "2 8\r\n2 6\r\n1\r\nQ 4 5\r\n",
                "2\r\n"
            ],
            [
                "1 8\r\n5 8\r\n1\r\nQ 3 5\r\n",
                "-1\r\n"
            ],
            [
                "1 8\r\n3 8\r\n1\r\nR 4 7\r\n",
                "2\r\n"
            ],
            [
                "1 8\r\n1 6\r\n1\r\nR 3 7\r\n",
                "-1\r\n"
            ],
            [
                "1 8\r\n6 8\r\n2\r\nB 4 8\r\nB 3 7\r\n",
                "5\r\n"
            ],
            [
                "1 8\r\n6 8\r\n2\r\nB 4 8\r\nB 4 7\r\n",
                "-1\r\n"
            ],
            [
                "1 8\r\n3 8\r\n2\r\nN 4 8\r\nN 4 7\r\n",
                "8\r\n"
            ],
            [
                "1 8\r\n3 7\r\n3\r\nN 4 8\r\nN 4 7\r\nN 4 6\r\n",
                "-1\r\n"
            ],
            [
                "1 4\r\n1 8\r\n4\r\nK 99999999 6\r\nR 99999999 5\r\nK 100000000 5\r\nK 99999999 4\r\n",
                "200000004\r\n"
            ],
            [
                "100000000 4\r\n100000000 8\r\n4\r\nK 3 6\r\nK 2 5\r\nR 3 5\r\nK 3 4\r\n",
                "200000002\r\n"
            ],
            [
                "50000000 4\r\n50000000 8\r\n5\r\nK 3 6\r\nK 2 5\r\nR 3 5\r\nK 3 4\r\nK 99999997 5\r\n",
                "100000000\r\n"
            ],
            [
                "50000000 4\r\n50000000 8\r\n5\r\nK 3 6\r\nK 2 5\r\nR 3 5\r\nK 3 4\r\nK 100000000 5\r\n",
                "100000002\r\n"
            ],
            [
                "2 2\r\n2 4\r\n3\r\nN 2 5\r\nB 2 3\r\nK 2 8\r\n",
                "11\r\n"
            ],
            [
                "4 4\r\n2 6\r\n1\r\nB 1 3\r\n",
                "3\r\n"
            ],
            [
                "1 1\r\n100 1\r\n0\r\n",
                "99\r\n"
            ],
            [
                "1 8\r\n1 4\r\n0\r\n",
                "4\r\n"
            ],
            [
                "1 2\r\n1 4\r\n1\r\nK 1 8\r\n",
                "2\r\n"
            ],
            [
                "1 4\r\n1 5\r\n2\r\nB 1 8\r\nN 1 7\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n1 6\r\n5\r\nB 1 2\r\nK 1 8\r\nR 1 3\r\nB 1 4\r\nB 1 5\r\n",
                "-1\r\n"
            ],
            [
                "1 2\r\n1 7\r\n6\r\nB 1 1\r\nN 1 6\r\nN 1 8\r\nB 1 5\r\nB 1 4\r\nN 1 3\r\n",
                "-1\r\n"
            ],
            [
                "1 1\r\n1 5\r\n6\r\nB 1 8\r\nB 1 4\r\nN 1 6\r\nQ 1 7\r\nN 1 2\r\nN 1 3\r\n",
                "-1\r\n"
            ],
            [
                "1 6\r\n1 8\r\n6\r\nQ 1 1\r\nB 1 5\r\nN 1 2\r\nN 1 4\r\nK 1 3\r\nB 1 7\r\n",
                "2\r\n"
            ],
            [
                "6 7\r\n10 5\r\n0\r\n",
                "4\r\n"
            ],
            [
                "4 1\r\n2 3\r\n1\r\nB 5 7\r\n",
                "2\r\n"
            ],
            [
                "5 2\r\n1 8\r\n2\r\nB 6 8\r\nB 1 2\r\n",
                "-1\r\n"
            ],
            [
                "10 7\r\n10 1\r\n5\r\nQ 6 6\r\nK 6 8\r\nN 5 7\r\nQ 4 6\r\nQ 4 4\r\n",
                "-1\r\n"
            ],
            [
                "5 7\r\n9 2\r\n10\r\nR 2 4\r\nQ 4 1\r\nQ 6 4\r\nK 1 5\r\nN 4 7\r\nK 3 1\r\nR 4 4\r\nN 8 5\r\nR 10 8\r\nB 4 2\r\n",
                "-1\r\n"
            ],
            [
                "68 8\r\n37 6\r\n0\r\n",
                "31\r\n"
            ],
            [
                "36 2\r\n30 7\r\n1\r\nB 56 4\r\n",
                "6\r\n"
            ],
            [
                "96 4\r\n14 8\r\n2\r\nK 92 6\r\nB 100 5\r\n",
                "82\r\n"
            ],
            [
                "90 3\r\n92 2\r\n5\r\nB 29 2\r\nR 14 6\r\nR 13 8\r\nR 57 5\r\nN 31 8\r\n",
                "2\r\n"
            ],
            [
                "30 7\r\n60 5\r\n10\r\nQ 6 2\r\nN 13 5\r\nB 14 7\r\nK 79 7\r\nB 72 5\r\nR 72 8\r\nB 9 2\r\nQ 86 3\r\nB 77 3\r\nB 35 6\r\n",
                "30\r\n"
            ],
            [
                "11088937 4\r\n29363547 1\r\n0\r\n",
                "18274610\r\n"
            ],
            [
                "83020708 4\r\n5492388 1\r\n1\r\nB 38895245 5\r\n",
                "77528320\r\n"
            ],
            [
                "95143966 5\r\n81621229 8\r\n2\r\nQ 78502056 3\r\nN 66214278 3\r\n",
                "13522737\r\n"
            ],
            [
                "46098062 7\r\n15040457 6\r\n5\r\nN 90436682 2\r\nK 96727545 8\r\nB 61781972 8\r\nR 25989705 4\r\nB 17526308 2\r\n",
                "-1\r\n"
            ],
            [
                "23358670 2\r\n66063494 7\r\n10\r\nQ 6368527 4\r\nK 16560033 1\r\nK 31285573 6\r\nN 71005991 2\r\nK 96046883 4\r\nQ 81792533 4\r\nK 95150415 1\r\nQ 25383998 4\r\nR 33434599 1\r\nQ 16818298 8\r\n",
                "-1\r\n"
            ],
            [
                "1 8\r\n1 6\r\n0\r\n",
                "2\r\n"
            ],
            [
                "1 2\r\n1 6\r\n1\r\nN 1 4\r\n",
                "4\r\n"
            ],
            [
                "1 4\r\n1 6\r\n2\r\nK 1 8\r\nN 1 1\r\n",
                "2\r\n"
            ],
            [
                "1 1\r\n1 8\r\n5\r\nN 1 6\r\nB 1 2\r\nB 1 5\r\nB 1 4\r\nR 1 3\r\n",
                "-1\r\n"
            ],
            [
                "1 2\r\n1 4\r\n6\r\nB 1 1\r\nN 1 5\r\nK 1 6\r\nN 1 8\r\nN 1 3\r\nK 1 7\r\n",
                "-1\r\n"
            ],
            [
                "1 1\r\n1 3\r\n6\r\nN 1 4\r\nB 1 2\r\nR 1 8\r\nN 1 5\r\nR 1 6\r\nK 1 7\r\n",
                "-1\r\n"
            ],
            [
                "1 6\r\n1 2\r\n6\r\nN 1 3\r\nB 1 1\r\nQ 1 8\r\nN 1 7\r\nN 1 5\r\nR 1 4\r\n",
                "-1\r\n"
            ],
            [
                "5 7\r\n7 7\r\n0\r\n",
                "2\r\n"
            ],
            [
                "8 1\r\n6 5\r\n1\r\nQ 5 7\r\n",
                "4\r\n"
            ],
            [
                "6 2\r\n3 2\r\n2\r\nK 6 5\r\nK 10 1\r\n",
                "3\r\n"
            ],
            [
                "3 7\r\n1 3\r\n5\r\nQ 2 1\r\nR 8 8\r\nK 4 1\r\nB 1 1\r\nR 7 4\r\n",
                "-1\r\n"
            ],
            [
                "9 8\r\n10 3\r\n10\r\nN 6 8\r\nR 3 2\r\nB 7 4\r\nK 7 6\r\nQ 7 5\r\nK 3 1\r\nR 1 7\r\nQ 8 6\r\nN 2 8\r\nN 1 6\r\n",
                "-1\r\n"
            ],
            [
                "12 8\r\n10 8\r\n0\r\n",
                "2\r\n"
            ],
            [
                "80 2\r\n99 8\r\n1\r\nN 29 1\r\n",
                "19\r\n"
            ],
            [
                "45 4\r\n96 1\r\n2\r\nR 43 8\r\nN 88 7\r\n",
                "51\r\n"
            ],
            [
                "34 3\r\n70 4\r\n5\r\nB 8 4\r\nN 97 4\r\nK 22 6\r\nK 66 3\r\nB 50 5\r\n",
                "36\r\n"
            ],
            [
                "70 7\r\n37 7\r\n10\r\nN 30 6\r\nR 27 2\r\nR 30 1\r\nB 24 4\r\nK 100 3\r\nN 4 6\r\nK 96 2\r\nN 88 6\r\nR 41 5\r\nQ 97 3\r\n",
                "-1\r\n"
            ],
            [
                "84637781 4\r\n60025728 3\r\n0\r\n",
                "24612053\r\n"
            ],
            [
                "51536848 4\r\n36154570 2\r\n1\r\nR 78341318 3\r\n",
                "-1\r\n"
            ],
            [
                "23468619 5\r\n12283411 2\r\n2\r\nQ 93570013 6\r\nK 63172321 1\r\n",
                "11185208\r\n"
            ],
            [
                "19646907 7\r\n90926831 8\r\n5\r\nB 76020689 6\r\nB 33126212 8\r\nQ 72568225 4\r\nQ 27216946 4\r\nB 44262593 3\r\n",
                "-1\r\n"
            ],
            [
                "1940218 2\r\n91692972 1\r\n10\r\nN 72447746 5\r\nQ 48453908 5\r\nB 1488562 5\r\nR 43634948 1\r\nB 15566143 3\r\nR 5546013 4\r\nB 83896336 1\r\nQ 42511226 8\r\nK 49818749 1\r\nK 24145663 8\r\n",
                "-1\r\n"
            ],
            [
                "4 4\r\n100000000 8\r\n16\r\nQ 2 4\r\nB 3 4\r\nQ 6 4\r\nB 5 4\r\nQ 4 2\r\nB 4 3\r\nQ 4 6\r\nB 4 5\r\nQ 2 2\r\nR 3 3\r\nQ 6 6\r\nR 5 5\r\nQ 2 6\r\nR 3 5\r\nQ 6 2\r\nR 5 3\r\n",
                "-1\r\n"
            ]
        ]
    }
]