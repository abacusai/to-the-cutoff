[
    {
        "name": "Wires",
        "description": "Polycarpus has a complex electronic device. The core of this device is a\ncircuit board. The board has \n    10^9\n contact points which are numbered from\n\n    1\n to \n    10^9\n. Also there are \n    n\n wires numbered from \n    1\n to\n\n    n\n, each connecting two distinct contact points on the board. An electric\nsignal can pass between wires \n    A\n and \n    B\n if: either both wires share\nthe same contact point; or there is a sequence of wires starting with \n    A\n\nand ending with \n    B\n, and each pair of adjacent wires in the sequence share\na contact point. The picture shows a circuit board with \n    5\n wires. Contact\npoints with numbers \n    2, 5, 7, 8, 10, 13\n are used. Here an electrical\nsignal can pass from wire \n    2\n to wire \n    3\n, but not to wire \n    1\n.\nCurrently the circuit board is broken. Polycarpus thinks that the board could\nbe fixed if the wires were re-soldered so that a signal could pass between any\npair of wires. It takes \n    1\n minute for Polycarpus to re-solder an end of a\nwire. I.e. it takes one minute to change one of the two contact points for a\nwire. Any contact point from range \n    [1, 10^9]\n can be used as a new\ncontact point. A wire's ends must always be soldered to distinct contact\npoints. Both wire's ends can be re-solded, but that will require two actions\nand will take \n    2\n minutes in total. Find the minimum amount of time\nPolycarpus needs to re-solder wires so that a signal can pass between any pair\nof wires. Also output an optimal sequence of wire re-soldering. Input The\ninput contains one or several test cases. The first input line contains a\nsingle integer \n    t\n \u2014 number of test cases. Then, \n    t\n test cases\nfollow. The first line of each test case contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of wires. The following \n    n\n\nlines describe wires, each line containing two space-separated integers\n\n    x_i, y_i\n (\n    1 \n    \u2264 x_i, y_i \n    \u2264 10^9\n, \n    x_i \n    \u2260 y_i\n) \u2014\ncontact points connected by the \n    i\n-th wire. A couple of contact points\ncan be connected with more than one wire. Sum of values of \n    n\n across all\ntest cases does not exceed \n    10^5\n. Output For each test case first print\none line with a single integer \n    k\n \u2014 the minimum number of minutes needed\nto re-solder wires so that a signal can pass between any pair of wires. In the\nfollowing \n    k\n lines print the description of re-solderings. Each re-\nsoldering should be described by three integers \n    w_j, a_j, b_j\n (\n    1\n    \n    \u2264 w_j \n    \u2264 n\n, \n    1 \n    \u2264 a_j, b_j \n    \u2264 10^9\n). Such triple means\nthat during the \n    j\n-th re-soldering an end of the \n    w_j\n-th wire, which\nwas soldered to contact point \n    a_j\n, becomes soldered to contact point\n\n    b_j\n instead. After each re-soldering of a wire it must connect two\ndistinct contact points. If there are multiple optimal re-solderings, print\nany of them. Example Input 2 1 4 7 4 1 2 2 3 4 5 5 6 Output 0 1 2 3 5\n\n",
        "cf_contest_id": 1250,
        "cf_index": "N",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs",
            "greedy"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [],
        "private_cases": []
    }
]