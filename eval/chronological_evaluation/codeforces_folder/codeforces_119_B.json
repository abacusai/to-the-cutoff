[
    {
        "name": "Before Exam",
        "description": "Vasya is about to take his first university exam in about several minutes. And\nit's not just some ordinary exam, it's on mathematical analysis. Of course,\nright now Vasya can only think of one thing: what the result of his talk with\nthe examiner will be... To prepare for the exam, one has to study proofs of n\ntheorems. It is known that there will be k examination cards on the exam and\neach card contains distinct theorems. Besides, no theorem is mentioned in more\nthan one card (that is, theorems won't be mentioned in any card). During the\nexam several students may get the same card. We do not know the exact way\ntheorems are distributed by cards, however the students that took the exam\nbefore Vasya told him what theorems their cards contained. Vasya evaluates his\nlevel of proficiency in the i-th theorem by some number ai. The level of\nproficiency in some card is the average of the levels of proficiency in the\ntheorems that are included in the card. Now Vasya wants to know the minimally\nand maximally possible levels of his proficiency in the card he gets on the\nexam. Vasya wants to determine it by the data he has collected from other\nstudents. Unfortunately, Vasya has no time left to do the math and he asked\nyou to help him. Input The first line contains two integers n and k (1 \u2264 k \u2264 n\n\u2264 100) \u2014 the number of theorems and the number of cards correspondingly. The\nsecond line contains n integers ai (0 \u2264 ai \u2264 100), the i-th number (1 \u2264 i \u2264 n)\ncorresponds to Vasya's proficiency in the i-th theorem. The third line\ncontains number q (0 \u2264 q \u2264 100) \u2014 the number of people that have taken the\nexam before Vasya. Each of the following q lines contains the description of a\nstudent's card: integers from 1 to n inclusive. They are the numbers of\ntheorems included in the card in the order in which they are enumerated in the\ninput data. The numbers are given in an arbitrary order. It is guaranteed that\nthe given cards are valid (that is, that all theorems in one card are\ndifferent and that different people get cards that either don't contain the\nsame theorems or coincide up to the theorems' permutation). Output Print two\nreal numbers, representing Vasya's minimum and maximum proficiency in the card\nhe will get on the exam. The absolute or relative error should not exceed\n10^-6. Examples Input 7 3 7 15 0 19 10 5 12 2 1 6 7 4 Output 5.0000000000\n15.5000000000 Input 4 2 10 8 1 17 2 2 3 3 2 Output 4.5000000000 13.5000000000\nNote Let's analyze the first sample. Vasya's proficiency in the cards whose\ncontent he already knows equals 6 and 15.5 correspondingly. The three theorems\nthat are left are only enough to make one exam card. If we consider all\npossible variants of theorems included in the card we can see that in the best\ncase scenario Vasya gets the card that contains theorems 4 and 7 (his\nproficiency would equal 15.5) and in the worst case scenario he gets theorems\n3 and 5 (his proficiency would equal 5). The \u230a x\u230b operation denotes taking\ninteger part of real number x (rounding down).\n\n",
        "cf_contest_id": 119,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 3\r\n7 15 0 19 10 5 12\r\n2\r\n1 6\r\n7 4\r\n",
                "5.0 15.5\n"
            ],
            [
                "4 2\r\n10 8 1 17\r\n2\r\n2 3\r\n3 2\r\n",
                "4.5 13.5\n"
            ]
        ],
        "private_cases": [
            [
                "10 5\r\n3 10 0 15 45 84 67 100 46 73\r\n3\r\n1 6\r\n8 9\r\n6 1\r\n",
                "5.0 73.0\n"
            ],
            [
                "8 4\r\n1 2 17 45 23 0 5 5\r\n4\r\n8 7\r\n2 3\r\n1 4\r\n6 5\r\n",
                "5.0 23.0\n"
            ],
            [
                "11 3\r\n60 100 84 74 19 77 36 48 70 18 63\r\n4\r\n3 7 11\r\n5 9 2\r\n2 9 5\r\n8 10 1\r\n",
                "42.0 63.0\n"
            ],
            [
                "9 4\r\n25 0 71 69 12 67 39 4 62\r\n2\r\n2 1\r\n5 7\r\n",
                "12.5 70.0\n"
            ],
            [
                "6 4\r\n85 84 81 33 28 94\r\n3\r\n3\r\n4\r\n6\r\n",
                "28.0 94.0\n"
            ],
            [
                "7 2\r\n4 34 56 0 35 23 2\r\n1\r\n1 2 6\r\n",
                "12.333333333333334 31.0\n"
            ],
            [
                "3 2\r\n1 2 3\r\n2\r\n1\r\n2\r\n",
                "1.0 2.0\n"
            ],
            [
                "1 1\r\n0\r\n1\r\n1\r\n",
                "0.0 0.0\n"
            ],
            [
                "1 1\r\n99\r\n0\r\n",
                "99.0 99.0\n"
            ],
            [
                "5 1\r\n34 0 100 45 3\r\n0\r\n",
                "36.4 36.4\n"
            ],
            [
                "6 1\r\n33 2 7 99 0 0\r\n1\r\n3 6 5 4 1 2\r\n",
                "23.5 23.5\n"
            ],
            [
                "6 6\r\n1 0 46 5 79 4\r\n0\r\n",
                "0.0 79.0\n"
            ],
            [
                "8 8\r\n3 7 74 90 100 74 4 55\r\n6\r\n2\r\n3\r\n4\r\n8\r\n6\r\n7\r\n",
                "3.0 100.0\n"
            ],
            [
                "10 5\r\n0 0 0 0 0 0 0 0 0 0\r\n3\r\n1 2\r\n8 5\r\n2 1\r\n",
                "0.0 0.0\n"
            ],
            [
                "15 4\r\n3 6 15 0 99 100 57 32 67 99 44 10 85 45 37\r\n6\r\n2 3 1\r\n15 13 12\r\n3 1 2\r\n10 9 5\r\n8 4 11\r\n8 4 11\r\n",
                "8.0 88.33333333333333\n"
            ],
            [
                "8 3\r\n45 67 0 98 12 56 93 99\r\n1\r\n4 5\r\n",
                "22.5 96.0\n"
            ],
            [
                "10 4\r\n45 32 0 0 99 73 24 22 81 56\r\n6\r\n4 3\r\n3 4\r\n5 9\r\n4 3\r\n9 5\r\n5 9\r\n",
                "0.0 90.0\n"
            ],
            [
                "10 4\r\n45 32 0 0 99 73 24 22 81 56\r\n2\r\n4 8\r\n1 9\r\n",
                "11.0 86.0\n"
            ],
            [
                "4 1\r\n4 10 0 35\r\n7\r\n1 2 3 4\r\n1 2 4 3\r\n3 2 4 1\r\n4 3 2 1\r\n3 1 4 2\r\n2 4 1 3\r\n4 3 1 2\r\n",
                "12.25 12.25\n"
            ],
            [
                "12 3\r\n4 77 0 90 2 5 74 7 77 100 45 34\r\n3\r\n9 12 1 5\r\n4 3 10 2\r\n11 6 7 8\r\n",
                "29.25 66.75\n"
            ],
            [
                "15 2\r\n56 9 100 86 5 44 3 63 98 23 11 84 56 33 84\r\n1\r\n4 7 6 2 8 3 15\r\n",
                "38.285714285714285 55.57142857142857\n"
            ],
            [
                "19 2\r\n63 18 76 3 18 22 2 49 50 23 13 76 29 36 95 49 78 95 25\r\n5\r\n15 5 3 4 18 17 6 1 8\r\n14 11 2 19 13 7 12 16 9\r\n19 16 13 9 2 11 14 12 7\r\n12 9 11 7 14 2 19 13 16\r\n15 18 17 3 1 5 8 6 4\r\n",
                "33.111111111111114 55.44444444444444\n"
            ],
            [
                "53 27\r\n100 85 0 86 19 32 82 66 54 10 9 81 40 65 23 17 58 68 100 46 28 48 28 11 79 11 36 89 61 11 67 88 79 28 16 93 31 34 54 9 33 45 60 18 23 28 38 71 76 51 10 9 92\r\n20\r\n43\r\n43\r\n14\r\n2\r\n25\r\n31\r\n25\r\n13\r\n48\r\n1\r\n38\r\n46\r\n9\r\n19\r\n30\r\n1\r\n28\r\n19\r\n43\r\n27\r\n",
                "0.0 100.0\n"
            ],
            [
                "10 6\r\n100 100 100 100 100 100 100 100 100 100\r\n6\r\n4\r\n10\r\n2\r\n4\r\n7\r\n5\r\n",
                "100.0 100.0\n"
            ],
            [
                "23 5\r\n30 38 57 63 1 26 11 47 47 95 83 9 61 24 82 82 86 99 90 18 4 5 76\r\n5\r\n2 15 21 13\r\n1 4 9 7\r\n3 8 14 17\r\n23 6 5 11\r\n12 10 22 16\r\n",
                "37.75 53.5\n"
            ],
            [
                "100 3\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 89\r\n0\r\n",
                "0.0 2.696969696969697\n"
            ],
            [
                "100 1\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\r\n0\r\n",
                "1.0 1.0\n"
            ],
            [
                "100 100\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 100\r\n0\r\n",
                "0.0 100.0\n"
            ],
            [
                "100 100\r\n53 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n0\r\n",
                "0.0 53.0\n"
            ],
            [
                "100 1\r\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n0\r\n",
                "0.45 0.45\n"
            ],
            [
                "100 13\r\n45 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n0\r\n",
                "0.0 6.428571428571429\n"
            ],
            [
                "3 2\r\n1 2 3\r\n2\r\n1\r\n1\r\n",
                "1.0 3.0\n"
            ],
            [
                "3 2\r\n1 2 3\r\n4\r\n1\r\n1\r\n2\r\n2\r\n",
                "1.0 2.0\n"
            ],
            [
                "3 2\r\n1 2 3\r\n5\r\n2\r\n2\r\n2\r\n2\r\n2\r\n",
                "1.0 3.0\n"
            ]
        ]
    }
]