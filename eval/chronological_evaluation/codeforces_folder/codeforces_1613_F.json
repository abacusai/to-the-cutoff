[
    {
        "name": "Tree Coloring",
        "description": "You are given a rooted tree consisting of \n    n\n vertices numbered from\n\n    1\n to \n    n\n. The root of the tree is the vertex \n    1\n. You have to\ncolor all vertices of the tree into \n    n\n colors (also numbered from \n    1\n\nto \n    n\n) so that there is exactly one vertex for each color. Let \n    c_i\n\nbe the color of vertex \n    i\n, and \n    p_i\n be the parent of vertex \n    i\n\nin the rooted tree. The coloring is considered beautiful if there is no vertex\n\n    k\n (\n    k > 1\n) such that \n    c_k = c_p_k - 1\n, i. e. no vertex such\nthat its color is less than the color of its parent by exactly \n    1\n.\nCalculate the number of beautiful colorings, and print it modulo\n\n    998244353\n. Input The first line contains one integer \n    n\n (\n    2 \n    \u2264\n    n \n    \u2264 250000\n) \u2014 the number of vertices in the tree. Then \n    n-1\n lines\nfollow, the \n    i\n-th line contains two integers \n    x_i\n and \n    y_i\n\n(\n    1 \n    \u2264 x_i, y_i \n    \u2264 n\n; \n    x_i \n     y_i\n) denoting an edge between\nthe vertex \n    x_i\n and the vertex \n    y_i\n. These edges form a tree. Output\nPrint one integer \u2014 the number of beautiful colorings, taken modulo\n\n    998244353\n. Examples Input 5 1 2 3 2 4 2 2 5 Output 42 Input 5 1 2 2 3 3\n4 4 5 Output 53 Input 20 20 19 20 4 12 4 5 8 1 2 20 7 3 10 7 18 11 8 9 10 17\n10 1 15 11 16 14 11 18 10 10 1 14 2 13 17 20 6 Output 955085064\n\n",
        "cf_contest_id": 1613,
        "cf_index": "F",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "divide and conquer",
            "fft"
        ],
        "time_limit_seconds": 4.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n1 2\r\n3 2\r\n4 2\r\n2 5\r\n",
                "42\r\n"
            ],
            [
                "5\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n",
                "53\r\n"
            ],
            [
                "20\r\n20 19\r\n20 4\r\n12 4\r\n5 8\r\n1 2\r\n20 7\r\n3 10\r\n7 18\r\n11 8\r\n9 10\r\n17 10\r\n1 15\r\n11 16\r\n14 11\r\n18 10\r\n10 1\r\n14 2\r\n13 17\r\n20 6\r\n",
                "955085064\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 2\r\n2 3\r\n",
                "3\r\n"
            ],
            [
                "4\r\n1 3\r\n3 2\r\n4 3\r\n",
                "10\r\n"
            ],
            [
                "5\r\n3 4\r\n2 5\r\n2 1\r\n4 1\r\n",
                "50\r\n"
            ],
            [
                "6\r\n2 4\r\n3 1\r\n1 2\r\n3 6\r\n5 4\r\n",
                "298\r\n"
            ],
            [
                "7\r\n7 4\r\n5 7\r\n1 3\r\n2 3\r\n6 2\r\n1 4\r\n",
                "2066\r\n"
            ],
            [
                "8\r\n4 5\r\n3 2\r\n8 1\r\n5 6\r\n3 1\r\n2 6\r\n7 3\r\n",
                "16080\r\n"
            ],
            [
                "9\r\n4 8\r\n5 4\r\n3 2\r\n9 6\r\n1 2\r\n9 2\r\n8 9\r\n5 7\r\n",
                "144144\r\n"
            ],
            [
                "10\r\n10 6\r\n9 6\r\n5 6\r\n2 4\r\n5 4\r\n1 8\r\n4 7\r\n6 3\r\n1 10\r\n",
                "1383120\r\n"
            ]
        ]
    }
]