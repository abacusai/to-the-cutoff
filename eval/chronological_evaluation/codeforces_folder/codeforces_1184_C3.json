[
    {
        "name": "Heidi and the Turing Test (Hard)",
        "description": "The Cybermen have again outwitted the Daleks! Unfortunately, this time the\nDaleks decided to abandon these tasks altogether, which means the Doctor has\nto deal with them. The Doctor can handle the Daleks on his own, but Heidi now\nhas to make sure that the Cybermen are kept busy with this next task. There\nare \n    k\n rings on a plane. For each ring, \n    n\n points are uniformly\nsampled with a small random noise. The task is to recover the rings given only\nthe noisy samples. The rings and the samples are generated as follows. The\ncenter of a ring is uniformly sampled from a disk of radius\n\n    1\n     000\n     000\n centered at the origin, and the radius of the ring is\nuniformly sampled from \n    [250\n     000, 750\n     000]\n. Let \n    R\n be a ring\nwith center \n    (x, y)\n and radius \n    r\n. To sample a point from \n    R\n,\nan angle \n    \u03b8\n is uniformly sampled from \n    [0, 2\n    \u03c0]\n and a\ndistance \n    d\n is uniformly sampled from \n    [0.9r, 1.1r]\n. The coordinates\nof the sampled point are then \n    (x+d\n    cos(\n    \u03b8), y+d\n    sin(\n    \u03b8))\n\nrounded to the closest integers. The distance between rings is measured by\ntheir Hausdorff distance. In our case, the distance between two rings \n    R_1,\n    R_2\n can be written as follow. Let \n    d\n be the distance between the two\ncenters and \n    r_1, r_2\n be the radii. Then the distance is \n    \n\n    dist(R_1,\n    R_2)=\n    max(\n    min(d_\u2013, d_-+),\n    min(d_+-, d_++), \n    min(d_\u2013,\n    d_+-), \n    min(d_-+, d_++))\n\n    \n, where \n    d_++=|d+r_1+r_2|\n,\n\n    d_+-=|d+r_1-r_2|\n, \n    d_-+=|d-r_1+r_2|\n, \n    d_\u2013=|d-r_1-r_2|\n.\nWe say that a ring \n    R_0\n is recovered if one of the rings \n    R\n in the\noutput has Hausdorff distance less than \n    100\n     000\n from \n    R_0\n. An\noutput is accepted if all the rings are recovered. It is guaranteed that the\ndistances between any two rings is greater than \n    600\n     000\n. Remember\nthat a human can very easily solve this task, so make sure that no human\ntraitors are helping the Cybermen complete this task. Input The first line\ncontains an integer \n    k\n (\n    1 \n    \u2264 k \n    \u2264 4\n), the number of rings.\nThe second line contains an integer \n    n\n (\n    100 \n    \u2264 n \n    \u2264\n    1\n     000\n), the number of samples per ring. The following \n    n \n    \u00d7 k\n\nlines contain the samples, one sample per line. Each line contains a pair of\nintegers \n    x_i, y_i\n, where \n    (x_i, y_i)\n are the coordinates of the\n\n    i\n-th sample. Output Print \n    k\n lines, each describing a single ring.\nFor each line, print three real numbers \n    x_i, y_i, r_i\n, where \n    (x_i,\n    y_i)\n and \n    r_i\n are the coordinates and the radius of the \n    i\n-th\nring. The order of the rings does not matter. Note Here is how one of tests\nwith \n    k=4\n and \n    n=100\n looks like. You can download the sample input\nand output here.\n\n",
        "cf_contest_id": 1184,
        "cf_index": "C3",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 15.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]