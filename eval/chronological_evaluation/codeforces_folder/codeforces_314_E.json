[
    {
        "name": "Sereja and Squares",
        "description": "Sereja painted n points on the plane, point number i (1 \u2264 i \u2264 n) has\ncoordinates (i, 0). Then Sereja marked each point with a small or large\nEnglish letter. Sereja don't like letter \"x\", so he didn't use it to mark\npoints. Sereja thinks that the points are marked beautifully if the following\nconditions holds: all points can be divided into pairs so that each point will\nbelong to exactly one pair; in each pair the point with the lesser abscissa\nwill be marked with a small English letter and the point with the larger\nabscissa will be marked with the same large English letter; if we built a\nsquare on each pair, the pair's points will be the square's opposite points\nand the segment between them will be the square's diagonal, then among the\nresulting squares there won't be any intersecting or touching ones. Little\nPetya erased some small and all large letters marking the points. Now Sereja\nwonders how many ways are there to return the removed letters so that the\npoints were marked beautifully. Input The first line contains integer n the\nnumber of points (1 \u2264 n \u2264 10^5). The second line contains a sequence\nconsisting of n small English letters and question marks \u2014 the sequence of\nletters, that mark points, in order of increasing x-coordinate of points.\nQuestion marks denote the points without letters (Petya erased them). It is\nguaranteed that the input string doesn't contain letter \"x\". Output In a\nsingle line print the answer to the problem modulo 4294967296. If there is no\nway to return the removed letters, print number 0. Please, do not write the\n\nthe cin, cout streams or the \nInput 4 abc? Output 0 Input 6 abc??? Output 1\n\n",
        "cf_contest_id": 314,
        "cf_index": "E",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\na???\r\n",
                "50"
            ],
            [
                "4\r\nabc?\r\n",
                "0"
            ],
            [
                "6\r\nabc???\r\n",
                "1"
            ]
        ],
        "private_cases": [
            [
                "40\r\n????c???????????s?m?u?????g?????????????\r\n",
                "31630997"
            ],
            [
                "50\r\nbn?????ehs??s??????????u???c?d????p???????????????\r\n",
                "143532660"
            ],
            [
                "60\r\n??e????????????l??d?????h?????f?o????????m?o?h?????????r????\r\n",
                "558967593"
            ],
            [
                "70\r\n???????m??????h?e?????????c????iuzu???t????r??cy?????????fz?b?????????\r\n",
                "2246777452"
            ],
            [
                "80\r\n??????????hg????o??????????????????????d??????????????c?????????e???????????????\r\n",
                "829067603"
            ],
            [
                "90\r\n???????y??????w?g?s?????n?r?g?h???h?g?????a??????a?????hg???a????????al????r?n??????n?u???\r\n",
                "2939639898"
            ],
            [
                "100\r\n?c?a???d?am???s??o?f?vj?o?v??y?f?a??y?n?o?wuf????v???z????s??w???bc??l?m?u?d?o?o?e?c???h?e?j??j?l???\r\n",
                "690018832"
            ],
            [
                "139\r\nkvaa?ebgynsibvyim?rdig?ln?lbwefv?aipiwdc?bqf?vghkkhtr?ifu??w?nka??oonzszbfvv???hyhyqofm?jnpnczrnk?m?hqhmkywap?vf?g?whdy?meo?ngvizmachnaw??j\r\n",
                "0\r\n"
            ],
            [
                "8\r\naaaa????\r\n",
                "1"
            ],
            [
                "8\r\naaaaaaaa\r\n",
                "0"
            ]
        ]
    }
]