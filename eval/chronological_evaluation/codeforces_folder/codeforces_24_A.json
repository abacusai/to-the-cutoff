[
    {
        "name": "Ring road",
        "description": "Nowadays the one-way traffic is introduced all over the world in order to\nimprove driving safety and reduce traffic jams. The government of Berland\ndecided to keep up with new trends. Formerly all n cities of Berland were\nconnected by n two-way roads in the ring, i. e. each city was connected\ndirectly to exactly two other cities, and from each city it was possible to\nget to any other city. Government of Berland introduced one-way traffic on all\nn roads, but it soon became clear that it's impossible to get from some of the\ncities to some others. Now for each road is known in which direction the\ntraffic is directed at it, and the cost of redirecting the traffic. What is\nthe smallest amount of money the government should spend on the redirecting of\nroads so that from every city you can get to any other? Input The first line\ncontains integer n (3 \u2264 n \u2264 100) \u2014 amount of cities (and roads) in Berland.\nNext n lines contain description of roads. Each road is described by three\nintegers ai, bi, ci (1 \u2264 ai, bi \u2264 n, ai \u2260 bi, 1 \u2264 ci \u2264 100) \u2014 road is directed\nfrom city ai to city bi, redirecting the traffic costs ci. Output Output\nsingle integer \u2014 the smallest amount of money the government should spend on\nthe redirecting of roads so that from every city you can get to any other.\nExamples Input 3 1 3 1 1 2 1 3 2 1 Output 1 Input 3 1 3 1 1 2 5 3 2 1 Output 2\nInput 6 1 5 4 5 3 8 2 4 15 1 6 16 2 3 23 4 6 42 Output 39 Input 4 1 2 9 2 3 8\n3 4 7 4 1 5 Output 0\n\n",
        "cf_contest_id": 24,
        "cf_index": "A",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 3 1\r\n1 2 1\r\n3 2 1\r\n",
                "1\r\n"
            ],
            [
                "3\r\n1 3 1\r\n1 2 5\r\n3 2 1\r\n",
                "2\r\n"
            ],
            [
                "6\r\n1 5 4\r\n5 3 8\r\n2 4 15\r\n1 6 16\r\n2 3 23\r\n4 6 42\r\n",
                "39\r\n"
            ],
            [
                "4\r\n1 2 9\r\n2 3 8\r\n3 4 7\r\n4 1 5\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n5 3 89\r\n2 3 43\r\n4 2 50\r\n1 4 69\r\n1 5 54\r\n",
                "143\r\n"
            ],
            [
                "10\r\n1 8 16\r\n6 1 80\r\n6 5 27\r\n5 7 86\r\n7 9 72\r\n4 9 20\r\n4 3 54\r\n3 2 57\r\n10 2 61\r\n8 10 90\r\n",
                "267\r\n"
            ],
            [
                "17\r\n8 12 43\r\n13 12 70\r\n7 13 68\r\n11 7 19\r\n5 11 24\r\n5 1 100\r\n4 1 10\r\n3 4 68\r\n2 3 46\r\n15 2 58\r\n15 6 38\r\n6 9 91\r\n9 10 72\r\n14 10 32\r\n14 17 97\r\n17 16 67\r\n8 16 40\r\n",
                "435\r\n"
            ],
            [
                "22\r\n18 22 46\r\n18 21 87\r\n5 21 17\r\n5 10 82\r\n10 12 81\r\n17 12 98\r\n16 17 17\r\n16 13 93\r\n4 13 64\r\n4 11 65\r\n15 11 18\r\n6 15 35\r\n6 7 61\r\n7 19 12\r\n19 1 65\r\n8 1 32\r\n8 2 46\r\n9 2 19\r\n9 3 58\r\n3 14 65\r\n20 14 67\r\n20 22 2\r\n",
                "413\r\n"
            ],
            [
                "3\r\n3 1 1\r\n2 1 1\r\n2 3 1\r\n",
                "1\r\n"
            ]
        ]
    }
]