[
    {
        "name": "Submarine in the Rybinsk Sea (hard edition)",
        "description": "This problem differs from the previous one only in the absence of the\nconstraint on the equal length of all numbers \n    a_1, a_2, \n    \u2026, a_n\n. A\nteam of SIS students is going to make a trip on a submarine. Their target is\nan ancient treasure in a sunken ship lying on the bottom of the Great Rybinsk\nsea. Unfortunately, the students don't know the coordinates of the ship, so\nthey asked Meshanya (who is a hereditary mage) to help them. He agreed to help\nthem, but only if they solve his problem. Let's denote a function that\nalternates digits of two numbers \n    f(a_1 a_2 \n    \u2026 a_p - 1 a_p, b_1 b_2\n    \n    \u2026 b_q - 1 b_q)\n, where \n    a_1 \n    \u2026 a_p\n and \n    b_1 \n    \u2026\n    b_q\n are digits of two integers written in the decimal notation without\nleading zeros. In other words, the function \n    f(x, y)\n alternately shuffles\nthe digits of the numbers \n    x\n and \n    y\n by writing them from the lowest\ndigits to the older ones, starting with the number \n    y\n. The result of the\nfunction is also built from right to left (that is, from the lower digits to\nthe older ones). If the digits of one of the arguments have ended, then the\nremaining digits of the other argument are written out. Familiarize with\nexamples and formal definitions of the function below. For example:\n\n    \n\n    f(1111, 2222) = 12121212\n\n    \n \n    \n\n    f(7777, 888) = 7787878\n\n    \n\n\n    \n\n    f(33, 44444) = 4443434\n\n    \n \n    \n\n    f(555, 6) = 5556\n\n    \n \n    \n\n    f(111,\n    2222) = 2121212\n\n    \n Formally, if \n    p \n    \u2265 q\n then \n    f(a_1 \n    \u2026 a_p,\n    b_1 \n    \u2026 b_q) = a_1 a_2 \n    \u2026 a_p - q + 1 b_1 a_p - q + 2 b_2 \n    \u2026\n    a_p - 1 b_q - 1 a_p b_q\n; if \n    p < q\n then \n    f(a_1 \n    \u2026 a_p, b_1\n    \n    \u2026 b_q) = b_1 b_2 \n    \u2026 b_q - p a_1 b_q - p + 1 a_2 \n    \u2026 a_p -\n    1 b_q - 1 a_p b_q\n. Mishanya gives you an array consisting of \n    n\n\nintegers \n    a_i\n, your task is to help students to calculate \n    \u2211_i =\n    1^n\n    \u2211_j = 1^n f(a_i, a_j)\n modulo \n    998\n     244\n     353\n. Input\nThe first line of the input contains a single integer \n    n\n (\n    1 \n    \u2264 n\n    \n    \u2264 100\n     000\n) \u2014 the number of elements in the array. The second line of\nthe input contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264\n    a_i \n    \u2264 10^9\n) \u2014 the elements of the array. Output Print the answer modulo\n\n    998\n     244\n     353\n. Examples Input 3 12 3 45 Output 12330 Input 2 123 456\nOutput 1115598\n\n",
        "cf_contest_id": 1195,
        "cf_index": "D2",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n12 3 45\r\n",
                "12330\r\n"
            ],
            [
                "2\r\n123 456\r\n",
                "1115598\r\n"
            ]
        ],
        "private_cases": [
            [
                "20\r\n80 9 55 1 98 29 81 10 96 100 70 87 86 12 58 82 10 22 59 13\r\n",
                "2248760\r\n"
            ],
            [
                "100\r\n3615 1436 2205 5695 9684 7621 391 1579 557 420 1756 5265 247 5494 3509 6089 2931 7372 4939 8030 2901 1150 5389 7168 6213 2723 4301 7250 3857 9178 4723 1932 1161 1412 8200 5226 1474 3495 9533 8555 6372 1517 8034 6547 1148 9651 2399 3065 9675 3418 7758 3226 9844 4234 510 7652 162 8010 8162 2732 2112 4041 3392 6344 671 4120 4659 7718 8660 7102 9098 6195 6999 9411 6710 2261 4388 7125 3808 978 398 9286 1280 7382 1095 8203 5687 9281 3722 8159 470 5735 4210 3694 2197 5422 816 7546 9965 2963\r\n",
                "674832474\r\n"
            ],
            [
                "20\r\n4 53 9 79 47 2 64 98 51 82 14 30 77 41 69 4 37 85 81 62\r\n",
                "1675580\r\n"
            ],
            [
                "1\r\n123767132\r\n",
                "116407724\r\n"
            ],
            [
                "100\r\n463 6421 2912 1546 3999 5175 4357 2259 7380 6081 1148 7857 3532 4168 5643 8819 2568 6681 975 9216 4590 5217 6215 7422 6631 1651 39 4268 8290 2022 3175 8281 1552 980 9314 234 934 5133 6712 1880 2766 5042 5004 5455 6038 6010 6022 1553 4015 4544 3985 4033 223 7682 6302 2121 4832 3956 9872 8340 5327 6763 2063 6708 4733 8339 2933 8477 7857 6074 1299 5768 3029 7138 8653 9121 6901 6803 5306 9098 6803 2902 9941 3926 3269 5739 3823 7278 3413 5796 4346 9968 3024 3416 7311 9307 4840 2545 2041 5300\r\n",
                "495837625\r\n"
            ],
            [
                "20\r\n28 98 66 48 1 74 39 86 11 68 57 82 71 78 96 21 51 35 3 11\r\n",
                "1899280\r\n"
            ],
            [
                "20\r\n56 42 16 26 62 47 23 74 70 47 97 26 65 12 15 38 78 97 21 52\r\n",
                "1934680\r\n"
            ],
            [
                "20\r\n76 86 70 7 16 24 10 62 26 29 40 65 55 49 34 55 92 47 43 100\r\n",
                "2178920\r\n"
            ],
            [
                "100\r\n7039 7577 5463 7876 8938 6398 2374 5567 521 1898 8004 5009 6146 7735 8024 4006 4845 9123 2957 2271 6649 7439 5602 1551 70 1443 8522 2111 8170 2152 3949 714 6557 7548 309 9826 3500 866 9474 1769 3961 6927 6519 1001 7849 8030 1914 7309 7589 6077 3576 4981 5642 8862 3406 4886 5945 4631 4017 536 5815 8850 2727 918 2702 6974 5148 3841 3259 2940 6750 8686 2718 1922 5586 3395 3549 6220 6653 782 9952 7446 2907 2206 7926 2579 4555 1928 5663 9273 7408 2851 5713 8355 1106 812 5732 6398 3099 2579\r\n",
                "906817803\r\n"
            ],
            [
                "100\r\n6591 1074 3466 3728 549 5440 533 3543 1536 2967 1587 304 6326 6410 8670 6736 4482 8431 1697 9264 8338 2995 3725 1805 488 4563 4261 6025 2602 1892 9297 4359 1139 7117 1423 4834 5663 7912 1245 9287 3059 8964 785 2614 4226 7093 5537 7285 1929 4499 9803 7277 212 2311 9198 9355 6422 577 9919 4656 1734 85 4102 3986 956 7000 4910 1897 6648 9208 3144 2850 6044 3842 232 256 653 90 3959 1606 550 9846 1567 8750 2804 7411 9986 7221 1163 9615 1284 7084 7631 1181 6220 505 9756 8692 7879 4916\r\n",
                "167137718\r\n"
            ],
            [
                "100\r\n15 7214 8212 3205 5610 4217 5220 235 5691 7149 2027 7344 6416 139 481 4653 4909 8693 9715 6209 2087 6580 1234 6189 7049 580 8482 886 19 1763 5819 4630 9238 549 6236 7946 4585 5283 1187 2501 9159 4375 2374 7068 8223 8177 9645 8825 2547 5669 8725 6329 601 1131 9390 9293 8013 7198 5774 2460 3949 2190 3437 1264 2988 8366 5399 8021 1247 2342 3501 1149 9059 6354 9108 8686 9813 673 6804 7218 7400 8006 9002 3574 9635 3275 1958 9867 8912 9241 5518 1497 4943 1650 937 5895 8865 7544 6821 340\r\n",
                "666837072\r\n"
            ]
        ]
    }
]