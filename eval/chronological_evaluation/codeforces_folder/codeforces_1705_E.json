[
    {
        "name": "Mark and Professor Koro",
        "description": "After watching a certain anime before going to sleep, Mark dreams of standing\nin an old classroom with a blackboard that has a sequence of \n    n\n positive\nintegers \n    a_1, a_2,\n    \u2026,a_n\n on it. Then, professor Koro comes in. He\ncan perform the following operation: select an integer \n    x\n that appears at\nleast \n    2\n times on the board, erase those \n    2\n appearances, and write\n\n    x+1\n on the board. Professor Koro then asks Mark the question, \"what is\nthe maximum possible number that could appear on the board after some\noperations?\" Mark quickly solves this question, but he is still slower than\nprofessor Koro. Thus, professor Koro decides to give Mark additional\nchallenges. He will update the initial sequence of integers \n    q\n times.\nEach time, he will choose positive integers \n    k\n and \n    l\n, then change\n\n    a_k\n to \n    l\n. After each update, he will ask Mark the same question\nagain. Help Mark answer these questions faster than Professor Koro! Note that\nthe updates are persistent. Changes made to the sequence \n    a\n will apply\nwhen processing future updates. Input The first line of the input contains two\nintegers \n    n\n and \n    q\n (\n    2\n    \u2264 n\n    \u2264 2\n    \u00b7 10^5\n, \n    1\n    \u2264\n    q\n    \u2264 2\n    \u00b7 10^5\n) \u2014 the length of the sequence \n    a\n and the number\nof updates, respectively. The second line contains \n    n\n integers\n\n    a_1,a_2,\n    \u2026,a_n\n (\n    1\n    \u2264 a_i\n    \u2264 2\n    \u00b7 10^5\n) Then,\n\n    q\n lines follow, each consisting of two integers \n    k\n and \n    l\n\n(\n    1\n    \u2264 k\n    \u2264 n\n, \n    1\n    \u2264 l\n    \u2264 2\n    \u00b7 10^5\n), telling to\nupdate \n    a_k\n to \n    l\n. Output Print \n    q\n lines. The \n    i\n-th line\nshould consist of a single integer \u2014 the answer after the \n    i\n-th update.\nExamples Input 5 4 2 2 2 4 5 2 3 5 3 4 1 1 4 Output 6 5 4 5 Input 2 1 200000 1\n2 200000 Output 200001 Note In the first example test, the program must\nproceed through \n    4\n updates. The sequence after the first update is\n\n    [2,3,2,4,5]\n. One sequence of operations that achieves the number \n    6\n\nthe following. Initially, the blackboard has numbers \n    [2,3,2,4,5]\n. Erase\ntwo copies of \n    2\n and write \n    3\n, yielding\n\n    [3,4,5,\n    3]\n. Erase two copies of \n    3\n and write \n    4\n,\nyielding \n    [4,5,\n    4]\n. Erase two copies of \n    4\n and write\n\n    5\n, yielding \n    [5,\n    5]\n. Erase two copies of \n    5\n and\nwrite \n    6\n, yielding \n    [\n    6]\n. Then, in the second update,\nthe array is changed to \n    [2,3,2,4,3]\n. This time, Mark cannot achieve\n\n    6\n. However, one sequence that Mark can use to achieve \n    5\n is shown\nbelow. Initially, the blackboard has \n    [2,3,2,4,3]\n. Erase two copies of\n\n    2\n and write \n    3\n, yielding \n    [3,4,3,\n    3]\n. Erase two\ncopies of \n    3\n and write \n    4\n, yielding \n    [3,4,\n    4]\n.\nErase two copies of \n    4\n and write \n    5\n, yielding\n\n    [3,\n    5]\n. In the third update, the array is changed to\n\n    [2,3,2,1,3]\n. One way to achieve \n    4\n is shown below. Initially, the\nblackboard has \n    [2,3,2,1,3]\n. Erase two copies of \n    3\n and write\n\n    4\n, yielding \n    [2,2,1,\n    4]\n.\n\n",
        "cf_contest_id": 1705,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "bitmasks",
            "brute force",
            "combinatorics",
            "data structures",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4\r\n2 2 2 4 5\r\n2 3\r\n5 3\r\n4 1\r\n1 4\r\n",
                "6\r\n5\r\n4\r\n5\r\n"
            ],
            [
                "2 1\r\n200000 1\r\n2 200000\r\n",
                "200001\r\n"
            ]
        ],
        "private_cases": []
    }
]