[
    {
        "name": "Returning Home",
        "description": "Yura has been walking for some time already and is planning to return home. He\nneeds to get home as fast as possible. To do this, Yura can use the instant-\nmovement locations around the city. Let's represent the city as an area of\n\n    n \n    \u00d7 n\n square blocks. Yura needs to move from the block with\ncoordinates \n    (s_x,s_y)\n to the block with coordinates \n    (f_x,f_y)\n. In\none minute Yura can move to any neighboring by side block; in other words, he\ncan move in four directions. Also, there are \n    m\n instant-movement\nlocations in the city. Their coordinates are known to you and Yura. Yura can\nmove to an instant-movement location in no time if he is located in a block\nwith the same coordinate \n    x\n or with the same coordinate \n    y\n as the\nlocation. Help Yura to find the smallest time needed to get home. Input The\nfirst line contains two integers \n    n\n and \n    m\n \u2014 the size of the city\nand the number of instant-movement locations (\n    1 \n    \u2264 n \n    \u2264 10^9\n, \n    0\n    \n    \u2264 m \n    \u2264 10^5\n). The next line contains four integers \n    s_x\n\n\n    s_y\n \n    f_x\n \n    f_y\n \u2014 the coordinates of Yura's initial position and\nthe coordinates of his home (\n    1 \n    \u2264 s_x, s_y, f_x, f_y \n    \u2264 n\n). Each\nof the next \n    m\n lines contains two integers \n    x_i\n \n    y_i\n \u2014\ncoordinates of the \n    i\n-th instant-movement location (\n    1 \n    \u2264 x_i, y_i\n    \n    \u2264 n\n). Output In the only line print the minimum time required to get\nhome. Examples Input 5 3 1 1 5 5 1 2 4 1 3 3 Output 5 Input 84 5 67 59 41 2 39\n56 7 2 15 3 74 18 22 7 Output 42 Note In the first example Yura needs to reach\n\n    (5, 5)\n from \n    (1, 1)\n. He can do that in \n    5\n minutes by first\nusing the second instant-movement location (because its \n    y\n coordinate is\nequal to Yura's \n    y\n coordinate), and then walking \n    (4, 1) \n    \u2192 (4, 2)\n    \n    \u2192 (4, 3) \n    \u2192 (5, 3) \n    \u2192 (5, 4) \n    \u2192 (5, 5)\n.\n\n",
        "cf_contest_id": 1422,
        "cf_index": "D",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "graphs",
            "shortest paths",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 3\r\n1 1 5 5\r\n1 2\r\n4 1\r\n3 3\r\n",
                "5\r\n"
            ],
            [
                "84 5\r\n67 59 41 2\r\n39 56\r\n7 2\r\n15 3\r\n74 18\r\n22 7\r\n",
                "42\r\n"
            ]
        ],
        "private_cases": [
            [
                "88294752 4\r\n35290308 52335089 69408342 32650662\r\n53981397 84728746\r\n56670292 81664574\r\n16110353 77620219\r\n45476005 495904\r\n",
                "53802461\r\n"
            ],
            [
                "41323044 1\r\n28208465 38217978 31290636 25974675\r\n39500641 36959975\r\n",
                "15325474\r\n"
            ],
            [
                "40173958 3\r\n16116682 7224989 33857761 5761096\r\n26986287 15349000\r\n23222390 8295154\r\n5574952 21081873\r\n",
                "14239594\r\n"
            ],
            [
                "49397978 9\r\n35828361 4692148 30832063 21157937\r\n38015170 25815246\r\n25302604 1245031\r\n35710367 30096200\r\n20411634 24957987\r\n31626304 14768886\r\n43944112 42021291\r\n14679371 40895905\r\n18936340 12122304\r\n48071293 32576660\r\n",
                "11385349\r\n"
            ],
            [
                "995078784 16\r\n623812784 347467913 233267735 582455459\r\n306396207 277980472\r\n78770458 786182235\r\n815219022 611815511\r\n786044046 363376661\r\n290398527 925153345\r\n846155104 388600335\r\n91118406 155695413\r\n287078777 918827034\r\n432395923 126620751\r\n52941102 329010981\r\n237509699 743843421\r\n556130019 602129300\r\n441860811 912490531\r\n65845315 380971409\r\n575577330 104368064\r\n962688269 452922228\r\n",
                "252255028\r\n"
            ],
            [
                "1000 0\r\n1000 1 1 1000\r\n",
                "1998\r\n"
            ],
            [
                "1000000000 0\r\n1 1000000000 1000000000 1\r\n",
                "1999999998\r\n"
            ],
            [
                "1 0\r\n1 1 1 1\r\n",
                "0\r\n"
            ]
        ]
    }
]