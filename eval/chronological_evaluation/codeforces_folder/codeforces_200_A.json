[
    {
        "name": "Cinema",
        "description": "The capital of Berland has the only movie theater in the country. Besides, it\nconsists of only one room. The room is divided into n rows, each row consists\nof m seats. There are k people lined up to the box office, each person wants\nto buy exactly one ticket for his own entertainment. Before the box office\nstarted selling tickets, each person found the seat that seemed best for him\nand remembered it as a pair of coordinates (xi, yi), where xi is the row\nnumber, and yi is the seat number in this row. It is possible that some people\nhave chosen the same place, then when some people see their favorite seat\ntaken in the plan of empty seats in the theater, they choose and buy a ticket\nto another place. Each of them has the following logic: let's assume that he\noriginally wanted to buy a ticket to seat (x1, y1), then when he comes to the\nbox office, he chooses such empty seat (x2, y2), which satisfies the following\nconditions: the value of |x1 - x2| + |y1 - y2| is minimum if the choice is not\nunique, then among the seats that satisfy the first condition, this person\nselects the one for which the value of x2 is minimum if the choice is still\nnot unique, among the seats that satisfy the first and second conditions, this\nperson selects the one for which the value of y2 is minimum Your task is to\nfind the coordinates of a seat for each person. Input The first input line\ncontains three integers n, m, k (1 \u2264 n, m \u2264 2000, 1 \u2264 k \u2264 min(n\u00b7m, 10^5) \u2014 the\nnumber of rows in the room, the number of seats in each row and the number of\npeople in the line, correspondingly. Each of the next k lines contains two\nintegers xi, yi (1 \u2264 xi \u2264 n, 1 \u2264 yi \u2264 m) \u2014 the coordinates of the seat each\nperson has chosen. Numbers on the same line are separated by a space. The\npairs of coordinates are located in the order, in which people stand in the\nline, starting from the head (the first person in the line who stands in front\nof the box office) to the tail (the last person in the line). Output Print k\nlines, each containing a pair of integers. Print on the i-th line xi, yi \u2014 the\ncoordinates of the seat, for which the person who stands i-th in the line will\nbuy the ticket. Examples Input 3 4 6 1 1 1 1 1 1 1 2 1 3 1 3 Output 1 1 1 2 2\n1 1 3 1 4 2 3 Input 4 3 12 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\nOutput 2 2 1 2 2 1 2 3 3 2 1 1 1 3 3 1 3 3 4 2 4 1 4 3\n\n",
        "cf_contest_id": 200,
        "cf_index": "A",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 4 6\r\n1 1\r\n1 1\r\n1 1\r\n1 2\r\n1 3\r\n1 3\r\n",
                "1 1\r\n1 2\r\n2 1\r\n1 3\r\n1 4\r\n2 3\r\n"
            ],
            [
                "4 3 12\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n",
                "2 2\r\n1 2\r\n2 1\r\n2 3\r\n3 2\r\n1 1\r\n1 3\r\n3 1\r\n3 3\r\n4 2\r\n4 1\r\n4 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 1\r\n1 1\r\n",
                "1 1\r\n"
            ],
            [
                "2 2 4\r\n1 2\r\n1 2\r\n1 2\r\n1 2\r\n",
                "1 2\r\n1 1\r\n2 2\r\n2 1\r\n"
            ],
            [
                "3 3 9\r\n1 3\r\n2 3\r\n2 3\r\n2 1\r\n3 2\r\n3 2\r\n1 3\r\n2 3\r\n2 1\r\n",
                "1 3\r\n2 3\r\n2 2\r\n2 1\r\n3 2\r\n3 1\r\n1 2\r\n3 3\r\n1 1\r\n"
            ],
            [
                "5 3 7\r\n4 3\r\n4 1\r\n5 1\r\n4 2\r\n2 2\r\n1 2\r\n2 1\r\n",
                "4 3\r\n4 1\r\n5 1\r\n4 2\r\n2 2\r\n1 2\r\n2 1\r\n"
            ],
            [
                "9 9 50\r\n4 3\r\n7 5\r\n1 3\r\n4 2\r\n7 6\r\n3 8\r\n8 1\r\n6 2\r\n6 8\r\n3 2\r\n8 7\r\n4 5\r\n2 5\r\n1 7\r\n7 1\r\n5 7\r\n5 7\r\n3 5\r\n1 3\r\n8 9\r\n2 8\r\n5 6\r\n2 1\r\n2 1\r\n3 1\r\n3 7\r\n9 1\r\n6 4\r\n3 4\r\n8 7\r\n7 2\r\n3 8\r\n2 9\r\n5 2\r\n7 9\r\n5 6\r\n9 5\r\n1 4\r\n8 4\r\n1 2\r\n1 4\r\n3 9\r\n9 7\r\n8 7\r\n8 4\r\n5 3\r\n8 1\r\n3 5\r\n7 2\r\n2 6\r\n",
                "4 3\r\n7 5\r\n1 3\r\n4 2\r\n7 6\r\n3 8\r\n8 1\r\n6 2\r\n6 8\r\n3 2\r\n8 7\r\n4 5\r\n2 5\r\n1 7\r\n7 1\r\n5 7\r\n4 7\r\n3 5\r\n1 2\r\n8 9\r\n2 8\r\n5 6\r\n2 1\r\n1 1\r\n3 1\r\n3 7\r\n9 1\r\n6 4\r\n3 4\r\n7 7\r\n7 2\r\n3 9\r\n2 9\r\n5 2\r\n7 9\r\n4 6\r\n9 5\r\n1 4\r\n8 4\r\n2 2\r\n1 5\r\n4 9\r\n9 7\r\n8 6\r\n7 4\r\n5 3\r\n8 2\r\n3 6\r\n7 3\r\n2 6\r\n"
            ]
        ]
    }
]