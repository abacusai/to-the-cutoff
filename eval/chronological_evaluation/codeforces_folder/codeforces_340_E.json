[
    {
        "name": "Iahub and Permutations",
        "description": "Iahub is so happy about inventing bubble sort graphs that he's staying all day\nlong at the office and writing permutations. Iahubina is angry that she is no\nmore important for Iahub. When Iahub goes away, Iahubina comes to his office\nand sabotage his research work. The girl finds an important permutation for\nthe research. The permutation contains n distinct integers a1, a2, ..., an (1\n\u2264 ai \u2264 n). She replaces some of permutation elements with -1 value as a\nrevenge. When Iahub finds out his important permutation is broken, he tries to\nrecover it. The only thing he remembers about the permutation is it didn't\nhave any fixed point. A fixed point for a permutation is an element ak which\nhas value equal to k (ak = k). Your job is to proof to Iahub that trying to\nrecover it is not a good idea. Output the number of permutations which could\nbe originally Iahub's important permutation, modulo 1000000007 (10^9 + 7).\nInput The first line contains integer n (2 \u2264 n \u2264 2000). On the second line,\nthere are n integers, representing Iahub's important permutation after\nIahubina replaces some values with -1. It's guaranteed that there are no fixed\npoints in the given permutation. Also, the given sequence contains at least\ntwo numbers -1 and each positive number occurs in the sequence at most once.\nIt's guaranteed that there is at least one suitable permutation. Output Output\na single integer, the number of ways Iahub could recover his permutation,\nmodulo 1000000007 (10^9 + 7). Examples Input 5 -1 -1 4 3 -1 Output 2 Note For\nthe first test example there are two permutations with no fixed points are [2,\n5, 4, 3, 1] and [5, 1, 4, 3, 2]. Any other permutation would have at least one\nfixed point.\n\n",
        "cf_contest_id": 340,
        "cf_index": "E",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n-1 -1 4 3 -1\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "8\r\n2 4 5 3 -1 8 -1 6\r\n",
                "1\r\n"
            ],
            [
                "7\r\n-1 -1 4 -1 7 1 6\r\n",
                "4\r\n"
            ],
            [
                "6\r\n-1 -1 -1 -1 -1 -1\r\n",
                "265\r\n"
            ],
            [
                "2\r\n-1 -1\r\n",
                "1\r\n"
            ],
            [
                "10\r\n4 10 -1 1 6 8 9 2 -1 -1\r\n",
                "4\r\n"
            ],
            [
                "20\r\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\r\n",
                "927799753\r\n"
            ]
        ]
    }
]