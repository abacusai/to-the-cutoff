[
    {
        "name": "Spy Syndrome 2",
        "description": "After observing the results of Spy Syndrome, Yash realised the errors of his\nways. He now believes that a super spy such as Siddhant can't use a cipher as\nbasic and ancient as Caesar cipher. After many weeks of observation of\nSiddhant\u2019s sentences, Yash determined a new cipher technique. For a given\nsentence, the cipher is processed as: Convert all letters of the sentence to\nlowercase. Reverse each of the words of the sentence individually. Remove all\nthe spaces in the sentence. For example, when this cipher is applied to the\nsentence Kira is childish and he hates losing the resulting string is\nariksihsidlihcdnaehsetahgnisol Now Yash is given some ciphered string and a\nlist of words. Help him to find out any original sentence composed using only\nwords from the list. Note, that any of the given words could be used in the\nsentence multiple times. Input The first line of the input contains a single\ninteger n (1 \u2264 n \u2264 10 000) \u2014 the length of the ciphered text. The second line\nconsists of n lowercase English letters \u2014 the ciphered text t. The third line\ncontains a single integer m (1 \u2264 m \u2264 100 000) \u2014 the number of words which will\nbe considered while deciphering the text. Each of the next m lines contains a\nnon-empty word wi (|wi| \u2264 1 000) consisting of uppercase and lowercase English\nletters only. It's guaranteed that the total length of all words doesn't\nexceed 1 000 000. Output Print one line \u2014 the original sentence. It is\nguaranteed that at least one solution exists. If there are multiple solutions,\nyou may output any of those. Examples Input 30 ariksihsidlihcdnaehsetahgnisol\n10 Kira hates is he losing death childish L and Note Output Kira is childish\nand he hates losing Input 12 iherehtolleh 5 HI Ho there HeLLo hello Output HI\nthere HeLLo Note In sample case 2 there may be multiple accepted outputs, \"HI\nthere HeLLo\" and \"HI there hello\" you may output any of them.\n\n",
        "cf_contest_id": 633,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "hashing",
            "implementation",
            "sortings",
            "string suffix structures",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "30\r\nariksihsidlihcdnaehsetahgnisol\r\n10\r\nKira\r\nhates\r\nis\r\nhe\r\nlosing\r\ndeath\r\nchildish\r\nL\r\nand\r\nNote\r\n",
                "Kira is childish and he hates losing"
            ],
            [
                "12\r\niherehtolleh\r\n5\r\nHI\r\nHo\r\nthere\r\nHeLLo\r\nhello\r\n",
                "HI there hello"
            ]
        ],
        "private_cases": [
            [
                "71\r\nbaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n8\r\na\r\naa\r\naaa\r\naaaa\r\naaaaa\r\naaaaaa\r\naaaaaaa\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab\r\n",
                "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaab"
            ],
            [
                "11\r\naaaaaaaaaaa\r\n3\r\naaaa\r\naaaaa\r\naaaaaa\r\n",
                "aaaaa aaaaaa"
            ],
            [
                "5\r\ncbaed\r\n6\r\nbc\r\nea\r\nab\r\ncd\r\nabc\r\nde\r\n",
                "abc de"
            ],
            [
                "5\r\nlehet\r\n3\r\nel\r\nhel\r\nte\r\n",
                "hel te"
            ],
            [
                "3\r\naab\r\n2\r\na\r\nbaa\r\n",
                "baa"
            ],
            [
                "3\r\naab\r\n2\r\naa\r\nbaa\r\n",
                "baa"
            ],
            [
                "9\r\naaaaaaaaa\r\n2\r\naa\r\naaa\r\n",
                "aa aa aa aaa"
            ],
            [
                "7\r\nabababc\r\n2\r\nba\r\ncba\r\n",
                "ba ba cba"
            ],
            [
                "7\r\nkirkirk\r\n2\r\nrik\r\nkrik\r\n",
                "rik krik"
            ]
        ]
    }
]