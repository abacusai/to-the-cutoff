[
    {
        "name": "New Year Book Reading",
        "description": "New Year is coming, and Jaehyun decided to read many books during 2015, unlike\nthis year. He has n books numbered by integers from 1 to n. The weight of the\ni-th (1 \u2264 i \u2264 n) book is wi. As Jaehyun's house is not large enough to have a\nbookshelf, he keeps the n books by stacking them vertically. When he wants to\nread a certain book x, he follows the steps described below. He lifts all the\nbooks above book x. He pushes book x out of the stack. He puts down the lifted\nbooks without changing their order. After reading book x, he puts book x on\nthe top of the stack. He decided to read books for m days. In the j-th (1 \u2264 j\n\u2264 m) day, he will read the book that is numbered with integer bj (1 \u2264 bj \u2264 n).\nTo read the book, he has to use the process described in the paragraph above.\nIt is possible that he decides to re-read the same book several times. After\nmaking this plan, he realized that the total weight of books he should lift\nduring m days would be too heavy. So, he decided to change the order of the\nstacked books before the New Year comes, and minimize the total weight. You\nmay assume that books can be stacked in any possible order. Note that book\nthat he is going to read on certain step isn't considered as lifted on that\nstep. Can you help him? Input The first line contains two space-separated\nintegers n (2 \u2264 n \u2264 500) and m (1 \u2264 m \u2264 1000) \u2014 the number of books, and the\nnumber of days for which Jaehyun would read books. The second line contains n\nspace-separated integers w1, w2, ..., wn (1 \u2264 wi \u2264 100) \u2014 the weight of each\nbook. The third line contains m space separated integers b1, b2, ..., bm (1 \u2264\nbj \u2264 n) \u2014 the order of books that he would read. Note that he can read the\nsame book more than once. Output Print the minimum total weight of books he\nshould lift, which can be achieved by rearranging the order of stacked books.\nExamples Input 3 5 1 2 3 1 3 2 3 1 Output 12 Note Here's a picture depicting\nthe example. Each vertical column presents the stacked books.\n\n",
        "cf_contest_id": 500,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 5\r\n1 2 3\r\n1 3 2 3 1\r\n",
                "12\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 3\r\n10 20 30\r\n1 2 3\r\n",
                "40\r\n"
            ],
            [
                "2 2\r\n10 12\r\n2 1\r\n",
                "12\r\n"
            ],
            [
                "10 10\r\n61 59 97 16 2 94 57 48 91 93\r\n2 8 6 5 3 1 3 4 9 10\r\n",
                "2137\r\n"
            ],
            [
                "50 50\r\n75 71 23 37 28 23 69 75 5 62 3 11 96 100 13 50 57 51 8 90 4 6 84 27 11 89 95 81 10 62 48 52 69 87 97 95 30 74 21 42 36 64 31 80 81 50 56 53 33 99\r\n26 30 5 33 35 29 6 15 36 17 32 16 14 1 29 34 22 40 12 42 38 48 39 50 13 47 18 43 10 8 49 45 11 31 21 37 46 28 20 41 2 7 9 24 27 23 3 44 15 14\r\n",
                "63929\r\n"
            ],
            [
                "50 60\r\n86 57 45 93 17 12 40 10 47 80 18 80 3 9 6 55 13 99 5 76 4 70 100 55 27 91 71 3 65 93 41 74 80 56 90 50 58 13 71 9 47 52 26 73 72 21 15 81 88 28\r\n40 32 5 16 49 23 3 17 14 10 1 15 1 21 28 22 13 45 12 25 44 48 46 32 36 43 11 8 49 7 7 35 10 14 39 4 42 10 30 27 1 17 31 15 8 41 44 33 25 26 19 18 29 37 50 6 36 38 47 9\r\n",
                "62514\r\n"
            ],
            [
                "2 1\r\n1 2\r\n1\r\n",
                "0\r\n"
            ],
            [
                "2 3\r\n20 30\r\n1 1 1\r\n",
                "0\r\n"
            ],
            [
                "2 7\r\n20 30\r\n1 1 1 2 2 2 2\r\n",
                "20\r\n"
            ],
            [
                "2 10\r\n39 26\r\n1 1 2 2 2 2 2 2 1 2\r\n",
                "104\r\n"
            ],
            [
                "5 1\r\n16 87 36 16 81\r\n3\r\n",
                "0\r\n"
            ]
        ]
    }
]