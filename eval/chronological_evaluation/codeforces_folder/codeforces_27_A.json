[
    {
        "name": "Next Test",
        "description": "\u00abPolygon\u00bb is a system which allows to create programming tasks in a simple and\nprofessional way. When you add a test to the problem, the corresponding form\nasks you for the test index. As in most cases it is clear which index the next\ntest will have, the system suggests the default value of the index. It is\ncalculated as the smallest positive integer which is not used as an index for\nsome previously added test. You are to implement this feature. Create a\nprogram which determines the default index of the next test, given the indexes\nof the previously added tests. Input The first line contains one integer n (1\n\u2264 n \u2264 3000) \u2014 the amount of previously added tests. The second line contains n\ndistinct integers a1, a2, ..., an (1 \u2264 ai \u2264 3000) \u2014 indexes of these tests.\nOutput Output the required default value for the next test index. Examples\nInput 3 1 7 2 Output 3\n\n",
        "cf_contest_id": 27,
        "cf_index": "A",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n1\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n2 1\r\n",
                "3\r\n"
            ],
            [
                "3\r\n3 4 1\r\n",
                "2\r\n"
            ],
            [
                "4\r\n6 4 3 5\r\n",
                "1\r\n"
            ],
            [
                "5\r\n3 2 1 7 4\r\n",
                "5\r\n"
            ],
            [
                "6\r\n4 1 2 5 3 7\r\n",
                "6\r\n"
            ],
            [
                "7\r\n3 2 1 6 5 7 4\r\n",
                "8\r\n"
            ],
            [
                "8\r\n2 8 3 7 6 9 1 5\r\n",
                "4\r\n"
            ],
            [
                "9\r\n10 5 9 3 8 7 1 2 4\r\n",
                "6\r\n"
            ],
            [
                "10\r\n7 2 3 8 9 6 5 4 1 10\r\n",
                "11\r\n"
            ],
            [
                "1\r\n1\r\n",
                "2\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "3\r\n"
            ],
            [
                "3\r\n2 4 1\r\n",
                "3\r\n"
            ],
            [
                "4\r\n4 2 3 1\r\n",
                "5\r\n"
            ],
            [
                "5\r\n3 1 4 2 5\r\n",
                "6\r\n"
            ],
            [
                "6\r\n1 3 6 7 2 4\r\n",
                "5\r\n"
            ],
            [
                "7\r\n1 5 4 7 2 3 6\r\n",
                "8\r\n"
            ],
            [
                "8\r\n12 1 6 5 2 8 3 4\r\n",
                "7\r\n"
            ],
            [
                "9\r\n3 2 7 5 6 4 1 9 10\r\n",
                "8\r\n"
            ],
            [
                "10\r\n1 7 13 6 5 10 3 8 2 4\r\n",
                "9\r\n"
            ],
            [
                "1\r\n2\r\n",
                "1\r\n"
            ],
            [
                "1\r\n3\r\n",
                "1\r\n"
            ],
            [
                "1\r\n3000\r\n",
                "1\r\n"
            ],
            [
                "2\r\n2 3\r\n",
                "1\r\n"
            ],
            [
                "2\r\n3000 1\r\n",
                "2\r\n"
            ]
        ]
    }
]