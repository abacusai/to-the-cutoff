[
    {
        "name": "Bank Robbery",
        "description": "A robber has attempted to rob a bank but failed to complete his task. However,\nhe had managed to open all the safes. Oleg the bank client loves money (who\ndoesn't), and decides to take advantage of this failed robbery and steal some\nmoney from the safes. There are many safes arranged in a line, where the i-th\nsafe from the left is called safe i. There are n banknotes left in all the\nsafes in total. The i-th banknote is in safe xi. Oleg is now at safe a. There\nare two security guards, one of which guards the safe b such that b < a, i.e.\nthe first guard is to the left of Oleg. The other guard guards the safe c so\nthat c > a, i.e. he is to the right of Oleg. The two guards are very lazy, so\nthey do not move. In every second, Oleg can either take all the banknotes from\nthe current safe or move to any of the neighboring safes. However, he cannot\nvisit any safe that is guarded by security guards at any time, becaues he\nmight be charged for stealing. Determine the maximum amount of banknotes Oleg\ncan gather. Input The first line of input contains three space-separated\nintegers, a, b and c (1 \u2264 b < a < c \u2264 10^9), denoting the positions of Oleg,\nthe first security guard and the second security guard, respectively. The next\nline of input contains a single integer n (1 \u2264 n \u2264 10^5), denoting the number\nof banknotes. The next line of input contains n space-separated integers x1,\nx2, ..., xn (1 \u2264 xi \u2264 10^9), denoting that the i-th banknote is located in the\nxi-th safe. Note that xi are not guaranteed to be distinct. Output Output a\nsingle integer: the maximum number of banknotes Oleg can take. Examples Input\n5 3 7 8 4 7 5 5 3 6 2 8 Output 4 Input 6 5 7 5 1 5 7 92 3 Output 0 Note In the\nfirst example Oleg can take the banknotes in positions 4, 5, 6 (note that\nthere are 2 banknotes at position 5). Oleg can't take the banknotes in safes 7\nand 8 because he can't run into the second security guard. Similarly, Oleg\ncannot take the banknotes at positions 3 and 2 because he can't run into the\nfirst security guard. Thus, he can take a maximum of 4 banknotes. For the\nsecond sample, Oleg can't take any banknotes without bumping into any of the\nsecurity guards.\n\n",
        "cf_contest_id": 794,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 3 7\r\n8\r\n4 7 5 5 3 6 2 8\r\n",
                "4\r\n"
            ],
            [
                "6 5 7\r\n5\r\n1 5 7 92 3\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 2 4\r\n1\r\n3\r\n",
                "1\r\n"
            ],
            [
                "5 3 8\r\n12\r\n8 3 4 5 7 6 8 3 5 4 7 6\r\n",
                "8\r\n"
            ],
            [
                "7 3 10\r\n5\r\n3 3 3 3 3\r\n",
                "0\r\n"
            ],
            [
                "3 2 5\r\n4\r\n1 3 4 5\r\n",
                "2\r\n"
            ],
            [
                "3 2 4\r\n1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "6 4 8\r\n1\r\n4\r\n",
                "0\r\n"
            ],
            [
                "2 1 3\r\n1\r\n3\r\n",
                "0\r\n"
            ]
        ]
    }
]