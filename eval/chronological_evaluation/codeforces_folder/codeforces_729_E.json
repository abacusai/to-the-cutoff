[
    {
        "name": "Subordinates",
        "description": "There are n workers in a company, each of them has a unique id from 1 to n.\nExaclty one of them is a chief, his id is s. Each worker except the chief has\nexactly one immediate superior. There was a request to each of the workers to\ntell how how many superiors (not only immediate). Worker's superiors are his\nimmediate superior, the immediate superior of the his immediate superior, and\nso on. For example, if there are three workers in the company, from which the\nfirst is the chief, the second worker's immediate superior is the first, the\nthird worker's immediate superior is the second, then the third worker has two\nsuperiors, one of them is immediate and one not immediate. The chief is a\nsuperior to all the workers except himself. Some of the workers were in a\nhurry and made a mistake. You are to find the minimum number of workers that\ncould make a mistake. Input The first line contains two positive integers n\nand s (1 \u2264 n \u2264 2\u00b710^5, 1 \u2264 s \u2264 n) \u2014 the number of workers and the id of the\nchief. The second line contains n integers a1, a2, ..., an (0 \u2264 ai \u2264 n - 1),\nwhere ai is the number of superiors (not only immediate) the worker with id i\nreported about. Output Print the minimum number of workers that could make a\nmistake. Examples Input 3 2 2 0 2 Output 1 Input 5 3 1 0 0 4 1 Output 2 Note\nIn the first example it is possible that only the first worker made a mistake.\nThen: the immediate superior of the first worker is the second worker, the\nimmediate superior of the third worker is the first worker, the second worker\nis the chief.\n\n",
        "cf_contest_id": 729,
        "cf_index": "E",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures",
            "graphs",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n2 0 2\r\n",
                "1"
            ],
            [
                "5 3\r\n1 0 0 4 1\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n0\r\n",
                "0"
            ],
            [
                "2 1\r\n0 0\r\n",
                "1"
            ],
            [
                "2 1\r\n0 1\r\n",
                "0"
            ],
            [
                "2 1\r\n1 0\r\n",
                "2"
            ],
            [
                "2 1\r\n1 1\r\n",
                "1"
            ],
            [
                "2 2\r\n0 0\r\n",
                "1"
            ],
            [
                "2 2\r\n0 1\r\n",
                "2"
            ],
            [
                "9 1\r\n0 1 1 1 1 1 6 7 8\r\n",
                "3"
            ],
            [
                "9 1\r\n0 1 1 1 1 5 6 7 8\r\n",
                "3"
            ],
            [
                "6 1\r\n0 1 2 2 0 0\r\n",
                "2"
            ],
            [
                "2 2\r\n1 1\r\n",
                "1"
            ],
            [
                "2 2\r\n1 0\r\n",
                "0"
            ],
            [
                "3 1\r\n0 1 2\r\n",
                "0"
            ],
            [
                "3 1\r\n2 1 1\r\n",
                "1"
            ],
            [
                "3 1\r\n0 0 2\r\n",
                "1"
            ],
            [
                "3 2\r\n2 0 1\r\n",
                "0"
            ],
            [
                "3 2\r\n2 2 1\r\n",
                "1"
            ],
            [
                "3 2\r\n2 1 1\r\n",
                "1"
            ],
            [
                "3 3\r\n1 1 0\r\n",
                "0"
            ],
            [
                "3 3\r\n2 1 2\r\n",
                "1"
            ],
            [
                "3 3\r\n2 1 0\r\n",
                "0"
            ],
            [
                "3 2\r\n2 2 2\r\n",
                "2"
            ],
            [
                "5 5\r\n0 1 1 0 0\r\n",
                "2"
            ],
            [
                "7 1\r\n4 4 6 6 6 6 5\r\n",
                "4"
            ],
            [
                "10 6\r\n3 0 0 0 0 0 0 1 0 0\r\n",
                "7"
            ],
            [
                "5 1\r\n0 0 1 3 4\r\n",
                "1"
            ],
            [
                "9 1\r\n0 0 0 2 5 5 5 5 5\r\n",
                "3"
            ],
            [
                "6 1\r\n5 2 1 3 3 1\r\n",
                "1"
            ],
            [
                "3 1\r\n1 2 2\r\n",
                "2"
            ]
        ]
    }
]