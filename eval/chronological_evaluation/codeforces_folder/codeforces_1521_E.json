[
    {
        "name": "Nastia and a Beautiful Matrix",
        "description": "You like numbers, don't you? Nastia has a lot of numbers and she wants to\nshare them with you! Isn't it amazing? Let \n    a_i\n be how many numbers\n\n    i\n (\n    1 \n    \u2264 i \n    \u2264 k\n) you have. An \n    n \n    \u00d7 n\n matrix is\ncalled beautiful if it contains all the numbers you have, and for each \n    2\n    \n    \u00d7 2\n submatrix of the original matrix is satisfied: The number of\noccupied cells doesn't exceed \n    3\n; The numbers on each diagonal are\ndistinct. Make a beautiful matrix of minimum size. Input The first line\ncontains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10\n     000\n) \u2014 the\nnumber of test cases. The first line of each test case contains \n    2\n\nintegers \n    m\n and \n    k\n (\n    1 \n    \u2264 m, k \n    \u2264 10^5\n) \u2014 how many\nnumbers Nastia gave you and the length of the array \n    a\n, respectively. The\nsecond line of each test case contains \n    k\n integers \n    a_1, a_2, \n    \u2026,\n    a_k\n (\n    0 \n    \u2264 a_i \n    \u2264 m\n, \n    a_1 + a_2 + \n    \u2026 + a_k = m\n),\nwhere \n    a_i\n is how many numbers \n    i\n you have. It's guaranteed that the\nsum of \n    m\n and \n    k\n in one test doesn't exceed \n    2 \n    \u00b7 10^5\n.\nOutput For each \n    t\n test case print a single integer \n    n\n \u2014 the size of\nthe beautiful matrix. In the next \n    n\n lines print \n    n\n integers\n\n    b_i, j\n (\n    0 \n    \u2264 b_i, j\n    \u2264 k\n; if position is empty, print\n\n    b_i, j = 0\n) \u2014 the beautiful matrix \n    b\n you made up. Example Input\n2 3 4 2 0 0 1 15 4 2 4 8 1 Output 2 4 1 0 1 5 3 0 0 2 2 3 2 3 3 0 0 1 0 4 0 3\n0 0 0 0 2 1 3 3 3 Note Note that \n    0\n in this problem represents a blank,\nnot a number. Examples of possible answers for the first test case:\n\n    [ 1 1; ; ; 4 0; ; ;  ;  ]\n    \n    [ 1 4; ; ; 1 0; ; ;  ;  ]\n    \n    [ 4 0; ; ; 1 1; ; ;  ;  ]\n Examples of not beautiful matrices for the first test case:\n\n    [ 1 0; ; ; 4 1; ; ;  ;  ]\n    \n    [ 4 1; ; ; 7 1; ; ;  ;  ]\n    \n    [ 1 0; ; ; 4 0; ; ;  ;  ]\n The example of the not beautiful matrix for the second test\ncase: \n    [ 3 4 0 2 2; ; ; 3 2 3 3 0; ; ; 0 1 0 0 0; ; ; 3 0 0 0 0; ; ; 2 1 3 3 3; ; ;  ;  ]\n Everything is okay, except the left-top submatrix\ncontains \n    4\n numbers.\n\n",
        "cf_contest_id": 1521,
        "cf_index": "E",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n3 4\r\n2 0 0 1\r\n15 4\r\n2 4 8 1\r\n",
                "2\r\n1 1\r\n4 0\r\n5\r\n4 3 1 3 1\r\n0 0 0 0 0\r\n2 3 2 3 2\r\n0 0 0 0 0\r\n2 3 3 3 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n12 3\r\n9 2 1\r\n",
                "5\r\n0 1 0 1 0\r\n0 0 0 0 0\r\n3 1 2 1 2\r\n0 0 0 0 0\r\n1 1 1 1 1\r\n"
            ],
            [
                "1\r\n9 3\r\n1 0 8\r\n",
                "4\r\n3 3 3 3\r\n0 0 0 0\r\n3 3 3 3\r\n0 0 1 0\r\n"
            ]
        ]
    }
]