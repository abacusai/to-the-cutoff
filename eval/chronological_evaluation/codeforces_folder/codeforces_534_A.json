[
    {
        "name": "Exam",
        "description": "An exam for n students will take place in a long and narrow room, so the\nstudents will sit in a line in some order. The teacher suspects that students\nwith adjacent numbers (i and i + 1) always studied side by side and became\nfriends and if they take an exam sitting next to each other, they will help\neach other for sure. Your task is to choose the maximum number of students and\nmake such an arrangement of students in the room that no two students with\nadjacent numbers sit side by side. Input A single line contains integer n (1 \u2264\nn \u2264 5000) \u2014 the number of students at an exam. Output In the first line print\ninteger k \u2014 the maximum number of students who can be seated so that no two\nstudents with adjacent numbers sit next to each other. In the second line\nprint k distinct integers a1, a2, ..., ak (1 \u2264 ai \u2264 n), where ai is the number\nof the student on the i-th position. The students on adjacent positions\nmustn't have adjacent numbers. Formally, the following should be true: |ai -\nai + 1| \u2260 1 for all i from 1 to k - 1. If there are several possible answers,\noutput any of them. Examples Input 6 Output 6 1 5 3 6 2 4 Input 3 Output 2 1 3\n\n",
        "cf_contest_id": 534,
        "cf_index": "A",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n",
                "6\r\n2 4 6 1 3 5\r\n"
            ],
            [
                "3\r\n",
                "2\r\n1 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "2\r\n",
                "1\r\n1\r\n"
            ],
            [
                "4\r\n",
                "4\r\n2 4 1 3\r\n"
            ],
            [
                "5\r\n",
                "5\r\n2 4 1 3 5\r\n"
            ],
            [
                "7\r\n",
                "7\r\n2 4 6 1 3 5 7\r\n"
            ],
            [
                "8\r\n",
                "8\r\n2 4 6 8 1 3 5 7\r\n"
            ],
            [
                "9\r\n",
                "9\r\n2 4 6 8 1 3 5 7 9\r\n"
            ],
            [
                "10\r\n",
                "10\r\n2 4 6 8 10 1 3 5 7 9\r\n"
            ],
            [
                "13\r\n",
                "13\r\n2 4 6 8 10 12 1 3 5 7 9 11 13\r\n"
            ],
            [
                "16\r\n",
                "16\r\n2 4 6 8 10 12 14 16 1 3 5 7 9 11 13 15\r\n"
            ],
            [
                "25\r\n",
                "25\r\n2 4 6 8 10 12 14 16 18 20 22 24 1 3 5 7 9 11 13 15 17 19 21 23 25\r\n"
            ],
            [
                "29\r\n",
                "29\r\n2 4 6 8 10 12 14 16 18 20 22 24 26 28 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29\r\n"
            ],
            [
                "120\r\n",
                "120\r\n2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100 102 104 106 108 110 112 114 116 118 120 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99 101 103 105 107 109 111 113 115 117 119\r\n"
            ],
            [
                "128\r\n",
                "128\r\n2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100 102 104 106 108 110 112 114 116 118 120 122 124 126 128 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99 101 103 105 107 109 111 113 115 117 119 121 123 125 127\r\n"
            ]
        ]
    }
]