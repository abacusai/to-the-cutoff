[
    {
        "name": "Make Equal",
        "description": "You are given \n    n\n numbers \n    a_1, a_2, \n    \u2026, a_n\n. In one operation\nwe can add to any one of those numbers a nonnegative integer power of \n    2\n.\nWhat is the smallest number of operations we need to perform to make all\n\n    n\n numbers equal? It can be proved that under given constraints it\ndoesn't exceed \n    10^18\n. Input The first line contains a single integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n). The second line contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^17\n).\nOutput Output exactly one integer \u2014 the smallest number of operations we need\nto perform to make all \n    n\n numbers equal. Examples Input 4 228 228 228 228\nOutput 0 Input 3 2 2 8 Output 3 Note In the first example, all numbers are\nalready equal. So the needed number of operation is \n    0\n. In the second\nexample, we can apply the operation \n    3\n times: add \n    8\n to first\n\n    2\n, add \n    8\n to second \n    2\n, add \n    2\n to \n    8\n, making all\nnumbers equal to \n    10\n. It can be proved that we can't make all numbers\nequal in less than \n    3\n operations.\n\n",
        "cf_contest_id": 1188,
        "cf_index": "D",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n228 228 228 228\r\n",
                "0"
            ],
            [
                "3\r\n2 2 8\r\n",
                "3"
            ]
        ],
        "private_cases": [
            [
                "1\r\n66540997167959138\r\n",
                "0"
            ],
            [
                "2\r\n100000000000000000 100000000000000000\r\n",
                "0"
            ],
            [
                "2\r\n67367244641009858 2306300054748095\r\n",
                "22"
            ],
            [
                "3\r\n68193483524125986 38535259923264236 84613336374288890\r\n",
                "40"
            ],
            [
                "10\r\n96517375802030517 59198117598196517 24045669640274070 17274415983359970 78062383071550120 24694462096204861 61230177799843966 96915526446173606 91967553796619137 58012341402690753\r\n",
                "189"
            ],
            [
                "15\r\n0 0 0 0 0 0 0 0 0 0 1 1 1 1 1\r\n",
                "10"
            ],
            [
                "20\r\n38505179452405439 93776795586588703 16949583509061480 42864257552472139 31031017016115809 47400344148658853 43639266066743033 51410499628305149 26196799677780683 88523782519361359 36550712208050515 88576472401554300 10164240954478789 48544811346543677 28908414387546137 15705220832279892 28861610641889898 18107398080960259 53426267717802880 26751456588066498\r\n",
                "455"
            ],
            [
                "10\r\n1414140390 1397364198 1405752806 1414075878 1414139366 1145705958 1412044262 1409947110 1414140390 1414140902\r\n",
                "10"
            ],
            [
                "3\r\n8 8 2\r\n",
                "2"
            ],
            [
                "3\r\n4999999996 4999991808 4999997952\r\n",
                "3"
            ],
            [
                "5\r\n0 0 1 1 1\r\n",
                "2"
            ]
        ]
    }
]