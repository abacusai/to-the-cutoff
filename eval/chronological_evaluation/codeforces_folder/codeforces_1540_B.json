[
    {
        "name": "Tree Array",
        "description": "You are given a tree consisting of \n    n\n nodes. You generate an array from\nthe tree by marking nodes one by one. Initially, when no nodes are marked, a\nnode is equiprobably chosen and marked from the entire tree. After that, until\nall nodes are marked, a node is equiprobably chosen and marked from the set of\nunmarked nodes with at least one edge to a marked node. It can be shown that\nthe process marks all nodes in the tree. The final array \n    a\n is the list\nof the nodes' labels in order of the time each node was marked. Find the\nexpected number of inversions in the array that is generated by the tree and\nthe aforementioned process. The number of inversions in an array \n    a\n is\nthe number of pairs of indices \n    (i, j)\n such that \n    i < j\n and \n    a_i >\n    a_j\n. For example, the array \n    [4, 1, 3, 2]\n contains \n    4\n inversions:\n\n    (1, 2)\n, \n    (1, 3)\n, \n    (1, 4)\n, \n    (3, 4)\n. Input The first line\ncontains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 200\n) \u2014 the number of\nnodes in the tree. The next \n    n - 1\n lines each contains two integers\n\n    x\n and \n    y\n (\n    1 \n    \u2264 x, y \n    \u2264 n\n; \n    x \n    \u2260 y\n), denoting\nan edge between node \n    x\n and \n    y\n. It's guaranteed that the given edges\nform a tree. Output Output the expected number of inversions in the generated\narray modulo \n    10^9+7\n. Formally, let \n    M = 10^9+7\n. It can be shown\nthat the answer can be expressed as an irreducible fraction\n\n    p/q\n, where \n    p\n and \n    q\n are integers and \n    q \n    \u2261 0 \n    M\n. Output the integer equal to \n    p \n    \u00b7 q^-1\n     M\n. In other words, output such an integer \n    x\n that \n    0 \n    \u2264 x\n    < M\n and \n    x \n    \u00b7 q \n    \u2261 p \n    M\n. Examples Input 3 1 2 1 3\nOutput 166666669 Input 6 2 1 2 3 6 1 1 4 2 5 Output 500000009 Input 5 1 2 1 3\n1 4 2 5 Output 500000007 Note This is the tree from the first sample: For the\nfirst sample, the arrays are almost fixed. If node \n    2\n is chosen\ninitially, then the only possible array is \n    [2, 1, 3]\n (\n    1\n\ninversion). If node \n    3\n is chosen initially, then the only possible array\nis \n    [3, 1, 2]\n (\n    2\n inversions). If node \n    1\n is chosen initially,\nthe arrays \n    [1, 2, 3]\n (\n    0\n inversions) and \n    [1, 3, 2]\n (\n    1\n\ninversion) are the only possibilities and equiprobable. In total, the expected\nnumber of inversions is \n    1/3\n    \u00b7 1 + \n    1/3\n    \u00b7 2 +\n    \n    1/3\n    \u00b7 (\n    1/2\n    \u00b7 0 + \n    1/2\n    \u00b7 1) =\n    \n    7/6\n. \n    166666669 \n    \u00b7 6 = 7 \n    10^9 + 7\n, so the\nanswer is \n    166666669\n. This is the tree from the second sample: This is\nthe tree from the third sample:\n\n",
        "cf_contest_id": 1540,
        "cf_index": "B",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "combinatorics",
            "dp",
            "graphs",
            "math",
            "probabilities",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2\r\n1 3\r\n",
                "166666669\r\n"
            ],
            [
                "6\r\n2 1\r\n2 3\r\n6 1\r\n1 4\r\n2 5\r\n",
                "500000009\r\n"
            ],
            [
                "5\r\n1 2\r\n1 3\r\n1 4\r\n2 5\r\n",
                "500000007\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n1 2\r\n",
                "500000004\r\n"
            ],
            [
                "4\r\n1 2\r\n2 3\r\n3 4\r\n",
                "3\r\n"
            ]
        ]
    }
]