[
    {
        "name": "Caisa and Sugar",
        "description": "Caisa is going to have a party and he needs to buy the ingredients for a big\nchocolate cake. For that he is going to the biggest supermarket in town.\nUnfortunately, he has just s dollars for sugar. But that's not a reason to be\nsad, because there are n types of sugar in the supermarket, maybe he able to\nbuy one. But that's not all. The supermarket has very unusual exchange\npolitics: instead of cents the sellers give sweets to a buyer as a change. Of\ncourse, the number of given sweets always doesn't exceed 99, because each\nseller maximizes the number of dollars in the change (100 cents can be\nreplaced with a dollar). Caisa wants to buy only one type of sugar, also he\nwants to maximize the number of sweets in the change. What is the maximum\nnumber of sweets he can get? Note, that Caisa doesn't want to minimize the\ncost of the sugar, he only wants to get maximum number of sweets as change.\nInput The first line contains two space-separated integers n, s (1 \u2264 n, s \u2264\n100). The i-th of the next n lines contains two integers xi, yi (1 \u2264 xi \u2264 100;\n0 \u2264 yi < 100), where xi represents the number of dollars and yi the number of\ncents needed in order to buy the i-th type of sugar. Output Print a single\ninteger representing the maximum number of sweets he can buy, or -1 if he\ncan't buy any type of sugar. Examples Input 5 10 3 90 12 0 9 70 5 50 7 0\nOutput 50 Input 5 5 10 10 20 20 30 30 40 40 50 50 Output -1 Note In the first\ntest sample Caisa can buy the fourth type of sugar, in such a case he will\ntake 50 sweets as a change.\n\n",
        "cf_contest_id": 463,
        "cf_index": "A",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 10\r\n3 90\r\n12 0\r\n9 70\r\n5 50\r\n7 0\r\n",
                "50\r\n"
            ],
            [
                "5 5\r\n10 10\r\n20 20\r\n30 30\r\n40 40\r\n50 50\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 2\r\n1 0\r\n",
                "0\r\n"
            ],
            [
                "2 10\r\n20 99\r\n30 99\r\n",
                "-1\r\n"
            ],
            [
                "15 21\r\n16 51\r\n33 44\r\n32 92\r\n19 91\r\n67 81\r\n94 94\r\n40 67\r\n77 38\r\n42 22\r\n48 19\r\n9 35\r\n90 36\r\n57 80\r\n58 97\r\n13 15\r\n",
                "85\r\n"
            ],
            [
                "1 2\r\n5 0\r\n",
                "-1\r\n"
            ],
            [
                "37 10\r\n57 61\r\n78 79\r\n59 60\r\n48 17\r\n39 22\r\n11 87\r\n19 55\r\n56 78\r\n25 12\r\n15 55\r\n13 37\r\n49 38\r\n37 57\r\n19 37\r\n74 18\r\n81 27\r\n8 82\r\n43 9\r\n79 17\r\n92 41\r\n29 69\r\n77 1\r\n33 98\r\n11 31\r\n40 56\r\n46 76\r\n16 51\r\n10 94\r\n32 3\r\n23 27\r\n8 57\r\n40 54\r\n16 66\r\n36 33\r\n28 45\r\n67 26\r\n81 55\r\n",
                "43\r\n"
            ],
            [
                "46 27\r\n53 88\r\n89 56\r\n98 5\r\n48 35\r\n88 19\r\n41 22\r\n71 75\r\n75 88\r\n57 51\r\n42 63\r\n100 91\r\n58 78\r\n99 75\r\n56 3\r\n49 70\r\n59 81\r\n38 0\r\n59 98\r\n35 86\r\n6 5\r\n80 21\r\n97 45\r\n86 2\r\n54 22\r\n38 42\r\n34 94\r\n25 37\r\n65 42\r\n46 74\r\n46 19\r\n53 93\r\n47 55\r\n55 89\r\n76 56\r\n62 88\r\n62 32\r\n78 41\r\n44 9\r\n32 14\r\n9 48\r\n43 68\r\n58 93\r\n37 18\r\n94 21\r\n41 81\r\n28 38\r\n",
                "95\r\n"
            ],
            [
                "69 9\r\n39 15\r\n70 44\r\n90 89\r\n84 58\r\n83 97\r\n24 28\r\n90 18\r\n7 96\r\n43 86\r\n99 50\r\n77 12\r\n12 34\r\n100 19\r\n21 86\r\n55 30\r\n99 29\r\n26 92\r\n82 67\r\n78 14\r\n64 16\r\n98 12\r\n31 39\r\n36 86\r\n73 36\r\n87 29\r\n42 23\r\n58 15\r\n35 52\r\n91 56\r\n39 6\r\n88 45\r\n38 36\r\n57 12\r\n79 71\r\n40 33\r\n98 42\r\n34 36\r\n23 79\r\n69 68\r\n50 47\r\n23 6\r\n22 90\r\n96 79\r\n88 55\r\n63 85\r\n83 25\r\n15 1\r\n15 72\r\n96 70\r\n56 44\r\n87 34\r\n24 5\r\n85 71\r\n92 97\r\n97 52\r\n60 40\r\n84 18\r\n50 32\r\n89 78\r\n16 36\r\n15 2\r\n56 98\r\n23 28\r\n51 69\r\n15 17\r\n52 57\r\n63 52\r\n25 26\r\n25 47\r\n",
                "4\r\n"
            ],
            [
                "44 77\r\n95 38\r\n51 48\r\n89 76\r\n18 40\r\n97 15\r\n6 57\r\n30 44\r\n84 8\r\n93 60\r\n75 96\r\n14 61\r\n72 97\r\n17 71\r\n11 85\r\n29 2\r\n93 86\r\n88 74\r\n52 94\r\n88 75\r\n43 20\r\n79 83\r\n28 99\r\n8 7\r\n20 62\r\n59 51\r\n65 94\r\n44 23\r\n95 36\r\n74 11\r\n66 57\r\n44 1\r\n29 57\r\n53 82\r\n11 79\r\n100 91\r\n75 4\r\n5 29\r\n90 53\r\n16 11\r\n16 8\r\n55 73\r\n98 79\r\n68 98\r\n10 43\r\n",
                "99\r\n"
            ],
            [
                "62 37\r\n33 3\r\n7 38\r\n3 4\r\n80 48\r\n27 5\r\n38 4\r\n1 89\r\n81 25\r\n11 42\r\n63 19\r\n68 99\r\n17 90\r\n43 33\r\n51 62\r\n24 8\r\n64 87\r\n78 56\r\n61 21\r\n70 79\r\n38 91\r\n97 96\r\n38 74\r\n100 96\r\n39 70\r\n90 62\r\n62 53\r\n96 8\r\n42 30\r\n93 38\r\n99 44\r\n32 67\r\n24 61\r\n84 8\r\n41 35\r\n28 4\r\n53 77\r\n52 23\r\n72 42\r\n13 3\r\n66 61\r\n15 1\r\n10 78\r\n61 10\r\n1 3\r\n100 52\r\n21 98\r\n12 30\r\n91 95\r\n32 46\r\n4 30\r\n60 10\r\n86 55\r\n98 63\r\n67 56\r\n70 9\r\n63 83\r\n62 84\r\n47 24\r\n80 22\r\n27 98\r\n49 78\r\n61 98\r\n",
                "99\r\n"
            ],
            [
                "6 84\r\n95 74\r\n34 76\r\n12 46\r\n89 34\r\n77 28\r\n26 56\r\n",
                "72\r\n"
            ],
            [
                "1 10\r\n10 10\r\n",
                "-1\r\n"
            ],
            [
                "7 7\r\n1 0\r\n2 0\r\n3 0\r\n4 0\r\n5 0\r\n6 0\r\n7 0\r\n",
                "0\r\n"
            ],
            [
                "1 9\r\n9 0\r\n",
                "0\r\n"
            ],
            [
                "1 1\r\n1 0\r\n",
                "0\r\n"
            ],
            [
                "1 9\r\n9 1\r\n",
                "-1\r\n"
            ],
            [
                "1 10\r\n10 0\r\n",
                "0\r\n"
            ],
            [
                "1 2\r\n2 1\r\n",
                "-1\r\n"
            ],
            [
                "2 2\r\n1 50\r\n2 0\r\n",
                "50\r\n"
            ],
            [
                "2 3\r\n2 10\r\n3 0\r\n",
                "90\r\n"
            ],
            [
                "2 2\r\n1 10\r\n2 0\r\n",
                "90\r\n"
            ],
            [
                "2 10\r\n9 10\r\n1 0\r\n",
                "90\r\n"
            ],
            [
                "3 7\r\n1 56\r\n5 49\r\n7 0\r\n",
                "51\r\n"
            ],
            [
                "2 1\r\n1 50\r\n1 0\r\n",
                "0\r\n"
            ],
            [
                "2 10\r\n10 50\r\n10 0\r\n",
                "0\r\n"
            ],
            [
                "2 10\r\n9 20\r\n10 20\r\n",
                "80\r\n"
            ],
            [
                "3 4\r\n1 0\r\n2 0\r\n4 1\r\n",
                "0\r\n"
            ],
            [
                "2 2\r\n2 0\r\n3 1\r\n",
                "0\r\n"
            ]
        ]
    }
]