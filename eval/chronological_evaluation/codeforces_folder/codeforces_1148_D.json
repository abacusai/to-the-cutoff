[
    {
        "name": "Dirty Deeds Done Dirt Cheap",
        "description": "You are given \n    n\n pairs of integers \n    (a_1, b_1), (a_2, b_2), \n    \u2026,\n    (a_n, b_n)\n. All of the integers in the pairs are distinct and are in the\nrange from \n    1\n to \n    2 \n    \u00b7 n\n inclusive. Let's call a sequence of\nintegers \n    x_1, x_2, \n    \u2026, x_2k\n good if either \n    x_1 < x_2 > x_3 <\n    \n    \u2026 < x_2k-2 > x_2k-1 < x_2k\n, or \n    x_1 > x_2 < x_3 > \n    \u2026 >\n    x_2k-2 < x_2k-1 > x_2k\n. You need to choose a subset of distinct\nindices \n    i_1, i_2, \n    \u2026, i_t\n and their order in a way that if you\nwrite down all numbers from the pairs in a single sequence (the sequence would\nbe \n    a_i_1, b_i_1, a_i_2, b_i_2, \n    \u2026, a_i_t, b_i_t\n), this\nsequence is good. What is the largest subset of indices you can choose? You\nalso need to construct the corresponding index sequence \n    i_1, i_2, \n    \u2026,\n    i_t\n. Input The first line contains single integer \n    n\n (\n    2 \n    \u2264 n\n    \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the number of pairs. Each of the next \n    n\n\nlines contain two numbers \u2014 \n    a_i\n and \n    b_i\n (\n    1 \n    \u2264 a_i, b_i \n    \u2264\n    2 \n    \u00b7 n\n) \u2014 the elements of the pairs. It is guaranteed that all\nintegers in the pairs are distinct, that is, every integer from \n    1\n to\n\n    2 \n    \u00b7 n\n is mentioned exactly once. Output In the first line print a\nsingle integer \n    t\n \u2014 the number of pairs in the answer. Then print \n    t\n\ndistinct integers \n    i_1, i_2, \n    \u2026, i_t\n \u2014 the indexes of pairs in the\ncorresponding order. Examples Input 5 1 7 6 4 2 10 9 8 3 5 Output 3 1 5 3\nInput 3 5 4 3 2 6 1 Output 3 3 2 1 Note The final sequence in the first\nexample is \n    1 < 7 > 3 < 5 > 2 < 10\n. The final sequence in the second\nexample is \n    6 > 1 < 3 > 2 < 5 > 4\n.\n\n",
        "cf_contest_id": 1148,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 7\r\n6 4\r\n2 10\r\n9 8\r\n3 5\r\n",
                "3\r\n3 1 5\r\n"
            ],
            [
                "3\r\n5 4\r\n3 2\r\n6 1\r\n",
                "3\r\n3 2 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 2\r\n",
                "1\r\n1\r\n"
            ],
            [
                "2\r\n1 3\r\n2 4\r\n",
                "2\r\n2 1\r\n"
            ],
            [
                "3\r\n1 4\r\n2 5\r\n3 6\r\n",
                "3\r\n3 2 1\r\n"
            ],
            [
                "2\r\n1 2\r\n4 3\r\n",
                "1\r\n2\r\n"
            ]
        ]
    }
]