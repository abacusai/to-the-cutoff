[
    {
        "name": "Flatland Fencing",
        "description": "The King of Flatland will organize a knights' tournament! The winner will get\nhalf the kingdom and the favor of the princess of legendary beauty and wisdom.\nThe final test of the applicants' courage and strength will be a fencing\ntournament. The tournament is held by the following rules: the participants\nfight one on one, the winner (or rather, the survivor) transfers to the next\nround. Before the battle both participants stand at the specified points on\nthe Ox axis with integer coordinates. Then they make moves in turn. The first\nparticipant moves first, naturally. During a move, the first participant can\ntransfer from the point x to any integer point of the interval [x + a; x + b].\nThe second participant can transfer during a move to any integer point of the\ninterval [x - b; x - a]. That is, the options for the players' moves are\nsymmetric (note that the numbers a and b are not required to be positive, and\nif a \u2264 0 \u2264 b, then staying in one place is a correct move). At any time the\nparticipants can be located arbitrarily relative to each other, that is, it is\nallowed to \"jump\" over the enemy in any direction. A participant wins if he\nuses his move to transfer to the point where his opponent is. Of course, the\nprincess has already chosen a husband and now she wants to make her sweetheart\nwin the tournament. He has already reached the tournament finals and he is\nfacing the last battle. The princess asks the tournament manager to arrange\nthe tournament finalists in such a way that her sweetheart wins the\ntournament, considering that both players play optimally. However, the initial\nlocation of the participants has already been announced, and we can only pull\nsome strings and determine which participant will be first and which one will\nbe second. But how do we know which participant can secure the victory? Alas,\nthe princess is not learned in the military affairs... Therefore, she asks you\nto determine how the battle will end considering that both opponents play\noptimally. Also, if the first player wins, your task is to determine his\nwinning move. Input The first line contains four space-separated integers \u2014\nx1, x2, a and b (x1 \u2260 x2, a \u2264 b, - 10^9 \u2264 x1, x2, a, b \u2264 10^9) \u2014 coordinates\nof the points where the first and the second participant start, and the\nnumbers that determine the players' moves, correspondingly. Output On the\nfirst line print the outcome of the battle as \"FIRST\" (without the quotes), if\nboth players play optimally and the first player wins. Print \"SECOND\" (without\nthe quotes) if the second player wins and print \"DRAW\" (without the quotes),\nif nobody is able to secure the victory. If the first player wins, print on\nthe next line the single integer x \u2014 the coordinate of the point where the\nfirst player should transfer to win. The indicated move should be valid, that\nis, it should meet the following condition: x1 + a \u2264 x \u2264 x1 + b. If there are\nseveral winning moves, print any of them. If the first participant can't\nsecure the victory, then you do not have to print anything. Examples Input 0 2\n0 4 Output FIRST 2 Input 0 2 1 1 Output SECOND Input 0 2 0 1 Output DRAW Note\nIn the first sample the first player can win in one move. In the second sample\nthe first participant must go to point 1, where the second participant\nimmediately goes and wins. In the third sample changing the position isn't\nprofitable to either participant, so nobody wins.\n\n",
        "cf_contest_id": 154,
        "cf_index": "D",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "0 2 0 4\r\n",
                "FIRST\r\n2"
            ],
            [
                "0 2 1 1\r\n",
                "SECOND\r\n"
            ],
            [
                "0 2 0 1\r\n",
                "DRAW\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 1 -2 2\r\n",
                "FIRST\r\n1"
            ],
            [
                "3 10 1 6\r\n",
                "SECOND\r\n"
            ],
            [
                "1 2 2 2\r\n",
                "DRAW\r\n"
            ],
            [
                "0 10 -1 1\r\n",
                "DRAW\r\n"
            ],
            [
                "0 15 5 5\r\n",
                "FIRST\r\n5"
            ],
            [
                "20 1 -5 -1\r\n",
                "FIRST\r\n19"
            ],
            [
                "0 100 2 31\r\n",
                "DRAW\r\n"
            ],
            [
                "31 39 0 8\r\n",
                "FIRST\r\n39"
            ],
            [
                "75 37 9 33\r\n",
                "DRAW\r\n"
            ],
            [
                "-44 -17 12 13\r\n",
                "DRAW\r\n"
            ],
            [
                "-80 60 17 23\r\n",
                "FIRST\r\n-60"
            ],
            [
                "-343 -119 -194 -60\r\n",
                "DRAW\r\n"
            ],
            [
                "439 722 206 325\r\n",
                "FIRST\r\n722"
            ],
            [
                "1621 733 -732 -156\r\n",
                "SECOND\r\n"
            ],
            [
                "2062 4167 2 2\r\n",
                "DRAW\r\n"
            ],
            [
                "45390 21963 -2047 -1023\r\n",
                "FIRST\r\n43453"
            ],
            [
                "258358 241272 -2 -1\r\n",
                "FIRST\r\n258357"
            ],
            [
                "965398 678942 -6666 -666\r\n",
                "DRAW\r\n"
            ],
            [
                "1234577 1234573 -3 3\r\n",
                "DRAW\r\n"
            ],
            [
                "-186611 -745388 -776721 -308073\r\n",
                "FIRST\r\n-745388"
            ],
            [
                "2408736 -3517525 413342 557733\r\n",
                "DRAW\r\n"
            ],
            [
                "-8006393 7731100 -478756 3592795\r\n",
                "DRAW\r\n"
            ],
            [
                "-48549196 47782227 17235 109857\r\n",
                "DRAW\r\n"
            ],
            [
                "61190539 -40142693 -666666 -666666\r\n",
                "SECOND\r\n"
            ],
            [
                "25882413 -80674370 -999999 -9\r\n",
                "FIRST\r\n25326478"
            ],
            [
                "48011031 230545656 12345 67890\r\n",
                "SECOND\r\n"
            ],
            [
                "-730305467 -514687698 2 7\r\n",
                "DRAW\r\n"
            ],
            [
                "411443207 739161876 -1 0\r\n",
                "DRAW\r\n"
            ],
            [
                "402211447 260733897 -52 275\r\n",
                "DRAW\r\n"
            ],
            [
                "35406031 214492689 -307333182 -305473200\r\n",
                "DRAW\r\n"
            ],
            [
                "44789577 44789576 -1 0\r\n",
                "FIRST\r\n44789576"
            ],
            [
                "434676805 434676075 -878 345\r\n",
                "FIRST\r\n434676075"
            ],
            [
                "547686188 61562151 -496372503 -115242932\r\n",
                "FIRST\r\n61562151"
            ],
            [
                "775517456 -869957101 -1 -1\r\n",
                "FIRST\r\n775517455"
            ],
            [
                "637107829 -403198378 -2 -2\r\n",
                "DRAW\r\n"
            ],
            [
                "-318865784 794140986 2 3\r\n",
                "SECOND\r\n"
            ],
            [
                "999763526 -998481439 -815 -157\r\n",
                "FIRST\r\n999762965"
            ],
            [
                "416100128 -709112339 -190811 -190811\r\n",
                "FIRST\r\n415909317"
            ],
            [
                "183003032 -631999413 -1000002 -1\r\n",
                "SECOND\r\n"
            ],
            [
                "847094637 -152905363 -1000000000 -1000000000\r\n",
                "FIRST\r\n-152905363"
            ],
            [
                "-1000000000 1000000000 1 1\r\n",
                "SECOND\r\n"
            ],
            [
                "-1000000000 1000000000 0 0\r\n",
                "DRAW\r\n"
            ],
            [
                "1000000000 999999999 -1000000000 -2\r\n",
                "DRAW\r\n"
            ],
            [
                "0 1 -1000000000 1000000000\r\n",
                "FIRST\r\n1"
            ],
            [
                "-1000000000 1000000000 1230987 9871231\r\n",
                "FIRST\r\n-998399240"
            ],
            [
                "-1000000000 1000000000 0 1000000000\r\n",
                "DRAW\r\n"
            ],
            [
                "-1000000000 1000000000 1 999999999\r\n",
                "SECOND\r\n"
            ],
            [
                "-1000000000 1000000000 499999999 500000000\r\n",
                "DRAW\r\n"
            ],
            [
                "-1000000000 1000000000 1000000000 1000000000\r\n",
                "SECOND\r\n"
            ],
            [
                "1000000000 -1000000000 1000000000 1000000000\r\n",
                "DRAW\r\n"
            ],
            [
                "0 6 2 5\r\n",
                "DRAW\r\n"
            ]
        ]
    }
]