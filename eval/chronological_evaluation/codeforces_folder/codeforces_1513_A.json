[
    {
        "name": "Array and Peaks",
        "description": "A sequence of \n    n\n integers is called a permutation if it contains all\nintegers from \n    1\n to \n    n\n exactly once. Given two integers \n    n\n and\n\n    k\n, construct a permutation \n    a\n of numbers from \n    1\n to \n    n\n\nwhich has exactly \n    k\n peaks. An index \n    i\n of an array \n    a\n of size\n\n    n\n is said to be a peak if \n    1 < i < n\n and \n    a_i \n     a_i-1\n\nand \n    a_i \n     a_i+1\n. If such permutation is not possible, then print\n\n    -1\n. Input The first line contains an integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 100\n) \u2014 the number of test cases. Then \n    t\n lines follow, each\ncontaining two space-separated integers \n    n\n (\n    1 \n    \u2264 n \n    \u2264 100\n)\nand \n    k\n (\n    0 \n    \u2264 k \n    \u2264 n\n) \u2014 the length of an array and the\nrequired number of peaks. Output Output \n    t\n lines. For each test case, if\nthere is no permutation with given length and number of peaks, then print\n\n    -1\n. Otherwise print a line containing \n    n\n space-separated integers\nwhich forms a permutation of numbers from \n    1\n to \n    n\n and contains\nexactly \n    k\n peaks. If there are multiple answers, print any. Example Input\n5 1 0 5 2 6 6 2 1 6 1 Output 1 2 4 1 5 3 -1 -1 1 3 6 5 4 2 Note In the second\ntest case of the example, we have array \n    a = [2,4,1,5,3]\n. Here, indices\n\n    i=2\n and \n    i=4\n are the peaks of the array. This is because \n    (a_2\n     a_1\n, \n    a_2\n     a_3)\n and \n    (a_4\n     a_3\n,\n\n    a_4\n     a_5)\n.\n\n",
        "cf_contest_id": 1513,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n1 0\r\n5 2\r\n6 6\r\n2 1\r\n6 1\r\n",
                "1\r\n1 3 2 5 4\r\n-1\r\n-1\r\n1 3 2 4 5 6\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n79 29\r\n",
                "1 3 2 5 4 7 6 9 8 11 10 13 12 15 14 17 16 19 18 21 20 23 22 25 24 27 26 29 28 31 30 33 32 35 34 37 36 39 38 41 40 43 42 45 44 47 46 49 48 51 50 53 52 55 54 57 56 59 58 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79\r\n"
            ]
        ]
    }
]