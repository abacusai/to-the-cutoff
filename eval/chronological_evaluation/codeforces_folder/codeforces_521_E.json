[
    {
        "name": "Cycling City",
        "description": "You are organizing a cycling race on the streets of the city. The city\ncontains n junctions, some pairs of them are connected by roads; on each road\nyou can move in any direction. No two roads connect the same pair of\nintersections, and no road connects the intersection with itself. You want the\nrace to be open to both professional athletes and beginner cyclists, and\nthat's why you will organize the race in three nominations: easy, moderate and\ndifficult; each participant will choose the more suitable nomination. For each\nnomination you must choose the route \u2014 the chain of junctions, consecutively\nconnected by roads. Routes must meet the following conditions: all three\nroutes should start at the same intersection, and finish at the same\nintersection (place of start and finish can't be the same); to avoid\ncollisions, no two routes can have common junctions (except for the common\nstart and finish), and can not go along the same road (irrespective of the\ndriving direction on the road for those two routes); no route must pass twice\nthrough the same intersection or visit the same road twice (irrespective of\nthe driving direction on the road for the first and second time of\nvisit).Preparing for the competition is about to begin, and you need to\ndetermine the routes of the race as quickly as possible. The length of the\nroutes is not important, it is only important that all the given requirements\nwere met. Input The first line contains two integers n and m (1 \u2264 n, m \u2264\n2\u00b710^5) \u2014 the number of intersections and roads, respectively. The following m\nlines contain two integers \u2014 the numbers of the intersections connected by a\nroad (the intersections are numbered starting with 1). It is guaranteed that\neach pair of intersections is connected by no more than one road, and no road\nconnects the intersection to itself. Please note that it is not guaranteed\nthat you can get from any junction to any other one by using the roads. Output\nIf it is possible to create the routes, in the first line print \"YES\". In the\nnext three lines print the descriptions of each of the three routes in the\nformat \"l p1 ... pl\", where l is the number of intersections in the route, and\np1, ..., pl are their numbers in the order they follow. The routes must meet\nall the requirements specified in the statement. If it is impossible to make\nthe routes in accordance with the requirements, print NO. Examples Input 4 4 1\n2 2 3 3 4 4 1 Output NO Input 5 6 1 2 1 3 1 4 2 5 3 5 4 5 Output YES 3 5 4 1 3\n5 3 1 3 5 2 1\n\n",
        "cf_contest_id": 521,
        "cf_index": "E",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 4\r\n1 2\r\n2 3\r\n3 4\r\n4 1\r\n",
                "NO\r\n"
            ],
            [
                "5 6\r\n1 2\r\n1 3\r\n1 4\r\n2 5\r\n3 5\r\n4 5\r\n",
                "YES\r\n3 1 2 5\r\n3 1 3 5\r\n3 1 4 5\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 10\r\n7 6\r\n2 1\r\n9 3\r\n6 1\r\n6 10\r\n4 1\r\n7 5\r\n5 1\r\n4 10\r\n5 6\r\n",
                "YES\r\n3 6 7 5\r\n3 6 1 5\r\n2 6 5\r\n"
            ],
            [
                "2 1\r\n2 1\r\n",
                "NO\r\n"
            ],
            [
                "10 20\r\n5 1\r\n10 5\r\n2 10\r\n6 4\r\n10 6\r\n9 6\r\n1 7\r\n3 10\r\n3 2\r\n6 2\r\n5 4\r\n7 10\r\n3 9\r\n9 1\r\n5 3\r\n7 9\r\n8 4\r\n4 7\r\n6 3\r\n10 8\r\n",
                "YES\r\n3 10 2 3\r\n6 10 5 4 6 9 3\r\n2 10 3\r\n"
            ],
            [
                "10 5\r\n6 2\r\n2 1\r\n2 7\r\n10 7\r\n4 6\r\n",
                "NO\r\n"
            ],
            [
                "4 5\r\n4 3\r\n1 4\r\n3 1\r\n2 1\r\n2 4\r\n",
                "YES\r\n2 1 4\r\n3 1 3 4\r\n3 1 2 4\r\n"
            ],
            [
                "10 10\r\n1 10\r\n5 7\r\n7 8\r\n9 4\r\n8 2\r\n6 4\r\n9 1\r\n10 5\r\n3 6\r\n3 2\r\n",
                "NO\r\n"
            ],
            [
                "20 19\r\n19 4\r\n15 3\r\n14 16\r\n6 13\r\n19 9\r\n10 15\r\n13 19\r\n15 19\r\n17 12\r\n9 20\r\n5 13\r\n16 6\r\n15 11\r\n3 7\r\n1 4\r\n2 9\r\n11 8\r\n18 10\r\n17 10\r\n",
                "NO\r\n"
            ],
            [
                "10 12\r\n3 10\r\n2 9\r\n4 5\r\n5 10\r\n7 3\r\n8 4\r\n2 4\r\n8 7\r\n6 9\r\n9 1\r\n8 3\r\n1 3\r\n",
                "YES\r\n3 3 7 8\r\n5 3 10 5 4 8\r\n2 3 8\r\n"
            ],
            [
                "50 65\r\n36 28\r\n14 31\r\n1 10\r\n6 26\r\n29 7\r\n37 41\r\n49 37\r\n45 28\r\n33 36\r\n11 43\r\n31 22\r\n38 19\r\n18 41\r\n5 45\r\n4 16\r\n42 34\r\n19 1\r\n39 26\r\n6 39\r\n3 45\r\n15 35\r\n11 21\r\n32 46\r\n39 48\r\n38 22\r\n12 47\r\n14 18\r\n14 33\r\n23 7\r\n13 25\r\n9 37\r\n32 40\r\n27 17\r\n31 50\r\n34 44\r\n13 18\r\n36 45\r\n34 15\r\n29 44\r\n48 45\r\n12 15\r\n15 47\r\n8 38\r\n24 42\r\n37 25\r\n14 16\r\n11 16\r\n31 33\r\n17 46\r\n38 12\r\n2 10\r\n35 7\r\n19 8\r\n30 45\r\n40 12\r\n20 9\r\n5 3\r\n20 37\r\n16 18\r\n12 50\r\n34 24\r\n21 4\r\n12 27\r\n30 39\r\n2 19\r\n",
                "NO\r\n"
            ],
            [
                "70 69\r\n29 10\r\n27 36\r\n29 57\r\n67 26\r\n2 48\r\n16 47\r\n27 54\r\n70 63\r\n12 5\r\n33 51\r\n35 60\r\n49 23\r\n31 25\r\n40 13\r\n40 27\r\n4 66\r\n60 12\r\n56 69\r\n22 31\r\n58 52\r\n1 62\r\n38 47\r\n15 9\r\n17 55\r\n12 68\r\n33 66\r\n45 33\r\n59 19\r\n31 43\r\n19 11\r\n25 3\r\n55 65\r\n10 44\r\n48 35\r\n23 64\r\n19 14\r\n60 34\r\n31 33\r\n46 67\r\n1 30\r\n50 41\r\n34 18\r\n67 21\r\n61 23\r\n63 19\r\n30 13\r\n15 40\r\n33 39\r\n7 59\r\n10 35\r\n56 40\r\n27 49\r\n53 18\r\n39 13\r\n5 24\r\n42 12\r\n39 50\r\n8 7\r\n36 20\r\n27 37\r\n10 26\r\n11 33\r\n12 32\r\n1 28\r\n10 58\r\n61 47\r\n10 40\r\n39 6\r\n56 17\r\n",
                "NO\r\n"
            ],
            [
                "65 69\r\n41 58\r\n26 30\r\n9 25\r\n57 59\r\n19 51\r\n17 15\r\n57 1\r\n27 31\r\n48 62\r\n39 31\r\n12 64\r\n25 24\r\n57 47\r\n51 53\r\n51 49\r\n45 12\r\n11 47\r\n58 3\r\n31 26\r\n25 54\r\n14 15\r\n12 65\r\n32 27\r\n33 16\r\n57 24\r\n40 60\r\n24 36\r\n35 42\r\n10 29\r\n46 22\r\n30 63\r\n43 17\r\n65 18\r\n58 48\r\n33 2\r\n22 37\r\n30 33\r\n61 50\r\n33 54\r\n34 53\r\n47 8\r\n49 17\r\n12 52\r\n20 35\r\n61 34\r\n44 35\r\n55 38\r\n33 21\r\n32 34\r\n35 7\r\n57 58\r\n10 14\r\n10 4\r\n40 46\r\n14 22\r\n25 61\r\n14 55\r\n25 22\r\n12 57\r\n28 22\r\n42 25\r\n7 56\r\n24 6\r\n12 13\r\n35 1\r\n55 5\r\n63 54\r\n14 23\r\n25 26\r\n",
                "YES\r\n9 25 54 33 30 26 31 27 32 34\r\n9 25 22 14 15 17 49 51 53 34\r\n3 25 61 34\r\n"
            ],
            [
                "65 69\r\n20 23\r\n18 33\r\n16 19\r\n9 22\r\n48 11\r\n5 57\r\n39 37\r\n60 38\r\n12 32\r\n39 49\r\n50 8\r\n55 56\r\n17 29\r\n8 24\r\n11 58\r\n38 61\r\n14 48\r\n22 15\r\n46 49\r\n51 41\r\n64 47\r\n20 6\r\n19 12\r\n51 10\r\n28 23\r\n6 45\r\n13 34\r\n53 40\r\n34 31\r\n63 19\r\n33 17\r\n47 2\r\n57 42\r\n45 60\r\n43 37\r\n24 14\r\n54 7\r\n7 31\r\n56 2\r\n46 4\r\n65 44\r\n55 3\r\n63 42\r\n28 52\r\n1 62\r\n52 32\r\n35 15\r\n9 15\r\n29 64\r\n41 10\r\n21 59\r\n4 26\r\n41 13\r\n36 5\r\n3 53\r\n44 21\r\n16 63\r\n30 25\r\n18 43\r\n1 50\r\n62 50\r\n59 36\r\n62 26\r\n27 35\r\n58 9\r\n27 25\r\n54 65\r\n40 51\r\n10 40\r\n",
                "YES\r\n3 51 41 10\r\n3 51 40 10\r\n2 51 10\r\n"
            ],
            [
                "70 1\r\n61 39\r\n",
                "NO\r\n"
            ],
            [
                "70 50\r\n36 30\r\n37 5\r\n59 23\r\n22 56\r\n34 45\r\n55 62\r\n68 67\r\n57 33\r\n49 43\r\n22 65\r\n50 55\r\n11 5\r\n22 30\r\n17 45\r\n30 32\r\n28 42\r\n14 60\r\n41 53\r\n26 20\r\n23 48\r\n69 64\r\n26 19\r\n59 24\r\n57 9\r\n49 31\r\n1 31\r\n2 31\r\n35 9\r\n45 15\r\n38 60\r\n51 3\r\n70 17\r\n59 37\r\n33 51\r\n35 55\r\n26 12\r\n47 62\r\n13 17\r\n2 32\r\n30 70\r\n66 68\r\n31 44\r\n6 37\r\n30 26\r\n64 42\r\n48 5\r\n62 35\r\n56 57\r\n11 27\r\n45 63\r\n",
                "NO\r\n"
            ],
            [
                "200000 1\r\n153173 114911\r\n",
                "NO\r\n"
            ],
            [
                "200000 10\r\n425 16880\r\n80295 142269\r\n193305 152383\r\n56170 64693\r\n145495 53075\r\n124239 125071\r\n107828 125082\r\n149367 8796\r\n158195 119745\r\n124904 68110\r\n",
                "NO\r\n"
            ]
        ]
    }
]