[
    {
        "name": "Customising the Track",
        "description": "Highway 201 is the most busy street in Rockport. Traffic cars cause a lot of\nhindrances to races, especially when there are a lot of them. The track which\npasses through this highway can be divided into \n    n\n sub-tracks. You are\ngiven an array \n    a\n where \n    a_i\n represents the number of traffic cars\nin the \n    i\n-th sub-track. You define the inconvenience of the track as\n\n    \u2211\n    _i=1^n\n    \u2211\n    _j=i+1^n\n    | a_i-\n    a_j\n    |\n, where \n    |x|\n is the absolute value of \n    x\n. You can\nperform the following operation any (possibly zero) number of times: choose a\ntraffic car and move it from its current sub-track to any other sub-track.\nFind the minimum inconvenience you can achieve. Input The first line of input\ncontains a single integer \n    t\n (\n    1\n    \u2264 t\n    \u2264 10\n     000\n) \u2014 the\nnumber of test cases. The first line of each test case contains a single\ninteger \n    n\n (\n    1\n    \u2264 n\n    \u2264 2\n    \u00b7 10^5\n). The second line of each\ntest case contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0\n    \u2264\n    a_i\n    \u2264 10^9\n). It is guaranteed that the sum of \n    n\n over all test\ncases does not exceed \n    2\n    \u00b7 10^5\n. Output For each test case, print a\nsingle line containing a single integer: the minimum inconvenience you can\nachieve by applying the given operation any (possibly zero) number of times.\nExample Input 3 3 1 2 3 4 0 1 1 0 10 8 3 6 11 5 2 1 7 10 4 Output 0 4 21 Note\nFor the first test case, you can move a car from the \n    3\n-rd sub-track to\nthe \n    1\n-st sub-track to obtain \n    0\n inconvenience. For the second test\ncase, moving any car won't decrease the inconvenience of the track.\n\n",
        "cf_contest_id": 1543,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n1 2 3\r\n4\r\n0 1 1 0\r\n10\r\n8 3 6 11 5 2 1 7 10 4\r\n",
                "0\r\n4\r\n21\r\n"
            ]
        ],
        "private_cases": []
    }
]