[
    {
        "name": "A task for substrings",
        "description": "Philip is very fond of tasks on the lines. He had already solved all the\nproblems known to him, but this was not enough for him. Therefore, Philip\ndecided to come up with his own task.To do this, he took the string \n    t\n\nand a set of \n    n\n strings \n    s_1\n, \n    s_2\n, \n    s_3\n, ..., \n    s_n\n.\nPhilip has \n    m\n queries, in the \n    i\nth of them, Philip wants to take a\nsubstring of the string \n    t\n from \n    l_i\nth to \n    r_i\nth character, and\ncount the number of its substrings that match some string from the set. More\nformally, Philip wants to count the number of pairs of positions \n    a\n,\n\n    b\n, such that \n    l_i \n    \u2264 a \n    \u2264 b \n    \u2264 r_i\n, and the substring of\nthe string \n    t\n from \n    a\nth to \n    b\nth character coincides with some\nstring \n    s_j\n from the set. A substring of the string \n    t\n from\n\n    a\nth to \n    b\nth character is a string obtained from \n    t\n by removing\nthe \n    a - 1\n character from the beginning and \n    |t| - b\n characters from\nthe end, where \n    |t|\n denotes the length of the string \n    t\n. Philip has\nalready solved this problem, but can you? Input The first line contains two\npositive integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 500\n     000\n) \u2014\nthe number of rows in the set and the number of queries. The second line\ncontains a single string \n    t\n consisting of lowercase letters of the\nEnglish alphabet (\n    1 \n    \u2264 |t| \n    \u2264 5 \n    \u00b7 10^6\n). The following\n\n    n\n lines describe the strings from the set. In the \n    i\nth of them, a\nsingle string \n    s_i\n is given, consisting of lowercase letters of the\nEnglish alphabet. Denote by \n    S\n the total length of all strings from the\nset. It is guaranteed that \n    S \n    \u2264 10^6\n, as well as that all strings of\n\n    s_i\n are different. In the following lines, queries are entered. The\n\n    i\nth of them contains two positive integers \n    l_i\n and \n    r_i\n (\n    1\n    \n    \u2264 l_i \n    \u2264 r_i \n    \u2264 |t|\n) \u2014 the left and right border of the substring\n\n    t\n from the \n    i\n-th query. Output In a single line, print \n    m\n\nintegers, \n    i\nth of them should be equal to the answers to the \n    i\nth\nquery. Examples Input 3 5 abacaba aba a ac 1 7 1 3 2 7 2 5 4 5 Output 7 3 5 3\n1 Input 4 4 abcdca ab ca bcd openolympiad 1 5 2 2 2 6 1 6 Output 2 0 2 3 Note\nIn the first example, the first query requires the entire string to count the\nnumber of substrings that are included in the set. The substrings \n    [1, 3]\n\nand \n    [4, 6]\n coincide with the string \"aba\". The substrings match with the\nstring \"a\" \n    [1, 1]\n, \n    [3, 3]\n, \n    [5, 5]\n, \n    [7, 7]\n. The\nsubstring \n    [3, 4]\n matches the string \"ac\". In total, it turns out that 7\nsubstrings of the string \"abacaba\" match the strings from the set. In the\nsecond query, a substring from position 1 to position 3 is taken from the\nsource string, this is the string \"aba\". The string \"aba\" enters it 1 time,\nthe string \"a\" enters it 2 times and the string \"ac\" does not enter it once as\na substring. In the third query, a substring from the 2nd to the 7th position\nis taken from the source string, this is the string \"bacaba\". The string \"aba\"\nis included in it 1 time, the string \"a\" is included 3 times and the string\n\"ac\" is included 1 time as a substring.\n\n",
        "cf_contest_id": 1801,
        "cf_index": "G",
        "cf_rating": 3400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "string suffix structures",
            "strings"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "3 5\r\nabacaba\r\naba\r\na\r\nac\r\n1 7\r\n1 3\r\n2 7\r\n2 5\r\n4 5\r\n",
                "7 3 5 3 1 "
            ],
            [
                "4 4\r\nabcdca\r\nab\r\nca\r\nbcd\r\nopenolympiad\r\n1 5\r\n2 2\r\n2 6\r\n1 6\r\n",
                "2 0 2 3 "
            ]
        ],
        "private_cases": [
            [
                "11 21\r\nabcdefghijklmnop\r\nbcdefg\r\nbcda\r\naefg\r\ncda\r\naef\r\nb\r\nc\r\nd\r\ne\r\nf\r\ng\r\n2 7\r\n2 6\r\n2 5\r\n2 4\r\n2 3\r\n2 2\r\n3 7\r\n3 6\r\n3 5\r\n3 4\r\n3 3\r\n4 7\r\n4 6\r\n4 5\r\n4 4\r\n5 7\r\n5 6\r\n5 5\r\n6 7\r\n6 6\r\n7 7\r\n",
                "7 5 4 3 2 1 5 4 3 2 1 4 3 2 1 3 2 1 2 1 1 "
            ],
            [
                "1 1\r\nz\r\nz\r\n1 1\r\n",
                "1 "
            ]
        ]
    }
]