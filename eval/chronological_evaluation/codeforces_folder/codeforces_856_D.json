[
    {
        "name": "Masha and Cactus",
        "description": "Masha is fond of cacti. When she was a little girl, she decided to plant a\ntree. Now Masha wants to make a nice cactus out of her tree. Recall that tree\nis a connected undirected graph that has no cycles. Cactus is a connected\nundirected graph such that each vertex belongs to at most one cycle. Masha has\nsome additional edges that she can add to a tree. For each edge she knows\nwhich vertices it would connect and the beauty of this edge. Masha can add\nsome of these edges to the graph if the resulting graph is a cactus. Beauty of\nthe resulting cactus is sum of beauties of all added edges. Help Masha find\nout what maximum beauty of the resulting cactus she can achieve. Input The\nfirst line of the input data contains two integers n and m \u2014 the number of\nvertices in a tree, and the number of additional edges available (3 \u2264 n \u2264\n2\u00b710^5; 0 \u2264 m \u2264 2\u00b710^5). Let us describe Masha's tree. It has a root at vertex\n1. The second line contains n - 1 integers: p2, p3, ..., pn, here pi \u2014 is the\nparent of a vertex i \u2014 the first vertex on a path from the vertex i to the\nroot of the tree (1 \u2264 pi < i). The following m lines contain three integers\nui, vi and ci \u2014 pairs of vertices to be connected by the additional edges that\nMasha can add to the tree and beauty of edge (1 \u2264 ui, vi \u2264 n; ui \u2260 vi; 1 \u2264 ci\n\u2264 10^4). It is guaranteed that no additional edge coincides with the edge of\nthe tree. Output Output one integer \u2014 the maximum beauty of a cactus Masha can\nachieve. Example Input 7 3 1 1 2 2 3 3 4 5 1 6 7 1 2 3 1 Output 2\n\n",
        "cf_contest_id": 856,
        "cf_index": "D",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 3\r\n1 1 2 2 3 3\r\n4 5 1\r\n6 7 1\r\n2 3 1\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "3 3\r\n1 2\r\n3 1 205\r\n3 1 6807\r\n3 1 2499\r\n",
                "6807"
            ],
            [
                "3 4\r\n1 1\r\n2 3 9272\r\n2 3 1820\r\n3 2 8544\r\n2 3 1575\r\n",
                "9272"
            ],
            [
                "4 5\r\n1 2 3\r\n1 4 2057\r\n1 3 9085\r\n1 3 7001\r\n1 3 8272\r\n1 3 4793\r\n",
                "9085"
            ],
            [
                "5 5\r\n1 2 3 4\r\n4 1 2057\r\n1 5 9085\r\n3 5 7001\r\n5 1 3602\r\n2 5 9758\r\n",
                "9758"
            ],
            [
                "6 5\r\n1 2 3 4 5\r\n1 6 2057\r\n1 5 9085\r\n1 3 7253\r\n2 6 623\r\n3 5 4793\r\n",
                "9085"
            ],
            [
                "10 5\r\n1 2 3 4 5 6 7 8 9\r\n9 6 2057\r\n1 5 9085\r\n3 5 7001\r\n5 9 8272\r\n8 3 3949\r\n",
                "11142"
            ],
            [
                "11 3\r\n1 2 3 4 5 6 7 8 9 10\r\n1 11 5272\r\n8 4 6807\r\n9 6 6916\r\n",
                "6916"
            ],
            [
                "100 14\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\r\n68 35 5901\r\n64 33 7206\r\n98 37 5242\r\n80 68 4243\r\n68 60 4795\r\n68 91 9011\r\n13 70 2813\r\n28 67 3220\r\n54 61 5558\r\n34 77 344\r\n19 1 8242\r\n59 72 8133\r\n11 48 8300\r\n73 20 8190\r\n",
                "24459"
            ],
            [
                "4 5\r\n1 1 1\r\n3 4 7158\r\n2 3 7965\r\n2 3 5109\r\n4 3 8203\r\n3 4 1731\r\n",
                "8203"
            ],
            [
                "5 5\r\n1 1 1 1\r\n3 5 7001\r\n5 4 8272\r\n4 2 4793\r\n5 3 7711\r\n2 3 1274\r\n",
                "8272"
            ],
            [
                "6 5\r\n1 2 2 2 1\r\n5 3 1635\r\n3 5 3755\r\n3 5 4793\r\n3 5 4435\r\n3 6 8167\r\n",
                "8167"
            ],
            [
                "10 5\r\n1 2 3 3 1 2 3 7 9\r\n9 6 2057\r\n1 5 9085\r\n1 5 4119\r\n2 8 623\r\n1 7 1431\r\n",
                "9085"
            ],
            [
                "11 3\r\n1 1 2 1 5 6 7 3 3 2\r\n1 11 5272\r\n11 10 5998\r\n4 9 6735\r\n",
                "6735"
            ],
            [
                "100 14\r\n1 2 1 1 3 6 5 5 4 8 4 4 3 14 10 14 8 13 12 18 8 3 7 1 12 10 9 17 26 30 21 11 29 19 20 25 17 10 9 26 6 40 42 29 2 24 14 25 6 41 47 24 21 46 28 8 30 2 19 41 54 43 23 1 65 21 19 35 58 8 71 59 12 2 13 4 16 7 22 58 26 44 1 12 14 80 19 12 43 77 21 54 41 94 37 61 28 82 30\r\n68 35 5901\r\n64 33 7206\r\n98 37 5242\r\n80 68 4243\r\n68 60 4795\r\n68 91 9011\r\n13 70 2813\r\n28 67 3220\r\n54 61 5558\r\n34 77 344\r\n19 1 8242\r\n59 72 8133\r\n11 48 8300\r\n73 20 8190\r\n",
                "17311"
            ]
        ]
    }
]