[
    {
        "name": "Strange List",
        "description": "You have given an array \n    a\n of length \n    n\n and an integer \n    x\n to a\nbrand new robot. What the robot does is the following: it iterates over the\nelements of the array, let the current element be \n    q\n. If \n    q\n is\ndivisible by \n    x\n, the robot adds \n    x\n copies of the integer\n\n    q/x\n to the end of the array, and moves on to the next element.\nNote that the newly added elements could be processed by the robot later.\nOtherwise, if \n    q\n is not divisible by \n    x\n, the robot shuts down.\nPlease determine the sum of all values of the array at the end of the process.\nInput The first input line contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 100\n) \u2014 the number of test cases. The first line of each test case\ncontains two integers \n    n\n and \n    x\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n, \n    2\n    \n    \u2264 x \n    \u2264 10^9\n) \u2014 the length of the array and the value which is used\nby the robot. The next line contains integers \n    a_1\n, \n    a_2\n, ...,\n\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the initial values in the array.\nIt is guaranteed that the sum of values \n    n\n over all test cases does not\nexceed \n    10^5\n. Output For each test case output one integer \u2014 the sum of\nall elements at the end of the process. Example Input 2 1 2 12 4 2 4 6 8 2\nOutput 36 44 Note In the first test case the array initially consists of a\nsingle element \n    [12]\n, and \n    x=2\n. After the robot processes the first\nelement, the array becomes \n    [12, 6, 6]\n. Then the robot processes the\nsecond element, and the array becomes \n    [12, 6, 6, 3, 3]\n. After the robot\nprocesses the next element, the array becomes \n    [12, 6, 6, 3, 3, 3, 3]\n,\nand then the robot shuts down, since it encounters an element that is not\ndivisible by \n    x = 2\n. The sum of the elements in the resulting array is\nequal to \n    36\n. In the second test case the array initially contains\nintegers \n    [4, 6, 8, 2]\n, and \n    x=2\n. The resulting array in this case\nlooks like \n    [4, 6, 8, 2, 2, 2, 3, 3, 4, 4, 1, 1, 1, 1, 1, 1]\n.\n\n",
        "cf_contest_id": 1471,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1 2\r\n12\r\n4 2\r\n4 6 8 2\r\n",
                "36\r\n44\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n2 3\r\n1 12\r\n4 2\r\n4 6 8 9\r\n5 7\r\n49 49 49 7 49\r\n",
                "13\r\n45\r\n553\r\n"
            ],
            [
                "2\r\n5 2\r\n8 16 84 58 17\r\n5 2\r\n39 12 59 31 93\r\n",
                "349\r\n234\r\n"
            ],
            [
                "1\r\n20 9\r\n288 279 252 279 288 207 261 270 297 288 276 265 209 217 214 300 227 221 215 271\r\n",
                "7833\r\n"
            ]
        ]
    }
]