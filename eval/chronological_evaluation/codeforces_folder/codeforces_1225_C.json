[
    {
        "name": "p-binary",
        "description": "Vasya will fancy any number as long as it is an integer power of two. Petya,\non the other hand, is very conservative and only likes a single integer\n\n    p\n (which may be positive, negative, or zero). To combine their tastes,\nthey invented \n    p\n-binary numbers of the form \n    2^x + p\n, where \n    x\n\nis a non-negative integer. For example, some \n    -9\n-binary (\"minus nine\"\nbinary) numbers are: \n    -8\n (minus eight), \n    7\n and \n    1015\n\n(\n    -8=2^0-9\n, \n    7=2^4-9\n, \n    1015=2^10-9\n). The boys now use\n\n    p\n-binary numbers to represent everything. They now face a problem: given\na positive integer \n    n\n, what's the smallest number of \n    p\n-binary\nnumbers (not necessarily distinct) they need to represent \n    n\n as their\nsum? It may be possible that representation is impossible altogether. Help\nthem solve this problem. For example, if \n    p=0\n we can represent \n    7\n as\n\n    2^0 + 2^1 + 2^2\n. And if \n    p=-9\n we can represent \n    7\n as one\nnumber \n    (2^4-9)\n. Note that negative \n    p\n-binary numbers are allowed to\nbe in the sum (see the Notes section for an example). Input The only line\ncontains two integers \n    n\n and \n    p\n (\n    1 \n    \u2264 n \n    \u2264 10^9\n,\n\n    -1000 \n    \u2264 p \n    \u2264 1000\n). Output If it is impossible to represent\n\n    n\n as the sum of any number of \n    p\n-binary numbers, print a single\ninteger \n    -1\n. Otherwise, print the smallest possible number of summands.\nExamples Input 24 0 Output 2 Input 24 1 Output 3 Input 24 -1 Output 4 Input 4\n-7 Output 2 Input 1 1 Output -1 Note \n    0\n-binary numbers are just regular\nbinary powers, thus in the first sample case we can represent \n    24 = (2^4 +\n    0) + (2^3 + 0)\n. In the second sample case, we can represent \n    24 = (2^4 +\n    1) + (2^2 + 1) + (2^0 + 1)\n. In the third sample case, we can represent\n\n    24 = (2^4 - 1) + (2^2 - 1) + (2^2 - 1) + (2^2 - 1)\n. Note that repeated\nsummands are allowed. In the fourth sample case, we can represent \n    4 = (2^4\n    - 7) + (2^1 - 7)\n. Note that the second summand is negative, which is\nallowed. In the fifth sample case, no representation is possible.\n\n",
        "cf_contest_id": 1225,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "24 0\r\n",
                "2\r\n"
            ],
            [
                "24 1\r\n",
                "3\r\n"
            ],
            [
                "24 -1\r\n",
                "4\r\n"
            ],
            [
                "4 -7\r\n",
                "2\r\n"
            ],
            [
                "1 1\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 7\r\n",
                "-1\r\n"
            ],
            [
                "3 -179\r\n",
                "5\r\n"
            ],
            [
                "12345678 -123\r\n",
                "12\r\n"
            ],
            [
                "1000000000 1000\r\n",
                "16\r\n"
            ],
            [
                "1 0\r\n",
                "1\r\n"
            ],
            [
                "1 -1\r\n",
                "1\r\n"
            ],
            [
                "536870912 0\r\n",
                "1\r\n"
            ],
            [
                "536870911 0\r\n",
                "29\r\n"
            ],
            [
                "1 -1000\r\n",
                "8\r\n"
            ],
            [
                "100500 -179\r\n",
                "8\r\n"
            ],
            [
                "1000000000 -1000\r\n",
                "14\r\n"
            ],
            [
                "536870812 1\r\n",
                "24\r\n"
            ],
            [
                "536870812 -1\r\n",
                "26\r\n"
            ],
            [
                "1 1000\r\n",
                "-1\r\n"
            ],
            [
                "1001 1000\r\n",
                "1\r\n"
            ],
            [
                "13 -987\r\n",
                "7\r\n"
            ],
            [
                "101 50\r\n",
                "-1\r\n"
            ],
            [
                "1001 500\r\n",
                "-1\r\n"
            ],
            [
                "13 6\r\n",
                "-1\r\n"
            ],
            [
                "5 2\r\n",
                "-1\r\n"
            ],
            [
                "67108838 -1\r\n",
                "26\r\n"
            ],
            [
                "11 5\r\n",
                "-1\r\n"
            ],
            [
                "19 6\r\n",
                "-1\r\n"
            ],
            [
                "21 10\r\n",
                "-1\r\n"
            ],
            [
                "1 -1\r\n",
                "1\r\n"
            ],
            [
                "2001 1000\r\n",
                "-1\r\n"
            ],
            [
                "17 8\r\n",
                "-1\r\n"
            ],
            [
                "3002 1000\r\n",
                "-1\r\n"
            ],
            [
                "332639425 -399\r\n",
                "13\r\n"
            ],
            [
                "9 8\r\n",
                "1\r\n"
            ],
            [
                "3 2\r\n",
                "1\r\n"
            ],
            [
                "678 169\r\n",
                "-1\r\n"
            ],
            [
                "2 1\r\n",
                "1\r\n"
            ],
            [
                "9 4\r\n",
                "-1\r\n"
            ],
            [
                "29 9\r\n",
                "-1\r\n"
            ],
            [
                "782 156\r\n",
                "-1\r\n"
            ],
            [
                "1 0\r\n",
                "1\r\n"
            ],
            [
                "1999 999\r\n",
                "-1\r\n"
            ],
            [
                "47 23\r\n",
                "-1\r\n"
            ],
            [
                "3998 999\r\n",
                "-1\r\n"
            ],
            [
                "4 3\r\n",
                "1\r\n"
            ],
            [
                "746 248\r\n",
                "-1\r\n"
            ],
            [
                "2 -1000\r\n",
                "8\r\n"
            ],
            [
                "35 11\r\n",
                "-1\r\n"
            ],
            [
                "16777215 0\r\n",
                "24\r\n"
            ]
        ]
    }
]