[
    {
        "name": "Beautiful Lyrics",
        "description": "You are given \n    n\n words, each of which consists of lowercase alphabet\nletters. Each word contains at least one vowel. You are going to choose some\nof the given words and make as many beautiful lyrics as possible. Each lyric\nconsists of two lines. Each line consists of two words separated by\nwhitespace. A lyric is beautiful if and only if it satisfies all conditions\nbelow. The number of vowels in the first word of the first line is the same as\nthe number of vowels in the first word of the second line. The number of\nvowels in the second word of the first line is the same as the number of\nvowels in the second word of the second line. The last vowel of the first line\nis the same as the last vowel of the second line. Note that there may be\nconsonants after the vowel. Also, letters \"a\", \"e\", \"o\", \"i\", and \"u\" are\nvowels. Note that \"y\" is never vowel. For example of a beautiful lyric, \"hello\nhellooowww\" \"whatsup yowowowow\" is a beautiful lyric because there are two\nvowels each in \"hello\" and \"whatsup\", four vowels each in \"hellooowww\" and\n\"yowowowow\" (keep in mind that \"y\" is not a vowel), and the last vowel of each\nline is \"o\".For example of a not beautiful lyric, \"hey man\"\"iam mcdic\" is not\na beautiful lyric because \"hey\" and \"iam\" don't have same number of vowels and\nthe last vowels of two lines are different (\"a\" in the first and \"i\" in the\nsecond).How many beautiful lyrics can you write from given words? Note that\nyou cannot use a word more times than it is given to you. For example, if a\nword is given three times, you can use it at most three times. Input The first\nline contains single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the\nnumber of words. The \n    i\n-th of the next \n    n\n lines contains string\n\n    s_i\n consisting lowercase alphabet letters \u2014 the \n    i\n-th word. It is\nguaranteed that the sum of the total word length is equal or less than\n\n    10^6\n. Each word contains at least one vowel. Output In the first line,\nprint \n    m\n \u2014 the number of maximum possible beautiful lyrics. In next\n\n    2m\n lines, print \n    m\n beautiful lyrics (two lines per lyric). If there\nare multiple answers, print any. Examples Input 14 wow this is the first\nmcdics codeforces round hooray i am proud about that Output 3 about proud\nhooray round wow first this is i that mcdics am Input 7 arsijo suggested the\nidea for this problem Output 0 Input 4 same same same differ Output 1 same\ndiffer same same Note In the first example, those beautiful lyrics are one of\nthe possible answers. Let's look at the first lyric on the sample output of\nthe first example. \"about proud hooray round\" forms a beautiful lyric because\n\"about\" and \"hooray\" have same number of vowels, \"proud\" and \"round\" have same\nnumber of vowels, and both lines have same last vowel. On the other hand, you\ncannot form any beautiful lyric with the word \"codeforces\". In the second\nexample, you cannot form any beautiful lyric from given words. In the third\nexample, you can use the word \"same\" up to three times.\n\n",
        "cf_contest_id": 1182,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "14\r\nwow\r\nthis\r\nis\r\nthe\r\nfirst\r\nmcdics\r\ncodeforces\r\nround\r\nhooray\r\ni\r\nam\r\nproud\r\nabout\r\nthat\r\n",
                "3\r\ni this\r\nthe is\r\nhooray first\r\nabout mcdics\r\nproud am\r\nround that\r\n"
            ],
            [
                "7\r\narsijo\r\nsuggested\r\nthe\r\nidea\r\nfor\r\nthis\r\nproblem\r\n",
                "0\r\n"
            ],
            [
                "4\r\nsame\r\nsame\r\nsame\r\ndiffer\r\n",
                "1\r\ndiffer same\r\nsame same\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nimpossible\r\n",
                "0\r\n"
            ],
            [
                "4\r\naaaa\r\naaaa\r\naaaa\r\naaaa\r\n",
                "1\r\naaaa aaaa\r\naaaa aaaa\r\n"
            ]
        ]
    }
]