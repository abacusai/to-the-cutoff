[
    {
        "name": "Tavas and Pashmaks",
        "description": "Tavas is a cheerleader in the new sports competition named \"Pashmaks\". This\ncompetition consists of two part: swimming and then running. People will\nimmediately start running R meters after they finished swimming exactly S\nmeters. A winner is a such person that nobody else finishes running before\nhim/her (there may be more than one winner). Before the match starts, Tavas\nknows that there are n competitors registered for the match. Also, he knows\nthat i-th person's swimming speed is si meters per second and his/her running\nspeed is ri meters per second. Unfortunately, he doesn't know the values of R\nand S, but he knows that they are real numbers greater than 0. As a\ncheerleader, Tavas wants to know who to cheer up. So, he wants to know all\npeople that might win. We consider a competitor might win if and only if there\nare some values of R and S such that with these values, (s)he will be a\nwinner. Tavas isn't really familiar with programming, so he asked you to help\nhim. Input The first line of input contains a single integer n (1 \u2264 n \u2264 2 \u00d7\n10^5). The next n lines contain the details of competitors. i-th line contains\ntwo integers si and ri (1 \u2264 si, ri \u2264 10^4). Output In the first and the only\nline of output, print a sequence of numbers of possible winners in increasing\norder. Examples Input 3 1 3 2 2 3 1 Output 1 2 3 Input 3 1 2 1 1 2 1 Output 1\n3\n\n",
        "cf_contest_id": 535,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "geometry",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 3\r\n2 2\r\n3 1\r\n",
                "1 2 3 "
            ],
            [
                "3\r\n1 2\r\n1 1\r\n2 1\r\n",
                "1 3 "
            ]
        ],
        "private_cases": [
            [
                "5\r\n10 50\r\n10 50\r\n10 50\r\n10 50\r\n10 50\r\n",
                "1 2 3 4 5 "
            ],
            [
                "5\r\n50 50\r\n49 50\r\n50 49\r\n49 49\r\n50 1\r\n",
                "1 "
            ],
            [
                "3\r\n1000 3000\r\n1500 1500\r\n3000 1000\r\n",
                "1 2 3 "
            ],
            [
                "3\r\n1000 3000\r\n1501 1501\r\n3000 1000\r\n",
                "1 2 3 "
            ],
            [
                "3\r\n1000 3000\r\n1499 1499\r\n3000 1000\r\n",
                "1 3 "
            ],
            [
                "3\r\n10000 10000\r\n10000 10000\r\n10000 10000\r\n",
                "1 2 3 "
            ],
            [
                "2\r\n1 2\r\n2 1\r\n",
                "1 2 "
            ],
            [
                "2\r\n10000 10000\r\n10000 10000\r\n",
                "1 2 "
            ],
            [
                "1\r\n1 1\r\n",
                "1 "
            ],
            [
                "1\r\n10000 9999\r\n",
                "1 "
            ],
            [
                "44\r\n78 52\r\n75 16\r\n70 7\r\n75 16\r\n54 2\r\n70 7\r\n54 2\r\n70 7\r\n54 2\r\n70 7\r\n54 2\r\n54 2\r\n70 7\r\n70 7\r\n54 2\r\n70 7\r\n75 16\r\n70 7\r\n54 2\r\n54 2\r\n54 2\r\n54 2\r\n54 2\r\n54 2\r\n75 16\r\n70 7\r\n70 7\r\n54 2\r\n70 7\r\n75 16\r\n54 2\r\n75 16\r\n75 16\r\n54 2\r\n54 2\r\n70 7\r\n70 7\r\n75 16\r\n70 7\r\n70 7\r\n70 7\r\n75 16\r\n75 16\r\n54 2\r\n",
                "1 "
            ],
            [
                "43\r\n75 16\r\n70 7\r\n75 16\r\n54 2\r\n70 7\r\n54 2\r\n70 7\r\n54 2\r\n70 7\r\n54 2\r\n54 2\r\n70 7\r\n70 7\r\n54 2\r\n70 7\r\n75 16\r\n70 7\r\n54 2\r\n54 2\r\n54 2\r\n54 2\r\n54 2\r\n54 2\r\n75 16\r\n70 7\r\n70 7\r\n54 2\r\n70 7\r\n75 16\r\n54 2\r\n75 16\r\n75 16\r\n54 2\r\n54 2\r\n70 7\r\n70 7\r\n75 16\r\n70 7\r\n70 7\r\n70 7\r\n75 16\r\n75 16\r\n54 2\r\n",
                "1 3 16 24 29 31 32 37 41 42 "
            ],
            [
                "18\r\n82 38\r\n33 69\r\n33 69\r\n33 69\r\n33 69\r\n33 69\r\n82 38\r\n33 69\r\n33 69\r\n33 69\r\n82 38\r\n33 69\r\n33 69\r\n82 38\r\n82 38\r\n33 69\r\n33 69\r\n33 69\r\n",
                "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 "
            ],
            [
                "2\r\n1 1\r\n1 1\r\n",
                "1 2 "
            ]
        ]
    }
]