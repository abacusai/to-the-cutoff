[
    {
        "name": "From Hero to Zero",
        "description": "You are given an integer \n    n\n and an integer \n    k\n. In one step you can\ndo one of the following moves: decrease \n    n\n by \n    1\n; divide \n    n\n by\n\n    k\n if \n    n\n is divisible by \n    k\n. For example, if \n    n = 27\n and\n\n    k = 3\n you can do the following steps: \n    27 \n    \u2192 26\n    \n    \u2192 25 \n    \u2192 24 \n    \u2192 8 \n    \u2192 7\n    \n    \u2192 6 \n    \u2192 2 \n    \u2192 1 \n    \u2192 0\n. You are\nasked to calculate the minimum number of steps to reach \n    0\n from \n    n\n.\nInput The first line contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n)\n\u2014 the number of queries. The only line of each query contains two integers\n\n    n\n and \n    k\n (\n    1 \n    \u2264 n \n    \u2264 10^18\n, \n    2 \n    \u2264 k \n    \u2264\n    10^18\n). Output For each query print the minimum number of steps to reach\n\n    0\n from \n    n\n in single line. Example Input 2 59 3 1000000000000000000\n10 Output 8 19 Note Steps for the first test case are: \n    59 \n    \u2192 58\n    \n    \u2192 57 \n    \u2192 19 \n    \u2192 18 \n    \u2192 6\n    \n    \u2192 2 \n    \u2192 1 \n    \u2192 0\n. In the second test case\nyou have to divide \n    n\n by \n    k\n \n    18\n times and then decrease \n    n\n\nby \n    1\n.\n\n",
        "cf_contest_id": 1175,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n59 3\r\n1000000000000000000 10\r\n",
                "8\r\n19\r\n"
            ]
        ],
        "private_cases": [
            [
                "93\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n2 2\r\n",
                "2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n2\r\n"
            ],
            [
                "1\r\n99 99\r\n",
                "2\r\n"
            ],
            [
                "2\r\n99 2\r\n70 4\r\n",
                "10\r\n7\r\n"
            ],
            [
                "3\r\n99 97\r\n30 30\r\n20 25\r\n",
                "4\r\n2\r\n20\r\n"
            ],
            [
                "1\r\n2 99\r\n",
                "2\r\n"
            ]
        ]
    }
]