[
    {
        "name": "Young Table",
        "description": "You've got table a, consisting of n rows, numbered from 1 to n. The i-th line\nof table a contains ci cells, at that for all i (1 < i \u2264 n) holds ci \u2264 ci - 1.\nLet's denote s as the total number of cells of table a, that is, . We know\nthat each cell of the table contains a single integer from 1 to s, at that all\nwritten integers are distinct. Let's assume that the cells of the i-th row of\ntable a are numbered from 1 to ci, then let's denote the number written in the\nj-th cell of the i-th row as ai, j. Your task is to perform several swap\noperations to rearrange the numbers in the table so as to fulfill the\nfollowing conditions: for all i, j (1 < i \u2264 n; 1 \u2264 j \u2264 ci) holds ai, j > ai -\n1, j; for all i, j (1 \u2264 i \u2264 n; 1 < j \u2264 ci) holds ai, j > ai, j - 1. In one\nswap operation you are allowed to choose two different cells of the table and\nswap the recorded there numbers, that is the number that was recorded in the\nfirst of the selected cells before the swap, is written in the second cell\nafter it. Similarly, the number that was recorded in the second of the\nselected cells, is written in the first cell after the swap. Rearrange the\nnumbers in the required manner. Note that you are allowed to perform any\nnumber of operations, but not more than s. You do not have to minimize the\nnumber of operations. Input The first line contains a single integer n (1 \u2264 n\n\u2264 50) that shows the number of rows in the table. The second line contains n\nspace-separated integers ci (1 \u2264 ci \u2264 50; ci \u2264 ci - 1) \u2014 the numbers of cells\non the corresponding rows. Next n lines contain table \u0430. The i-th of them\ncontains ci space-separated integers: the j-th integer in this line represents\nai, j. It is guaranteed that all the given numbers ai, j are positive and do\nnot exceed s. It is guaranteed that all ai, j are distinct. Output In the\nfirst line print a single integer m (0 \u2264 m \u2264 s), representing the number of\nperformed swaps. In the next m lines print the description of these swap\noperations. In the i-th line print four space-separated integers xi, yi, pi,\nqi (1 \u2264 xi, pi \u2264 n; 1 \u2264 yi \u2264 cxi; 1 \u2264 qi \u2264 cpi). The printed numbers denote\nswapping the contents of cells axi, yi and api, qi. Note that a swap operation\ncan change the contents of distinct table cells. Print the swaps in the order,\nin which they should be executed. Examples Input 3 3 2 1 4 3 5 6 1 2 Output 2\n1 1 2 2 2 1 3 1 Input 1 4 4 3 2 1 Output 2 1 1 1 4 1 2 1 3\n\n",
        "cf_contest_id": 237,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 2 1\r\n4 3 5\r\n6 1\r\n2\r\n",
                "5\r\n1 1 2 1\r\n1 1 3 1\r\n1 1 1 2\r\n1 1 1 3\r\n1 1 2 2\r\n"
            ],
            [
                "1\r\n4\r\n4 3 2 1\r\n",
                "2\r\n1 1 1 4\r\n1 2 1 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n4 4 3 3 1\r\n14 13 4 15\r\n11 1 2 5\r\n7 6 10\r\n8 9 3\r\n12\r\n",
                "13\r\n1 1 4 3\r\n1 1 1 3\r\n1 1 1 4\r\n1 1 5 1\r\n1 1 4 1\r\n1 1 2 4\r\n1 1 2 1\r\n1 1 3 3\r\n1 1 3 2\r\n1 1 2 2\r\n1 2 4 2\r\n1 2 3 1\r\n1 2 2 3\r\n"
            ],
            [
                "2\r\n8 6\r\n1 2 3 13 10 4 11 7\r\n9 12 8 5 14 6\r\n",
                "7\r\n1 4 2 5\r\n1 4 2 6\r\n1 4 1 6\r\n1 5 2 2\r\n1 5 2 4\r\n1 7 2 3\r\n1 7 1 8\r\n"
            ],
            [
                "6\r\n10 9 7 6 4 3\r\n18 20 29 19 5 28 31 30 32 15\r\n38 33 11 8 39 2 6 9 3\r\n13 37 27 24 26 1 17\r\n36 10 35 21 7 16\r\n22 23 4 12\r\n34 25 14\r\n",
                "33\r\n1 1 2 8\r\n1 1 1 9\r\n1 1 4 6\r\n1 1 2 6\r\n1 1 1 2\r\n1 1 3 1\r\n1 1 2 3\r\n1 1 2 1\r\n1 1 6 2\r\n1 1 3 6\r\n1 3 4 3\r\n1 3 5 3\r\n1 3 1 4\r\n1 3 2 9\r\n1 6 4 2\r\n1 6 1 10\r\n1 6 2 5\r\n1 6 6 3\r\n1 6 2 4\r\n1 6 1 8\r\n1 6 4 4\r\n1 6 3 2\r\n1 6 6 1\r\n1 6 5 2\r\n1 6 3 4\r\n1 6 3 5\r\n1 6 3 7\r\n1 6 2 7\r\n1 7 4 5\r\n2 2 5 1\r\n2 2 3 3\r\n2 2 4 1\r\n2 2 5 4\r\n"
            ],
            [
                "8\r\n2 2 2 2 1 1 1 1\r\n10 9\r\n11 5\r\n7 3\r\n2 6\r\n12\r\n1\r\n8\r\n4\r\n",
                "9\r\n1 1 6 1\r\n1 2 5 1\r\n1 2 8 1\r\n1 2 2 2\r\n1 2 3 1\r\n1 2 4 1\r\n2 1 7 1\r\n2 1 4 2\r\n2 1 3 2\r\n"
            ],
            [
                "4\r\n3 3 3 2\r\n6 3 11\r\n10 7 1\r\n9 4 5\r\n2 8\r\n",
                "8\r\n1 1 2 3\r\n1 2 1 3\r\n1 2 4 2\r\n1 2 3 2\r\n1 2 2 1\r\n1 2 4 1\r\n2 2 3 1\r\n2 2 3 3\r\n"
            ],
            [
                "1\r\n1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "2\r\n35 7\r\n6 8 35 9 28 25 10 41 33 39 19 24 5 12 30 40 18 2 4 11 32 13 31 21 14 27 3 34 37 16 17 29 1 42 36\r\n20 23 38 15 26 7 22\r\n",
                "39\r\n1 1 1 6\r\n1 1 1 25\r\n1 1 1 14\r\n1 1 1 12\r\n1 1 1 24\r\n1 1 1 21\r\n1 1 1 32\r\n1 1 1 29\r\n1 1 2 2\r\n1 1 1 23\r\n1 1 1 31\r\n1 1 1 17\r\n1 1 1 18\r\n1 1 1 2\r\n1 1 1 8\r\n1 1 2 6\r\n1 1 1 7\r\n1 1 1 10\r\n1 1 2 4\r\n1 1 1 15\r\n1 1 1 30\r\n1 1 1 16\r\n1 1 2 5\r\n1 1 1 26\r\n1 1 1 27\r\n1 1 1 3\r\n1 1 1 35\r\n1 1 2 1\r\n1 1 1 20\r\n1 1 1 11\r\n1 1 1 19\r\n1 1 1 4\r\n1 1 1 9\r\n1 1 1 33\r\n1 5 1 28\r\n1 5 1 34\r\n1 5 2 7\r\n1 5 1 22\r\n1 5 1 13\r\n"
            ],
            [
                "50\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n6\r\n42\r\n43\r\n50\r\n36\r\n39\r\n13\r\n44\r\n16\r\n25\r\n11\r\n23\r\n15\r\n46\r\n10\r\n45\r\n1\r\n37\r\n20\r\n5\r\n8\r\n48\r\n35\r\n12\r\n38\r\n40\r\n2\r\n4\r\n21\r\n31\r\n22\r\n18\r\n27\r\n26\r\n41\r\n34\r\n9\r\n14\r\n24\r\n17\r\n30\r\n28\r\n32\r\n47\r\n33\r\n49\r\n19\r\n3\r\n29\r\n7\r\n",
                "48\r\n1 1 6 1\r\n1 1 39 1\r\n1 1 24 1\r\n1 1 12 1\r\n1 1 23 1\r\n1 1 35 1\r\n1 1 41 1\r\n1 1 30 1\r\n1 1 31 1\r\n1 1 22 1\r\n1 1 48 1\r\n1 1 3 1\r\n1 1 43 1\r\n1 1 32 1\r\n1 1 18 1\r\n1 1 37 1\r\n1 1 9 1\r\n1 1 16 1\r\n1 1 45 1\r\n1 1 33 1\r\n1 1 27 1\r\n1 1 2 1\r\n1 1 42 1\r\n1 1 28 1\r\n1 1 4 1\r\n1 1 50 1\r\n1 1 7 1\r\n1 1 13 1\r\n1 1 15 1\r\n1 1 10 1\r\n1 1 25 1\r\n1 1 38 1\r\n1 1 14 1\r\n1 1 46 1\r\n1 1 49 1\r\n1 1 29 1\r\n1 1 21 1\r\n1 1 8 1\r\n1 1 44 1\r\n1 1 47 1\r\n1 1 19 1\r\n1 1 20 1\r\n1 1 5 1\r\n1 1 36 1\r\n1 1 34 1\r\n1 1 26 1\r\n1 1 40 1\r\n1 1 17 1\r\n"
            ],
            [
                "5\r\n5 2 2 2 1\r\n1 3 4 5 12\r\n2 6\r\n8 9\r\n7 10\r\n11\r\n",
                "8\r\n1 2 1 3\r\n1 2 1 4\r\n1 2 1 5\r\n1 2 5 1\r\n1 2 4 2\r\n1 2 4 1\r\n1 2 2 2\r\n1 2 2 1\r\n"
            ],
            [
                "5\r\n5 4 3 2 1\r\n1 2 3 4 5\r\n6 7 8 9\r\n10 11 12\r\n13 14\r\n15\r\n",
                "0\r\n"
            ],
            [
                "1\r\n1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "4\r\n4 4 2 2\r\n1 2 3 4\r\n5 6 7 8\r\n9 10\r\n11 12\r\n",
                "0\r\n"
            ],
            [
                "1\r\n50\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\r\n",
                "0\r\n"
            ]
        ]
    }
]