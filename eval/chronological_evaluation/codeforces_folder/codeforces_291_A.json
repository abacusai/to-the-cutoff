[
    {
        "name": "Spyke Talks",
        "description": "Polycarpus is the director of a large corporation. There are n secretaries\nworking for the corporation, each of them corresponds via the famous Spyke\nVoIP system during the day. We know that when two people call each other via\nSpyke, the Spyke network assigns a unique ID to this call, a positive integer\nsession number. One day Polycarpus wondered which secretaries are talking via\nthe Spyke and which are not. For each secretary, he wrote out either the\nsession number of his call or a 0 if this secretary wasn't talking via Spyke\nat that moment. Help Polycarpus analyze these data and find out the number of\npairs of secretaries that are talking. If Polycarpus has made a mistake in the\ndata and the described situation could not have taken place, say so. Note that\nthe secretaries can correspond via Spyke not only with each other, but also\nwith the people from other places. Also, Spyke conferences aren't permitted \u2014\nthat is, one call connects exactly two people. Input The first line contains\ninteger n (1 \u2264 n \u2264 10^3) \u2014 the number of secretaries in Polycarpus's\ncorporation. The next line contains n space-separated integers: id1, id2, ...,\nidn (0 \u2264 idi \u2264 10^9). Number idi equals the number of the call session of the\ni-th secretary, if the secretary is talking via Spyke, or zero otherwise.\nConsider the secretaries indexed from 1 to n in some way. Output Print a\nsingle integer \u2014 the number of pairs of chatting secretaries, or -1 if\nPolycarpus's got a mistake in his records and the described situation could\nnot have taken place. Examples Input 6 0 1 7 1 7 10 Output 2 Input 3 1 1 1\nOutput -1 Input 1 0 Output 0 Note In the first test sample there are two Spyke\ncalls between secretaries: secretary 2 and secretary 4, secretary 3 and\nsecretary 5. In the second test sample the described situation is impossible\nas conferences aren't allowed.\n\n",
        "cf_contest_id": 291,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n0 1 7 1 7 10\r\n",
                "2\r\n"
            ],
            [
                "3\r\n1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "1\r\n0\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n2 2 1 1 3\r\n",
                "2\r\n"
            ],
            [
                "1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "10\r\n4 21 3 21 21 1 1 2 2 3\r\n",
                "-1\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "0\r\n"
            ],
            [
                "5\r\n0 0 0 0 0\r\n",
                "0\r\n"
            ],
            [
                "6\r\n6 6 0 8 0 0\r\n",
                "1\r\n"
            ],
            [
                "10\r\n0 0 0 0 0 1 0 1 0 1\r\n",
                "-1\r\n"
            ],
            [
                "100\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 3 0 0 3 0 0 0 0 0 0 3 0 0 3 0 0 0 0 0 0 0 3 0 0 0 0 0\r\n",
                "-1\r\n"
            ],
            [
                "1\r\n1000000000\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 0\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1000000000 1000000000\r\n",
                "1\r\n"
            ],
            [
                "5\r\n1 0 0 0 1\r\n",
                "1\r\n"
            ],
            [
                "15\r\n380515742 842209759 945171461 664384656 945171461 474872104 0 0 131648973 131648973 474872104 842209759 664384656 0 380515742\r\n",
                "6\r\n"
            ],
            [
                "123\r\n0 6361 8903 10428 0 258 0 10422 0 0 2642 1958 0 0 0 0 0 8249 1958 0 0 2642 0 0 0 11566 4709 1847 3998 0 1331 0 0 10289 2739 6135 3450 0 0 10994 6069 4337 5854 1331 5854 0 630 630 11244 5928 2706 0 683 214 0 9080 0 0 0 10422 683 11566 10994 0 0 3450 11244 11542 3998 1847 2708 9871 2739 2001 0 12216 6069 0 5928 0 10289 1307 0 1307 8903 0 6361 6135 6632 10428 0 0 632 258 9080 12216 4709 4967 2706 0 11542 2001 6632 0 8249 214 0 10301 4967 10301 7296 7296 10914 2708 4337 0 0 632 0 10914 0 9871 0\r\n",
                "40\r\n"
            ],
            [
                "10\r\n0 3 2 3 2 0 1 3 3 0\r\n",
                "-1\r\n"
            ],
            [
                "20\r\n0 1 2 0 0 0 0 5 3 4 0 0 1 1 3 0 4 0 1 0\r\n",
                "-1\r\n"
            ],
            [
                "47\r\n1 6 0 6 1 1 6 4 3 6 5 3 6 3 2 2 5 1 4 7 3 5 6 1 6 7 4 5 6 3 3 3 7 4 1 6 1 1 7 1 3 1 5 5 1 3 6\r\n",
                "-1\r\n"
            ],
            [
                "74\r\n0 0 0 0 0 37 0 0 0 0 0 0 0 8 0 0 9 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 9 0 7 0 0 0 0 0 0 19 19 0 0 0 0 0 0 0 0 0 0 0 0 17 0 30 0 0 0 0 0 0 30 0 0 0 0 0 0 0 37 0\r\n",
                "5\r\n"
            ],
            [
                "3\r\n1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "2\r\n2 3\r\n",
                "0\r\n"
            ],
            [
                "2\r\n2 2\r\n",
                "1\r\n"
            ],
            [
                "5\r\n10000 10000 1 1 10000\r\n",
                "-1\r\n"
            ]
        ]
    }
]