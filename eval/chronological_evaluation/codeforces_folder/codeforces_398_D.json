[
    {
        "name": "Instant Messanger",
        "description": "User ainta decided to make a new instant messenger called \"aintalk\". With\naintalk, each user can chat with other people. User ainta made the prototype\nof some functions to implement this thing. login(u): User u logins into\naintalk and becomes online. logout(u): User u logouts and becomes offline.\nadd_friend(u, v): User u and user v become friends. It means, u and v can talk\nwith each other. The friendship is bidirectional. del_friend(u, v): Unfriend\nuser u and user v. It means, u and v cannot talk with each other from then.\ncount_online_friends(u): The function returns the number of friends of user u\nwho are online at the moment. Because the messenger is being tested by some\nusers numbered from 1 to n, there is no register method. This means, at the\nbeginning, some users may be online, and some users may have friends. User\nainta is going to make these functions, but before making the messenger\npublic, he wants to know whether he is correct. Help ainta verify his code.\nInput The first line contains three space-separated integers n, m and q (1 \u2264 n\n\u2264 50000; 1 \u2264 m \u2264 150000; 1 \u2264 q \u2264 250000) \u2014 the number of users, the number of\npairs of friends, and the number of queries. The second line contains an\ninteger o (1 \u2264 o \u2264 n) \u2014 the number of online users at the beginning. The third\nline contains o space-separated integers x1, x2, ..., xo (1 \u2264 xi \u2264 n) \u2014 the\nids of the online users. It is guaranteed that these values are distinct. Each\nof the next m lines contains two space-separated integers ai and bi (1 \u2264 ai,\nbi \u2264 n; ai \u2260 bi) \u2014 the ids of two users who are friends at the beginning. It\nis guaranteed there are no multiple friendship given in the input. Note that\nthe friendship is bidirectional. Next q lines describe the q queries in the\nformat: \"O u\" (1 \u2264 u \u2264 n) : Call online(u). It is guaranteed that user u was\noffline just before the function call. \"F u\" (1 \u2264 u \u2264 n) : Call offline(u). It\nis guaranteed that user u was online just before the function call. \"A u v\" (1\n\u2264 u, v \u2264 n; u \u2260 v) : Call add_friend(u, v). It is guaranteed that these two\nusers weren't friends just before the function call. \"D u v\" (1 \u2264 u, v \u2264 n; u\n\u2260 v) : Call del_friend(u, v). It is guaranteed that these two users were\nfriends just before the function call. \"C u\" (1 \u2264 u \u2264 n) : Call\ncount_online_friends(u) and print the result in a single line. Output For each\ncount_online_friends(u) query, print the required answer in a single line.\nExamples Input 5 2 9 1 4 1 3 3 4 C 3 A 2 5 O 1 D 1 3 A 1 2 A 4 2 C 2 F 4 C 2\nOutput 1 2 1\n\n",
        "cf_contest_id": 398,
        "cf_index": "D",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 2 9\r\n1\r\n4\r\n1 3\r\n3 4\r\nC 3\r\nA 2 5\r\nO 1\r\nD 1 3\r\nA 1 2\r\nA 4 2\r\nC 2\r\nF 4\r\nC 2\r\n",
                "1\r\n2\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 5 10\r\n10\r\n3 2 7 8 1 10 5 4 6 9\r\n9 10\r\n4 1\r\n6 8\r\n5 1\r\n2 6\r\nF 6\r\nF 4\r\nF 3\r\nC 8\r\nF 5\r\nC 6\r\nO 6\r\nC 6\r\nA 1 7\r\nC 8\r\n",
                "0\r\n2\r\n2\r\n1\r\n"
            ],
            [
                "10 5 50\r\n10\r\n6 7 10 2 5 3 1 4 9 8\r\n8 10\r\n9 3\r\n9 7\r\n8 3\r\n5 7\r\nA 7 10\r\nA 10 3\r\nC 4\r\nA 7 8\r\nA 2 5\r\nA 6 2\r\nF 6\r\nD 7 9\r\nO 6\r\nA 5 3\r\nC 5\r\nC 1\r\nF 8\r\nO 8\r\nC 7\r\nC 8\r\nA 8 5\r\nC 8\r\nD 8 7\r\nF 3\r\nF 9\r\nF 2\r\nC 2\r\nA 6 4\r\nA 5 6\r\nF 6\r\nF 7\r\nO 3\r\nA 1 8\r\nF 3\r\nO 6\r\nC 9\r\nC 3\r\nF 10\r\nF 1\r\nO 3\r\nA 5 1\r\nA 4 1\r\nF 8\r\nD 6 5\r\nO 1\r\nD 10 8\r\nO 2\r\nF 6\r\nF 5\r\nA 6 3\r\nD 8 3\r\nF 1\r\nO 1\r\nC 8\r\n",
                "0\r\n3\r\n0\r\n3\r\n3\r\n4\r\n2\r\n0\r\n3\r\n1\r\n"
            ],
            [
                "5 10 20\r\n2\r\n4 1\r\n1 2\r\n2 4\r\n5 4\r\n4 3\r\n3 5\r\n4 1\r\n1 5\r\n5 2\r\n1 3\r\n2 3\r\nD 2 5\r\nC 1\r\nD 3 4\r\nO 2\r\nD 1 4\r\nD 1 3\r\nO 5\r\nC 3\r\nF 1\r\nD 5 4\r\nO 3\r\nA 1 4\r\nC 4\r\nF 3\r\nO 1\r\nF 4\r\nC 1\r\nF 1\r\nO 3\r\nC 2\r\n",
                "1\r\n2\r\n1\r\n2\r\n1\r\n"
            ]
        ]
    }
]