[
    {
        "name": "Dima and Kicks",
        "description": "Dima is a good person. In fact, he's great. But all good things come to an\nend... Seryozha is going to kick Dima just few times.. For this reason he\ndivides the room into unit squares. Now the room is a rectangle n \u00d7 m\nconsisting of unit squares. For the beginning, Seryozha put Dima in a center\nof some square. Then he started to kick Dima (it is known, that he kicks Dima\nat least once). Each time when Dima is kicked he flyes up and moves into one\nof four directions (up, left, right, down). On each move Dima passes k (k > 1)\nunit of the length in the corresponding direction. Seryozha is really kind, so\nhe kicks Dima in such way that Dima never meets the walls (in other words,\nDima never leave the room's space). Seryozha is also dynamic character so Dima\nnever flies above the same segment, connecting a pair of adjacent squares,\ntwice. Seryozha kicks Dima for a long time, but Dima is not vindictive \u2014 Dima\nwrites. Dima marked all squares in which he was staying or above which he was\nflying. Thanks to kicks, Dima does not remember the k value, so he asks you to\nfind all possible values which matches to the Dima's records. Input The first\nline contains n and m (1 \u2264 n, m \u2264 10^3) \u2014 size of the room. Next n lines goes,\neach contains m numbers aij \u2014 Dima's notes: aij = 1, if Dima was staying in\nthe square (i, j) or was flying above it. Otherwise aij = 0. At least one aij\nequals 1. Output In a single line in accending order print all k (k > 1),\nwhich matches the Dima's notes. If there are no such k and Dima invented this\nstory with kicks, print -1. Examples Input 5 5 1 1 1 1 1 1 0 0 0 1 1 0 0 0 1 1\n0 0 0 1 1 1 1 1 1 Output 2 4 Input 7 7 0 0 1 1 1 0 0 0 0 1 0 1 0 0 1 1 1 1 1 1\n1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 0 1 0 0 0 0 1 1 1 0 0 Output 2 Input 3 3 1\n1 1 1 1 1 1 1 1 Output -1 Input 4 4 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 Output 3\nInput 5 5 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 0 0 Output -1\n\n",
        "cf_contest_id": 358,
        "cf_index": "E",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dsu",
            "graphs",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 5\r\n1 1 1 1 1\r\n1 0 0 0 1\r\n1 0 0 0 1\r\n1 0 0 0 1\r\n1 1 1 1 1\r\n",
                "2 4 "
            ],
            [
                "7 7\r\n0 0 1 1 1 0 0\r\n0 0 1 0 1 0 0\r\n1 1 1 1 1 1 1\r\n1 0 1 0 1 0 1\r\n1 1 1 1 1 1 1\r\n0 0 1 0 1 0 0\r\n0 0 1 1 1 0 0\r\n",
                "2 "
            ],
            [
                "3 3\r\n1 1 1\r\n1 1 1\r\n1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "4 4\r\n1 1 1 1\r\n0 0 0 0\r\n0 0 0 0\r\n0 0 0 0\r\n",
                "3 "
            ],
            [
                "5 5\r\n0 0 1 0 0\r\n0 0 1 0 0\r\n1 1 1 1 1\r\n0 0 1 0 0\r\n0 0 1 0 0\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 5\r\n1 1 1 0 1\r\n1 0 1 0 0\r\n1 1 1 1 1\r\n0 0 1 0 1\r\n0 0 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "6 6\r\n1 1 1 0 0 0\r\n1 0 1 0 0 0\r\n1 1 1 0 0 0\r\n0 0 0 1 1 1\r\n0 0 0 1 0 1\r\n0 0 0 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "5 5\r\n1 1 1 0 0\r\n1 0 1 0 0\r\n1 1 1 1 1\r\n0 0 1 0 1\r\n0 0 1 1 1\r\n",
                "2 "
            ],
            [
                "4 4\r\n1 1 1 1\r\n1 0 0 1\r\n1 0 0 1\r\n1 1 1 1\r\n",
                "3 "
            ],
            [
                "1 1\r\n1\r\n",
                "-1\r\n"
            ],
            [
                "5 4\r\n0 0 0 0\r\n0 1 0 0\r\n0 0 0 0\r\n0 0 0 0\r\n0 0 0 0\r\n",
                "-1\r\n"
            ],
            [
                "7 7\r\n1 1 1 0 0 0 0\r\n1 0 1 0 0 0 0\r\n1 1 1 0 0 0 0\r\n0 0 0 0 0 0 0\r\n0 0 0 0 1 1 1\r\n0 0 0 0 1 0 1\r\n0 0 0 0 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "7 7\r\n1 1 1 1 0 0 0\r\n1 0 0 1 0 0 0\r\n1 0 0 1 0 0 0\r\n1 1 1 1 0 0 0\r\n0 0 0 0 1 1 1\r\n0 0 0 0 1 0 1\r\n0 0 0 0 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "9 13\r\n1 1 1 1 1 0 0 0 1 1 1 1 1\r\n1 0 0 0 1 0 0 0 1 0 0 0 1\r\n1 0 0 0 1 0 0 0 1 0 0 0 1\r\n1 0 0 0 1 0 0 0 1 0 0 0 1\r\n1 1 1 1 1 1 1 1 1 1 1 1 1\r\n0 0 0 0 1 0 0 0 1 0 0 0 0\r\n0 0 0 0 1 0 0 0 1 0 0 0 0\r\n0 0 0 0 1 0 0 0 1 0 0 0 0\r\n0 0 0 0 1 1 1 1 1 0 0 0 0\r\n",
                "2 4 "
            ],
            [
                "4 4\r\n1 1 0 0\r\n0 0 0 0\r\n0 0 0 0\r\n0 0 0 0\r\n",
                "-1\r\n"
            ],
            [
                "4 4\r\n0 0 0 0\r\n0 0 0 0\r\n0 1 1 1\r\n0 0 0 0\r\n",
                "2 "
            ],
            [
                "11 11\r\n1 1 1 1 1 1 1 1 1 1 1\r\n0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 1\r\n1 1 1 1 1 1 0 0 0 0 1\r\n1 0 0 0 0 0 0 0 0 0 1\r\n1 0 0 0 0 0 0 0 0 0 1\r\n1 0 0 0 0 0 0 0 0 0 1\r\n1 0 0 0 0 0 0 0 0 0 1\r\n1 1 1 1 1 1 1 1 1 1 1\r\n",
                "5 "
            ],
            [
                "11 11\r\n1 1 1 1 1 1 1 1 1 1 1\r\n0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 1\r\n1 1 1 1 1 1 0 0 0 0 1\r\n1 0 0 0 0 1 0 0 0 0 1\r\n1 0 0 0 0 1 0 0 0 0 1\r\n1 0 0 0 0 1 0 0 0 0 1\r\n1 0 0 0 0 1 0 0 0 0 1\r\n1 1 1 1 1 1 1 1 1 1 1\r\n",
                "5 "
            ],
            [
                "3 3\r\n1 0 0\r\n0 0 0\r\n0 0 1\r\n",
                "-1\r\n"
            ],
            [
                "5 5\r\n1 1 1 0 0\r\n1 0 1 1 0\r\n1 1 1 1 1\r\n0 0 1 0 1\r\n0 0 1 1 1\r\n",
                "-1\r\n"
            ]
        ]
    }
]