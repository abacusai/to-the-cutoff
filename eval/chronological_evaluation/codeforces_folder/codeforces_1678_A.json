[
    {
        "name": "Tokitsukaze and All Zero Sequence",
        "description": "Tokitsukaze has a sequence \n    a\n of length \n    n\n. For each operation, she\nselects two numbers \n    a_i\n and \n    a_j\n (\n    i \n     j\n; \n    1 \n    \u2264 i,j\n    \n    \u2264 n\n). If \n    a_i = a_j\n, change one of them to \n    0\n. Otherwise\nchange both of them to \n    min(a_i, a_j)\n. Tokitsukaze wants to know the\nminimum number of operations to change all numbers in the sequence to \n    0\n.\nIt can be proved that the answer always exists. Input The first line contains\na single positive integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number\nof test cases. For each test case, the first line contains a single integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 100\n) \u2014 the length of the sequence \n    a\n.\nThe second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0\n    \n    \u2264 a_i \n    \u2264 100\n) \u2014 the sequence \n    a\n. Output For each test case,\nprint a single integer \u2014 the minimum number of operations to change all\nnumbers in the sequence to \n    0\n. Example Input 3 3 1 2 3 3 1 2 2 3 1 2 0\nOutput 4 3 2 Note In the first test case, one of the possible ways to change\nall numbers in the sequence to \n    0\n: In the \n    1\n-st operation, \n    a_1 <\n    a_2\n, after the operation, \n    a_2 = a_1 = 1\n. Now the sequence \n    a\n is\n\n    [1,1,3]\n. In the \n    2\n-nd operation, \n    a_1 = a_2 = 1\n, after the\noperation, \n    a_1 = 0\n. Now the sequence \n    a\n is \n    [0,1,3]\n. In the\n\n    3\n-rd operation, \n    a_1 < a_2\n, after the operation, \n    a_2 = 0\n. Now\nthe sequence \n    a\n is \n    [0,0,3]\n. In the \n    4\n-th operation, \n    a_2 <\n    a_3\n, after the operation, \n    a_3 = 0\n. Now the sequence \n    a\n is\n\n    [0,0,0]\n. So the minimum number of operations is \n    4\n.\n\n",
        "cf_contest_id": 1678,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n1 2 3\r\n3\r\n1 2 2\r\n3\r\n1 2 0\r\n",
                "4\r\n3\r\n2\r\n"
            ]
        ],
        "private_cases": []
    }
]