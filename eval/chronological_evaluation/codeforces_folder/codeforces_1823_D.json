[
    {
        "name": "Unique Palindromes",
        "description": "A palindrome is a string that reads the same backwards as forwards. For\nexample, the string abcba is palindrome, while the string abca is not. Let\n\n    p(t)\n be the number of unique palindromic substrings of string \n    t\n,\ni. e. the number of substrings \n    t[l \n    \u2026 r]\n that are palindromes\nthemselves. Even if some substring occurs in \n    t\n several times, it's\ncounted exactly once. (The whole string \n    t\n is also counted as a substring\nof \n    t\n). For example, string \n    t\n \n    =\n abcbbcabcb has \n    p(t) = 6\n\nunique palindromic substrings: a, b, c, bb, bcb and cbbc. Now, let's define\n\n    p(s, m) = p(t)\n where \n    t = s[1 \n    \u2026 m]\n. In other words, \n    p(s,\n    m)\n is the number of palindromic substrings in the prefix of \n    s\n of\nlength \n    m\n. For example, \n    p(\nabcbbcabcb\n    , 5)\n \n    =\n\n\n    p(\nabcbb\n    ) = 5\n. You are given an integer \n    n\n and \n    k\n\n\"conditions\" (\n    k \n    \u2264 20\n). Let's say that string \n    s\n, consisting of\n\n    n\n lowercase Latin letters, is good if all \n    k\n conditions are\nsatisfied at the same time. A condition is a pair \n    (x_i, c_i)\n and have\nthe following meaning: \n    p(s, x_i) = c_i\n, i. e. a prefix of \n    s\n of\nlength \n    x_i\n contains exactly \n    c_i\n unique palindromic substrings.\nFind a good string \n    s\n or report that such \n    s\n doesn't exist.Look in\nNotes if you need further clarifications. Input Each test contains multiple\ntest cases. The first line contains the number of test cases \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^4\n). The description of the test cases follows. The first\nline of each test case contains two integers \n    n\n and \n    k\n (\n    3 \n    \u2264 n\n    \n    \u2264 2 \n    \u00b7 10^5\n; \n    1 \n    \u2264 k \n    \u2264 20\n) \u2014 length of good string\n\n    s\n and number of conditions. The second line of each test case contains\n\n    k\n integers \n    x_1, x_2, \n    \u2026, x_k\n (\n    3 \n    \u2264 x_1 < x_2 < \n    \u2026\n    < x_k = n\n) where \n    x_i\n is the length of the prefix in the \n    i\n-th\ncondition. The third line of each test case contains \n    k\n integers \n    c_1,\n    c_2, \n    \u2026, c_k\n (\n    3 \n    \u2264 c_1 \n    \u2264 c_2 \n    \u2264\n    \u2026\n    \u2264 c_k \n    \u2264\n    min\n    (10^9, \n    (n + 1) n/2\n    )\n) where \n    c_i\n is\nthe number of palindromic substrings in the \n    i\n-th condition. It is\nguaranteed that the sum of \n    n\n over all test cases does not exceed \n    2\n    \n    \u00b7 10 ^ 5\n. Output For each test case, if there is no good string\n\n    s\n of length \n    n\n that satisfies all conditions, print NO. Otherwise,\nprint YES and a string \n    s\n of length \n    n\n, consisting of lowercase\nLatin letters, that satisfies all conditions. If there are multiple answers,\nprint any of them. Example Input 7 10 2 5 10 5 6 3 1 3 3 4 2 3 4 3 3 4 2 3 4 3\n4 4 1 4 5 10 3 4 6 10 4 5 8 10 4 4 6 7 10 4 5 7 8 Output YES abcbbcabcb YES\nfoo YES ayda YES wada NO YES abcbcacbab NO Note In the first test case, string\n\n    s\n \n    =\n abcbbcabcb satisfies \n    k = 2\n conditions: \n    p(s, x_1) =\n    p(s, 5) =\n \n    p(\nabcbb\n    ) = 5 = s_1\n. Palindromic substrings are a, b,\nc, bb and bcb. \n    p(s, x_2) = p(s, 10) =\n \n    p(\nabcbbcabcb\n    ) = 6 =\n    s_2\n. Palindromic substrings are the same as above, and one extra substring\ncbbc. In the second test case, string foo satisfies \n    k = 1\n condition:\n\n    p(\nfoo\n    ) = 3\n. Palindromic substrings are f, o and oo. There are\nother possible answers.In the third test case, string ayda satisfies \n    k =\n    2\n conditions: \n    p(\nayd\n    ) = 3\n. Palindromic substrings are a, y and\nd. \n    p(\nayda\n    ) = 3\n. Palindromic substrings are the same. In the fourth\ntest case, string wada satisfies \n    k = 2\n conditions: \n    p(\nwad\n    ) =\n    3\n. Palindromic substrings are w, a and d. \n    p(\nwada\n    ) = 4\n.\nPalindromic substrings are the same, and one extra substring ada. In the fifth\ntest case, it can be proven that there is no string of length \n    4\n which\nhas \n    5\n palindromic substrings. In the sixth test case, string abcbcacbab\nsatisfies \n    k = 3\n conditions: \n    p(\nabcb\n    ) = 4\n. Palindromic\nsubstrings are a, b, c and bcb. \n    p(\nabcbca\n    ) = 5\n. Palindromic\nsubstrings are the same, and one extra substring cbc. \n    p(\nabcbcacbab\n    ) =\n    8\n. Palindromic substrings are the same, and three extra substrings cac, bab\nand bcacb.\n\n",
        "cf_contest_id": 1823,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "math",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n10 2\r\n5 10\r\n5 6\r\n3 1\r\n3\r\n3\r\n4 2\r\n3 4\r\n3 3\r\n4 2\r\n3 4\r\n3 4\r\n4 1\r\n4\r\n5\r\n10 3\r\n4 6 10\r\n4 5 8\r\n10 4\r\n4 6 7 10\r\n4 5 7 8\r\n",
                "YES\r\nxyzbbxyzxc\r\nYES\r\nxyz\r\nYES\r\nxyzx\r\nYES\r\nxyzc\r\nNO\r\nYES\r\nxyzbxcyddd\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n200000 16\r\n2189 5540 29761 36018 38255 55351 117506 117633 123018 124719 126329 146060 148281 162230 181779 200000\r\n635 2254 13567 18717 20443 22982 73515 73629 76213 77476 147712047 864087897 965740012 994231478 996436813 997469603\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 5\r\n27428 87259 119538 199642 200000\r\n17390 59931 68385 503989288 875193021\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 18\r\n4052 6627 11700 34782 38793 80739 92730 100475 103415 103728 133190 142952 149634 159440 172148 195665 196824 200000\r\n1295 2249 6462 10560 12134 40668 49941 51944 53705 54014 67921 221002317 632695290 675637540 994065823 995496798 995853022 998758425\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 6\r\n4293 38702 118303 139310 156998 200000\r\n2158 591722023 996297713 996767911 997231244 999911756\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n200000 3\r\n61565 129086 200000\r\n215646348 616262607 839377853\r\n",
                "NO\r\n"
            ]
        ]
    }
]