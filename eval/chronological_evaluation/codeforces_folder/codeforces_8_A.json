[
    {
        "name": "Train and Peter",
        "description": "Peter likes to travel by train. He likes it so much that on the train he falls\nasleep. Once in summer Peter was going by train from city A to city B, and as\nusual, was sleeping. Then he woke up, started to look through the window and\nnoticed that every railway station has a flag of a particular colour. The boy\nstarted to memorize the order of the flags' colours that he had seen. But soon\nhe fell asleep again. Unfortunately, he didn't sleep long, he woke up and went\non memorizing the colours. Then he fell asleep again, and that time he slept\ntill the end of the journey. At the station he told his parents about what he\nwas doing, and wrote two sequences of the colours that he had seen before and\nafter his sleep, respectively. Peter's parents know that their son likes to\nfantasize. They give you the list of the flags' colours at the stations that\nthe train passes sequentially on the way from A to B, and ask you to find out\nif Peter could see those sequences on the way from A to B, or from B to A.\nRemember, please, that Peter had two periods of wakefulness. Peter's parents\nput lowercase Latin letters for colours. The same letter stands for the same\ncolour, different letters \u2014 for different colours. Input The input data\ncontains three lines. The first line contains a non-empty string, whose length\ndoes not exceed 10^5, the string consists of lowercase Latin letters \u2014 the\nflags' colours at the stations on the way from A to B. On the way from B to A\nthe train passes the same stations, but in reverse order. The second line\ncontains the sequence, written by Peter during the first period of\nwakefulness. The third line contains the sequence, written during the second\nperiod of wakefulness. Both sequences are non-empty, consist of lowercase\nLatin letters, and the length of each does not exceed 100 letters. Each of the\nsequences is written in chronological order. Output Output one of the four\nwords without inverted commas: \u00abforward\u00bb \u2014 if Peter could see such sequences\nonly on the way from A to B; \u00abbackward\u00bb \u2014 if Peter could see such sequences on\nthe way from B to A; \u00abboth\u00bb \u2014 if Peter could see such sequences both on the\nway from A to B, and on the way from B to A; \u00abfantasy\u00bb \u2014 if Peter could not\nsee such sequences. Examples Input atob a b Output forward Input aaacaaa aca\naa Output both Note It is assumed that the train moves all the time, so one\nflag cannot be seen twice. There are no flags at stations A and B.\n\n",
        "cf_contest_id": 8,
        "cf_index": "A",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "atob\r\na\r\nb\r\n",
                "forward\r\n"
            ],
            [
                "aaacaaa\r\naca\r\naa\r\n",
                "both\r\n"
            ]
        ],
        "private_cases": [
            [
                "aaa\r\naa\r\naa\r\n",
                "fantasy\r\n"
            ],
            [
                "astalavista\r\nastla\r\nlavista\r\n",
                "fantasy\r\n"
            ],
            [
                "abacabadabacaba\r\nabacaba\r\nabacaba\r\n",
                "both\r\n"
            ],
            [
                "a\r\na\r\na\r\n",
                "fantasy\r\n"
            ],
            [
                "ab\r\nb\r\na\r\n",
                "backward\r\n"
            ],
            [
                "aaa\r\naaaa\r\naaaa\r\n",
                "fantasy\r\n"
            ],
            [
                "bbabbbbababbaabaabaa\r\nabb\r\nbaab\r\n",
                "forward\r\n"
            ],
            [
                "bbbbbbbbbbbbbbbbbbbbbbbbb\r\nbbbb\r\nbbbbb\r\n",
                "both\r\n"
            ],
            [
                "babaabababaaaababaabababaabababababababbababbbabbaabababaababbaabbababaababaaabababaabbaababaaababaa\r\nabaabababaa\r\nabaabbaa\r\n",
                "forward\r\n"
            ],
            [
                "bbbbbbbbbbbbbbbbbbbbbbbbb\r\nbbbb\r\nbbbbb\r\n",
                "both\r\n"
            ],
            [
                "aababaaababaabbaabababaaababaabababbaabbabaabababaabbabbbababbababababababaabababaababaaaabababaabab\r\nabaabababaa\r\nabaabbaa\r\n",
                "backward\r\n"
            ],
            [
                "aaaa\r\naaa\r\naa\r\n",
                "fantasy\r\n"
            ],
            [
                "zzzz\r\nzz\r\nzzz\r\n",
                "fantasy\r\n"
            ],
            [
                "zzzz\r\nzzzz\r\nzzzz\r\n",
                "fantasy\r\n"
            ],
            [
                "zzzz\r\nzz\r\nzz\r\n",
                "both\r\n"
            ],
            [
                "aabaa\r\naab\r\nbaa\r\n",
                "fantasy\r\n"
            ],
            [
                "aabaab\r\naba\r\nab\r\n",
                "forward\r\n"
            ],
            [
                "aab\r\nb\r\naa\r\n",
                "backward\r\n"
            ],
            [
                "abacaba\r\naca\r\nba\r\n",
                "both\r\n"
            ]
        ]
    }
]