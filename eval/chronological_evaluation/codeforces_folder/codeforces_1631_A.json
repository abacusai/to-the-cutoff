[
    {
        "name": "Min Max Swap",
        "description": "You are given two arrays \n    a\n and \n    b\n of \n    n\n positive integers\neach. You can apply the following operation to them any number of times:\nSelect an index \n    i\n (\n    1\n    \u2264 i\n    \u2264 n\n) and swap \n    a_i\n with\n\n    b_i\n (i. e. \n    a_i\n becomes \n    b_i\n and vice versa). Find the minimum\npossible value of \n    max(a_1, a_2, \n    \u2026, a_n) \n    \u00b7\n    max(b_1, b_2,\n    \n    \u2026, b_n)\n you can get after applying such operation any number of\ntimes (possibly zero). Input The input consists of multiple test cases. The\nfirst line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014\nthe number of test cases. Description of the test cases follows. The first\nline of each test case contains an integer \n    n\n (\n    1\n    \u2264 n\n    \u2264 100\n) \u2014\nthe length of the arrays. The second line of each test case contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10\n     000\n)\nwhere \n    a_i\n is the \n    i\n-th element of the array \n    a\n. The third line\nof each test case contains \n    n\n integers \n    b_1, b_2, \n    \u2026, b_n\n\n(\n    1 \n    \u2264 b_i \n    \u2264 10\n     000\n) where \n    b_i\n is the \n    i\n-th element\nof the array \n    b\n. Output For each test case, print a single integer, the\nminimum possible value of \n    max(a_1, a_2, \n    \u2026, a_n) \n    \u00b7\n    max(b_1, b_2, \n    \u2026, b_n)\n you can get after applying such operation\nany number of times. Example Input 3 6 1 2 6 5 1 2 3 4 3 2 2 5 3 3 3 3 3 3 3 2\n1 2 2 1 Output 18 9 2 Note In the first test, you can apply the operations at\nindices \n    2\n and \n    6\n, then \n    a = [1, 4, 6, 5, 1, 5]\n and \n    b = [3,\n    2, 3, 2, 2, 2]\n, \n    max(1, 4, 6, 5, 1, 5) \n    \u00b7\n    max(3, 2, 3, 2, 2,\n    2) = 6 \n    \u00b7 3 = 18\n. In the second test, no matter how you apply the\noperations, \n    a = [3, 3, 3]\n and \n    b = [3, 3, 3]\n will always hold, so\nthe answer is \n    max(3, 3, 3) \n    \u00b7\n    max(3, 3, 3) = 3 \n    \u00b7 3 = 9\n.\nIn the third test, you can apply the operation at index \n    1\n, then \n    a =\n    [2, 2]\n, \n    b = [1, 1]\n, so the answer is \n    max(2, 2) \n    \u00b7\n    max(1, 1) = 2 \n    \u00b7 1 = 2\n.\n\n",
        "cf_contest_id": 1631,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n6\r\n1 2 6 5 1 2\r\n3 4 3 2 2 5\r\n3\r\n3 3 3\r\n3 3 3\r\n2\r\n1 2\r\n2 1\r\n",
                "18\r\n9\r\n2\r\n"
            ]
        ],
        "private_cases": []
    }
]