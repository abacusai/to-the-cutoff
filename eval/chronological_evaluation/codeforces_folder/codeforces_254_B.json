[
    {
        "name": "Jury Size",
        "description": "In 2013, the writers of Berland State University should prepare problems for n\nOlympiads. We will assume that the Olympiads are numbered with consecutive\nintegers from 1 to n. For each Olympiad we know how many members of the jury\nmust be involved in its preparation, as well as the time required to prepare\nthe problems for her. Namely, the Olympiad number i should be prepared by pi\npeople for ti days, the preparation for the Olympiad should be a continuous\nperiod of time and end exactly one day before the Olympiad. On the day of the\nOlympiad the juries who have prepared it, already do not work on it. For\nexample, if the Olympiad is held on December 9th and the preparation takes 7\npeople and 6 days, all seven members of the jury will work on the problems of\nthe Olympiad from December, 3rd to December, 8th (the jury members won't be\nworking on the problems of this Olympiad on December 9th, that is, some of\nthem can start preparing problems for some other Olympiad). And if the\nOlympiad is held on November 3rd and requires 5 days of training, the members\nof the jury will work from October 29th to November 2nd. In order not to\noverload the jury the following rule was introduced: one member of the jury\ncan not work on the same day on the tasks for different Olympiads. Write a\nprogram that determines what the minimum number of people must be part of the\njury so that all Olympiads could be prepared in time. Input The first line\ncontains integer n \u2014 the number of Olympiads in 2013 (1 \u2264 n \u2264 100). Each of\nthe following n lines contains four integers mi, di, pi and ti \u2014 the month and\nday of the Olympiad (given without leading zeroes), the needed number of the\njury members and the time needed to prepare the i-th Olympiad (1 \u2264 mi \u2264 12, di\n\u2265 1, 1 \u2264 pi, ti \u2264 100), di doesn't exceed the number of days in month mi. The\nOlympiads are given in the arbitrary order. Several Olympiads can take place\nin one day. Use the modern (Gregorian) calendar in the solution. Note that all\ndates are given in the year 2013. This is not a leap year, so February has 28\ndays. Please note, the preparation of some Olympiad can start in 2012 year.\nOutput Print a single number \u2014 the minimum jury size. Examples Input 2 5 23 1\n2 3 13 2 3 Output 2 Input 3 12 9 2 1 12 8 1 3 12 8 2 2 Output 3 Input 1 1 10 1\n13 Output 1\n\n",
        "cf_contest_id": 254,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n5 23 1 2\r\n3 13 2 3\r\n",
                "2\r\n"
            ],
            [
                "3\r\n12 9 2 1\r\n12 8 1 3\r\n12 8 2 2\r\n",
                "3\r\n"
            ],
            [
                "1\r\n1 10 1 13\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n3 16 25 1\r\n3 15 9 34\r\n3 14 90 87\r\n",
                "99\r\n"
            ],
            [
                "4\r\n2 15 52 53\r\n2 15 35 81\r\n2 15 39 96\r\n2 14 87 7\r\n",
                "213\r\n"
            ],
            [
                "5\r\n3 6 40 89\r\n3 4 24 64\r\n2 28 83 1\r\n3 3 15 32\r\n3 8 54 28\r\n",
                "216\r\n"
            ],
            [
                "10\r\n8 8 4 18\r\n8 10 100 36\r\n8 9 17 51\r\n8 10 90 8\r\n8 10 64 45\r\n8 10 90 81\r\n8 11 20 86\r\n8 10 5 41\r\n8 9 3 91\r\n8 10 20 68\r\n",
                "413\r\n"
            ],
            [
                "15\r\n10 15 100 22\r\n9 19 26 16\r\n9 24 72 99\r\n9 29 54 83\r\n9 18 17 6\r\n9 6 51 59\r\n9 28 55 77\r\n9 1 8 89\r\n11 17 87 21\r\n9 14 39 93\r\n9 17 49 37\r\n10 28 78 84\r\n8 24 73 5\r\n11 22 34 59\r\n10 7 42 96\r\n",
                "521\r\n"
            ],
            [
                "20\r\n6 1 65 16\r\n5 24 34 85\r\n5 25 35 53\r\n5 15 2 63\r\n5 16 90 38\r\n5 17 86 79\r\n5 19 93 59\r\n5 21 74 87\r\n5 25 43 99\r\n5 24 81 66\r\n5 13 17 91\r\n5 25 45 46\r\n5 29 52 22\r\n5 31 38 56\r\n5 27 73 20\r\n5 13 36 13\r\n5 30 59 89\r\n5 27 98 44\r\n5 31 40 1\r\n5 28 29 21\r\n",
                "985\r\n"
            ],
            [
                "20\r\n10 1 90 91\r\n10 20 22 46\r\n10 1 73 39\r\n9 16 47 65\r\n10 17 65 68\r\n10 2 45 10\r\n10 15 17 60\r\n10 14 97 95\r\n10 21 91 62\r\n9 17 38 19\r\n9 7 46 82\r\n10 10 24 26\r\n9 21 7 54\r\n9 19 35 29\r\n10 20 17 24\r\n10 10 45 62\r\n9 27 11 29\r\n10 17 87 39\r\n10 7 36 56\r\n10 14 22 78\r\n",
                "807\r\n"
            ],
            [
                "2\r\n10 25 31 91\r\n11 14 4 85\r\n",
                "35\r\n"
            ],
            [
                "3\r\n4 20 49 95\r\n4 19 74 81\r\n4 20 85 50\r\n",
                "208\r\n"
            ],
            [
                "1\r\n9 30 34 20\r\n",
                "34\r\n"
            ],
            [
                "2\r\n1 1 1 100\r\n1 1 1 100\r\n",
                "2\r\n"
            ],
            [
                "2\r\n1 1 5 66\r\n1 1 7 55\r\n",
                "12\r\n"
            ],
            [
                "2\r\n1 5 7 3\r\n1 1 10 6\r\n",
                "10\r\n"
            ]
        ]
    }
]