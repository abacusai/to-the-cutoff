[
    {
        "name": "Goodbye Souvenir",
        "description": "I won't feel lonely, nor will I be sorrowful... not before everything is\nburied. A string of n beads is left as the message of leaving. The beads are\nnumbered from 1 to n from left to right, each having a shape numbered by\nintegers between 1 and n inclusive. Some beads may have the same shapes. The\nmemory of a shape x in a certain subsegment of beads, is defined to be the\ndifference between the last position and the first position that shape x\nappears in the segment. The memory of a subsegment is the sum of memories over\nall shapes that occur in it. From time to time, shapes of beads change as well\nas the memories. Sometimes, the past secreted in subsegments are being\nrecalled, and you are to find the memory for each of them. Input The first\nline of input contains two space-separated integers n and m (1 \u2264 n, m \u2264 100\n000) \u2014 the number of beads in the string, and the total number of changes and\nqueries, respectively. The second line contains n integers a1, a2, ..., an (1\n\u2264 ai \u2264 n) \u2014 the initial shapes of beads 1, 2, ..., n, respectively. The\nfollowing m lines each describes either a change in the beads or a query of\nsubsegment. A line has one of the following formats: 1 p x (1 \u2264 p \u2264 n, 1 \u2264 x \u2264\nn), meaning that the shape of the p-th bead is changed into x; 2 l r (1 \u2264 l \u2264\nr \u2264 n), denoting a query of memory of the subsegment from l to r, inclusive.\nOutput For each query, print one line with an integer \u2014 the memory of the\nrecalled subsegment. Examples Input 7 6 1 2 3 1 3 2 1 2 3 7 2 1 3 1 7 2 1 3 2\n2 1 6 2 5 7 Output 5 0 7 1 Input 7 5 1 3 2 1 4 2 3 1 1 4 2 2 3 1 1 7 2 4 5 1 1\n7 Output 0 0 Note The initial string of beads has shapes (1, 2, 3, 1, 3, 2,\n1). Consider the changes and queries in their order: 2 3 7: the memory of the\nsubsegment [3, 7] is (7 - 4) + (6 - 6) + (5 - 3) = 5; 2 1 3: the memory of the\nsubsegment [1, 3] is (1 - 1) + (2 - 2) + (3 - 3) = 0; 1 7 2: the shape of the\n7-th bead changes into 2. Beads now have shapes (1, 2, 3, 1, 3, 2, 2)\nrespectively; 1 3 2: the shape of the 3-rd bead changes into 2. Beads now have\nshapes (1, 2, 2, 1, 3, 2, 2) respectively; 2 1 6: the memory of the subsegment\n[1, 6] is (4 - 1) + (6 - 2) + (5 - 5) = 7; 2 5 7: the memory of the subsegment\n[5, 7] is (7 - 6) + (5 - 5) = 1.\n\n",
        "cf_contest_id": 848,
        "cf_index": "C",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "divide and conquer"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 6\r\n1 2 3 1 3 2 1\r\n2 3 7\r\n2 1 3\r\n1 7 2\r\n1 3 2\r\n2 1 6\r\n2 5 7\r\n",
                "5\r\n0\r\n7\r\n1\r\n"
            ],
            [
                "7 5\r\n1 3 2 1 4 2 3\r\n1 1 4\r\n2 2 3\r\n1 1 7\r\n2 4 5\r\n1 1 7\r\n",
                "0\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n2 1 1\r\n",
                "0\r\n"
            ],
            [
                "10 10\r\n8 10 1 4 4 2 1 2 10 1\r\n1 5 6\r\n1 6 8\r\n1 6 1\r\n1 10 5\r\n1 5 8\r\n1 2 8\r\n2 5 6\r\n2 1 5\r\n2 1 2\r\n2 5 8\r\n",
                "0\r\n4\r\n1\r\n1\r\n"
            ]
        ]
    }
]