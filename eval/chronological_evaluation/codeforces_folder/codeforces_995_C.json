[
    {
        "name": "Leaving the Bar",
        "description": "For a vector \n    v\u20d7 = (x, y)\n, define \n    |v| = \n    \u221a(x^2 + y^2)\n.\nAllen had a bit too much to drink at the bar, which is at the origin. There\nare \n    n\n vectors \n    v\u20d7_\u20d71\u20d7, \n    v\u20d7_\u20d72\u20d7, \n    \u22ef, \n    v\u20d7_\u20d7n\u20d7\n.\nAllen will make \n    n\n moves. As Allen's sense of direction is impaired,\nduring the \n    i\n-th move he will either move in the direction\n\n    v\u20d7_\u20d7i\u20d7\n or \n    -\n    v\u20d7_\u20d7i\u20d7\n. In other words, if his position is\ncurrently \n    p = (x, y)\n, he will either move to \n    p + \n    v\u20d7_\u20d7i\u20d7\n or\n\n    p - \n    v\u20d7_\u20d7i\u20d7\n. Allen doesn't want to wander too far from home (which\nhappens to also be the bar). You need to help him figure out a sequence of\nmoves (a sequence of signs for the vectors) such that his final position\n\n    p\n satisfies \n    |p| \n    \u2264 1.5 \n    \u00b7 10^6\n so that he can stay safe.\nInput The first line contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    10^5\n) \u2014 the number of moves. Each of the following lines contains two\nspace-separated integers \n    x_i\n and \n    y_i\n, meaning that \n    v\u20d7_\u20d7i\u20d7\n    = (x_i, y_i)\n. We have that \n    |v_i| \n    \u2264 10^6\n for all \n    i\n. Output\nOutput a single line containing \n    n\n integers \n    c_1, c_2, \n    \u22ef,\n    c_n\n, each of which is either \n    1\n or \n    -1\n. Your solution is correct\nif the value of \n    p = \n    \u2211_i = 1^n c_i \n    v\u20d7_\u20d7i\u20d7\n, satisfies \n    |p|\n    \n    \u2264 1.5 \n    \u00b7 10^6\n. It can be shown that a solution always exists under\nthe given constraints. Examples Input 3 999999 0 0 999999 999999 0 Output 1 1\n-1 Input 1 -824590 246031 Output 1 Input 8 -67761 603277 640586 -396671 46147\n-122580 569609 -2112 400 914208 131792 309779 -850150 -486293 5272 721899\nOutput 1 1 1 1 1 1 1 -1\n\n",
        "cf_contest_id": 995,
        "cf_index": "C",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "geometry",
            "greedy",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n999999 0\r\n0 999999\r\n999999 0\r\n",
                "1 -1 -1"
            ],
            [
                "1\r\n-824590 246031\r\n",
                "-1"
            ],
            [
                "8\r\n-67761 603277\r\n640586 -396671\r\n46147 -122580\r\n569609 -2112\r\n400 914208\r\n131792 309779\r\n-850150 -486293\r\n5272 721899\r\n",
                "-1 -1 1 -1 1 -1 -1 -1"
            ]
        ],
        "private_cases": [
            [
                "6\r\n1000000 0\r\n1000000 0\r\n-1000000 0\r\n0 1000000\r\n0 -1000000\r\n0 -1000000\r\n",
                "-1 -1 -1 -1 1 -1"
            ],
            [
                "8\r\n-411248 143802\r\n300365 629658\r\n363219 343742\r\n396148 -94037\r\n-722124 467785\r\n-178147 -931253\r\n265458 73307\r\n-621502 -709713\r\n",
                "-1 -1 1 1 1 1 -1 -1"
            ],
            [
                "3\r\n1000000 0\r\n0 999999\r\n600000 -600000\r\n",
                "1 -1 -1"
            ],
            [
                "5\r\n140239 46311\r\n399464 -289055\r\n-540174 823360\r\n538102 -373313\r\n326189 933934\r\n",
                "1 -1 -1 -1 -1"
            ],
            [
                "3\r\n1000000 0\r\n0 999999\r\n300000 -300000\r\n",
                "1 -1 -1"
            ],
            [
                "9\r\n1000000 0\r\n0 -999999\r\n600000 600000\r\n600000 600000\r\n600000 600000\r\n-600000 -600000\r\n600000 600000\r\n600000 600000\r\n-700000 710000\r\n",
                "-1 -1 -1 1 -1 -1 -1 1 -1"
            ],
            [
                "2\r\n1 999999\r\n1 -999999\r\n",
                "-1 -1"
            ],
            [
                "2\r\n999999 1\r\n999999 -1\r\n",
                "1 -1"
            ],
            [
                "2\r\n-1 999999\r\n-1 -999999\r\n",
                "-1 -1"
            ],
            [
                "2\r\n-999999 -1\r\n-999999 1\r\n",
                "1 -1"
            ],
            [
                "2\r\n999999 1\r\n-999999 1\r\n",
                "-1 -1"
            ],
            [
                "2\r\n999999 -1\r\n-999999 -1\r\n",
                "-1 -1"
            ],
            [
                "2\r\n1 999999\r\n-1 999999\r\n",
                "1 -1"
            ],
            [
                "2\r\n1 -999999\r\n-1 -999999\r\n",
                "1 -1"
            ],
            [
                "4\r\n1000000 0\r\n-1 999999\r\n600000 -600000\r\n0 0\r\n",
                "1 -1 -1 -1"
            ],
            [
                "2\r\n999999 -1\r\n-1 999999\r\n",
                "-1 -1"
            ]
        ]
    }
]