[
    {
        "name": "Cubes",
        "description": "One day Petya got a set of wooden cubes as a present from his mom. Petya\nimmediately built a whole city from these cubes. The base of the city is an n\n\u00d7 n square, divided into unit squares. The square's sides are parallel to the\ncoordinate axes, the square's opposite corners have coordinates (0, 0) and (n,\nn). On each of the unit squares Petya built a tower of wooden cubes. The side\nof a wooden cube also has a unit length. After that Petya went an infinitely\nlarge distance away from his masterpiece and looked at it in the direction of\nvector v = (vx, vy, 0). Petya wonders, how many distinct cubes are visible\nfrom this position. Help him, find this number. Each cube includes the border.\nWe think that a cube is visible if there is a ray emanating from some point p,\nbelonging to the cube, in the direction of vector - v, that doesn't contain\nany points, belonging to other cubes. Input The first line contains three\nintegers n, vx and vy (1 \u2264 n \u2264 10^3, |vx|, |vy| \u2264 |10^4|, |vx| + |vy| > 0).\nNext n lines contain n integers each: the j-th integer in the i-th line aij (0\n\u2264 aij \u2264 10^9, 1 \u2264 i, j \u2264 n) represents the height of the cube tower that\nstands on the unit square with opposite corners at points (i - 1, j - 1) and\n(i, j). Output Print a single integer \u2014 the number of visible cubes. Please,\ndo not use the \npreferred to use the cin, cout streams or the \n5 -1 2 5 0 0 0 1 0 0 0 0 2 0 0 0 1 2 0 0 0 0 2 2 2 2 2 3 Output 20 Input 5 1\n-2 5 0 0 0 1 0 0 0 0 2 0 0 0 1 2 0 0 0 0 2 2 2 2 2 3 Output 15\n\n",
        "cf_contest_id": 243,
        "cf_index": "D",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "geometry",
            "two pointers"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 -1 2\r\n5 0 0 0 1\r\n0 0 0 0 2\r\n0 0 0 1 2\r\n0 0 0 0 2\r\n2 2 2 2 3\r\n",
                "20\r\n"
            ],
            [
                "5 1 -2\r\n5 0 0 0 1\r\n0 0 0 0 2\r\n0 0 0 1 2\r\n0 0 0 0 2\r\n2 2 2 2 3\r\n",
                "15\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 4 1\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\n",
                "29\r\n"
            ],
            [
                "1 100 11\r\n4857678\r\n",
                "4857678\r\n"
            ],
            [
                "10 0 1\r\n3 0 5 1 4 0 4 4 2 3\r\n2 0 5 5 5 0 2 2 2 0\r\n2 5 5 2 5 0 2 1 5 0\r\n1 1 0 5 1 2 5 3 2 0\r\n3 4 4 5 1 4 1 1 0 5\r\n2 4 4 1 1 3 2 3 2 3\r\n2 5 4 3 1 0 0 4 5 5\r\n1 2 5 3 2 1 3 1 5 1\r\n0 0 2 4 0 4 0 1 0 5\r\n0 5 0 4 4 5 1 2 3 2\r\n",
                "49\r\n"
            ],
            [
                "1 58 445\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1 -384 -485\r\n1000000000\r\n",
                "1000000000\r\n"
            ],
            [
                "2 45 345\r\n681 895\r\n577 521\r\n",
                "2153\r\n"
            ],
            [
                "5 -84 15\r\n4875 8457 5987 9080 9599\r\n1832 9439 4620 4761 1011\r\n2231 2207 214 1255 9343\r\n6346 8962 5967 7380 86\r\n7375 3876 9969 8897 981\r\n",
                "63861\r\n"
            ]
        ]
    }
]