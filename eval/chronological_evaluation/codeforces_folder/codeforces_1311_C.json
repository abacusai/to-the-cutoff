[
    {
        "name": "Perform the Combo",
        "description": "You want to perform the combo on your opponent in one popular fighting game.\nThe combo is the string \n    s\n consisting of \n    n\n lowercase Latin letters.\nTo perform the combo, you have to press all buttons in the order they appear\nin \n    s\n. I.e. if \n    s=\n\"abca\" then you have to press 'a', then 'b', 'c'\nand 'a' again. You know that you will spend \n    m\n wrong tries to perform the\ncombo and during the \n    i\n-th try you will make a mistake right after\n\n    p_i\n-th button (\n    1 \n    \u2264 p_i < n\n) (i.e. you will press first\n\n    p_i\n buttons right and start performing the combo from the beginning). It\nis guaranteed that during the \n    m+1\n-th try you press all buttons right and\nfinally perform the combo. I.e. if \n    s=\n\"abca\", \n    m=2\n and \n    p = [1,\n    3]\n then the sequence of pressed buttons will be 'a' (here you're making a\nmistake and start performing the combo from the beginning), 'a', 'b', 'c',\n(here you're making a mistake and start performing the combo from the\nbeginning), 'a' (note that at this point you will not perform the combo\nbecause of the mistake), 'b', 'c', 'a'. Your task is to calculate for each\nbutton (letter) the number of times you'll press it. You have to answer\n\n    t\n independent test cases. Input The first line of the input contains one\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. Then\n\n    t\n test cases follow. The first line of each test case contains two\nintegers \n    n\n and \n    m\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    1 \n    \u2264\n    m \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of \n    s\n and the number of tries\ncorrespondingly. The second line of each test case contains the string \n    s\n\nconsisting of \n    n\n lowercase Latin letters. The third line of each test\ncase contains \n    m\n integers \n    p_1, p_2, \n    \u2026, p_m\n (\n    1 \n    \u2264 p_i <\n    n\n) \u2014 the number of characters pressed right during the \n    i\n-th try. It\nis guaranteed that the sum of \n    n\n and the sum of \n    m\n both does not\nexceed \n    2 \n    \u00b7 10^5\n (\n    \u2211 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    \u2211 m\n    \n    \u2264 2 \n    \u00b7 10^5\n). It is guaranteed that the answer for each letter\ndoes not exceed \n    2 \n    \u00b7 10^9\n. Output For each test case, print the\nanswer \u2014 \n    26\n integers: the number of times you press the button 'a', the\nnumber of times you press the button 'b', \n    \u2026\n, the number of times\nyou press the button 'z'. Example Input 3 4 2 abca 1 3 10 5 codeforces 2 8 3 2\n9 26 10 qwertyuioplkjhgfdsazxcvbnm 20 10 1 2 3 5 10 5 9 4 Output 4 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0\n0 0 0 0 0 0 2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 Note The\nfirst test case is described in the problem statement. Wrong tries are \"a\",\n\"abc\" and the final try is \"abca\". The number of times you press 'a' is\n\n    4\n, 'b' is \n    2\n and 'c' is \n    2\n. In the second test case, there are\nfive wrong tries: \"co\", \"codeforc\", \"cod\", \"co\", \"codeforce\" and the final try\nis \"codeforces\". The number of times you press 'c' is \n    9\n, 'd' is \n    4\n,\n'e' is \n    5\n, 'f' is \n    3\n, 'o' is \n    9\n, 'r' is \n    3\n and 's' is\n\n    1\n.\n\n",
        "cf_contest_id": 1311,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "brute force"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4 2\r\nabca\r\n1 3\r\n10 5\r\ncodeforces\r\n2 8 3 2 9\r\n26 10\r\nqwertyuioplkjhgfdsazxcvbnm\r\n20 10 1 2 3 5 10 5 9 4\r\n",
                "4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\r\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n11 2\r\nthisisatest\r\n3 5\r\n",
                "1 0 0 0 1 0 0 3 5 0 0 0 0 0 0 0 0 0 4 5 0 0 0 0 0 0\r\n"
            ]
        ]
    }
]