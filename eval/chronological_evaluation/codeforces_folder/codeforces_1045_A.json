[
    {
        "name": "Last chance",
        "description": "It is the year 2969. 1000 years have passed from the moon landing. Meanwhile,\nthe humanity colonized the Hyperspace\u2122 and lived in harmony. Until we realized\nthat we were not alone. Not too far away from the Earth, the massive fleet of\naliens' spaceships is preparing to attack the Earth. For the first time in a\nwhile, the humanity is in real danger. Crisis and panic are everywhere. The\nscientists from all around the solar system have met and discussed the\npossible solutions. However, no progress has been made. The Earth's last hope\nis YOU! Fortunately, the Earth is equipped with very powerful defense systems\nmade by MDCS. There are \n    N\n aliens' spaceships which form the line. The\ndefense system consists of three types of weapons: SQL rockets \u2013 every SQL\nrocket can destroy at most one spaceship in the given set. Cognition beams \u2013\nevery Cognition beam has an interval \n    [l,r]\n and can destroy at most one\nspaceship in that interval. OMG bazooka \u2013 every OMG bazooka has three possible\ntargets, however, each bazooka can destroy either zero or exactly two\nspaceships. In addition, due to the smart targeting system, the sets of the\nthree possible targets of any two different OMG bazookas are disjoint (that\nmeans that every ship is targeted with at most one OMG bazooka). Your task is\nto make a plan of the attack which will destroy the largest possible number of\nspaceships. Every destroyed spaceship should be destroyed with exactly one\nweapon. Input The first line contains two integers: the number of your weapons\n\n    N\n \n    (1\n    \u2264 N\n    \u2264 5000)\n and the number of spaceships \n    M\n\n\n    (1\n    \u2264 M\n    \u2264 5000)\n. In the next \n    N\n lines, each line starts with\none integer that represents type (either 0, 1 or 2). If the type is 0, then\nthe weapon is SQL rocket, the rest of the line contains strictly positive\nnumber \n    K\n \n    (\n    \u2211K\n    \u2264 100 000)\n and array \n    k_i\n\n\n    (1\n    \u2264 k_i\n    \u2264 M)\n of \n    K\n integers. If the type is 1, then the\nweapon is Cognition beam, the rest of the line contains integers \n    l\n and\n\n    r\n \n    (1\n    \u2264 l\n    \u2264 r\n    \u2264 M)\n. If the type is 2 then the weapon is\nOMG bazooka, the rest of the line contains distinct numbers \n    a\n, \n    b\n\nand \n    c\n \n    (1 \n    \u2264 a,b,c \n    \u2264 M)\n. Output The first line should\ncontain the maximum number of destroyed spaceships \u2014 \n    X\n. In the next\n\n    X\n lines, every line should contain two numbers \n    A\n and \n    B\n,\nwhere \n    A\n is an index of the weapon and \n    B\n is an index of the\nspaceship which was destroyed by the weapon \n    A\n. Example Input 3 5 0 1 4 2\n5 4 1 1 1 4 Output 4 2 1 3 2 1 4 2 5 Note SQL rocket can destroy only 4th\nspaceship. OMG Bazooka can destroy two of 1st, 4th or 5th spaceship, and\nCognition beam can destroy any spaceship from the interval \n    [1,4]\n. The\nmaximum number of destroyed spaceship is 4, and one possible plan is that SQL\nrocket should destroy 4th spaceship, OMG bazooka should destroy 1st and 5th\nspaceship and Cognition beam should destroy 2nd spaceship.\n\n",
        "cf_contest_id": 1045,
        "cf_index": "A",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "flows",
            "graph matchings",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 128.0,
        "public_cases": [
            [
                "3 5\r\n0 1 4\r\n2 5 4 1\r\n1 1 4\r\n",
                "4\r\n1 4\r\n2 5\r\n2 1\r\n3 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 6\r\n2 2 4 1\r\n1 2 2\r\n2 6 3 5\r\n",
                "5\r\n1 1\r\n1 4\r\n2 2\r\n3 6\r\n3 3\r\n"
            ],
            [
                "6 10\r\n0 1 6\r\n1 6 9\r\n0 1 5\r\n1 1 6\r\n2 5 3 4\r\n2 1 9 7\r\n",
                "8\r\n1 6\r\n2 7\r\n3 5\r\n4 2\r\n5 4\r\n5 3\r\n6 1\r\n6 9\r\n"
            ],
            [
                "7 7\r\n1 4 6\r\n1 1 4\r\n1 2 3\r\n1 2 2\r\n1 1 2\r\n1 3 5\r\n1 5 5\r\n",
                "6\r\n1 6\r\n2 1\r\n3 3\r\n4 2\r\n6 4\r\n7 5\r\n"
            ],
            [
                "5 10\r\n0 1 9\r\n0 2 9 5\r\n0 2 6 9\r\n0 1 2\r\n2 7 4 8\r\n",
                "6\r\n1 9\r\n2 5\r\n3 6\r\n4 2\r\n5 7\r\n5 4\r\n"
            ],
            [
                "30 100\r\n2 77 31 4\r\n2 97 17 63\r\n2 98 57 48\r\n2 30 7 26\r\n2 50 14 55\r\n2 67 75 92\r\n2 79 65 43\r\n2 56 49 52\r\n2 76 5 61\r\n2 8 80 93\r\n2 73 53 47\r\n2 29 83 100\r\n2 33 90 72\r\n2 27 10 81\r\n2 69 70 21\r\n2 62 89 64\r\n2 19 44 23\r\n2 94 88 22\r\n2 16 71 45\r\n2 54 37 18\r\n2 20 91 68\r\n2 3 6 46\r\n2 25 32 24\r\n2 9 40 66\r\n2 39 99 95\r\n2 12 74 84\r\n2 28 87 51\r\n2 1 85 15\r\n2 58 82 78\r\n2 2 34 11\r\n",
                "60\r\n1 77\r\n1 31\r\n2 97\r\n2 17\r\n3 98\r\n3 57\r\n4 30\r\n4 7\r\n5 50\r\n5 14\r\n6 67\r\n6 75\r\n7 79\r\n7 65\r\n8 56\r\n8 49\r\n9 76\r\n9 5\r\n10 8\r\n10 80\r\n11 73\r\n11 53\r\n12 29\r\n12 83\r\n13 33\r\n13 90\r\n14 27\r\n14 10\r\n15 69\r\n15 70\r\n16 62\r\n16 89\r\n17 19\r\n17 44\r\n18 94\r\n18 88\r\n19 16\r\n19 71\r\n20 54\r\n20 37\r\n21 20\r\n21 91\r\n22 3\r\n22 6\r\n23 25\r\n23 32\r\n24 9\r\n24 40\r\n25 39\r\n25 99\r\n26 12\r\n26 74\r\n27 28\r\n27 87\r\n28 1\r\n28 85\r\n29 58\r\n29 82\r\n30 2\r\n30 34\r\n"
            ],
            [
                "47 123\r\n0 1 33\r\n0 1 92\r\n2 33 41 22\r\n0 1 107\r\n0 1 34\r\n2 118 52 61\r\n0 1 24\r\n2 97 66 20\r\n0 1 64\r\n2 23 76 24\r\n0 1 79\r\n2 119 30 26\r\n0 1 94\r\n2 10 74 108\r\n2 79 112 91\r\n2 11 18 4\r\n0 1 73\r\n0 1 1\r\n0 1 98\r\n2 55 117 84\r\n0 1 72\r\n2 57 44 5\r\n2 62 31 12\r\n0 1 14\r\n0 1 8\r\n2 8 86 28\r\n2 116 103 56\r\n0 1 84\r\n0 1 19\r\n2 67 47 80\r\n1 55 87\r\n2 17 123 59\r\n2 25 77 63\r\n0 1 106\r\n0 1 49\r\n2 83 114 39\r\n2 104 6 71\r\n0 1 36\r\n0 1 9\r\n0 1 36\r\n0 1 65\r\n2 53 38 107\r\n2 27 58 70\r\n0 1 24\r\n2 87 14 65\r\n2 78 32 43\r\n2 60 54 93\r\n",
                "67\r\n1 33\r\n2 92\r\n3 22\r\n3 41\r\n4 107\r\n5 34\r\n6 118\r\n6 52\r\n7 24\r\n8 97\r\n8 66\r\n9 64\r\n10 23\r\n10 76\r\n11 79\r\n12 119\r\n12 30\r\n13 94\r\n14 10\r\n14 74\r\n15 91\r\n15 112\r\n16 11\r\n16 18\r\n17 73\r\n18 1\r\n19 98\r\n20 55\r\n20 117\r\n21 72\r\n22 57\r\n22 44\r\n23 62\r\n23 31\r\n24 14\r\n25 8\r\n26 28\r\n26 86\r\n27 116\r\n27 103\r\n28 84\r\n29 19\r\n30 67\r\n30 47\r\n31 56\r\n32 17\r\n32 123\r\n33 25\r\n33 77\r\n34 106\r\n35 49\r\n36 83\r\n36 114\r\n37 104\r\n37 6\r\n38 36\r\n39 9\r\n42 53\r\n42 38\r\n43 27\r\n43 58\r\n45 87\r\n45 65\r\n46 78\r\n46 32\r\n47 60\r\n47 54\r\n"
            ]
        ]
    }
]