[
    {
        "name": "Best Permutation",
        "description": "Let's define the value of the permutation \n    p\n of \n    n\n integers \n    1\n,\n\n    2\n, ..., \n    n\n (a permutation is an array where each element from\n\n    1\n to \n    n\n occurs exactly once) as follows: initially, an integer\nvariable \n    x\n is equal to \n    0\n; if \n    x < p_1\n, then add \n    p_1\n to\n\n    x\n (set \n    x = x + p_1\n), otherwise assign \n    0\n to \n    x\n; if \n    x\n    < p_2\n, then add \n    p_2\n to \n    x\n (set \n    x = x + p_2\n), otherwise\nassign \n    0\n to \n    x\n; ... if \n    x < p_n\n, then add \n    p_n\n to \n    x\n\n(set \n    x = x + p_n\n), otherwise assign \n    0\n to \n    x\n; the value of the\npermutation is \n    x\n at the end of this process. For example, for \n    p = [4,\n    5, 1, 2, 3, 6]\n, the value of \n    x\n changes as follows: \n    0, 4, 9, 0, 2,\n    5, 11\n, so the value of the permutation is \n    11\n. You are given an\ninteger \n    n\n. Find a permutation \n    p\n of size \n    n\n with the maximum\npossible value among all permutations of size \n    n\n. If there are several\nsuch permutations, you can print any of them. Input The first line contains\none integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 97\n) \u2014 the number of test cases. The\nonly line of each test case contains one integer \n    n\n (\n    4 \n    \u2264 n \n    \u2264\n    100\n). Output For each test case, print \n    n\n integers \u2014 the permutation\n\n    p\n of size \n    n\n with the maximum possible value among all permutations\nof size \n    n\n. Example Input 3 4 5 6 Output 2 1 3 4 1 2 3 4 5 4 5 1 2 3 6\n\n",
        "cf_contest_id": 1728,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4\r\n5\r\n6\r\n",
                "2 1 3 4\r\n1 3 2 4 5\r\n4 3 2 1 5 6\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n5\r\n",
                "1 3 2 4 5\r\n"
            ]
        ]
    }
]