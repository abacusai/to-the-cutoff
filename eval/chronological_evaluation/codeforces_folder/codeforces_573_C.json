[
    {
        "name": "Bear and Drawing",
        "description": "Limak is a little bear who learns to draw. People usually start with houses,\nfences and flowers but why would bears do it? Limak lives in the forest and he\ndecides to draw a tree. Recall that tree is a connected graph consisting of n\nvertices and n - 1 edges. Limak chose a tree with n vertices. He has infinite\nstrip of paper with two parallel rows of dots. Little bear wants to assign\nvertices of a tree to some n distinct dots on a paper so that edges would\nintersect only at their endpoints \u2014 drawn tree must be planar. Below you can\nsee one of correct drawings for the first sample test. Is it possible for\nLimak to draw chosen tree? Input The first line contains single integer n (1 \u2264\nn \u2264 10^5). Next n - 1 lines contain description of a tree. i-th of them\ncontains two space-separated integers ai and bi (1 \u2264 ai, bi \u2264 n, ai \u2260 bi)\ndenoting an edge between vertices ai and bi. It's guaranteed that given\ndescription forms a tree. Output Print \"Yes\" (without the quotes) if Limak can\ndraw chosen tree. Otherwise, print \"No\" (without the quotes). Examples Input 8\n1 2 1 3 1 6 6 4 6 7 6 5 7 8 Output Yes Input 13 1 2 1 3 1 4 2 5 2 6 2 7 3 8 3\n9 3 10 4 11 4 12 4 13 Output No\n\n",
        "cf_contest_id": 573,
        "cf_index": "C",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dfs and similar",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8\r\n1 2\r\n1 3\r\n1 6\r\n6 4\r\n6 7\r\n6 5\r\n7 8\r\n",
                "Yes"
            ],
            [
                "13\r\n1 2\r\n1 3\r\n1 4\r\n2 5\r\n2 6\r\n2 7\r\n3 8\r\n3 9\r\n3 10\r\n4 11\r\n4 12\r\n4 13\r\n",
                "No"
            ]
        ],
        "private_cases": [
            [
                "1\r\n",
                "Yes"
            ],
            [
                "20\r\n5 15\r\n20 4\r\n11 18\r\n1 14\r\n18 2\r\n14 17\r\n8 10\r\n13 1\r\n11 6\r\n14 16\r\n12 8\r\n9 3\r\n13 15\r\n8 17\r\n3 13\r\n1 18\r\n17 7\r\n9 20\r\n19 12\r\n",
                "Yes"
            ],
            [
                "50\r\n38 13\r\n29 35\r\n32 25\r\n34 1\r\n11 26\r\n26 14\r\n31 35\r\n10 40\r\n34 2\r\n28 21\r\n25 35\r\n17 24\r\n49 48\r\n37 5\r\n40 22\r\n44 27\r\n22 20\r\n37 29\r\n6 26\r\n38 11\r\n21 46\r\n7 47\r\n45 12\r\n42 39\r\n15 41\r\n5 22\r\n36 10\r\n33 4\r\n20 3\r\n28 2\r\n43 39\r\n14 42\r\n27 50\r\n36 24\r\n32 49\r\n13 18\r\n8 50\r\n15 19\r\n30 45\r\n25 41\r\n6 44\r\n23 7\r\n33 9\r\n6 1\r\n7 31\r\n1 35\r\n9 27\r\n30 3\r\n4 16\r\n",
                "No"
            ],
            [
                "50\r\n43 45\r\n4 12\r\n47 34\r\n5 45\r\n23 42\r\n27 18\r\n10 12\r\n24 35\r\n40 32\r\n28 4\r\n1 30\r\n32 48\r\n9 13\r\n32 38\r\n11 16\r\n13 32\r\n7 26\r\n25 10\r\n34 48\r\n20 33\r\n24 32\r\n18 19\r\n22 36\r\n48 31\r\n1 21\r\n8 39\r\n40 42\r\n41 35\r\n30 3\r\n7 15\r\n29 36\r\n14 38\r\n13 49\r\n6 22\r\n1 46\r\n41 11\r\n32 45\r\n24 27\r\n4 23\r\n12 33\r\n27 3\r\n5 17\r\n44 27\r\n2 42\r\n21 50\r\n7 37\r\n39 50\r\n6 32\r\n44 37\r\n",
                "No"
            ],
            [
                "2\r\n1 2\r\n",
                "Yes"
            ],
            [
                "10\r\n7 2\r\n10 6\r\n1 2\r\n6 3\r\n8 7\r\n4 5\r\n8 3\r\n10 9\r\n5 1\r\n",
                "Yes"
            ],
            [
                "15\r\n7 1\r\n5 15\r\n3 4\r\n4 1\r\n1 12\r\n8 7\r\n2 6\r\n12 9\r\n10 14\r\n11 15\r\n2 14\r\n14 5\r\n9 14\r\n12 13\r\n",
                "Yes"
            ],
            [
                "25\r\n5 19\r\n16 23\r\n23 19\r\n22 23\r\n12 22\r\n22 1\r\n14 10\r\n20 15\r\n11 16\r\n19 9\r\n7 6\r\n25 21\r\n1 13\r\n15 1\r\n21 18\r\n23 4\r\n21 22\r\n6 2\r\n4 17\r\n24 19\r\n9 3\r\n21 6\r\n22 10\r\n6 8\r\n",
                "Yes"
            ],
            [
                "37\r\n10 4\r\n32 30\r\n11 25\r\n18 21\r\n12 10\r\n19 22\r\n6 8\r\n29 7\r\n30 31\r\n1 33\r\n34 21\r\n31 37\r\n28 16\r\n9 27\r\n15 20\r\n3 29\r\n20 27\r\n34 5\r\n20 13\r\n13 14\r\n36 2\r\n32 23\r\n33 35\r\n15 26\r\n11 24\r\n26 4\r\n16 14\r\n26 19\r\n3 18\r\n36 6\r\n2 15\r\n9 17\r\n36 21\r\n24 30\r\n1 6\r\n23 15\r\n",
                "Yes"
            ],
            [
                "2\r\n1 2\r\n",
                "Yes"
            ],
            [
                "3\r\n1 2\r\n2 3\r\n",
                "Yes"
            ],
            [
                "3\r\n2 1\r\n2 3\r\n",
                "Yes"
            ],
            [
                "3\r\n3 1\r\n2 3\r\n",
                "Yes"
            ],
            [
                "4\r\n1 2\r\n2 3\r\n3 4\r\n",
                "Yes"
            ],
            [
                "4\r\n1 2\r\n2 3\r\n2 4\r\n",
                "Yes"
            ],
            [
                "4\r\n1 4\r\n4 2\r\n3 4\r\n",
                "Yes"
            ],
            [
                "6\r\n3 1\r\n3 2\r\n3 4\r\n4 6\r\n4 5\r\n",
                "Yes"
            ],
            [
                "12\r\n1 2\r\n3 2\r\n2 4\r\n4 5\r\n5 6\r\n6 7\r\n6 8\r\n4 9\r\n9 10\r\n10 11\r\n10 12\r\n",
                "Yes"
            ],
            [
                "12\r\n1 2\r\n2 3\r\n2 4\r\n4 5\r\n4 6\r\n5 7\r\n5 8\r\n5 9\r\n6 10\r\n6 11\r\n6 12\r\n",
                "Yes"
            ],
            [
                "17\r\n9 8\r\n8 10\r\n8 11\r\n8 5\r\n5 6\r\n5 7\r\n5 4\r\n4 1\r\n4 2\r\n4 3\r\n4 12\r\n12 13\r\n12 14\r\n12 15\r\n15 16\r\n15 17\r\n",
                "Yes"
            ],
            [
                "12\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n5 6\r\n6 7\r\n6 8\r\n4 9\r\n9 10\r\n10 11\r\n10 12\r\n",
                "Yes"
            ],
            [
                "14\r\n2 3\r\n3 8\r\n7 8\r\n8 9\r\n3 4\r\n4 1\r\n14 1\r\n10 1\r\n4 5\r\n5 6\r\n5 12\r\n11 12\r\n12 13\r\n",
                "Yes"
            ],
            [
                "18\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n4 6\r\n2 7\r\n7 8\r\n8 9\r\n8 10\r\n1 11\r\n11 12\r\n12 13\r\n13 14\r\n14 15\r\n15 16\r\n16 17\r\n17 18\r\n",
                "Yes"
            ],
            [
                "10\r\n1 2\r\n1 3\r\n1 4\r\n2 5\r\n2 6\r\n3 7\r\n3 8\r\n4 9\r\n4 10\r\n",
                "Yes"
            ],
            [
                "14\r\n1 2\r\n2 3\r\n3 4\r\n3 5\r\n5 6\r\n5 7\r\n2 8\r\n8 9\r\n9 10\r\n9 11\r\n8 12\r\n12 13\r\n12 14\r\n",
                "Yes"
            ],
            [
                "12\r\n1 2\r\n1 3\r\n1 4\r\n4 5\r\n4 6\r\n5 7\r\n6 8\r\n7 9\r\n7 10\r\n8 11\r\n8 12\r\n",
                "Yes"
            ],
            [
                "12\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n3 6\r\n5 7\r\n5 8\r\n5 9\r\n6 10\r\n6 11\r\n6 12\r\n",
                "Yes"
            ],
            [
                "14\r\n1 2\r\n2 13\r\n13 3\r\n13 4\r\n9 4\r\n4 5\r\n9 10\r\n10 11\r\n10 12\r\n5 6\r\n6 7\r\n6 8\r\n1 14\r\n",
                "Yes"
            ],
            [
                "10\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n4 6\r\n2 7\r\n7 8\r\n8 9\r\n8 10\r\n",
                "Yes"
            ],
            [
                "13\r\n1 2\r\n2 3\r\n3 4\r\n3 5\r\n1 6\r\n6 7\r\n7 8\r\n7 9\r\n1 10\r\n10 11\r\n11 12\r\n11 13\r\n",
                "No"
            ]
        ]
    }
]