[
    {
        "name": "AB-string",
        "description": "The string \n    t_1t_2 \n    \u2026 t_k\n is good if each letter of this string\nbelongs to at least one palindrome of length greater than 1. A palindrome is a\nstring that reads the same backward as forward. For example, the strings A,\nBAB, ABBA, BAABBBAAB are palindromes, but the strings AB, ABBBAA, BBBA are\nnot. Here are some examples of good strings: \n    t\n = AABBB (letters\n\n    t_1\n, \n    t_2\n belong to palindrome \n    t_1 \n    \u2026 t_2\n and letters\n\n    t_3\n, \n    t_4\n, \n    t_5\n belong to palindrome \n    t_3 \n    \u2026 t_5\n);\n\n    t\n = ABAA (letters \n    t_1\n, \n    t_2\n, \n    t_3\n belong to palindrome\n\n    t_1 \n    \u2026 t_3\n and letter \n    t_4\n belongs to palindrome \n    t_3\n    \n    \u2026 t_4\n); \n    t\n = AAAAA (all letters belong to palindrome \n    t_1\n    \n    \u2026 t_5\n); You are given a string \n    s\n of length \n    n\n, consisting\nof only letters A and B. You have to calculate the number of good substrings\nof string \n    s\n. Input The first line contains one integer \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the length of the string \n    s\n. The\nsecond line contains the string \n    s\n, consisting of letters A and B. Output\nPrint one integer \u2014 the number of good substrings of string \n    s\n. Examples\nInput 5 AABBB Output 6 Input 3 AAA Output 3 Input 7 AAABABB Output 15 Note In\nthe first test case there are six good substrings: \n    s_1 \n    \u2026 s_2\n,\n\n    s_1 \n    \u2026 s_4\n, \n    s_1 \n    \u2026 s_5\n, \n    s_3 \n    \u2026 s_4\n, \n    s_3\n    \n    \u2026 s_5\n and \n    s_4 \n    \u2026 s_5\n. In the second test case there are\nthree good substrings: \n    s_1 \n    \u2026 s_2\n, \n    s_1 \n    \u2026 s_3\n and \n    s_2\n    \n    \u2026 s_3\n.\n\n",
        "cf_contest_id": 1238,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "combinatorics",
            "dp",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\nAABBB\r\n",
                "6\r\n"
            ],
            [
                "3\r\nAAA\r\n",
                "3\r\n"
            ],
            [
                "7\r\nAAABABB\r\n",
                "15\r\n"
            ]
        ],
        "private_cases": []
    }
]