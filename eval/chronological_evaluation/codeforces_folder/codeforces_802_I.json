[
    {
        "name": "Fake News (hard)",
        "description": "Now that you have proposed a fake post for the HC^2 Facebook page, Heidi wants\nto measure the quality of the post before actually posting it. She recently\ncame across a (possibly fake) article about the impact of fractal structure on\nmultimedia messages and she is now trying to measure the self-similarity of\nthe message, which is defined as where the sum is over all nonempty strings p\nand is the number of occurences of p in s as a substring. (Note that the sum\nis infinite, but it only has a finite number of nonzero summands.) Heidi\nrefuses to do anything else until she knows how to calculate this self-\nsimilarity. Could you please help her? (If you would like to instead convince\nHeidi that a finite string cannot be a fractal anyway \u2013 do not bother, we have\nalready tried.) Input The input starts with a line indicating the number of\ntest cases T (1 \u2264 T \u2264 10). After that, T test cases follow, each of which\nconsists of one line containing a string s (1 \u2264 |s| \u2264 100 000) composed of\nlowercase letters (a-z). Output Output T lines, every line containing one\nnumber \u2013 the answer to the corresponding test case. Example Input 4 aa abcd\nccc abcc Output 5 10 14 12 Note A string s contains another string p as a\nsubstring if p is a contiguous subsequence of s. For example, ab is a\nsubstring of cab but not of acb.\n\n",
        "cf_contest_id": 802,
        "cf_index": "I",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "string suffix structures"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\naa\r\nabcd\r\nccc\r\nabcc\r\n",
                "5\r\n10\r\n14\r\n12\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\ncccjcuuquj\r\nhththataff\r\nyywwywyndy\r\nrtattttajk\r\nwggxegebex\r\nllalahaffl\r\njijhjjhhki\r\nujnjujvnuj\r\ntggvvbvmgt\r\nnwnnneewnn\r\n",
                "77\r\n77\r\n85\r\n87\r\n69\r\n77\r\n77\r\n81\r\n69\r\n99\r\n"
            ],
            [
                "10\r\ncclbvczicnbrvrzzcvtp\r\nqpppmppmwppoypywqbxi\r\nfoftxsfvvdoxffvfslsp\r\najddklkkladeqjqmkmlq\r\ncmxmhccmrrccmoxpyfpf\r\nknnadqaoxaoxmnmexodo\r\nnbwtjvwsluntlwplnwbn\r\nbbrpsovbuuwvfsrzfuru\r\nfhntkhwunnsfhknnnwfn\r\nxxxxcxdkakxnankxfndx\r\n",
                "246\r\n290\r\n258\r\n248\r\n260\r\n250\r\n244\r\n240\r\n276\r\n292\r\n"
            ],
            [
                "1\r\na\r\n",
                "1\r\n"
            ]
        ]
    }
]