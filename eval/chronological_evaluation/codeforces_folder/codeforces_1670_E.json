[
    {
        "name": "Hemose on the Tree",
        "description": "After the last regional contest, Hemose and his teammates finally qualified to\nthe ICPC World Finals, so for this great achievement and his love of trees, he\ngave you this problem as the name of his team \"Hemose 3al shagra\" (Hemose on\nthe tree). You are given a tree of \n    n\n vertices where \n    n\n is a power\nof \n    2\n. You have to give each node and edge an integer value in the range\n\n    [1,2n -1]\n (inclusive), where all the values are distinct. After giving\neach node and edge a value, you should select some root for the tree such that\nthe maximum cost of any simple path starting from the root and ending at any\nnode or edge is minimized. The cost of the path between two nodes \n    u\n and\n\n    v\n or any node \n    u\n and edge \n    e\n is defined as the bitwise XOR of\nall the node's and edge's values between them, including the endpoints (note\nthat in a tree there is only one simple path between two nodes or between a\nnode and an edge). Input The first line contains a single integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 5\n    \u00b7 10^4\n) \u2014 the number of test cases. Then \n    t\n\ntest cases follow. The first line of each test case contains a single integer\n\n    p\n (\n    1 \n    \u2264 p \n    \u2264 17\n), where \n    n\n (the number of vertices in\nthe tree) is equal to \n    2^p\n. Each of the next \n    n\u22121\n lines contains two\nintegers \n    u\n and \n    v\n (\n    1 \n    \u2264 u,v \n    \u2264 n\n) meaning that there is\nan edge between the vertices \n    u\n and \n    v\n in the tree. It is guaranteed\nthat the given graph is a tree. It is guaranteed that the sum of \n    n\n over\nall test cases doesn't exceed \n    3\n    \u00b7 10^5\n. Output For each test case\non the first line print the chosen root. On the second line, print \n    n\n\nintegers separated by spaces, where the \n    i\n-th integer represents the\nchosen value for the \n    i\n-th node. On the third line, print \n    n-1\n\nintegers separated by spaces, where the \n    i\n-th integer represents the\nchosen value for the \n    i\n-th edge. The edges are numerated in the order of\ntheir appearance in the input data. If there are multiple solutions, you may\noutput any. Example Input 2 2 1 2 2 3 3 4 3 1 2 2 3 3 4 1 5 1 6 5 7 5 8 Output\n3 5 1 3 6 4 2 7 5 1 2 8 11 4 13 9 15 6 14 3 7 10 5 12 Note The tree in the\nfirst test case with the weights of all nodes and edges is shown in the\npicture. The costs of all paths are: \n    3\n; \n    3\n    \u2295 7=4\n;\n\n    3\n    \u2295 7\n    \u2295 6=2\n; \n    3\n    \u2295 2=1\n; \n    3\n    \u2295 2\n    \u2295\n    1=0\n; \n    3\n    \u2295 2\n    \u2295 1\n    \u2295 4=4\n; \n    3\n    \u2295 2\n    \u2295\n    1\n    \u2295 4\n    \u2295 5=1\n. The maximum cost of all these paths is \n    4\n. We\ncan show that it is impossible to assign the values and choose the root\ndifferently to achieve a smaller maximum cost of all paths. The tree in the\nsecond test case:\n\n",
        "cf_contest_id": 1670,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "constructive algorithms",
            "dfs and similar",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n2\r\n1 2\r\n2 3\r\n3 4\r\n3\r\n1 2\r\n2 3\r\n3 4\r\n1 5\r\n1 6\r\n5 7\r\n5 8\r\n",
                "1\r\n4 1 6 3 \r\n5 2 7 \r\n1\r\n8 1 10 3 4 7 13 14 \r\n9 2 11 12 15 5 6 \r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n2\r\n1 2\r\n3 1\r\n4 2\r\n2\r\n2 4\r\n3 2\r\n4 1\r\n3\r\n5 6\r\n6 7\r\n1 8\r\n6 1\r\n3 4\r\n3 6\r\n2 5\r\n",
                "1\r\n4 1 3 6 \r\n5 7 2 \r\n1\r\n4 6 3 1 \r\n2 7 5 \r\n1\r\n8 4 14 7 11 2 13 1 \r\n3 5 9 10 15 6 12 \r\n"
            ]
        ]
    }
]