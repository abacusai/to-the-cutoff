[
    {
        "name": "Mishka and trip",
        "description": "Little Mishka is a great traveller and she visited many countries. After\nthinking about where to travel this time, she chose XXX \u2014 beautiful, but\nlittle-known northern country. Here are some interesting facts about XXX: XXX\nconsists of n cities, k of whose (just imagine!) are capital cities. All of\ncities in the country are beautiful, but each is beautiful in its own way.\nBeauty value of i-th city equals to ci. All the cities are consecutively\nconnected by the roads, including 1-st and n-th city, forming a cyclic route 1\n\u2014 2 \u2014 ... \u2014 n \u2014 1. Formally, for every 1 \u2264 i < n there is a road between i-th\nand i + 1-th city, and another one between 1-st and n-th city. Each capital\ncity is connected with each other city directly by the roads. Formally, if\ncity x is a capital city, then for every 1 \u2264 i \u2264 n, i \u2260 x, there is a road\nbetween cities x and i. There is at most one road between any two cities.\nPrice of passing a road directly depends on beauty values of cities it\nconnects. Thus if there is a road between cities i and j, price of passing it\nequals ci\u00b7cj.Mishka started to gather her things for a trip, but didn't still\ndecide which route to follow and thus she asked you to help her determine\nsummary price of passing each of the roads in XXX. Formally, for every pair of\ncities a and b (a < b), such that there is a road between a and b you are to\nfind sum of products ca\u00b7cb. Will you help her? Input The first line of the\ninput contains two integers n and k (3 \u2264 n \u2264 100 000, 1 \u2264 k \u2264 n) \u2014 the number\nof cities in XXX and the number of capital cities among them. The second line\nof the input contains n integers c1, c2, ..., cn (1 \u2264 ci \u2264 10 000) \u2014 beauty\nvalues of the cities. The third line of the input contains k distinct integers\nid1, id2, ..., idk (1 \u2264 idi \u2264 n) \u2014 indices of capital cities. Indices are\ngiven in ascending order. Output Print the only integer \u2014 summary price of\npassing each of the roads in XXX. Examples Input 4 1 2 3 1 2 3 Output 17 Input\n5 2 3 5 2 2 4 1 4 Output 71 Note This image describes first sample case: It is\neasy to see that summary price is equal to 17. This image describes second\nsample case: It is easy to see that summary price is equal to 71.\n\n",
        "cf_contest_id": 703,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 1\r\n2 3 1 2\r\n3\r\n",
                "17\r\n"
            ],
            [
                "5 2\r\n3 5 2 2 4\r\n1 4\r\n",
                "71\r\n"
            ]
        ],
        "private_cases": [
            [
                "3 1\r\n1 1 1\r\n1\r\n",
                "3\r\n"
            ],
            [
                "3 3\r\n1 1 1\r\n1 2 3\r\n",
                "3\r\n"
            ],
            [
                "7 7\r\n6 9 2 7 4 8 7\r\n1 2 3 4 5 6 7\r\n",
                "775\r\n"
            ],
            [
                "5 5\r\n6 2 4 10 2\r\n1 2 3 4 5\r\n",
                "208\r\n"
            ],
            [
                "5 5\r\n6 7 8 8 8\r\n1 2 3 4 5\r\n",
                "546\r\n"
            ],
            [
                "9 4\r\n5 6 7 1 5 4 8 7 1\r\n1 5 7 9\r\n",
                "647\r\n"
            ],
            [
                "7 2\r\n1 6 8 3 3 5 5\r\n1 3\r\n",
                "255\r\n"
            ],
            [
                "9 4\r\n182 938 865 240 911 25 373 22 875\r\n3 6 7 8\r\n",
                "4972597\r\n"
            ],
            [
                "10 4\r\n7931 7116 4954 8578 847 6206 5398 4103 7814 1245\r\n1 3 5 7\r\n",
                "836854437\r\n"
            ],
            [
                "9 7\r\n341 106 584 605 495 512 66 992 713\r\n1 4 5 6 7 8 9\r\n",
                "8322420\r\n"
            ],
            [
                "8 2\r\n43 2961 202 2637 1007 4469 9031 9900\r\n4 7\r\n",
                "246280951\r\n"
            ],
            [
                "8 5\r\n751 782 792 243 111 161 746 331\r\n1 3 4 6 8\r\n",
                "5635386\r\n"
            ],
            [
                "8 4\r\n733 7990 4777 3024 7627 2283 4959 1698\r\n1 3 5 7\r\n",
                "382022214\r\n"
            ],
            [
                "8 6\r\n736 620 367 629 539 975 867 937\r\n1 2 5 6 7 8\r\n",
                "13910835\r\n"
            ],
            [
                "6 2\r\n9436 8718 315 2056 4898 7352\r\n4 6\r\n",
                "319961666\r\n"
            ],
            [
                "6 1\r\n916 913 649 645 312 968\r\n6\r\n",
                "5373770\r\n"
            ],
            [
                "6 2\r\n6703 5345 9335 5285 1268 5207\r\n3 6\r\n",
                "361632002\r\n"
            ],
            [
                "51 3\r\n834 817 726 282 783 437 729 423 444 422 692 522 479 27 744 955 634 885 280 839 851 781 555 286 761 459 245 494 709 464 470 254 862 597 409 276 372 746 135 464 742 400 970 766 388 351 474 104 702 945 835\r\n12 28 29\r\n",
                "62712861\r\n"
            ],
            [
                "52 17\r\n5281 7307 2542 1181 6890 5104 5081 4658 9629 6973 3504 4423 3184 6012 2538 6778 9611 3163 1907 4489 4923 685 5753 2553 5986 520 192 8643 4805 6469 5311 3074 2045 6836 6993 7126 1415 6149 9093 9635 6004 1983 7263 3171 4378 9436 9813 6464 8656 3819 130 763\r\n1 5 7 9 11 13 16 19 21 23 35 38 40 42 47 49 51\r\n",
                "20412478312\r\n"
            ],
            [
                "76 45\r\n29 219 740 819 616 699 8 557 969 550 66 259 615 101 560 640 75 632 752 598 820 714 418 858 669 819 456 597 290 956 461 941 359 318 155 378 257 292 699 249 306 676 890 292 25 225 22 520 776 268 397 438 468 239 174 508 265 216 933 857 564 165 59 779 526 826 597 77 704 420 688 1 689 769 323 98\r\n1 2 3 5 7 8 10 12 14 15 17 18 22 23 25 26 28 30 31 33 34 35 36 37 38 40 43 44 46 47 52 53 55 56 58 60 61 62 63 64 66 69 71 72 73\r\n",
                "508857909\r\n"
            ],
            [
                "76 24\r\n6814 3834 1131 6256 2598 850 7353 1702 5773 1699 35 5103 1368 2258 7891 7455 8546 7316 7428 8864 6536 5750 8455 2624 7326 2197 8239 3806 3016 7126 85 3249 1138 6783 9684 4417 7417 3660 6334 7324 9760 9755 7605 9891 3676 8784 8739 8266 3272 9250 5875 939 4130 6540 7813 6867 9148 781 6190 964 5612 1864 949 7826 9148 6293 4936 870 2042 5838 7141 2030 1241 259 5617 2539\r\n3 5 9 12 15 18 20 23 25 29 31 33 35 37 39 44 46 48 59 63 65 68 72 76\r\n",
                "43060198680\r\n"
            ],
            [
                "50 15\r\n915 8535 2997 4040 9747 2161 9628 8364 1943 136 1403 7037 9713 7741 7463 4316 1543 994 7320 95 6211 8110 2713 5806 7652 6749 3996 2886 8971 6878 1267 9546 1551 6835 9256 5725 9609 1748 8246 6169 9465 4620 9565 1419 3327 1003 9938 9556 882 6178\r\n3 8 10 12 15 18 22 24 27 29 33 37 41 43 46\r\n",
                "19733750400\r\n"
            ],
            [
                "73 27\r\n651 944 104 639 369 961 338 573 516 690 889 227 480 160 299 783 270 331 793 796 64 712 649 88 695 550 829 303 965 780 570 374 371 506 954 632 660 987 986 253 144 993 708 710 890 257 303 651 923 107 386 893 301 387 852 596 72 699 63 241 336 855 160 5 981 447 601 601 305 680 448 676 374\r\n1 3 4 5 6 11 17 18 19 20 27 29 32 33 40 43 46 47 48 53 55 57 61 62 63 67 71\r\n",
                "460505110\r\n"
            ],
            [
                "74 27\r\n8668 693 205 9534 6686 9598 2837 3425 8960 3727 8872 4393 4835 8438 7881 3591 7914 5218 8959 7342 7134 8170 1778 5107 3467 6998 9506 3635 8929 2004 49 701 5059 7285 5236 1540 7643 365 229 2062 7732 3142 7668 8871 2783 7309 529 1695 4255 8084 2708 6936 8300 4015 1142 3705 8564 1031 1685 9262 5077 3674 4788 4981 4693 9896 792 322 5482 584 3852 3484 9410 3889\r\n1 4 6 12 16 19 21 23 26 29 31 33 36 39 41 43 46 48 51 53 55 58 61 64 67 69 73\r\n",
                "41845373785\r\n"
            ],
            [
                "3 1\r\n1 2 3\r\n3\r\n",
                "11\r\n"
            ]
        ]
    }
]