[
    {
        "name": "Road to 1600",
        "description": "Egor wants to achieve a rating of 1600 points on the well-known chess portal\nChessForces and he needs your help! Before you start solving the problem, Egor\nwants to remind you how the chess pieces move. Chess rook moves along straight\nlines up and down, left and right, as many squares as it wants. And when it\nwants, it can stop. The queen walks in all directions vertically and\ndiagonally at any distance. You can see the examples below. To reach the goal,\nEgor should research the next topic: There is an \n    N \n    \u00d7 N\n board.\nEach cell of the board has a number from \n    1\n to \n    N ^ 2\n in it and\nnumbers in all cells are distinct. In the beginning, some chess figure stands\nin the cell with the number \n    1\n. Note that this cell is already considered\nas visited. After that every move is determined by the following rules: Among\nall not visited yet cells to which the figure can get in one move, it goes to\nthe cell that has minimal number. If all accessible cells were already visited\nand some cells are not yet visited, then the figure is teleported to the not\nvisited cell that has minimal number. If this step happens, the piece pays a\nfee of \n    1\n vun. If all cells are already visited, the process is stopped.\nEgor should find an \n    N \n    \u00d7 N\n board on which the rook pays strictly\nless vuns than the queen during the round with this numbering. Help him to\nfind such \n    N \n    \u00d7 N\n numbered board, or tell that it doesn't exist.\nInput The only line contains one integer \n    N\n \u2014 the size of the board,\n\n    1\n    \u2264 N \n    \u2264 500\n. Output The output should contain \n    N\n lines. In\n\n    i\n-th line output \n    N\n numbers \u2014 numbers on the \n    i\n-th row of the\nboard. All numbers from \n    1\n to \n    N \n    \u00d7 N\n must be used exactly\nonce. On your board rook must pay strictly less vuns than the queen. If there\nare no solutions, print \n    -1\n. If there are several solutions, you can\noutput any of them. Examples Input 1 Output -1 Input 4 Output 4 3 6 12 7 5 9\n15 14 1 11 10 13 8 16 2 Note In case we have \n    1 \n    \u00d7 1\n board, both\nrook and queen do not have a chance to pay fees. In second sample rook goes\nthrough cells \n    1 \n    \u2192 3 \n    \u2192 4 \n    \u2192 6 \n    \u2192 9 \n    \u2192 5 \n    \u2192 7 \n    \u2192 13\n    \n    \u2192 2 \n    \u2192 8 \n    \u2192 16 \n    \u2192 11 \n    \u2192 10 \n    \u2192 12 \n    \u2192 15 \n    \u2192\n    (1 vun)\n    \u2192 14\n. Queen goes through \n    1 \n    \u2192 3 \n    \u2192 4 \n    \u2192\n    2 \n    \u2192 5 \n    \u2192 6 \n    \u2192 9 \n    \u2192 7 \n    \u2192 13 \n    \u2192 8 \n    \u2192 11 \n    \u2192 10 \n    \u2192 12\n    \n    \u2192 15 \n    \u2192\n    (1 vun)\n    \u2192 14 \n    \u2192\n    (1 vun)\n    \u2192\n    16\n. As a result rook pays 1 vun and queen pays 2 vuns.\n\n",
        "cf_contest_id": 1333,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n",
                "-1"
            ],
            [
                "4\r\n",
                "1 2 16 14 \r\n3 4 5 13 \r\n6 7 8 12 \r\n9 10 11 15 \r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n",
                "-1"
            ],
            [
                "3\r\n",
                "1 9 7 \r\n2 3 6 \r\n4 5 8 \r\n"
            ],
            [
                "5\r\n",
                "1 2 3 25 23 \r\n4 5 6 7 22 \r\n8 9 10 11 21 \r\n12 13 14 15 20 \r\n16 17 18 19 24 \r\n"
            ],
            [
                "6\r\n",
                "1 2 3 4 36 34 \r\n5 6 7 8 9 33 \r\n10 11 12 13 14 32 \r\n15 16 17 18 19 31 \r\n20 21 22 23 24 30 \r\n25 26 27 28 29 35 \r\n"
            ],
            [
                "7\r\n",
                "1 2 3 4 5 49 47 \r\n6 7 8 9 10 11 46 \r\n12 13 14 15 16 17 45 \r\n18 19 20 21 22 23 44 \r\n24 25 26 27 28 29 43 \r\n30 31 32 33 34 35 42 \r\n36 37 38 39 40 41 48 \r\n"
            ],
            [
                "8\r\n",
                "1 2 3 4 5 6 64 62 \r\n7 8 9 10 11 12 13 61 \r\n14 15 16 17 18 19 20 60 \r\n21 22 23 24 25 26 27 59 \r\n28 29 30 31 32 33 34 58 \r\n35 36 37 38 39 40 41 57 \r\n42 43 44 45 46 47 48 56 \r\n49 50 51 52 53 54 55 63 \r\n"
            ],
            [
                "9\r\n",
                "1 2 3 4 5 6 7 81 79 \r\n8 9 10 11 12 13 14 15 78 \r\n16 17 18 19 20 21 22 23 77 \r\n24 25 26 27 28 29 30 31 76 \r\n32 33 34 35 36 37 38 39 75 \r\n40 41 42 43 44 45 46 47 74 \r\n48 49 50 51 52 53 54 55 73 \r\n56 57 58 59 60 61 62 63 72 \r\n64 65 66 67 68 69 70 71 80 \r\n"
            ],
            [
                "10\r\n",
                "1 2 3 4 5 6 7 8 100 98 \r\n9 10 11 12 13 14 15 16 17 97 \r\n18 19 20 21 22 23 24 25 26 96 \r\n27 28 29 30 31 32 33 34 35 95 \r\n36 37 38 39 40 41 42 43 44 94 \r\n45 46 47 48 49 50 51 52 53 93 \r\n54 55 56 57 58 59 60 61 62 92 \r\n63 64 65 66 67 68 69 70 71 91 \r\n72 73 74 75 76 77 78 79 80 90 \r\n81 82 83 84 85 86 87 88 89 99 \r\n"
            ],
            [
                "11\r\n",
                "1 2 3 4 5 6 7 8 9 121 119 \r\n10 11 12 13 14 15 16 17 18 19 118 \r\n20 21 22 23 24 25 26 27 28 29 117 \r\n30 31 32 33 34 35 36 37 38 39 116 \r\n40 41 42 43 44 45 46 47 48 49 115 \r\n50 51 52 53 54 55 56 57 58 59 114 \r\n60 61 62 63 64 65 66 67 68 69 113 \r\n70 71 72 73 74 75 76 77 78 79 112 \r\n80 81 82 83 84 85 86 87 88 89 111 \r\n90 91 92 93 94 95 96 97 98 99 110 \r\n100 101 102 103 104 105 106 107 108 109 120 \r\n"
            ],
            [
                "12\r\n",
                "1 2 3 4 5 6 7 8 9 10 144 142 \r\n11 12 13 14 15 16 17 18 19 20 21 141 \r\n22 23 24 25 26 27 28 29 30 31 32 140 \r\n33 34 35 36 37 38 39 40 41 42 43 139 \r\n44 45 46 47 48 49 50 51 52 53 54 138 \r\n55 56 57 58 59 60 61 62 63 64 65 137 \r\n66 67 68 69 70 71 72 73 74 75 76 136 \r\n77 78 79 80 81 82 83 84 85 86 87 135 \r\n88 89 90 91 92 93 94 95 96 97 98 134 \r\n99 100 101 102 103 104 105 106 107 108 109 133 \r\n110 111 112 113 114 115 116 117 118 119 120 132 \r\n121 122 123 124 125 126 127 128 129 130 131 143 \r\n"
            ]
        ]
    }
]