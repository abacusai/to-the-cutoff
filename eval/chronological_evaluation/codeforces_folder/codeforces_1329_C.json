[
    {
        "name": "Drazil Likes Heap",
        "description": "Drazil likes heap very much. So he created a problem with heap: There is a max\nheap with a height \n    h\n implemented on the array. The details of this heap\nare the following: This heap contains exactly \n    2^h - 1\n distinct positive\nnon-zero integers. All integers are distinct. These numbers are stored in the\narray \n    a\n indexed from \n    1\n to \n    2^h-1\n. For any \n    1 < i < 2^h\n,\n\n    a[i] < a[\n    \n    \u230a\n    i/2\n    \n    \u230b]\n. Now we\nwant to reduce the height of this heap such that the height becomes \n    g\n\nwith exactly \n    2^g-1\n numbers in heap. To reduce the height, we should\nperform the following action \n    2^h-2^g\n times: Choose an index \n    i\n,\nwhich contains an element and call the following function \n    f\n in index\n\n    i\n: Note that we suppose that if \n    a[i]=0\n, then index \n    i\n don't\ncontain an element. After all operations, the remaining \n    2^g-1\n element\nmust be located in indices from \n    1\n to \n    2^g-1\n. Now Drazil wonders\nwhat's the minimum possible sum of the remaining \n    2^g-1\n elements. Please\nfind this sum and find a sequence of the function calls to achieve this value.\nInput The first line of the input contains an integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 70\n     000\n): the number of test cases. Each test case contain two\nlines. The first line contains two integers \n    h\n and \n    g\n (\n    1 \n    \u2264 g\n    < h \n    \u2264 20\n). The second line contains \n    n = 2^h-1\n distinct positive\nintegers \n    a[1], a[2], \n    \u2026, a[n]\n (\n    1 \n    \u2264 a[i] < 2^20\n). For\nall \n    i\n from \n    2\n to \n    2^h - 1\n, \n    a[i] < a[\n    \n    \u230a\n    i/2\n    \n    \u230b]\n. The total sum of \n    n\n is\nless than \n    2^20\n. Output For each test case, print two lines. The first\nline should contain one integer denoting the minimum sum after reducing the\nheight of heap to \n    g\n. The second line should contain \n    2^h - 2^g\n\nintegers \n    v_1, v_2, \n    \u2026, v_2^h-2^g\n. In \n    i\n-th operation\n\n    f(v_i)\n should be called. Example Input 2 3 2 7 6 3 5 4 2 1 3 2 7 6 5 4 3\n2 1 Output 10 3 2 3 1 8 2 1 3 1\n\n",
        "cf_contest_id": 1329,
        "cf_index": "C",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n3 2\r\n7 6 3 5 4 2 1\r\n3 2\r\n7 6 5 4 3 2 1\r\n",
                "10\r\n6 3 2 1 \r\n8\r\n6 3 2 1 \r\n"
            ]
        ],
        "private_cases": []
    }
]