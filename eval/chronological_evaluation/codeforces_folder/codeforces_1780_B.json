[
    {
        "name": "GCD Partition",
        "description": "While at Kira's house, Josuke saw a piece of paper on the table with a task\nwritten on it. The task sounded as follows. There is an array \n    a\n of\nlength \n    n\n. On this array, do the following: select an integer \n    k >\n    1\n; split the array into \n    k\n subsegments \n    ^\n    \u2020\n; calculate the\nsum in each of \n    k\n subsegments and write these sums to another array\n\n    b\n (where the sum of the subsegment \n    (l, r)\n is \n    \u2211_j =\n    l^ra_j\n); the final score of such a split will be \n    (b_1, b_2,\n    \n    \u2026, b_k)^\n. The task is to find such a partition that the\nscore is maximum possible. Josuke is interested in this task but is not strong\nin computer science. Help him to find the maximum possible score.\n\n    ^\n    \u2020\n A division of an array into \n    k\n subsegments is \n    k\n\npairs of numbers \n    (l_1, r_1), (l_2, r_2), \n    \u2026, (l_k, r_k)\n such that\n\n    l_i \n    \u2264 r_i\n and for every \n    1 \n    \u2264 j \n    \u2264 k - 1\n \n    l_j + 1 =\n    r_j + 1\n, also \n    l_1 = 1\n and \n    r_k = n\n. These pairs represent the\nsubsegments. \n    ^\n \n    (b_1, b_2, \n    \u2026, b_k)\n stands\nfor the greatest common divisor (GCD) of the array \n    b\n. Input The first\nline contains a single number \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the\nnumber of test cases. For each test case, the first line contains one integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the length of the array\n\n    a\n. The second line contains \n    n\n integers \n    a_1, a_2, a_3, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the array \n    a\n itself. It is\nguaranteed that the sum of \n    n\n over all test cases does not exceed \n    2\n    \n    \u00b7 10^5\n. Output For each test case print a single integer \u2014 the\nmaximum score for the optimal partition. Example Input 6 4 2 2 1 3 2 1 2 3 1 4\n5 6 1 2 1 1 1 3 10 12 30 37 88 12 78 89 17 2 12 6 7 7 7 7 7 7 Output 4 1 5 3 1\n21 Note In the first test case, you can choose \n    k = 2\n and split the array\ninto subsegments \n    (1, 2)\n and \n    (3, 4)\n. Then the score of such a\npartition will be equal to \n    (a_1 + a_2, a_3 + a_4) = \n    (2 + 2, 1 +\n    3) = \n    (4, 4) = 4\n. In the fourth test case, you can choose \n    k = 3\n\nand split the array into subsegments \n    (1, 2), (3, 5), (6, 6)\n. The split\nscore is \n    (1 + 2, 1 + 1 + 1, 3) = 3\n.\n\n",
        "cf_contest_id": 1780,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "greedy",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n4\r\n2 2 1 3\r\n2\r\n1 2\r\n3\r\n1 4 5\r\n6\r\n1 2 1 1 1 3\r\n10\r\n12 30 37 88 12 78 89 17 2 12\r\n6\r\n7 7 7 7 7 7\r\n",
                "4\r\n1\r\n5\r\n3\r\n1\r\n21\r\n"
            ]
        ],
        "private_cases": []
    }
]