[
    {
        "name": "New Year and Ascent Sequence",
        "description": "A sequence \n    a = [a_1, a_2, \n    \u2026, a_l]\n of length \n    l\n has an ascent\nif there exists a pair of indices \n    (i, j)\n such that \n    1 \n    \u2264 i < j\n    \n    \u2264 l\n and \n    a_i < a_j\n. For example, the sequence \n    [0, 2, 0, 2,\n    0]\n has an ascent because of the pair \n    (1, 4)\n, but the sequence \n    [4,\n    3, 3, 3, 1]\n doesn't have an ascent. Let's call a concatenation of sequences\n\n    p\n and \n    q\n the sequence that is obtained by writing down sequences\n\n    p\n and \n    q\n one right after another without changing the order. For\nexample, the concatenation of the \n    [0, 2, 0, 2, 0]\n and \n    [4, 3, 3, 3,\n    1]\n is the sequence \n    [0, 2, 0, 2, 0, 4, 3, 3, 3, 1]\n. The concatenation\nof sequences \n    p\n and \n    q\n is denoted as \n    p+q\n. Gyeonggeun thinks\nthat sequences with ascents bring luck. Therefore, he wants to make many such\nsequences for the new year. Gyeonggeun has \n    n\n sequences \n    s_1, s_2,\n    \n    \u2026, s_n\n which may have different lengths. Gyeonggeun will consider\nall \n    n^2\n pairs of sequences \n    s_x\n and \n    s_y\n (\n    1 \n    \u2264 x, y\n    \n    \u2264 n\n), and will check if its concatenation \n    s_x + s_y\n has an\nascent. Note that he may select the same sequence twice, and the order of\nselection matters. Please count the number of pairs (\n    x, y\n) of sequences\n\n    s_1, s_2, \n    \u2026, s_n\n whose concatenation \n    s_x + s_y\n contains an\nascent. Input The first line contains the number \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    100\n     000\n) denoting the number of sequences. The next \n    n\n lines\ncontain the number \n    l_i\n (\n    1 \n    \u2264 l_i\n) denoting the length of\n\n    s_i\n, followed by \n    l_i\n integers \n    s_i, 1, s_i, 2, \n    \u2026,\n    s_i, l_i\n (\n    0 \n    \u2264 s_i, j\n    \u2264 10^6\n) denoting the sequence\n\n    s_i\n. It is guaranteed that the sum of all \n    l_i\n does not exceed\n\n    100\n     000\n. Output Print a single integer, the number of pairs of\nsequences whose concatenation has an ascent. Examples Input 5 1 1 1 1 1 2 1 4\n1 3 Output 9 Input 3 4 2 0 2 0 6 9 9 8 8 7 7 1 6 Output 7 Input 10 3 62 24 39\n1 17 1 99 1 60 1 64 1 30 2 79 29 2 20 73 2 85 37 1 100 Output 72 Note For the\nfirst example, the following \n    9\n arrays have an ascent: \n    [1, 2], [1, 2],\n    [1, 3], [1, 3], [1, 4], [1, 4], [2, 3], [2, 4], [3, 4]\n. Arrays with the\nsame contents are counted as their occurences.\n\n",
        "cf_contest_id": 1284,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "combinatorics",
            "data structures",
            "dp",
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "5\r\n1 1\r\n1 1\r\n1 2\r\n1 4\r\n1 3\r\n",
                "9\r\n"
            ],
            [
                "3\r\n4 2 0 2 0\r\n6 9 9 8 8 7 7\r\n1 6\r\n",
                "7\r\n"
            ],
            [
                "10\r\n3 62 24 39\r\n1 17\r\n1 99\r\n1 60\r\n1 64\r\n1 30\r\n2 79 29\r\n2 20 73\r\n2 85 37\r\n1 100\r\n",
                "72\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n3 1 2 3\r\n",
                "1\r\n"
            ],
            [
                "5\r\n5 1 2 3 4 5\r\n4 1 2 3 4\r\n3 3 2 1\r\n2 2 1\r\n1 1\r\n",
                "22\r\n"
            ],
            [
                "3\r\n3 10 11 9\r\n3 7 8 6\r\n3 4 5 3\r\n",
                "9\r\n"
            ]
        ]
    }
]