[
    {
        "name": "Bus Routes",
        "description": "There is a country consisting of \n    n\n cities and \n    n - 1\n bidirectional\nroads connecting them such that we can travel between any two cities using\nthese roads. In other words, these cities and roads form a tree. There are\n\n    m\n bus routes connecting the cities together. A bus route between city\n\n    x\n and city \n    y\n allows you to travel between any two cities in the\nsimple path between \n    x\n and \n    y\n with this route. Determine if for\nevery pair of cities \n    u\n and \n    v\n, you can travel from \n    u\n to\n\n    v\n using at most two bus routes. Input Each test contains multiple test\ncases. The first line contains the number of test cases \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^4\n). The description of the test cases follows. The first line of\neach test case contains two integers \n    n\n and \n    m\n (\n    2 \n    \u2264 n \n    \u2264 5\n    \n    \u00b7 10^5, 0 \n    \u2264 m \n    \u2264 5 \n    \u00b7 10^5\n) \u2014 the number of cities and\nthe number of bus routes. Then \n    n - 1\n lines follow. Each line contains\ntwo integers \n    u\n and \n    v\n denoting a road connecting city \n    u\n and\ncity \n    v\n (\n    1 \n    \u2264 u, v \n    \u2264 n, u \n    \u2260 v\n). It is guaranteed that\nthese cities and roads form a tree. Then \n    m\n lines follow. Each line\ncontains two integers \n    x\n and \n    y\n denoting a bus route between city\n\n    x\n and city \n    y\n (\n    1 \n    \u2264 x, y \n    \u2264 n\n). It is guaranteed that\nthe sum of \n    n\n over all test cases does not exceed \n    5 \n    \u00b7 10^5\n\nand the sum of \n    m\n over all test cases does not exceed \n    5 \n    \u00b7\n    10^5\n. Output For each test case, output \"YES\" if you can travel between any\npair of cities using at most two bus routes. Otherwise, output \"NO\". In the\nnext line, output two cities \n    x\n and \n    y\n (\n    1 \n    \u2264 x, y \n    \u2264 n\n)\nsuch that it is impossible to reach city \n    y\n from city \n    x\n using at\nmost two bus routes. You can output the answer in any case (upper or lower).\nFor example, the strings \"yEs\", \"yes\", \"Yes\", and \"YES\" will be recognized as\npositive responses. Example Input 4 5 2 1 2 2 3 3 4 2 5 1 4 5 2 5 1 1 2 2 3 3\n4 2 5 1 5 2 0 1 2 6 3 1 2 2 3 3 4 4 5 5 6 1 3 2 5 4 6 Output YES NO 1 3 NO 1 2\nNO 1 6 Note Here are the graphs of test case \n    1\n, \n    2\n, and \n    4\n:\nSample 1 Sample 2 Sample 4\n\n",
        "cf_contest_id": 1827,
        "cf_index": "E",
        "cf_rating": 3400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "dfs and similar",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 2.5,
        "memory_limit_bytes": 1024.0,
        "public_cases": [
            [
                "4\r\n5 2\r\n1 2\r\n2 3\r\n3 4\r\n2 5\r\n1 4\r\n5 2\r\n5 1\r\n1 2\r\n2 3\r\n3 4\r\n2 5\r\n1 5\r\n2 0\r\n1 2\r\n6 3\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 6\r\n1 3\r\n2 5\r\n4 6\r\n",
                "YES\r\nNO\r\n1 4\r\nNO\r\n1 2\r\nNO\r\n1 6\r\n"
            ]
        ],
        "private_cases": []
    }
]