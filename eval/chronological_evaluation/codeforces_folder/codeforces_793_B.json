[
    {
        "name": "Igor and his way to work",
        "description": "Woken up by the alarm clock Igor the financial analyst hurried up to the work.\nHe ate his breakfast and sat in his car. Sadly, when he opened his GPS\nnavigator, he found that some of the roads in Bankopolis, the city where he\nlives, are closed due to road works. Moreover, Igor has some problems with the\nsteering wheel, so he can make no more than two turns on his way to his office\nin bank. Bankopolis looks like a grid of n rows and m columns. Igor should\nfind a way from his home to the bank that has no more than two turns and\ndoesn't contain cells with road works, or determine that it is impossible and\nhe should work from home. A turn is a change in movement direction. Igor's car\ncan only move to the left, to the right, upwards and downwards. Initially Igor\ncan choose any direction. Igor is still sleepy, so you should help him. Input\nThe first line contains two integers n and m (1 \u2264 n, m \u2264 1000) \u2014 the number of\nrows and the number of columns in the grid. Each of the next n lines contains\nm characters denoting the corresponding row of the grid. The following\ncharacters can occur: \".\" \u2014 an empty cell; \"*\" \u2014 a cell with road works; \"S\" \u2014\nthe cell where Igor's home is located; \"T\" \u2014 the cell where Igor's office is\nlocated. It is guaranteed that \"S\" and \"T\" appear exactly once each. Output In\nthe only line print \"YES\" if there is a path between Igor's home and Igor's\noffice with no more than two turns, and \"NO\" otherwise. Examples Input 5 5\n..S.. ****. T.... ****. ..... Output YES Input 5 5 S.... ****. ..... .****\n..T.. Output NO Note The first sample is shown on the following picture: In\nthe second sample it is impossible to reach Igor's office using less that 4\nturns, thus there exists no path using no more than 2 turns. The path using\nexactly 4 turns is shown on this picture:\n\n",
        "cf_contest_id": 793,
        "cf_index": "B",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs",
            "implementation",
            "shortest paths"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 5\r\n..S..\r\n****.\r\nT....\r\n****.\r\n.....\r\n",
                "YES\r\n"
            ],
            [
                "5 5\r\nS....\r\n****.\r\n.....\r\n.****\r\n..T..\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 2\r\nST\r\n",
                "YES\r\n"
            ],
            [
                "3 1\r\nS\r\n*\r\nT\r\n",
                "NO\r\n"
            ],
            [
                "3 3\r\nT.*\r\n*.*\r\n*S*\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n**T\r\n*S*\r\n***\r\n",
                "NO\r\n"
            ],
            [
                "2 2\r\nST\r\n*.\r\n",
                "YES\r\n"
            ],
            [
                "2 2\r\nS.\r\n.T\r\n",
                "YES\r\n"
            ],
            [
                "2 2\r\nTS\r\n.*\r\n",
                "YES\r\n"
            ],
            [
                "2 2\r\n.T\r\nS*\r\n",
                "YES\r\n"
            ]
        ]
    }
]