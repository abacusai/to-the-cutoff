[
    {
        "name": "Fox And Polygon",
        "description": "Fox Ciel just designed a puzzle game called \"Polygon\"! It is played using\ntriangulations of a regular n-edge polygon. The goal is to transform one\ntriangulation to another by some tricky rules. Triangulation of an n-edge\npoylgon is a set of n - 3 diagonals satisfying the condition that no two\ndiagonals share a common internal point. For example, the initial state of the\ngame may look like (a) in above figure. And your goal may look like (c). In\neach step you can choose a diagonal inside the polygon (but not the one of\nedges of the polygon) and flip this diagonal. Suppose you are going to flip a\ndiagonal a \u2013 b. There always exist two triangles sharing a \u2013 b as a side,\nlet's denote them as a \u2013 b \u2013 c and a \u2013 b \u2013 d. As a result of this operation,\nthe diagonal a \u2013 b is replaced by a diagonal c \u2013 d. It can be easily proven\nthat after flip operation resulting set of diagonals is still a triangulation\nof the polygon. So in order to solve above case, you may first flip diagonal 6\n\u2013 3, it will be replaced by diagonal 2 \u2013 4. Then you flip diagonal 6 \u2013 4 and\nget figure (c) as result. Ciel just proved that for any starting and\ndestination triangulations this game has a solution. She wants you to solve it\nin no more than 20 000 steps for any puzzle satisfying n \u2264 1000. Input The\nfirst line contain an integer n (4 \u2264 n \u2264 1000), number of edges of the regular\npolygon. Then follows two groups of (n - 3) lines describing the original\ntriangulation and goal triangulation. Description of each triangulation\nconsists of (n - 3) lines. Each line contains 2 integers ai and bi (1 \u2264 ai, bi\n\u2264 n), describing a diagonal ai \u2013 bi. It is guaranteed that both original and\ngoal triangulations are correct (i. e. no two diagonals share a common\ninternal point in both of these triangulations). Output First, output an\ninteger k (0 \u2264 k \u2264 20, 000): number of steps. Then output k lines, each\ncontaining 2 integers ai and bi: the endpoints of a diagonal you are going to\nflip at step i. You may output ai and bi in any order. If there are several\npossible solutions, output any of them. Examples Input 4 1 3 2 4 Output 1 1 3\nInput 6 2 6 3 6 4 6 6 2 5 2 4 2 Output 2 6 3 6 4 Input 8 7 1 2 7 7 3 6 3 4 6 6\n1 6 2 6 3 6 4 6 8 Output 3 7 3 7 2 7 1 Note Sample test 2 is discussed above\nand shown on the picture.\n\n",
        "cf_contest_id": 512,
        "cf_index": "E",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "divide and conquer"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 3\r\n2 4\r\n",
                "1\r\n1 3\r\n"
            ],
            [
                "6\r\n2 6\r\n3 6\r\n4 6\r\n6 2\r\n5 2\r\n4 2\r\n",
                "6\r\n2 6\r\n3 6\r\n4 6\r\n1 3\r\n1 4\r\n1 5\r\n"
            ],
            [
                "8\r\n7 1\r\n2 7\r\n7 3\r\n6 3\r\n4 6\r\n6 1\r\n6 2\r\n6 3\r\n6 4\r\n6 8\r\n",
                "8\r\n2 7\r\n3 7\r\n3 6\r\n4 6\r\n1 7\r\n1 5\r\n1 4\r\n1 3\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n5 2\r\n2 4\r\n5 2\r\n5 3\r\n",
                "4\r\n2 5\r\n2 4\r\n1 4\r\n1 3\r\n"
            ],
            [
                "5\r\n5 2\r\n2 4\r\n4 1\r\n3 1\r\n",
                "2\r\n2 5\r\n2 4\r\n"
            ],
            [
                "10\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n1 7\r\n1 8\r\n1 9\r\n5 1\r\n5 2\r\n5 3\r\n5 7\r\n5 8\r\n5 9\r\n5 10\r\n",
                "6\r\n1 6\r\n1 7\r\n1 8\r\n1 9\r\n1 4\r\n1 3\r\n"
            ],
            [
                "20\r\n15 17\r\n15 18\r\n11 15\r\n11 18\r\n13 15\r\n13 11\r\n6 11\r\n6 18\r\n8 11\r\n8 6\r\n9 11\r\n5 18\r\n4 18\r\n2 4\r\n2 18\r\n1 18\r\n20 18\r\n11 18\r\n11 19\r\n16 18\r\n16 11\r\n14 16\r\n14 11\r\n13 11\r\n6 11\r\n6 19\r\n9 11\r\n9 6\r\n7 9\r\n3 6\r\n3 19\r\n4 6\r\n1 3\r\n1 19\r\n",
                "31\r\n2 18\r\n2 4\r\n4 18\r\n5 18\r\n6 18\r\n6 11\r\n6 8\r\n8 11\r\n9 11\r\n11 18\r\n11 15\r\n11 13\r\n13 15\r\n15 18\r\n15 17\r\n18 20\r\n1 17\r\n1 15\r\n1 12\r\n1 13\r\n1 14\r\n1 16\r\n1 18\r\n1 10\r\n1 8\r\n1 7\r\n1 9\r\n1 11\r\n1 5\r\n1 4\r\n1 6\r\n"
            ],
            [
                "21\r\n21 3\r\n21 4\r\n1 3\r\n15 21\r\n15 4\r\n18 21\r\n18 15\r\n19 21\r\n16 18\r\n10 15\r\n10 4\r\n13 15\r\n13 10\r\n11 13\r\n8 10\r\n8 4\r\n6 8\r\n6 4\r\n13 16\r\n13 17\r\n14 16\r\n9 13\r\n9 17\r\n11 13\r\n11 9\r\n6 9\r\n6 17\r\n7 9\r\n20 6\r\n20 17\r\n2 6\r\n2 20\r\n3 6\r\n4 6\r\n21 2\r\n18 20\r\n",
                "35\r\n3 21\r\n4 21\r\n4 15\r\n4 10\r\n4 8\r\n4 6\r\n6 8\r\n8 10\r\n10 15\r\n10 13\r\n11 13\r\n13 15\r\n15 21\r\n15 18\r\n16 18\r\n18 21\r\n19 21\r\n1 19\r\n1 18\r\n1 15\r\n1 14\r\n1 16\r\n1 12\r\n1 10\r\n1 11\r\n1 13\r\n1 8\r\n1 7\r\n1 9\r\n1 17\r\n1 5\r\n1 4\r\n1 3\r\n1 6\r\n1 20\r\n"
            ],
            [
                "22\r\n9 12\r\n9 13\r\n10 12\r\n3 9\r\n3 13\r\n6 9\r\n6 3\r\n7 9\r\n4 6\r\n1 3\r\n1 13\r\n21 1\r\n21 13\r\n18 21\r\n18 13\r\n19 21\r\n16 18\r\n16 13\r\n14 16\r\n14 5\r\n14 6\r\n22 5\r\n22 14\r\n3 5\r\n3 22\r\n1 3\r\n18 22\r\n18 14\r\n19 22\r\n20 22\r\n16 18\r\n16 14\r\n11 14\r\n11 6\r\n12 14\r\n9 11\r\n9 6\r\n7 9\r\n",
                "34\r\n3 13\r\n3 9\r\n3 6\r\n4 6\r\n6 9\r\n7 9\r\n9 13\r\n9 12\r\n10 12\r\n13 21\r\n13 18\r\n13 16\r\n14 16\r\n16 18\r\n18 21\r\n19 21\r\n1 21\r\n1 20\r\n1 19\r\n1 17\r\n1 15\r\n1 16\r\n1 18\r\n1 13\r\n1 12\r\n1 10\r\n1 8\r\n1 7\r\n1 9\r\n1 11\r\n1 6\r\n1 14\r\n1 4\r\n1 5\r\n"
            ],
            [
                "28\r\n24 27\r\n24 28\r\n25 27\r\n21 24\r\n21 28\r\n22 24\r\n17 21\r\n17 28\r\n19 21\r\n19 17\r\n11 17\r\n11 28\r\n14 17\r\n14 11\r\n15 17\r\n12 14\r\n9 11\r\n9 28\r\n6 9\r\n6 28\r\n7 9\r\n3 6\r\n3 28\r\n4 6\r\n1 3\r\n11 28\r\n11 1\r\n14 28\r\n14 11\r\n24 28\r\n24 14\r\n26 28\r\n26 24\r\n16 24\r\n16 14\r\n19 24\r\n19 16\r\n20 24\r\n22 24\r\n22 20\r\n17 19\r\n12 14\r\n4 11\r\n4 1\r\n9 11\r\n9 4\r\n7 9\r\n7 4\r\n5 7\r\n2 4\r\n",
                "47\r\n3 28\r\n3 6\r\n4 6\r\n6 28\r\n6 9\r\n7 9\r\n9 28\r\n9 11\r\n11 28\r\n11 17\r\n11 14\r\n12 14\r\n14 17\r\n15 17\r\n17 28\r\n17 21\r\n17 19\r\n19 21\r\n21 28\r\n21 24\r\n22 24\r\n24 28\r\n24 27\r\n25 27\r\n1 27\r\n1 25\r\n1 26\r\n1 23\r\n1 21\r\n1 22\r\n1 20\r\n1 18\r\n1 17\r\n1 19\r\n1 15\r\n1 16\r\n1 24\r\n1 13\r\n1 12\r\n1 14\r\n1 10\r\n1 8\r\n1 6\r\n1 5\r\n1 7\r\n1 9\r\n1 3\r\n"
            ],
            [
                "29\r\n1 22\r\n1 23\r\n14 22\r\n14 1\r\n19 22\r\n19 14\r\n20 22\r\n16 19\r\n16 14\r\n17 19\r\n8 14\r\n8 1\r\n11 14\r\n11 8\r\n12 14\r\n9 11\r\n5 8\r\n5 1\r\n6 8\r\n2 5\r\n3 5\r\n27 1\r\n27 23\r\n28 1\r\n25 27\r\n25 23\r\n5 17\r\n5 18\r\n8 17\r\n8 5\r\n13 17\r\n13 8\r\n14 17\r\n15 17\r\n11 13\r\n11 8\r\n9 11\r\n6 8\r\n26 5\r\n26 18\r\n1 5\r\n1 26\r\n2 5\r\n3 5\r\n28 1\r\n28 26\r\n20 26\r\n20 18\r\n23 26\r\n23 20\r\n24 26\r\n21 23\r\n",
                "42\r\n2 5\r\n3 5\r\n5 8\r\n6 8\r\n8 14\r\n8 11\r\n9 11\r\n11 14\r\n12 14\r\n14 22\r\n14 19\r\n14 16\r\n16 19\r\n17 19\r\n19 22\r\n20 22\r\n23 27\r\n23 25\r\n25 27\r\n1 27\r\n1 25\r\n1 24\r\n1 22\r\n1 21\r\n1 23\r\n1 19\r\n1 20\r\n1 16\r\n1 15\r\n1 14\r\n1 12\r\n1 10\r\n1 9\r\n1 11\r\n1 13\r\n1 7\r\n1 6\r\n1 8\r\n1 17\r\n1 18\r\n1 4\r\n1 3\r\n"
            ],
            [
                "37\r\n28 11\r\n28 12\r\n1 11\r\n1 28\r\n4 11\r\n4 1\r\n8 11\r\n8 4\r\n9 11\r\n5 8\r\n6 8\r\n2 4\r\n32 1\r\n32 28\r\n35 1\r\n35 32\r\n36 1\r\n33 35\r\n30 32\r\n30 28\r\n24 28\r\n24 12\r\n25 28\r\n26 28\r\n17 24\r\n17 12\r\n21 24\r\n21 17\r\n22 24\r\n18 21\r\n19 21\r\n14 17\r\n14 12\r\n15 17\r\n14 20\r\n14 21\r\n18 20\r\n18 14\r\n15 18\r\n16 18\r\n5 14\r\n5 21\r\n9 14\r\n9 5\r\n11 14\r\n11 9\r\n12 14\r\n7 9\r\n7 5\r\n34 5\r\n34 21\r\n1 5\r\n1 34\r\n3 5\r\n3 1\r\n36 1\r\n36 34\r\n29 34\r\n29 21\r\n31 34\r\n31 29\r\n32 34\r\n26 29\r\n26 21\r\n27 29\r\n24 26\r\n24 21\r\n22 24\r\n",
                "58\r\n2 4\r\n4 11\r\n4 8\r\n5 8\r\n6 8\r\n8 11\r\n9 11\r\n11 28\r\n12 28\r\n12 24\r\n12 17\r\n12 14\r\n14 17\r\n15 17\r\n17 24\r\n17 21\r\n18 21\r\n19 21\r\n21 24\r\n22 24\r\n24 28\r\n25 28\r\n26 28\r\n28 32\r\n28 30\r\n30 32\r\n32 35\r\n33 35\r\n1 35\r\n1 33\r\n1 32\r\n1 30\r\n1 31\r\n1 28\r\n1 27\r\n1 25\r\n1 23\r\n1 22\r\n1 24\r\n1 26\r\n1 29\r\n1 19\r\n1 17\r\n1 16\r\n1 15\r\n1 18\r\n1 20\r\n1 13\r\n1 12\r\n1 10\r\n1 11\r\n1 8\r\n1 6\r\n1 7\r\n1 9\r\n1 14\r\n1 21\r\n1 4\r\n"
            ],
            [
                "7\r\n2 6\r\n2 7\r\n3 6\r\n4 6\r\n7 5\r\n1 5\r\n2 5\r\n3 5\r\n",
                "7\r\n2 7\r\n2 6\r\n3 6\r\n4 6\r\n1 6\r\n1 4\r\n1 3\r\n"
            ],
            [
                "8\r\n2 7\r\n2 8\r\n4 7\r\n4 2\r\n5 7\r\n5 2\r\n5 3\r\n7 2\r\n7 5\r\n8 2\r\n",
                "10\r\n2 8\r\n2 7\r\n2 4\r\n4 7\r\n5 7\r\n1 6\r\n1 4\r\n1 3\r\n1 5\r\n1 7\r\n"
            ]
        ]
    }
]