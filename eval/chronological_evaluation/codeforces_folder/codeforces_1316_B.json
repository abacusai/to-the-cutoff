[
    {
        "name": "String Modification",
        "description": "Vasya has a string \n    s\n of length \n    n\n. He decides to make the following\nmodification to the string: Pick an integer \n    k\n, (\n    1 \n    \u2264 k \n    \u2264\n    n\n). For \n    i\n from \n    1\n to \n    n-k+1\n, reverse the substring\n\n    s[i:i+k-1]\n of \n    s\n. For example, if string \n    s\n is qwer and \n    k =\n    2\n, below is the series of transformations the string goes through: qwer\n(original string) wqer (after reversing the first substring of length \n    2\n)\nweqr (after reversing the second substring of length \n    2\n) werq (after\nreversing the last substring of length \n    2\n) Hence, the resulting string\nafter modifying \n    s\n with \n    k = 2\n is werq. Vasya wants to choose a\n\n    k\n such that the string obtained after the above-mentioned modification\nis lexicographically smallest possible among all choices of \n    k\n. Among all\nsuch \n    k\n, he wants to choose the smallest one. Since he is busy attending\nFelicity 2020, he asks for your help. A string \n    a\n is lexicographically\nsmaller than a string \n    b\n if and only if one of the following holds:\n\n    a\n is a prefix of \n    b\n, but \n    a \n     b\n; in the first position\nwhere \n    a\n and \n    b\n differ, the string \n    a\n has a letter that appears\nearlier in the alphabet than the corresponding letter in \n    b\n. Input Each\ntest contains multiple test cases. The first line contains the number of test\ncases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 5000\n). The description of the test cases\nfollows. The first line of each test case contains a single integer \n    n\n\n(\n    1 \n    \u2264 n \n    \u2264 5000\n) \u2014 the length of the string \n    s\n. The second\nline of each test case contains the string \n    s\n of \n    n\n lowercase latin\nletters. It is guaranteed that the sum of \n    n\n over all test cases does not\nexceed \n    5000\n. Output For each testcase output two lines: In the first\nline output the lexicographically smallest string \n    s'\n achievable after\nthe above-mentioned modification. In the second line output the appropriate\nvalue of \n    k\n (\n    1 \n    \u2264 k \n    \u2264 n\n) that you chose for performing the\nmodification. If there are multiple values of \n    k\n that give the\nlexicographically smallest string, output the smallest value of \n    k\n among\nthem. Example Input 6 4 abab 6 qwerty 5 aaaaa 6 alaska 9 lfpbavjsm 1 p Output\nabab 1 ertyqw 3 aaaaa 1 aksala 6 avjsmbpfl 5 p 1 Note In the first testcase of\nthe first sample, the string modification results for the sample abab are as\nfollows : for \n    k = 1\n : abab for \n    k = 2\n : baba for \n    k = 3\n : abab\nfor \n    k = 4\n : babaThe lexicographically smallest string achievable through\nmodification is abab for \n    k = 1\n and \n    3\n. Smallest value of \n    k\n\nneeded to achieve is hence \n    1\n.\n\n",
        "cf_contest_id": 1316,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "sortings",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n4\r\nabab\r\n6\r\nqwerty\r\n5\r\naaaaa\r\n6\r\nalaska\r\n9\r\nlfpbavjsm\r\n1\r\np\r\n",
                "abab\r\n1\r\nertyqw\r\n3\r\naaaaa\r\n1\r\naksala\r\n6\r\navjsmbpfl\r\n5\r\np\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n440\r\ntcjbjlbtjfmvzdqutuwzvmgqrqtrvxwrdacxcowbmbwvwssihttgdsjntiawqavwspzmybakxmwpbcgaffpyhvjrulqsorkcuozvtdbkkmasxtemrrbhqnmkpgewwphdvcyhxmatrfjkesacujihmtyqtqcjfqhpsjhgzimegvkjylapylqprykvkjavlmipewlzqsfefjzecadsqmfutgnegngmwchqttcyklocfcyuhghvtygdbsxaoxkvtgdcnsqddzzakhgrribwxkuakxkjneasowsadprpcusmbevudorsmfdjynazzyflfystiksncdgnyvelnwhcpbpdcsavmzvcwmelcruhjqktlzymndlcfshsmyfqfqejlenesnzxjqnzmwvjkwhoorczwqsglslsgrtoqcekryyghxfmzixbyjgecnfk\r\n",
                "acujihmtyqtqcjfqhpsjhgzimegvkjylapylqprykvkjavlmipewlzqsfefjzecadsqmfutgnegngmwchqttcyklocfcyuhghvtygdbsxaoxkvtgdcnsqddzzakhgrribwxkuakxkjneasowsadprpcusmbevudorsmfdjynazzyflfystiksncdgnyvelnwhcpbpdcsavmzvcwmelcruhjqktlzymndlcfshsmyfqfqejlenesnzxjqnzmwvjkwhoorczwqsglslsgrtoqcekryyghxfmzixbyjgecnfktcjbjlbtjfmvzdqutuwzvmgqrqtrvxwrdacxcowbmbwvwssihttgdsjntiawqavwspzmybakxmwpbcgaffpyhvjrulqsorkcuozvtdbkkmasxtemrrbhqnmkpgewwphdvcyhxmatrfjkes\r\n143\r\n"
            ],
            [
                "1\r\n9\r\njyiqoebcn\r\n",
                "bcneoqiyj\r\n7\r\n"
            ],
            [
                "1\r\n9\r\nahqgpxbiw\r\n",
                "ahqgpxbiw\r\n1\r\n"
            ],
            [
                "1\r\n7\r\nydyamrb\r\n",
                "amrbydy\r\n4\r\n"
            ],
            [
                "1\r\n1\r\nk\r\n",
                "k\r\n1\r\n"
            ],
            [
                "1\r\n9\r\nbejrrlbci\r\n",
                "bcilrrjeb\r\n7\r\n"
            ],
            [
                "1\r\n3\r\nraq\r\n",
                "aqr\r\n2\r\n"
            ],
            [
                "1\r\n369\r\nsssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\r\n",
                "sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\r\n1\r\n"
            ],
            [
                "1\r\n3\r\nbab\r\n",
                "abb\r\n2\r\n"
            ],
            [
                "1\r\n8\r\naaaaaada\r\n",
                "aaaaaada\r\n1\r\n"
            ],
            [
                "1\r\n6\r\nertywq\r\n",
                "ertywq\r\n1\r\n"
            ]
        ]
    }
]