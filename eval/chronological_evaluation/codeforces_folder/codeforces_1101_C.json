[
    {
        "name": "Division and Union",
        "description": "There are \n    n\n segments \n    [l_i, r_i]\n for \n    1 \n    \u2264 i \n    \u2264 n\n. You\nshould divide all segments into two non-empty groups in such way that there is\nno pair of segments from different groups which have at least one common\npoint, or say that it's impossible to do it. Each segment should belong to\nexactly one group. To optimize testing process you will be given multitest.\nInput The first line contains one integer \n    T\n (\n    1 \n    \u2264 T \n    \u2264\n    50000\n) \u2014 the number of queries. Each query contains description of the set\nof segments. Queries are independent. First line of each query contains single\ninteger \n    n\n (\n    2 \n    \u2264 n \n    \u2264 10^5\n) \u2014 number of segments. It is\nguaranteed that \n    \u2211n\n over all queries does not exceed \n    10^5\n.\nThe next \n    n\n lines contains two integers \n    l_i\n, \n    r_i\n per line\n(\n    1 \n    \u2264 l_i \n    \u2264 r_i \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the \n    i\n-th segment.\nOutput For each query print \n    n\n integers \n    t_1, t_2, \n    \u2026, t_n\n\n(\n    t_i \n    \u2208\n    \n    1, 2\n) \u2014 for each segment (in the same order as in\nthe input) \n    t_i\n equals \n    1\n if the \n    i\n-th segment will belongs to\nthe first group and \n    2\n otherwise. If there are multiple answers, you can\nprint any of them. If there is no answer, print \n    -1\n. Example Input 3 2 5\n5 2 3 3 3 5 2 3 2 3 3 3 3 4 4 5 5 Output 2 1 -1 1 1 2 Note In the first query\nthe first and the second segments should be in different groups, but exact\nnumbers don't matter. In the second query the third segment intersects with\nthe first and the second segments, so they should be in the same group, but\nthen the other group becomes empty, so answer is \n    -1\n. In the third query\nwe can distribute segments in any way that makes groups non-empty, so any\nanswer of \n    6\n possible is correct.\n\n",
        "cf_contest_id": 1101,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2\r\n5 5\r\n2 3\r\n3\r\n3 5\r\n2 3\r\n2 3\r\n3\r\n3 3\r\n4 4\r\n5 5\r\n",
                "2 1\r\n-1\r\n1 2 1\r\n"
            ]
        ],
        "private_cases": []
    }
]