[
    {
        "name": "BinCoin",
        "description": "There are \n    n\n employees in the BinCoin company numbered from \n    1\n to\n\n    n\n. The subordination structure in this company is a rooted tree. In\nother words: There is one CEO in the company \u2014 the main boss. Each other\nemployee has exactly one direct superior. There are no cycles in the\nsubordination structure. Moreover, due to the inexplicable love of the CEO of\nBinCoin for all the binary stuff, the subordination structure in the company\nis a binary rooted tree. That means each employee is directly superior to\nexactly zero or two other employees. In the CEO's opinion, working in this\ncompany is almost as dangerous as in mines. So, employees should sign the\nwaiver of claims sometimes. This process happens in the following way.\nInitially, CEO takes the journal, then recursively the following procedure is\nperformed: If an employee that holds the journal does not have any\nsubordinates, they sign the waiver in the journal and give it back to their\nsuperior. The procedure stops if that was the CEO, who has no superior.\nOtherwise they choose one of two of their direct subordinates uniformly at\nrandom and give the journal to one of them; when they get the journal back,\nthey sign it; and then they give it to another direct subordinate; when they\nget it back again, they give it back to their superior. The procedure stops if\nthat was the CEO, who has no superior. All random choices are independent. One\nday, the CEO realized that they could not remember the subordination tree.\nFortunately, they have the journal with \n    k\n records. Each record is a\nsequence of employees in the order they've signed in a journal. Help CEO\nrestore the subordination tree. Input The first line contains two integers\n\n    n\n and \n    k\n \u2014 the number of employees and the number of records in the\njournal (\n    1 \n    \u2264 n \n    \u2264 999\n; \n    50 \n    \u2264 k \n    \u2264 100\n). Each of the\nnext \n    k\n lines contains a permutation of integers from \n    1\n to \n    n\n\n\u2014 the order of employees in the corresponding record. It is guaranteed that\nthe input was obtained as described in the statement with a real random\nchoice. Output Output \n    n\n integers \n    p_i\n. If \n    i\n is a CEO, then\n\n    p_i\n should be \n    -1\n. Otherwise, \n    p_i\n should be the index of the\ndirect superior of \n    i\n-th employee. Your output should correspond to a\nbinary rooted tree. If there are several trees satisfying the input, you can\noutput any one of them. Examples Input 3 50 1 2 3 1 2 3 3 2 1 1 2 3 3 2 1 1 2\n3 1 2 3 1 2 3 1 2 3 3 2 1 1 2 3 3 2 1 1 2 3 3 2 1 1 2 3 3 2 1 1 2 3 1 2 3 3 2\n1 1 2 3 3 2 1 1 2 3 3 2 1 1 2 3 1 2 3 3 2 1 1 2 3 1 2 3 1 2 3 1 2 3 3 2 1 1 2\n3 3 2 1 3 2 1 1 2 3 3 2 1 1 2 3 3 2 1 3 2 1 1 2 3 1 2 3 3 2 1 1 2 3 3 2 1 3 2\n1 3 2 1 1 2 3 1 2 3 3 2 1 3 2 1 Output 2 -1 2 Input 5 60 2 4 3 5 1 1 5 2 4 3 1\n5 2 4 3 1 5 2 4 3 1 5 3 4 2 1 5 3 4 2 1 5 3 4 2 1 5 3 4 2 1 5 3 4 2 3 4 2 5 1\n2 4 3 5 1 1 5 2 4 3 3 4 2 5 1 2 4 3 5 1 2 4 3 5 1 1 5 2 4 3 3 4 2 5 1 3 4 2 5\n1 1 5 2 4 3 2 4 3 5 1 1 5 2 4 3 1 5 3 4 2 3 4 2 5 1 1 5 3 4 2 1 5 2 4 3 1 5 3\n4 2 1 5 2 4 3 2 4 3 5 1 2 4 3 5 1 2 4 3 5 1 2 4 3 5 1 2 4 3 5 1 1 5 2 4 3 1 5\n3 4 2 1 5 2 4 3 3 4 2 5 1 1 5 3 4 2 3 4 2 5 1 3 4 2 5 1 1 5 2 4 3 2 4 3 5 1 1\n5 2 4 3 1 5 3 4 2 2 4 3 5 1 2 4 3 5 1 1 5 2 4 3 1 5 2 4 3 1 5 2 4 3 1 5 2 4 3\n1 5 2 4 3 3 4 2 5 1 3 4 2 5 1 3 4 2 5 1 1 5 2 4 3 1 5 3 4 2 1 5 3 4 2 2 4 3 5\n1 3 4 2 5 1 1 5 2 4 3 3 4 2 5 1 Output 5 4 4 5 -1 Note In order to fit on the\npage, several consecutive lines in the examples were joined into one. The real\ninputs follow the input description.\n\n",
        "cf_contest_id": 1773,
        "cf_index": "B",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "divide and conquer",
            "hashing",
            "implementation",
            "probabilities",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [],
        "private_cases": []
    }
]