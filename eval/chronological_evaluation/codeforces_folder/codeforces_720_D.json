[
    {
        "name": "Slalom",
        "description": "Little girl Masha likes winter sports, today she's planning to take part in\nslalom skiing. The track is represented as a grid composed of n \u00d7 m squares.\nThere are rectangular obstacles at the track, composed of grid squares. Masha\nmust get from the square (1, 1) to the square (n, m). She can move from a\nsquare to adjacent square: either to the right, or upwards. If the square is\noccupied by an obstacle, it is not allowed to move to that square. One can see\nthat each obstacle can actually be passed in two ways: either it is to the\nright of Masha's path, or to the left. Masha likes to try all ways to do\nthings, so she would like to know how many ways are there to pass the track.\nTwo ways are considered different if there is an obstacle such that it is to\nthe right of the path in one way, and to the left of the path in the other\nway. Help Masha to find the number of ways to pass the track. The number of\nways can be quite big, so Masha would like to know it modulo 10^9 + 7. The\npictures below show different ways to pass the track in sample tests. Input\nThe first line of input data contains three positive integers: n, m and k (3 \u2264\nn, m \u2264 10^6, 0 \u2264 k \u2264 10^5) \u2014 the size of the track and the number of\nobstacles. The following k lines contain four positive integers each: x1, y1,\nx2, y2 (1 \u2264 x1 \u2264 x2 \u2264 n, 1 \u2264 y1 \u2264 y2 \u2264 m) \u2014 coordinates of bottom left, and\ntop right squares of the obstacle. It is guaranteed that there are no\nobstacles at squares (1, 1) and (n, m), and no obstacles overlap (but some of\nthem may touch). Output Output one integer \u2014 the number of ways to pass the\ntrack modulo 10^9 + 7. Examples Input 3 3 0 Output 1 Input 4 5 1 2 2 3 4\nOutput 2 Input 5 5 3 2 2 2 3 4 2 5 2 4 4 4 4 Output 3\n\n",
        "cf_contest_id": 720,
        "cf_index": "D",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3 0\r\n",
                "1"
            ],
            [
                "4 5 1\r\n2 2 3 4\r\n",
                "2"
            ],
            [
                "5 5 3\r\n2 2 2 3\r\n4 2 5 2\r\n4 4 4 4\r\n",
                "3"
            ]
        ],
        "private_cases": [
            [
                "17 23 10\r\n3 7 3 7\r\n11 16 11 16\r\n16 22 16 22\r\n15 21 15 21\r\n7 13 7 13\r\n10 14 10 14\r\n13 19 13 19\r\n12 18 12 18\r\n5 8 5 8\r\n6 12 6 12\r\n",
                "36"
            ],
            [
                "15 10 5\r\n11 4 11 4\r\n5 8 5 8\r\n14 2 14 2\r\n8 5 8 5\r\n12 3 12 3\r\n",
                "5"
            ],
            [
                "7 7 4\r\n2 2 2 2\r\n3 3 3 3\r\n4 4 4 4\r\n5 5 5 5\r\n",
                "2"
            ],
            [
                "10 7 2\r\n1 2 1 2\r\n2 1 2 1\r\n",
                "0"
            ],
            [
                "5 8 5\r\n3 1 3 8\r\n1 2 1 8\r\n2 1 2 8\r\n4 1 4 8\r\n5 1 5 7\r\n",
                "0"
            ],
            [
                "11 5 11\r\n7 1 7 5\r\n10 1 10 5\r\n5 1 5 5\r\n6 1 6 5\r\n3 1 3 5\r\n8 1 8 5\r\n1 2 1 5\r\n2 1 2 5\r\n9 1 9 5\r\n11 1 11 4\r\n4 1 4 5\r\n",
                "0"
            ],
            [
                "5 11 4\r\n2 3 5 3\r\n2 9 5 9\r\n3 4 5 4\r\n2 2 5 2\r\n",
                "1"
            ],
            [
                "7 8 3\r\n3 3 3 8\r\n2 5 2 8\r\n6 2 6 8\r\n",
                "1"
            ],
            [
                "10 10 1\r\n1 3 10 6\r\n",
                "0"
            ],
            [
                "10 10 10\r\n8 4 8 4\r\n6 5 6 5\r\n7 4 7 4\r\n3 9 3 9\r\n2 6 2 6\r\n10 7 10 7\r\n1 4 1 4\r\n4 8 4 8\r\n6 1 6 1\r\n6 7 6 7\r\n",
                "3"
            ],
            [
                "10 10 10\r\n6 4 6 4\r\n10 1 10 1\r\n5 2 6 2\r\n9 1 9 1\r\n8 6 8 7\r\n6 9 6 9\r\n7 10 7 10\r\n5 5 5 5\r\n5 6 6 7\r\n9 2 9 2\r\n",
                "5"
            ],
            [
                "9 8 6\r\n2 6 2 6\r\n1 6 1 6\r\n4 3 4 3\r\n1 4 1 4\r\n3 6 3 6\r\n5 7 5 7\r\n",
                "3"
            ],
            [
                "6 8 5\r\n5 7 5 7\r\n3 1 3 1\r\n2 8 2 8\r\n5 8 5 8\r\n4 1 4 3\r\n",
                "1"
            ],
            [
                "9 10 5\r\n5 9 7 9\r\n5 2 7 2\r\n4 3 6 3\r\n4 5 6 5\r\n3 7 7 7\r\n",
                "5"
            ],
            [
                "7 10 3\r\n3 4 3 7\r\n2 2 2 8\r\n5 2 5 6\r\n",
                "3"
            ],
            [
                "6 8 15\r\n2 1 3 1\r\n6 4 6 4\r\n2 3 2 5\r\n2 6 3 6\r\n6 5 6 5\r\n4 1 5 1\r\n6 1 6 1\r\n6 3 6 3\r\n4 6 6 6\r\n5 2 6 2\r\n2 7 5 8\r\n1 2 4 2\r\n3 3 5 5\r\n1 3 1 8\r\n6 7 6 7\r\n",
                "0"
            ],
            [
                "74 83 20\r\n7 20 7 20\r\n28 52 28 52\r\n5 51 5 51\r\n68 60 68 60\r\n22 47 22 47\r\n25 6 25 6\r\n53 55 53 55\r\n31 81 31 81\r\n69 83 69 83\r\n6 1 6 1\r\n29 18 29 18\r\n56 74 56 74\r\n16 49 16 49\r\n45 2 45 2\r\n9 37 9 37\r\n34 23 34 23\r\n9 20 9 20\r\n5 57 5 57\r\n52 83 52 83\r\n33 21 33 21\r\n",
                "309"
            ],
            [
                "78 57 34\r\n68 53 68 53\r\n78 21 78 21\r\n51 57 51 57\r\n26 27 27 27\r\n3 31 3 31\r\n25 21 25 21\r\n69 11 69 11\r\n3 14 4 14\r\n70 14 71 14\r\n34 24 34 24\r\n22 48 24 49\r\n27 34 27 36\r\n49 22 49 22\r\n25 53 25 53\r\n11 57 11 57\r\n7 56 7 56\r\n5 50 5 50\r\n11 20 13 20\r\n63 28 63 28\r\n46 57 46 57\r\n75 15 77 15\r\n36 52 38 54\r\n11 12 11 12\r\n66 52 66 52\r\n62 21 64 21\r\n1 35 3 36\r\n75 22 77 22\r\n8 47 8 47\r\n51 3 53 4\r\n30 56 30 56\r\n13 27 13 27\r\n22 52 23 52\r\n19 42 20 44\r\n20 30 20 30\r\n",
                "473"
            ],
            [
                "89562 79591 0\r\n",
                "1"
            ],
            [
                "1000000 1000000 5\r\n32257 57 386305 143\r\n561958 443525 906291 778390\r\n464742 860535 683545 978352\r\n18867 66423 515969 712053\r\n8972 5576 103062 12211\r\n",
                "8"
            ],
            [
                "100 100 9\r\n2 2 5 5\r\n6 6 9 9\r\n9 10 9 15\r\n10 9 15 9\r\n9 16 15 16\r\n16 9 16 15\r\n16 16 20 20\r\n20 21 20 25\r\n21 20 25 20\r\n",
                "2"
            ],
            [
                "23 18 7\r\n2 13 2 14\r\n4 9 5 9\r\n13 5 13 6\r\n10 11 11 11\r\n7 2 8 3\r\n15 6 16 7\r\n18 5 19 5\r\n",
                "13"
            ]
        ]
    }
]