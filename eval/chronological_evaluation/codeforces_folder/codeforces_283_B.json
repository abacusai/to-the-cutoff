[
    {
        "name": "Cow Program",
        "description": "Farmer John has just given the cows a program to play with! The program\ncontains two integer variables, x and y, and performs the following operations\non a sequence a1, a2, ..., an of positive integers: Initially, x = 1 and y =\n0. If, after any step, x \u2264 0 or x > n, the program immediately terminates. The\nprogram increases both x and y by a value equal to ax simultaneously. The\nprogram now increases y by ax while decreasing x by ax. The program executes\nsteps 2 and 3 (first step 2, then step 3) repeatedly until it terminates (it\nmay never terminate). So, the sequence of executed steps may start with: step\n2, step 3, step 2, step 3, step 2 and so on. The cows are not very good at\narithmetic though, and they want to see how the program works. Please help\nthem! You are given the sequence a2, a3, ..., an. Suppose for each i (1 \u2264 i \u2264\nn - 1) we run the program on the sequence i, a2, a3, ..., an. For each such\nrun output the final value of y if the program terminates or -1 if it does not\nterminate. Input The first line contains a single integer, n (2 \u2264 n \u2264 2\u00b710^5).\nThe next line contains n - 1 space separated integers, a2, a3, ..., an (1 \u2264 ai\n\u2264 10^9). Output Output n - 1 lines. On the i-th line, print the requested\nvalue when the program is run on the sequence i, a2, a3, ...an. Please do not\nuse the \npreferred to use the cin, cout streams or the \n4 2 4 1 Output 3 6 8 Input 3 1 2 Output -1 -1 Note In the first sample For i =\n1, x becomes and y becomes 1 + 2 = 3. For i = 2, x becomes and y becomes 2 + 4\n= 6. For i = 3, x becomes and y becomes 3 + 1 + 4 = 8.\n\n",
        "cf_contest_id": 283,
        "cf_index": "B",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2 4 1\r\n",
                "3\r\n6\r\n8\r\n"
            ],
            [
                "3\r\n1 2\r\n",
                "-1\r\n-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n2 2 1 3\r\n",
                "3\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "2\r\n1\r\n",
                "-1\r\n"
            ],
            [
                "8\r\n7 6 2 6 2 6 6\r\n",
                "8\r\n8\r\n12\r\n10\r\n-1\r\n-1\r\n20\r\n"
            ],
            [
                "8\r\n4 5 3 2 3 3 3\r\n",
                "5\r\n7\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "3\r\n1 1\r\n",
                "-1\r\n-1\r\n"
            ],
            [
                "5\r\n3 2 4 2\r\n",
                "4\r\n-1\r\n7\r\n-1\r\n"
            ],
            [
                "10\r\n6 7 5 3 1 5 2 4 6\r\n",
                "7\r\n9\r\n8\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "8\r\n6 311942309 3 1 3 2 2\r\n",
                "7\r\n311942311\r\n-1\r\n311942323\r\n311942317\r\n311942321\r\n12\r\n"
            ],
            [
                "8\r\n2 3 1 2 2 3 3\r\n",
                "3\r\n5\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "6\r\n2 1 2 2 3\r\n",
                "3\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "23\r\n20 1 3 3 13 11 9 7 5 3 1 7 2 4 6 8 10 12 14 16 12 5\r\n",
                "21\r\n-1\r\n-1\r\n-1\r\n18\r\n17\r\n16\r\n-1\r\n26\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n48\r\n-1\r\n37\r\n"
            ],
            [
                "71\r\n28 11 39 275858941 64 69 66 18 468038892 49 47 45 43 41 39 37 35 33 31 29 27 25 23 21 19 17 15 13 11 9 7 5 3 1 25 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 701366631 51 25 11 11 49 33 67 43 57\r\n",
                "29\r\n13\r\n42\r\n275858945\r\n69\r\n75\r\n73\r\n26\r\n468038901\r\n59\r\n58\r\n57\r\n56\r\n55\r\n54\r\n53\r\n52\r\n51\r\n50\r\n49\r\n48\r\n47\r\n-1\r\n-1\r\n113\r\n468038935\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n701366692\r\n-1\r\n-1\r\n111\r\n114\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "23\r\n11 6 21 9 13 11 9 7 5 3 1 8 2 4 6 8 10 12 14 935874687 21 1\r\n",
                "12\r\n8\r\n24\r\n13\r\n18\r\n17\r\n16\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n935874707\r\n-1\r\n44\r\n"
            ],
            [
                "71\r\n2 50 62 41 50 16 65 6 49 47 45 43 41 39 37 35 33 31 29 27 25 23 21 19 17 15 13 11 9 7 5 3 1 26 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 14 6 67 54 54 620768469 637608010 27 54 18 49\r\n",
                "3\r\n52\r\n65\r\n45\r\n55\r\n22\r\n72\r\n801\r\n58\r\n57\r\n56\r\n55\r\n54\r\n53\r\n52\r\n51\r\n50\r\n49\r\n48\r\n47\r\n46\r\n45\r\n831\r\n1067\r\n87\r\n1147\r\n891\r\n671\r\n487\r\n339\r\n227\r\n151\r\n111\r\n105\r\n109\r\n117\r\n129\r\n145\r\n165\r\n189\r\n217\r\n249\r\n285\r\n325\r\n369\r\n417\r\n469\r\n525\r\n585\r\n649\r\n717\r\n789\r\n865\r\n945\r\n1029\r\n1117\r\n1209\r\n1305\r\n1405\r\n543\r\n109\r\n129\r\n1413\r\n1317\r\n620768534\r\n637608076\r\n843\r\n973\r\n121\r\n515\r\n"
            ]
        ]
    }
]