[
    {
        "name": "Median Smoothing",
        "description": "A schoolboy named Vasya loves reading books on programming and mathematics. He\nhas recently read an encyclopedia article that described the method of median\nsmoothing (or median filter) and its many applications in science and\nengineering. Vasya liked the idea of the method very much, and he decided to\ntry it in practice. Applying the simplest variant of median smoothing to the\nsequence of numbers a1, a2, ..., an will result a new sequence b1, b2, ..., bn\nobtained by the following algorithm: b1 = a1, bn = an, that is, the first and\nthe last number of the new sequence match the corresponding numbers of the\noriginal sequence. For i = 2, ..., n - 1 value bi is equal to the median of\nthree values ai - 1, ai and ai + 1. The median of a set of three numbers is\nthe number that goes on the second place, when these three numbers are written\nin the non-decreasing order. For example, the median of the set 5, 1, 2 is\nnumber 2, and the median of set 1, 0, 1 is equal to 1. In order to make the\ntask easier, Vasya decided to apply the method to sequences consisting of\nzeros and ones only. Having made the procedure once, Vasya looked at the\nresulting sequence and thought: what if I apply the algorithm to it once\nagain, and then apply it to the next result, and so on? Vasya tried a couple\nof examples and found out that after some number of median smoothing algorithm\napplications the sequence can stop changing. We say that the sequence is\nstable, if it does not change when the median smoothing is applied to it. Now\nVasya wonders, whether the sequence always eventually becomes stable. He asks\nyou to write a program that, given a sequence of zeros and ones, will\ndetermine whether it ever becomes stable. Moreover, if it ever becomes stable,\nthen you should determine what will it look like and how many times one needs\nto apply the median smoothing algorithm to initial sequence in order to obtain\na stable one. Input The first input line of the input contains a single\ninteger n (3 \u2264 n \u2264 500 000) \u2014 the length of the initial sequence. The next\nline contains n integers a1, a2, ..., an (ai = 0 or ai = 1), giving the\ninitial sequence itself. Output If the sequence will never become stable,\nprint a single number - 1. Otherwise, first print a single integer \u2014 the\nminimum number of times one needs to apply the median smoothing algorithm to\nthe initial sequence before it becomes is stable. In the second line print n\nnumbers separated by a space \u2014 the resulting sequence itself. Examples Input 4\n0 0 1 1 Output 0 0 0 1 1 Input 5 0 1 0 1 0 Output 2 0 0 0 0 0 Note In the\nsecond sample the stabilization occurs in two steps: , and the sequence 00000\nis obviously stable.\n\n",
        "cf_contest_id": 590,
        "cf_index": "A",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n0 0 1 1\r\n",
                "0\r\n0 0 1 1 "
            ],
            [
                "5\r\n0 1 0 1 0\r\n",
                "2\r\n0 0 0 0 0 "
            ]
        ],
        "private_cases": [
            [
                "3\r\n1 0 0\r\n",
                "0\r\n1 0 0 "
            ],
            [
                "4\r\n1 0 0 1\r\n",
                "0\r\n1 0 0 1 "
            ],
            [
                "7\r\n1 0 1 1 1 0 1\r\n",
                "1\r\n1 1 1 1 1 1 1 "
            ],
            [
                "14\r\n0 1 0 0 0 1 1 0 1 0 1 0 1 0\r\n",
                "3\r\n0 0 0 0 0 1 1 1 1 1 0 0 0 0 "
            ],
            [
                "3\r\n1 0 1\r\n",
                "1\r\n1 1 1 "
            ],
            [
                "3\r\n0 0 1\r\n",
                "0\r\n0 0 1 "
            ],
            [
                "3\r\n1 1 0\r\n",
                "0\r\n1 1 0 "
            ],
            [
                "3\r\n1 1 1\r\n",
                "0\r\n1 1 1 "
            ],
            [
                "4\r\n1 1 0 1\r\n",
                "1\r\n1 1 1 1 "
            ],
            [
                "4\r\n1 0 1 1\r\n",
                "1\r\n1 1 1 1 "
            ],
            [
                "10\r\n0 1 0 1 0 0 1 0 1 0\r\n",
                "2\r\n0 0 0 0 0 0 0 0 0 0 "
            ],
            [
                "4\r\n0 1 1 0\r\n",
                "0\r\n0 1 1 0 "
            ],
            [
                "168\r\n0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 0\r\n",
                "36\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
            ],
            [
                "3\r\n0 1 1\r\n",
                "0\r\n0 1 1 "
            ],
            [
                "3\r\n0 0 0\r\n",
                "0\r\n0 0 0 "
            ],
            [
                "4\r\n0 1 0 1\r\n",
                "1\r\n0 0 1 1 "
            ],
            [
                "3\r\n0 1 0\r\n",
                "1\r\n0 0 0 "
            ]
        ]
    }
]