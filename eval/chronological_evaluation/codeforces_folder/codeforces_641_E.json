[
    {
        "name": "Little Artem and Time Machine",
        "description": "Little Artem has invented a time machine! He could go anywhere in time, but\nall his thoughts of course are with computer science. He wants to apply this\ntime machine to a well-known data structure: multiset. Artem wants to create a\nbasic multiset of integers. He wants these structure to support operations of\nthree types: Add integer to the multiset. Note that the difference between set\nand multiset is that multiset may store several instances of one integer.\nRemove integer from the multiset. Only one instance of this integer is\nremoved. Artem doesn't want to handle any exceptions, so he assumes that every\ntime remove operation is called, that integer is presented in the multiset.\nCount the number of instances of the given integer that are stored in the\nmultiset. But what about time machine? Artem doesn't simply apply operations\nto the multiset one by one, he now travels to different moments of time and\napply his operation there. Consider the following example. First Artem adds\ninteger 5 to the multiset at the 1-st moment of time. Then Artem adds integer\n3 to the multiset at the moment 5. Then Artem asks how many 5 are there in the\nmultiset at moment 6. The answer is 1. Then Artem returns back in time and\nasks how many integers 3 are there in the set at moment 4. Since 3 was added\nonly at moment 5, the number of integers 3 at moment 4 equals to 0. Then Artem\ngoes back in time again and removes 5 from the multiset at moment 3. Finally\nArtyom asks at moment 7 how many integers 5 are there in the set. The result\nis 0, since we have removed 5 at the moment 3. Note that Artem dislikes\nexceptions so much that he assures that after each change he makes all delete\noperations are applied only to element that is present in the multiset. The\nanswer to the query of the third type is computed at the moment Artem makes\nthe corresponding query and are not affected in any way by future changes he\nmakes. Help Artem implement time travellers multiset. Input The first line of\nthe input contains a single integer n (1 \u2264 n \u2264 100 000) \u2014 the number of\nArtem's queries. Then follow n lines with queries descriptions. Each of them\ncontains three integers ai, ti and xi (1 \u2264 ai \u2264 3, 1 \u2264 ti, xi \u2264 10^9) \u2014 type\nof the query, moment of time Artem travels to in order to execute this query\nand the value of the query itself, respectively. It's guaranteed that all\nmoments of time are distinct and that after each operation is applied all\noperations of the first and second types are consistent. Output For each ask\noperation output the number of instances of integer being queried at the given\nmoment of time. Examples Input 6 1 1 5 3 5 5 1 2 5 3 6 5 2 3 5 3 7 5 Output 1\n2 1 Input 3 1 1 1 2 2 1 3 3 1 Output 0\n\n",
        "cf_contest_id": 641,
        "cf_index": "E",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1 1 5\r\n3 5 5\r\n1 2 5\r\n3 6 5\r\n2 3 5\r\n3 7 5\r\n",
                "1\r\n2\r\n1\r\n"
            ],
            [
                "3\r\n1 1 1\r\n2 2 1\r\n3 3 1\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n1 1 1000000000\r\n1 4 1000000000\r\n2 2 1000000000\r\n1 5 1000000000\r\n1 8 1000000000\r\n2 15 1000000000\r\n3 3 1000000000\r\n3 10 1000000000\r\n3 6 1000000000\r\n3 7 1000000000\r\n",
                "0\r\n3\r\n2\r\n2\r\n"
            ],
            [
                "12\r\n1 9 1\r\n1 8 1\r\n1 7 1\r\n1 6 1\r\n1 1 1\r\n1 2 1\r\n1 3 1\r\n1 4 1\r\n2 5 1\r\n3 12 1\r\n3 14 2\r\n3 15 999999999\r\n",
                "7\r\n0\r\n0\r\n"
            ],
            [
                "20\r\n1 1 1\r\n1 2 2\r\n1 3 3\r\n1 4 4\r\n1 5 5\r\n2 11 5\r\n2 12 4\r\n2 13 3\r\n2 14 2\r\n2 15 1\r\n3 6 1\r\n3 7 2\r\n3 8 3\r\n3 9 4\r\n3 10 5\r\n3 16 1\r\n3 17 2\r\n3 18 3\r\n3 19 4\r\n3 20 5\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ]
        ]
    }
]