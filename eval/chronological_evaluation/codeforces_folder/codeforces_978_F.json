[
    {
        "name": "Mentors",
        "description": "In BerSoft \n    n\n programmers work, the programmer \n    i\n is characterized\nby a skill \n    r_i\n. A programmer \n    a\n can be a mentor of a programmer\n\n    b\n if and only if the skill of the programmer \n    a\n is strictly greater\nthan the skill of the programmer \n    b\n \n    (r_a > r_b)\n and programmers\n\n    a\n and \n    b\n are not in a quarrel. You are given the skills of each\nprogrammers and a list of \n    k\n pairs of the programmers, which are in a\nquarrel (pairs are unordered). For each programmer \n    i\n, find the number of\nprogrammers, for which the programmer \n    i\n can be a mentor. Input The first\nline contains two integers \n    n\n and \n    k\n \n    (2 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n, \n    0 \n    \u2264 k \n    \u2264\n    min(2 \n    \u00b7 10^5, \n    n \n    \u00b7 (n -\n    1)/2))\n \u2014 total number of programmers and number of pairs of programmers\nwhich are in a quarrel. The second line contains a sequence of integers\n\n    r_1, r_2, \n    \u2026, r_n\n \n    (1 \n    \u2264 r_i \n    \u2264 10^9)\n, where \n    r_i\n\nequals to the skill of the \n    i\n-th programmer. Each of the following\n\n    k\n lines contains two distinct integers \n    x\n, \n    y\n \n    (1 \n    \u2264 x, y\n    \n    \u2264 n\n, \n    x \n     y)\n \u2014 pair of programmers in a quarrel. The pairs are\nunordered, it means that if \n    x\n is in a quarrel with \n    y\n then \n    y\n\nis in a quarrel with \n    x\n. Guaranteed, that for each pair \n    (x, y)\n\nthere are no other pairs \n    (x, y)\n and \n    (y, x)\n in the input. Output\nPrint \n    n\n integers, the \n    i\n-th number should be equal to the number of\nprogrammers, for which the \n    i\n-th programmer can be a mentor. Programmers\nare numbered in the same order that their skills are given in the input.\nExamples Input 4 2 10 4 10 15 1 2 4 3 Output 0 0 1 2 Input 10 4 5 4 1 5 4 3 7\n1 2 5 4 6 2 1 10 8 3 5 Output 5 4 0 5 3 3 9 0 2 5 Note In the first example,\nthe first programmer can not be mentor of any other (because only the second\nprogrammer has a skill, lower than first programmer skill, but they are in a\nquarrel). The second programmer can not be mentor of any other programmer,\nbecause his skill is minimal among others. The third programmer can be a\nmentor of the second programmer. The fourth programmer can be a mentor of the\nfirst and of the second programmers. He can not be a mentor of the third\nprogrammer, because they are in a quarrel.\n\n",
        "cf_contest_id": 978,
        "cf_index": "F",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 2\r\n10 4 10 15\r\n1 2\r\n4 3\r\n",
                "0 0 1 2\n"
            ],
            [
                "10 4\r\n5 4 1 5 4 3 7 1 2 5\r\n4 6\r\n2 1\r\n10 8\r\n3 5\r\n",
                "5 4 0 5 3 3 9 0 2 5\n"
            ]
        ],
        "private_cases": [
            [
                "2 0\r\n3 1\r\n",
                "1 0\n"
            ],
            [
                "2 0\r\n1 1\r\n",
                "0 0\n"
            ],
            [
                "10 35\r\n322022227 751269818 629795150 369443545 344607287 250044294 476897672 184054549 986884572 917181121\r\n6 3\r\n7 3\r\n1 9\r\n7 9\r\n10 7\r\n3 4\r\n8 6\r\n7 4\r\n6 10\r\n7 2\r\n3 5\r\n6 9\r\n3 10\r\n8 7\r\n6 5\r\n8 1\r\n8 5\r\n1 7\r\n8 10\r\n8 2\r\n1 5\r\n10 4\r\n6 7\r\n4 6\r\n2 6\r\n5 4\r\n9 10\r\n9 2\r\n4 8\r\n5 9\r\n4 1\r\n3 2\r\n2 1\r\n4 2\r\n9 8\r\n",
                "1 1 2 0 0 0 1 0 2 3\n"
            ]
        ]
    }
]