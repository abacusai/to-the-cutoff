[
    {
        "name": "Cactusophobia",
        "description": "Tree is a connected undirected graph that has no cycles. Edge cactus is a\nconnected undirected graph without loops and parallel edges, such that each\nedge belongs to at most one cycle. Vasya has an edge cactus, each edge of this\ngraph has some color. Vasya would like to remove the minimal number of edges\nin such way that his cactus turned to a tree. Vasya wants to make it in such a\nway that there were edges of as many different colors in the resulting tree,\nas possible. Help him to find how many different colors can the resulting tree\nhave. Input The first line contains two integers: n, m (2 \u2264 n \u2264 10 000) \u2014 the\nnumber of vertices and the number of edges in Vasya's graph, respectively. The\nfollowing m lines contain three integers each: u, v, c (1 \u2264 u, v \u2264 n, u \u2260 v, 1\n\u2264 c \u2264 m) \u2014 the numbers of vertices connected by the corresponding edge, and\nits color. It is guaranteed that the described graph is indeed an edge cactus.\nOutput Output one integer: the maximal number of different colors that the\nresulting tree can have. Examples Input 4 4 1 2 4 2 3 1 3 4 2 4 2 3 Output 3\nInput 7 9 1 2 1 2 3 4 3 1 5 1 4 5 4 5 2 5 1 6 1 6 4 6 7 6 7 1 3 Output 6\n\n",
        "cf_contest_id": 720,
        "cf_index": "B",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "flows"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 4\r\n1 2 4\r\n2 3 1\r\n3 4 2\r\n4 2 3\r\n",
                "3\r\n"
            ],
            [
                "7 9\r\n1 2 1\r\n2 3 4\r\n3 1 5\r\n1 4 5\r\n4 5 2\r\n5 1 6\r\n1 6 4\r\n6 7 6\r\n7 1 3\r\n",
                "6\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 6\r\n4 1 2\r\n4 2 3\r\n5 1 5\r\n1 3 1\r\n1 2 1\r\n5 3 4\r\n",
                "4\r\n"
            ],
            [
                "9 10\r\n8 7 2\r\n8 2 10\r\n8 4 2\r\n6 3 9\r\n9 1 1\r\n7 5 5\r\n9 4 8\r\n3 5 3\r\n1 2 7\r\n6 8 6\r\n",
                "8\r\n"
            ],
            [
                "20 28\r\n20 4 23\r\n12 13 16\r\n20 14 19\r\n8 20 24\r\n15 20 8\r\n12 20 5\r\n20 16 23\r\n10 19 28\r\n20 2 16\r\n15 1 20\r\n13 20 4\r\n20 9 11\r\n16 6 4\r\n6 20 26\r\n5 9 3\r\n20 5 20\r\n20 18 10\r\n20 1 28\r\n20 11 8\r\n19 20 18\r\n8 4 19\r\n20 10 23\r\n2 3 18\r\n3 20 3\r\n18 17 18\r\n11 7 14\r\n7 20 17\r\n20 17 12\r\n",
                "17\r\n"
            ]
        ]
    }
]