[
    {
        "name": "Enduring Exodus",
        "description": "In an attempt to escape the Mischievous Mess Makers' antics, Farmer John has\nabandoned his farm and is traveling to the other side of Bovinia. During the\njourney, he and his k cows have decided to stay at the luxurious Grand Moo-\ndapest Hotel. The hotel consists of n rooms located in a row, some of which\nare occupied. Farmer John wants to book a set of k + 1 currently unoccupied\nrooms for him and his cows. He wants his cows to stay as safe as possible, so\nhe wishes to minimize the maximum distance from his room to the room of his\ncow. The distance between rooms i and j is defined as |j - i|. Help Farmer\nJohn protect his cows by calculating this minimum possible distance. Input The\nfirst line of the input contains two integers n and k (1 \u2264 k < n \u2264 100 000) \u2014\nthe number of rooms in the hotel and the number of cows travelling with Farmer\nJohn. The second line contains a string of length n describing the rooms. The\ni-th character of the string will be '0' if the i-th room is free, and '1' if\nthe i-th room is occupied. It is guaranteed that at least k + 1 characters of\nthis string are '0', so there exists at least one possible choice of k + 1\nrooms for Farmer John and his cows to stay in. Output Print the minimum\npossible distance between Farmer John's room and his farthest cow. Examples\nInput 7 2 0100100 Output 2 Input 5 1 01010 Output 2 Input 3 2 000 Output 1\nNote In the first sample, Farmer John can book room 3 for himself, and rooms 1\nand 4 for his cows. The distance to the farthest cow is 2. Note that it is\nimpossible to make this distance 1, as there is no block of three consecutive\nunoccupied rooms. In the second sample, Farmer John can book room 1 for\nhimself and room 3 for his single cow. The distance between him and his cow is\n2. In the third sample, Farmer John books all three available rooms, taking\nthe middle room for himself so that both cows are next to him. His distance\nfrom the farthest cow is 1.\n\n",
        "cf_contest_id": 645,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 2\r\n0100100\r\n",
                "2\r\n"
            ],
            [
                "5 1\r\n01010\r\n",
                "2\r\n"
            ],
            [
                "3 2\r\n000\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 1\r\n1101111101\r\n",
                "6\r\n"
            ],
            [
                "2 1\r\n00\r\n",
                "1\r\n"
            ],
            [
                "3 1\r\n010\r\n",
                "2\r\n"
            ],
            [
                "8 7\r\n00000000\r\n",
                "4\r\n"
            ],
            [
                "7 6\r\n0000000\r\n",
                "3\r\n"
            ],
            [
                "112 12\r\n0110101000000010101110010111100101011010011110100111111100011101011111000111101101110100111011110001100110110010\r\n",
                "10\r\n"
            ],
            [
                "9 8\r\n000000000\r\n",
                "4\r\n"
            ],
            [
                "9 3\r\n010001000\r\n",
                "2\r\n"
            ],
            [
                "5 3\r\n00000\r\n",
                "2\r\n"
            ],
            [
                "8 7\r\n00000000\r\n",
                "4\r\n"
            ],
            [
                "6 1\r\n000011\r\n",
                "1\r\n"
            ],
            [
                "100 40\r\n0010010100000100011100010100110001101100110000110010000000001010000111100000100100100101010010001100\r\n",
                "30\r\n"
            ],
            [
                "93 79\r\n000000000000000000011000000000000000000000000000000000000000000000010000000000100000100000000\r\n",
                "42\r\n"
            ],
            [
                "31 11\r\n0000001011011100010000000110001\r\n",
                "7\r\n"
            ],
            [
                "47 46\r\n00000000000000000000000000000000000000000000000\r\n",
                "23\r\n"
            ],
            [
                "100 96\r\n0000000000000010000010000000000000000000000000000000000000000000000000000010000000000000000000000000\r\n",
                "50\r\n"
            ],
            [
                "491 89\r\n01111101111111100000111010110001010001110111000010101111101000100010010111011101110110111101101010111000111000011100011010010010111111000011011010100110001000011100111000001011100010001111101111101000111001100110010100101000001110010100100100100101001100010101001000010000111110011000000100000100101000100101000001001101011011100000110101111110101001001000100110010000010110101011000101011001001011001000110000011111001110101011000000110101000000100110001101111000101001001001100001001110101\r\n",
                "73\r\n"
            ],
            [
                "308 17\r\n01000000100000000000000001000001000010000000000000000001001110000001010001000110000000000000100101000000010000001000000000001100000110000000000000000001000000000000000100000001000010001000000001000000000000000100010000000000000000000000000000000000001000000000001001101100000000000010000000000000000000000000\r\n",
                "9\r\n"
            ],
            [
                "8 4\r\n00111000\r\n",
                "5\r\n"
            ],
            [
                "18 2\r\n010111110111011110\r\n",
                "5\r\n"
            ],
            [
                "29 3\r\n01110011111111111111110110110\r\n",
                "17\r\n"
            ]
        ]
    }
]