[
    {
        "name": "Bad Sequence",
        "description": "Petya's friends made him a birthday present \u2014 a bracket sequence. Petya was\nquite disappointed with his gift, because he dreamed of correct bracket\nsequence, yet he told his friends nothing about his dreams and decided to fix\npresent himself. To make everything right, Petya is going to move at most one\nbracket from its original place in the sequence to any other position.\nReversing the bracket (e.g. turning \"(\" into \")\" or vice versa) isn't allowed.\nWe remind that bracket sequence \n    s\n is called correct if: \n    s\n is\nempty; \n    s\n is equal to \"(\n    t\n)\", where \n    t\n is correct bracket\nsequence; \n    s\n is equal to \n    t_1 t_2\n, i.e. concatenation of \n    t_1\n\nand \n    t_2\n, where \n    t_1\n and \n    t_2\n are correct bracket sequences.\nFor example, \"(()())\", \"()\" are correct, while \")(\" and \"())\" are not. Help\nPetya to fix his birthday present and understand whether he can move one\nbracket so that the sequence becomes correct. Input First of line of input\ncontains a single number \n    n\n (\n    1 \n    \u2264 n \n    \u2264 200\n     000\n) \u2014 length\nof the sequence which Petya received for his birthday. Second line of the\ninput contains bracket sequence of length \n    n\n, containing symbols \"(\" and\n\")\". Output Print \"Yes\" if Petya can make his sequence correct moving at most\none bracket. Otherwise print \"No\". Examples Input 2 )( Output Yes Input 3 (()\nOutput No Input 2 () Output Yes Input 10 )))))((((( Output No Note In the\nfirst example, Petya can move first bracket to the end, thus turning the\nsequence into \"()\", which is correct bracket sequence. In the second example,\nthere is no way to move at most one bracket so that the sequence becomes\ncorrect. In the third example, the sequence is already correct and there's no\nneed to move brackets.\n\n",
        "cf_contest_id": 1214,
        "cf_index": "C",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2\r\n)(\r\n",
                "Yes\r\n"
            ],
            [
                "3\r\n(()\r\n",
                "No\r\n"
            ],
            [
                "2\r\n()\r\n",
                "Yes\r\n"
            ],
            [
                "10\r\n)))))(((((\r\n",
                "No\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n)\r\n",
                "No\r\n"
            ],
            [
                "1\r\n(\r\n",
                "No\r\n"
            ],
            [
                "98\r\n()()(((((((())))(((()))))(())(())()()(())())))))((()()()))()(((()))()()())((())(((()(((())))()))))\r\n",
                "No\r\n"
            ],
            [
                "100\r\n(()()((((())()()(()()())())))((((())(((()))()()()((()))(())))((()()(((()())))((()()))()(())()())))))\r\n",
                "Yes\r\n"
            ],
            [
                "99\r\n((()()()()()()()()()((((()))()((((()())()))))())))((()())((((((())()))(((()))())()())))((()))))()()\r\n",
                "No\r\n"
            ],
            [
                "99\r\n(())()(())(()((()))()()((((()))((())())(()()()())((()()((())))(()((()()))()()(((()())))((()))))))()\r\n",
                "No\r\n"
            ],
            [
                "98\r\n(((((((((())())((())()))))))((()))()()()(())()()(())))((())(()))((((((()(()()(())(()()()))))))(())\r\n",
                "No\r\n"
            ],
            [
                "100\r\n((((((((()()))))(())((((((((()()(())())())))))()()()))(((()())()(()())((()(()))(())()(()())())))))))\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n((((()((()())))(((()((((((()(())))())))()()()())(((()()()()()()))())(())()())))()()()(()())()()())))\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n((((((((())(((((()))()()))))))))(()((()()))()()()((((()()))()()((()))))()()())(((((()))))())()()()))\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n((((()()(((((()())))))()()()((())()())()((()()()))))))(())()()()((()))()()()()())()()(((((()))(())))\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n((((((()()()()())(())()))()((()))))(())()((((((()()()()())()())))()(())()((()))())))()(()()(((()))))\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n((((()(())())(()))((((())((()(())(())()(()()()))))()()((()))(()()()())))()(())())(((())()()()()())))\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n(()(()(()()))(()))(())))(((((((()))))()()((()(()))))))(((((()((())()()((())(())()())()()))))(())(())\r\n",
                "No\r\n"
            ],
            [
                "100\r\n()((((()())())(()()()(())()(((())))()((()(((()))(()))())))((((()(()())(()(()))((()())())))))((()))))\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n((()(((((((()()())()(())(())()))()(()((()())))(()())()(())(((())(())))))))))(()((((())))(())())))(()\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n(((()(()))((())(((())()))())((((((())())()())(()())))(((())()()())()()))(()(()(())(()))()(()()))()))\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n(((())())()())(())(((()())(()())))(((())(()))(()(())())(()(())()))())()())((((())())((((()))))()())(\r\n",
                "No\r\n"
            ],
            [
                "100\r\n(((()((()())(()))((())()))(()))(())(())())(((()(()))((((())))())()()())(((())())(((()()))()())()()))\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n(((((())))(())))(((())(()(())))())())(()()))(((())()))())(()((((()))(()))(((()()))(()))((()()))())((\r\n",
                "No\r\n"
            ],
            [
                "100\r\n(((((((()))(())())())(()))(((()())(())(())))(()((()))((()(())()))(()))(((()()()(()))(()))()(()()))))\r\n",
                "Yes\r\n"
            ],
            [
                "100\r\n))))))))))))))))))))))))))))))))))))))))))))))))))((((((((((((((((((((((((((((((((((((((((((((((((((\r\n",
                "No\r\n"
            ],
            [
                "50\r\n((())((()()())()))))())((()())))()(())))(())))))()\r\n",
                "No\r\n"
            ],
            [
                "50\r\n))(()()))())()))))())))())()()(((()((()))(((()(())\r\n",
                "No\r\n"
            ],
            [
                "500\r\nr\n",
                "No\r\n"
            ],
            [
                "500\r\nr\n",
                "No\r\n"
            ],
            [
                "4\r\n((((\r\n",
                "No\r\n"
            ],
            [
                "7\r\n(()))((\r\n",
                "No\r\n"
            ],
            [
                "4\r\n((()\r\n",
                "No\r\n"
            ],
            [
                "4\r\n)))(\r\n",
                "No\r\n"
            ],
            [
                "6\r\n(((())\r\n",
                "No\r\n"
            ],
            [
                "2\r\n((\r\n",
                "No\r\n"
            ],
            [
                "6\r\n())))(\r\n",
                "No\r\n"
            ],
            [
                "8\r\n)()()()(\r\n",
                "Yes\r\n"
            ],
            [
                "6\r\n(())((\r\n",
                "No\r\n"
            ],
            [
                "3\r\n))(\r\n",
                "No\r\n"
            ],
            [
                "3\r\n)((\r\n",
                "No\r\n"
            ],
            [
                "10\r\n()()((((((\r\n",
                "No\r\n"
            ],
            [
                "4\r\n()((\r\n",
                "No\r\n"
            ],
            [
                "4\r\n))((\r\n",
                "No\r\n"
            ],
            [
                "4\r\n)(((\r\n",
                "No\r\n"
            ]
        ]
    }
]