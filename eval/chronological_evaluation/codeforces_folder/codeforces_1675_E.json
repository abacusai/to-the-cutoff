[
    {
        "name": "Replace With the Previous, Minimize",
        "description": "You are given a string \n    s\n of lowercase Latin letters. The following\noperation can be used: select one character (from 'a' to 'z') that occurs at\nleast once in the string. And replace all such characters in the string with\nthe previous one in alphabetical order on the loop. For example, replace all\n'c' with 'b' or replace all 'a' with 'z'. And you are given the integer\n\n    k\n \u2014 the maximum number of operations that can be performed. Find the\nminimum lexicographically possible string that can be obtained by performing\nno more than \n    k\n operations. The string \n    a=a_1a_2 \n    \u2026 a_n\n is\nlexicographically smaller than the string \n    b = b_1b_2 \n    \u2026 b_n\n if\nthere exists an index \n    k\n (\n    1 \n    \u2264 k \n    \u2264 n\n) such that\n\n    a_1=b_1\n, \n    a_2=b_2\n, ..., \n    a_k-1=b_k-1\n, but \n    a_k < b_k\n.\nInput The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264\n    10^4\n) \u2014the number of test cases in the test. This is followed by\ndescriptions of the test cases. The first line of each test case contains two\nintegers \n    n\n and \n    k\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n, \n    1 \n    \u2264\n    k \n    \u2264 10^9\n) \u2014 the size of the string \n    s\n and the maximum number of\noperations that can be performed on the string \n    s\n. The second line of\neach test case contains a string \n    s\n of length \n    n\n consisting of\nlowercase Latin letters. It is guaranteed that the sum \n    n\n over all test\ncases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, output\nthe lexicographically minimal string that can be obtained from the string\n\n    s\n by performing no more than \n    k\n operations. Example Input 4 3 2 cba\n4 5 fgde 7 5 gndcafb 4 19 ekyv Output aaa agaa bnbbabb aapp\n\n",
        "cf_contest_id": 1675,
        "cf_index": "E",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "dsu",
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3 2\r\ncba\r\n4 5\r\nfgde\r\n7 5\r\ngndcafb\r\n4 19\r\nekyv\r\n",
                "aaa\r\nagaa\r\nbnbbabb\r\naapp\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n15 1\r\nwaterwaterwater\r\n",
                "vatervatervater\r\n"
            ]
        ]
    }
]