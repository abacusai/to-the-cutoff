[
    {
        "name": "Game on Axis",
        "description": "There are \n    n\n points \n    1,2,\n    \u2026,n\n, each point \n    i\n has a number\n\n    a_i\n on it. You're playing a game on them. Initially, you are at point\n\n    1\n. When you are at point \n    i\n, take following steps: If \n    1\n    \u2264\n    i\n    \u2264 n\n, go to \n    i+a_i\n, Otherwise, the game ends. Before the game\nbegins, you can choose two integers \n    x\n and \n    y\n satisfying \n    1\n    \u2264\n    x\n    \u2264 n\n, \n    -n \n    \u2264 y \n    \u2264 n\n and replace \n    a_x\n with \n    y\n (set\n\n    a_x := y\n). Find the number of distinct pairs \n    (x,y)\n such that the\ngame that you start after making the change ends in a finite number of steps.\nNotice that you do not have to satisfy \n    a_x\n    \u2260y\n. Input Each test\ncontains multiple test cases. The first line contains an integer \n    t\n\n(\n    1\n    \u2264 t\n    \u2264 10^4)\n \u2014 the number of test cases. The first line of each\ntest case contains one integer \n    n\n (\n    1\n    \u2264 n\n    \u2264 2\n    \u00b7 10^5\n) \u2014\nthe number of points. The second line contains \n    n\n integers\n\n    a_1,a_2,\n    \u2026,a_n\n (\n    -n \n    \u2264 a_i \n    \u2264 n\n) \u2014 the numbers on the\naxis. It's guaranteed that the sum of \n    n\n does not exceed \n    2\n    \u00b7\n    10^5\n. Output For each test case, print a line containing a single integer \u2014\nthe number of distinct pairs \n    (x,y)\n with which the game ends. Example\nInput 9 1 0 2 -1 0 2 1 -1 2 1 1 3 -1 -2 -1 3 1 -2 -1 4 -1 4 -2 1 5 1 1 1 1 -4\n5 1 1 1 1 1 Output 2 8 6 7 20 17 34 30 40 Note In the first test case, the\npairs \n    (x,y)\n with which the game ends are \n    (1,-1)\n and \n    (1,1)\n,\ncorresponding to the routes \n    1\n    \u2192 0\n and \n    1\n    \u2192 2\n.\nNote that \n    (1,2)\n is invalid since when \n    n=1\n, \n    y=2\n violates\n\n    -n\n    \u2264 y\n    \u2264 n\n. \n    (1,0)\n is also invalid since you will go from\n\n    1\n to \n    1\n forever. In the second test case, the pairs are\n\n    (1,-2),(1,-1),(1,2),(2,-2),(2,-1),(2,0),(2,1),(2,2)\n. In the fourth test\ncase, the pairs are \n    (1,-2),(1,-1),(1,1),(1,2),(2,-2),(2,1),(2,2)\n.\n\n",
        "cf_contest_id": 1787,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dfs and similar",
            "dsu",
            "graphs",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9\r\n1\r\n0\r\n2\r\n-1 0\r\n2\r\n1 -1\r\n2\r\n1 1\r\n3\r\n-1 -2 -1\r\n3\r\n1 -2 -1\r\n4\r\n-1 4 -2 1\r\n5\r\n1 1 1 1 -4\r\n5\r\n1 1 1 1 1\r\n",
                "2\r\n8\r\n6\r\n7\r\n20\r\n17\r\n34\r\n30\r\n40\r\n"
            ]
        ],
        "private_cases": []
    }
]