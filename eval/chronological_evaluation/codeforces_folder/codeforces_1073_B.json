[
    {
        "name": "Vasya and Books",
        "description": "Vasya has got \n    n\n books, numbered from \n    1\n to \n    n\n, arranged in a\nstack. The topmost book has number \n    a_1\n, the next one \u2014 \n    a_2\n, and so\non. The book at the bottom of the stack has number \n    a_n\n. All numbers are\ndistinct. Vasya wants to move all the books to his backpack in \n    n\n steps.\nDuring \n    i\n-th step he wants to move the book number \n    b_i\n into his\nbackpack. If the book with number \n    b_i\n is in the stack, he takes this\nbook and all the books above the book \n    b_i\n, and puts them into the\nbackpack; otherwise he does nothing and begins the next step. For example, if\nbooks are arranged in the order \n    [1, 2, 3]\n (book \n    1\n is the topmost),\nand Vasya moves the books in the order \n    [2, 1, 3]\n, then during the first\nstep he will move two books (\n    1\n and \n    2\n), during the second step he\nwill do nothing (since book \n    1\n is already in the backpack), and during\nthe third step \u2014 one book (the book number \n    3\n). Note that \n    b_1, b_2,\n    \n    \u2026, b_n\n are distinct. Help Vasya! Tell him the number of books he will\nput into his backpack during each step. Input The first line contains one\ninteger \n    n\u00a0(1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5)\n \u2014 the number of books in the\nstack. The second line contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\u00a0(1\n    \n    \u2264 a_i \n    \u2264 n)\n denoting the stack of books. The third line contains\n\n    n\n integers \n    b_1, b_2, \n    \u2026, b_n\u00a0(1 \n    \u2264 b_i \n    \u2264 n)\n denoting\nthe steps Vasya is going to perform. All numbers \n    a_1 \n    \u2026 a_n\n are\ndistinct, the same goes for \n    b_1 \n    \u2026 b_n\n. Output Print \n    n\n\nintegers. The \n    i\n-th of them should be equal to the number of books Vasya\nmoves to his backpack during the \n    i\n-th step. Examples Input 3 1 2 3 2 1 3\nOutput 2 0 1 Input 5 3 1 4 2 5 4 5 1 3 2 Output 3 2 0 0 0 Input 6 6 5 4 3 2 1\n6 5 3 4 2 1 Output 1 1 2 0 1 1 Note The first example is described in the\nstatement. In the second example, during the first step Vasya will move the\nbooks \n    [3, 1, 4]\n. After that only books \n    2\n and \n    5\n remain in the\nstack (\n    2\n is above \n    5\n). During the second step Vasya will take the\nbooks \n    2\n and \n    5\n. After that the stack becomes empty, so during next\nsteps Vasya won't move any books.\n\n",
        "cf_contest_id": 1073,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 2 3\r\n2 1 3\r\n",
                "2\r\n0\r\n1\r\n"
            ],
            [
                "5\r\n3 1 4 2 5\r\n4 5 1 3 2\r\n",
                "3\r\n2\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "6\r\n6 5 4 3 2 1\r\n6 5 3 4 2 1\r\n",
                "1\r\n1\r\n2\r\n0\r\n1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "7\r\n7 6 3 1 5 4 2\r\n2 3 1 6 4 7 5\r\n",
                "7\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "10\r\n4 7 10 2 1 8 3 5 9 6\r\n4 2 7 1 8 10 5 3 9 6\r\n",
                "1\r\n3\r\n0\r\n1\r\n1\r\n0\r\n2\r\n0\r\n1\r\n1\r\n"
            ]
        ]
    }
]