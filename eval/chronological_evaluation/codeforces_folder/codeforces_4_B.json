[
    {
        "name": "Before an Exam",
        "description": "Tomorrow Peter has a Biology exam. He does not like this subject much, but d\ndays ago he learnt that he would have to take this exam. Peter's strict\nparents made him prepare for the exam immediately, for this purpose he has to\nstudy not less than minTimei and not more than maxTimei hours per each i-th\nday. Moreover, they warned Peter that a day before the exam they would check\nhow he has followed their instructions. So, today is the day when Peter's\nparents ask him to show the timetable of his preparatory studies. But the boy\nhas counted only the sum of hours sumTime spent him on preparation, and now he\nwants to know if he can show his parents a timetable s\u0441hedule with d numbers,\nwhere each number s\u0441hedulei stands for the time in hours spent by Peter each\ni-th day on biology studies, and satisfying the limitations imposed by his\nparents, and at the same time the sum total of all schedulei should equal to\nsumTime. Input The first input line contains two integer numbers d, sumTime (1\n\u2264 d \u2264 30, 0 \u2264 sumTime \u2264 240) \u2014 the amount of days, during which Peter studied,\nand the total amount of hours, spent on preparation. Each of the following d\nlines contains two integer numbers minTimei, maxTimei (0 \u2264 minTimei \u2264 maxTimei\n\u2264 8), separated by a space \u2014 minimum and maximum amount of hours that Peter\ncould spent in the i-th day. Output In the first line print YES, and in the\nsecond line print d numbers (separated by a space), each of the numbers \u2014\namount of hours, spent by Peter on preparation in the corresponding day, if he\nfollowed his parents' instructions; or print NO in the unique line. If there\nare many solutions, print any of them. Examples Input 1 48 5 7 Output NO Input\n2 5 0 1 3 5 Output YES 1 4\n\n",
        "cf_contest_id": 4,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy"
        ],
        "time_limit_seconds": 0.5,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "1 48\r\n5 7\r\n",
                "NO\r\n"
            ],
            [
                "2 5\r\n0 1\r\n3 5\r\n",
                "YES\r\n1 4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n5 6\r\n",
                "NO\r\n"
            ],
            [
                "1 4\r\n2 4\r\n",
                "YES\r\n4\r\n"
            ],
            [
                "2 5\r\n4 6\r\n0 0\r\n",
                "YES\r\n5 0\r\n"
            ],
            [
                "27 97\r\n2 8\r\n0 5\r\n5 6\r\n3 6\r\n5 5\r\n1 2\r\n3 5\r\n1 8\r\n0 4\r\n3 3\r\n0 2\r\n0 0\r\n4 8\r\n5 6\r\n5 8\r\n0 7\r\n1 4\r\n0 4\r\n1 5\r\n3 7\r\n2 5\r\n5 6\r\n4 7\r\n3 8\r\n0 1\r\n3 4\r\n5 7\r\n",
                "YES\r\n8 5 6 6 5 2 5 8 4 3 2 0 6 5 5 0 1 0 1 3 2 5 4 3 0 3 5\r\n"
            ],
            [
                "30 92\r\n4 5\r\n4 7\r\n2 6\r\n8 8\r\n7 8\r\n4 5\r\n1 5\r\n7 8\r\n1 2\r\n6 8\r\n2 7\r\n2 4\r\n0 0\r\n1 3\r\n4 5\r\n1 1\r\n0 7\r\n2 5\r\n2 5\r\n3 3\r\n1 2\r\n1 7\r\n5 5\r\n5 8\r\n6 7\r\n0 3\r\n2 6\r\n0 7\r\n5 6\r\n2 5\r\n",
                "YES\r\n5 7 2 8 7 4 1 7 1 6 2 2 0 1 4 1 0 2 2 3 1 1 5 5 6 0 2 0 5 2\r\n"
            ],
            [
                "30 178\r\n1 6\r\n2 7\r\n2 5\r\n2 8\r\n1 6\r\n2 8\r\n3 4\r\n2 7\r\n0 2\r\n0 8\r\n0 3\r\n0 2\r\n2 4\r\n4 8\r\n6 8\r\n0 8\r\n0 6\r\n1 8\r\n0 3\r\n6 7\r\n4 8\r\n2 7\r\n1 1\r\n3 7\r\n3 6\r\n2 5\r\n4 7\r\n2 2\r\n1 8\r\n5 6\r\n",
                "NO\r\n"
            ],
            [
                "30 71\r\n1 3\r\n0 6\r\n3 5\r\n3 6\r\n2 4\r\n2 8\r\n2 4\r\n3 8\r\n3 5\r\n2 4\r\n2 3\r\n3 7\r\n0 0\r\n5 7\r\n0 2\r\n5 8\r\n0 8\r\n4 7\r\n0 3\r\n3 7\r\n2 3\r\n4 5\r\n7 8\r\n7 7\r\n2 7\r\n1 3\r\n0 1\r\n1 5\r\n6 7\r\n5 8\r\n",
                "NO\r\n"
            ],
            [
                "30 119\r\n2 7\r\n1 3\r\n0 3\r\n3 4\r\n7 7\r\n7 7\r\n0 5\r\n2 3\r\n0 8\r\n0 8\r\n0 5\r\n5 7\r\n2 2\r\n2 6\r\n2 5\r\n3 7\r\n0 8\r\n0 2\r\n1 3\r\n2 3\r\n1 4\r\n0 1\r\n3 7\r\n7 8\r\n1 2\r\n0 6\r\n1 8\r\n1 7\r\n4 8\r\n1 4\r\n",
                "YES\r\n7 3 3 4 7 7 5 3 8 8 5 7 2 6 5 7 8 2 1 2 1 0 3 7 1 0 1 1 4 1\r\n"
            ],
            [
                "1 0\r\n0 0\r\n",
                "YES\r\n0\r\n"
            ],
            [
                "30 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n",
                "YES\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n"
            ],
            [
                "30 240\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n8 8\r\n",
                "YES\r\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\r\n"
            ],
            [
                "30 64\r\n7 7\r\n3 4\r\n0 4\r\n5 8\r\n1 3\r\n1 1\r\n0 2\r\n0 4\r\n7 7\r\n3 5\r\n4 4\r\n0 4\r\n4 5\r\n1 4\r\n4 6\r\n5 7\r\n1 4\r\n1 2\r\n3 3\r\n0 2\r\n3 7\r\n3 4\r\n0 3\r\n3 8\r\n0 8\r\n0 1\r\n0 3\r\n4 5\r\n1 5\r\n0 3\r\n",
                "YES\r\n7 3 0 5 1 1 0 0 7 3 4 0 4 1 4 5 1 1 3 0 3 3 0 3 0 0 0 4 1 0\r\n"
            ],
            [
                "30 189\r\n0 8\r\n3 8\r\n5 8\r\n2 2\r\n7 7\r\n2 8\r\n7 8\r\n2 5\r\n1 7\r\n0 1\r\n3 4\r\n1 7\r\n1 6\r\n5 6\r\n3 7\r\n4 7\r\n4 7\r\n4 7\r\n5 5\r\n0 5\r\n4 7\r\n3 5\r\n0 6\r\n4 8\r\n2 5\r\n5 6\r\n5 6\r\n2 8\r\n0 7\r\n7 8\r\n",
                "YES\r\n8 8 8 2 7 8 8 5 7 1 4 7 6 6 7 7 7 7 5 5 7 5 6 8 5 6 6 8 7 8\r\n"
            ]
        ]
    }
]