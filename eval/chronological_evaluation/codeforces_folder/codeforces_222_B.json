[
    {
        "name": "Cosmic Tables",
        "description": "The Free Meteor Association (FMA) has got a problem: as meteors are moving,\nthe Universal Cosmic Descriptive Humorous Program (UCDHP) needs to add a\nspecial module that would analyze this movement. UCDHP stores some secret\ninformation about meteors as an n \u00d7 m table with integers in its cells. The\norder of meteors in the Universe is changing. That's why the main UCDHP module\nreceives the following queries: The query to swap two table rows; The query to\nswap two table columns; The query to obtain a secret number in a particular\ntable cell. As the main UCDHP module is critical, writing the functional of\nworking with the table has been commissioned to you. Input The first line\ncontains three space-separated integers n, m and k (1 \u2264 n, m \u2264 1000, 1 \u2264 k \u2264\n500000) \u2014 the number of table columns and rows and the number of queries,\ncorrespondingly. Next n lines contain m space-separated numbers each \u2014 the\ninitial state of the table. Each number p in the table is an integer and\nsatisfies the inequality 0 \u2264 p \u2264 10^6. Next k lines contain queries in the\nformat \"si xi yi\", where si is one of the characters \"\u0441\", \"r\" or \"g\", and xi,\nyi are two integers. If si = \"c\", then the current query is the query to swap\ncolumns with indexes xi and yi (1 \u2264 x, y \u2264 m, x \u2260 y); If si = \"r\", then the\ncurrent query is the query to swap rows with indexes xi and yi (1 \u2264 x, y \u2264 n,\nx \u2260 y); If si = \"g\", then the current query is the query to obtain the number\nthat located in the xi-th row and in the yi-th column (1 \u2264 x \u2264 n, 1 \u2264 y \u2264 m).\nThe table rows are considered to be indexed from top to bottom from 1 to n,\nand the table columns \u2014 from left to right from 1 to m. Output For each query\nto obtain a number (si = \"g\") print the required number. Print the answers to\nthe queries in the order of the queries in the input. Examples Input 3 3 5 1 2\n3 4 5 6 7 8 9 g 3 2 r 3 2 c 2 3 g 2 2 g 3 2 Output 8 9 6 Input 2 3 3 1 2 4 3 1\n5 c 2 1 r 1 2 g 1 3 Output 5 Note Let's see how the table changes in the\nsecond test case. After the first operation is fulfilled, the table looks like\nthat: 2 1 4 1 3 5 After the second operation is fulfilled, the table looks\nlike that: 1 3 5 2 1 4 So the answer to the third query (the number located in\nthe first row and in the third column) will be 5.\n\n",
        "cf_contest_id": 222,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3 5\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\ng 3 2\r\nr 3 2\r\nc 2 3\r\ng 2 2\r\ng 3 2\r\n",
                "8\r\n9\r\n6\r\n"
            ],
            [
                "2 3 3\r\n1 2 4\r\n3 1 5\r\nc 2 1\r\nr 1 2\r\ng 1 3\r\n",
                "5\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 15\r\n1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\ng 1 1\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "1 2 3\r\n1 2\r\nc 1 2\r\ng 1 1\r\ng 1 2\r\n",
                "2\r\n1\r\n"
            ],
            [
                "2 2 6\r\n1 2\r\n3 4\r\nc 1 2\r\nr 1 2\r\ng 1 1\r\ng 1 2\r\ng 2 1\r\ng 2 2\r\n",
                "4\r\n3\r\n2\r\n1\r\n"
            ],
            [
                "3 4 5\r\n1 2 3 4\r\n5 6 7 8\r\n9 10 11 12\r\nr 1 2\r\nr 1 3\r\nr 2 3\r\ng 1 1\r\ng 2 2\r\n",
                "9\r\n6\r\n"
            ],
            [
                "5 5 12\r\n1 2 3 4 5\r\n6 7 8 9 10\r\n11 12 13 14 15\r\n16 17 18 19 20\r\n21 22 23 24 25\r\nc 1 2\r\nr 1 2\r\nr 2 3\r\nr 1 2\r\nr 4 5\r\nc 3 4\r\ng 1 1\r\ng 2 2\r\ng 3 3\r\ng 4 4\r\ng 5 5\r\ng 2 3\r\n",
                "12\r\n6\r\n4\r\n23\r\n20\r\n9\r\n"
            ],
            [
                "1 2 1\r\n0 0\r\nc 1 2\r\n",
                ""
            ],
            [
                "6 5 30\r\n536048 34640 572197 62457 304174\r\n194764 325606 270468 784237 551632\r\n10580 294606 63164 543647 531895\r\n430397 576813 678878 323394 603231\r\n534567 804015 403517 886087 981939\r\n518845 962097 609792 877955 88610\r\nc 1 5\r\nc 2 5\r\nc 2 5\r\nr 5 3\r\nc 5 2\r\nc 4 5\r\nr 6 5\r\nc 2 1\r\nr 3 4\r\nr 4 3\r\nc 4 5\r\nc 2 1\r\nr 1 5\r\nr 5 6\r\nc 3 1\r\ng 1 1\r\ng 5 4\r\ng 2 2\r\ng 2 1\r\nr 4 5\r\ng 1 1\r\nr 3 2\r\ng 5 1\r\nr 2 3\r\nr 6 5\r\nr 4 2\r\ng 5 2\r\nr 1 3\r\nr 1 3\r\nc 5 1\r\n",
                "609792\r\n543647\r\n194764\r\n270468\r\n609792\r\n678878\r\n536048\r\n"
            ],
            [
                "2 1 3\r\n1\r\n2\r\nr 1 2\r\ng 1 1\r\ng 2 1\r\n",
                "2\r\n1\r\n"
            ],
            [
                "3 3 13\r\n1 2 3\r\n4 5 6\r\n7 8 9\r\nc 1 2\r\nc 2 3\r\nr 2 3\r\nr 1 2\r\ng 1 1\r\ng 1 2\r\ng 1 3\r\ng 2 1\r\ng 2 2\r\ng 2 3\r\ng 3 1\r\ng 3 2\r\ng 3 3\r\n",
                "8\r\n9\r\n7\r\n2\r\n3\r\n1\r\n5\r\n6\r\n4\r\n"
            ],
            [
                "1 3 7\r\n1 2 3\r\nc 1 2\r\nc 2 3\r\nc 1 3\r\nc 2 3\r\ng 1 1\r\ng 1 2\r\ng 1 3\r\n",
                "1\r\n2\r\n3\r\n"
            ],
            [
                "3 1 7\r\n1\r\n2\r\n3\r\nr 1 2\r\nr 2 3\r\nr 1 3\r\nr 2 3\r\ng 1 1\r\ng 2 1\r\ng 3 1\r\n",
                "1\r\n2\r\n3\r\n"
            ],
            [
                "5 6 20\r\n495907 68740 954868 197572 577456 641857\r\n16591 602443 981187 646143 137121 884307\r\n371452 725384 373988 59165 980490 837686\r\n514286 881540 886532 10541 684975 411009\r\n314261 127191 461802 89232 749116 563889\r\nr 2 1\r\nr 3 4\r\nc 3 4\r\nr 2 3\r\nc 6 3\r\nc 5 6\r\nc 4 1\r\nc 4 2\r\nr 2 4\r\nc 1 6\r\nr 5 3\r\nr 2 5\r\nr 4 2\r\ng 3 4\r\nc 2 5\r\nc 3 1\r\ng 3 6\r\ng 4 3\r\ng 2 3\r\nr 5 4\r\n",
                "127191\r\n461802\r\n577456\r\n684975\r\n"
            ]
        ]
    }
]