[
    {
        "name": "Square String?",
        "description": "A string is called square if it is some string written twice in a row. For\nexample, the strings \"aa\", \"abcabc\", \"abab\" and \"baabaa\" are square. But the\nstrings \"aaa\", \"abaaab\" and \"abcdabc\" are not square. For a given string\n\n    s\n determine if it is square. Input The first line of input data contains\nan integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014the number of test cases. This\nis followed by \n    t\n lines, each containing a description of one test case.\nThe given strings consist only of lowercase Latin letters and have lengths\nbetween \n    1\n and \n    100\n inclusive. Output For each test case, output on\na separate line: YES if the string in the corresponding test case is square,\nNO otherwise. You can output YES and NO in any case (for example, strings yEs,\nyes, Yes and YES will be recognized as a positive response). Example Input 10\na aa aaa aaaa abab abcabc abacaba xxyy xyyx xyxy Output NO YES NO YES YES YES\nNO NO NO YES\n\n",
        "cf_contest_id": 1619,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "strings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "10\r\na\r\naa\r\naaa\r\naaaa\r\nabab\r\nabcabc\r\nabacaba\r\nxxyy\r\nxyyx\r\nxyxy\r\n",
                "NO YES NO YES YES YES NO NO NO YES "
            ]
        ],
        "private_cases": [
            [
                "1\r\nzz\r\n",
                "YES "
            ],
            [
                "1\r\nacascnakcn\r\n",
                "NO "
            ],
            [
                "1\r\nababab\r\n",
                "NO "
            ]
        ]
    }
]