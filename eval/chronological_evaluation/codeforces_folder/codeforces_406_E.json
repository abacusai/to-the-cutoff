[
    {
        "name": "Hamming Triples",
        "description": "Little Chris is having a nightmare. Even in dreams all he thinks about is\nmath. Chris dreams about m binary strings of length n, indexed with numbers\nfrom 1 to m. The most horrifying part is that the bits of each string are\nordered in either ascending or descending order. For example, Chris could be\ndreaming about the following 4 strings of length 5: The Hamming distance H(a,\nb) between two strings a and b of length n is the number of positions at which\nthe corresponding symbols are different. \u0421hris thinks that each three strings\nwith different indices constitute a single triple. Chris's delusion is that he\nwill wake up only if he counts the number of such string triples a, b, c that\nthe sum H(a, b) + H(b, c) + H(c, a) is maximal among all the string triples\nconstructed from the dreamed strings. Help Chris wake up from this nightmare!\nInput The first line of input contains two space-separated integers n and m (1\n\u2264 n \u2264 10^9; 3 \u2264 m \u2264 10^5), the length and the number of strings. The next m\nlines contain the description of the strings. The i-th line contains two\nspace-separated integers si and fi (0 \u2264 si \u2264 1; 1 \u2264 fi \u2264 n), the description\nof the string with index i; that means that the first fi bits of the i-th\nstring are equal to si, and the remaining n - fi bits are equal to 1 - si.\nThere can be multiple equal strings in Chris's dream. Output Output a single\ninteger, the number of such string triples among the given that the sum of the\nHamming distances between the strings of the triple is maximal. Examples Input\n5 4 0 3 0 5 1 4 1 5 Output 3 Input 10 4 1 5 0 5 0 5 1 5 Output 4\n\n",
        "cf_contest_id": 406,
        "cf_index": "E",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4\r\n0 3\r\n0 5\r\n1 4\r\n1 5\r\n",
                "3\r\n"
            ],
            [
                "10 4\r\n1 5\r\n0 5\r\n0 5\r\n1 5\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 9\r\n0 10\r\n0 10\r\n1 10\r\n0 10\r\n0 10\r\n0 10\r\n0 10\r\n1 10\r\n1 10\r\n",
                "63\r\n"
            ],
            [
                "1000 5\r\n0 1000\r\n0 999\r\n0 998\r\n0 997\r\n0 996\r\n",
                "3\r\n"
            ],
            [
                "1000 5\r\n1 999\r\n1 998\r\n1 997\r\n1 996\r\n1 1\r\n",
                "3\r\n"
            ],
            [
                "1 3\r\n0 1\r\n0 1\r\n0 1\r\n",
                "1\r\n"
            ],
            [
                "1 3\r\n0 1\r\n1 1\r\n0 1\r\n",
                "1\r\n"
            ],
            [
                "2 4\r\n0 1\r\n0 2\r\n1 1\r\n1 2\r\n",
                "4\r\n"
            ],
            [
                "10 3\r\n1 1\r\n1 4\r\n1 10\r\n",
                "1\r\n"
            ],
            [
                "4 5\r\n1 3\r\n1 4\r\n1 3\r\n0 3\r\n0 1\r\n",
                "5\r\n"
            ],
            [
                "4 5\r\n1 3\r\n1 4\r\n0 2\r\n1 4\r\n0 2\r\n",
                "5\r\n"
            ],
            [
                "9 3\r\n1 3\r\n1 7\r\n1 8\r\n",
                "1\r\n"
            ],
            [
                "4 5\r\n0 4\r\n1 1\r\n0 4\r\n0 3\r\n1 1\r\n",
                "5\r\n"
            ],
            [
                "6 3\r\n1 5\r\n1 4\r\n0 6\r\n",
                "1\r\n"
            ],
            [
                "10 3\r\n0 10\r\n1 10\r\n1 3\r\n",
                "1\r\n"
            ],
            [
                "1 3\r\n1 1\r\n1 1\r\n1 1\r\n",
                "1\r\n"
            ],
            [
                "1000 5\r\n0 999\r\n0 998\r\n0 997\r\n0 996\r\n0 1\r\n",
                "3\r\n"
            ],
            [
                "10 7\r\n0 10\r\n1 10\r\n0 10\r\n1 10\r\n0 10\r\n1 10\r\n0 10\r\n",
                "30\r\n"
            ],
            [
                "10 7\r\n0 3\r\n0 9\r\n0 3\r\n0 9\r\n0 3\r\n0 9\r\n0 3\r\n",
                "30\r\n"
            ],
            [
                "10 7\r\n1 4\r\n1 4\r\n1 4\r\n1 4\r\n1 4\r\n1 4\r\n1 4\r\n",
                "35\r\n"
            ],
            [
                "10 7\r\n0 10\r\n0 10\r\n0 10\r\n1 5\r\n1 5\r\n0 5\r\n0 5\r\n",
                "16\r\n"
            ],
            [
                "10 10\r\n0 10\r\n0 10\r\n0 10\r\n1 5\r\n1 10\r\n1 10\r\n1 10\r\n1 5\r\n0 5\r\n0 5\r\n",
                "82\r\n"
            ],
            [
                "1000000000 10\r\n1 611471244\r\n0 395514738\r\n0 645723016\r\n0 365254431\r\n0 605838412\r\n1 716650787\r\n1 531626021\r\n1 503741430\r\n0 743443538\r\n0 960694338\r\n",
                "40\r\n"
            ]
        ]
    }
]