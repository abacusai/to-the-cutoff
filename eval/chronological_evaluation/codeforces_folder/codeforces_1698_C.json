[
    {
        "name": "3SUM Closure",
        "description": "You are given an array \n    a\n of length \n    n\n. The array is called 3SUM-\nclosed if for all distinct indices \n    i\n, \n    j\n, \n    k\n, the sum \n    a_i +\n    a_j + a_k\n is an element of the array. More formally, \n    a\n is 3SUM-closed\nif for all integers \n    1 \n    \u2264 i < j < k \n    \u2264 n\n, there exists some\ninteger \n    1 \n    \u2264 l \n    \u2264 n\n such that \n    a_i + a_j + a_k = a_l\n.\nDetermine if \n    a\n is 3SUM-closed. Input The first line contains an integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test cases. The first\nline of each test case contains an integer \n    n\n (\n    3 \n    \u2264 n \n    \u2264 2\n    \n    \u00b7 10^5\n) \u2014 the length of the array. The second line of each test case\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    -10^9 \n    \u2264 a_i\n    \n    \u2264 10^9\n) \u2014 the elements of the array. It is guaranteed that the sum of\n\n    n\n across all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For\neach test case, output \"YES\" (without quotes) if \n    a\n is 3SUM-closed and\n\"NO\" (without quotes) otherwise. You can output \"YES\" and \"NO\" in any case\n(for example, strings \"yEs\", \"yes\" and \"Yes\" will be recognized as a positive\nresponse). Example Input 4 3 -1 0 1 5 1 -2 -2 1 -3 6 0 0 0 0 0 0 4 -1 2 -3 4\nOutput YES NO YES NO Note In the first test case, there is only one triple\nwhere \n    i=1\n, \n    j=2\n, \n    k=3\n. In this case, \n    a_1 + a_2 + a_3 =\n    0\n, which is an element of the array (\n    a_2 = 0\n), so the array is 3SUM-\nclosed. In the second test case, \n    a_1 + a_4 + a_5 = -1\n, which is not an\nelement of the array. Therefore, the array is not 3SUM-closed. In the third\ntest case, \n    a_i + a_j + a_k = 0\n for all distinct \n    i\n, \n    j\n,\n\n    k\n, and \n    0\n is an element of the array, so the array is 3SUM-closed.\n\n",
        "cf_contest_id": 1698,
        "cf_index": "C",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3\r\n-1 0 1\r\n5\r\n1 -2 -2 1 -3\r\n6\r\n0 0 0 0 0 0\r\n4\r\n-1 2 -3 4\r\n",
                "YES\r\nNO \r\nYES\r\nNO \r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n4\r\n-3 -1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n4\r\n-1 -4 2 3\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n3\r\n0 65536 65536\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n4\r\n7 7 7 -21\r\n",
                "NO \r\n"
            ],
            [
                "1\r\n4\r\n3 -3 -3 9\r\n",
                "YES\r\n"
            ],
            [
                "1\r\n5\r\n-1 0 0 0 4\r\n",
                "NO \r\n"
            ]
        ]
    }
]