[
    {
        "name": "Wilbur and Points",
        "description": "Wilbur is playing with a set of n points on the coordinate plane. All points\nhave non-negative integer coordinates. Moreover, if some point (x, y) belongs\nto the set, then all points (x', y'), such that 0 \u2264 x' \u2264 x and 0 \u2264 y' \u2264 y also\nbelong to this set. Now Wilbur wants to number the points in the set he has,\nthat is assign them distinct integer numbers from 1 to n. In order to make the\nnumbering aesthetically pleasing, Wilbur imposes the condition that if some\npoint (x, y) gets number i, then all (x',y') from the set, such that x' \u2265 x\nand y' \u2265 y must be assigned a number not less than i. For example, for a set\nof four points (0, 0), (0, 1), (1, 0) and (1, 1), there are two aesthetically\npleasing numberings. One is 1, 2, 3, 4 and another one is 1, 3, 2, 4. Wilbur's\nfriend comes along and challenges Wilbur. For any point he defines it's\nspecial value as s(x, y) = y - x. Now he gives Wilbur some w1, w2,..., wn, and\nasks him to find an aesthetically pleasing numbering of the points in the set,\nsuch that the point that gets number i has it's special value equal to wi,\nthat is s(xi, yi) = yi - xi = wi. Now Wilbur asks you to help him with this\nchallenge. Input The first line of the input consists of a single integer n (1\n\u2264 n \u2264 100 000) \u2014 the number of points in the set Wilbur is playing with. Next\nfollow n lines with points descriptions. Each line contains two integers x and\ny (0 \u2264 x, y \u2264 100 000), that give one point in Wilbur's set. It's guaranteed\nthat all points are distinct. Also, it is guaranteed that if some point (x, y)\nis present in the input, then all points (x', y'), such that 0 \u2264 x' \u2264 x and 0\n\u2264 y' \u2264 y, are also present in the input. The last line of the input contains n\nintegers. The i-th of them is wi ( - 100 000 \u2264 wi \u2264 100 000) \u2014 the required\nspecial value of the point that gets number i in any aesthetically pleasing\nnumbering. Output If there exists an aesthetically pleasant numbering of\npoints in the set, such that s(xi, yi) = yi - xi = wi, then print \"YES\" on the\nfirst line of the output. Otherwise, print \"NO\". If a solution exists, proceed\noutput with n lines. On the i-th of these lines print the point of the set\nthat gets number i. If there are multiple solutions, print any of them.\nExamples Input 5 2 0 0 0 1 0 1 1 0 1 0 -1 -2 1 0 Output YES 0 0 1 0 2 0 0 1 1\n1 Input 3 1 0 0 0 2 0 0 1 2 Output NO Note In the first sample, point (2, 0)\ngets number 3, point (0, 0) gets number one, point (1, 0) gets number 2, point\n(1, 1) gets number 5 and point (0, 1) gets number 4. One can easily check that\nthis numbering is aesthetically pleasing and yi - xi = wi. In the second\nsample, the special values of the points in the set are 0, - 1, and - 2 while\nthe sequence that the friend gives to Wilbur is 0, 1, 2. Therefore, the answer\ndoes not exist.\n\n",
        "cf_contest_id": 596,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 0\r\n0 0\r\n1 0\r\n1 1\r\n0 1\r\n0 -1 -2 1 0\r\n",
                "YES\r\n0 0\r\n1 0\r\n2 0\r\n0 1\r\n1 1\r\n"
            ],
            [
                "3\r\n1 0\r\n0 0\r\n2 0\r\n0 1 2\r\n",
                "NO\r\n"
            ]
        ],
        "private_cases": [
            [
                "9\r\n0 0\r\n1 0\r\n2 0\r\n0 1\r\n1 1\r\n2 1\r\n1 2\r\n2 2\r\n0 2\r\n0 0 0 -1 -1 -2 1 1 2\r\n",
                "NO\r\n"
            ],
            [
                "18\r\n0 0\r\n0 1\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n0 6\r\n0 7\r\n0 8\r\n0 9\r\n0 10\r\n0 11\r\n0 12\r\n0 13\r\n0 14\r\n0 15\r\n0 16\r\n1 0\r\n0 1 2 3 4 5 6 7 8 9 -1 10 11 12 13 14 15 16\r\n",
                "YES\r\n0 0\r\n0 1\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n0 6\r\n0 7\r\n0 8\r\n0 9\r\n1 0\r\n0 10\r\n0 11\r\n0 12\r\n0 13\r\n0 14\r\n0 15\r\n0 16\r\n"
            ],
            [
                "1\r\n0 0\r\n0\r\n",
                "YES\r\n0 0\r\n"
            ],
            [
                "37\r\n0 0\r\n0 1\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n0 6\r\n0 7\r\n0 8\r\n0 9\r\n0 10\r\n0 11\r\n0 12\r\n0 13\r\n0 14\r\n0 15\r\n0 16\r\n0 17\r\n0 18\r\n0 19\r\n0 20\r\n0 21\r\n0 22\r\n0 23\r\n0 24\r\n0 25\r\n0 26\r\n0 27\r\n0 28\r\n0 29\r\n0 30\r\n0 31\r\n0 32\r\n0 33\r\n0 34\r\n0 35\r\n1 0\r\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 -1 26 27 28 29 30 31 32 33 34 35\r\n",
                "YES\r\n0 0\r\n0 1\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n0 6\r\n0 7\r\n0 8\r\n0 9\r\n0 10\r\n0 11\r\n0 12\r\n0 13\r\n0 14\r\n0 15\r\n0 16\r\n0 17\r\n0 18\r\n0 19\r\n0 20\r\n0 21\r\n0 22\r\n0 23\r\n0 24\r\n0 25\r\n1 0\r\n0 26\r\n0 27\r\n0 28\r\n0 29\r\n0 30\r\n0 31\r\n0 32\r\n0 33\r\n0 34\r\n0 35\r\n"
            ],
            [
                "31\r\n0 0\r\n0 1\r\n0 2\r\n0 3\r\n1 0\r\n1 1\r\n2 0\r\n2 1\r\n3 0\r\n4 0\r\n5 0\r\n6 0\r\n7 0\r\n8 0\r\n9 0\r\n10 0\r\n11 0\r\n12 0\r\n13 0\r\n14 0\r\n15 0\r\n16 0\r\n17 0\r\n18 0\r\n19 0\r\n20 0\r\n21 0\r\n22 0\r\n23 0\r\n24 0\r\n25 0\r\n0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 1 -15 2 -16 -17 -18 3 -19 -20 0 -21 -22 -23 -24 -25 -1\r\n",
                "YES\r\n0 0\r\n1 0\r\n2 0\r\n3 0\r\n4 0\r\n5 0\r\n6 0\r\n7 0\r\n8 0\r\n9 0\r\n10 0\r\n11 0\r\n12 0\r\n13 0\r\n14 0\r\n0 1\r\n15 0\r\n0 2\r\n16 0\r\n17 0\r\n18 0\r\n0 3\r\n19 0\r\n20 0\r\n1 1\r\n21 0\r\n22 0\r\n23 0\r\n24 0\r\n25 0\r\n2 1\r\n"
            ],
            [
                "40\r\n0 0\r\n0 1\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n0 6\r\n0 7\r\n0 8\r\n0 9\r\n0 10\r\n0 11\r\n0 12\r\n1 0\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n1 7\r\n2 0\r\n3 0\r\n4 0\r\n5 0\r\n6 0\r\n7 0\r\n8 0\r\n9 0\r\n10 0\r\n11 0\r\n12 0\r\n13 0\r\n14 0\r\n15 0\r\n16 0\r\n17 0\r\n18 0\r\n19 0\r\n20 0\r\n0 1 2 -1 -2 3 4 -3 5 6 7 8 0 -4 -5 1 -6 -7 -8 -9 -10 -11 9 2 -12 -13 -14 3 10 -15 11 4 -16 -17 -18 -19 5 6 12 -20\r\n",
                "YES\r\n0 0\r\n0 1\r\n0 2\r\n1 0\r\n2 0\r\n0 3\r\n0 4\r\n3 0\r\n0 5\r\n0 6\r\n0 7\r\n0 8\r\n1 1\r\n4 0\r\n5 0\r\n1 2\r\n6 0\r\n7 0\r\n8 0\r\n9 0\r\n10 0\r\n11 0\r\n0 9\r\n1 3\r\n12 0\r\n13 0\r\n14 0\r\n1 4\r\n0 10\r\n15 0\r\n0 11\r\n1 5\r\n16 0\r\n17 0\r\n18 0\r\n19 0\r\n1 6\r\n1 7\r\n0 12\r\n20 0\r\n"
            ],
            [
                "21\r\n0 0\r\n0 1\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n0 6\r\n0 7\r\n0 8\r\n1 0\r\n1 1\r\n1 2\r\n1 3\r\n2 0\r\n3 0\r\n4 0\r\n5 0\r\n6 0\r\n7 0\r\n8 0\r\n9 0\r\n86174 -26039 -13726 25840 85990 -62633 -29634 -68400 39255 1313 77388 830 -45558 -90862 97867 46376 58592 17103 32820 27220 94751\r\n",
                "NO\r\n"
            ],
            [
                "31\r\n0 0\r\n0 1\r\n0 2\r\n0 3\r\n0 4\r\n0 5\r\n0 6\r\n0 7\r\n0 8\r\n0 9\r\n1 0\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 0\r\n2 1\r\n2 2\r\n3 0\r\n4 0\r\n5 0\r\n6 0\r\n7 0\r\n8 0\r\n9 0\r\n10 0\r\n11 0\r\n12 0\r\n13 0\r\n14 0\r\n-8 1 4 -11 0 -4 -10 3 4 -5 -9 8 7 6 2 -2 -1 9 -3 -14 2 3 -6 0 -7 -1 5 0 -13 -12 1\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n0 0\r\n-9876\r\n",
                "NO\r\n"
            ],
            [
                "16\r\n0 0\r\n0 1\r\n1 0\r\n2 0\r\n3 0\r\n4 0\r\n5 0\r\n6 0\r\n7 0\r\n8 0\r\n9 0\r\n10 0\r\n11 0\r\n12 0\r\n13 0\r\n14 0\r\n0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 1 -11 -12 -13 -14\r\n",
                "YES\r\n0 0\r\n1 0\r\n2 0\r\n3 0\r\n4 0\r\n5 0\r\n6 0\r\n7 0\r\n8 0\r\n9 0\r\n10 0\r\n0 1\r\n11 0\r\n12 0\r\n13 0\r\n14 0\r\n"
            ],
            [
                "5\r\n1 1\r\n0 1\r\n2 0\r\n1 0\r\n0 0\r\n0 -1 -2 1 0\r\n",
                "YES\r\n0 0\r\n1 0\r\n2 0\r\n0 1\r\n1 1\r\n"
            ],
            [
                "2\r\n0 0\r\n1 0\r\n-1 0\r\n",
                "NO\r\n"
            ]
        ]
    }
]