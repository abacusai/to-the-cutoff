[
    {
        "name": "Video Posts",
        "description": "Polycarp took \n    n\n videos, the duration of the \n    i\n-th video is\n\n    a_i\n seconds. The videos are listed in the chronological order, i.e. the\n\n    1\n-st video is the earliest, the \n    2\n-nd video is the next, ..., the\n\n    n\n-th video is the last. Now Polycarp wants to publish exactly \n    k\n\n(\n    1 \n    \u2264 k \n    \u2264 n\n) posts in Instabram. Each video should be a part of a\nsingle post. The posts should preserve the chronological order, it means that\nthe first post should contain one or more of the earliest videos, the second\npost should contain a block (one or more videos) going next and so on. In\nother words, if the number of videos in the \n    j\n-th post is \n    s_j\n then:\n\n    s_1+s_2+\n    \u2026+s_k=n\n (\n    s_i>0\n), the first post contains the videos:\n\n    1, 2, \n    \u2026, s_1\n; the second post contains the videos: \n    s_1+1,\n    s_1+2, \n    \u2026, s_1+s_2\n; the third post contains the videos: \n    s_1+s_2+1,\n    s_1+s_2+2, \n    \u2026, s_1+s_2+s_3\n; ... the \n    k\n-th post contains videos:\n\n    n-s_k+1,n-s_k+2,\n    \u2026,n\n. Polycarp is a perfectionist, he wants the\ntotal duration of videos in each post to be the same. Help Polycarp to find\nsuch positive integer values \n    s_1, s_2, \n    \u2026, s_k\n that satisfy all the\nconditions above. Input The first line contains two integers \n    n\n and\n\n    k\n (\n    1 \n    \u2264 k \n    \u2264 n \n    \u2264 10^5\n). The next line contains \n    n\n\npositive integer numbers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    10^4\n), where \n    a_i\n is the duration of the \n    i\n-th video. Output If\nsolution exists, print \"Yes\" in the first line. Print \n    k\n positive\nintegers \n    s_1, s_2, \n    \u2026, s_k\n (\n    s_1+s_2+\n    \u2026+s_k=n\n) in the\nsecond line. The total duration of videos in each post should be the same. It\ncan be easily proven that the answer is unique (if it exists). If there is no\nsolution, print a single line \"No\". Examples Input 6 3 3 3 1 4 1 6 Output Yes\n2 3 1 Input 3 3 1 1 1 Output Yes 1 1 1 Input 3 3 1 1 2 Output No Input 3 1 1\n10 100 Output Yes 3\n\n",
        "cf_contest_id": 1070,
        "cf_index": "K",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 3\r\n3 3 1 4 1 6\r\n",
                "Yes\r\n2 3 1 "
            ],
            [
                "3 3\r\n1 1 1\r\n",
                "Yes\r\n1 1 1 "
            ],
            [
                "3 3\r\n1 1 2\r\n",
                "No\r\n"
            ],
            [
                "3 1\r\n1 10 100\r\n",
                "Yes\r\n3 "
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n3\r\n",
                "Yes\r\n1 "
            ],
            [
                "2 1\r\n1 3\r\n",
                "Yes\r\n2 "
            ],
            [
                "2 1\r\n3 3\r\n",
                "Yes\r\n2 "
            ],
            [
                "2 2\r\n3 1\r\n",
                "No\r\n"
            ],
            [
                "2 2\r\n1 3\r\n",
                "No\r\n"
            ],
            [
                "4 2\r\n2 1 3 1\r\n",
                "No\r\n"
            ]
        ]
    }
]