[
    {
        "name": "Metro",
        "description": "Alice has a birthday today, so she invited home her best friend Bob. Now Bob\nneeds to find a way to commute to the Alice's home. In the city in which Alice\nand Bob live, the first metro line is being built. This metro line contains\n\n    n\n stations numbered from \n    1\n to \n    n\n. Bob lives near the station\nwith number \n    1\n, while Alice lives near the station with number \n    s\n.\nThe metro line has two tracks. Trains on the first track go from the station\n\n    1\n to the station \n    n\n and trains on the second track go in reverse\ndirection. Just after the train arrives to the end of its track, it goes to\nthe depot immediately, so it is impossible to travel on it after that. Some\nstations are not yet open at all and some are only partially open \u2014 for each\nstation and for each track it is known whether the station is closed for that\ntrack or not. If a station is closed for some track, all trains going in this\ntrack's direction pass the station without stopping on it. When the Bob got\nthe information on opened and closed stations, he found that traveling by\nmetro may be unexpectedly complicated. Help Bob determine whether he can\ntravel to the Alice's home by metro or he should search for some other\ntransport. Input The first line contains two integers \n    n\n and \n    s\n\n(\n    2 \n    \u2264 s \n    \u2264 n \n    \u2264 1000\n) \u2014 the number of stations in the metro and\nthe number of the station where Alice's home is located. Bob lives at station\n\n    1\n. Next lines describe information about closed and open stations. The\nsecond line contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    a_i =\n    0\n or \n    a_i = 1\n). If \n    a_i = 1\n, then the \n    i\n-th station is open\non the first track (that is, in the direction of increasing station numbers).\nOtherwise the station is closed on the first track. The third line contains\n\n    n\n integers \n    b_1, b_2, \n    \u2026, b_n\n (\n    b_i = 0\n or \n    b_i =\n    1\n). If \n    b_i = 1\n, then the \n    i\n-th station is open on the second\ntrack (that is, in the direction of decreasing station numbers). Otherwise the\nstation is closed on the second track. Output Print \"YES\" (quotes for clarity)\nif Bob will be able to commute to the Alice's home by metro and \"NO\" (quotes\nfor clarity) otherwise. You can print each letter in any case (upper or\nlower). Examples Input 5 3 1 1 1 1 1 1 1 1 1 1 Output YES Input 5 4 1 0 0 0 1\n0 1 1 1 1 Output YES Input 5 2 0 1 1 1 1 1 1 1 1 1 Output NO Note In the first\nexample, all stations are opened, so Bob can simply travel to the station with\nnumber \n    3\n. In the second example, Bob should travel to the station\n\n    5\n first, switch to the second track and travel to the station \n    4\n\nthen. In the third example, Bob simply can't enter the train going in the\ndirection of Alice's home.\n\n",
        "cf_contest_id": 1055,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "graphs"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 3\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "5 4\r\n1 0 0 0 1\r\n0 1 1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "5 2\r\n0 1 1 1 1\r\n1 1 1 1 1\r\n",
                "NO \r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n1 1\r\n0 0\r\n",
                "YES\r\n"
            ],
            [
                "10 3\r\n0 1 1 0 1 0 0 1 0 1\r\n1 1 1 1 0 0 1 1 1 1\r\n",
                "NO \r\n"
            ],
            [
                "10 6\r\n1 0 0 1 1 0 1 1 1 1\r\n1 1 1 1 0 0 1 1 1 1\r\n",
                "NO \r\n"
            ],
            [
                "10 10\r\n1 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0\r\n",
                "YES\r\n"
            ],
            [
                "10 6\r\n1 1 1 1 1 0 1 1 0 0\r\n1 1 1 1 1 1 0 0 0 1\r\n",
                "NO \r\n"
            ],
            [
                "10 2\r\n1 0 0 1 0 1 1 0 1 1\r\n1 1 1 0 1 0 0 1 0 1\r\n",
                "YES\r\n"
            ],
            [
                "10 3\r\n1 0 0 1 0 0 0 1 1 0\r\n1 1 1 1 0 0 1 0 0 1\r\n",
                "YES\r\n"
            ],
            [
                "3 2\r\n1 1 0\r\n1 1 0\r\n",
                "YES\r\n"
            ],
            [
                "5 3\r\n1 1 0 1 0\r\n1 1 1 1 0\r\n",
                "YES\r\n"
            ],
            [
                "5 2\r\n1 0 0 0 1\r\n0 1 0 0 1\r\n",
                "YES\r\n"
            ],
            [
                "5 2\r\n1 0 0 1 0\r\n1 1 0 1 0\r\n",
                "YES\r\n"
            ],
            [
                "4 2\r\n1 0 1 1\r\n1 1 1 0\r\n",
                "YES\r\n"
            ],
            [
                "5 3\r\n1 0 0 0 1\r\n0 0 1 0 1\r\n",
                "YES\r\n"
            ],
            [
                "5 3\r\n1 0 0 1 0\r\n0 0 1 1 0\r\n",
                "YES\r\n"
            ],
            [
                "5 3\r\n1 1 0 1 0\r\n1 1 1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "3 3\r\n0 0 0\r\n0 0 0\r\n",
                "NO \r\n"
            ],
            [
                "2 2\r\n1 0\r\n1 0\r\n",
                "NO \r\n"
            ],
            [
                "5 2\r\n1 0 1 1 1\r\n0 1 0 0 0\r\n",
                "NO \r\n"
            ],
            [
                "4 4\r\n1 0 0 0\r\n1 0 0 0\r\n",
                "NO \r\n"
            ],
            [
                "4 2\r\n1 0 0 1\r\n0 1 0 1\r\n",
                "YES\r\n"
            ],
            [
                "5 3\r\n1 0 0 0 1\r\n1 0 1 0 0\r\n",
                "NO \r\n"
            ],
            [
                "4 3\r\n1 0 1 0\r\n1 0 1 0\r\n",
                "YES\r\n"
            ],
            [
                "2 2\r\n0 0\r\n0 0\r\n",
                "NO \r\n"
            ],
            [
                "5 3\r\n1 0 0 0 1\r\n0 1 1 0 1\r\n",
                "YES\r\n"
            ],
            [
                "4 2\r\n1 0 1 1\r\n0 1 0 0\r\n",
                "NO \r\n"
            ],
            [
                "4 2\r\n1 0 1 0\r\n0 1 1 0\r\n",
                "YES\r\n"
            ],
            [
                "5 3\r\n1 0 0 0 1\r\n0 0 1 0 0\r\n",
                "NO \r\n"
            ],
            [
                "4 2\r\n1 0 0 1\r\n1 1 0 1\r\n",
                "YES\r\n"
            ],
            [
                "3 2\r\n1 0 1\r\n1 1 0\r\n",
                "NO \r\n"
            ],
            [
                "4 2\r\n1 0 1 1\r\n0 1 0 1\r\n",
                "YES\r\n"
            ],
            [
                "7 3\r\n1 0 0 0 0 0 1\r\n0 0 1 0 0 0 1\r\n",
                "YES\r\n"
            ],
            [
                "7 3\r\n1 0 0 0 0 1 0\r\n0 0 1 0 0 1 0\r\n",
                "YES\r\n"
            ],
            [
                "5 3\r\n1 0 0 0 1\r\n1 0 1 0 1\r\n",
                "YES\r\n"
            ],
            [
                "7 4\r\n1 1 0 0 1 1 0\r\n1 1 1 1 1 1 1\r\n",
                "YES\r\n"
            ],
            [
                "5 3\r\n1 1 0 1 1\r\n1 1 1 1 0\r\n",
                "YES\r\n"
            ],
            [
                "5 2\r\n0 0 0 1 0\r\n0 1 0 1 0\r\n",
                "NO \r\n"
            ]
        ]
    }
]