[
    {
        "name": "Robbery",
        "description": "It is nighttime and Joe the Elusive got into the country's main bank's safe.\nThe safe has n cells positioned in a row, each of them contains some amount of\ndiamonds. Let's make the problem more comfortable to work with and mark the\ncells with positive numbers from 1 to n from the left to the right.\nUnfortunately, Joe didn't switch the last security system off. On the plus\nside, he knows the way it works. Every minute the security system calculates\nthe total amount of diamonds for each two adjacent cells (for the cells\nbetween whose numbers difference equals 1). As a result of this check we get\nan n - 1 sums. If at least one of the sums differs from the corresponding sum\nreceived during the previous check, then the security system is triggered. Joe\ncan move the diamonds from one cell to another between the security system's\nchecks. He manages to move them no more than m times between two checks. One\nof the three following operations is regarded as moving a diamond: moving a\ndiamond from any cell to any other one, moving a diamond from any cell to\nJoe's pocket, moving a diamond from Joe's pocket to any cell. Initially Joe's\npocket is empty, and it can carry an unlimited amount of diamonds. It is\nconsidered that before all Joe's actions the system performs at least one\ncheck. In the morning the bank employees will come, which is why Joe has to\nleave the bank before that moment. Joe has only k minutes left before morning,\nand on each of these k minutes he can perform no more than m operations. All\nthat remains in Joe's pocket, is considered his loot. Calculate the largest\namount of diamonds Joe can carry with him. Don't forget that the security\nsystem shouldn't be triggered (even after Joe leaves the bank) and Joe should\nleave before morning. Input The first line contains integers n, m and k (1 \u2264 n\n\u2264 10^4, 1 \u2264 m, k \u2264 10^9). The next line contains n numbers. The i-th number is\nequal to the amount of diamonds in the i-th cell \u2014 it is an integer from 0 to\n10^5. Output Print a single number \u2014 the maximum number of diamonds Joe can\nsteal. Examples Input 2 3 1 2 3 Output 0 Input 3 2 2 4 1 3 Output 2 Note In\nthe second sample Joe can act like this: The diamonds' initial positions are 4\n1 3. During the first period of time Joe moves a diamond from the 1-th cell to\nthe 2-th one and a diamond from the 3-th cell to his pocket. By the end of the\nfirst period the diamonds' positions are 3 2 2. The check finds no difference\nand the security system doesn't go off. During the second period Joe moves a\ndiamond from the 3-rd cell to the 2-nd one and puts a diamond from the 1-st\ncell to his pocket. By the end of the second period the diamonds' positions\nare 2 3 1. The check finds no difference again and the security system doesn't\ngo off. Now Joe leaves with 2 diamonds in his pocket.\n\n",
        "cf_contest_id": 89,
        "cf_index": "A",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 3 1\r\n2 3\r\n",
                "0\r\n"
            ],
            [
                "3 2 2\r\n4 1 3\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 10 10\r\n7 0 7 0 7\r\n",
                "7\r\n"
            ],
            [
                "6 10 4\r\n1 2 3 4 5 6\r\n",
                "0\r\n"
            ],
            [
                "7 5 2\r\n1 2 3 4 5 6 7\r\n",
                "1\r\n"
            ],
            [
                "16 100 100\r\n30 89 12 84 62 24 10 59 98 21 13 69 65 12 54 32\r\n",
                "0\r\n"
            ],
            [
                "99 999 999\r\n9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\r\n",
                "9\r\n"
            ],
            [
                "1 1 1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "1 64 25\r\n100000\r\n",
                "1600\r\n"
            ],
            [
                "1 1000000000 1\r\n100\r\n",
                "100\r\n"
            ],
            [
                "1 1 1000000000\r\n100\r\n",
                "100\r\n"
            ],
            [
                "1 1000000000 1000000000\r\n100\r\n",
                "100\r\n"
            ],
            [
                "5 2 9494412\r\n5484 254 1838 18184 9421\r\n",
                "0\r\n"
            ],
            [
                "5 10 7\r\n98765 78654 25669 45126 98745\r\n",
                "21\r\n"
            ],
            [
                "13 94348844 381845400\r\n515 688 5464 155 441 9217 114 21254 55 9449 1800 834 384\r\n",
                "55\r\n"
            ],
            [
                "17 100 100\r\n47 75 22 18 42 53 95 98 94 50 63 55 46 80 9 20 99\r\n",
                "9\r\n"
            ],
            [
                "47 20 1000000\r\n81982 19631 19739 13994 50426 14232 79125 95908 20227 79428 84065 86233 30742 82664 54626 10849 11879 67198 15667 75866 47242 90766 23115 20130 37293 8312 57308 52366 49768 28256 56085 39722 40397 14166 16743 28814 40538 50753 60900 99449 94318 54247 10563 5260 76407 42235 417\r\n",
                "0\r\n"
            ],
            [
                "58 5858758 7544547\r\n6977 5621 6200 6790 7495 5511 6214 6771 6526 6557 5936 7020 6925 5462 7519 6166 5974 6839 6505 7113 5674 6729 6832 6735 5363 5817 6242 7465 7252 6427 7262 5885 6327 7046 6922 5607 7238 5471 7145 5822 5465 6369 6115 5694 6561 7330 7089 7397 7409 7093 7537 7279 7613 6764 7349 7095 6967 5984\r\n",
                "0\r\n"
            ],
            [
                "79 5464 64574\r\n3800 2020 2259 503 4922 975 5869 6140 3808 2635 3420 992 4683 3748 5732 4787 6564 3302 6153 4955 2958 6107 2875 3449 1755 5029 5072 5622 2139 1892 4640 1199 3918 1061 4074 5098 4939 5496 2019 356 5849 4796 4446 4633 1386 1129 3351 639 2040 3769 4106 4048 3959 931 3457 1938 4587 6438 2938 132 2434 3727 3926 2135 1665 2871 2798 6359 989 6220 97 2116 2048 251 4264 3841 4428 5286 1914\r\n",
                "97\r\n"
            ],
            [
                "95 97575868 5\r\n4612 1644 3613 5413 5649 2419 5416 3926 4610 4419 2796 5062 2112 1071 3790 4220 3955 2142 4638 2832 2702 2115 2045 4085 3599 2452 5495 4767 1368 2344 4625 4132 5755 5815 2581 6259 1330 4938 815 5430 1628 3108 4342 3692 2928 1941 3714 4498 4471 4842 1822 867 3395 2587 3372 6394 6423 3728 3720 6525 4296 2091 4400 994 1321 3454 5285 2989 1755 504 5019 2629 3834 3191 6254 844 5338 615 5608 4898 2497 4482 850 5308 2763 1943 6515 5459 5556 829 4646 5258 2019 5582 1226\r\n",
                "815\r\n"
            ],
            [
                "77 678686 878687\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "2 7597 8545\r\n74807 22362\r\n",
                "0\r\n"
            ],
            [
                "3 75579860 8570575\r\n10433 30371 14228\r\n",
                "10433\r\n"
            ]
        ]
    }
]