[
    {
        "name": "Hanoi Factory",
        "description": "Of course you have heard the famous task about Hanoi Towers, but did you know\nthat there is a special factory producing the rings for this wonderful game?\nOnce upon a time, the ruler of the ancient Egypt ordered the workers of Hanoi\nFactory to create as high tower as possible. They were not ready to serve such\na strange order so they had to create this new tower using already produced\nrings. There are n rings in factory's stock. The i-th ring has inner radius\nai, outer radius bi and height hi. The goal is to select some subset of rings\nand arrange them such that the following conditions are satisfied: Outer\nradiuses form a non-increasing sequence, i.e. one can put the j-th ring on the\ni-th ring only if bj \u2264 bi. Rings should not fall one into the the other. That\nmeans one can place ring j on the ring i only if bj > ai. The total height of\nall rings used should be maximum possible. Input The first line of the input\ncontains a single integer n (1 \u2264 n \u2264 100 000) \u2014 the number of rings in\nfactory's stock. The i-th of the next n lines contains three integers ai, bi\nand hi (1 \u2264 ai, bi, hi \u2264 10^9, bi > ai) \u2014 inner radius, outer radius and the\nheight of the i-th ring respectively. Output Print one integer \u2014 the maximum\nheight of the tower that can be obtained. Examples Input 3 1 5 1 2 6 2 3 7 3\nOutput 6 Input 4 1 2 1 1 3 3 4 6 2 5 7 1 Output 4 Note In the first sample,\nthe optimal solution is to take all the rings and put them on each other in\norder 3, 2, 1. In the second sample, one can put the ring 3 on the ring 4 and\nget the tower of height 3, or put the ring 1 on the ring 2 and get the tower\nof height 4.\n\n",
        "cf_contest_id": 777,
        "cf_index": "E",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "dp",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 5 1\r\n2 6 2\r\n3 7 3\r\n",
                "6\r\n"
            ],
            [
                "4\r\n1 2 1\r\n1 3 3\r\n4 6 2\r\n5 7 1\r\n",
                "4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1 2 1\r\n",
                "1\r\n"
            ],
            [
                "5\r\n6 10 4\r\n9 20 19\r\n8 11 18\r\n18 20 1\r\n19 20 8\r\n",
                "50\r\n"
            ],
            [
                "5\r\n21 25 26\r\n14 30 22\r\n6 29 30\r\n13 23 21\r\n10 11 5\r\n",
                "99\r\n"
            ],
            [
                "5\r\n45 73 26\r\n59 73 29\r\n30 74 9\r\n59 63 72\r\n73 84 79\r\n",
                "215\r\n"
            ],
            [
                "9\r\n1 5 1000000000\r\n23 27 834000000\r\n6 10 1000000000\r\n26 30 234500000\r\n5 9 1000000000\r\n2 6 1000000000\r\n3 7 1000000000\r\n24 29 132400000\r\n25 28 23400000\r\n",
                "5000000000\r\n"
            ],
            [
                "10\r\n312 838 197\r\n713 996 320\r\n427 767 520\r\n490 800 465\r\n575 681 995\r\n781 843 908\r\n545 615 400\r\n36 667 129\r\n85 641 27\r\n396 539 350\r\n",
                "3961\r\n"
            ],
            [
                "15\r\n3 14 531\r\n28 29 17\r\n7 10 512\r\n20 21 264\r\n8 9 52\r\n16 19 759\r\n1 30 391\r\n2 27 861\r\n17 18 357\r\n15 22 428\r\n24 25 588\r\n23 26 221\r\n6 13 413\r\n11 12 667\r\n4 5 513\r\n",
                "2863\r\n"
            ],
            [
                "15\r\n7 8 940377876\r\n5 26 602265950\r\n18 19 193066910\r\n23 24 754826087\r\n2 3 555140266\r\n6 25 830980693\r\n27 28 636793242\r\n20 21 809913904\r\n1 30 868457738\r\n10 17 698644057\r\n9 22 443624155\r\n13 16 941205435\r\n14 15 42481040\r\n4 29 305295425\r\n11 12 765921496\r\n",
                "4732954493\r\n"
            ],
            [
                "15\r\n10 11 552706512\r\n24 25 708893662\r\n18 19 731182554\r\n12 13 110677554\r\n28 29 938846280\r\n1 30 898802132\r\n16 17 89748120\r\n2 3 85944653\r\n6 7 141693677\r\n14 15 432017874\r\n4 5 498032180\r\n22 23 906122257\r\n8 9 561584264\r\n20 21 98373932\r\n26 27 195705303\r\n",
                "1837648412\r\n"
            ],
            [
                "15\r\n1 30 902215054\r\n12 13 463027806\r\n9 14 846985104\r\n20 21 770345346\r\n17 22 514758030\r\n2 15 438137019\r\n18 19 278467923\r\n16 29 613043570\r\n10 11 765879041\r\n6 7 960155075\r\n26 27 323764310\r\n24 25 724736351\r\n4 5 107208241\r\n3 8 992951987\r\n23 28 70277204\r\n",
                "3293459135\r\n"
            ],
            [
                "3\r\n1 3 1\r\n4 5 1\r\n2 5 1\r\n",
                "3\r\n"
            ],
            [
                "5\r\n1 3 1000000000\r\n4 5 1000000000\r\n2 5 1000000000\r\n4 6 1000000000\r\n5 6 1000000000\r\n",
                "5000000000\r\n"
            ]
        ]
    }
]