[
    {
        "name": "Addition Robot",
        "description": "Adding two numbers several times is a time-consuming task, so you want to\nbuild a robot. The robot should have a string \n    S = S_1 S_2 \n    \u2026 S_N\n of\n\n    N\n characters on its memory that represents addition instructions. Each\ncharacter of the string, \n    S_i\n, is either 'A' or 'B'. You want to be able\nto give \n    Q\n commands to the robot, each command is either of the following\ntypes: 1 \n    L\n \n    R\n. The robot should toggle all the characters of\n\n    S_i\n where \n    L \n    \u2264 i \n    \u2264 R\n. Toggling a character means changing\nit to 'A' if it was previously 'B', or changing it to 'B' if it was previously\n'A'. 2 \n    L\n \n    R\n \n    A\n \n    B\n. The robot should call \n    f(L, R, A,\n    B)\n and return two integers as defined in the following pseudocode: function\nf(L, R, A, B): FOR i from L to R if S[i] = 'A' A = A + B else B = A + B return\n(A, B) You want to implement the robot's expected behavior. Input Input begins\nwith a line containing two integers: \n    N\n \n    Q\n (\n    1 \n    \u2264 N, Q \n    \u2264\n    100\n     000\n) representing the number of characters in the robot's memory and\nthe number of commands, respectively. The next line contains a string \n    S\n\ncontaining \n    N\n characters (each either 'A' or 'B') representing the\ninitial string in the robot's memory. The next \n    Q\n lines each contains a\ncommand of the following types. 1 \n    L\n \n    R\n (\n    1 \n    \u2264 L \n    \u2264 R \n    \u2264\n    N\n) 2 \n    L\n \n    R\n \n    A\n \n    B\n (\n    1 \n    \u2264 L \n    \u2264 R \n    \u2264 N\n; \n    0\n    \n    \u2264 A, B \n    \u2264 10^9\n) There is at least one command of the second type.\nOutput For each command of the second type in the same order as input, output\nin a line two integers (separated by a single space), the value of \n    A\n and\n\n    B\n returned by \n    f(L, R, A, B)\n, respectively. As this output can be\nlarge, you need to modulo the output by \n    1\n     000\n     000\n     007\n. Example\nInput 5 3 ABAAA 2 1 5 1 1 1 3 5 2 2 5 0 1000000000 Output 11 3 0 1000000000\nNote Explanation for the sample input/output #1 For the first command, calling\n\n    f(L, R, A, B)\n causes the following: Initially, \n    A = 1\n and \n    B =\n    1\n. At the end of \n    i = 1\n, \n    A = 2\n and \n    B = 1\n. At the end of\n\n    i = 2\n, \n    A = 2\n and \n    B = 3\n. At the end of \n    i = 3\n, \n    A =\n    5\n and \n    B = 3\n. At the end of \n    i = 4\n, \n    A = 8\n and \n    B = 3\n.\nAt the end of \n    i = 5\n, \n    A = 11\n and \n    B = 3\n. Therefore, \n    f(L, R,\n    A, B)\n will return \n    (11, 3)\n.For the second command, string \n    S\n will\nbe updated to \"ABBBB\". For the third command, the value of \n    A\n will always\nbe \n    0\n and the value of \n    B\n will always be\n\n    1\n     000\n     000\n     000\n. Therefore, \n    f(L, R, A, B)\n will return\n\n    (0, 1\n     000\n     000\n     000)\n.\n\n",
        "cf_contest_id": 1252,
        "cf_index": "K",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "math",
            "matrices"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]