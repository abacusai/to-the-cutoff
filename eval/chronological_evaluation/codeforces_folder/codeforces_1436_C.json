[
    {
        "name": "Binary Search",
        "description": "Andrey thinks he is truly a successful developer, but in reality he didn't\nknow about the binary search algorithm until recently. After reading some\nliterature Andrey understood that this algorithm allows to quickly find a\ncertain number \n    x\n in an array. For an array \n    a\n indexed from zero,\nand an integer \n    x\n the pseudocode of the algorithm is as follows: Note\nthat the elements of the array are indexed from zero, and the division is done\nin integers (rounding down). Andrey read that the algorithm only works if the\narray is sorted. However, he found this statement untrue, because there\ncertainly exist unsorted arrays for which the algorithm find \n    x\n! Andrey\nwants to write a letter to the book authors, but before doing that he must\nconsider the permutations of size \n    n\n such that the algorithm finds\n\n    x\n in them. A permutation of size \n    n\n is an array consisting of\n\n    n\n distinct integers between \n    1\n and \n    n\n in arbitrary order. Help\nAndrey and find the number of permutations of size \n    n\n which contain\n\n    x\n at position \n    pos\n and for which the given implementation of the\nbinary search algorithm finds \n    x\n (returns true). As the result may be\nextremely large, print the remainder of its division by \n    10^9+7\n. Input\nThe only line of input contains integers \n    n\n, \n    x\n and \n    pos\n (\n    1\n    \n    \u2264 x \n    \u2264 n \n    \u2264 1000\n, \n    0 \n    \u2264 pos \n    \u2264 n - 1\n) \u2014 the required\nlength of the permutation, the number to search, and the required position of\nthat number, respectively. Output Print a single number \u2014 the remainder of the\ndivision of the number of valid permutations by \n    10^9+7\n. Examples Input 4\n1 2 Output 6 Input 123 42 24 Output 824071958 Note All possible permutations\nin the first test case: \n    (2, 3, 1, 4)\n, \n    (2, 4, 1, 3)\n, \n    (3, 2, 1,\n    4)\n, \n    (3, 4, 1, 2)\n, \n    (4, 2, 1, 3)\n, \n    (4, 3, 1, 2)\n.\n\n",
        "cf_contest_id": 1436,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "combinatorics"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 1 2\r\n",
                "6\r\n"
            ],
            [
                "123 42 24\r\n",
                "824071958\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 0\r\n",
                "1\r\n"
            ],
            [
                "1000 501 501\r\n",
                "646597996\r\n"
            ],
            [
                "1000 999 799\r\n",
                "0\r\n"
            ],
            [
                "2 1 1\r\n",
                "1\r\n"
            ],
            [
                "2 2 0\r\n",
                "0\r\n"
            ],
            [
                "3 1 2\r\n",
                "0\r\n"
            ],
            [
                "3 2 2\r\n",
                "1\r\n"
            ],
            [
                "3 3 1\r\n",
                "0\r\n"
            ],
            [
                "4 2 0\r\n",
                "2\r\n"
            ],
            [
                "4 3 2\r\n",
                "2\r\n"
            ],
            [
                "4 4 3\r\n",
                "6\r\n"
            ],
            [
                "7 1 1\r\n",
                "720\r\n"
            ],
            [
                "7 7 6\r\n",
                "720\r\n"
            ],
            [
                "7 2 4\r\n",
                "120\r\n"
            ],
            [
                "7 4 4\r\n",
                "216\r\n"
            ],
            [
                "8 4 1\r\n",
                "1440\r\n"
            ],
            [
                "8 1 5\r\n",
                "0\r\n"
            ],
            [
                "8 8 7\r\n",
                "5040\r\n"
            ],
            [
                "8 7 6\r\n",
                "720\r\n"
            ],
            [
                "8 3 0\r\n",
                "1440\r\n"
            ],
            [
                "9 1 7\r\n",
                "0\r\n"
            ],
            [
                "9 9 5\r\n",
                "0\r\n"
            ],
            [
                "9 5 5\r\n",
                "5760\r\n"
            ],
            [
                "9 4 4\r\n",
                "7200\r\n"
            ],
            [
                "9 3 3\r\n",
                "8640\r\n"
            ],
            [
                "10 1 1\r\n",
                "362880\r\n"
            ],
            [
                "10 10 9\r\n",
                "362880\r\n"
            ],
            [
                "10 5 5\r\n",
                "43200\r\n"
            ],
            [
                "10 3 7\r\n",
                "70560\r\n"
            ],
            [
                "10 4 4\r\n",
                "90720\r\n"
            ],
            [
                "10 6 6\r\n",
                "43200\r\n"
            ],
            [
                "10 7 7\r\n",
                "90720\r\n"
            ],
            [
                "10 9 5\r\n",
                "0\r\n"
            ],
            [
                "74 16 54\r\n",
                "625981152\r\n"
            ],
            [
                "63 15 45\r\n",
                "581829795\r\n"
            ],
            [
                "54 4 47\r\n",
                "911648281\r\n"
            ],
            [
                "92 22 62\r\n",
                "628152721\r\n"
            ],
            [
                "82 15 14\r\n",
                "187724629\r\n"
            ],
            [
                "91 60 48\r\n",
                "233776714\r\n"
            ],
            [
                "91 51 5\r\n",
                "660447677\r\n"
            ],
            [
                "70 45 16\r\n",
                "578976138\r\n"
            ],
            [
                "61 21 16\r\n",
                "516359078\r\n"
            ],
            [
                "61 29 15\r\n",
                "252758304\r\n"
            ],
            [
                "69 67 68\r\n",
                "736622722\r\n"
            ],
            [
                "59 40 1\r\n",
                "384105577\r\n"
            ],
            [
                "98 86 39\r\n",
                "132656801\r\n"
            ],
            [
                "97 89 29\r\n",
                "673334741\r\n"
            ],
            [
                "78 66 16\r\n",
                "703501645\r\n"
            ],
            [
                "777 254 720\r\n",
                "57449468\r\n"
            ],
            [
                "908 216 521\r\n",
                "601940707\r\n"
            ],
            [
                "749 158 165\r\n",
                "849211382\r\n"
            ],
            [
                "535 101 250\r\n",
                "111877808\r\n"
            ],
            [
                "665 5 305\r\n",
                "400272219\r\n"
            ],
            [
                "856 406 675\r\n",
                "663368144\r\n"
            ],
            [
                "697 390 118\r\n",
                "844062514\r\n"
            ],
            [
                "539 246 0\r\n",
                "410139856\r\n"
            ],
            [
                "669 380 461\r\n",
                "921432102\r\n"
            ],
            [
                "954 325 163\r\n",
                "917113541\r\n"
            ],
            [
                "646 467 58\r\n",
                "214437899\r\n"
            ],
            [
                "542 427 258\r\n",
                "830066531\r\n"
            ],
            [
                "562 388 191\r\n",
                "935998075\r\n"
            ],
            [
                "958 817 269\r\n",
                "513948977\r\n"
            ],
            [
                "1000 888 888\r\n",
                "644649893\r\n"
            ],
            [
                "1000 2 2\r\n",
                "22779421\r\n"
            ],
            [
                "534 376 180\r\n",
                "984450056\r\n"
            ],
            [
                "1000 1 1\r\n",
                "756641425\r\n"
            ],
            [
                "1000 3 3\r\n",
                "606772288\r\n"
            ],
            [
                "1000 500 500\r\n",
                "646597996\r\n"
            ],
            [
                "1000 1000 999\r\n",
                "756641425\r\n"
            ],
            [
                "1000 501 50\r\n",
                "636821580\r\n"
            ],
            [
                "6 4 3\r\n",
                "12\r\n"
            ],
            [
                "3 2 1\r\n",
                "1\r\n"
            ],
            [
                "100 5 50\r\n",
                "469732450\r\n"
            ],
            [
                "999 490 499\r\n",
                "998308393\r\n"
            ],
            [
                "7 3 3\r\n",
                "288\r\n"
            ],
            [
                "10 7 5\r\n",
                "4320\r\n"
            ],
            [
                "123 1 24\r\n",
                "0\r\n"
            ],
            [
                "5 5 2\r\n",
                "0\r\n"
            ]
        ]
    }
]