[
    {
        "name": "Card Game",
        "description": "Consider a game with \n    n\n cards (\n    n\n is even). Each card has a number\nwritten on it, between \n    1\n and \n    n\n. All numbers on the cards are\ndifferent. We say that a card with number \n    x\n is stronger than a card with\nnumber \n    y\n if \n    x > y\n. Two players, Alex and Boris, play this game. In\nthe beginning, each of them receives exactly \n    n/2\n cards, so\neach card belongs to exactly one player. Then, they take turns. Alex goes\nfirst, then Boris, then Alex again, and so on. On a player's turn, he must\nplay exactly one of his cards. Then, if the opponent doesn't have any cards\nstronger than the card played, the opponent loses, and the game ends.\nOtherwise, the opponent has to play a stronger card (exactly one card as\nwell). These two cards are removed from the game, and the turn ends. If there\nare no cards left, the game ends in a draw; otherwise it's the opponent's\nturn. Consider all possible ways to distribute the cards between two players,\nso that each of them receives exactly half of the cards. You have to calculate\nthree numbers: the number of ways to distribute the cards so that Alex wins;\nthe number of ways to distribute the cards so that Boris wins; the number of\nways to distribute the cards so that the game ends in a draw. You may assume\nthat both players play optimally (i. e. if a player can win no matter how his\nopponent plays, he wins). Two ways to distribute the cards are different if\nthere is at least one card such that, in one of these ways, it is given to\nAlex, and in the other way, it is given to Boris. For example, suppose \n    n =\n    4\n, Alex receives the cards \n    [2, 3]\n, and Boris receives the cards\n\n    [1, 4]\n. Then the game may go as follows: if Alex plays the card \n    2\n,\nthen Boris has to respond with the card \n    4\n. Then, Alex's turn ends, and\nBoris' turn starts. Boris has only one card left, which is \n    1\n; he plays\nit, and Alex responds with the card \n    3\n. So, the game ends in a draw; if\nAlex plays the card \n    3\n, then Boris has to respond with the card \n    4\n.\nThen, Alex's turn ends, and Boris' turn starts. Boris has only one card left,\nwhich is \n    1\n; he plays it, and Alex responds with the card \n    2\n. So,\nthe game ends in a draw. So, in this case, the game ends in a draw. Input The\nfirst line contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 30\n) \u2014 the\nnumber of test cases. Then, \n    t\n lines follow. The \n    i\n-th line contains\none even integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 60\n). Output For each test\ncase, print three integers: the number of ways to distribute the cards so that\nAlex wins; the number of ways to distribute the cards so that Boris wins; the\nnumber of ways to distribute the cards so that the game ends in a draw. Since\nthe answers can be large, print them modulo \n    998244353\n. Example Input 5 2\n4 6 8 60 Output 1 0 1 3 2 1 12 7 1 42 27 1 341102826 248150916 1 Note In the\nfirst test case, Alex wins if he receives the card \n    2\n (he plays it, and\nBoris cannot respond). If Alex receives the card \n    1\n, the game ends in a\ndraw. In the second test case: Alex wins if he receives the cards \n    [3,\n    4]\n, \n    [2, 4]\n or \n    [1, 4]\n; Boris wins if Alex receives the cards\n\n    [1, 2]\n or \n    [1, 3]\n; the game ends in a draw if Alex receives the\ncards \n    [2, 3]\n.\n\n",
        "cf_contest_id": 1739,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "constructive algorithms",
            "dp",
            "games"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n2\r\n4\r\n6\r\n8\r\n60\r\n",
                "1 0 1\r\n3 2 1\r\n12 7 1\r\n42 27 1\r\n341102826 248150916 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n4\r\n2\r\n",
                "3 2 1\r\n1 0 1\r\n"
            ]
        ]
    }
]