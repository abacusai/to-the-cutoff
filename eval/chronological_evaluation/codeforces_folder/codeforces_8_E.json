[
    {
        "name": "Beads",
        "description": "One Martian boy called Zorg wants to present a string of beads to his friend\nfrom the Earth \u2014 Masha. He knows that Masha likes two colours: blue and red, \u2014\nand right in the shop where he has come, there is a variety of adornments with\nbeads of these two colours. All the strings of beads have a small fastener,\nand if one unfastens it, one might notice that all the strings of beads in the\nshop are of the same length. Because of the peculiarities of the Martian\neyesight, if Zorg sees one blue-and-red string of beads first, and then the\nother with red beads instead of blue ones, and blue \u2014 instead of red, he\nregards these two strings of beads as identical. In other words, Zorg regards\nas identical not only those strings of beads that can be derived from each\nother by the string turnover, but as well those that can be derived from each\nother by a mutual replacement of colours and/or by the string turnover. It is\nknown that all Martians are very orderly, and if a Martian sees some amount of\nobjects, he tries to put them in good order. Zorg thinks that a red bead is\nsmaller than a blue one. Let's put 0 for a red bead, and 1 \u2014 for a blue one.\nFrom two strings the Martian puts earlier the string with a red bead in the\ni-th position, providing that the second string has a blue bead in the i-th\nposition, and the first two beads i - 1 are identical. At first Zorg unfastens\nall the strings of beads, and puts them into small heaps so, that in each heap\nstrings are identical, in his opinion. Then he sorts out the heaps and chooses\nthe minimum string in each heap, in his opinion. He gives the unnecassary\nstrings back to the shop assistant and says he doesn't need them any more.\nThen Zorg sorts out the remaining strings of beads and buys the string with\nindex k. All these manupulations will take Zorg a lot of time, that's why he\nasks you to help and find the string of beads for Masha. Input The input file\ncontains two integers n and k (2 \u2264 n \u2264 50;1 \u2264 k \u2264 10^16) \u2014the length of a\nstring of beads, and the index of the string, chosen by Zorg. Output Output\nthe k-th string of beads, putting 0 for a red bead, and 1 \u2014 for a blue one. If\nit s impossible to find the required string, output the only number -1.\nExamples Input 4 4 Output 0101 Note Let's consider the example of strings of\nlength 4 \u2014 0001, 0010, 0011, 0100, 0101, 0110, 0111, 1000, 1001, 1010, 1011,\n1100, 1101, 1110. Zorg will divide them into heaps: 0001, 0111, 1000, 1110,\n0010, 0100, 1011, 1101, 0011, 1100, 0101, 1010, 0110, 1001. Then he\nwill choose the minimum strings of beads in each heap: 0001, 0010, 0011, 0101,\n0110. The forth string \u2014 0101.\n\n",
        "cf_contest_id": 8,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "graphs"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "4 4\r\n",
                "0101"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n",
                "01"
            ],
            [
                "2 2\r\n",
                "-1"
            ],
            [
                "3 1\r\n",
                "001"
            ],
            [
                "3 2\r\n",
                "010"
            ],
            [
                "3 3\r\n",
                "-1"
            ],
            [
                "4 1\r\n",
                "0001"
            ],
            [
                "4 2\r\n",
                "0010"
            ],
            [
                "4 3\r\n",
                "0011"
            ],
            [
                "4 4\r\n",
                "0101"
            ],
            [
                "4 5\r\n",
                "0110"
            ],
            [
                "4 6\r\n",
                "-1"
            ],
            [
                "5 1\r\n",
                "00001"
            ],
            [
                "5 2\r\n",
                "00010"
            ],
            [
                "5 3\r\n",
                "00011"
            ],
            [
                "5 4\r\n",
                "00100"
            ],
            [
                "5 5\r\n",
                "00101"
            ],
            [
                "5 6\r\n",
                "00110"
            ],
            [
                "5 7\r\n",
                "01001"
            ],
            [
                "5 8\r\n",
                "01010"
            ],
            [
                "5 9\r\n",
                "01110"
            ],
            [
                "5 10\r\n",
                "-1"
            ],
            [
                "6 1\r\n",
                "000001"
            ],
            [
                "6 2\r\n",
                "000010"
            ],
            [
                "6 3\r\n",
                "000011"
            ],
            [
                "6 4\r\n",
                "000100"
            ],
            [
                "6 5\r\n",
                "000101"
            ],
            [
                "6 6\r\n",
                "000110"
            ],
            [
                "6 7\r\n",
                "000111"
            ],
            [
                "6 8\r\n",
                "001001"
            ],
            [
                "6 9\r\n",
                "001010"
            ],
            [
                "6 10\r\n",
                "001011"
            ],
            [
                "6 11\r\n",
                "001100"
            ],
            [
                "6 12\r\n",
                "001101"
            ],
            [
                "6 13\r\n",
                "001110"
            ],
            [
                "6 14\r\n",
                "010001"
            ],
            [
                "6 15\r\n",
                "010010"
            ],
            [
                "6 16\r\n",
                "010101"
            ],
            [
                "6 17\r\n",
                "010110"
            ],
            [
                "6 18\r\n",
                "011001"
            ],
            [
                "6 19\r\n",
                "011110"
            ],
            [
                "6 20\r\n",
                "-1"
            ],
            [
                "7 15\r\n",
                "0010001"
            ],
            [
                "8 38\r\n",
                "00101011"
            ],
            [
                "9 122\r\n",
                "010110110"
            ],
            [
                "10 204\r\n",
                "0100001001"
            ],
            [
                "11 233\r\n",
                "00100000110"
            ],
            [
                "12 838\r\n",
                "010001101110"
            ],
            [
                "13 1395\r\n",
                "0011011100001"
            ],
            [
                "15 7182\r\n",
                "010100100010110"
            ],
            [
                "49 40394027154620\r\n",
                "0001001111101011001111110101110100100000001011001"
            ],
            [
                "49 60751526478082\r\n",
                "0001111110000000110111111000011100100101011101101"
            ],
            [
                "49 47052263674145\r\n",
                "0001011110010000111110011010010011001001000001110"
            ],
            [
                "49 112040518472135\r\n",
                "0100011000110011010111000100101001100101110010010"
            ],
            [
                "49 51848130384485\r\n",
                "0001101001000110010000111010110110011111010000011"
            ],
            [
                "49 125654751631398\r\n",
                "0101011000011000110101000100101001000001111011001"
            ],
            [
                "49 36309684494664\r\n",
                "0001000110111101110000010011001100010001010001001"
            ],
            [
                "49 130173238599396\r\n",
                "0101110011101110010011111111010101001011111101001"
            ],
            [
                "49 1277796700834\r\n",
                "0000000010010101000110000010001111111010111011010"
            ],
            [
                "49 140149194635018\r\n",
                "0111011110111001011010110100111001100100111000001"
            ],
            [
                "50 250144743882708\r\n",
                "01010101010010111011000010110101001100000110000101"
            ],
            [
                "50 107064605474749\r\n",
                "00011011001111100010010111111110001010101001100010"
            ],
            [
                "50 57129577186267\r\n",
                "00001101101110011100010111101100101101111110100110"
            ],
            [
                "50 161245081749292\r\n",
                "00101100010110000001101000110001001101000011000011"
            ],
            [
                "50 48522499712553\r\n",
                "00001011100011011110000110010110011001011100111011"
            ],
            [
                "50 264823400156610\r\n",
                "01100000110111100000001000001110010101010011111110"
            ],
            [
                "50 5176185247152\r\n",
                "00000001001011101011000100010001010111011000010101"
            ],
            [
                "50 280853334157361\r\n",
                "01111001111111000000110101011110110100000010000001"
            ],
            [
                "50 8840088596980\r\n",
                "00000010000001101010101001101010111000110010100110"
            ],
            [
                "50 280700827717974\r\n",
                "01111001010010011000001011001100001101000110111110"
            ]
        ]
    }
]