[
    {
        "name": "Handshakes",
        "description": "On February, 30th n students came in the Center for Training Olympiad\nProgrammers (CTOP) of the Berland State University. They came one by one, one\nafter another. Each of them went in, and before sitting down at his desk,\ngreeted with those who were present in the room by shaking hands. Each of the\nstudents who came in stayed in CTOP until the end of the day and never left.\nAt any time any three students could join together and start participating in\na team contest, which lasted until the end of the day. The team did not\ndistract from the contest for a minute, so when another student came in and\ngreeted those who were present, he did not shake hands with the members of the\ncontest writing team. Each team consisted of exactly three students, and each\nstudent could not become a member of more than one team. Different teams could\nstart writing contest at different times. Given how many present people shook\nthe hands of each student, get a possible order in which the students could\nhave come to CTOP. If such an order does not exist, then print that this is\nimpossible. Please note that some students could work independently until the\nend of the day, without participating in a team contest. Input The first line\ncontains integer n (1 \u2264 n \u2264 2\u00b710^5) \u2014 the number of students who came to CTOP.\nThe next line contains n integers a1, a2, ..., an (0 \u2264 ai < n), where ai is\nthe number of students with who the i-th student shook hands. Output If the\nsought order of students exists, print in the first line \"Possible\" and in the\nsecond line print the permutation of the students' numbers defining the order\nin which the students entered the center. Number i that stands to the left of\nnumber j in this permutation means that the i-th student came earlier than the\nj-th student. If there are multiple answers, print any of them. If the sought\norder of students doesn't exist, in a single line print \"Impossible\". Examples\nInput 5 2 1 3 0 1 Output Possible 4 5 1 3 2 Input 9 0 2 3 4 1 1 0 2 2 Output\nPossible 7 5 2 1 6 8 3 4 9 Input 4 0 2 1 1 Output Impossible Note In the first\nsample from the statement the order of events could be as follows: student 4\ncomes in (a4 = 0), he has no one to greet; student 5 comes in (a5 = 1), he\nshakes hands with student 4; student 1 comes in (a1 = 2), he shakes hands with\ntwo students (students 4, 5); student 3 comes in (a3 = 3), he shakes hands\nwith three students (students 4, 5, 1); students 4, 5, 3 form a team and start\nwriting a contest; student 2 comes in (a2 = 1), he shakes hands with one\nstudent (number 1). In the second sample from the statement the order of\nevents could be as follows: student 7 comes in (a7 = 0), he has nobody to\ngreet; student 5 comes in (a5 = 1), he shakes hands with student 7; student 2\ncomes in (a2 = 2), he shakes hands with two students (students 7, 5); students\n7, 5, 2 form a team and start writing a contest; student 1 comes in(a1 = 0),\nhe has no one to greet (everyone is busy with the contest); student 6 comes in\n(a6 = 1), he shakes hands with student 1; student 8 comes in (a8 = 2), he\nshakes hands with two students (students 1, 6); student 3 comes in (a3 = 3),\nhe shakes hands with three students (students 1, 6, 8); student 4 comes in (a4\n= 4), he shakes hands with four students (students 1, 6, 8, 3); students 8, 3,\n4 form a team and start writing a contest; student 9 comes in (a9 = 2), he\nshakes hands with two students (students 1, 6). In the third sample from the\nstatement the order of events is restored unambiguously: student 1 comes in\n(a1 = 0), he has no one to greet; student 3 comes in (or student 4) (a3 = a4 =\n1), he shakes hands with student 1; student 2 comes in (a2 = 2), he shakes\nhands with two students (students 1, 3 (or 4)); the remaining student 4 (or\nstudent 3), must shake one student's hand (a3 = a4 = 1) but it is impossible\nas there are only two scenarios: either a team formed and he doesn't greet\nanyone, or he greets all the three present people who work individually.\n\n",
        "cf_contest_id": 534,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2 1 3 0 1\r\n",
                "Possible\r\n 4 5 1 3 2\r\n"
            ],
            [
                "9\r\n0 2 3 4 1 1 0 2 2\r\n",
                "Possible\r\n 7 6 9 3 4 8 1 5 2\r\n"
            ],
            [
                "4\r\n0 2 1 1\r\n",
                "Impossible\r\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n1 0 2 1 0\r\n",
                "Possible\r\n 5 4 3 2 1\r\n"
            ],
            [
                "1\r\n0\r\n",
                "Possible\r\n 1\r\n"
            ],
            [
                "5\r\n3 0 4 1 2\r\n",
                "Possible\r\n 2 4 5 1 3\r\n"
            ],
            [
                "3\r\n1 0 0\r\n",
                "Impossible\r\n"
            ],
            [
                "7\r\n3 0 0 4 2 2 1\r\n",
                "Possible\r\n 3 7 6 1 4 5 2\r\n"
            ],
            [
                "10\r\n1 0 2 3 3 0 4 4 2 5\r\n",
                "Possible\r\n 6 1 9 5 8 10 4 7 3 2\r\n"
            ],
            [
                "7\r\n2 4 3 5 1 6 0\r\n",
                "Possible\r\n 7 5 1 3 2 4 6\r\n"
            ],
            [
                "10\r\n6 2 8 1 4 5 7 3 9 3\r\n",
                "Impossible\r\n"
            ],
            [
                "5\r\n2 0 3 1 1\r\n",
                "Possible\r\n 2 5 1 3 4\r\n"
            ],
            [
                "7\r\n2 2 3 3 4 0 1\r\n",
                "Possible\r\n 6 7 2 4 5 1 3\r\n"
            ],
            [
                "11\r\n3 1 1 1 2 2 0 0 2 1 3\r\n",
                "Possible\r\n 8 10 9 11 4 6 1 3 5 7 2\r\n"
            ],
            [
                "6\r\n0 1 2 1 2 0\r\n",
                "Possible\r\n 6 4 5 1 2 3\r\n"
            ],
            [
                "13\r\n1 2 0 4 2 1 0 2 0 0 2 3 1\r\n",
                "Possible\r\n 10 13 11 12 4 8 9 6 5 7 1 2 3\r\n"
            ],
            [
                "12\r\n1 1 0 2 1 1 2 2 0 2 0 0\r\n",
                "Possible\r\n 12 6 10 11 5 8 9 2 7 3 1 4\r\n"
            ],
            [
                "16\r\n4 7 7 9 1 10 8 3 2 5 11 0 9 9 8 6\r\n",
                "Possible\r\n 12 5 9 8 1 10 16 3 15 14 6 11 13 2 7 4\r\n"
            ],
            [
                "10\r\n3 4 5 2 7 1 3 0 6 5\r\n",
                "Possible\r\n 8 6 4 7 2 10 9 5 3 1\r\n"
            ],
            [
                "11\r\n1 1 3 2 2 2 0 1 0 1 3\r\n",
                "Possible\r\n 9 10 6 11 8 5 3 2 4 7 1\r\n"
            ],
            [
                "6\r\n2 0 2 0 1 1\r\n",
                "Possible\r\n 4 6 3 2 5 1\r\n"
            ],
            [
                "123\r\n114 105 49 11 115 106 92 74 101 86 39 116 5 48 87 19 40 25 22 42 111 75 84 68 57 119 46 41 23 58 90 102 3 10 78 108 2 21 122 121 120 64 85 32 34 71 4 110 36 30 18 81 52 76 47 33 54 45 29 17 100 27 70 31 89 99 61 6 9 53 20 35 0 79 112 55 96 51 16 62 72 26 44 15 80 82 8 109 14 63 28 43 60 1 113 59 91 103 65 88 94 12 95 104 13 77 69 98 97 24 83 50 73 37 118 56 66 93 117 38 67 107 7\r\n",
                "Possible\r\n 73 94 37 33 47 13 68 123 87 69 34 4 102 105 89 84 79 60 51 16 71 38 19 29 110 18 82 62 91 59 50 64 44 56 45 72 49 114 120 11 17 28 20 92 83 58 27 55 14 3 112 78 53 70 57 76 116 25 30 96 93 67 80 90 42 99 117 121 24 107 63 46 81 113 8 22 54 106 35 74 85 52 86 111 23 43 10 15 100 65 31 97 7 118 101 103 77 109 108 66 61 9 32 98 104 2 6 122 36 88 48 21 75 95 1 5 12 119 115 26 41 40 39\r\n"
            ],
            [
                "113\r\n105 36 99 43 3 100 60 28 24 46 53 31 50 18 2 35 52 84 30 81 51 108 19 93 1 39 62 79 61 97 27 87 65 90 57 16 80 111 56 102 95 112 8 25 44 10 49 26 70 54 41 22 106 107 63 59 67 33 68 11 12 82 40 89 58 109 92 71 4 69 37 14 48 103 77 64 87 110 66 55 98 23 13 38 15 6 75 78 29 88 74 96 9 91 85 20 42 0 17 86 5 104 76 7 73 32 34 47 101 83 45 21 94\r\n",
                "Impossible\r\n"
            ],
            [
                "54\r\n4 17 18 15 6 0 12 19 20 21 19 14 23 20 7 19 0 2 13 18 2 1 0 1 0 5 11 10 1 16 8 21 20 1 16 1 1 0 15 2 22 2 2 2 18 0 3 9 1 20 19 14 0 2\r\n",
                "Possible\r\n 53 49 54 47 1 26 5 15 31 48 28 27 7 19 52 39 35 2 45 51 50 32 41 13 10 16 33 20 11 14 3 8 9 4 30 12 46 37 44 38 36 43 25 34 42 23 29 40 17 24 21 6 22 18\r\n"
            ],
            [
                "124\r\n3 10 6 5 21 23 4 6 9 1 9 3 14 27 10 19 29 17 24 17 5 12 20 4 16 2 24 4 21 14 9 22 11 27 4 9 2 11 6 5 6 6 11 4 3 22 6 10 5 15 5 2 16 13 19 8 25 4 18 10 9 5 13 10 19 26 2 3 9 4 7 12 20 20 4 19 11 33 17 25 2 28 15 8 8 15 30 14 18 11 5 10 18 17 18 31 9 7 1 16 3 6 15 24 4 17 10 26 4 23 22 11 19 15 7 26 28 18 32 0 23 8 6 13\r\n",
                "Possible\r\n 120 99 81 101 109 91 123 115 122 97 107 112 72 124 88 114 100 106 118 113 74 29 111 121 104 80 116 34 117 17 87 96 119 78 82 108 14 57 66 27 46 110 19 32 6 5 76 73 95 65 23 93 55 94 89 16 79 59 53 20 103 25 18 86 63 30 83 54 13 50 92 90 22 64 77 69 60 43 61 48 38 36 15 33 31 2 85 11 98 84 9 71 56 102 105 62 47 75 51 42 70 49 41 58 40 39 44 21 8 35 4 3 28 67 68 24 52 45 7 37 12 10 26 1\r\n"
            ],
            [
                "69\r\n1 5 8 5 4 10 6 0 0 4 5 5 3 1 5 5 9 4 5 7 6 2 0 4 6 2 2 8 2 13 3 7 4 4 1 4 6 1 5 9 6 0 3 3 8 6 7 3 6 7 37 1 8 14 4 2 7 5 4 5 4 2 3 6 5 11 12 3 3\r\n",
                "Impossible\r\n"
            ],
            [
                "104\r\n1 0 0 0 2 6 4 8 1 4 2 11 2 0 2 0 0 1 2 0 5 0 3 6 8 5 0 5 1 2 8 1 2 8 9 2 0 4 1 0 2 1 9 5 1 7 7 6 1 0 6 2 3 2 2 0 8 3 9 7 1 7 0 2 3 5 0 5 6 10 0 1 1 2 8 4 4 10 3 4 10 2 1 6 7 1 7 2 1 9 1 0 1 1 2 1 11 2 6 0 2 2 9 7\r\n",
                "Possible\r\n 100 96 102 79 80 68 99 104 75 103 81 97 90 78 12 59 70 57 43 87 34 35 85 31 84 62 25 69 60 8 51 47 66 48 46 44 24 77 28 6 76 26 65 38 21 58 10 101 53 7 98 23 94 95 92 93 88 71 91 82 67 89 74 63 86 64 56 83 55 50 73 54 40 72 52 37 61 41 27 49 36 22 45 33 20 42 30 17 39 19 16 32 15 14 29 13 4 18 11 3 9 5 2 1\r\n"
            ],
            [
                "93\r\n5 10 0 2 0 3 4 21 17 9 13 2 16 11 10 0 13 5 8 14 10 0 6 19 20 8 12 1 8 11 19 7 8 3 8 10 12 2 9 1 10 5 4 9 4 15 5 8 16 11 10 17 11 3 12 7 9 10 1 7 6 4 10 8 9 10 9 18 9 9 4 5 11 2 12 10 11 9 17 12 1 6 8 15 13 2 11 6 7 10 3 5 12\r\n",
                "Possible\r\n 22 81 86 91 71 92 88 89 83 78 90 87 93 85 20 84 49 79 68 31 25 8 24 52 46 13 9 80 17 77 75 11 73 55 76 53 37 66 50 27 63 30 70 58 14 69 51 64 67 41 48 65 36 35 57 21 33 44 15 29 39 2 26 10 60 19 82 56 72 61 32 47 23 62 42 54 45 18 34 43 1 6 7 74 16 59 38 5 40 12 3 28 4\r\n"
            ],
            [
                "99\r\n6 13 9 8 5 12 1 6 13 12 11 15 2 5 10 12 13 9 13 4 8 10 11 11 7 2 9 2 13 10 3 0 12 11 14 12 9 9 11 9 1 11 7 12 8 9 6 10 13 14 0 8 8 10 12 8 9 14 5 12 4 9 7 10 8 7 12 14 13 0 10 10 8 12 10 12 6 14 11 10 1 5 8 11 10 13 10 11 7 4 3 3 2 11 8 9 13 12 4\r\n",
                "Possible\r\n 70 81 93 92 99 82 77 89 95 96 87 94 98 97 78 12 86 68 76 69 58 74 49 50 67 29 35 60 19 88 55 17 84 44 9 79 36 2 42 33 85 39 16 80 34 10 75 24 6 72 23 62 71 11 57 64 83 46 54 73 40 48 65 38 30 56 37 22 53 27 15 52 18 66 45 3 63 21 47 43 4 8 25 59 1 90 14 91 61 5 31 20 28 51 41 26 32 7 13\r\n"
            ],
            [
                "92\r\n0 0 2 0 1 1 2 1 2 0 2 1 1 2 2 0 1 1 0 2 1 2 1 1 3 2 2 2 2 0 1 2 1 0 0 0 1 1 0 3 0 1 0 1 2 1 0 2 2 1 2 1 0 0 1 1 2 1 2 0 0 1 2 2 0 2 0 0 2 1 1 2 1 0 2 2 4 0 0 0 2 0 1 1 0 2 0 2 0 1 2 1\r\n",
                "Possible\r\n 89 92 91 40 77 88 25 90 86 87 84 81 85 83 76 82 73 75 80 71 72 79 70 69 78 62 66 74 58 64 68 56 63 67 55 59 65 52 57 61 50 51 60 46 49 54 44 48 53 42 45 47 38 32 43 37 29 41 33 28 39 31 27 36 24 26 35 23 22 34 21 20 30 18 15 19 17 14 16 13 11 10 12 9 4 8 7 2 6 3 1 5\r\n"
            ],
            [
                "12\r\n0 1 2 3 4 5 6 7 8 0 1 2\r\n",
                "Possible\r\n 10 11 12 4 5 6 7 8 9 1 2 3\r\n"
            ]
        ]
    }
]