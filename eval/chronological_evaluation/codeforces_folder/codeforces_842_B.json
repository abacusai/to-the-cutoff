[
    {
        "name": "Gleb And Pizza",
        "description": "Gleb ordered pizza home. When the courier delivered the pizza, he was very\nupset, because several pieces of sausage lay on the crust, and he does not\nreally like the crust. The pizza is a circle of radius r and center at the\norigin. Pizza consists of the main part \u2014 circle of radius r - d with center\nat the origin, and crust around the main part of the width d. Pieces of\nsausage are also circles. The radius of the i -th piece of the sausage is ri,\nand the center is given as a pair (xi, yi). Gleb asks you to help determine\nthe number of pieces of sausage caught on the crust. A piece of sausage got on\nthe crust, if it completely lies on the crust. Input First string contains two\ninteger numbers r and d (0 \u2264 d < r \u2264 500) \u2014 the radius of pizza and the width\nof crust. Next line contains one integer number n \u2014 the number of pieces of\nsausage (1 \u2264 n \u2264 10^5). Each of next n lines contains three integer numbers\nxi, yi and ri ( - 500 \u2264 xi, yi \u2264 500, 0 \u2264 ri \u2264 500), where xi and yi are\ncoordinates of the center of i-th peace of sausage, ri \u2014 radius of i-th peace\nof sausage. Output Output the number of pieces of sausage that lay on the\ncrust. Examples Input 8 4 7 7 8 1 -7 3 2 0 2 1 0 -2 2 -3 -3 1 0 6 2 5 3 1\nOutput 2 Input 10 8 4 0 0 9 0 0 10 1 0 1 1 0 2 Output 0 Note Below is a\npicture explaining the first example. Circles of green color denote pieces of\nsausage lying on the crust.\n\n",
        "cf_contest_id": 842,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "geometry"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8 4\r\n7\r\n7 8 1\r\n-7 3 2\r\n0 2 1\r\n0 -2 2\r\n-3 -3 1\r\n0 6 2\r\n5 3 1\r\n",
                "2\r\n"
            ],
            [
                "10 8\r\n4\r\n0 0 9\r\n0 0 10\r\n1 0 1\r\n1 0 2\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 0\r\n1\r\n1 1 0\r\n",
                "0\r\n"
            ],
            [
                "3 0\r\n5\r\n3 0 0\r\n0 3 0\r\n-3 0 0\r\n0 -3 0\r\n3 0 1\r\n",
                "4\r\n"
            ],
            [
                "9 0\r\n5\r\n8 1 0\r\n8 2 0\r\n8 3 0\r\n-8 3 0\r\n-8 2 0\r\n",
                "0\r\n"
            ],
            [
                "10 2\r\n11\r\n1 1 0\r\n2 2 3\r\n3 3 0\r\n4 4 0\r\n5 5 0\r\n6 6 0\r\n7 7 4\r\n8 8 7\r\n9 9 3\r\n10 10 100\r\n9 0 1\r\n",
                "2\r\n"
            ],
            [
                "5 3\r\n1\r\n500 500 10\r\n",
                "0\r\n"
            ]
        ]
    }
]