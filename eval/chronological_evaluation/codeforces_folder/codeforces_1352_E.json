[
    {
        "name": "Special Elements",
        "description": "Pay attention to the non-standard memory limit in this problem. In order to\ncut off efficient solutions from inefficient ones in this problem, the time\nlimit is rather strict. Prefer to use compiled statically typed languages\n(e.g. C++). If you use Python, then submit solutions on PyPy. Try to write an\nefficient solution. The array \n    a=[a_1, a_2, \n    \u2026, a_n]\n (\n    1 \n    \u2264\n    a_i \n    \u2264 n\n) is given. Its element \n    a_i\n is called special if there\nexists a pair of indices \n    l\n and \n    r\n (\n    1 \n    \u2264 l < r \n    \u2264 n\n)\nsuch that \n    a_i = a_l + a_l+1 + \n    \u2026 + a_r\n. In other words, an\nelement is called special if it can be represented as the sum of two or more\nconsecutive elements of an array (no matter if they are special or not). Print\nthe number of special elements of the given array \n    a\n. For example, if\n\n    n=9\n and \n    a=[3,1,4,1,5,9,2,6,5]\n, then the answer is \n    5\n:\n\n    a_3=4\n is a special element, since \n    a_3=4=a_1+a_2=3+1\n; \n    a_5=5\n\nis a special element, since \n    a_5=5=a_2+a_3=1+4\n; \n    a_6=9\n is a special\nelement, since \n    a_6=9=a_1+a_2+a_3+a_4=3+1+4+1\n; \n    a_8=6\n is a special\nelement, since \n    a_8=6=a_2+a_3+a_4=1+4+1\n; \n    a_9=5\n is a special\nelement, since \n    a_9=5=a_2+a_3=1+4\n. Please note that some of the elements\nof the array \n    a\n may be equal \u2014 if several elements are equal and special,\nthen all of them should be counted in the answer. Input The first line\ncontains an integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of test\ncases in the input. Then \n    t\n test cases follow. Each test case is given in\ntwo lines. The first line contains an integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264\n    8000\n) \u2014 the length of the array \n    a\n. The second line contains integers\n\n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n). It is guaranteed\nthat the sum of the values of \n    n\n for all test cases in the input does not\nexceed \n    8000\n. Output Print \n    t\n numbers \u2014 the number of special\nelements for each of the given arrays. Example Input 5 9 3 1 4 1 5 9 2 6 5 3 1\n1 2 5 1 1 1 1 1 8 8 7 6 5 4 3 2 1 1 1 Output 5 1 0 4 0\n\n",
        "cf_contest_id": 1352,
        "cf_index": "E",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "5\r\n9\r\n3 1 4 1 5 9 2 6 5\r\n3\r\n1 1 2\r\n5\r\n1 1 1 1 1\r\n8\r\n8 7 6 5 4 3 2 1\r\n1\r\n1\r\n",
                "5\r\n1\r\n0\r\n4\r\n0\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n"
            ],
            [
                "7\r\n2\r\n1 1\r\n2\r\n1 2\r\n2\r\n2 1\r\n2\r\n2 2\r\n12\r\n5 8 10 1 1 10 7 3 12 3 3 7\r\n5\r\n2 1 3 1 3\r\n4\r\n4 3 4 3\r\n",
                "0\r\n0\r\n0\r\n0\r\n3\r\n2\r\n0\r\n"
            ]
        ]
    }
]