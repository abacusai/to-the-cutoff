[
    {
        "name": "Distributed Join",
        "description": "Piegirl was asked to implement two table join operation for distributed\ndatabase system, minimizing the network traffic. Suppose she wants to join two\ntables, A and B. Each of them has certain number of rows which are distributed\non different number of partitions. Table A is distributed on the first cluster\nconsisting of m partitions. Partition with index i has ai rows from A.\nSimilarly, second cluster containing table B has n partitions, i-th one having\nbi rows from B. In one network operation she can copy one row from any\npartition to any other partition. At the end, for each row from A and each row\nfrom B there should be a partition that has both rows. Determine the minimal\nnumber of network operations to achieve this. Input First line contains two\ninteger numbers, m and n (1 \u2264 m, n \u2264 10^5). Second line contains description\nof the first cluster with m space separated integers, ai (1 \u2264 ai \u2264 10^9).\nSimilarly, third line describes second cluster with n space separated\nintegers, bi (1 \u2264 bi \u2264 10^9). Output Print one integer \u2014 minimal number of\ncopy operations. Examples Input 2 2 2 6 3 100 Output 11 Input 2 3 10 10 1 1 1\nOutput 6 Note In the first example it makes sense to move all the rows to the\nsecond partition of the second cluster which is achieved in 2 + 6 + 3 = 11\noperations In the second example Piegirl can copy each row from B to the both\npartitions of the first cluster which needs 2\u00b73 = 6 copy operations.\n\n",
        "cf_contest_id": 457,
        "cf_index": "B",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 2\r\n2 6\r\n3 100\r\n",
                "11\r\n"
            ],
            [
                "2 3\r\n10 10\r\n1 1 1\r\n",
                "6\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 2\r\n888381664 866366630\r\n170399907 404233949\r\n",
                "1149267712\r\n"
            ],
            [
                "3 4\r\n337369924 278848730 654933675\r\n866361693 732544605 890800310 350303294\r\n",
                "3220361921\r\n"
            ],
            [
                "10 10\r\n510955240 684852706 455356451 284505713 595775142 646334608 563116339 941123613 818750895 516673753\r\n382626402 204542396 341363992 234231105 75079663 683639780 624391764 265169060 686304227 280991725\r\n",
                "8854660961\r\n"
            ],
            [
                "6 5\r\n45936257 8169878 14134346 26323055 65863745 50728147\r\n997339869 2970526 163305525 839524148 193404120\r\n",
                "781991027\r\n"
            ],
            [
                "5 4\r\n556840201 669601415 674042771 93322040 157280418\r\n253115131 933556803 294280580 169051325\r\n",
                "2867533881\r\n"
            ],
            [
                "5 7\r\n473347111 640932948 320036306 595696211 365475226\r\n347859328 553364017 687935743 145411543 689180757 696504973 783694820\r\n",
                "5515744163\r\n"
            ],
            [
                "8 8\r\n808147225 623333304 535665685 469385259 122918604 200681823 800211367 286974812\r\n85215517 983921829 274028967 567054904 144473212 964018990 177471567 73882806\r\n",
                "6133464042\r\n"
            ],
            [
                "10 10\r\n326151338 981287141 830123412 482457331 77554645 351237238 663827505 549778905 967488359 954617100\r\n238752550 787656851 393452025 837732771 522417885 876998499 195063055 325140429 546151936 403260186\r\n",
                "10329862020\r\n"
            ],
            [
                "10 10\r\n933168403 835157665 823216696 818565876 448948583 884328249 809244579 473034231 407137956 871269623\r\n653126539 145998557 644003076 138712151 839886312 479712343 709513279 138285801 858528549 643830064\r\n",
                "11622500129\r\n"
            ],
            [
                "10 10\r\n269584761 865524829 265226347 963092340 261501474 16861445 221090297 746538035 842020225 649641719\r\n49728483 423679832 107851851 179960003 345895125 400584885 460489835 377856735 506736683 676996548\r\n",
                "7667769112\r\n"
            ],
            [
                "10 10\r\n458278487 288667180 648471199 581765640 758405216 589361337 319325955 938498114 249892107 138299026\r\n57775135 470751607 454623764 556600014 141039336 225043834 692497485 517610562 635337211 56258907\r\n",
                "7840004002\r\n"
            ],
            [
                "5 6\r\n7780674 1861750 4491902 10256124 14362475\r\n1809567 5616386 1771573 2099536 1113026 3938402\r\n",
                "40738940\r\n"
            ],
            [
                "6 5\r\n40192277 37957130 22509015 95257198 6210193 16850057\r\n76289330 265203569 184343840 163207736 126924648\r\n",
                "769741424\r\n"
            ],
            [
                "6 5\r\n4689556 6609945 15705705 10301912 11245669 5844638\r\n440894622 898226832 22060902 222576920 53133033\r\n",
                "238386210\r\n"
            ],
            [
                "5 6\r\n284534195 993347068 628813225 512761241 835859363\r\n61567950 7311163 14322159 100466429 66443161 48573213\r\n",
                "1479270495\r\n"
            ],
            [
                "5 6\r\n574664105 497253985 200935113 926362846 223381305\r\n34188719 14075259 27219005 9682257 14352213 11696423\r\n",
                "556069380\r\n"
            ],
            [
                "1 1\r\n1889\r\n2867\r\n",
                "1889\r\n"
            ],
            [
                "20 30\r\n81 67 100 83 97 97 58 54 72 78 59 64 55 85 75 58 79 91 64 84\r\n116 13 114 180 17 123 64 185 170 54 138 142 89 191 78 152 49 5 121 66 163 171 64 170 143 143 126 12 175 84\r\n",
                "4628\r\n"
            ]
        ]
    }
]