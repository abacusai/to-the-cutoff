[
    {
        "name": "Physical Education",
        "description": "Vasya is a school PE teacher. Unlike other PE teachers, Vasya doesn't like it\nwhen the students stand in line according to their height. Instead, he demands\nthat the children stand in the following order: a1, a2, ..., an, where ai is\nthe height of the i-th student in the line and n is the number of students in\nthe line. The children find it hard to keep in mind this strange arrangement,\nand today they formed the line in the following order: b1, b2, ..., bn, which\nupset Vasya immensely. Now Vasya wants to rearrange the children so that the\nresulting order is like this: a1, a2, ..., an. During each move Vasya can swap\ntwo people who stand next to each other in the line. Help Vasya, find the\nsequence of swaps leading to the arrangement Vasya needs. It is not required\nto minimize the number of moves. Input The first line contains an integer n (1\n\u2264 n \u2264 300) which is the number of students. The second line contains n space-\nseparated integers ai (1 \u2264 ai \u2264 10^9) which represent the height of the\nstudent occupying the i-th place must possess. The third line contains n\nspace-separated integers bi (1 \u2264 bi \u2264 10^9) which represent the height of the\nstudent occupying the i-th place in the initial arrangement. It is possible\nthat some students possess similar heights. It is guaranteed that it is\npossible to arrange the children in the required order, i.e. a and b coincide\nas multisets. Output In the first line print an integer k (0 \u2264 k \u2264 10^6) which\nis the number of moves. It is not required to minimize k but it must not\nexceed 10^6. Then print k lines each containing two space-separated integers.\nLine pi, pi + 1 (1 \u2264 pi \u2264 n - 1) means that Vasya should swap students\noccupying places pi and pi + 1. Examples Input 4 1 2 3 2 3 2 1 2 Output 4 2 3\n1 2 3 4 2 3 Input 2 1 100500 1 100500 Output 0\n\n",
        "cf_contest_id": 53,
        "cf_index": "D",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 2 3 2\r\n3 2 1 2\r\n",
                "3\r\n2 3\r\n1 2\r\n2 3\r\n"
            ],
            [
                "2\r\n1 100500\r\n1 100500\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n652586118 652586118 652586118\r\n652586118 652586118 652586118\r\n",
                "0\r\n"
            ],
            [
                "4\r\n681106577 681106577 675077178 675077178\r\n675077178 681106577 681106577 675077178\r\n",
                "2\r\n1 2\r\n2 3\r\n"
            ],
            [
                "5\r\n470138369 747764103 729004864 491957578 874531368\r\n874531368 729004864 491957578 747764103 470138369\r\n",
                "9\r\n4 5\r\n3 4\r\n2 3\r\n1 2\r\n4 5\r\n3 4\r\n2 3\r\n3 4\r\n4 5\r\n"
            ],
            [
                "6\r\n590202194 293471749 259345095 293471749 18056518 293471749\r\n293471749 293471749 293471749 18056518 259345095 590202194\r\n",
                "9\r\n5 6\r\n4 5\r\n3 4\r\n2 3\r\n1 2\r\n5 6\r\n4 5\r\n3 4\r\n5 6\r\n"
            ],
            [
                "1\r\n873725529\r\n873725529\r\n",
                "0\r\n"
            ],
            [
                "1\r\n800950546\r\n800950546\r\n",
                "0\r\n"
            ],
            [
                "2\r\n344379439 344379439\r\n344379439 344379439\r\n",
                "0\r\n"
            ],
            [
                "2\r\n305292852 305292852\r\n305292852 305292852\r\n",
                "0\r\n"
            ]
        ]
    }
]