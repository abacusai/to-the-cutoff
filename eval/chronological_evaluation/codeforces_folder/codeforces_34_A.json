[
    {
        "name": "Reconnaissance 2",
        "description": "n soldiers stand in a circle. For each soldier his height ai is known. A\nreconnaissance unit can be made of such two neighbouring soldiers, whose\nheights difference is minimal, i.e. |ai - aj| is minimal. So each of them will\nbe less noticeable with the other. Output any pair of soldiers that can form a\nreconnaissance unit. Input The first line contains integer n (2 \u2264 n \u2264 100) \u2014\namount of soldiers. Then follow the heights of the soldiers in their order in\nthe circle \u2014 n space-separated integers a1, a2, ..., an (1 \u2264 ai \u2264 1000). The\nsoldier heights are given in clockwise or counterclockwise direction. Output\nOutput two integers \u2014 indexes of neighbouring soldiers, who should form a\nreconnaissance unit. If there are many optimum solutions, output any of them.\nRemember, that the soldiers stand in a circle. Examples Input 5 10 12 13 15 10\nOutput 5 1 Input 4 10 20 30 40 Output 1 2\n\n",
        "cf_contest_id": 34,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n10 12 13 15 10\r\n",
                "1 5\r\n"
            ],
            [
                "4\r\n10 20 30 40\r\n",
                "2 1\r\n"
            ]
        ],
        "private_cases": [
            [
                "6\r\n744 359 230 586 944 442\r\n",
                "3 2\r\n"
            ],
            [
                "5\r\n826 747 849 687 437\r\n",
                "2 1\r\n"
            ],
            [
                "5\r\n999 999 993 969 999\r\n",
                "1 5\r\n"
            ],
            [
                "5\r\n4 24 6 1 15\r\n",
                "4 3\r\n"
            ],
            [
                "2\r\n511 32\r\n",
                "1 2\r\n"
            ],
            [
                "3\r\n907 452 355\r\n",
                "3 2\r\n"
            ],
            [
                "4\r\n303 872 764 401\r\n",
                "1 4\r\n"
            ],
            [
                "10\r\n684 698 429 694 956 812 594 170 937 764\r\n",
                "2 1\r\n"
            ],
            [
                "20\r\n646 840 437 946 640 564 936 917 487 752 844 734 468 969 674 646 728 642 514 695\r\n",
                "8 7\r\n"
            ],
            [
                "30\r\n996 999 998 984 989 1000 996 993 1000 983 992 999 999 1000 979 992 987 1000 996 1000 1000 989 981 996 995 999 999 989 999 1000\r\n",
                "13 12\r\n"
            ],
            [
                "50\r\n93 27 28 4 5 78 59 24 19 134 31 128 118 36 90 32 32 1 44 32 33 13 31 10 12 25 38 50 25 12 4 22 28 53 48 83 4 25 57 31 71 24 8 7 28 86 23 80 101 58\r\n",
                "17 16\r\n"
            ],
            [
                "88\r\n1000 1000 1000 1000 1000 998 998 1000 1000 1000 1000 999 999 1000 1000 1000 999 1000 997 999 997 1000 999 998 1000 999 1000 1000 1000 999 1000 999 999 1000 1000 999 1000 999 1000 1000 998 1000 1000 1000 998 998 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 999 1000 1000 999 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 998 1000 1000 1000 998 1000 1000 998 1000 999 1000 1000 1000 1000\r\n",
                "1 88\r\n"
            ],
            [
                "99\r\n4 4 21 6 5 3 13 2 6 1 3 4 1 3 1 9 11 1 6 17 4 5 20 4 1 9 5 11 3 4 14 1 3 3 1 4 3 5 27 1 1 2 10 7 11 4 19 7 11 6 11 13 3 1 10 7 2 1 16 1 9 4 29 13 2 12 14 2 21 1 9 8 26 12 12 5 2 14 7 8 8 8 9 4 12 2 6 6 7 16 8 14 2 10 20 15 3 7 4\r\n",
                "1 99\r\n"
            ],
            [
                "100\r\n713 572 318 890 577 657 646 146 373 783 392 229 455 871 20 593 573 336 26 381 280 916 907 732 820 713 111 840 570 446 184 711 481 399 788 647 492 15 40 530 549 506 719 782 126 20 778 996 712 761 9 74 812 418 488 175 103 585 900 3 604 521 109 513 145 708 990 361 682 827 791 22 596 780 596 385 450 643 158 496 876 975 319 783 654 895 891 361 397 81 682 899 347 623 809 557 435 279 513 438\r\n",
                "87 86\r\n"
            ],
            [
                "100\r\n31 75 86 68 111 27 22 22 26 30 54 163 107 75 160 122 14 23 17 26 27 20 43 58 59 71 21 148 9 32 43 91 133 286 132 70 90 156 84 14 77 93 23 18 13 72 18 131 33 28 72 175 30 86 249 20 14 208 28 57 63 199 6 10 24 30 62 267 43 479 60 28 138 1 45 3 19 47 7 166 116 117 50 140 28 14 95 85 93 43 61 15 2 70 10 51 7 95 9 25\r\n",
                "8 7\r\n"
            ],
            [
                "100\r\n896 898 967 979 973 709 961 968 806 967 896 967 826 975 936 903 986 856 851 931 852 971 786 837 949 978 686 936 952 909 965 749 908 916 943 973 983 975 939 886 964 928 960 976 907 788 994 773 949 871 947 980 945 985 726 981 887 943 907 990 931 874 840 867 948 951 961 904 888 901 976 967 994 921 828 970 972 722 755 970 860 855 914 869 714 899 969 978 898 862 642 939 904 936 819 934 884 983 955 964\r\n",
                "2 1\r\n"
            ],
            [
                "100\r\n994 927 872 970 815 986 952 996 965 1000 877 986 978 999 950 990 936 997 993 960 921 860 895 869 943 998 983 968 973 953 999 990 995 871 853 979 973 963 953 938 997 989 993 964 960 973 946 975 1000 962 920 746 989 957 904 965 920 979 966 961 1000 993 975 952 846 971 991 979 985 969 984 973 956 1000 952 778 983 974 956 927 995 997 980 997 1000 970 960 970 988 983 947 904 935 972 1000 863 992 996 932 967\r\n",
                "82 81\r\n"
            ],
            [
                "100\r\n48 108 63 21 27 8 49 21 75 8 24 42 149 18 8 28 21 18 25 35 59 70 59 33 40 1 67 34 120 82 4 115 72 87 3 15 15 63 37 12 40 27 83 14 38 20 14 58 93 10 31 3 39 6 197 77 54 16 31 146 9 49 14 8 77 82 5 11 80 116 8 61 50 24 7 103 29 11 3 3 1 12 46 24 21 131 39 29 36 2 107 40 16 99 31 41 29 48 17 17\r\n",
                "37 36\r\n"
            ]
        ]
    }
]