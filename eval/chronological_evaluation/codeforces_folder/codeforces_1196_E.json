[
    {
        "name": "Connected Component on a Chessboard",
        "description": "You are given two integers \n    b\n and \n    w\n. You have a chessboard of size\n\n    10^9 \n    \u00d7 10^9\n with the top left cell at \n    (1; 1)\n, the cell\n\n    (1; 1)\n is painted white. Your task is to find a connected component on\nthis chessboard that contains exactly \n    b\n black cells and exactly \n    w\n\nwhite cells. Two cells are called connected if they share a side (i.e. for the\ncell \n    (x, y)\n there are at most four connected cells: \n    (x - 1, y), (x +\n    1, y), (x, y - 1), (x, y + 1)\n). A set of cells is called a connected\ncomponent if for every pair of cells \n    C_1\n and \n    C_2\n from this set,\nthere exists a sequence of cells \n    c_1\n, \n    c_2\n, ..., \n    c_k\n such\nthat \n    c_1 = C_1\n, \n    c_k = C_2\n, all \n    c_i\n from \n    1\n to \n    k\n\nare belong to this set of cells and for every \n    i \n    \u2208 [1, k - 1]\n, cells\n\n    c_i\n and \n    c_i + 1\n are connected. Obviously, it can be impossible\nto find such component. In this case print \"NO\". Otherwise, print \"YES\" and\nany suitable connected component. You have to answer \n    q\n independent\nqueries. Input The first line of the input contains one integer \n    q\n (\n    1\n    \n    \u2264 q \n    \u2264 10^5\n) \u2014 the number of queries. Then \n    q\n queries follow.\nThe only line of the query contains two integers \n    b\n and \n    w\n (\n    1\n    \n    \u2264 b, w \n    \u2264 10^5\n) \u2014 the number of black cells required and the number\nof white cells required. It is guaranteed that the sum of numbers of cells\ndoes not exceed \n    2 \n    \u00b7 10^5\n (\n    \u2211 w + \n    \u2211 b \n    \u2264 2 \n    \u00b7\n    10^5\n). Output For each query, print the answer to it. If it is impossible\nto find the required component, print \"NO\" on the first line. Otherwise, print\n\"YES\" on the first line. In the next \n    b + w\n lines print coordinates of\ncells of your component in any order. There should be exactly \n    b\n black\ncells and \n    w\n white cells in your answer. The printed component should be\nconnected. If there are several answers, you can print any. All coordinates in\nthe answer should be in the range \n    [1; 10^9]\n. Example Input 3 1 1 1 4 2 5\nOutput YES 2 2 1 2 YES 2 3 1 3 3 3 2 2 2 4 YES 2 3 2 4 2 5 1 3 1 5 3 3 3 5\n\n",
        "cf_contest_id": 1196,
        "cf_index": "E",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 1\r\n1 4\r\n2 5\r\n",
                "YES\r\n3 3\r\n4 3\r\nYES\r\n2 3\r\n3 3\r\n1 3\r\n2 2\r\n2 4\r\nYES\r\n2 3\r\n3 3\r\n4 3\r\n5 3\r\n1 3\r\n2 2\r\n4 2\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n99998 33332\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n33332 99998\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n123 371\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n371 123\r\n",
                "NO\r\n"
            ]
        ]
    }
]