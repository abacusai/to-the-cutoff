[
    {
        "name": "Makes And The Product",
        "description": "After returning from the army Makes received a gift \u2014 an array a consisting of\nn positive integer numbers. He hadn't been solving problems for a long time,\nso he became interested to answer a particular question: how many triples of\nindices (i, j, k) (i < j < k), such that ai\u00b7aj\u00b7ak is minimum possible, are\nthere in the array? Help him with it! Input The first line of input contains a\npositive integer number n (3 \u2264 n \u2264 10^5) \u2014 the number of elements in array a.\nThe second line contains n positive integer numbers ai (1 \u2264 ai \u2264 10^9) \u2014 the\nelements of a given array. Output Print one number \u2014 the quantity of triples\n(i, j, k) such that i, j and k are pairwise distinct and ai\u00b7aj\u00b7ak is minimum\npossible. Examples Input 4 1 1 1 1 Output 4 Input 5 1 3 2 3 4 Output 2 Input 6\n1 3 3 1 3 2 Output 1 Note In the first example Makes always chooses three ones\nout of four, and the number of ways to choose them is 4. In the second example\na triple of numbers (1, 2, 3) is chosen (numbers, not indices). Since there\nare two ways to choose an element 3, then the answer is 2. In the third\nexample a triple of numbers (1, 1, 2) is chosen, and there's only one way to\nchoose indices.\n\n",
        "cf_contest_id": 817,
        "cf_index": "B",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "implementation",
            "math",
            "sortings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 1 1 1\r\n",
                "4\r\n"
            ],
            [
                "5\r\n1 3 2 3 4\r\n",
                "2\r\n"
            ],
            [
                "6\r\n1 3 3 1 3 2\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n1000000000 1000000000 1000000000\r\n",
                "1\r\n"
            ],
            [
                "4\r\n1 1 2 2\r\n",
                "2\r\n"
            ],
            [
                "3\r\n1 3 1\r\n",
                "1\r\n"
            ],
            [
                "11\r\n1 2 2 2 2 2 2 2 2 2 2\r\n",
                "45\r\n"
            ],
            [
                "5\r\n1 2 2 2 2\r\n",
                "6\r\n"
            ],
            [
                "6\r\n1 2 2 3 3 4\r\n",
                "1\r\n"
            ],
            [
                "8\r\n1 1 2 2 2 3 3 3\r\n",
                "3\r\n"
            ],
            [
                "6\r\n1 2 2 2 2 3\r\n",
                "6\r\n"
            ],
            [
                "3\r\n1 2 2\r\n",
                "1\r\n"
            ],
            [
                "6\r\n1 2 2 2 3 3\r\n",
                "3\r\n"
            ],
            [
                "6\r\n1 2 2 2 2 2\r\n",
                "10\r\n"
            ],
            [
                "4\r\n1 2 2 2\r\n",
                "3\r\n"
            ],
            [
                "5\r\n1 2 3 2 3\r\n",
                "1\r\n"
            ],
            [
                "6\r\n2 2 3 3 3 3\r\n",
                "4\r\n"
            ],
            [
                "6\r\n1 2 2 2 5 6\r\n",
                "3\r\n"
            ],
            [
                "10\r\n1 2 2 2 2 2 2 2 2 2\r\n",
                "36\r\n"
            ],
            [
                "3\r\n2 1 2\r\n",
                "1\r\n"
            ],
            [
                "5\r\n1 2 3 3 3\r\n",
                "3\r\n"
            ],
            [
                "6\r\n1 2 2 2 4 5\r\n",
                "3\r\n"
            ],
            [
                "4\r\n1 2 2 3\r\n",
                "1\r\n"
            ],
            [
                "10\r\n2 2 2 2 2 1 2 2 2 2\r\n",
                "36\r\n"
            ],
            [
                "7\r\n2 2 2 3 3 3 1\r\n",
                "3\r\n"
            ],
            [
                "3\r\n1 1 2\r\n",
                "1\r\n"
            ],
            [
                "5\r\n1 1 2 2 2\r\n",
                "3\r\n"
            ],
            [
                "3\r\n1 2 3\r\n",
                "1\r\n"
            ],
            [
                "9\r\n2 2 3 3 3 3 3 3 3\r\n",
                "7\r\n"
            ],
            [
                "5\r\n1 1 2 2 3\r\n",
                "2\r\n"
            ],
            [
                "4\r\n1 1 3 3\r\n",
                "2\r\n"
            ],
            [
                "4\r\n33554432 33554432 67108864 33554432\r\n",
                "1\r\n"
            ],
            [
                "6\r\n2 2 2 1 2 2\r\n",
                "10\r\n"
            ],
            [
                "10\r\n1 2 1 2 3 2 3 2 2 2\r\n",
                "6\r\n"
            ],
            [
                "10\r\n9 6 4 7 1 8 9 5 9 4\r\n",
                "1\r\n"
            ],
            [
                "4\r\n5 7 2 7\r\n",
                "2\r\n"
            ],
            [
                "3\r\n7 6 7\r\n",
                "1\r\n"
            ],
            [
                "6\r\n3 2 8 2 5 3\r\n",
                "2\r\n"
            ],
            [
                "3\r\n5 9 5\r\n",
                "1\r\n"
            ],
            [
                "5\r\n6 3 7 6 3\r\n",
                "2\r\n"
            ],
            [
                "9\r\n10 10 4 10 7 9 6 7 3\r\n",
                "1\r\n"
            ],
            [
                "5\r\n9 10 10 3 8\r\n",
                "1\r\n"
            ],
            [
                "5\r\n2 9 5 10 5\r\n",
                "1\r\n"
            ],
            [
                "9\r\n7 1 9 6 6 8 3 1 3\r\n",
                "2\r\n"
            ],
            [
                "5\r\n3 4 4 4 5\r\n",
                "3\r\n"
            ],
            [
                "3\r\n3 1 3\r\n",
                "1\r\n"
            ],
            [
                "8\r\n3 2 2 5 2 2 1 2\r\n",
                "10\r\n"
            ]
        ]
    }
]