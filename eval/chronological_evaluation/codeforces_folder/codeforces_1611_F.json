[
    {
        "name": "ATM and Students",
        "description": "Polycarp started working at a bank. He was assigned to monitor the ATM. The\nATM initially contains \n    s\n rubles. A queue of \n    n\n students lined up to\nhim. Each student wants to either withdraw a certain amount of money or\ndeposit it into an account. If \n    a_i\n is positive, then the student credits\nthat amount of money via ATM. Otherwise, the student withdraws \n    |a_i|\n\nrubles. In the beginning, the ATM is turned off and an arbitrary number of\nstudents are not served. At some point, Polycarp turns on the ATM, which has\nan initial amount of \n    s\n rubles. Then, the remaining students start\nqueueing at the ATM. If at some point in time there is less money in the ATM\nthan the student wants to withdraw, then the student is not served and\nPolycarp turns off the ATM and does not turn it on anymore. More formally, the\nstudents that are served are forming a contiguous subsequence. Polycarp wants\nthe ATM to serve the maximum number of students. Help him in this matter.\nPrint the numbers of the first and last student, or determine that he will not\nbe able to serve anyone. In other words, find such a longest continuous\nsegment of students that, starting with the sum of \n    s\n at the ATM, all\nthese students will be served. ATM serves students consistently (i.e. one\nafter another in the order of the queue). Input The first line of the input\ncontains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test\ncases. Each test case consists of two lines. The first one contains integers\n\n    n\n and \n    s\n (\n    1 \n    \u2264 n \n    \u2264 2\n    \u00b710^5\n; \n    0 \n    \u2264 s \n    \u2264\n    10^9\n) \u2014 the length of the \n    a\n array and the initial amount of rubles in\nthe ATM. The second contains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n\n(\n    -10^9 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 elements of the \n    a\n array. Note that\n\n    a_i\n can be zero. It is guaranteed that the sum of the values \n    n\n\nover all test cases does not exceed \n    2\n    \u00b710^5\n. Output Print \n    t\n\nlines, each line must contain the answer to the corresponding set of input\ndata: if the answer exists, print the numbers of the first and last served\nstudent. If there is no solution, then print -1 on the line. If there are\nseveral possible answers, print any. Example Input 3 4 10 -16 2 -6 8 3 1000\n-100000 -100000 -100000 6 0 2 6 -164 1 -1 -6543 Output 2 4 -1 1 2 Note In the\nfirst test case, the only correct answer is 2 4, since when serving students,\nthe number of rubles at the ATM does not become negative, and this is the\nmaximum number of students that can be served. In the second test case, the\nanswer is -1, as there is not enough money for any student at the ATM. In the\nthird test case, the answer can be either 1 2 or 4 5.\n\n",
        "cf_contest_id": 1611,
        "cf_index": "F",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4 10\r\n-16 2 -6 8\r\n3 1000\r\n-100000 -100000 -100000\r\n6 0\r\n2 6 -164 1 -1 -6543\r\n",
                "2 4\r\n-1\r\n1 2\r\n"
            ]
        ],
        "private_cases": []
    }
]