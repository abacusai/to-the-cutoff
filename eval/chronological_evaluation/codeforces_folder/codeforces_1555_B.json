[
    {
        "name": "Two Tables",
        "description": "You have an axis-aligned rectangle room with width \n    W\n and height \n    H\n,\nso the lower left corner is in point \n    (0, 0)\n and the upper right corner\nis in \n    (W, H)\n. There is a rectangular table standing in this room. The\nsides of the table are parallel to the walls, the lower left corner is in\n\n    (x_1, y_1)\n, and the upper right corner in \n    (x_2, y_2)\n. You want to\nplace another rectangular table in this room with width \n    w\n and height\n\n    h\n with the width of the table parallel to the width of the room. The\nproblem is that sometimes there is not enough space to place the second table\nwithout intersecting with the first one (there are no problems with tables\ntouching, though). You can't rotate any of the tables, but you can move the\nfirst table inside the room. Example of how you may move the first table. What\nis the minimum distance you should move the first table to free enough space\nfor the second one? Input The first line contains the single integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 5000\n) \u2014 the number of the test cases. The first line of\neach test case contains two integers \n    W\n and \n    H\n (\n    1 \n    \u2264 W, H\n    \n    \u2264 10^8\n) \u2014 the width and the height of the room. The second line\ncontains four integers \n    x_1\n, \n    y_1\n, \n    x_2\n and \n    y_2\n (\n    0\n    \n    \u2264 x_1 < x_2 \n    \u2264 W\n; \n    0 \n    \u2264 y_1 < y_2 \n    \u2264 H\n) \u2014 the coordinates\nof the corners of the first table. The third line contains two integers\n\n    w\n and \n    h\n (\n    1 \n    \u2264 w \n    \u2264 W\n; \n    1 \n    \u2264 h \n    \u2264 H\n) \u2014 the\nwidth and the height of the second table. Output For each test case, print the\nminimum distance you should move the first table, or \n    -1\n if there is no\nway to free enough space for the second table. Your answer will be considered\ncorrect if its absolute or relative error doesn't exceed \n    10^-6\n.\nExample Input 5 8 5 2 1 7 4 4 2 5 4 2 2 5 4 3 3 1 8 0 3 1 6 1 5 8 1 3 0 6 1 5\n1 8 10 4 5 7 8 8 5 Output 1.000000000 -1 2.000000000 2.000000000 0.000000000\nNote The configuration of the first test case is shown in the picture. But the\nmovement of the first table is not optimal. One of the optimal movement, for\nexample, is to move the table by \n    (0, -1)\n, so the lower left corner will\nmove from \n    (2, 1)\n to \n    (2, 0)\n. Then you can place the second table at\n\n    (0, 3)-(4, 5)\n. In the second test case, there is no way to fit both\ntables in the room without intersecting. In the third test case, you can move\nthe first table by \n    (0, 2)\n, so the lower left corner will move from\n\n    (0, 3)\n to \n    (0, 5)\n.\n\n",
        "cf_contest_id": 1555,
        "cf_index": "B",
        "cf_rating": 1300,
        "difficulty": 0,
        "cf_tags": [
            "brute force"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n8 5\r\n2 1 7 4\r\n4 2\r\n5 4\r\n2 2 5 4\r\n3 3\r\n1 8\r\n0 3 1 6\r\n1 5\r\n8 1\r\n3 0 6 1\r\n5 1\r\n8 10\r\n4 5 7 8\r\n8 5\r\n",
                "1\r\n-1\r\n2\r\n2\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]