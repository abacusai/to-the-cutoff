[
    {
        "name": "Removal Sequences",
        "description": "You are given a simple undirected graph, consisting of \n    n\n vertices and\n\n    m\n edges. The vertices are numbered from \n    1\n to \n    n\n. The\n\n    i\n-th vertex has a value \n    a_i\n written on it. You will be removing\nvertices from that graph. You are allowed to remove vertex \n    i\n only if its\ndegree is equal to \n    a_i\n. When a vertex is removed, all edges incident to\nit are also removed, thus, decreasing the degree of adjacent non-removed\nvertices. A valid sequence of removals is a permutation \n    p_1, p_2, \n    \u2026,\n    p_n\n \n    (1 \n    \u2264 p_i \n    \u2264 n)\n such that the \n    i\n-th vertex to be\nremoved is \n    p_i\n, and every removal is allowed. A pair \n    (x, y)\n of\nvertices is nice if there exist two valid sequences of removals such that\n\n    x\n is removed before \n    y\n in one of them and \n    y\n is removed before\n\n    x\n in the other one. Count the number of nice pairs \n    (x, y)\n such\nthat \n    x < y\n. Input The first line contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of testcases. The first line of each\ntestcase contains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264\n    10^5\n; \n    0 \n    \u2264 m \n    \u2264\n    min(10^5, \n    n \n    \u00b7 (n - 1)/2)\n) \u2014\nthe number of vertices and the number of edges of the graph. The second line\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 n\n    - 1\n) \u2014 the degree requirements for each removal. Each of the next \n    m\n\nlines contains two integers \n    v\n and \n    u\n (\n    1 \n    \u2264 v, u \n    \u2264 n\n;\n\n    v \n    \u2260 u\n) \u2014 the description of an edge. The graph doesn't contain any\nself-loops or multiple edges. The sum of \n    n\n over all testcases doesn't\nexceed \n    10^5\n. The sum of \n    m\n over all testcases doesn't exceed\n\n    10^5\n. Additional constraint on the input: there always exists at least\none valid sequence of removals. Output For each testcase, print a single\ninteger \u2014 the number of nice pairs of vertices. Example Input 4 3 2 1 0 1 2 3\n1 2 3 3 1 2 0 1 2 2 3 1 3 5 6 3 0 2 1 0 1 2 4 1 4 2 3 4 2 3 5 1 1 0 0 Output 1\n0 4 0\n\n",
        "cf_contest_id": 1795,
        "cf_index": "G",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "dfs and similar",
            "graphs"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3 2\r\n1 0 1\r\n2 3\r\n1 2\r\n3 3\r\n1 2 0\r\n1 2\r\n2 3\r\n1 3\r\n5 6\r\n3 0 2 1 0\r\n1 2\r\n4 1\r\n4 2\r\n3 4\r\n2 3\r\n5 1\r\n1 0\r\n0\r\n",
                "1\r\n0\r\n4\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]