[
    {
        "name": "Restore the Permutation by Merger",
        "description": "A permutation of length \n    n\n is a sequence of integers from \n    1\n to\n\n    n\n of length \n    n\n containing each number exactly once. For example,\n\n    [1]\n, \n    [4, 3, 5, 1, 2]\n, \n    [3, 2, 1]\n are permutations, and \n    [1,\n    1]\n, \n    [0, 1]\n, \n    [2, 2, 1, 4]\n are not. There was a permutation\n\n    p[1 \n    \u2026 n]\n. It was merged with itself. In other words, let's take\ntwo instances of \n    p\n and insert elements of the second \n    p\n into the\nfirst maintaining relative order of elements. The result is a sequence of the\nlength \n    2n\n. For example, if \n    p=[3, 1, 2]\n some possible results are:\n\n    [3, 1, 2, 3, 1, 2]\n, \n    [3, 3, 1, 1, 2, 2]\n, \n    [3, 1, 3, 1, 2, 2]\n.\nThe following sequences are not possible results of a merging: \n    [1, 3, 2, 1,\n    2, 3\n], [\n    3, 1, 2, 3, 2, 1]\n, \n    [3, 3, 1, 2, 2, 1]\n. For example, if\n\n    p=[2, 1]\n the possible results are: \n    [2, 2, 1, 1]\n, \n    [2, 1, 2,\n    1]\n. The following sequences are not possible results of a merging: \n    [1,\n    1, 2, 2\n], [\n    2, 1, 1, 2]\n, \n    [1, 2, 2, 1]\n. Your task is to restore\nthe permutation \n    p\n by the given resulting sequence \n    a\n. It is\nguaranteed that the answer exists and is unique. You have to answer \n    t\n\nindependent test cases. Input The first line of the input contains one integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 400\n) \u2014 the number of test cases. Then \n    t\n\ntest cases follow. The first line of the test case contains one integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 50\n) \u2014 the length of permutation. The second\nline of the test case contains \n    2n\n integers \n    a_1, a_2, \n    \u2026,\n    a_2n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n), where \n    a_i\n is the \n    i\n-th\nelement of \n    a\n. It is guaranteed that the array \n    a\n represents the\nresult of merging of some permutation \n    p\n with the same permutation\n\n    p\n. Output For each test case, print the answer: \n    n\n integers \n    p_1,\n    p_2, \n    \u2026, p_n\n (\n    1 \n    \u2264 p_i \n    \u2264 n\n), representing the initial\npermutation. It is guaranteed that the answer exists and is unique. Example\nInput 5 2 1 1 2 2 4 1 3 1 4 3 4 2 2 5 1 2 1 2 3 4 3 5 4 5 3 1 2 3 1 2 3 4 2 3\n2 4 1 3 4 1 Output 1 2 1 3 4 2 1 2 3 4 5 1 2 3 2 3 4 1\n\n",
        "cf_contest_id": 1385,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n2\r\n1 1 2 2\r\n4\r\n1 3 1 4 3 4 2 2\r\n5\r\n1 2 1 2 3 4 3 5 4 5\r\n3\r\n1 2 3 1 2 3\r\n4\r\n2 3 2 4 1 3 4 1\r\n",
                "1\r\n2\r\n1\r\n3\r\n4\r\n2\r\n1\r\n2\r\n3\r\n4\r\n5\r\n1\r\n2\r\n3\r\n2\r\n3\r\n4\r\n1\r\n"
            ]
        ],
        "private_cases": []
    }
]