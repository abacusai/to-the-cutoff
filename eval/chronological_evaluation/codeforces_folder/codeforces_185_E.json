[
    {
        "name": "Soap Time! - 2",
        "description": "Imagine the Cartesian coordinate system. There are k different points\ncontaining subway stations. One can get from any subway station to any one\ninstantly. That is, the duration of the transfer between any two subway\nstations can be considered equal to zero. You are allowed to travel only\nbetween subway stations, that is, you are not allowed to leave the subway\nsomewhere in the middle of your path, in-between the stations. There are n\ndwarves, they are represented by their coordinates on the plane. The dwarves\nwant to come together and watch a soap opera at some integer point on the\nplane. For that, they choose the gathering point and start moving towards it\nsimultaneously. In one second a dwarf can move from point (x, y) to one of the\nfollowing points: (x - 1, y), (x + 1, y), (x, y - 1), (x, y + 1). Besides, the\ndwarves can use the subway as many times as they want (the subway transfers\nthe dwarves instantly). The dwarves do not interfere with each other as they\nmove (that is, the dwarves move simultaneously and independently from each\nother). Help the dwarves and find the minimum time they need to gather at one\npoint. Input The first line contains two integers n and k (1 \u2264 n \u2264 10^5; 0 \u2264 k\n\u2264 10^5) \u2014 the number of dwarves and the number of subway stations,\ncorrespondingly. The next n lines contain the coordinates of the dwarves. The\ni-th line contains two space-separated integers xi and yi (|xi|, |yi| \u2264 10^8)\n\u2014 the coordinates of the i-th dwarf. It is guaranteed that all dwarves are\nlocated at different points. The next k lines contain the coordinates of the\nsubway stations. The t-th line contains two space-separated integers xt and yt\n(|xt|, |yt| \u2264 10^8) \u2014 the coordinates of the t-th subway station. It is\nguaranteed that all subway stations are located at different points. Output\nPrint a single number \u2014 the minimum time, in which all dwarves can gather\ntogether at one point to watch the soap. Examples Input 1 0 2 -2 Output 0\nInput 2 2 5 -3 -4 -5 -4 0 -3 -2 Output 6\n\n",
        "cf_contest_id": 185,
        "cf_index": "E",
        "cf_rating": 3000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1 0\r\n2 -2\r\n",
                "0\r\n"
            ],
            [
                "2 2\r\n5 -3\r\n-4 -5\r\n-4 0\r\n-3 -2\r\n",
                "6"
            ]
        ],
        "private_cases": [
            [
                "2 5\r\n4 -1\r\n4 -3\r\n2 -2\r\n-4 -5\r\n-3 -5\r\n-5 -2\r\n3 0\r\n",
                "1"
            ],
            [
                "2 10\r\n-4 -1\r\n-5 -3\r\n-2 -9\r\n-2 -1\r\n3 -5\r\n-7 -2\r\n-6 -10\r\n-10 -2\r\n-6 -6\r\n-5 -4\r\n-4 -2\r\n8 -10\r\n",
                "1"
            ],
            [
                "8 1\r\n1 -9\r\n-7 -7\r\n-8 -2\r\n-4 -1\r\n6 -7\r\n-1 -9\r\n-4 0\r\n7 -10\r\n6 -3\r\n",
                "12"
            ],
            [
                "5 6\r\n5 0\r\n6 -7\r\n-2 -3\r\n10 -9\r\n-5 -6\r\n1 -1\r\n-1 0\r\n-9 -2\r\n6 -8\r\n2 -4\r\n-8 -4\r\n",
                "5"
            ],
            [
                "4 7\r\n-9 -5\r\n3 -6\r\n9 -4\r\n-3 -3\r\n4 -9\r\n-3 -10\r\n6 -9\r\n-9 0\r\n6 -5\r\n4 0\r\n10 -8\r\n",
                "6"
            ],
            [
                "3 0\r\n9 -10\r\n9 -9\r\n7 -3\r\n",
                "5"
            ],
            [
                "3 4\r\n-4 1\r\n0 -3\r\n-2 3\r\n-1 -2\r\n2 1\r\n0 -3\r\n-1 3\r\n",
                "3"
            ]
        ]
    }
]