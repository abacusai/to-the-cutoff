[
    {
        "name": "Squid Game",
        "description": "After watching the new over-rated series Squid Game, Mashtali and Soroush\ndecided to hold their own Squid Games! Soroush agreed to be the host and will\nprovide money for the winner's prize, and Mashtali became the Front Man!\n\n    m\n players registered to play in the games to win the great prize, but\nwhen Mashtali found out how huge the winner's prize is going to be, he decided\nto kill eliminate all the players so he could take the money for himself! Here\nis how evil Mashtali is going to eliminate players: There is an unrooted tree\nwith \n    n\n vertices. Every player has \n    2\n special vertices \n    x_i\n and\n\n    y_i\n. In one operation, Mashtali can choose any vertex \n    v\n of the\ntree. Then, for each remaining player \n    i\n he finds a vertex \n    w\n on the\nsimple path from \n    x_i\n to \n    y_i\n, which is the closest to \n    v\n. If\n\n    w\n     x_i\n and \n    w\n     y_i\n, player \n    i\n will be eliminated. Now\nMashtali wondered: \"What is the minimum number of operations I should perform\nso that I can remove every player from the game and take the money for\nmyself?\" Since he was only thinking about the money, he couldn't solve the\nproblem by himself and asked for your help! Input The first line contains\n\n    2\n integer \n    n\n and \n    m\n \n    (1 \n    \u2264 n, m \n    \u2264 3 \n    \u00b7 10^5)\n\n\u2014 the number of vertices of the tree and the number of players. The second\nline contains \n    n-1\n integers \n    par_2, par_3, \n    \u2026, par_n\n \n    (1\n    \n    \u2264 par_i < i)\n \u2014 denoting an edge between node \n    i\n and \n    par_i\n.\nThe \n    i\n-th of the following \n    m\n lines contains two integers \n    x_i\n\nand \n    y_i\n \n    (1 \n    \u2264 x_i, y_i \n    \u2264 n, x_i \n     y_i)\n \u2014 the special\nvertices of the \n    i\n-th player. Output Print the minimum number of\noperations Mashtali has to perform. If there is no way for Mashtali to\neliminate all the players, print \n    -1\n. Examples Input 6 3 1 1 1 4 4 1 5 3\n4 2 6 Output 2 Input 5 3 1 1 3 3 1 2 1 4 1 5 Output -1 Note Explanation for\nthe first sample: In the first operation, Mashtali can choose vertex \n    1\n\nand eliminate players with colors red and blue. In the second operation, he\ncan choose vertex \n    6\n and eliminate the player with orange color. In the\nsecond sample, Mashtali can't eliminate the first player.\n\n",
        "cf_contest_id": 1610,
        "cf_index": "H",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dfs and similar",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 3\r\n1 1 1 4 4\r\n1 5\r\n3 4\r\n2 6\r\n",
                "2\r\n"
            ],
            [
                "5 3\r\n1 1 3 3\r\n1 2\r\n1 4\r\n1 5\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 5\r\n1 1 2 3\r\n3 2\r\n5 3\r\n3 2\r\n2 1\r\n2 1\r\n",
                "-1\r\n"
            ],
            [
                "5 5\r\n1 1 1 4\r\n2 4\r\n4 3\r\n1 5\r\n3 5\r\n5 1\r\n",
                "2\r\n"
            ],
            [
                "10 5\r\n1 2 3 4 5 6 7 8 9\r\n2 9\r\n10 6\r\n2 7\r\n5 2\r\n1 10\r\n",
                "2\r\n"
            ],
            [
                "10 5\r\n1 2 3 4 5 5 7 7 8\r\n5 3\r\n10 3\r\n1 6\r\n6 9\r\n6 4\r\n",
                "2\r\n"
            ],
            [
                "7 3\r\n1 2 3 1 5 6\r\n2 4\r\n5 7\r\n2 5\r\n",
                "3\r\n"
            ]
        ]
    }
]