[
    {
        "name": "Points on Plane",
        "description": "You are given a two-dimensional plane, and you need to place \n    n\n chips on\nit. You can place a chip only at a point with integer coordinates. The cost of\nplacing a chip at the point \n    (x, y)\n is equal to \n    |x| + |y|\n (where\n\n    |a|\n is the absolute value of \n    a\n). The cost of placing \n    n\n chips\nis equal to the maximum among the costs of each chip. You need to place\n\n    n\n chips on the plane in such a way that the Euclidean distance between\neach pair of chips is strictly greater than \n    1\n, and the cost is the\nminimum possible. Input The first line contains one integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. Next \n    t\n cases follow.\nThe first and only line of each test case contains one integer \n    n\n (\n    1\n    \n    \u2264 n \n    \u2264 10^18\n) \u2014 the number of chips you need to place. Output For\neach test case, print a single integer \u2014 the minimum cost to place \n    n\n\nchips if the distance between each pair of chips must be strictly greater than\n\n    1\n. Example Input 4 1 3 5 975461057789971042 Output 0 1 2 987654321 Note\nIn the first test case, you can place the only chip at point \n    (0, 0)\n with\ntotal cost equal to \n    0 + 0 = 0\n. In the second test case, you can, for\nexample, place chips at points \n    (-1, 0)\n, \n    (0, 1)\n and \n    (1, 0)\n\nwith costs \n    |-1| + |0| = 1\n, \n    |0| + |1| = 1\n and \n    |0| + |1| = 1\n.\nDistance between each pair of chips is greater than \n    1\n (for example,\ndistance between \n    (-1, 0)\n and \n    (0, 1)\n is equal to \n    \u221a(2)\n).\nThe total cost is equal to \n    max(1, 1, 1) = 1\n. In the third test case,\nyou can, for example, place chips at points \n    (-1, -1)\n, \n    (-1, 1)\n,\n\n    (1, 1)\n, \n    (0, 0)\n and \n    (0, 2)\n. The total cost is equal to\n\n    max(2, 2, 2, 0, 2) = 2\n.\n\n",
        "cf_contest_id": 1809,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1\r\n3\r\n5\r\n975461057789971042\r\n",
                "0\r\n1\r\n2\r\n987654321\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1011001110001111\r\n",
                "31796243\r\n"
            ],
            [
                "1\r\n1234567890\r\n",
                "35136\r\n"
            ]
        ]
    }
]