[
    {
        "name": "AND Segments",
        "description": "You are given three integers \n    n\n, \n    k\n, \n    m\n and \n    m\n conditions\n\n    (l_1, r_1, x_1), (l_2, r_2, x_2), \n    \u2026, (l_m, r_m, x_m)\n. Calculate\nthe number of distinct arrays \n    a\n, consisting of \n    n\n integers such\nthat: \n    0 \n    \u2264 a_i < 2^k\n for each \n    1 \n    \u2264 i \n    \u2264 n\n; bitwise AND of\nnumbers \n    a[l_i] \n    & a[l_i + 1] \n    &\n    \u2026\n    & a[r_i] = x_i\n for each\n\n    1 \n    \u2264 i \n    \u2264 m\n. Two arrays \n    a\n and \n    b\n are considered\ndifferent if there exists such a position \n    i\n that \n    a_i \n    \u2260 b_i\n.\nThe number can be pretty large so print it modulo \n    998244353\n. Input The\nfirst line contains three integers \n    n\n, \n    k\n and \n    m\n (\n    1 \n    \u2264 n\n    \n    \u2264 5 \n    \u00b7 10^5\n, \n    1 \n    \u2264 k \n    \u2264 30\n, \n    0 \n    \u2264 m \n    \u2264 5\n    \n    \u00b7 10^5\n) \u2014 the length of the array \n    a\n, the value such that all\nnumbers in \n    a\n should be smaller than \n    2^k\n and the number of\nconditions, respectively. Each of the next \n    m\n lines contains the\ndescription of a condition \n    l_i\n, \n    r_i\n and \n    x_i\n (\n    1 \n    \u2264 l_i\n    \n    \u2264 r_i \n    \u2264 n\n, \n    0 \n    \u2264 x_i < 2^k\n) \u2014 the borders of the condition\nsegment and the required bitwise AND value on it. Output Print a single\ninteger \u2014 the number of distinct arrays \n    a\n that satisfy all the above\nconditions modulo \n    998244353\n. Examples Input 4 3 2 1 3 3 3 4 6 Output 3\nInput 5 2 3 1 3 2 2 5 0 3 3 3 Output 33 Note You can recall what is a bitwise\nAND operation here. In the first example, the answer is the following arrays:\n\n    [3, 3, 7, 6]\n, \n    [3, 7, 7, 6]\n and \n    [7, 3, 7, 6]\n.\n\n",
        "cf_contest_id": 1327,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "combinatorics",
            "data structures",
            "dp",
            "two pointers"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3 2\r\n1 3 3\r\n3 4 6\r\n",
                "3"
            ],
            [
                "5 2 3\r\n1 3 2\r\n2 5 0\r\n3 3 3\r\n",
                "33"
            ]
        ],
        "private_cases": [
            [
                "20 10 20\r\n6 8 384\r\n6 7 385\r\n6 10 128\r\n13 14 182\r\n15 19 0\r\n19 20 468\r\n20 20 477\r\n6 8 384\r\n17 20 16\r\n2 4 205\r\n6 6 899\r\n16 20 0\r\n20 20 477\r\n12 15 6\r\n9 11 513\r\n11 11 873\r\n16 19 0\r\n15 16 15\r\n7 9 180\r\n10 10 727\r\n",
                "298754800"
            ],
            [
                "20 10 20\r\n9 12 48\r\n13 14 527\r\n6 6 343\r\n13 15 5\r\n12 14 515\r\n8 11 0\r\n10 14 0\r\n6 9 256\r\n16 16 767\r\n8 12 0\r\n12 14 515\r\n16 17 630\r\n6 8 324\r\n15 15 101\r\n8 9 904\r\n5 6 85\r\n19 20 22\r\n17 17 886\r\n1 5 0\r\n18 18 1019\r\n",
                "672484331"
            ],
            [
                "20 4 10\r\n6 20 0\r\n4 9 0\r\n15 20 0\r\n18 19 0\r\n8 20 0\r\n3 13 0\r\n3 4 0\r\n10 18 0\r\n14 14 0\r\n15 15 0\r\n",
                "295455399"
            ],
            [
                "20 4 10\r\n11 16 0\r\n4 7 0\r\n13 13 0\r\n5 17 0\r\n7 7 0\r\n16 18 0\r\n3 15 0\r\n9 15 0\r\n8 12 0\r\n4 14 0\r\n",
                "974877433"
            ],
            [
                "500000 30 0\r\n",
                "501523366"
            ],
            [
                "1 30 1\r\n1 1 32443264\r\n",
                "1"
            ],
            [
                "1 30 2\r\n1 1 32443264\r\n1 1 1337\r\n",
                "0"
            ]
        ]
    }
]