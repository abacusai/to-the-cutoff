[
    {
        "name": "Calendar Reform",
        "description": "Reforms have started in Berland again! At this time, the Parliament is\ndiscussing the reform of the calendar. To make the lives of citizens of\nBerland more varied, it was decided to change the calendar. As more and more\npeople are complaining that \"the years fly by...\", it was decided that\nstarting from the next year the number of days per year will begin to grow. So\nthe coming year will have exactly a days, the next after coming year will have\na + 1 days, the next one will have a + 2 days and so on. This schedule is\nplanned for the coming n years (in the n-th year the length of the year will\nbe equal a + n - 1 day). No one has yet decided what will become of months. An\nMP Palevny made the following proposal. The calendar for each month is\ncomfortable to be printed on a square sheet of paper. We are proposed to make\nthe number of days in each month be the square of some integer. The number of\ndays per month should be the same for each month of any year, but may be\ndifferent for different years. The number of days in each year must be\ndivisible by the number of days per month in this year. This rule ensures that\nthe number of months in each year is an integer. The number of days per month\nfor each year must be chosen so as to save the maximum amount of paper to\nprint the calendars. In other words, the number of days per month should be as\nmuch as possible. These rules provide an unambiguous method for choosing the\nnumber of days in each month for any given year length. For example, according\nto Palevny's proposition, a year that consists of 108 days will have three\nmonths, 36 days each. The year that consists of 99 days will have 11 months, 9\ndays each, and a year of 365 days will have 365 months, one day each. The\nproposal provoked heated discussion in the community, the famous mathematician\nPerelmanov quickly calculated that if the proposal is supported, then in a\nperiod of n years, beginning with the year that has a days, the country will\nspend p sheets of paper to print a set of calendars for these years.\nPerelmanov's calculations take into account the fact that the set will contain\none calendar for each year and each month will be printed on a separate sheet.\nRepeat Perelmanov's achievement and print the required number p. You are given\npositive integers a and n. Perelmanov warns you that your program should not\nwork longer than four seconds at the maximum test. Input The only input line\ncontains a pair of integers a, n (1 \u2264 a, n \u2264 10^7; a + n - 1 \u2264 10^7). Output\nPrint the required number p. Please, do not use the \nwrite 64-bit integers in C++. It is preferred to use cin, cout streams or the\n\nnote to the first sample test. A year of 25 days will consist of one month\ncontaining 25 days. A year of 26 days will consist of 26 months, one day each.\nA year of 27 days will have three months, 9 days each.\n\n",
        "cf_contest_id": 172,
        "cf_index": "D",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "25 3\r\n",
                "30\r\n"
            ],
            [
                "50 5\r\n",
                "125\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n",
                "1\r\n"
            ],
            [
                "1 2\r\n",
                "3\r\n"
            ],
            [
                "1 10\r\n",
                "38\r\n"
            ],
            [
                "1 5000000\r\n",
                "8224640917276\r\n"
            ],
            [
                "5000000 5000000\r\n",
                "24674231279431\r\n"
            ],
            [
                "4000000 5000000\r\n",
                "21384022194564\r\n"
            ],
            [
                "3000000 5000000\r\n",
                "18094224526592\r\n"
            ],
            [
                "1000000 5000000\r\n",
                "11514506860120\r\n"
            ],
            [
                "1 10000000\r\n",
                "32898872196712\r\n"
            ]
        ]
    }
]