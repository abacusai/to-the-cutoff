[
    {
        "name": "Zeros and Ones",
        "description": "Let \n    S\n be the Thue-Morse sequence. In other words, \n    S\n is the\n\n    0\n-indexed binary string with infinite length that can be constructed as\nfollows: Initially, let \n    S\n be \"0\". Then, we perform the following\noperation infinitely many times: concatenate \n    S\n with a copy of itself\nwith flipped bits.For example, here are the first four iterations:\nIteration\n    S\n before iteration\n    S\n before iteration with flipped\nbitsConcatenated\n\n    S\n1010120110011030110100101101001401101001100101100110100110010110\n    \u2026\n\n    \u2026\n\n    \u2026\n\n    \u2026\n\nYou are given two positive integers \n    n\n and \n    m\n. Find the number of\npositions where the strings \n    S_0 S_1 \n    \u2026 S_m-1\n and \n    S_n S_n +\n    1\n    \u2026 S_n + m - 1\n are different. Input Each test contains multiple\ntest cases. The first line of the input contains a single integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases. The description of the\ntest cases follows. The first and only line of each test case contains two\npositive integers, \n    n\n and \n    m\n respectively (\n    1 \n    \u2264 n,m \n    \u2264\n    10^18\n). Output For each testcase, output a non-negative integer \u2014 the\nHamming distance between the two required strings. Example Input 6 1 1 5 10 34\n211 73 34 19124639 56348772 12073412269 96221437021 Output 1 6 95 20 28208137\n48102976088 Note The string \n    S\n is equal to 0110100110010110.... In the\nfirst test case, \n    S_0\n is \"0\", and \n    S_1\n is \"1\". The Hamming distance\nbetween the two strings is \n    1\n. In the second test case, \n    S_0 S_1\n    \n    \u2026 S_9\n is \"0110100110\", and \n    S_5 S_6 \n    \u2026 S_14\n is\n\"0011001011\". The Hamming distance between the two strings is \n    6\n.\n\n",
        "cf_contest_id": 1734,
        "cf_index": "F",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "divide and conquer",
            "dp",
            "math"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n1 1\r\n5 10\r\n34 211\r\n73 34\r\n19124639 56348772\r\n12073412269 96221437021\r\n",
                "1\r\n6\r\n95\r\n20\r\n28208137\r\n48102976088\r\n"
            ]
        ],
        "private_cases": []
    }
]