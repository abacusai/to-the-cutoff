[
    {
        "name": "Teodor is not a liar!",
        "description": "Young Teodor enjoys drawing. His favourite hobby is drawing segments with\ninteger borders inside his huge [1;m] segment. One day Teodor noticed that\npicture he just drawn has one interesting feature: there doesn't exist an\ninteger point, that belongs each of segments in the picture. Having discovered\nthis fact, Teodor decided to share it with Sasha. Sasha knows that Teodor\nlikes to show off so he never trusts him. Teodor wants to prove that he can be\ntrusted sometimes, so he decided to convince Sasha that there is no such\ninteger point in his picture, which belongs to each segment. However Teodor is\nlazy person and neither wills to tell Sasha all coordinates of segments' ends\nnor wills to tell him their amount, so he suggested Sasha to ask him series of\nquestions 'Given the integer point xi, how many segments in Fedya's picture\ncontain that point?', promising to tell correct answers for this questions.\nBoth boys are very busy studying and don't have much time, so they ask you to\nfind out how many questions can Sasha ask Teodor, that having only answers on\nhis questions, Sasha can't be sure that Teodor isn't lying to him. Note that\nSasha doesn't know amount of segments in Teodor's picture. Sure, Sasha is\nsmart person and never asks about same point twice. Input First line of input\ncontains two integer numbers: n and m (1 \u2264 n, m \u2264 100 000) \u2014 amount of\nsegments of Teodor's picture and maximal coordinate of point that Sasha can\nask about. ith of next n lines contains two integer numbers li and ri (1 \u2264 li\n\u2264 ri \u2264 m) \u2014 left and right ends of ith segment in the picture. Note that that\nleft and right ends of segment can be the same point. It is guaranteed that\nthere is no integer point, that belongs to all segments. Output Single line of\noutput should contain one integer number k \u2013 size of largest set (xi, cnt(xi))\nwhere all xi are different, 1 \u2264 xi \u2264 m, and cnt(xi) is amount of segments,\ncontaining point with coordinate xi, such that one can't be sure that there\ndoesn't exist point, belonging to all of segments in initial picture, if he\nknows only this set(and doesn't know n). Examples Input 2 4 1 2 3 4 Output 4\nInput 4 6 1 3 2 3 4 6 5 6 Output 5 Note First example shows situation where\nSasha can never be sure that Teodor isn't lying to him, because even if one\nknows cnt(xi) for each point in segment [1;4], he can't distinguish this case\nfrom situation Teodor has drawn whole [1;4] segment. In second example Sasha\ncan ask about 5 points e.g. 1, 2, 3, 5, 6, still not being sure if Teodor\nhaven't lied to him. But once he knows information about all points in [1;6]\nsegment, Sasha can be sure that Teodor haven't lied to him.\n\n",
        "cf_contest_id": 930,
        "cf_index": "C",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 4\r\n1 2\r\n3 4\r\n",
                "4\r\n"
            ],
            [
                "4 6\r\n1 3\r\n2 3\r\n4 6\r\n5 6\r\n",
                "5\r\n"
            ]
        ],
        "private_cases": [
            [
                "43 1319\r\n750 1030\r\n857 946\r\n941 1203\r\n407 1034\r\n947 1290\r\n546 585\r\n630 1201\r\n72 342\r\n693 1315\r\n34 719\r\n176 1097\r\n36 931\r\n198 973\r\n5 1025\r\n892 1054\r\n461 1287\r\n195 1273\r\n832 1039\r\n308 955\r\n642 866\r\n770 838\r\n440 777\r\n289 948\r\n98 814\r\n458 768\r\n82 265\r\n300 596\r\n182 706\r\n368 1225\r\n237 626\r\n36 348\r\n100 222\r\n46 937\r\n364 396\r\n288 668\r\n1158 1243\r\n31 1108\r\n570 1000\r\n435 619\r\n339 1007\r\n132 734\r\n281 441\r\n636 1319\r\n",
                "1082\r\n"
            ],
            [
                "31 1600\r\n643 1483\r\n8 475\r\n15 472\r\n49 81\r\n300 1485\r\n627 682\r\n44 443\r\n1191 1541\r\n478 732\r\n1112 1202\r\n741 1341\r\n475 1187\r\n1218 1463\r\n523 1513\r\n355 477\r\n1259 1559\r\n384 928\r\n487 766\r\n227 1224\r\n1102 1268\r\n833 1240\r\n872 1342\r\n666 1075\r\n734 874\r\n32 880\r\n1411 1536\r\n520 778\r\n179 1003\r\n51 313\r\n1148 1288\r\n1467 1509\r\n",
                "1181\r\n"
            ],
            [
                "38 1109\r\n61 332\r\n429 756\r\n260 272\r\n57 991\r\n420 985\r\n143 219\r\n399 925\r\n486 1079\r\n69 881\r\n75 447\r\n678 774\r\n973 1016\r\n983 1059\r\n518 1049\r\n393 853\r\n375 1101\r\n475 946\r\n300 427\r\n294 715\r\n504 798\r\n211 1066\r\n730 815\r\n114 515\r\n589 1001\r\n464 1014\r\n451 757\r\n370 1017\r\n225 619\r\n452 988\r\n611 955\r\n349 1029\r\n73 165\r\n759 951\r\n574 803\r\n253 1045\r\n545 565\r\n603 773\r\n226 453\r\n",
                "996\r\n"
            ],
            [
                "11 3\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n2 2\r\n2 2\r\n2 2\r\n3 3\r\n3 3\r\n3 3\r\n3 3\r\n",
                "2\r\n"
            ]
        ]
    }
]