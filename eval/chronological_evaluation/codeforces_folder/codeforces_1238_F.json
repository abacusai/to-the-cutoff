[
    {
        "name": "The Maximum Subtree",
        "description": "Assume that you have \n    k\n one-dimensional segments \n    s_1, s_2, \n    \u2026\n    s_k\n (each segment is denoted by two integers \u2014 its endpoints). Then you can\nbuild the following graph on these segments. The graph consists of \n    k\n\nvertexes, and there is an edge between the \n    i\n-th and the \n    j\n-th\nvertexes (\n    i \n    \u2260 j\n) if and only if the segments \n    s_i\n and\n\n    s_j\n intersect (there exists at least one point that belongs to both of\nthem). For example, if \n    s_1 = [1, 6], s_2 = [8, 20], s_3 = [4, 10], s_4 =\n    [2, 13], s_5 = [17, 18]\n, then the resulting graph is the following: A tree\nof size \n    m\n is good if it is possible to choose \n    m\n one-dimensional\nsegments so that the graph built on these segments coincides with this tree.\nYou are given a tree, you have to find its good subtree with maximum possible\nsize. Recall that a subtree is a connected subgraph of a tree. Note that you\nhave to answer \n    q\n independent queries. Input The first line contains one\ninteger \n    q\n (\n    1 \n    \u2264 q \n    \u2264 15 \n    \u00b7 10^4\n) \u2014 the number of the\nqueries. The first line of each query contains one integer \n    n\n (\n    2 \n    \u2264\n    n \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the number of vertices in the tree. Each of the\nnext \n    n - 1\n lines contains two integers \n    x\n and \n    y\n (\n    1 \n    \u2264\n    x, y \n    \u2264 n\n) denoting an edge between vertices \n    x\n and \n    y\n. It is\nguaranteed that the given graph is a tree. It is guaranteed that the sum of\nall \n    n\n does not exceed \n    3 \n    \u00b7 10^5\n. Output For each query print\none integer \u2014 the maximum size of a good subtree of the given tree. Example\nInput 1 10 1 2 1 3 1 4 2 5 2 6 3 7 3 8 4 9 4 10 Output 8 Note In the first\nquery there is a good subtree of size \n    8\n. The vertices belonging to this\nsubtree are \n    9, 4, 10, 2, 5, 1, 6, 3\n.\n\n",
        "cf_contest_id": 1238,
        "cf_index": "F",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n10\r\n1 2\r\n1 3\r\n1 4\r\n2 5\r\n2 6\r\n3 7\r\n3 8\r\n4 9\r\n4 10\r\n",
                "8\r\n"
            ]
        ],
        "private_cases": []
    }
]