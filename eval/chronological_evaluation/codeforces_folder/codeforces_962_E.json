[
    {
        "name": "Byteland, Berland and Disputed Cities",
        "description": "The cities of Byteland and Berland are located on the axis \n    Ox\n. In\naddition, on this axis there are also disputed cities, which belong to each of\nthe countries in their opinion. Thus, on the line \n    Ox\n there are three\ntypes of cities: the cities of Byteland, the cities of Berland, disputed\ncities. Recently, the project BNET has been launched \u2014 a computer network of a\nnew generation. Now the task of the both countries is to connect the cities so\nthat the network of this country is connected. The countries agreed to connect\nthe pairs of cities with BNET cables in such a way that: If you look at the\nonly cities of Byteland and the disputed cities, then in the resulting set of\ncities, any city should be reachable from any other one by one or more cables,\nIf you look at the only cities of Berland and the disputed cities, then in the\nresulting set of cities, any city should be reachable from any other one by\none or more cables. Thus, it is necessary to choose a set of pairs of cities\nto connect by cables in such a way that both conditions are satisfied\nsimultaneously. Cables allow bi-directional data transfer. Each cable connects\nexactly two distinct cities. The cost of laying a cable from one city to\nanother is equal to the distance between them. Find the minimum total cost of\nlaying a set of cables so that two subsets of cities (Byteland and disputed\ncities, Berland and disputed cities) are connected. Each city is a point on\nthe line \n    Ox\n. It is technically possible to connect the cities \n    a\n\nand \n    b\n with a cable so that the city \n    c\n (\n    a < c < b\n) is not\nconnected to this cable, where \n    a\n, \n    b\n and \n    c\n are simultaneously\ncoordinates of the cities \n    a\n, \n    b\n and \n    c\n. Input The first line\ncontains a single integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014\nthe number of cities. The following \n    n\n lines contains an integer\n\n    x_i\n and the letter \n    c_i\n (\n    -10^9\n    \u2264 x_i \n    \u2264 10^9\n) \u2014\nthe coordinate of the city and its type. If the city belongs to Byteland,\n\n    c_i\n equals to 'B'. If the city belongs to Berland, \n    c_i\n equals to\n\u00abR\u00bb. If the city is disputed, \n    c_i\n equals to 'P'. All cities have\ndistinct coordinates. Guaranteed, that the cities are given in the increasing\norder of their coordinates. Output Print the minimal total length of such set\nof cables, that if we delete all Berland cities (\n    c_i\n='R'), it will be\npossible to find a way from any remaining city to any other remaining city,\nmoving only by cables. Similarly, if we delete all Byteland cities\n(\n    c_i\n='B'), it will be possible to find a way from any remaining city to\nany other remaining city, moving only by cables. Examples Input 4 -5 R 0 P 3 P\n7 B Output 12 Input 5 10 R 14 B 16 B 21 R 32 R Output 24 Note In the first\nexample, you should connect the first city with the second, the second with\nthe third, and the third with the fourth. The total length of the cables will\nbe \n    5 + 3 + 4 = 12\n. In the second example there are no disputed cities,\nso you need to connect all the neighboring cities of Byteland and all the\nneighboring cities of Berland. The cities of Berland have coordinates \n    10,\n    21, 32\n, so to connect them you need two cables of length \n    11\n and\n\n    11\n. The cities of Byteland have coordinates \n    14\n and \n    16\n, so to\nconnect them you need one cable of length \n    2\n. Thus, the total length of\nall cables is \n    11 + 11 + 2 = 24\n.\n\n",
        "cf_contest_id": 962,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n-5 R\r\n0 P\r\n3 P\r\n7 B\r\n",
                "12"
            ],
            [
                "5\r\n10 R\r\n14 B\r\n16 B\r\n21 R\r\n32 R\r\n",
                "24"
            ]
        ],
        "private_cases": [
            [
                "10\r\n66 R\r\n67 R\r\n72 R\r\n73 R\r\n76 R\r\n78 B\r\n79 B\r\n83 B\r\n84 B\r\n85 P\r\n",
                "26"
            ],
            [
                "10\r\n61 R\r\n64 R\r\n68 R\r\n71 R\r\n72 R\r\n73 R\r\n74 P\r\n86 P\r\n87 B\r\n90 B\r\n",
                "29"
            ],
            [
                "15\r\n-9518 R\r\n-6858 P\r\n-6726 B\r\n-6486 R\r\n-4496 P\r\n-4191 P\r\n-772 B\r\n-258 R\r\n-194 P\r\n1035 R\r\n2297 P\r\n4816 B\r\n5779 R\r\n9342 B\r\n9713 B\r\n",
                "25088"
            ],
            [
                "6\r\n-8401 R\r\n-5558 P\r\n-3457 P\r\n-2361 R\r\n6966 P\r\n8140 B\r\n",
                "17637"
            ],
            [
                "2\r\n1 R\r\n2 R\r\n",
                "1"
            ],
            [
                "2\r\n-1000000000 B\r\n1000000000 R\r\n",
                "0"
            ],
            [
                "2\r\n-1000000000 P\r\n1000000000 P\r\n",
                "2000000000"
            ],
            [
                "2\r\n-1000000000 B\r\n1000000000 P\r\n",
                "2000000000"
            ],
            [
                "9\r\n-105 R\r\n-81 B\r\n-47 P\r\n-25 R\r\n-23 B\r\n55 P\r\n57 R\r\n67 B\r\n76 P\r\n",
                "272"
            ],
            [
                "6\r\n-13 R\r\n-10 P\r\n-6 R\r\n-1 P\r\n4 R\r\n10 P\r\n",
                "32"
            ],
            [
                "8\r\n-839 P\r\n-820 P\r\n-488 P\r\n-334 R\r\n-83 B\r\n187 R\r\n380 B\r\n804 P\r\n",
                "2935"
            ],
            [
                "8\r\n-12 P\r\n-9 B\r\n-2 R\r\n-1 R\r\n2 B\r\n8 B\r\n9 R\r\n15 P\r\n",
                "54"
            ],
            [
                "6\r\n0 B\r\n3 P\r\n7 B\r\n9 B\r\n11 P\r\n13 B\r\n",
                "17"
            ]
        ]
    }
]