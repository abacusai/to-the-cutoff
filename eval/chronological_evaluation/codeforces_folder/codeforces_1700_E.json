[
    {
        "name": "Serega the Pirate",
        "description": "Little pirate Serega robbed a ship with puzzles of different kinds. Among all\nkinds, he liked only one, the hardest. A puzzle is a table of \n    n\n rows and\n\n    m\n columns, whose cells contain each number from \n    1\n to \n    n \n    \u00b7\n    m\n exactly once. To solve a puzzle, you have to find a sequence of cells in\nthe table, such that any two consecutive cells are adjacent by the side in the\ntable. The sequence can have arbitrary length and should visit each cell one\nor more times. For a cell containing the number \n    i\n, denote the position\nof the first occurrence of this cell in the sequence as \n    t_i\n. The\nsequence solves the puzzle, if \n    t_1 < t_2 < \n    \u2026 < t_nm\n. In other\nwords, the cell with number \n    x\n should be first visited before the cell\nwith number \n    x + 1\n for each \n    x\n. Let's call a puzzle solvable, if\nthere exists at least one suitable sequence. In one move Serega can choose two\narbitrary cells in the table (not necessarily adjacent by the side) and swap\ntheir numbers. He would like to know the minimum number of moves to make his\npuzzle solvable, but he is too impatient. Thus, please tell if the minimum\nnumber of moves is \n    0\n, \n    1\n, or at least \n    2\n. In the case, where\n\n    1\n move is required, please also find the number of suitable cell pairs\nto swap. Input In the first line there are two whole positive numbers \n    n,\n    m\n (\n    1 \n    \u2264 n\n    \u00b7 m \n    \u2264 400\n     000\n) \u2014 table dimensions. In the\nnext \n    n\n lines there are \n    m\n integer numbers \n    a_i1, a_i2,\n    \n    \u2026, a_im\n (\n    1 \n    \u2264 a_ij\n    \u2264 nm\n). It is guaranteed that\nevery number from \n    1\n to \n    nm\n occurs exactly once in the table. Output\nLet \n    a\n be the minimum number of moves to make the puzzle solvable. If\n\n    a = 0\n, print \n    0\n. If \n    a = 1\n, print \n    1\n and the number of\nvalid swaps. If \n    a \n    \u2265 2\n, print \n    2\n. Examples Input 3 3 2 1 3 6 7 4\n9 8 5 Output 0 Input 2 3 1 6 4 3 2 5 Output 1 3 Input 1 6 1 6 5 4 3 2 Output 2\nNote In the first example the sequence \n    (1, 2), (1, 1), (1, 2), (1, 3), (2,\n    3), (3, 3)\n, \n    (2, 3), (1, 3), (1, 2), (1, 1), (2, 1), (2, 2), (3, 2), (3,\n    1)\n solves the puzzle, so the answer is \n    0\n. The puzzle in the second\nexample can't be solved, but it's solvable after any of three swaps of cells\nwith values \n    (1, 5), (1, 6), (2, 6)\n. The puzzle from the third example\nrequires at least two swaps, so the answer is \n    2\n.\n\n",
        "cf_contest_id": 1700,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "constructive algorithms"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\n2 1 3\r\n6 7 4\r\n9 8 5\r\n",
                "0\r\n"
            ],
            [
                "2 3\r\n1 6 4\r\n3 2 5\r\n",
                "1 3\r\n"
            ],
            [
                "1 6\r\n1 6 5 4 3 2\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "40 2\r\n7 5\r\n4 20\r\n26 14\r\n28 40\r\n79 30\r\n11 48\r\n18 61\r\n77 68\r\n62 54\r\n57 67\r\n12 78\r\n59 29\r\n37 9\r\n27 13\r\n47 17\r\n69 31\r\n49 74\r\n44 3\r\n19 2\r\n15 38\r\n45 16\r\n80 1\r\n70 24\r\n56 58\r\n35 46\r\n10 21\r\n6 42\r\n36 53\r\n71 52\r\n66 43\r\n34 55\r\n51 32\r\n41 72\r\n50 22\r\n25 75\r\n65 64\r\n8 73\r\n33 23\r\n60 76\r\n63 39\r\n",
                "2\r\n"
            ],
            [
                "9 8\r\n72 71 70 69 68 67 66 65\r\n64 63 62 61 60 59 58 57\r\n56 55 54 53 52 51 50 7\r\n48 47 17 45 44 43 42 41\r\n40 39 38 37 36 35 34 33\r\n32 31 30 29 28 27 26 25\r\n24 23 22 21 20 19 18 49\r\n16 15 14 13 12 11 10 9\r\n8 46 6 5 4 3 2 1\r\n",
                "2\r\n"
            ],
            [
                "5 17\r\n27 2 3 4 5 6 7 8 9 1 11 12 29 14 15 16 17\r\n18 19 20 21 22 23 24 25 26 10 28 13 30 31 32 33 52\r\n35 36 37 38 39 40 41 42 43 44 45 46 47 48 85 50 51\r\n34 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68\r\n69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 49\r\n",
                "2\r\n"
            ],
            [
                "8 9\r\n1 2 3 4 5 6 7 8 9\r\n35 31 32 33 34 30 36 37 10\r\n29 52 53 54 55 56 57 38 11\r\n28 51 66 67 68 69 58 39 12\r\n27 50 65 72 71 70 59 40 13\r\n26 49 64 63 62 61 60 41 14\r\n25 48 47 46 45 44 43 42 15\r\n24 23 22 21 20 19 18 17 16\r\n",
                "0\r\n"
            ],
            [
                "32 2\r\n31 34\r\n33 35\r\n32 36\r\n30 37\r\n29 38\r\n28 39\r\n27 40\r\n26 41\r\n25 42\r\n24 43\r\n23 44\r\n22 45\r\n21 46\r\n19 47\r\n20 48\r\n18 49\r\n17 50\r\n16 51\r\n15 52\r\n14 53\r\n13 54\r\n12 55\r\n11 56\r\n10 57\r\n9 58\r\n8 59\r\n7 60\r\n5 61\r\n6 62\r\n4 63\r\n3 64\r\n2 1\r\n",
                "2\r\n"
            ],
            [
                "10 10\r\n1 2 3 4 5 6 7 8 9 10\r\n11 12 13 14 15 16 17 18 19 20\r\n21 22 23 24 25 26 27 28 29 30\r\n31 32 33 34 35 36 37 38 39 59\r\n41 42 43 44 45 46 47 48 40 50\r\n51 52 53 54 55 56 57 58 49 60\r\n61 62 63 64 65 66 67 68 69 70\r\n71 72 73 74 75 76 77 78 79 80\r\n81 82 83 84 85 86 87 88 89 90\r\n91 92 93 94 95 96 97 98 99 100\r\n",
                "0\r\n"
            ],
            [
                "60 1\r\n42\r\n50\r\n49\r\n21\r\n17\r\n34\r\n58\r\n24\r\n28\r\n26\r\n7\r\n9\r\n10\r\n60\r\n57\r\n3\r\n45\r\n1\r\n44\r\n55\r\n27\r\n25\r\n41\r\n38\r\n23\r\n16\r\n8\r\n53\r\n11\r\n47\r\n18\r\n43\r\n12\r\n29\r\n36\r\n40\r\n31\r\n59\r\n4\r\n54\r\n33\r\n2\r\n14\r\n22\r\n19\r\n15\r\n6\r\n48\r\n56\r\n46\r\n13\r\n35\r\n5\r\n20\r\n39\r\n51\r\n37\r\n52\r\n30\r\n32\r\n",
                "2\r\n"
            ],
            [
                "6 12\r\n44 22 56 21 24 72 55 25 42 66 39 41\r\n8 27 7 13 6 46 12 50 33 63 53 28\r\n52 69 32 15 58 26 57 29 36 40 54 11\r\n61 70 47 16 10 45 35 5 37 51 65 31\r\n62 9 49 71 14 30 43 18 68 59 4 20\r\n1 19 2 34 23 3 17 38 67 64 60 48\r\n",
                "2\r\n"
            ],
            [
                "29 3\r\n1 79 3\r\n80 61 4\r\n18 62 50\r\n58 63 10\r\n64 57 83\r\n56 72 38\r\n19 66 55\r\n16 67 8\r\n65 68 11\r\n52 84 12\r\n71 70 13\r\n5 51 14\r\n76 44 15\r\n48 77 2\r\n47 87 17\r\n46 75 9\r\n45 20 59\r\n53 42 29\r\n43 78 21\r\n73 54 22\r\n41 60 23\r\n35 81 24\r\n39 82 25\r\n49 7 26\r\n37 69 27\r\n36 85 28\r\n40 86 34\r\n6 74 30\r\n33 32 31\r\n",
                "2\r\n"
            ],
            [
                "12 7\r\n69 68 70 60 50 51 59\r\n65 64 62 63 49 52 56\r\n66 67 61 47 48 53 55\r\n79 75 76 46 26 54 57\r\n82 71 77 45 25 24 58\r\n81 73 78 44 22 23 30\r\n80 41 42 43 21 27 28\r\n83 40 74 72 20 19 29\r\n39 1 2 38 32 18 31\r\n7 84 3 9 37 17 33\r\n6 5 4 10 15 16 36\r\n8 13 12 11 14 34 35\r\n",
                "1 47\r\n"
            ],
            [
                "8 12\r\n40 39 29 28 30 18 17 91 13 12 2 1\r\n37 38 31 20 27 19 16 15 14 67 3 11\r\n36 42 26 25 24 32 89 92 95 66 4 10\r\n35 34 33 21 23 22 90 93 96 65 5 6\r\n43 41 85 86 52 53 88 94 60 64 7 8\r\n51 44 84 83 78 54 55 58 59 63 68 9\r\n49 45 50 82 79 87 56 57 61 62 70 71\r\n47 46 48 81 80 77 74 75 76 69 72 73\r\n",
                "2\r\n"
            ]
        ]
    }
]