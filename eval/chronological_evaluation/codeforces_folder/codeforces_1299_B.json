[
    {
        "name": "Aerodynamic",
        "description": "Guy-Manuel and Thomas are going to build a polygon spaceship. You're given a\nstrictly convex (i. e. no three points are collinear) polygon \n    P\n which is\ndefined by coordinates of its vertices. Define \n    P(x,y)\n as a polygon\nobtained by translating \n    P\n by vector \n    (x,y)\n. The\npicture below depicts an example of the translation: Define \n    T\n as a set\nof points which is the union of all \n    P(x,y)\n such that the origin\n\n    (0,0)\n lies in \n    P(x,y)\n (both strictly inside and on the boundary).\nThere is also an equivalent definition: a point \n    (x,y)\n lies in \n    T\n\nonly if there are two points \n    A,B\n in \n    P\n such that\n\n    AB = \n    (x,y)\n. One can prove\n\n    T\n is a polygon too. For example, if \n    P\n is a regular triangle then\n\n    T\n is a regular hexagon. At the picture below \n    P\n is drawn in black\nand some \n    P(x,y)\n which contain the origin are drawn in colored: The\nspaceship has the best aerodynamic performance if \n    P\n and \n    T\n are\nsimilar. Your task is to check whether the polygons \n    P\n and \n    T\n are\nsimilar. Input The first line of input will contain a single integer \n    n\n\n(\n    3 \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of points. The \n    i\n-th of the\nnext \n    n\n lines contains two integers \n    x_i, y_i\n (\n    |x_i|, |y_i| \n    \u2264\n    10^9\n), denoting the coordinates of the \n    i\n-th vertex. It is guaranteed\nthat these points are listed in counterclockwise order and these points form a\nstrictly convex polygon. Output Output \"YES\" in a separate line, if \n    P\n\nand \n    T\n are similar. Otherwise, output \"NO\" in a separate line. You can\nprint each letter in any case (upper or lower). Examples Input 4 1 0 4 1 3 4 0\n3 Output YES Input 3 100 86 50 0 150 0 Output nO Input 8 0 0 1 0 2 1 3 3 4 6 3\n6 2 5 1 3 Output YES Note The following image shows the first sample: both\n\n    P\n and \n    T\n are squares. The second sample was shown in the\nstatements.\n\n",
        "cf_contest_id": 1299,
        "cf_index": "B",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "geometry"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1 0\r\n4 1\r\n3 4\r\n0 3\r\n",
                "YES\r\n"
            ],
            [
                "3\r\n100 86\r\n50 0\r\n150 0\r\n",
                "NO\r\n"
            ],
            [
                "8\r\n0 0\r\n1 0\r\n2 1\r\n3 3\r\n4 6\r\n3 6\r\n2 5\r\n1 3\r\n",
                "YES\r\n"
            ]
        ],
        "private_cases": [
            [
                "6\r\n-2 0\r\n0 -2\r\n5 -2\r\n6 -1\r\n3 2\r\n0 2\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n5 0\r\n0 5\r\n-3 7\r\n-4 0\r\n-3 -7\r\n0 -5\r\n",
                "NO\r\n"
            ],
            [
                "3\r\n-476142377 -879368204\r\n585415757 810733242\r\n-72238411 997387393\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n156187286 -987727459\r\n913926112 405880599\r\n884444542 466645316\r\n-345070828 938576647\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n15618728 -98772746\r\n91392611 40588059\r\n88444454 46664531\r\n12670571 -92696274\r\n",
                "YES\r\n"
            ],
            [
                "5\r\n447378739 -894344600\r\n899151708 -437637070\r\n991954622 -126593944\r\n931041383 364913608\r\n717207170 696860010\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n-995552468 -94208724\r\n-684955162 -728585223\r\n-563923711 -825826889\r\n-454960346 -890511698\r\n746754241 665100070\r\n245764742 969329506\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n-99555247 -9420873\r\n-68495517 -72858523\r\n-56392372 -82582689\r\n-45496035 -89051170\r\n-76555765 -25613520\r\n-88658910 -15889354\r\n",
                "YES\r\n"
            ],
            [
                "7\r\n-950361471 -311147995\r\n534025901 -845468118\r\n776720035 -629846003\r\n907200193 -420699191\r\n852511756 522708049\r\n420003713 907522385\r\n5054171 999987227\r\n",
                "NO\r\n"
            ],
            [
                "8\r\n-440365664 -897818514\r\n107345267 -994221803\r\n248590739 -968608613\r\n473576011 -880752952\r\n105203574 994450706\r\n-164464580 986382989\r\n-522092561 852888831\r\n-874210729 485546704\r\n",
                "NO\r\n"
            ],
            [
                "8\r\n-44036567 -89781852\r\n10734526 -99422181\r\n24859073 -96860862\r\n47357601 -88075296\r\n10520357 99445070\r\n-44250736 109085399\r\n-58375283 106524080\r\n-80873811 97738514\r\n",
                "YES\r\n"
            ],
            [
                "4\r\n1000000000 1000000000\r\n-1000000000 1000000000\r\n-1000000000 -1000000000\r\n1000000000 -1000000000\r\n",
                "YES\r\n"
            ],
            [
                "8\r\n99 50\r\n50 99\r\n-49 99\r\n-99 49\r\n-99 -52\r\n-50 -101\r\n48 -101\r\n99 -50\r\n",
                "NO\r\n"
            ],
            [
                "8\r\n100 50\r\n49 101\r\n-49 101\r\n-100 50\r\n-100 -49\r\n-49 -100\r\n51 -100\r\n100 -51\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n1000000000 1000000000\r\n-1000000000 1000000000\r\n-1000000000 -1000000000\r\n1000000000 -999999999\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n999999999 1000000000\r\n-1000000000 999999999\r\n-999999999 -1000000000\r\n1000000000 -999999999\r\n",
                "YES\r\n"
            ],
            [
                "8\r\n101 49\r\n51 99\r\n-51 99\r\n-99 51\r\n-99 -50\r\n-51 -98\r\n51 -98\r\n101 -48\r\n",
                "NO\r\n"
            ],
            [
                "8\r\n99 50\r\n47 102\r\n-48 102\r\n-101 49\r\n-101 -52\r\n-52 -101\r\n49 -101\r\n99 -51\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n0 0\r\n-14 34\r\n-2982 26\r\n-3008 0\r\n-2982 -26\r\n-14 -34\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n0 0\r\n-1 21\r\n-2035 19\r\n-2044 0\r\n-2035 -19\r\n-1 -21\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n0 0\r\n-1 31\r\n-2255 29\r\n-2266 0\r\n-2255 -29\r\n-1 -31\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n0 0\r\n-7 23\r\n-2481 17\r\n-2498 0\r\n-2481 -17\r\n-7 -23\r\n",
                "NO\r\n"
            ],
            [
                "10\r\n0 0\r\n-1 23\r\n-14 59\r\n-2207 51\r\n-2220 32\r\n-2241 0\r\n-2220 -32\r\n-2207 -51\r\n-14 -59\r\n-1 -23\r\n",
                "NO\r\n"
            ],
            [
                "14\r\n0 0\r\n-3 39\r\n-21 82\r\n-50 130\r\n-2654 114\r\n-2690 71\r\n-2717 33\r\n-2738 0\r\n-2717 -33\r\n-2690 -71\r\n-2654 -114\r\n-50 -130\r\n-21 -82\r\n-3 -39\r\n",
                "NO\r\n"
            ],
            [
                "10\r\n0 0\r\n-8 39\r\n-18 69\r\n-2635 62\r\n-2653 36\r\n-2670 0\r\n-2653 -36\r\n-2635 -62\r\n-18 -69\r\n-8 -39\r\n",
                "NO\r\n"
            ],
            [
                "14\r\n0 0\r\n-6 33\r\n-13 67\r\n-30 112\r\n-2267 91\r\n-2300 56\r\n-2323 30\r\n-2338 0\r\n-2323 -30\r\n-2300 -56\r\n-2267 -91\r\n-30 -112\r\n-13 -67\r\n-6 -33\r\n",
                "NO\r\n"
            ],
            [
                "10\r\n0 0\r\n-2 19\r\n-11 39\r\n-2319 30\r\n-2334 14\r\n-2347 0\r\n-2334 -14\r\n-2319 -30\r\n-11 -39\r\n-2 -19\r\n",
                "NO\r\n"
            ],
            [
                "14\r\n0 0\r\n-4 42\r\n-14 70\r\n-27 106\r\n-2959 90\r\n-2979 68\r\n-3000 36\r\n-3022 0\r\n-3000 -36\r\n-2979 -68\r\n-2959 -90\r\n-27 -106\r\n-14 -70\r\n-4 -42\r\n",
                "NO\r\n"
            ],
            [
                "10\r\n0 0\r\n-2 44\r\n-20 91\r\n-2795 72\r\n-2828 34\r\n-2856 0\r\n-2828 -34\r\n-2795 -72\r\n-20 -91\r\n-2 -44\r\n",
                "NO\r\n"
            ],
            [
                "14\r\n0 0\r\n-1 21\r\n-7 56\r\n-16 102\r\n-2075 88\r\n-2101 49\r\n-2120 19\r\n-2129 0\r\n-2120 -19\r\n-2101 -49\r\n-2075 -88\r\n-16 -102\r\n-7 -56\r\n-1 -21\r\n",
                "NO\r\n"
            ],
            [
                "18\r\n0 0\r\n-3 22\r\n-10 62\r\n-18 87\r\n-33 129\r\n-2201 103\r\n-2231 70\r\n-2248 50\r\n-2273 18\r\n-2286 0\r\n-2273 -18\r\n-2248 -50\r\n-2231 -70\r\n-2201 -103\r\n-33 -129\r\n-18 -87\r\n-10 -62\r\n-3 -22\r\n",
                "NO\r\n"
            ],
            [
                "18\r\n0 0\r\n-1 46\r\n-8 87\r\n-15 117\r\n-27 161\r\n-2559 132\r\n-2590 98\r\n-2618 62\r\n-2636 37\r\n-2655 0\r\n-2636 -37\r\n-2618 -62\r\n-2590 -98\r\n-2559 -132\r\n-27 -161\r\n-15 -117\r\n-8 -87\r\n-1 -46\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n0 0\r\n2 0\r\n4 1\r\n3 2\r\n-1 2\r\n-2 1\r\n",
                "NO\r\n"
            ],
            [
                "6\r\n0 0\r\n1 0\r\n2 1\r\n1 3\r\n0 3\r\n-1 1\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n0 0\r\n1 0\r\n1 1\r\n0 2\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n0 0\r\n1 -1\r\n3 0\r\n1 1\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n-5 -5\r\n6 -4\r\n6 4\r\n-5 5\r\n",
                "NO\r\n"
            ],
            [
                "4\r\n1000000000 0\r\n0 1000000000\r\n-999999999 0\r\n0 -1000000000\r\n",
                "NO\r\n"
            ]
        ]
    }
]