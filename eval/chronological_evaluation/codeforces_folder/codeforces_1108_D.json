[
    {
        "name": "Diverse Garland",
        "description": "You have a garland consisting of \n    n\n lamps. Each lamp is colored red,\ngreen or blue. The color of the \n    i\n-th lamp is \n    s_i\n ('R', 'G' and 'B'\n\u2014 colors of lamps in the garland). You have to recolor some lamps in this\ngarland (recoloring a lamp means changing its initial color to another) in\nsuch a way that the obtained garland is diverse. A garland is called diverse\nif any two adjacent (consecutive) lamps (i. e. such lamps that the distance\nbetween their positions is \n    1\n) have distinct colors. In other words, if\nthe obtained garland is \n    t\n then for each \n    i\n from \n    1\n to\n\n    n-1\n the condition \n    t_i \n     t_i + 1\n should be satisfied. Among\nall ways to recolor the initial garland to make it diverse you have to choose\none with the minimum number of recolored lamps. If there are multiple optimal\nsolutions, print any of them. Input The first line of the input contains one\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of lamps.\nThe second line of the input contains the string \n    s\n consisting of \n    n\n\ncharacters 'R', 'G' and 'B' \u2014 colors of lamps in the garland. Output In the\nfirst line of the output print one integer \n    r\n \u2014 the minimum number of\nrecolors needed to obtain a diverse garland from the given one. In the second\nline of the output print one string \n    t\n of length \n    n\n \u2014 a diverse\ngarland obtained from the initial one with minimum number of recolors. If\nthere are multiple optimal solutions, print any of them. Examples Input 9\nRBGRRBRGG Output 2 RBGRGBRGR Input 8 BBBGBRRR Output 2 BRBGBRGR Input 13\nBBRRRRGGGGGRR Output 6 BGRBRBGBGBGRG\n\n",
        "cf_contest_id": 1108,
        "cf_index": "D",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "9\r\nRBGRRBRGG\r\n",
                "2 RBGRGBRGR\r\n"
            ],
            [
                "8\r\nBBBGBRRR\r\n",
                "2 BRBGBRGR\r\n"
            ],
            [
                "13\r\nBBRRRRGGGGGRR\r\n",
                "6 BGRGRBGRGRGRG\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nB\r\n",
                "0 B\r\n"
            ],
            [
                "2\r\nBB\r\n",
                "1 BR\r\n"
            ],
            [
                "3\r\nRGG\r\n",
                "1 RGR\r\n"
            ],
            [
                "5\r\nGBBRG\r\n",
                "1 GBGRG\r\n"
            ],
            [
                "500\r\nBRGRRBBGGRBBRBBGGGRBGBGRGRRBRRRBGRBGBRGGGRBBRRBBBRGGBGBBBGGGRGRBBBRBGGBRGGGBRGGRBRGBBGBRRGGBGRGBGGGGGRBBRGBGGRBGGGRBRGGBBGRBBRRRGBRRBGGBGBGGGGRBGRGRRGGGBRBRRGBGGGRBRBBGBBGGBRBGBRRGGRRBGGRRRRBRGRBBBRRBGRBBGBGBRRGGBRRBBRRGGRRRBGBRBBGRRRRBGGGBRGRRBRRRRGGRBRRBBRRGRGBGRRRBRRGGBBGRRBBGRGRBRGBRBBRBBBBGBRGGGGGGBBBGRGGBGRRBRBBBBRBGBRRGGRGBGGBRGRBGRBGBGRRGRGBGGRRRGRGBRGBGBBGRRBBGGGBRGGBGRRGGGRBGGRRBRGBGGBRRBBGGGGRRBGGGBRGGBRRRBRBGGRRRRGBRBBRBRGRGRRBBBBGBRGRRRRGBGBRGGGRBRGGGBGBBRGRRRBBRBGGGRGBRRGGRRGGBBGRR\r\n",
                "131 BRGRGBRGBRBGRBRGRGRBGBGRGRGBRGRBGRBGBRGRGRBGRGBGBRGRBGBGBGRGRGRBGBRBGRBRGRGBRGBRBRGBRGBRBGRBGRGBGRGRGRBGRGBGBRBGRGRBRGRBRGRBGRGRGBRGBGRBGBGRGBRBGRGRBGRGBRBRBGBGRGRBRBRGBRGRBRBGBRBGBRGBGBRGRGBRGRBGBRGBGRBRGBGBRBGRBRGBGRBGBRGRBGBRBRGRGRGBGRGBRGRGBRGRBGBRBRGBGRBGRGBGRGRBRBGRBRGRGBRGRGRBRGBRBGRBGBRGBRGRGRGRBGBGRGRBGRGBRBGBGRBGBRBGBRGBGRBRGRBGRBGBGRBGRGBGBRGRGRGBRGBGBRGRGBRGRGBRGRBGRBGRGRBGBRGBRGBGRBRGBRGRGBRGBGRGBRGRBRGRBRBGBRGRBGBRBGRBRGRGRGBGBRGBRGRGRBGBGBRGRGRBRGRGBGBGRGRGRBGRBGRGRGBRBGBRBGRBRGRG\r\n"
            ],
            [
                "69\r\nRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR\r\n",
                "34 RGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGRGR\r\n"
            ]
        ]
    }
]