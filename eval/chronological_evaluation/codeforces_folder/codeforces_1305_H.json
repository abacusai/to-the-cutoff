[
    {
        "name": "Kuroni the Private Tutor",
        "description": "As a professional private tutor, Kuroni has to gather statistics of an exam.\nKuroni has appointed you to complete this important task. You must not\ndisappoint him. The exam consists of \n    n\n questions, and \n    m\n students\nhave taken the exam. Each question was worth \n    1\n point. Question \n    i\n\nwas solved by at least \n    l_i\n and at most \n    r_i\n students. Additionally,\nyou know that the total score of all students is \n    t\n. Furthermore, you\ntook a glance at the final ranklist of the quiz. The students were ranked from\n\n    1\n to \n    m\n, where rank \n    1\n has the highest score and rank \n    m\n\nhas the lowest score. Ties were broken arbitrarily. You know that the student\nat rank \n    p_i\n had a score of \n    s_i\n for \n    1 \n    \u2264 i \n    \u2264 q\n. You\nwonder if there could have been a huge tie for first place. Help Kuroni\ndetermine the maximum number of students who could have gotten as many points\nas the student with rank \n    1\n, and the maximum possible score for rank\n\n    1\n achieving this maximum number of students. Input The first line of\ninput contains two integers (\n    1 \n    \u2264 n, m \n    \u2264 10^5\n), denoting the\nnumber of questions of the exam and the number of students respectively. The\nnext \n    n\n lines contain two integers each, with the \n    i\n-th line\ncontaining \n    l_i\n and \n    r_i\n (\n    0 \n    \u2264 l_i\n    \u2264 r_i\n    \u2264\n    m\n). The next line contains a single integer \n    q\n (\n    0 \n    \u2264 q \n    \u2264\n    m\n). The next \n    q\n lines contain two integers each, denoting \n    p_i\n\nand \n    s_i\n (\n    1 \n    \u2264 p_i\n    \u2264 m\n, \n    0 \n    \u2264 s_i\n    \u2264 n\n). It\nis guaranteed that all \n    p_i\n are distinct and if \n    p_i\n    \u2264\n    p_j\n, then \n    s_i\n    \u2265 s_j\n. The last line contains a single\ninteger \n    t\n (\n    0 \n    \u2264 t \n    \u2264 nm\n), denoting the total score of all\nstudents. Output Output two integers: the maximum number of students who could\nhave gotten as many points as the student with rank \n    1\n, and the maximum\npossible score for rank \n    1\n achieving this maximum number of students. If\nthere is no valid arrangement that fits the given data, output \n    -1\n\n\n    -1\n. Examples Input 5 4 2 4 2 3 1 1 0 1 0 0 1 4 1 7 Output 3 2 Input 5 6\n0 6 0 6 2 5 6 6 4 6 1 3 3 30 Output -1 -1 Note For the first sample, here is\none possible arrangement that fits the data: Students \n    1\n and \n    2\n both\nsolved problems \n    1\n and \n    2\n. Student \n    3\n solved problems \n    2\n\nand \n    3\n. Student \n    4\n solved problem \n    4\n. The total score of all\nstudents is \n    T = 7\n. Note that the scores of the students are \n    2\n,\n\n    2\n, \n    2\n and \n    1\n respectively, which satisfies the condition that\nthe student at rank \n    4\n gets exactly \n    1\n point. Finally, \n    3\n\nstudents tied for first with a maximum score of \n    2\n, and it can be proven\nthat we cannot do better with any other arrangement.\n\n",
        "cf_contest_id": 1305,
        "cf_index": "H",
        "cf_rating": 3500,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "greedy"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4\r\n2 4\r\n2 3\r\n1 1\r\n0 1\r\n0 0\r\n1\r\n4 1\r\n7\r\n",
                "3 2\r\n"
            ],
            [
                "5 6\r\n0 6\r\n0 6\r\n2 5\r\n6 6\r\n4 6\r\n1\r\n3 3\r\n30\r\n",
                "-1 -1\r\n"
            ]
        ],
        "private_cases": [
            [
                "11 10\r\n4 5\r\n3 4\r\n7 7\r\n5 8\r\n6 6\r\n5 6\r\n5 5\r\n6 7\r\n4 5\r\n4 4\r\n3 5\r\n1\r\n5 8\r\n61\r\n",
                "7 8\r\n"
            ],
            [
                "1 1\r\n0 1\r\n0\r\n1\r\n",
                "1 1\r\n"
            ],
            [
                "4 5\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n4\r\n4 0\r\n1 0\r\n5 0\r\n2 0\r\n0\r\n",
                "5 0\r\n"
            ],
            [
                "5 5\r\n1 5\r\n0 5\r\n0 5\r\n4 5\r\n2 5\r\n4\r\n2 5\r\n1 5\r\n3 5\r\n5 5\r\n25\r\n",
                "5 5\r\n"
            ],
            [
                "4 4\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n3\r\n4 0\r\n3 0\r\n2 0\r\n0\r\n",
                "4 0\r\n"
            ],
            [
                "4 5\r\n0 5\r\n0 0\r\n0 1\r\n2 2\r\n5\r\n5 1\r\n4 1\r\n3 2\r\n2 2\r\n1 2\r\n8\r\n",
                "3 2\r\n"
            ],
            [
                "5 4\r\n4 4\r\n4 4\r\n4 4\r\n4 4\r\n4 4\r\n0\r\n20\r\n",
                "4 5\r\n"
            ],
            [
                "4 4\r\n0 2\r\n1 1\r\n0 4\r\n0 1\r\n3\r\n3 1\r\n4 1\r\n2 1\r\n4\r\n",
                "4 1\r\n"
            ],
            [
                "5 5\r\n0 5\r\n1 4\r\n1 5\r\n2 2\r\n1 2\r\n5\r\n3 3\r\n4 3\r\n5 1\r\n2 5\r\n1 5\r\n7\r\n",
                "-1 -1\r\n"
            ],
            [
                "4 4\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n2\r\n4 0\r\n2 0\r\n0\r\n",
                "4 0\r\n"
            ],
            [
                "5 5\r\n0 1\r\n0 1\r\n0 1\r\n0 1\r\n0 1\r\n4\r\n2 1\r\n1 1\r\n4 0\r\n5 0\r\n2\r\n",
                "2 1\r\n"
            ],
            [
                "5 5\r\n1 3\r\n3 4\r\n2 3\r\n2 3\r\n2 3\r\n1\r\n5 1\r\n13\r\n",
                "4 3\r\n"
            ],
            [
                "5 4\r\n2 3\r\n2 3\r\n4 4\r\n2 3\r\n2 3\r\n2\r\n1 5\r\n4 2\r\n16\r\n",
                "2 5\r\n"
            ],
            [
                "5 5\r\n5 5\r\n4 5\r\n3 4\r\n4 5\r\n3 4\r\n3\r\n4 4\r\n5 4\r\n2 5\r\n23\r\n",
                "3 5\r\n"
            ],
            [
                "5 4\r\n3 4\r\n4 4\r\n3 4\r\n4 4\r\n3 4\r\n4\r\n2 5\r\n4 5\r\n3 5\r\n1 5\r\n20\r\n",
                "4 5\r\n"
            ],
            [
                "5 4\r\n3 4\r\n3 4\r\n3 3\r\n4 4\r\n3 3\r\n0\r\n18\r\n",
                "3 5\r\n"
            ],
            [
                "5 4\r\n0 4\r\n4 4\r\n0 4\r\n1 4\r\n2 4\r\n2\r\n1 5\r\n4 5\r\n20\r\n",
                "4 5\r\n"
            ],
            [
                "4 4\r\n0 0\r\n0 0\r\n0 0\r\n0 0\r\n4\r\n3 0\r\n1 0\r\n2 0\r\n4 0\r\n0\r\n",
                "4 0\r\n"
            ],
            [
                "4 4\r\n1 1\r\n0 1\r\n1 1\r\n0 0\r\n3\r\n4 0\r\n1 1\r\n3 1\r\n3\r\n",
                "3 1\r\n"
            ],
            [
                "4 4\r\n3 4\r\n0 2\r\n0 3\r\n4 4\r\n1\r\n2 4\r\n13\r\n",
                "2 4\r\n"
            ],
            [
                "4 5\r\n3 4\r\n2 3\r\n4 4\r\n3 4\r\n3\r\n5 1\r\n3 3\r\n1 4\r\n15\r\n",
                "2 4\r\n"
            ],
            [
                "4 4\r\n1 2\r\n0 1\r\n1 1\r\n1 3\r\n1\r\n4 0\r\n5\r\n",
                "2 2\r\n"
            ],
            [
                "5 5\r\n5 5\r\n5 5\r\n5 5\r\n5 5\r\n5 5\r\n0\r\n25\r\n",
                "5 5\r\n"
            ],
            [
                "5 4\r\n2 2\r\n1 1\r\n1 1\r\n2 2\r\n3 3\r\n4\r\n1 3\r\n3 3\r\n4 0\r\n2 3\r\n9\r\n",
                "3 3\r\n"
            ],
            [
                "5 5\r\n1 1\r\n1 1\r\n1 1\r\n0 0\r\n1 1\r\n4\r\n2 1\r\n4 1\r\n1 1\r\n3 1\r\n4\r\n",
                "4 1\r\n"
            ],
            [
                "4 4\r\n3 3\r\n3 3\r\n4 4\r\n3 3\r\n1\r\n1 4\r\n13\r\n",
                "3 4\r\n"
            ],
            [
                "5 5\r\n0 0\r\n0 1\r\n0 1\r\n0 2\r\n0 0\r\n1\r\n2 0\r\n0\r\n",
                "5 0\r\n"
            ],
            [
                "5 4\r\n0 2\r\n0 0\r\n0 3\r\n0 3\r\n0 2\r\n3\r\n1 1\r\n2 1\r\n4 0\r\n2\r\n",
                "2 1\r\n"
            ],
            [
                "5 3\r\n0 1\r\n0 1\r\n0 2\r\n0 0\r\n0 0\r\n2\r\n2 0\r\n3 0\r\n0\r\n",
                "3 0\r\n"
            ],
            [
                "5 4\r\n0 2\r\n0 1\r\n1 3\r\n2 3\r\n0 3\r\n4\r\n3 2\r\n4 2\r\n1 2\r\n2 2\r\n8\r\n",
                "4 2\r\n"
            ],
            [
                "5 5\r\n1 5\r\n1 4\r\n2 4\r\n0 5\r\n2 2\r\n1\r\n4 2\r\n2\r\n",
                "-1 -1\r\n"
            ]
        ]
    }
]