[
    {
        "name": "Riverside Curio",
        "description": "Arkady decides to observe a river for n consecutive days. The river's water\nlevel on each day is equal to some real value. Arkady goes to the riverside\neach day and makes a mark on the side of the channel at the height of the\nwater level, but if it coincides with a mark made before, no new mark is\ncreated. The water does not wash the marks away. Arkady writes down the number\nof marks strictly above the water level each day, on the i-th day this value\nis equal to mi. Define di as the number of marks strictly under the water\nlevel on the i-th day. You are to find out the minimum possible sum of di over\nall days. There are no marks on the channel before the first day. Input The\nfirst line contains a single positive integer n (1 \u2264 n \u2264 10^5) \u2014 the number of\ndays. The second line contains n space-separated integers m1, m2, ..., mn (0 \u2264\nmi < i) \u2014 the number of marks strictly above the water on each day. Output\nOutput one single integer \u2014 the minimum possible sum of the number of marks\nstrictly below the water level among all days. Examples Input 6 0 1 0 3 0 2\nOutput 6 Input 5 0 1 2 1 2 Output 1 Input 5 0 1 1 2 2 Output 0 Note In the\nfirst example, the following figure shows an optimal case. Note that on day 3,\na new mark should be created because if not, there cannot be 3 marks above\nwater on day 4. The total number of marks underwater is 0 + 0 + 2 + 0 + 3 + 1\n= 6. In the second example, the following figure shows an optimal case.\n\n",
        "cf_contest_id": 924,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n0 1 0 3 0 2\r\n",
                "6\r\n"
            ],
            [
                "5\r\n0 1 2 1 2\r\n",
                "1\r\n"
            ],
            [
                "5\r\n0 1 1 2 2\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0\r\n",
                "0\r\n"
            ],
            [
                "100\r\n0 1 2 2 3 0 1 5 6 6 0 0 8 7 1 9 9 4 10 11 12 2 12 12 12 12 9 13 14 8 15 15 15 19 15 7 17 17 18 19 9 10 21 0 22 9 2 24 24 4 24 7 25 14 5 8 28 29 30 31 31 31 0 3 15 31 8 33 6 35 35 35 36 36 37 37 38 39 28 0 2 23 41 9 9 0 6 25 41 41 12 42 43 43 36 44 51 45 43 4\r\n",
                "761\r\n"
            ],
            [
                "2\r\n0 1\r\n",
                "0\r\n"
            ],
            [
                "2\r\n0 0\r\n",
                "0\r\n"
            ],
            [
                "3\r\n0 1 0\r\n",
                "1\r\n"
            ],
            [
                "3\r\n0 0 1\r\n",
                "0\r\n"
            ],
            [
                "3\r\n0 1 1\r\n",
                "0\r\n"
            ],
            [
                "3\r\n0 1 2\r\n",
                "0\r\n"
            ],
            [
                "3\r\n0 0 0\r\n",
                "0\r\n"
            ],
            [
                "4\r\n0 0 1 2\r\n",
                "0\r\n"
            ],
            [
                "4\r\n0 1 0 3\r\n",
                "2\r\n"
            ],
            [
                "4\r\n0 1 1 0\r\n",
                "1\r\n"
            ],
            [
                "4\r\n0 0 1 1\r\n",
                "0\r\n"
            ],
            [
                "5\r\n0 1 0 3 1\r\n",
                "4\r\n"
            ],
            [
                "6\r\n0 0 0 2 0 1\r\n",
                "4\r\n"
            ],
            [
                "7\r\n0 1 1 3 0 0 6\r\n",
                "10\r\n"
            ],
            [
                "8\r\n0 0 2 0 3 0 3 2\r\n",
                "7\r\n"
            ],
            [
                "9\r\n0 1 0 1 1 4 0 4 8\r\n",
                "17\r\n"
            ],
            [
                "10\r\n0 1 2 0 4 5 3 6 0 5\r\n",
                "12\r\n"
            ],
            [
                "10\r\n0 0 2 2 3 2 3 3 1 3\r\n",
                "4\r\n"
            ]
        ]
    }
]