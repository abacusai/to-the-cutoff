[
    {
        "name": "Zero-Sum Prefixes",
        "description": "The score of an array \n    v_1,v_2,\n    \u2026,v_n\n is defined as the number of\nindices \n    i\n (\n    1 \n    \u2264 i \n    \u2264 n\n) such that \n    v_1+v_2+\n    \u2026+v_i =\n    0\n. You are given an array \n    a_1,a_2,\n    \u2026,a_n\n of length \n    n\n. You\ncan perform the following operation multiple times: select an index \n    i\n\n(\n    1 \n    \u2264 i \n    \u2264 n\n) such that \n    a_i=0\n; then replace \n    a_i\n by an\narbitrary integer. What is the maximum possible score of \n    a\n that can be\nobtained by performing a sequence of such operations? Input Each test contains\nmultiple test cases. The first line contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The first line of each test\ncase contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the\nlength of the array \n    a\n. The second line of each test case contains\n\n    n\n integers \n    a_1,a_2,\n    \u2026,a_n\n (\n    -10^9 \n    \u2264 a_i \n    \u2264 10^9\n)\n\u2014 array \n    a\n. It is guaranteed that the sum of \n    n\n over all test cases\ndoes not exceed \n    2 \n    \u00b7 10^5\n. Output For each test case, print the\nmaximum possible score of the array \n    a\n after performing a sequence of\noperations. Example Input 5 5 2 0 1 -1 0 3 1000000000 1000000000 0 4 0 0 0 0 8\n3 0 2 -10 10 -30 30 0 9 1 0 0 1 -1 0 1 0 -1 Output 3 1 4 4 5 Note In the first\ntest case, it is optimal to change the value of \n    a_2\n to \n    -2\n in one\noperation. The resulting array \n    a\n will be \n    [2,-2,1,-1,0]\n, with a\nscore of \n    3\n: \n    a_1+a_2=2-2=0\n; \n    a_1+a_2+a_3+a_4=2-2+1-1=0\n;\n\n    a_1+a_2+a_3+a_4+a_5=2-2+1-1+0=0\n. In the second test case, it is optimal\nto change the value of \n    a_3\n to \n    -2\n     000\n     000\n     000\n, giving us\nan array with a score of \n    1\n. In the third test case, it is not necessary\nto perform any operations.\n\n",
        "cf_contest_id": 1748,
        "cf_index": "C",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n5\r\n2 0 1 -1 0\r\n3\r\n1000000000 1000000000 0\r\n4\r\n0 0 0 0\r\n8\r\n3 0 2 -10 10 -30 30 0\r\n9\r\n1 0 0 1 -1 0 1 0 -1\r\n",
                "3\r\n1\r\n4\r\n4\r\n5\r\n"
            ]
        ],
        "private_cases": []
    }
]