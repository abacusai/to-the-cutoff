[
    {
        "name": "Planning The Expedition",
        "description": "Natasha is planning an expedition to Mars for \n    n\n people. One of the\nimportant tasks is to provide food for each participant. The warehouse has\n\n    m\n daily food packages. Each package has some food type \n    a_i\n. Each\nparticipant must eat exactly one food package each day. Due to extreme loads,\neach participant must eat the same food type throughout the expedition.\nDifferent participants may eat different (or the same) types of food.\nFormally, for each participant \n    j\n Natasha should select his food type\n\n    b_j\n and each day \n    j\n-th participant will eat one food package of\ntype \n    b_j\n. The values \n    b_j\n for different participants may be\ndifferent. What is the maximum possible number of days the expedition can\nlast, following the requirements above? Input The first line contains two\nintegers \n    n\n and \n    m\n (\n    1 \n    \u2264 n \n    \u2264 100\n, \n    1 \n    \u2264 m \n    \u2264\n    100\n) \u2014 the number of the expedition participants and the number of the\ndaily food packages available. The second line contains sequence of integers\n\n    a_1, a_2, \n    \u2026, a_m\n (\n    1 \n    \u2264 a_i \n    \u2264 100\n), where \n    a_i\n is\nthe type of \n    i\n-th food package. Output Print the single integer \u2014 the\nnumber of days the expedition can last. If it is not possible to plan the\nexpedition for even one day, print 0. Examples Input 4 10 1 5 2 1 1 1 2 5 7 2\nOutput 2 Input 100 1 1 Output 0 Input 2 5 5 4 3 2 1 Output 1 Input 3 9 42 42\n42 42 42 42 42 42 42 Output 3 Note In the first example, Natasha can assign\ntype \n    1\n food to the first participant, the same type \n    1\n to the\nsecond, type \n    5\n to the third and type \n    2\n to the fourth. In this\ncase, the expedition can last for \n    2\n days, since each participant can get\ntwo food packages of his food type (there will be used \n    4\n packages of\ntype \n    1\n, two packages of type \n    2\n and two packages of type \n    5\n).\nIn the second example, there are \n    100\n participants and only \n    1\n food\npackage. In this case, the expedition can't last even \n    1\n day.\n\n",
        "cf_contest_id": 1011,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 10\r\n1 5 2 1 1 1 2 5 7 2\r\n",
                "2\r\n"
            ],
            [
                "100 1\r\n1\r\n",
                "0\r\n"
            ],
            [
                "2 5\r\n5 4 3 2 1\r\n",
                "1\r\n"
            ],
            [
                "3 9\r\n42 42 42 42 42 42 42 42 42\r\n",
                "3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n100\r\n",
                "1\r\n"
            ],
            [
                "4 100\r\n84 99 66 69 86 94 89 96 98 93 93 82 87 93 91 100 69 99 93 81 99 84 75 100 86 88 98 100 84 96 44 70 94 91 85 78 86 79 45 88 91 78 98 94 81 87 93 72 96 88 96 97 96 62 86 72 94 84 80 98 88 90 93 73 73 98 78 50 91 96 97 82 85 90 87 41 97 82 97 77 100 100 92 83 98 81 70 81 74 78 84 79 98 98 55 99 97 99 79 98\r\n",
                "5\r\n"
            ],
            [
                "100 100\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1 100\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "100\r\n"
            ],
            [
                "6 100\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\r\n",
                "15\r\n"
            ],
            [
                "1 1\r\n59\r\n",
                "1\r\n"
            ],
            [
                "1 50\r\n39 1 46 21 23 28 100 32 63 63 18 15 40 29 34 49 56 74 47 42 96 97 59 62 76 62 69 61 36 21 66 18 92 58 63 85 5 6 77 75 91 66 38 10 66 43 20 74 37 83\r\n",
                "3\r\n"
            ],
            [
                "1 100\r\n83 72 21 55 49 5 61 60 87 21 89 88 3 75 49 81 36 25 50 61 96 19 36 55 48 8 97 69 50 24 23 39 26 25 41 90 69 20 19 62 38 52 60 6 66 31 9 45 36 12 69 94 22 60 91 65 35 58 13 85 33 87 83 11 95 20 20 85 13 21 57 69 17 94 78 37 59 45 60 7 64 51 60 89 91 22 6 58 95 96 51 53 89 22 28 16 27 56 1 54\r\n",
                "5\r\n"
            ],
            [
                "50 1\r\n75\r\n",
                "0\r\n"
            ],
            [
                "50 50\r\n85 20 12 73 52 78 70 95 88 43 31 88 81 41 80 99 16 11 97 11 21 44 2 34 47 38 87 2 32 47 97 93 52 14 35 37 97 48 58 19 52 55 97 72 17 25 16 85 90 58\r\n",
                "1\r\n"
            ],
            [
                "50 100\r\n2 37 74 32 99 75 73 86 67 33 62 30 15 21 51 41 73 75 67 39 90 10 56 74 72 26 38 65 75 55 46 99 34 49 92 82 11 100 15 71 75 12 22 56 47 74 20 98 59 65 14 76 1 40 89 36 43 93 83 73 75 100 50 95 27 10 72 51 25 69 15 3 57 60 84 99 31 44 12 61 69 95 51 31 28 36 57 35 31 52 44 19 79 12 27 27 7 81 68 1\r\n",
                "1\r\n"
            ],
            [
                "100 1\r\n26\r\n",
                "0\r\n"
            ],
            [
                "100 50\r\n8 82 62 11 85 57 5 32 99 92 77 2 61 86 8 88 10 28 83 4 68 79 8 64 56 98 4 88 22 54 30 60 62 79 72 38 17 28 32 16 62 26 56 44 72 33 22 84 77 45\r\n",
                "0\r\n"
            ],
            [
                "100 100\r\n13 88 64 65 78 10 61 97 16 32 76 9 60 1 40 35 90 61 60 85 26 16 38 36 33 95 24 55 82 88 13 9 47 34 94 2 90 74 11 81 46 70 94 11 55 32 19 36 97 16 17 35 38 82 89 16 74 94 97 79 9 94 88 12 28 2 4 25 72 95 49 31 88 82 6 77 70 98 90 57 57 33 38 61 26 75 2 66 22 44 13 35 16 4 33 16 12 66 32 86\r\n",
                "1\r\n"
            ],
            [
                "34 64\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "53 98\r\n1 1 2 2 2 2 2 1 2 2 2 1 1 2 2 2 1 1 2 1 1 2 2 1 1 2 1 1 1 2 1 2 1 1 1 2 2 1 2 1 1 1 2 2 1 2 1 1 2 1 2 2 1 2 2 2 2 2 2 2 2 2 1 1 2 2 1 2 1 2 1 2 1 1 2 2 2 1 1 2 1 2 1 1 1 1 2 2 2 2 2 1 1 2 2 2 1 1\r\n",
                "1\r\n"
            ],
            [
                "17 8\r\n2 5 3 4 3 2 2 2\r\n",
                "0\r\n"
            ],
            [
                "24 77\r\n8 6 10 4 6 6 4 10 9 7 7 5 5 4 6 7 10 6 3 4 6 6 4 9 4 6 2 5 3 4 4 1 4 6 6 8 1 1 6 4 6 2 5 7 7 2 4 4 10 1 10 9 2 3 8 1 10 4 3 9 3 8 3 5 6 3 4 9 5 3 4 1 1 6 1 2 1\r\n",
                "2\r\n"
            ],
            [
                "65 74\r\n7 19 2 38 28 44 34 49 14 13 30 22 11 4 4 12 8 1 40 8 34 31 44 38 21 35 13 7 19 32 37 5 36 26 7 2 15 11 47 45 48 2 49 10 10 42 42 31 50 24 29 34 31 38 39 48 43 47 32 46 10 1 33 21 12 50 13 44 38 11 41 41 10 7\r\n",
                "1\r\n"
            ],
            [
                "37 71\r\n50 93 15 80 82 23 35 90 70 73 55 23 23 6 86 63 38 70 38 52 88 34 25 75 32 19 6 98 31 38 21 8 66 8 59 71 7 80 69 23 17 70 6 40 72 5 48 59 18 1 48 91 17 41 11 27 53 95 87 31 62 94 94 60 38 99 70 50 81 86 44\r\n",
                "1\r\n"
            ],
            [
                "35 4\r\n100 100 100 100\r\n",
                "0\r\n"
            ],
            [
                "68 12\r\n100 100 100 99 99 100 100 100 99 99 99 99\r\n",
                "0\r\n"
            ],
            [
                "91 33\r\n97 100 96 96 97 100 97 97 96 96 99 99 98 97 97 99 99 98 100 96 96 99 100 96 97 100 97 97 99 98 96 98 97\r\n",
                "0\r\n"
            ],
            [
                "59 72\r\n99 96 96 93 94 97 93 96 100 99 93 99 96 92 92 97 93 100 92 100 91 96 99 100 97 98 93 93 96 100 97 99 100 100 91 93 96 91 93 100 95 96 92 97 91 91 99 100 91 95 95 100 92 93 98 93 95 92 95 100 91 95 99 95 92 91 100 93 98 98 96 99\r\n",
                "1\r\n"
            ],
            [
                "9 35\r\n95 54 78 94 56 63 68 73 61 85 73 62 61 94 67 91 66 54 89 69 92 60 91 87 63 62 85 70 62 68 97 88 96 55 62\r\n",
                "2\r\n"
            ],
            [
                "99 100\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "1 50\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "50\r\n"
            ]
        ]
    }
]