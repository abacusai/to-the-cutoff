[
    {
        "name": "Jeremy Bearimy",
        "description": "Welcome! Everything is fine. You have arrived in The Medium Place, the place\nbetween The Good Place and The Bad Place. You are assigned a task that will\neither make people happier or torture them for eternity. You have a list of\n\n    k\n pairs of people who have arrived in a new inhabited neighborhood. You\nneed to assign each of the \n    2k\n people into one of the \n    2k\n houses.\nEach person will be the resident of exactly one house, and each house will\nhave exactly one resident. Of course, in the neighborhood, it is possible to\nvisit friends. There are \n    2k - 1\n roads, each of which connects two\nhouses. It takes some time to traverse a road. We will specify the amount of\ntime it takes in the input. The neighborhood is designed in such a way that\nfrom anyone's house, there is exactly one sequence of distinct roads you can\ntake to any other house. In other words, the graph with the houses as vertices\nand the roads as edges is a tree. The truth is, these \n    k\n pairs of people\nare actually soulmates. We index them from \n    1\n to \n    k\n. We denote by\n\n    f(i)\n the amount of time it takes for the \n    i\n-th pair of soulmates to\ngo to each other's houses. As we have said before, you will need to assign\neach of the \n    2k\n people into one of the \n    2k\n houses. You have two\nmissions, one from the entities in The Good Place and one from the entities of\nThe Bad Place. Here they are: The first mission, from The Good Place, is to\nassign the people into the houses such that the sum of \n    f(i)\n over all\npairs \n    i\n is minimized. Let's define this minimized sum as \n    G\n. This\nmakes sure that soulmates can easily and efficiently visit each other; The\nsecond mission, from The Bad Place, is to assign the people into the houses\nsuch that the sum of \n    f(i)\n over all pairs \n    i\n is maximized. Let's\ndefine this maximized sum as \n    B\n. This makes sure that soulmates will have\na difficult time to visit each other. What are the values of \n    G\n and\n\n    B\n? Input The first line of input contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 500\n) denoting the number of test cases. The next lines\ncontain descriptions of the test cases. The first line of each test case\ncontains a single integer \n    k\n denoting the number of pairs of people (\n    1\n    \n    \u2264 k \n    \u2264 10^5\n). The next \n    2k - 1\n lines describe the roads; the\n\n    i\n-th of them contains three space-separated integers \n    a_i, b_i, t_i\n\nwhich means that the \n    i\n-th road connects the \n    a_i\n-th and\n\n    b_i\n-th houses with a road that takes \n    t_i\n units of time to traverse\n(\n    1 \n    \u2264 a_i, b_i \n    \u2264 2k\n, \n    a_i \n    \u2260 b_i\n, \n    1 \n    \u2264 t_i \n    \u2264\n    10^6\n). It is guaranteed that the given roads define a tree structure. It is\nguaranteed that the sum of the \n    k\n in a single file is at most \n    3\n    \n    \u00b7 10^5\n. Output For each test case, output a single line containing\ntwo space-separated integers \n    G\n and \n    B\n. Example Input 2 3 1 2 3 3 2\n4 2 4 3 4 5 6 5 6 5 2 1 2 1 1 3 2 1 4 3 Output 15 33 6 6 Note For the sample\ntest case, we have a minimum sum equal to \n    G = 15\n. One way this can be\nachieved is with the following assignment: The first pair of people get\nassigned to houses \n    5\n and \n    6\n, giving us \n    f(1) = 5\n; The second\npair of people get assigned to houses \n    1\n and \n    4\n, giving us \n    f(2) =\n    6\n; The third pair of people get assigned to houses \n    3\n and \n    2\n,\ngiving us \n    f(3) = 4\n. Note that the sum of the \n    f(i)\n is \n    5 + 6 + 4\n    = 15\n. We also have a maximum sum equal to \n    B = 33\n. One way this can be\nachieved is with the following assignment: The first pair of people get\nassigned to houses \n    1\n and \n    4\n, giving us \n    f(1) = 6\n; The second\npair of people get assigned to houses \n    6\n and \n    2\n, giving us \n    f(2) =\n    14\n; The third pair of people get assigned to houses \n    3\n and \n    5\n,\ngiving us \n    f(3) = 13\n. Note that the sum of the \n    f(i)\n is \n    6 + 14 +\n    13 = 33\n.\n\n",
        "cf_contest_id": 1280,
        "cf_index": "C",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n3\r\n1 2 3\r\n3 2 4\r\n2 4 3\r\n4 5 6\r\n5 6 5\r\n2\r\n1 2 1\r\n1 3 2\r\n1 4 3\r\n",
                "15 33\r\n6 6\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1\r\n2 1 4\r\n",
                "4 4\r\n"
            ]
        ]
    }
]