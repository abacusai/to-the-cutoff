[
    {
        "name": "Paper task",
        "description": "Alex was programming while Valentina (his toddler daughter) got there and\nstarted asking many questions about the round brackets (or parenthesis) in the\ncode. He explained her a bit and when she got it he gave her a task in order\nto finish his code on time. For the purpose of this problem we consider only\nstrings consisting of opening and closing round brackets, that is characters\n'(' and ')'. The sequence of brackets is called correct if: it's empty; it's a\ncorrect sequence of brackets, enclosed in a pair of opening and closing\nbrackets; it's a concatenation of two correct sequences of brackets. For\nexample, the sequences \"()()\" and \"((()))(())\" are correct, while \")(()\",\n\"(((((\" and \"())\" are not. Alex took a piece of paper, wrote a string s\nconsisting of brackets and asked Valentina to count the number of distinct\nnon-empty substrings of s that are correct sequences of brackets. In other\nwords, her task is to count the number of non-empty correct sequences of\nbrackets that occur in a string s as a substring (don't mix up with\nsubsequences). When Valentina finished the task, Alex noticed he doesn't know\nthe answer. Help him don't loose face in front of Valentina and solve the\nproblem! Input The first line of the input contains an integer n (1 \u2264 n \u2264 500\n000) \u2014 the length of the string s. The second line contains a string s of\nlength n consisting of only '(' and ')'. Output Print the number of distinct\nnon-empty correct sequences that occur in s as substring. Examples Input 10\n()()()()() Output 5 Input 7 )(())() Output 3 Note In the first sample, there\nare 5 distinct substrings we should count: \"()\", \"()()\", \"()()()\", \"()()()()\"\nand \"()()()()()\". In the second sample, there are 3 distinct substrings we\nshould count: \"()\", \"(())\" and \"(())()\".\n\n",
        "cf_contest_id": 653,
        "cf_index": "F",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "string suffix structures",
            "strings"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "10\r\n()()()()()\r\n",
                "5"
            ],
            [
                "7\r\n)(())()\r\n",
                "3"
            ]
        ],
        "private_cases": [
            [
                "1\r\n(\r\n",
                "0"
            ],
            [
                "2\r\n))\r\n",
                "0"
            ],
            [
                "15\r\n(())(()())(()()\r\n",
                "5"
            ],
            [
                "30\r\n()(())(())(())()(())()()()(()(\r\n",
                "34"
            ],
            [
                "100\r\n(((((((((((((((((((((((((((((((((((((((((((((((((())))))))))))))))))))))))))))))))))))))))))))))))))\r\n",
                "50"
            ],
            [
                "1\r\n)\r\n",
                "0"
            ],
            [
                "2\r\n)(\r\n",
                "0"
            ],
            [
                "2\r\n((\r\n",
                "0"
            ],
            [
                "3\r\n(()\r\n",
                "1"
            ],
            [
                "3\r\n()(\r\n",
                "1"
            ],
            [
                "5\r\n()(()\r\n",
                "1"
            ],
            [
                "7\r\n(()(())\r\n",
                "3"
            ],
            [
                "10\r\n()()((())(\r\n",
                "3"
            ],
            [
                "10\r\n((((()))))\r\n",
                "5"
            ],
            [
                "20\r\n()()((()())())()()((\r\n",
                "13"
            ],
            [
                "20\r\n(((((((((())))))))))\r\n",
                "10"
            ],
            [
                "20\r\n))(())))))((((()))((\r\n",
                "3"
            ],
            [
                "50\r\n()(())()()()(()())()(())()()()()(())()()(())()()()\r\n",
                "142"
            ],
            [
                "50\r\n((((((((((((((((((((((((()))))))))))))))))))))))))\r\n",
                "25"
            ],
            [
                "50\r\n)))(()(())())())(())()())(())()((()()))(()(()(((()\r\n",
                "13"
            ],
            [
                "100\r\n)(()))))))(())()))())())(())())))))))()())))()())()((()))())((((()()((()((()((((((((()(((()())(((()(\r\n",
                "9"
            ],
            [
                "500\r\nr\n",
                "4051"
            ],
            [
                "500\r\nr\n",
                "250"
            ],
            [
                "500\r\nr\n",
                "17"
            ]
        ]
    }
]