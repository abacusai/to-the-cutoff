[
    {
        "name": "Levko and Game",
        "description": "Levko loves sports pathfinding competitions in his city very much. In order to\nboost his performance, Levko spends his spare time practicing. The practice is\na game. The city consists of n intersections connected by m + k directed\nroads. Two or more roads can connect the same pair of intersections. Besides,\nthere can be roads leading from an intersection to itself. Levko and Zenyk are\nplaying a game. First Levko stands on intersection s1, and Zenyk stands on\nintersection s2. They both want to get to intersection f. The person who does\nit quicker wins. If they get there at the same time, the game ends with a\ndraw. By agreement both players start simultaneously and move with the same\nspeed. Levko wants to win very much. He knows the lengths of all the roads in\nthe city. Also he knows that he can change the lengths of some roads (there\nare k such roads at all) if he pays the government. So, the government can\nchange the length of the i-th road to any integer value in the segment [li,\nri] (both borders inclusive). Levko wondered if he can reconstruct the roads\nso as to win the game and whether he can hope for the draw if he cannot win.\nYou should consider that both players play optimally well. It is guaranteed\nthat we can get from intersections s1 and s2 to intersection f. Input The\nfirst line contains three integers n, m and k (1 \u2264 n, m \u2264 10^4, 1 \u2264 k \u2264 100).\nThe second line contains three integers s1, s2 and f (1 \u2264 s1, s2, f \u2264 n). The\nnext m lines contains the descriptions of the roads that cannot be changed by\nLevko. Each line contains three integers ai, bi and ci (1 \u2264 ai, bi \u2264 n, 1 \u2264 ci\n\u2264 10^9), representing a road from intersection ai to intersection bi of length\nci. The next k lines contains the descriptions of the roads that can be\nchanged by Levko. Each line contains four integers ai, bi, li and ri (1 \u2264 ai,\nbi \u2264 n, 1 \u2264 li \u2264 ri \u2264 10^9), representing a road from intersection ai to\nintersection bi, Levko can set the road's length within limits [li, ri].\nConsider all intersections numbered from 1 to n. It is guaranteed that you can\nget from intersections s1 and s2 to intersection f. Output In the first line\nprint string \"WIN\" (without the quotes) if Levko can win this game, string\n\"DRAW\" (without the quotes) if Levko can end the game with a draw and \"LOSE\"\n(without the quotes) if he loses for sure. If the answer is \"WIN\" or \"DRAW\",\nthen print on the second line k space-separated integers \u2014 the length of the\nroads Levko sets in the order they occur in the input. Examples Input 4 1 3 1\n3 4 3 2 2 1 2 1 3 2 4 1 3 3 4 1 3 Output WIN 1 1 3 Input 4 1 3 1 3 4 3 2 2 1 2\n1 3 2 4 1 3 3 4 1 2 Output DRAW 1 1 2 Input 5 4 2 1 2 5 1 3 3 1 4 4 2 3 2 2 4\n3 3 5 1 5 4 5 4 7 Output LOSE\n\n",
        "cf_contest_id": 360,
        "cf_index": "E",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 1 3\r\n1 3 4\r\n3 2 2\r\n1 2 1 3\r\n2 4 1 3\r\n3 4 1 3\r\n",
                "WIN\r\n1 1 3 "
            ],
            [
                "4 1 3\r\n1 3 4\r\n3 2 2\r\n1 2 1 3\r\n2 4 1 3\r\n3 4 1 2\r\n",
                "DRAW\r\n1 1 2 "
            ],
            [
                "5 4 2\r\n1 2 5\r\n1 3 3\r\n1 4 4\r\n2 3 2\r\n2 4 3\r\n3 5 1 5\r\n4 5 4 7\r\n",
                "LOSE"
            ]
        ],
        "private_cases": [
            [
                "7 2 4\r\n1 1 5\r\n3 6 383301605\r\n4 5 945263750\r\n1 2 347669038 438323861\r\n2 3 508811092 571499321\r\n6 7 11743736 394038288\r\n7 4 576255383 663568113\r\n",
                "DRAW\r\n347669038 508811092 11743736 576255383 "
            ]
        ]
    }
]