[
    {
        "name": "Not Equal on a Segment",
        "description": "You are given array a with n integers and m queries. The i-th query is given\nwith three integers li, ri, xi. For the i-th query find any position pi (li \u2264\npi \u2264 ri) so that api \u2260 xi. Input The first line contains two integers n, m (1\n\u2264 n, m \u2264 2\u00b710^5) \u2014 the number of elements in a and the number of queries. The\nsecond line contains n integers ai (1 \u2264 ai \u2264 10^6) \u2014 the elements of the array\na. Each of the next m lines contains three integers li, ri, xi (1 \u2264 li \u2264 ri \u2264\nn, 1 \u2264 xi \u2264 10^6) \u2014 the parameters of the i-th query. Output Print m lines. On\nthe i-th line print integer pi \u2014 the position of any number not equal to xi in\nsegment [li, ri] or the value - 1 if there is no such number. Examples Input 6\n4 1 2 1 1 3 5 1 4 1 2 6 2 3 4 1 3 4 2 Output 2 6 -1 4\n\n",
        "cf_contest_id": 622,
        "cf_index": "C",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 4\r\n1 2 1 1 3 5\r\n1 4 1\r\n2 6 2\r\n3 4 1\r\n3 4 2\r\n",
                "2\r\n6\r\n-1\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n1\r\n1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "1 1\r\n2\r\n1 1 2\r\n",
                "-1\r\n"
            ],
            [
                "1 1\r\n569888\r\n1 1 967368\r\n",
                "1\r\n"
            ],
            [
                "10 10\r\n1 1 1 1 1 1 1 1 1 1\r\n3 10 1\r\n3 6 1\r\n1 8 1\r\n1 7 1\r\n1 5 1\r\n3 7 1\r\n4 7 1\r\n9 9 1\r\n6 7 1\r\n3 4 1\r\n",
                "-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "10 10\r\n1 2 2 2 2 1 1 2 1 1\r\n3 3 1\r\n4 9 1\r\n4 8 1\r\n2 7 2\r\n2 8 2\r\n3 10 1\r\n7 7 2\r\n10 10 2\r\n1 5 1\r\n1 2 1\r\n",
                "3\r\n4\r\n4\r\n7\r\n7\r\n3\r\n7\r\n10\r\n5\r\n2\r\n"
            ],
            [
                "10 10\r\n318890 307761 832732 700511 820583 522866 130891 914566 128429 739710\r\n4 9 178864\r\n6 9 741003\r\n4 9 172997\r\n4 6 314469\r\n1 4 694802\r\n8 8 401658\r\n7 10 376243\r\n7 8 508771\r\n3 5 30038\r\n2 10 591490\r\n",
                "4\r\n6\r\n4\r\n4\r\n1\r\n8\r\n7\r\n7\r\n3\r\n2\r\n"
            ],
            [
                "1 1\r\n2\r\n1 1 1\r\n",
                "1\r\n"
            ],
            [
                "10 10\r\n1 1 1 1 1 2 1 1 1 1\r\n1 9 1\r\n6 7 1\r\n2 4 1\r\n7 8 1\r\n1 3 1\r\n10 10 1\r\n3 5 1\r\n6 7 1\r\n1 10 1\r\n6 6 1\r\n",
                "6\r\n6\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n6\r\n6\r\n6\r\n"
            ],
            [
                "7 1\r\n2 1 3 2 2 2 2\r\n1 7 2\r\n",
                "3\r\n"
            ],
            [
                "4 1\r\n3 1 2 2\r\n1 4 2\r\n",
                "1\r\n"
            ],
            [
                "6 1\r\n3 2 4 3 3 3\r\n1 6 3\r\n",
                "3\r\n"
            ],
            [
                "4 1\r\n1 3 2 2\r\n1 4 2\r\n",
                "1\r\n"
            ],
            [
                "5 1\r\n2 3 1 2 2\r\n1 5 2\r\n",
                "3\r\n"
            ],
            [
                "3 1\r\n1 9 5\r\n1 3 5\r\n",
                "1\r\n"
            ],
            [
                "4 1\r\n4 2 6 4\r\n1 4 4\r\n",
                "3\r\n"
            ],
            [
                "2 1\r\n1 3\r\n1 2 2\r\n",
                "1\r\n"
            ],
            [
                "10 1\r\n2 2 1 3 2 2 2 2 2 2\r\n2 5 2\r\n",
                "4\r\n"
            ],
            [
                "7 1\r\n6 5 7 6 6 6 6\r\n1 7 6\r\n",
                "3\r\n"
            ],
            [
                "3 1\r\n2 4 3\r\n1 3 3\r\n",
                "1\r\n"
            ],
            [
                "4 1\r\n4 2 3 3\r\n1 4 3\r\n",
                "1\r\n"
            ],
            [
                "5 1\r\n3 2 4 5 5\r\n1 3 3\r\n",
                "3\r\n"
            ],
            [
                "2 6\r\n1 1\r\n1 1 1\r\n1 1 2\r\n1 2 1\r\n1 2 2\r\n2 2 1\r\n2 2 2\r\n",
                "-1\r\n1\r\n-1\r\n1\r\n-1\r\n2\r\n"
            ]
        ]
    }
]