[
    {
        "name": "Powerful array",
        "description": "An array of positive integers a1, a2, ..., an is given. Let us consider its\narbitrary subarray al, al + 1..., ar, where 1 \u2264 l \u2264 r \u2264 n. For every positive\ninteger s denote by Ks the number of occurrences of s into the subarray. We\ncall the power of the subarray the sum of products Ks\u00b7Ks\u00b7s for every positive\ninteger s. The sum contains only finite number of nonzero summands as the\nnumber of different values in the array is indeed finite. You should calculate\nthe power of t given subarrays. Input First line contains two integers n and t\n(1 \u2264 n, t \u2264 200000) \u2014 the array length and the number of queries\ncorrespondingly. Second line contains n positive integers ai (1 \u2264 ai \u2264 10^6) \u2014\nthe elements of the array. Next t lines contain two positive integers l, r (1\n\u2264 l \u2264 r \u2264 n) each \u2014 the indices of the left and the right ends of the\ncorresponding subarray. Output Output t lines, the i-th line of the output\nshould contain single positive integer \u2014 the power of the i-th query subarray.\nPlease, do not use \nIt is preferred to use cout stream (also you may use \n2 1 2 1 1 2 1 3 Output 3 6 Input 8 3 1 1 2 2 1 3 1 1 2 7 1 6 2 7 Output 20 20\n20 Note Consider the following array (see the second sample) and its [2, 7]\nsubarray (elements of the subarray are colored): Then K1 = 3, K2 = 2, K3 = 1,\nso the power is equal to 3^2\u00b71 + 2^2\u00b72 + 1^2\u00b73 = 20.\n\n",
        "cf_contest_id": 86,
        "cf_index": "D",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "implementation",
            "math",
            "two pointers"
        ],
        "time_limit_seconds": 5.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n1 2 1\r\n1 2\r\n1 3\r\n",
                "3\r\n6\r\n"
            ],
            [
                "8 3\r\n1 1 2 2 1 3 1 1\r\n2 7\r\n1 6\r\n2 7\r\n",
                "20\r\n20\r\n20\r\n"
            ]
        ],
        "private_cases": [
            [
                "20 8\r\n1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2\r\n4 15\r\n1 2\r\n2 20\r\n7 7\r\n13 18\r\n7 7\r\n3 19\r\n3 8\r\n",
                "108\r\n3\r\n281\r\n1\r\n27\r\n1\r\n209\r\n27\r\n"
            ],
            [
                "10 5\r\n10 9 8 7 6 5 4 3 2 1\r\n4 8\r\n1 10\r\n3 9\r\n2 2\r\n5 10\r\n",
                "25\r\n55\r\n35\r\n9\r\n21\r\n"
            ],
            [
                "8 10\r\n100 100 100 100 100 100 100 100\r\n1 8\r\n2 8\r\n3 8\r\n4 8\r\n5 8\r\n6 8\r\n7 8\r\n8 8\r\n1 1\r\n1 5\r\n",
                "6400\r\n4900\r\n3600\r\n2500\r\n1600\r\n900\r\n400\r\n100\r\n100\r\n2500\r\n"
            ],
            [
                "1 2\r\n1\r\n1 1\r\n1 1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "1 1\r\n1000000\r\n1 1\r\n",
                "1000000\r\n"
            ],
            [
                "5 15\r\n103 45 103 67 45\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n2 2\r\n2 3\r\n2 4\r\n2 5\r\n3 3\r\n3 4\r\n3 5\r\n4 4\r\n4 5\r\n5 5\r\n",
                "103\r\n148\r\n457\r\n524\r\n659\r\n45\r\n148\r\n215\r\n350\r\n103\r\n170\r\n215\r\n67\r\n112\r\n45\r\n"
            ],
            [
                "8 10\r\n5 7 3 1 4 2 1 1\r\n5 7\r\n3 8\r\n2 7\r\n4 8\r\n4 5\r\n2 8\r\n4 6\r\n1 2\r\n4 7\r\n3 5\r\n",
                "7\r\n18\r\n20\r\n15\r\n5\r\n25\r\n7\r\n12\r\n10\r\n8\r\n"
            ],
            [
                "9 10\r\n5 3 10 2 4 8 7 5 1\r\n6 9\r\n1 8\r\n3 3\r\n2 7\r\n3 5\r\n4 6\r\n9 9\r\n8 8\r\n1 9\r\n5 6\r\n",
                "21\r\n54\r\n10\r\n34\r\n16\r\n14\r\n1\r\n5\r\n55\r\n12\r\n"
            ],
            [
                "9 10\r\n10 2 6 2 4 6 6 4 1\r\n4 8\r\n8 9\r\n2 3\r\n8 9\r\n9 9\r\n4 5\r\n1 7\r\n6 6\r\n6 8\r\n1 1\r\n",
                "42\r\n5\r\n8\r\n5\r\n1\r\n6\r\n76\r\n6\r\n28\r\n10\r\n"
            ],
            [
                "10 10\r\n5 10 9 2 9 3 5 5 6 5\r\n5 10\r\n2 2\r\n3 10\r\n4 8\r\n1 3\r\n1 5\r\n5 5\r\n10 10\r\n8 9\r\n6 10\r\n",
                "63\r\n10\r\n92\r\n34\r\n24\r\n53\r\n9\r\n5\r\n11\r\n54\r\n"
            ],
            [
                "9 10\r\n6 2 3 1 4 8 5 9 8\r\n3 9\r\n6 6\r\n9 9\r\n9 9\r\n9 9\r\n2 3\r\n3 9\r\n3 8\r\n6 9\r\n5 6\r\n",
                "54\r\n8\r\n8\r\n8\r\n8\r\n5\r\n54\r\n30\r\n46\r\n12\r\n"
            ]
        ]
    }
]