[
    {
        "name": "Robot's Task",
        "description": "Robot Doc is located in the hall, with n computers stand in a line, numbered\nfrom left to right from 1 to n. Each computer contains exactly one piece of\ninformation, each of which Doc wants to get eventually. The computers are\nequipped with a security system, so to crack the i-th of them, the robot needs\nto collect at least ai any pieces of information from the other computers. Doc\ncan hack the computer only if he is right next to it. The robot is assembled\nusing modern technologies and can move along the line of computers in either\nof the two possible directions, but the change of direction requires a large\namount of resources from Doc. Tell the minimum number of changes of direction,\nwhich the robot will have to make to collect all n parts of information if\ninitially it is next to computer with number 1. It is guaranteed that there\nexists at least one sequence of the robot's actions, which leads to the\ncollection of all information. Initially Doc doesn't have any pieces of\ninformation. Input The first line contains number n (1 \u2264 n \u2264 1000). The second\nline contains n non-negative integers a1, a2, ..., an (0 \u2264 ai < n), separated\nby a space. It is guaranteed that there exists a way for robot to collect all\npieces of the information. Output Print a single number \u2014 the minimum number\nof changes in direction that the robot will have to make in order to collect\nall n parts of information. Examples Input 3 0 2 0 Output 1 Input 5 4 2 3 0 1\nOutput 3 Input 7 0 3 1 0 5 2 6 Output 2 Note In the first sample you can\nassemble all the pieces of information in the optimal manner by assembling\nfirst the piece of information in the first computer, then in the third one,\nthen change direction and move to the second one, and then, having 2 pieces of\ninformation, collect the last piece. In the second sample to collect all the\npieces of information in the optimal manner, Doc can go to the fourth computer\nand get the piece of information, then go to the fifth computer with one piece\nand get another one, then go to the second computer in the same manner, then\nto the third one and finally, to the first one. Changes of direction will take\nplace before moving from the fifth to the second computer, then from the\nsecond to the third computer, then from the third to the first computer. In\nthe third sample the optimal order of collecting parts from computers can look\nlike that: 1->3->4->6->2->5->7.\n\n",
        "cf_contest_id": 583,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n0 2 0\r\n",
                "1"
            ],
            [
                "5\r\n4 2 3 0 1\r\n",
                "3"
            ],
            [
                "7\r\n0 3 1 0 5 2 6\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0\r\n",
                "0"
            ],
            [
                "2\r\n0 1\r\n",
                "0"
            ],
            [
                "10\r\n0 0 0 0 0 0 0 0 0 0\r\n",
                "0"
            ],
            [
                "3\r\n0 2 1\r\n",
                "1"
            ],
            [
                "10\r\n7 1 9 3 5 8 6 0 2 4\r\n",
                "9"
            ],
            [
                "10\r\n1 3 5 7 9 8 6 4 2 0\r\n",
                "9"
            ],
            [
                "10\r\n5 0 0 1 3 2 2 2 5 7\r\n",
                "1"
            ],
            [
                "10\r\n8 6 5 3 9 7 1 4 2 0\r\n",
                "8"
            ],
            [
                "10\r\n1 2 4 5 0 1 3 7 1 4\r\n",
                "2"
            ],
            [
                "10\r\n3 4 8 9 5 1 2 0 6 7\r\n",
                "6"
            ],
            [
                "10\r\n2 2 0 0 6 2 9 0 2 0\r\n",
                "2"
            ],
            [
                "10\r\n1 7 5 3 2 6 0 8 4 9\r\n",
                "8"
            ],
            [
                "9\r\n1 3 8 6 2 4 5 0 7\r\n",
                "7"
            ],
            [
                "9\r\n1 3 5 7 8 6 4 2 0\r\n",
                "8"
            ],
            [
                "9\r\n2 4 3 1 3 0 5 4 3\r\n",
                "3"
            ],
            [
                "9\r\n3 5 6 8 7 0 4 2 1\r\n",
                "5"
            ],
            [
                "9\r\n2 0 8 1 0 3 0 5 3\r\n",
                "2"
            ],
            [
                "9\r\n6 2 3 7 4 8 5 1 0\r\n",
                "4"
            ],
            [
                "9\r\n3 1 5 6 0 3 2 0 0\r\n",
                "2"
            ],
            [
                "9\r\n2 6 4 1 0 8 5 3 7\r\n",
                "7"
            ],
            [
                "100\r\n27 20 18 78 93 38 56 2 48 75 36 88 96 57 69 10 25 74 68 86 65 85 66 14 22 12 43 80 99 34 42 63 61 71 77 15 37 54 21 59 23 94 28 30 50 84 62 76 47 16 26 64 82 92 72 53 17 11 41 91 35 83 79 95 67 13 1 7 3 4 73 90 8 19 33 58 98 32 39 45 87 52 60 46 6 44 49 70 51 9 5 29 31 24 40 97 81 0 89 55\r\n",
                "69"
            ],
            [
                "100\r\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99 98 96 94 92 90 88 86 84 82 80 78 76 74 72 70 68 66 64 62 60 58 56 54 52 50 48 46 44 42 40 38 36 34 32 30 28 26 24 22 20 18 16 14 12 10 8 6 4 2 0\r\n",
                "99"
            ],
            [
                "100\r\n13 89 81 0 62 1 59 92 29 13 1 37 2 8 53 15 20 34 12 70 0 85 97 55 84 60 37 54 14 65 22 69 30 22 95 44 59 85 50 80 9 71 91 93 74 21 11 78 28 21 40 81 76 24 26 60 48 85 61 68 89 76 46 73 34 52 98 29 4 38 94 51 5 55 6 27 74 27 38 37 82 70 44 89 51 59 30 37 15 55 63 78 42 39 71 43 4 10 2 13\r\n",
                "21"
            ],
            [
                "100\r\n1 3 5 7 58 11 13 15 17 19 45 23 25 27 29 31 33 35 37 39 41 43 21 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 81 79 83 85 87 89 91 93 95 97 48 98 96 94 92 90 88 44 84 82 80 78 76 74 72 70 68 66 64 62 60 9 56 54 52 50 99 46 86 42 40 38 36 34 32 30 28 26 24 22 20 18 16 14 12 10 8 6 4 2 0\r\n",
                "96"
            ],
            [
                "100\r\n32 47 74 8 14 4 12 68 18 0 44 80 14 38 6 57 4 72 69 3 21 78 74 22 39 32 58 63 34 33 23 6 39 11 6 12 18 4 0 11 20 28 16 1 22 12 57 55 13 48 43 1 50 18 87 6 11 45 38 67 37 14 7 56 6 41 1 55 5 73 78 64 38 18 38 8 37 0 18 61 37 58 58 62 86 5 0 2 15 43 34 61 2 21 15 9 69 1 11 24\r\n",
                "4"
            ],
            [
                "100\r\n40 3 55 7 6 77 13 46 17 64 21 54 25 27 91 41 1 15 37 82 23 43 42 47 26 95 53 5 11 59 61 9 78 67 69 58 73 0 36 79 60 83 2 87 63 33 71 89 97 99 98 93 56 92 19 88 86 84 39 28 65 20 34 76 51 94 66 12 62 49 96 72 24 52 48 50 44 35 74 31 38 57 81 32 22 80 70 29 30 18 68 16 14 90 10 8 85 4 45 75\r\n",
                "75"
            ],
            [
                "100\r\n34 16 42 21 84 27 11 7 82 16 95 39 36 64 26 0 38 37 2 2 16 56 16 61 55 42 26 5 61 8 30 20 19 15 9 78 5 34 15 0 3 17 36 36 1 5 4 26 18 0 14 25 7 5 91 7 43 26 79 37 17 27 40 55 66 7 0 2 16 23 68 35 2 5 9 21 1 7 2 9 4 3 22 15 27 6 0 47 5 0 12 9 20 55 36 10 6 8 5 1\r\n",
                "3"
            ],
            [
                "100\r\n35 53 87 49 13 24 93 20 5 11 31 32 40 52 96 46 1 25 66 69 28 88 84 82 70 9 75 39 26 21 18 29 23 57 90 16 48 22 95 0 58 43 7 73 8 62 63 30 64 92 79 3 6 94 34 12 76 99 67 55 56 97 14 91 68 36 44 78 41 71 86 89 47 74 4 45 98 37 80 33 83 27 42 59 72 54 17 60 51 81 15 77 65 50 10 85 61 19 38 2\r\n",
                "67"
            ],
            [
                "99\r\n89 96 56 31 32 14 9 66 87 34 69 5 92 54 41 52 46 30 22 26 16 18 20 68 62 73 90 43 79 33 58 98 37 45 10 78 94 51 19 0 91 39 28 47 17 86 3 61 77 7 15 64 55 83 65 71 97 88 6 48 24 11 8 42 81 4 63 93 50 74 35 12 95 27 53 82 29 85 84 60 72 40 36 57 23 13 38 59 49 1 75 44 76 2 21 25 70 80 67\r\n",
                "75"
            ],
            [
                "99\r\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 98 96 94 92 90 88 86 84 82 80 78 76 74 72 70 68 66 64 62 60 58 56 54 52 50 48 46 44 42 40 38 36 34 32 30 28 26 24 22 20 18 16 14 12 10 8 6 4 2 0\r\n",
                "98"
            ],
            [
                "99\r\n82 7 6 77 17 28 90 3 68 12 63 60 24 20 4 81 71 85 57 45 11 84 3 91 49 34 89 82 0 50 48 88 36 76 36 5 62 48 20 2 20 45 69 27 37 62 42 31 57 51 92 84 89 25 7 62 12 23 23 56 30 90 27 10 77 58 48 38 56 68 57 15 33 1 34 67 16 47 75 70 69 28 38 16 5 61 85 76 44 90 37 22 77 94 55 1 97 8 69\r\n",
                "22"
            ],
            [
                "99\r\n1 51 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 42 43 45 47 49 3 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 98 96 94 92 90 88 86 84 82 80 8 76 74 72 70 68 66 22 62 60 58 56 54 52 0 48 46 44 41 40 38 36 34 32 30 28 26 24 64 20 18 16 14 12 10 78 6 4 2 50\r\n",
                "96"
            ],
            [
                "99\r\n22 3 19 13 65 87 28 17 41 40 31 21 8 37 29 65 65 53 16 33 13 5 76 4 72 9 2 76 57 72 50 15 75 0 30 13 83 36 12 31 49 51 65 22 48 31 60 15 2 17 6 1 8 0 1 63 3 16 7 7 2 1 47 28 26 21 2 36 1 5 20 25 44 0 2 39 46 30 33 11 15 34 34 4 84 52 0 39 7 3 17 15 6 38 52 64 26 1 0\r\n",
                "3"
            ],
            [
                "99\r\n24 87 25 82 97 11 37 15 23 19 34 17 76 13 45 89 33 1 27 78 63 43 54 47 49 2 42 41 75 83 61 90 65 67 21 71 60 57 77 62 81 58 85 69 3 91 68 55 72 93 29 94 66 16 88 86 84 53 14 39 35 44 9 70 80 92 56 79 74 5 64 31 52 50 48 46 51 59 40 38 36 96 32 30 28 95 7 22 20 18 26 73 12 10 8 6 4 98 0\r\n",
                "74"
            ],
            [
                "99\r\n22 14 0 44 6 17 6 6 37 45 0 48 19 8 57 8 10 0 3 12 25 2 5 53 9 49 15 6 38 14 9 40 38 22 27 12 64 10 11 35 89 19 46 39 12 24 48 0 52 1 27 27 24 4 64 24 5 0 67 3 5 39 0 1 13 37 2 8 46 1 28 70 6 79 14 15 33 6 7 34 6 18 4 71 1 55 33 71 18 11 47 23 72 53 65 32 2 7 28\r\n",
                "3"
            ],
            [
                "99\r\n28 59 73 89 52 27 0 20 36 12 83 95 31 24 54 94 49 14 51 34 50 93 13 1 2 68 63 48 41 81 23 43 18 9 16 38 33 60 62 3 40 85 72 69 90 98 11 37 22 44 35 6 21 39 82 10 64 66 96 42 74 30 8 67 97 46 84 32 17 57 75 71 5 26 4 55 58 29 7 15 45 19 92 91 78 65 88 25 86 80 77 87 79 53 47 70 56 76 61\r\n",
                "63"
            ]
        ]
    }
]