[
    {
        "name": "Columns Swaps",
        "description": "You are given a table \n    a\n of size \n    2 \n    \u00d7 n\n (i.e. two rows and\n\n    n\n columns) consisting of integers from \n    1\n to \n    n\n. In one move,\nyou can choose some column \n    j\n (\n    1 \n    \u2264 j \n    \u2264 n\n) and swap values\n\n    a_1, j\n and \n    a_2, j\n in it. Each column can be chosen no more\nthan once. Your task is to find the minimum number of moves required to obtain\npermutations of size \n    n\n in both first and second rows of the table or\ndetermine if it is impossible to do that. You have to answer \n    t\n\nindependent test cases. Recall that the permutation of size \n    n\n is such an\narray of size \n    n\n that contains each integer from \n    1\n to \n    n\n\nexactly once (the order of elements doesn't matter). Input The first line of\nthe input contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 2 \n    \u00b7 10^4\n)\n\u2014 the number of test cases. Then \n    t\n test cases follow. The first line of\nthe test case contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n) \u2014 the number of columns in the table. The second line of the test\ncase contains \n    n\n integers \n    a_1, 1, a_1, 2, \n    \u2026, a_1, n\n\n(\n    1 \n    \u2264 a_1, i\n    \u2264 n\n), where \n    a_1, i\n is the \n    i\n-th\nelement of the first row of the table. The third line of the test case\ncontains \n    n\n integers \n    a_2, 1, a_2, 2, \n    \u2026, a_2, n\n (\n    1\n    \n    \u2264 a_2, i\n    \u2264 n\n), where \n    a_2, i\n is the \n    i\n-th element of\nthe second row of the table. It is guaranteed that the sum of \n    n\n does not\nexceed \n    2 \n    \u00b7 10^5\n (\n    \u2211 n \n    \u2264 2 \n    \u00b7 10^5\n). Output For\neach test case print the answer: -1 if it is impossible to obtain permutation\nof size \n    n\n in both first and the second rows of the table, or one integer\n\n    k\n in the first line, where \n    k\n is the minimum number of moves\nrequired to obtain permutations in both rows, and \n    k\n distinct integers\n\n    pos_1, pos_2, \n    \u2026, pos_k\n in the second line (\n    1 \n    \u2264 pos_i \n    \u2264\n    n\n) in any order \u2014 indices of columns in which you need to swap values to\nobtain permutations in both rows. If there are several answers, you can print\nany. Example Input 6 4 1 2 3 4 2 3 1 4 5 5 3 5 1 4 1 2 3 2 4 3 1 2 1 3 3 2 4 1\n2 2 1 3 4 3 4 4 4 3 1 4 3 2 2 1 3 1 1 2 3 2 2 Output 0 2 2 3 1 1 2 3 4 2 3 4\n-1\n\n",
        "cf_contest_id": 1385,
        "cf_index": "G",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "2-sat",
            "dfs and similar",
            "dsu",
            "graphs",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n4\r\n1 2 3 4\r\n2 3 1 4\r\n5\r\n5 3 5 1 4\r\n1 2 3 2 4\r\n3\r\n1 2 1\r\n3 3 2\r\n4\r\n1 2 2 1\r\n3 4 3 4\r\n4\r\n4 3 1 4\r\n3 2 2 1\r\n3\r\n1 1 2\r\n3 2 2\r\n",
                "0\r\n\r\n2\r\n1 4 \r\n1\r\n1 \r\n2\r\n2 1 \r\n2\r\n4 3 \r\n-1\r\n"
            ]
        ],
        "private_cases": []
    }
]