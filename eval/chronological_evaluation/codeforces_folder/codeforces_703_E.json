[
    {
        "name": "Mishka and Divisors",
        "description": "After playing with her beautiful array, Mishka decided to learn some math.\nAfter learning how to multiply, divide and what is divisibility, she is now\ninterested in solving the following problem. You are given integer k and array\na1, a2, ..., an of n integers. You are to find non-empty subsequence of array\nelements such that the product of its elements is divisible by k and it\ncontains minimum possible number of elements. Formally, you are to find a\nsequence of indices 1 \u2264 i1 < i2 < ... < im \u2264 n such that is divisible by k\nwhile m is minimum possible among all such variants. If there are more than\none such subsequences, you should choose one among them, such that sum of its\nelements is minimum possible. Mishka quickly solved this problem. Will you do\nso? Input The first line of the input contains two integers n and k (1 \u2264 n \u2264 1\n000, 1 \u2264 k \u2264 10^12). The second line of the input contains n integers a1, a2,\n..., an (1 \u2264 ai \u2264 10^12) \u2014 array elements. Output Print single positive\ninteger m in the first line \u2014 the number of elements in desired sequence. In\nthe second line print m distinct integers \u2014 the sequence of indices of given\narray elements, which should be taken into the desired sequence. If there are\nmore than one such subsequence (e.g. subsequence of minimum possible number of\nelements and with minimum possible sum of elements), you can print any of\nthem. If there are no such subsequences, print - 1 in the only line. Example\nInput 5 60 2 4 6 5 2 Output 3 4 3 1\n\n",
        "cf_contest_id": 703,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 60\r\n2 4 6 5 2\r\n",
                "3\r\n4 3 1 "
            ]
        ],
        "private_cases": [
            [
                "10 66\r\n93 799 19 143 1739 1403 19 1681 8513 1457\r\n",
                "-1"
            ],
            [
                "10 78\r\n2473 7234 317 3793 6638 6 7789 753 1117 8243\r\n",
                "-1"
            ],
            [
                "10 78\r\n19 1081 143 5 31 61 1363 319 39 589\r\n",
                "-1"
            ],
            [
                "10 99\r\n3229 5659 5813 3517 8647 8761 9209 1931 7459 2467\r\n",
                "-1"
            ],
            [
                "10 60\r\n145 14 1073 437 473 731 3127 1829 469 497\r\n",
                "-1"
            ],
            [
                "10 60\r\n6982 5 10 8803 831 9733 6722 5099 3 1553\r\n",
                "3\r\n9 7 3 "
            ],
            [
                "10 64\r\n1363 7 779 671 1739 31 893 731 53 215\r\n",
                "-1"
            ],
            [
                "10 62\r\n9041 5431 233 1 4261 3769 2713 6737 9521 2647\r\n",
                "-1"
            ],
            [
                "10 55\r\n1121 481 2173 41 1003 43 799 1159 1541 7\r\n",
                "-1"
            ],
            [
                "10 100\r\n5531 6323 6418 5023 113 9859 1571 9788 4999 3778\r\n",
                "-1"
            ],
            [
                "10 63\r\n61 1121 2537 95 2627 1219 59 41 583 91\r\n",
                "-1"
            ],
            [
                "10 100\r\n1 2 1 5 2 97 4 83 4 4\r\n",
                "-1"
            ],
            [
                "10 63\r\n781 118 3953 2021 1 29 47 1271 6 31\r\n",
                "-1"
            ],
            [
                "10 88\r\n11 1 1 1 1 1 8 1 4 1\r\n",
                "2\r\n7 1 "
            ],
            [
                "10 63\r\n205 533 67 59 259 649 115 1003 649 29\r\n",
                "-1"
            ],
            [
                "10 96\r\n1 1 1 1 1 2 1 4 2 2\r\n",
                "-1"
            ],
            [
                "10 70\r\n43 6 87 213 43 2077 57 82 893 1189\r\n",
                "-1"
            ],
            [
                "10 84\r\n1 3 1 3 1 3 1 12 1 4\r\n",
                "-1"
            ],
            [
                "10 66\r\n106 67 23 235 1961 26 1 2059 9 37\r\n",
                "-1"
            ],
            [
                "10 72\r\n2 3 3 1 4 2 1 4 4 1\r\n",
                "4\r\n5 3 2 1 "
            ],
            [
                "10 8250\r\n177 1189 305 2537 37 901 77 61 209 169\r\n",
                "-1"
            ],
            [
                "10 5500\r\n4 50 5779 5 4903 2663 55 4327 3670 8006\r\n",
                "3\r\n7 2 1 "
            ],
            [
                "10 6200\r\n4331 1537 893 26 15 451 74 319 21 41\r\n",
                "-1"
            ],
            [
                "10 7370\r\n5 11 5011 4766 3902 919 134 4166 22 9970\r\n",
                "3\r\n7 2 1 "
            ],
            [
                "10 6460\r\n2479 61 527 451 287 71 41 1961 31 671\r\n",
                "-1"
            ],
            [
                "10 9660\r\n35 8859 5 6982 14 2462 12 9868 6626 353\r\n",
                "-1"
            ],
            [
                "10 8370\r\n41 799 11 209 31 921 551 87 13 14\r\n",
                "-1"
            ],
            [
                "10 6348\r\n7522 489 8373 491 4 2699 2 2459 8209 1506\r\n",
                "-1"
            ],
            [
                "10 8932\r\n901 7 1961 62 59 3551 37 74 86 3127\r\n",
                "-1"
            ],
            [
                "10 8772\r\n5006 2092 4286 51 1429 8331 12 4377 1046 7778\r\n",
                "-1"
            ],
            [
                "10 64\r\n2 2 2 2 2 2 2 2 2 2\r\n",
                "6\r\n6 5 4 3 2 1 "
            ],
            [
                "10 60\r\n100223 14271 33611 86 4958 2537 160247 121 126697 16165\r\n",
                "4\r\n10 5 4 2 "
            ],
            [
                "10 8192\r\n2 1642 7702 2 2 2 2 2 2 9742\r\n",
                "-1"
            ],
            [
                "10 7560\r\n1771 1369 1435 1667 5254 10105 3551 71 1849 12121\r\n",
                "-1"
            ],
            [
                "100 524288\r\n129634 340498 47114 64514 759698 262046 7694 109154 638366 4502 409246 665726 162926 395146 228946 345502 163298 81658 156614 176234 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\r\n",
                "19\r\n39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 "
            ],
            [
                "100 67108864\r\n98304578 265238 54740242 426158 30712454 296486 171214 9511358 475298 774398 98372446 4995842 65101618 62058562 26951882 42782738 3228454 7660934 26263642 201874 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\r\n",
                "26\r\n46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 "
            ],
            [
                "2 1\r\n1000000000000 999999999999\r\n",
                "1\r\n2"
            ],
            [
                "5 1\r\n3 2 4 1 5\r\n",
                "1\r\n4"
            ],
            [
                "5 1\r\n3 1 4 2 5\r\n",
                "1\r\n2"
            ],
            [
                "5 1\r\n4 2 6 8 9\r\n",
                "1\r\n2"
            ],
            [
                "5 1\r\n5 69 1 3 4\r\n",
                "1\r\n3"
            ],
            [
                "2 1\r\n2 3\r\n",
                "1\r\n1"
            ],
            [
                "3 1\r\n3 2 1\r\n",
                "1\r\n3"
            ],
            [
                "2 1\r\n10 2\r\n",
                "1\r\n2"
            ]
        ]
    }
]