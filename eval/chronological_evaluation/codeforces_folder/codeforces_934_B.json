[
    {
        "name": "A Prosperous Lot",
        "description": "Apart from Nian, there is a daemon named Sui, which terrifies children and\ncauses them to become sick. Parents give their children money wrapped in red\npackets and put them under the pillow, so that when Sui tries to approach\nthem, it will be driven away by the fairies inside. Big Banban is hesitating\nover the amount of money to give out. He considers loops to be lucky since it\nsymbolizes unity and harmony. He would like to find a positive integer n not\ngreater than 10^18, such that there are exactly k loops in the decimal\nrepresentation of n, or determine that such n does not exist. A loop is a\nplanar area enclosed by lines in the digits' decimal representation written in\nArabic numerals. For example, there is one loop in digit 4, two loops in 8 and\nno loops in 5. Refer to the figure below for all exact forms. Input The first\nand only line contains an integer k (1 \u2264 k \u2264 10^6) \u2014 the desired number of\nloops. Output Output an integer \u2014 if no such n exists, output -1; otherwise\noutput any such n. In the latter case, your output should be a positive\ndecimal integer not exceeding 10^18. Examples Input 2 Output 462 Input 6\nOutput 8080\n\n",
        "cf_contest_id": 934,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n",
                "8"
            ],
            [
                "6\r\n",
                "888"
            ]
        ],
        "private_cases": [
            [
                "3\r\n",
                "84"
            ],
            [
                "4\r\n",
                "88"
            ],
            [
                "5\r\n",
                "884"
            ],
            [
                "1000000\r\n",
                "-1"
            ],
            [
                "1\r\n",
                "4"
            ],
            [
                "7\r\n",
                "8884"
            ],
            [
                "8\r\n",
                "8888"
            ],
            [
                "9\r\n",
                "88884"
            ],
            [
                "10\r\n",
                "88888"
            ],
            [
                "11\r\n",
                "888884"
            ],
            [
                "12\r\n",
                "888888"
            ],
            [
                "13\r\n",
                "8888884"
            ],
            [
                "14\r\n",
                "8888888"
            ],
            [
                "15\r\n",
                "88888884"
            ],
            [
                "16\r\n",
                "88888888"
            ],
            [
                "17\r\n",
                "888888884"
            ],
            [
                "18\r\n",
                "888888888"
            ],
            [
                "19\r\n",
                "8888888884"
            ],
            [
                "20\r\n",
                "8888888888"
            ],
            [
                "21\r\n",
                "88888888884"
            ],
            [
                "22\r\n",
                "88888888888"
            ],
            [
                "23\r\n",
                "888888888884"
            ],
            [
                "24\r\n",
                "888888888888"
            ],
            [
                "25\r\n",
                "8888888888884"
            ],
            [
                "26\r\n",
                "8888888888888"
            ],
            [
                "27\r\n",
                "88888888888884"
            ],
            [
                "28\r\n",
                "88888888888888"
            ],
            [
                "29\r\n",
                "888888888888884"
            ],
            [
                "30\r\n",
                "888888888888888"
            ],
            [
                "31\r\n",
                "8888888888888884"
            ],
            [
                "32\r\n",
                "8888888888888888"
            ],
            [
                "33\r\n",
                "88888888888888884"
            ],
            [
                "34\r\n",
                "88888888888888888"
            ],
            [
                "35\r\n",
                "888888888888888884"
            ],
            [
                "36\r\n",
                "888888888888888888"
            ],
            [
                "37\r\n",
                "-1"
            ],
            [
                "38\r\n",
                "-1"
            ],
            [
                "39\r\n",
                "-1"
            ],
            [
                "40\r\n",
                "-1"
            ],
            [
                "462\r\n",
                "-1"
            ],
            [
                "1317\r\n",
                "-1"
            ],
            [
                "88\r\n",
                "-1"
            ],
            [
                "87\r\n",
                "-1"
            ]
        ]
    }
]