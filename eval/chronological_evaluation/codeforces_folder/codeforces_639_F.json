[
    {
        "name": "Bear and Chemistry",
        "description": "Limak is a smart brown bear who loves chemistry, reactions and transforming\nelements. In Bearland (Limak's home) there are n elements, numbered 1 through\nn. There are also special machines, that can transform elements. Each machine\nis described by two integers ai, bi representing two elements, not necessarily\ndistinct. One can use a machine either to transform an element ai to bi or to\ntransform bi to ai. Machines in Bearland aren't very resistant and each of\nthem can be used at most once. It is possible that ai = bi and that many\nmachines have the same pair ai, bi. Radewoosh is Limak's biggest enemy and\nrival. He wants to test Limak in the chemistry. They will meet tomorrow and\nboth of them will bring all their machines. Limak has m machines but he\ndoesn't know much about his enemy. They agreed Radewoosh will choose two\ndistinct elements, let's denote them as x and y. Limak will be allowed to use\nboth his and Radewoosh's machines. He may use zero or more (maybe even all)\nmachines to achieve the goal, each machine at most once. Limak will start from\nan element x and his task will be to first get an element y and then to again\nget an element x \u2014 then we say that he succeeds. After that Radewoosh would\nagree that Limak knows the chemistry (and Radewoosh would go away). Radewoosh\nlikes some particular non-empty set of favorite elements and he will choose x,\ny from that set. Limak doesn't know exactly which elements are in the set and\nalso he doesn't know what machines Radewoosh has. Limak has heard q gossips\n(queries) though and each of them consists of Radewoosh's machines and\nfavorite elements. For each gossip Limak wonders if he would be able to\nsucceed tomorrow for every pair x, y chosen from the set of favorite elements.\nIf yes then print \"YES\" (without the quotes). But if there exists a pair (x,\ny) from the given set that Limak wouldn't be able to succeed then you should\nprint \"NO\" (without the quotes). Input The first line contains three integers\nn, m and q (1 \u2264 n, q \u2264 300 000, 0 \u2264 m \u2264 300 000) \u2014 the number of elements, the\nnumber of Limak's machines and the number of gossips, respectively. Each of\nthe next m lines contains two integers ai and bi (1 \u2264 ai, bi \u2264 n) describing\none of Limak's machines. Then, the description of q gossips follows. The first\nline of the description of the i-th gossip contains two integers ni and mi (1\n\u2264 ni \u2264 300 000, 0 \u2264 mi \u2264 300 000). The second line contains ni distinct\nintegers xi, 1, xi, 2, ..., xi, ni (1 \u2264 xi, j \u2264 n) \u2014 Radewoosh's favorite\nelements in the i-th gossip. Note that ni = 1 is allowed, in this case there\nare no pairs of distinct elements, so Limak automatically wins (the answer is\n\"YES\"). Then mi lines follow, each containing two integers ai, j, bi, j (1 \u2264\nai, j, bi, j) describing one of Radewoosh's machines in the i-th gossip. The\nsum of ni over all gossips won't exceed 300 000. Also, the sum of mi over all\ngossips won't exceed 300 000. Important: Because we want you to process the\ngossips online, in order to know the elements in Radewoosh's favorite set and\nelements that his machines can transform, for on each number that denotes them\nin the input you should use following function: int rotate(int element) \nelement=(element+R)\nR is initially equal to 0 and is increased by the number of the query any time\nthe answer is \"YES\". Queries are numbered starting with 1 in the order they\nappear in the input. Output You should print q lines. The i-th of them should\ncontain \"YES\" (without quotes) if for the i-th gossip for each pair of\nelements x and y (in the set xi, 1, xi, 2, ..., xi, ni) Limak is able to\nsucceed. Otherwise you should print \"NO\" (without quotes). Examples Input 6 5\n4 1 2 2 3 3 4 2 4 5 6 2 0 4 2 2 1 6 2 3 4 3 2 6 3 4 2 5 4 6 2 1 1 2 1 2 Output\nYES NO YES YES Input 7 6 2 1 2 1 3 2 4 2 5 3 6 3 7 7 2 1 2 3 4 5 6 7 4 5 6 7 7\n2 1 2 3 4 5 6 7 4 6 5 7 Output NO YES Note Lets look at first sample: In first\ngossip Radewoosh's favorite set is 4, 2 and he has no machines. Limak can\ntranform element 4 into 2 (so half of a task is complete) and then 2 into 3,\nand 3 into 4. Answer is \"YES\", so R is increased by 1. In second gossip set in\nthe input is denoted by 6, 2 and machine by (3, 4), but R is equal to 1, so\nset is 1, 3 and machine is (4, 5). Answer is \"NO\", so R isn't changed. In\nthird gossip set 6, 4, 3 and machines (2, 5) and (4, 6) are deciphered to be\n1, 5, 4, (3, 6) and (5, 1). Consider Radewoosh's choices: If he chooses\nelements 1 and 5, then Limak is able to transform 1 into 5, then 6 into 3, 3\ninto 2 and 2 into 1. If he chooses elements 5 and 4, then Limak is able to\ntransform 5 into 6, 6 into 3, 3 into 4 (half way already behind him), 4 into\n2, 2 into 1, 1 into 5. If he chooses elements 1 and 4, then Limak is able to\ntransform 1 into 2, 2 into 4, 4 into 3, 3 into 6, 6 into 5 and 5 into 1. So\nLimak is able to execute task. Answer is \"YES\" and R is increased by 3 (it's\nequal to 4 now). In last gossip 1, 2 and (1, 2) are deciphered to be 5, 6\nand (5, 6). Now there are 2 machines (5, 6) so Limak is able to execute task\nagain.\n\n",
        "cf_contest_id": 639,
        "cf_index": "F",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "trees"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 5 4\r\n1 2\r\n2 3\r\n3 4\r\n2 4\r\n5 6\r\n2 0\r\n4 2\r\n2 1\r\n6 2\r\n3 4\r\n3 2\r\n6 3 4\r\n2 5\r\n4 6\r\n2 1\r\n1 2\r\n1 2\r\n",
                "YES\r\nNO\r\nYES\r\nYES\r\n"
            ],
            [
                "7 6 2\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n3 6\r\n3 7\r\n7 2\r\n1 2 3 4 5 6 7\r\n4 5\r\n6 7\r\n7 2\r\n1 2 3 4 5 6 7\r\n4 6\r\n5 7\r\n",
                "NO\r\nYES\r\n"
            ]
        ],
        "private_cases": [
            [
                "7 6 6\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n3 6\r\n3 7\r\n2 1\r\n2 3\r\n5 6\r\n3 1\r\n1 4 7\r\n1 6\r\n5 2\r\n5 1 2 6 7\r\n5 6\r\n1 2\r\n2 2\r\n4 3\r\n2 3\r\n4 6\r\n1 0\r\n2\r\n2 3\r\n1 5\r\n5 6\r\n7 1\r\n3 4\r\n",
                "YES\r\nNO\r\nYES\r\nYES\r\nYES\r\nYES\r\n"
            ],
            [
                "8 5 5\r\n1 2\r\n4 5\r\n3 2\r\n1 3\r\n7 6\r\n1 2\r\n4\r\n4 6\r\n5 7\r\n2 3\r\n4 6\r\n3 4\r\n6 5\r\n3 5\r\n2 5\r\n4 6\r\n3 4\r\n6 5\r\n3 5\r\n1 3\r\n8 5\r\n8 5\r\n5 6 7 8 1 2 3 4\r\n7 4\r\n6 8\r\n4 1\r\n2 5\r\n2 7\r\n7 5\r\n5 6 7 8 1 2 4\r\n7 4\r\n6 8\r\n4 1\r\n2 5\r\n2 7\r\n",
                "YES\r\nNO\r\nYES\r\nNO\r\nYES\r\n"
            ],
            [
                "15 14 5\r\n1 2\r\n2 3\r\n2 4\r\n4 5\r\n4 6\r\n6 7\r\n6 8\r\n8 9\r\n8 10\r\n10 11\r\n11 12\r\n12 13\r\n13 14\r\n13 15\r\n2 2\r\n4 10\r\n14 9\r\n1 7\r\n4 7\r\n1 15 14 3\r\n1 3\r\n2 5\r\n4 7\r\n6 9\r\n8 11\r\n10 13\r\n14 15\r\n4 7\r\n14 13 12 1\r\n14 1\r\n15 3\r\n2 5\r\n4 7\r\n8 9\r\n8 11\r\n12 13\r\n3 2\r\n2 10 6\r\n14 8\r\n7 11\r\n4 2\r\n6 7 8 13\r\n8 14\r\n1 8\r\n",
                "NO\r\nYES\r\nNO\r\nYES\r\nYES\r\n"
            ]
        ]
    }
]