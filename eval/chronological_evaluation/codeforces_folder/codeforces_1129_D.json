[
    {
        "name": "Isolation",
        "description": "Find the number of ways to divide an array \n    a\n of \n    n\n integers into\nany number of disjoint non-empty segments so that, in each segment, there\nexist at most \n    k\n distinct integers that appear exactly once. Since the\nanswer can be large, find it modulo \n    998\n     244\n     353\n. Input The first\nline contains two space-separated integers \n    n\n and \n    k\n (\n    1 \n    \u2264 k\n    \n    \u2264 n \n    \u2264 10^5\n) \u2014 the number of elements in the array \n    a\n and the\nrestriction from the statement. The following line contains \n    n\n space-\nseparated integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 n\n)\n\u2014 elements of the array \n    a\n. Output The first and only line contains the\nnumber of ways to divide an array \n    a\n modulo \n    998\n     244\n     353\n.\nExamples Input 3 1 1 1 2 Output 3 Input 5 2 1 1 2 1 3 Output 14 Input 5 5 1 2\n3 4 5 Output 16 Note In the first sample, the three possible divisions are as\nfollows. \n    [[1], [1], [2]]\n \n    [[1, 1], [2]]\n \n    [[1, 1, 2]]\n Division\n\n    [[1], [1, 2]]\n is not possible because two distinct integers appear\nexactly once in the second segment \n    [1, 2]\n.\n\n",
        "cf_contest_id": 1129,
        "cf_index": "D",
        "cf_rating": 2900,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 1\r\n1 1 2\r\n",
                "3\r\n"
            ],
            [
                "5 2\r\n1 1 2 1 3\r\n",
                "14\r\n"
            ],
            [
                "5 5\r\n1 2 3 4 5\r\n",
                "16\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 1\r\n4 2 9 2 1 4 4 1 4 10\r\n",
                "24\r\n"
            ],
            [
                "50 1\r\n50 8 46 9 12 38 41 18 49 10 23 15 16 3 13 17 48 8 31 32 6 31 31 49 9 40 9 21 23 41 17 31 45 47 17 1 12 15 50 40 38 4 20 1 9 37 4 47 4 24\r\n",
                "16\r\n"
            ],
            [
                "100 1\r\n7 75 3 62 10 31 43 96 31 62 13 76 93 85 38 96 72 69 67 44 88 53 35 21 67 18 34 2 60 14 23 56 95 69 86 51 37 82 30 48 64 10 61 8 60 74 26 100 48 56 98 85 76 5 25 98 73 78 55 4 44 53 10 8 12 10 78 25 58 47 19 45 67 86 72 90 93 78 77 36 20 69 8 73 88 4 66 30 47 92 88 51 20 33 25 50 95 78 10 69\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "2 1\r\n2 2\r\n",
                "2\r\n"
            ],
            [
                "2 2\r\n2 1\r\n",
                "2\r\n"
            ],
            [
                "100 10\r\n59 95 5 20 91 78 30 76 32 82 3 84 38 92 19 65 79 39 7 81 49 98 29 4 28 71 67 55 99 65 53 58 31 61 4 59 5 55 33 41 81 55 58 23 95 98 60 62 54 94 47 33 20 67 31 67 34 26 47 96 96 64 31 21 49 58 82 15 73 15 42 94 100 8 50 31 77 37 68 65 83 54 28 92 68 24 16 12 55 34 28 16 68 76 1 96 52 70 91 90\r\n",
                "244208148\r\n"
            ],
            [
                "100 30\r\n31 57 26 94 41 92 88 4 46 51 64 45 89 59 91 49 3 28 17 63 9 74 77 60 83 30 73 64 90 47 34 80 94 89 66 31 19 84 86 83 62 59 96 67 93 58 7 86 11 34 35 15 53 59 71 16 98 4 73 70 23 53 33 95 40 45 90 51 2 20 7 73 38 67 89 90 39 8 66 76 4 57 50 80 81 96 10 46 16 45 84 3 3 3 97 9 94 61 86 63\r\n",
                "726975503\r\n"
            ]
        ]
    }
]