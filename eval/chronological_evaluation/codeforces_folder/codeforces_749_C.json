[
    {
        "name": "Voting",
        "description": "There are n employees in Alternative Cake Manufacturing (ACM). They are now\nvoting on some very important question and the leading world media are trying\nto predict the outcome of the vote. Each of the employees belongs to one of\ntwo fractions: depublicans or remocrats, and these two fractions have opposite\nopinions on what should be the outcome of the vote. The voting procedure is\nrather complicated: Each of n employees makes a statement. They make\nstatements one by one starting from employees 1 and finishing with employee n.\nIf at the moment when it's time for the i-th employee to make a statement he\nno longer has the right to vote, he just skips his turn (and no longer takes\npart in this voting). When employee makes a statement, he can do nothing or\ndeclare that one of the other employees no longer has a right to vote. It's\nallowed to deny from voting people who already made the statement or people\nwho are only waiting to do so. If someone is denied from voting he no longer\nparticipates in the voting till the very end. When all employees are done with\ntheir statements, the procedure repeats: again, each employees starting from 1\nand finishing with n who are still eligible to vote make their statements. The\nprocess repeats until there is only one employee eligible to vote remaining\nand he determines the outcome of the whole voting. Of course, he votes for the\ndecision suitable for his fraction. You know the order employees are going to\nvote and that they behave optimal (and they also know the order and who\nbelongs to which fraction). Predict the outcome of the vote. Input The first\nline of the input contains a single integer n (1 \u2264 n \u2264 200 000) \u2014 the number\nof employees. The next line contains n characters. The i-th character is 'D'\nif the i-th employee is from depublicans fraction or 'R' if he is from\nremocrats. Output Print 'D' if the outcome of the vote will be suitable for\ndepublicans and 'R' if remocrats will win. Examples Input 5 DDRRR Output D\nInput 6 DDRRRR Output R Note Consider one of the voting scenarios for the\nfirst sample: Employee 1 denies employee 5 to vote. Employee 2 denies employee\n3 to vote. Employee 3 has no right to vote and skips his turn (he was denied\nby employee 2). Employee 4 denies employee 2 to vote. Employee 5 has no right\nto vote and skips his turn (he was denied by employee 1). Employee 1 denies\nemployee 4. Only employee 1 now has the right to vote so the voting ends with\nthe victory of depublicans.\n\n",
        "cf_contest_id": 749,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation",
            "two pointers"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\nDDRRR\r\n",
                "D"
            ],
            [
                "6\r\nDDRRRR\r\n",
                "R"
            ]
        ],
        "private_cases": [
            [
                "1\r\nD\r\n",
                "D"
            ],
            [
                "1\r\nR\r\n",
                "R"
            ],
            [
                "2\r\nDR\r\n",
                "D"
            ],
            [
                "3\r\nRDD\r\n",
                "D"
            ],
            [
                "3\r\nDRD\r\n",
                "D"
            ],
            [
                "4\r\nDRRD\r\n",
                "D"
            ],
            [
                "4\r\nDRRR\r\n",
                "R"
            ],
            [
                "4\r\nRDRD\r\n",
                "R"
            ],
            [
                "5\r\nDRDRR\r\n",
                "D"
            ],
            [
                "4\r\nRRRR\r\n",
                "R"
            ],
            [
                "5\r\nRDDRD\r\n",
                "D"
            ],
            [
                "5\r\nDDRRD\r\n",
                "D"
            ],
            [
                "5\r\nDRRRD\r\n",
                "R"
            ],
            [
                "5\r\nDDDDD\r\n",
                "D"
            ],
            [
                "6\r\nDRRDDR\r\n",
                "D"
            ],
            [
                "7\r\nRDRDRDD\r\n",
                "R"
            ],
            [
                "7\r\nRDRDDRD\r\n",
                "D"
            ],
            [
                "7\r\nRRRDDDD\r\n",
                "R"
            ],
            [
                "8\r\nRRRDDDDD\r\n",
                "D"
            ],
            [
                "9\r\nRRRDDDDDR\r\n",
                "R"
            ],
            [
                "9\r\nRRDDDRRDD\r\n",
                "R"
            ],
            [
                "9\r\nRRDDDRDRD\r\n",
                "D"
            ],
            [
                "10\r\nDDRRRDRRDD\r\n",
                "D"
            ],
            [
                "11\r\nDRDRRDDRDDR\r\n",
                "D"
            ],
            [
                "12\r\nDRDRDRDRRDRD\r\n",
                "D"
            ],
            [
                "13\r\nDRDDDDRRRRDDR\r\n",
                "D"
            ],
            [
                "14\r\nDDRDRRDRDRDDDD\r\n",
                "D"
            ],
            [
                "15\r\nDDRRRDDRDRRRDRD\r\n",
                "D"
            ],
            [
                "50\r\nDDDRDRDDDDRRRRDDDDRRRDRRRDDDRRRRDRDDDRRDRRDDDRDDDD\r\n",
                "D"
            ],
            [
                "50\r\nDRDDDDDDDRDRDDRRRDRDRDRDDDRRDRRDRDRRDDDRDDRDRDRDDR\r\n",
                "D"
            ],
            [
                "100\r\nRDRRDRDDDDRDRRDDRDRRDDRRDDRRRDRRRDDDRDDRDDRRDRDRRRDRDRRRDRRDDDRDDRRRDRDRRRDDRDRDDDDDDDRDRRDDDDDDRRDD\r\n",
                "D"
            ],
            [
                "100\r\nRRDRRDDDDDDDRDRRRDRDRDDDRDDDRDDRDRRDRRRDRRDRRRRRRRDRRRRRRDDDRRDDRRRDRRRDDRRDRRDDDDDRRDRDDRDDRRRDRRDD\r\n",
                "R"
            ],
            [
                "6\r\nRDDRDR\r\n",
                "D"
            ],
            [
                "6\r\nDRRDRD\r\n",
                "R"
            ],
            [
                "8\r\nDDDRRRRR\r\n",
                "R"
            ],
            [
                "7\r\nRRRDDDD\r\n",
                "R"
            ],
            [
                "7\r\nRDDRRDD\r\n",
                "D"
            ],
            [
                "9\r\nRDDDRRDRR\r\n",
                "R"
            ],
            [
                "5\r\nRDRDD\r\n",
                "R"
            ],
            [
                "5\r\nRRDDD\r\n",
                "R"
            ],
            [
                "8\r\nRDDRDRRD\r\n",
                "R"
            ],
            [
                "10\r\nDRRRDDRDRD\r\n",
                "R"
            ],
            [
                "7\r\nDRRDDRR\r\n",
                "R"
            ],
            [
                "12\r\nRDDDRRDRRDDR\r\n",
                "D"
            ],
            [
                "7\r\nRDRDDDR\r\n",
                "D"
            ],
            [
                "7\r\nDDRRRDR\r\n",
                "R"
            ],
            [
                "10\r\nDRRDRDRDRD\r\n",
                "R"
            ],
            [
                "21\r\nDDDDRRRRRDRDRDRDRDRDR\r\n",
                "R"
            ],
            [
                "11\r\nRDDDDDRRRRR\r\n",
                "D"
            ],
            [
                "10\r\nRDDDRRRDDR\r\n",
                "D"
            ],
            [
                "4\r\nRDDR\r\n",
                "R"
            ],
            [
                "7\r\nRDRDDRD\r\n",
                "D"
            ],
            [
                "8\r\nRDDDRRRD\r\n",
                "R"
            ],
            [
                "16\r\nDRRDRDRDRDDRDRDR\r\n",
                "R"
            ],
            [
                "8\r\nDRRDRDRD\r\n",
                "R"
            ],
            [
                "6\r\nRDDDRR\r\n",
                "D"
            ],
            [
                "10\r\nDDRRRRRDDD\r\n",
                "D"
            ],
            [
                "7\r\nDDRRRRD\r\n",
                "R"
            ],
            [
                "12\r\nRDDRDRDRRDRD\r\n",
                "D"
            ],
            [
                "9\r\nDDRRRDRDR\r\n",
                "R"
            ],
            [
                "20\r\nRDDRDRDRDRRDRDRDRDDR\r\n",
                "D"
            ],
            [
                "7\r\nRRDDDRD\r\n",
                "D"
            ],
            [
                "12\r\nDRRRRRRDDDDD\r\n",
                "R"
            ],
            [
                "12\r\nRDRDDRDRDRDR\r\n",
                "D"
            ],
            [
                "6\r\nDDDDDD\r\n",
                "D"
            ],
            [
                "10\r\nRRRDDRDDDD\r\n",
                "R"
            ],
            [
                "40\r\nRDDDRDDDRDRRDRDRRRRRDRDRDRDRRDRDRDRRDDDD\r\n",
                "R"
            ],
            [
                "50\r\nRRDDDRRDRRRDDRDDDDDRDDRRRRRRDRDDRDDDRDRRDDRDDDRDRD\r\n",
                "D"
            ],
            [
                "5\r\nRDRDR\r\n",
                "R"
            ],
            [
                "9\r\nDRRDRDDRR\r\n",
                "R"
            ],
            [
                "6\r\nDRRRDD\r\n",
                "R"
            ],
            [
                "10\r\nDDDDRRRRRR\r\n",
                "D"
            ],
            [
                "9\r\nRRDDDDRRD\r\n",
                "D"
            ]
        ]
    }
]