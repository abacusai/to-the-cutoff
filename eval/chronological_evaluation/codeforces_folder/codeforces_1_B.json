[
    {
        "name": "Spreadsheet",
        "description": "In the popular spreadsheets systems (for example, in Excel) the following\nnumeration of columns is used. The first column has number A, the second \u2014\nnumber B, etc. till column 26 that is marked by Z. Then there are two-letter\nnumbers: column 27 has number AA, 28 \u2014 AB, column 52 is marked by AZ. After ZZ\nthere follow three-letter numbers, etc. The rows are marked by integer numbers\nstarting with 1. The cell name is the concatenation of the column and the row\nnumbers. For example, BC23 is the name for the cell that is in column 55, row\n23. Sometimes another numeration system is used: RXCY, where X and Y are\ninteger numbers, showing the column and the row numbers respectfully. For\ninstance, R23C55 is the cell from the previous example. Your task is to write\na program that reads the given sequence of cell coordinates and produce each\nitem written according to the rules of another numeration system. Input The\nfirst line of the input contains integer number n (1 \u2264 n \u2264 10^5), the number\nof coordinates in the test. Then there follow n lines, each of them contains\ncoordinates. All the coordinates are correct, there are no cells with the\ncolumn and/or the row numbers larger than 10^6 . Output Write n lines, each\nline should contain a cell coordinates in the other numeration system.\nExamples Input 2 R23C55 BC23 Output BC23 R23C55\n\n",
        "cf_contest_id": 1,
        "cf_index": "B",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 10.0,
        "memory_limit_bytes": 64.0,
        "public_cases": [
            [
                "2\r\nR23C55\r\nBC23\r\n",
                "BC23\r\nR23C55\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\nA1\r\n",
                "R1C1\r\n"
            ],
            [
                "5\r\nR8C3\r\nD1\r\nR7C2\r\nR8C9\r\nR8C9\r\n",
                "C8\r\nR1C4\r\nB7\r\nI8\r\nI8\r\n"
            ],
            [
                "4\r\nR4C25\r\nR90C35\r\nAP55\r\nX83\r\n",
                "Y4\r\nAI90\r\nR55C42\r\nR83C24\r\n"
            ],
            [
                "10\r\nR50C12\r\nR23C47\r\nY96\r\nR44C13\r\nR19C21\r\nR95C73\r\nBK12\r\nR51C74\r\nAY34\r\nR63C25\r\n",
                "L50\r\nAU23\r\nR96C25\r\nM44\r\nU19\r\nBU95\r\nR12C63\r\nBV51\r\nR34C51\r\nY63\r\n"
            ]
        ]
    }
]