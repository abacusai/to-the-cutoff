[
    {
        "name": "Tokitsukaze and Strange Rectangle",
        "description": "There are \n    n\n points on the plane, the \n    i\n-th of which is at \n    (x_i,\n    y_i)\n. Tokitsukaze wants to draw a strange rectangular area and pick all the\npoints in the area. The strange area is enclosed by three lines, \n    x = l\n,\n\n    y = a\n and \n    x = r\n, as its left side, its bottom side and its right\nside respectively, where \n    l\n, \n    r\n and \n    a\n can be any real numbers\nsatisfying that \n    l < r\n. The upper side of the area is boundless, which\nyou can regard as a line parallel to the \n    x\n-axis at infinity. The\nfollowing figure shows a strange rectangular area. A point \n    (x_i, y_i)\n is\nin the strange rectangular area if and only if \n    l < x_i < r\n and \n    y_i >\n    a\n. For example, in the above figure, \n    p_1\n is in the area while\n\n    p_2\n is not. Tokitsukaze wants to know how many different non-empty sets\nshe can obtain by picking all the points in a strange rectangular area, where\nwe think two sets are different if there exists at least one point in one set\nof them but not in the other. Input The first line contains a single integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00d7 10^5\n) \u2014 the number of points on\nthe plane. The \n    i\n-th of the next \n    n\n lines contains two integers\n\n    x_i\n, \n    y_i\n (\n    1 \n    \u2264 x_i, y_i \n    \u2264 10^9\n) \u2014 the coordinates\nof the \n    i\n-th point. All points are distinct. Output Print a single\ninteger \u2014 the number of different non-empty sets of points she can obtain.\nExamples Input 3 1 1 1 2 1 3 Output 3 Input 3 1 1 2 1 3 1 Output 6 Input 4 2 1\n2 2 3 1 3 2 Output 6 Note For the first example, there is exactly one set\nhaving \n    k\n points for \n    k = 1, 2, 3\n, so the total number is \n    3\n.\nFor the second example, the numbers of sets having \n    k\n points for \n    k =\n    1, 2, 3\n are \n    3\n, \n    2\n, \n    1\n respectively, and their sum is\n\n    6\n. For the third example, as the following figure shows, there are\n\n    2\n sets having one point; \n    3\n sets having two points; \n    1\n set\nhaving four points. Therefore, the number of different non-empty sets in this\nexample is \n    2 + 3 + 0 + 1 = 6\n.\n\n",
        "cf_contest_id": 1190,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "divide and conquer",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 1\r\n1 2\r\n1 3\r\n",
                "3"
            ],
            [
                "3\r\n1 1\r\n2 1\r\n3 1\r\n",
                "6"
            ],
            [
                "4\r\n2 1\r\n2 2\r\n3 1\r\n3 2\r\n",
                "6"
            ]
        ],
        "private_cases": [
            [
                "5\r\n3 6\r\n5 10\r\n4 3\r\n2 1\r\n1 3\r\n",
                "19"
            ],
            [
                "1\r\n1000000000 1000000000\r\n",
                "1"
            ],
            [
                "4\r\n1 1\r\n1 1000000000\r\n1000000000 1\r\n1000000000 1000000000\r\n",
                "6"
            ],
            [
                "5\r\n1 2\r\n2 1\r\n2 2\r\n2 3\r\n3 2\r\n",
                "11"
            ],
            [
                "7\r\n1 1\r\n1 4\r\n1 5\r\n2 1\r\n3 3\r\n4 2\r\n5 2\r\n",
                "20"
            ],
            [
                "8\r\n1 3\r\n2 1\r\n2 5\r\n2 6\r\n3 1\r\n4 4\r\n5 2\r\n6 2\r\n",
                "30"
            ],
            [
                "35\r\n4 2\r\n9 6\r\n3 10\r\n2 5\r\n7 9\r\n6 9\r\n10 7\r\n6 6\r\n5 4\r\n4 10\r\n5 9\r\n8 1\r\n2 4\r\n9 9\r\n5 7\r\n6 5\r\n10 4\r\n8 9\r\n5 8\r\n1 3\r\n5 1\r\n8 4\r\n7 5\r\n9 5\r\n9 10\r\n9 4\r\n6 10\r\n8 5\r\n6 7\r\n3 4\r\n8 7\r\n7 1\r\n4 7\r\n3 6\r\n3 3\r\n",
                "286"
            ],
            [
                "9\r\n1 3\r\n5 1\r\n2 2\r\n2 3\r\n3 2\r\n3 1\r\n3 3\r\n4 2\r\n4 1\r\n",
                "27"
            ],
            [
                "2\r\n100000 5\r\n100000 6\r\n",
                "2"
            ],
            [
                "2\r\n7 100000\r\n5 100000\r\n",
                "3"
            ],
            [
                "1\r\n481199252 167959139\r\n",
                "1"
            ],
            [
                "10\r\n500000000 1\r\n500000001 2\r\n499999999 3\r\n500000002 4\r\n499999998 5\r\n500000003 6\r\n499999997 7\r\n500000004 8\r\n499999996 9\r\n500000005 10\r\n",
                "125"
            ],
            [
                "28\r\n4 4\r\n9 2\r\n8 6\r\n10 2\r\n5 8\r\n3 2\r\n2 3\r\n3 7\r\n7 2\r\n5 7\r\n3 9\r\n1 10\r\n3 3\r\n2 1\r\n5 1\r\n10 8\r\n10 3\r\n8 1\r\n9 3\r\n5 9\r\n2 2\r\n2 4\r\n4 2\r\n6 7\r\n7 3\r\n2 9\r\n8 2\r\n2 6\r\n",
                "223"
            ],
            [
                "30\r\n9 1\r\n1 6\r\n2 10\r\n6 8\r\n5 5\r\n5 10\r\n8 6\r\n10 8\r\n7 7\r\n8 5\r\n6 4\r\n1 5\r\n8 4\r\n4 6\r\n7 3\r\n5 1\r\n9 2\r\n5 6\r\n5 9\r\n10 9\r\n7 8\r\n5 2\r\n6 3\r\n10 5\r\n9 8\r\n10 2\r\n3 5\r\n7 10\r\n10 6\r\n2 6\r\n",
                "281"
            ],
            [
                "27\r\n4 3\r\n10 8\r\n1 6\r\n6 9\r\n2 10\r\n2 2\r\n9 1\r\n5 4\r\n3 8\r\n4 7\r\n6 6\r\n1 10\r\n9 2\r\n4 4\r\n7 10\r\n10 2\r\n3 4\r\n4 5\r\n2 5\r\n1 2\r\n2 1\r\n1 7\r\n10 5\r\n5 2\r\n1 3\r\n8 6\r\n6 10\r\n",
                "243"
            ],
            [
                "35\r\n8 1\r\n6 8\r\n4 1\r\n1 2\r\n1 4\r\n5 10\r\n10 8\r\n9 1\r\n9 9\r\n10 2\r\n6 5\r\n8 8\r\n7 6\r\n10 6\r\n9 4\r\n4 9\r\n3 2\r\n1 8\r\n3 9\r\n7 3\r\n3 7\r\n2 7\r\n3 8\r\n3 1\r\n2 2\r\n5 5\r\n7 2\r\n4 10\r\n6 3\r\n5 1\r\n8 10\r\n4 3\r\n9 8\r\n9 7\r\n3 10\r\n",
                "316"
            ],
            [
                "28\r\n2 2\r\n2 7\r\n10 7\r\n7 8\r\n10 2\r\n5 2\r\n8 2\r\n10 4\r\n3 5\r\n3 3\r\n3 10\r\n4 8\r\n9 7\r\n3 9\r\n5 7\r\n6 4\r\n6 1\r\n9 8\r\n4 3\r\n8 6\r\n1 1\r\n9 5\r\n1 10\r\n2 1\r\n7 4\r\n5 10\r\n3 1\r\n9 3\r\n",
                "277"
            ],
            [
                "29\r\n1 10\r\n5 5\r\n2 4\r\n8 6\r\n7 9\r\n9 10\r\n8 1\r\n8 4\r\n3 5\r\n8 5\r\n2 10\r\n3 8\r\n10 2\r\n1 4\r\n10 8\r\n4 5\r\n5 9\r\n5 7\r\n3 9\r\n6 1\r\n3 3\r\n4 10\r\n4 8\r\n6 3\r\n1 8\r\n6 5\r\n2 9\r\n8 3\r\n7 2\r\n",
                "302"
            ],
            [
                "33\r\n10 5\r\n2 8\r\n4 3\r\n8 4\r\n4 2\r\n8 9\r\n4 9\r\n5 1\r\n5 6\r\n6 2\r\n1 3\r\n5 4\r\n2 2\r\n5 7\r\n3 9\r\n8 7\r\n3 5\r\n10 2\r\n3 6\r\n9 8\r\n8 3\r\n9 2\r\n8 1\r\n9 10\r\n1 8\r\n4 6\r\n2 4\r\n7 1\r\n6 10\r\n2 5\r\n3 7\r\n1 4\r\n6 4\r\n",
                "277"
            ],
            [
                "25\r\n8 7\r\n4 1\r\n3 4\r\n8 4\r\n8 2\r\n10 7\r\n2 2\r\n2 9\r\n4 10\r\n4 5\r\n2 10\r\n6 5\r\n4 7\r\n1 5\r\n2 5\r\n10 5\r\n2 1\r\n2 6\r\n3 3\r\n6 4\r\n4 3\r\n1 10\r\n6 7\r\n5 3\r\n9 4\r\n",
                "180"
            ]
        ]
    }
]