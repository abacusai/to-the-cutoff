[
    {
        "name": "Flights for Regular Customers",
        "description": "In the country there are exactly n cities numbered with positive integers from\n1 to n. In each city there is an airport is located. Also, there is the only\none airline, which makes m flights. Unfortunately, to use them, you need to be\na regular customer of this company, namely, you have the opportunity to enjoy\nflight i from city ai to city bi only if you have already made at least di\nflights before that. Please note that flight i flies exactly from city ai to\ncity bi. It can not be used to fly from city bi to city ai. An interesting\nfact is that there may possibly be recreational flights with a beautiful view\nof the sky, which begin and end in the same city. You need to get from city 1\nto city n. Unfortunately, you've never traveled by plane before. What minimum\nnumber of flights you have to perform in order to get to city n? Note that the\nsame flight can be used multiple times. Input The first line contains two\nintegers, n and m (2 \u2264 n \u2264 150, 1 \u2264 m \u2264 150) \u2014 the number of cities in the\ncountry and the number of flights the company provides. Next m lines contain\nnumbers ai, bi, di (1 \u2264 ai, bi \u2264 n, 0 \u2264 di \u2264 10^9), representing flight number\ni from city ai to city bi, accessible to only the clients who have made at\nleast di flights. Output Print \"Impossible\" (without the quotes), if it is\nimpossible to get from city 1 to city n using the airways. But if there is at\nleast one way, print a single integer \u2014 the minimum number of flights you need\nto make to get to the destination point. Examples Input 3 2 1 2 0 2 3 1 Output\n2 Input 2 1 1 2 100500 Output Impossible Input 3 3 2 1 0 2 3 6 1 2 0 Output 8\n\n",
        "cf_contest_id": 576,
        "cf_index": "D",
        "cf_rating": 2700,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "matrices"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n1 2 0\r\n2 3 1\r\n",
                "2"
            ],
            [
                "2 1\r\n1 2 100500\r\n",
                "Impossible\r\n"
            ],
            [
                "3 3\r\n2 1 0\r\n2 3 6\r\n1 2 0\r\n",
                "8"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1 2 0\r\n",
                "1"
            ],
            [
                "150 1\r\n1 150 0\r\n",
                "1"
            ],
            [
                "4 4\r\n3 4 6\r\n1 2 0\r\n2 3 2\r\n1 1 0\r\n",
                "7"
            ],
            [
                "3 4\r\n2 1 0\r\n3 3 1\r\n1 2 0\r\n1 3 3\r\n",
                "5"
            ],
            [
                "150 10\r\n1 1 0\r\n4 55 802090732\r\n28 24 661369649\r\n5 49 784303821\r\n24 5 388684428\r\n1 4 460626451\r\n133 74 656422756\r\n49 133 376287098\r\n74 150 9301599\r\n55 28 277246428\r\n",
                "802090740"
            ],
            [
                "150 10\r\n1 97 0\r\n61 63 319177159\r\n97 17 1\r\n90 139 3\r\n83 54 951061917\r\n139 83 172960147\r\n63 150 720665763\r\n139 139 4\r\n54 61 502625539\r\n17 90 2\r\n",
                "951061921"
            ],
            [
                "70 11\r\n1 3 4\r\n1 32 2\r\n1 49 0\r\n3 1 5\r\n20 32 10\r\n20 70 49999998\r\n32 1 3\r\n32 20 9\r\n49 1 1\r\n49 59 61\r\n59 49 62\r\n",
                "49999999"
            ]
        ]
    }
]