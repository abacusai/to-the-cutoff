[
    {
        "name": "Chris and Magic Square",
        "description": "ZS the Coder and Chris the Baboon arrived at the entrance of Udayland. There\nis a n \u00d7 n magic grid on the entrance which is filled with integers. Chris\nnoticed that exactly one of the cells in the grid is empty, and to enter\nUdayland, they need to fill a positive integer into the empty cell. Chris\ntried filling in random numbers but it didn't work. ZS the Coder realizes that\nthey need to fill in a positive integer such that the numbers in the grid form\na magic square. This means that he has to fill in a positive integer so that\nthe sum of the numbers in each row of the grid (), each column of the grid (),\nand the two long diagonals of the grid (the main diagonal \u2014 and the secondary\ndiagonal \u2014 ) are equal. Chris doesn't know what number to fill in. Can you\nhelp Chris find the correct positive integer to fill in or determine that it\nis impossible? Input The first line of the input contains a single integer n\n(1 \u2264 n \u2264 500) \u2014 the number of rows and columns of the magic grid. n lines\nfollow, each of them contains n integers. The j-th number in the i-th of them\ndenotes ai, j (1 \u2264 ai, j \u2264 10^9 or ai, j = 0), the number in the i-th row and\nj-th column of the magic grid. If the corresponding cell is empty, ai, j will\nbe equal to 0. Otherwise, ai, j is positive. It is guaranteed that there is\nexactly one pair of integers i, j (1 \u2264 i, j \u2264 n) such that ai, j = 0. Output\nOutput a single integer, the positive integer x (1 \u2264 x \u2264 10^18) that should be\nfilled in the empty cell so that the whole grid becomes a magic square. If\nsuch positive integer x does not exist, output - 1 instead. If there are\nmultiple solutions, you may print any of them. Examples Input 3 4 0 2 3 5 7 8\n1 6 Output 9 Input 4 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 Output 1 Input 4 1 1 1 1\n1 1 0 1 1 1 2 1 1 1 1 1 Output -1 Note In the first sample case, we can fill\nin 9 into the empty cell to make the resulting grid a magic square. Indeed,\nThe sum of numbers in each row is: 4 + 9 + 2 = 3 + 5 + 7 = 8 + 1 + 6 = 15. The\nsum of numbers in each column is: 4 + 3 + 8 = 9 + 5 + 1 = 2 + 7 + 6 = 15. The\nsum of numbers in the two diagonals is: 4 + 5 + 6 = 2 + 5 + 8 = 15. In the\nthird sample case, it is impossible to fill a number in the empty square such\nthat the resulting grid is a magic square.\n\n",
        "cf_contest_id": 711,
        "cf_index": "B",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4 0 2\r\n3 5 7\r\n8 1 6\r\n",
                "9\r\n"
            ],
            [
                "4\r\n1 1 1 1\r\n1 1 0 1\r\n1 1 1 1\r\n1 1 1 1\r\n",
                "1\r\n"
            ],
            [
                "4\r\n1 1 1 1\r\n1 1 0 1\r\n1 1 2 1\r\n1 1 1 1\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0\r\n",
                "1\r\n"
            ],
            [
                "10\r\n92 67 99 74 1 51 8 58 15 40\r\n17 42 24 49 0 26 83 33 90 65\r\n98 73 80 55 7 57 14 64 16 41\r\n23 48 5 30 82 32 89 39 91 66\r\n4 54 81 56 88 63 20 70 22 47\r\n79 29 6 31 13 38 95 45 97 72\r\n85 60 87 62 19 69 21 71 3 28\r\n10 35 12 37 94 44 96 46 78 53\r\n86 61 93 68 25 75 2 52 9 34\r\n11 36 18 43 100 50 77 27 84 59\r\n",
                "76\r\n"
            ],
            [
                "4\r\n1000000000 1000000000 1000000000 1000000000\r\n1000000000 1000000000 1000000000 1000000000\r\n1000000000 1000000000 0 1000000000\r\n1000000000 1000000000 1000000000 1000000000\r\n",
                "1000000000\r\n"
            ],
            [
                "3\r\n3 8 1\r\n2 4 6\r\n7 0 5\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 2 2\r\n2 2 1\r\n0 1 2\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 6 10\r\n5 6 16\r\n0 5 1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n2 2 1\r\n1 2 2\r\n0 1 2\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 2 2\r\n2 2 1\r\n2 1 0\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n2016 2016 2016\r\n2016 0 2016\r\n2016 2016 2016\r\n",
                "2016\r\n"
            ],
            [
                "10\r\n92 67 99 74 1 51 8 58 15 40\r\n17 42 24 49 76 26 83 33 90 65\r\n98 73 80 55 7 57 14 64 16 41\r\n23 48 5 30 82 32 89 39 91 66\r\n4 54 81 56 88 63 20 70 22 47\r\n79 29 6 31 13 38 95 45 97 72\r\n85 60 87 62 19 69 21 71 3 28\r\n10 35 12 37 94 44 96 46 78 53\r\n86 61 93 68 25 75 2 52 0 34\r\n11 36 18 43 100 50 77 27 84 59\r\n",
                "9\r\n"
            ],
            [
                "10\r\n92 67 99 74 1 51 8 58 15 40\r\n17 42 24 49 76 26 83 33 90 65\r\n98 73 80 55 7 57 14 64 16 41\r\n23 48 5 30 82 32 89 39 91 66\r\n4 54 81 56 0 63 20 70 22 47\r\n79 29 6 31 13 38 95 45 97 72\r\n85 60 87 62 19 69 21 71 3 28\r\n10 35 12 37 94 44 96 46 78 53\r\n86 61 93 68 25 75 2 52 9 34\r\n11 36 18 43 100 50 77 27 84 59\r\n",
                "88\r\n"
            ],
            [
                "3\r\n2 2 1\r\n1 2 2\r\n2 1 0\r\n",
                "-1\r\n"
            ],
            [
                "10\r\n92 67 99 74 1 51 8 58 15 0\r\n17 42 24 49 76 26 83 33 90 65\r\n98 73 80 55 7 57 14 64 16 41\r\n23 48 5 30 82 32 89 39 91 66\r\n4 54 81 56 88 63 20 70 22 47\r\n79 29 6 31 13 38 95 45 97 72\r\n85 60 87 62 19 69 21 71 3 28\r\n10 35 12 37 94 44 96 46 78 53\r\n86 61 93 68 25 75 2 52 9 34\r\n11 36 18 43 100 50 77 27 84 59\r\n",
                "40\r\n"
            ],
            [
                "4\r\n2 2 2 2\r\n2 0 2 2\r\n3 2 2 1\r\n2 2 2 2\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 15 5\r\n11 7 3\r\n9 0 13\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n61 0 41\r\n11 31 51\r\n21 71 1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n3 0 3\r\n2 3 2\r\n2 3 2\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n0 2 2\r\n3 1 1\r\n1 2 2\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 0 1\r\n1 1 2\r\n1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 0 1\r\n2 1 2\r\n2 1 2\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 0 1\r\n4 1 4\r\n1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 1 1\r\n1 1 0\r\n1 2 1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n2 0 1\r\n1 2 1\r\n1 1 2\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 2 2\r\n3 1 1\r\n0 2 2\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n0 1 1 1\r\n1 1 1 1\r\n1 1 1 2\r\n1 1 2 1\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n1 1 0 1\r\n1 1 1 1\r\n1 1 1 1\r\n1 2 1 1\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n1 1 1000000000 1000000000 1000000000\r\n1 1000000000 1 1000000000 1000000000\r\n0 1 1 1 1\r\n1 1000000000 1000000000 1000000000 1\r\n1 1000000000 1000000000 1 1000000000\r\n",
                "2999999998\r\n"
            ],
            [
                "3\r\n5 5 5\r\n6 5 0\r\n5 5 5\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 0 1\r\n50 1 500\r\n2 1 2\r\n",
                "-1\r\n"
            ],
            [
                "9\r\n1 1000000000 1 1000000000 1 1000000000 1 1000000000 1\r\n1000000000 1 1000000000 1 1 1 1000000000 1 1000000000\r\n1 1000000000 1 1000000000 1 1000000000 1 1000000000 1\r\n1000000000 1 1000000000 1 1 1 1000000000 1 1000000000\r\n1 1 1 1 0 1 1 1 1\r\n1000000000 1 1000000000 1 1 1 1000000000 1 1000000000\r\n1 1000000000 1 1000000000 1 1000000000 1 1000000000 1\r\n1000000000 1 1000000000 1 1 1 1000000000 1 1000000000\r\n1 1000000000 1 1000000000 1 1000000000 1 1000000000 1\r\n",
                "3999999997\r\n"
            ],
            [
                "3\r\n7 22 1\r\n4 10 16\r\n19 0 13\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n1 1 1 1 1\r\n1 1 1 1 0\r\n1 2 1 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n3 6 0 2\r\n5 5 7 1\r\n1 7 4 6\r\n2 9 1 6\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n1 2 1 1 1\r\n1 1 2 1 1\r\n2 1 1 0 1\r\n1 1 1 1 2\r\n1 1 1 2 1\r\n",
                "-1\r\n"
            ],
            [
                "11\r\n5 5 5 5 5 5 5 5 5 5 5\r\n5 5 5 5 5 5 5 5 5 5 5\r\n5 5 5 5 5 5 5 5 5 5 5\r\n5 5 5 5 5 5 5 5 5 5 5\r\n5 5 5 5 5 5 5 5 5 5 5\r\n5 5 5 5 5 5 5 5 5 5 5\r\n5 5 5 5 5 5 5 5 5 5 5\r\n5 5 5 5 5 5 5 5 5 5 5\r\n5 5 5 5 13 1 1 5 5 5 5\r\n5 5 5 5 5 9 1 5 5 5 5\r\n5 5 5 5 0 5 13 5 5 5 5\r\n",
                "-1\r\n"
            ],
            [
                "2\r\n5 5\r\n5 0\r\n",
                "5\r\n"
            ],
            [
                "5\r\n10 10 1 10 10\r\n1 1 0 1 1\r\n10 10 1 10 10\r\n10 10 1 10 10\r\n10 10 1 10 10\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n1 1 1 2 1\r\n1 1 1 1 1\r\n1 1 0 1 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1000000000 1000000000 1000000000\r\n1000000000 1000000000 1000000000\r\n1000000000 0 1000000000\r\n",
                "1000000000\r\n"
            ],
            [
                "3\r\n3 3 3\r\n0 2 5\r\n1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n2 2 3 1\r\n1 0 3 3\r\n4 3 4 1\r\n1 2 3 1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 1 2\r\n2 1 0\r\n1 2 1\r\n",
                "-1\r\n"
            ],
            [
                "2\r\n1 2\r\n1 0\r\n",
                "-1\r\n"
            ],
            [
                "2\r\n0 535\r\n535 535\r\n",
                "535\r\n"
            ],
            [
                "6\r\n0 1 1 1 1 1\r\n1 1 1000000000 1000000000 1000000000 1000000000\r\n1 1000000000 1 1000000000 1000000000 1000000000\r\n1 1000000000 1000000000 1 1000000000 1000000000\r\n1 1000000000 1000000000 1000000000 1 1000000000\r\n1 1000000000 1000000000 1000000000 1000000000 1\r\n",
                "3999999997\r\n"
            ],
            [
                "4\r\n2 6 0 3\r\n5 5 7 1\r\n5 1 3 9\r\n6 6 1 5\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n2 1 2 1 2\r\n2 2 2 2 2\r\n2 2 0 2 2\r\n2 2 2 2 2\r\n2 2 2 2 2\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 2 3\r\n1 0 3\r\n1 2 3\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n0 1 2\r\n1 2 1\r\n2 1 1\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n2 3 2 3\r\n3 2 3 0\r\n2 4 2 2\r\n3 1 3 3\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 1 1\r\n1 0 1\r\n1 2 1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 1 1\r\n1 4 1\r\n1 1 0\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n1 1 2 1 1\r\n1 1 1 1 1\r\n1 1 1 0 1\r\n1 1 1 1 1\r\n1 1 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n0 1 1\r\n1 1 1\r\n1 1 2\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n1 2 1\r\n1 0 1\r\n1 2 1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n6 7 2\r\n1 0 9\r\n8 3 4\r\n",
                "5\r\n"
            ],
            [
                "3\r\n1 1 1\r\n1 1 1\r\n1 0 1\r\n",
                "1\r\n"
            ],
            [
                "3\r\n3 6 0\r\n3 3 5\r\n5 2 4\r\n",
                "-1\r\n"
            ],
            [
                "5\r\n1 2 2 2 1\r\n1 1 1 1 0\r\n2 2 1 2 1\r\n2 1 2 1 1\r\n1 2 2 2 1\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n1 1 1 1\r\n1 1 1 0\r\n1 1 2 1\r\n1 1 1 1\r\n",
                "-1\r\n"
            ],
            [
                "3\r\n13 0 19\r\n16 10 4\r\n1 22 7\r\n",
                "-1\r\n"
            ],
            [
                "4\r\n1 2 2 1\r\n2 1 0 2\r\n2 1 1 2\r\n1 2 2 1\r\n",
                "-1\r\n"
            ]
        ]
    }
]