[
    {
        "name": "Shortest and Longest LIS",
        "description": "Gildong recently learned how to find the longest increasing subsequence (LIS)\nin \n    O(n\n    logn)\n time for a sequence of length \n    n\n. He wants to test\nhimself if he can implement it correctly, but he couldn't find any online\njudges that would do it (even though there are actually many of them). So\ninstead he's going to make a quiz for you about making permutations of \n    n\n\ndistinct integers between \n    1\n and \n    n\n, inclusive, to test his code\nwith your output. The quiz is as follows. Gildong provides a string of length\n\n    n-1\n, consisting of characters '<' and '>' only. The \n    i\n-th\n(1-indexed) character is the comparison result between the \n    i\n-th element\nand the \n    i+1\n-st element of the sequence. If the \n    i\n-th character of\nthe string is '<', then the \n    i\n-th element of the sequence is less than\nthe \n    i+1\n-st element. If the \n    i\n-th character of the string is '>',\nthen the \n    i\n-th element of the sequence is greater than the \n    i+1\n-st\nelement. He wants you to find two possible sequences (not necessarily\ndistinct) consisting of \n    n\n distinct integers between \n    1\n and \n    n\n,\ninclusive, each satisfying the comparison results, where the length of the LIS\nof the first sequence is minimum possible, and the length of the LIS of the\nsecond sequence is maximum possible. Input Each test contains one or more test\ncases. The first line contains the number of test cases \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^4\n). Each test case contains exactly one line, consisting of an\ninteger and a string consisting of characters '<' and '>' only. The integer is\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n), the length of the permutation\nyou need to find. The string is the comparison results explained in the\ndescription. The length of the string is \n    n-1\n. It is guaranteed that the\nsum of all \n    n\n in all test cases doesn't exceed \n    2 \n    \u00b7 10^5\n.\nOutput For each test case, print two lines with \n    n\n integers each. The\nfirst line is the sequence with the minimum length of the LIS, and the second\nline is the sequence with the maximum length of the LIS. If there are multiple\nanswers, print any one of them. Each sequence should contain all integers\nbetween \n    1\n and \n    n\n, inclusive, and should satisfy the comparison\nresults. It can be shown that at least one answer always exists. Example Input\n3 3 << 7 >><>>< 5 >>>< Output 1 2 3 1 2 3 5 4 3 7 2 1 6 4 3 1 7 5 2 6 4 3 2 1\n5 5 4 2 1 3 Note In the first case, \n    1\n \n    2\n \n    3\n is the only\npossible answer. In the second case, the shortest length of the LIS is\n\n    2\n, and the longest length of the LIS is \n    3\n. In the example of the\nmaximum LIS sequence, \n    4\n '\n    3\n' \n    1\n \n    7\n '\n    5\n' \n    2\n\n'\n    6\n' can be one of the possible LIS.\n\n",
        "cf_contest_id": 1304,
        "cf_index": "D",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "graphs",
            "greedy",
            "two pointers"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 <<\r\n7 >><>><\r\n5 >>><\r\n",
                "1 2 3\r\n1 2 3\r\n7 6 4 5 3 1 2\r\n3 2 1 6 5 4 7\r\n5 4 3 1 2\r\n4 3 2 1 5\r\n"
            ]
        ],
        "private_cases": []
    }
]