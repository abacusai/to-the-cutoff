[
    {
        "name": "Colorings and Dominoes",
        "description": "You have a large rectangular board which is divided into \n    n \n    \u00d7 m\n\ncells (the board has \n    n\n rows and \n    m\n columns). Each cell is either\nwhite or black. You paint each white cell either red or blue. Obviously, the\nnumber of different ways to paint them is \n    2^w\n, where \n    w\n is the\nnumber of white cells. After painting the white cells of the board, you want\nto place the maximum number of dominoes on it, according to the following\nrules: each domino covers two adjacent cells; each cell is covered by at most\none domino; if a domino is placed horizontally (it covers two adjacent cells\nin one of the rows), it should cover only red cells; if a domino is placed\nvertically (it covers two adjacent cells in one of the columns), it should\ncover only blue cells. Let the value of the board be the maximum number of\ndominoes you can place. Calculate the sum of values of the board over all\n\n    2^w\n possible ways to paint it. Since it can be huge, print it modulo\n\n    998\n     244\n     353\n. Input The first line contains two integers \n    n\n\nand \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264 3 \n    \u00b7 10^5\n; \n    nm \n    \u2264 3 \n    \u00b7\n    10^5\n) \u2014 the number of rows and columns, respectively. Then \n    n\n lines\nfollow, each line contains a string of \n    m\n characters. The \n    j\n-th\ncharacter in the \n    i\n-th string is * if the \n    j\n-th cell in the\n\n    i\n-th row is black; otherwise, that character is o. Output Print one\ninteger \u2014 the sum of values of the board over all \n    2^w\n possible ways to\npaint it, taken modulo \n    998\n     244\n     353\n. Examples Input 3 4 **oo oo*o\n**oo Output 144 Input 3 4 **oo oo** **oo Output 48 Input 2 2 oo o* Output 4\nInput 1 4 oooo Output 9\n\n",
        "cf_contest_id": 1511,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "dp",
            "greedy",
            "math"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 4\r\n**oo\r\noo*o\r\n**oo\r\n",
                "144\r\n"
            ],
            [
                "3 4\r\n**oo\r\noo**\r\n**oo\r\n",
                "48\r\n"
            ],
            [
                "2 2\r\noo\r\no*\r\n",
                "4\r\n"
            ],
            [
                "1 4\r\noooo\r\n",
                "9\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 4\r\noooo\r\no*oo\r\noooo\r\n**oo\r\nooo*\r\n",
                "239616\r\n"
            ],
            [
                "2 4\r\noooo\r\no*oo\r\n",
                "200\r\n"
            ]
        ]
    }
]