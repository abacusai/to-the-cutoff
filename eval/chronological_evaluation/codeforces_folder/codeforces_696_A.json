[
    {
        "name": "Lorenzo Von Matterhorn",
        "description": "Barney lives in NYC. NYC has infinite number of intersections numbered with\npositive integers starting from 1. There exists a bidirectional road between\nintersections i and 2i and another road between i and 2i + 1 for every\npositive integer i. You can clearly see that there exists a unique shortest\npath between any two intersections. Initially anyone can pass any road for\nfree. But since SlapsGiving is ahead of us, there will q consecutive events\nhappen soon. There are two types of events: 1\u0120overnment makes a new rule. A\nrule can be denoted by integers v, u and w. As the result of this action, the\npassing fee of all roads on the shortest path from u to v increases by w\ndollars. 2\u1e02arney starts moving from some intersection v and goes to\nintersection u where there's a girl he wants to cuddle (using his fake name\nLorenzo Von Matterhorn). He always uses the shortest path (visiting minimum\nnumber of intersections or roads) between two intersections. Government needs\nyour calculations. For each time Barney goes to cuddle a girl, you need to\ntell the government how much money he should pay (sum of passing fee of all\nroads he passes). Input The first line of input contains a single integer q (1\n\u2264 q \u2264 1 000). The next q lines contain the information about the events in\nchronological order. Each event is described in form 1 v u w if it's an event\nwhen government makes a new rule about increasing the passing fee of all roads\non the shortest path from u to v by w dollars, or in form 2 v u if it's an\nevent when Barnie goes to cuddle from the intersection v to the intersection\nu. 1 \u2264 v, u \u2264 10^18, v \u2260 u, 1 \u2264 w \u2264 10^9 states for every description line.\nOutput For each event of second type print the sum of passing fee of all roads\nBarney passes in this event, in one line. Print the answers in chronological\norder of corresponding events. Example Input 7 1 3 4 30 1 4 1 2 1 3 6 8 2 4 3\n1 6 1 40 2 3 7 2 2 4 Output 94 0 32 Note In the example testcase: Here are the\nintersections used: Intersections on the path are 3, 1, 2 and 4. Intersections\non the path are 4, 2 and 1. Intersections on the path are only 3 and 6.\nIntersections on the path are 4, 2, 1 and 3. Passing fee of roads on the path\nare 32, 32 and 30 in order. So answer equals to 32 + 32 + 30 = 94.\nIntersections on the path are 6, 3 and 1. Intersections on the path are 3 and\n7. Passing fee of the road between them is 0. Intersections on the path are 2\nand 4. Passing fee of the road between them is 32 (increased by 30 in the\nfirst event and by 2 in the second).\n\n",
        "cf_contest_id": 696,
        "cf_index": "A",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "implementation",
            "trees"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n1 3 4 30\r\n1 4 1 2\r\n1 3 6 8\r\n2 4 3\r\n1 6 1 40\r\n2 3 7\r\n2 2 4\r\n",
                "94\r\n0\r\n32\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2 666077344481199252 881371880336470888\r\n",
                "0\r\n"
            ],
            [
                "10\r\n1 1 63669439577744021 396980128\r\n1 2582240553355225 63669439577744021 997926286\r\n1 2582240553355225 1 619026011\r\n1 1 4 231881718\r\n2 63669439577744021 3886074192977\r\n2 4 63669439577744021\r\n2 124354374175272 10328962213420903\r\n1 10328962213420903 3886074192977 188186816\r\n1 124354374175272 31088593543820 705639304\r\n2 2582240553355225 254677758310976084\r\n",
                "19528689796\r\n80417520800\r\n140119493557\r\n179078288337\r\n"
            ],
            [
                "10\r\n1 1 399719082491 159376944\r\n1 186 1 699740230\r\n2 410731850987390 1\r\n1 410731850987390 399719082491 699271234\r\n1 1 186 255736462\r\n1 1 186 544477714\r\n1 399719082491 410731850987390 366708275\r\n2 1 186\r\n2 410731850987390 1\r\n2 399719082491 186\r\n",
                "6013820218\r\n11615319450\r\n55320479319\r\n37986050043\r\n"
            ],
            [
                "10\r\n2 37526406560905229 37526426361107171\r\n2 37526424114740747 18763396439955441\r\n2 300485276957081578 301492476099962199\r\n1 75035386466351570 441803674395985082 642312512\r\n2 300197522144700185 220954108245114486\r\n1 150105696341181576 559187296 100113944\r\n1 300197522135707767 150242638470761995 170574370\r\n2 150105691058036871 220954108245108400\r\n2 37560659619635168 150070774425697078\r\n2 18780329809814344 300222324900057526\r\n",
                "0\r\n0\r\n0\r\n13488562752\r\n14270974176\r\n13899046930\r\n5418394872\r\n"
            ],
            [
                "1\r\n2 1 343417335313797025\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 562949953421312 562949953421311 1\r\n2 562949953421312 562949953421311\r\n",
                "97\r\n"
            ],
            [
                "2\r\n1 100 50 1\r\n2 4294967396 1\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 4294967298 4294967299 10\r\n2 2 3\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 500000000000 250000000000 1\r\n2 1783793664 891896832\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 100000000000000 200000000000000 1\r\n2 276447232 552894464\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 2147540141 4295080282 1\r\n2 1 112986\r\n",
                "0\r\n"
            ],
            [
                "2\r\n1 239841676148963 1 20\r\n2 2112405731 1\r\n",
                "20\r\n"
            ]
        ]
    }
]