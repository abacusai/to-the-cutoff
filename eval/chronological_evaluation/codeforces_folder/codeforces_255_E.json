[
    {
        "name": "Furlo and Rublo and Game",
        "description": "Furlo and Rublo play a game. The table has n piles of coins lying on it, the\ni-th pile has ai coins. Furlo and Rublo move in turns, Furlo moves first. In\none move you are allowed to: choose some pile, let's denote the current number\nof coins in it as x; choose some integer y (0 \u2264 y < x; x^1/4 \u2264 y \u2264 x^1/2) and\ndecrease the number of coins in this pile to y. In other words, after the\ndescribed move the pile will have y coins left. The player who can't make a\nmove, loses. Your task is to find out, who wins in the given game if both\nFurlo and Rublo play optimally well. Input The first line contains integer n\n(1 \u2264 n \u2264 77777) \u2014 the number of piles. The next line contains n integers a1,\na2, ..., an (1 \u2264 ai \u2264 777777777777) \u2014 the sizes of piles. The numbers are\nseparated by single spaces. Please, do not use the \nwrite 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or\nthe \nwins, print \"Furlo\", otherwise print \"Rublo\". Print the answers without the\nquotes. Examples Input 1 1 Output Rublo Input 2 1 2 Output Rublo Input 10 1 2\n3 4 5 6 7 8 9 10 Output Furlo\n\n",
        "cf_contest_id": 255,
        "cf_index": "E",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "games",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "1\r\n1\r\n",
                "Rublo\r\n"
            ],
            [
                "2\r\n1 2\r\n",
                "Rublo\r\n"
            ],
            [
                "10\r\n1 2 3 4 5 6 7 8 9 10\r\n",
                "Furlo\r\n"
            ]
        ],
        "private_cases": [
            [
                "4\r\n2 3 9 10\r\n",
                "Rublo\r\n"
            ],
            [
                "3\r\n2 3 10\r\n",
                "Furlo\r\n"
            ],
            [
                "3\r\n10 100 10000\r\n",
                "Furlo\r\n"
            ],
            [
                "5\r\n1000000000 100000000 10000000 1000000 100000\r\n",
                "Furlo\r\n"
            ],
            [
                "3\r\n10 10000 100000000000\r\n",
                "Rublo\r\n"
            ],
            [
                "2\r\n100 777777777777\r\n",
                "Furlo\r\n"
            ],
            [
                "2\r\n2500000000 3000000000\r\n",
                "Furlo\r\n"
            ],
            [
                "3\r\n2500000000 3000000000 1000\r\n",
                "Furlo\r\n"
            ],
            [
                "2\r\n50626 300000\r\n",
                "Rublo\r\n"
            ],
            [
                "2\r\n2562991876 16\r\n",
                "Rublo\r\n"
            ]
        ]
    }
]