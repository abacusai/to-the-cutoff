[
    {
        "name": "Ruler Of The Zoo",
        "description": "After realizing that Zookeeper is just a duck, the animals have overthrown\nZookeeper. They now have to decide a new ruler among themselves through a\nfighting tournament of the following format: Initially, animal \n    0\n is\nking, while everyone else queues up with animal \n    1\n at the front of the\nqueue and animal \n    n-1\n at the back. The animal at the front of the queue\nwill challenge the king to a fight, and the animal with greater strength will\nwin the fight. The winner will become king, while the loser joins the back of\nthe queue. An animal who wins \n    3\n times consecutively will be crowned\nruler for the whole zoo. The strength of each animal depends on how many\nconsecutive fights he won. Animal \n    i\n has strength \n    A_i\n with \n    0\n\nconsecutive win, \n    B_i\n with \n    1\n consecutive win, and \n    C_i\n with\n\n    2\n consecutive wins. Initially, everyone has \n    0\n consecutive win. For\nall animals, \n    A_i > B_i\n and \n    C_i > B_i\n. Also, the values of\n\n    A_i\n, \n    B_i\n, \n    C_i\n are distinct (all \n    3n\n values are pairwise\ndifferent). In other words, an animal who is not a king has strength\n\n    A_i\n. A king usually has a strength of \n    B_i\n or \n    C_i\n. The\nexception is on the first turn, the first king (animal \n    0\n) has strength\n\n    A_i\n. Who is the new ruler, and after how many fights? Or will it end up\nthat animals fight forever with no one ending up as ruler? Input The first\nline contains one integer \n    n\n (\n    4 \n    \u2264 n \n    \u2264 6000\n) \u2014 number of\nthe animals. \n    i\n-th of the next \n    n\n lines contains \n    3\n integers\n\n    A_i\n, \n    B_i\n and \n    C_i\n (\n    0 \n    \u2264 A_i, B_i, C_i \n    \u2264 10^9\n).\nIt is guaranteed that \n    A_i > B_i\n and \n    C_i > B_i\n, and that all values\nof \n    A_i\n, \n    B_i\n and \n    C_i\n are distinct. Output Output two integers\nin a single line. The first is the index of the animal that will become ruler,\nand the second is the number of fights passed until some animal becomes the\nruler. If the animals will fight for infinitely long, output -1 -1 instead.\nExamples Input 4 5 1 2 10 8 11 9 0 3 7 4 6 Output -1 -1 Input 5 11 7 12 8 6 14\n2 1 10 13 0 9 5 3 4 Output 1 7 Note The following describes the sequence of\nevents for the second sample. Note that in fight \n    1\n, the king (animal\n\n    0\n) has strength \n    A_0\n. The tournament ends at fight \n    7\n as\nanimal \n    1\n wins fight \n    5\n, \n    6\n and \n    7\n.\n\n",
        "cf_contest_id": 1491,
        "cf_index": "I",
        "cf_rating": 3500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n5 1 2\r\n10 8 11\r\n9 0 3\r\n7 4 6\r\n",
                "-1 -1\r\n"
            ],
            [
                "5\r\n11 7 12\r\n8 6 14\r\n2 1 10\r\n13 0 9\r\n5 3 4\r\n",
                "1 7\r\n"
            ]
        ],
        "private_cases": [
            [
                "19\r\n55 25 26\r\n54 36 53\r\n2 0 1\r\n40 35 44\r\n6 3 56\r\n52 34 48\r\n9 4 5\r\n51 33 42\r\n12 7 8\r\n38 32 41\r\n15 10 11\r\n49 31 45\r\n18 13 22\r\n43 30 39\r\n21 16 17\r\n47 29 50\r\n24 19 20\r\n46 28 37\r\n27 14 23\r\n",
                "7 9\r\n"
            ],
            [
                "39\r\n115 55 68\r\n114 1 111\r\n56 13 76\r\n113 75 94\r\n6 3 116\r\n112 74 104\r\n9 4 5\r\n95 73 92\r\n12 7 22\r\n110 72 97\r\n15 10 11\r\n109 47 90\r\n18 8 25\r\n108 70 89\r\n21 16 17\r\n91 69 71\r\n24 19 30\r\n106 2 82\r\n28 0 64\r\n105 67 86\r\n20 14 26\r\n93 66 85\r\n33 27 29\r\n103 83 84\r\n36 31 32\r\n102 23 65\r\n39 34 35\r\n101 63 87\r\n42 37 38\r\n100 62 81\r\n45 40 41\r\n99 61 80\r\n48 43 44\r\n98 60 79\r\n51 46 88\r\n107 59 78\r\n54 49 50\r\n96 58 77\r\n57 52 53\r\n",
                "5 7\r\n"
            ],
            [
                "7\r\n8 2 19\r\n16 6 15\r\n7 0 1\r\n17 11 14\r\n12 3 20\r\n18 10 13\r\n9 4 5\r\n",
                "5 7\r\n"
            ],
            [
                "5\r\n11 0 10\r\n14 12 13\r\n6 2 3\r\n9 7 8\r\n5 1 4\r\n",
                "1 3\r\n"
            ],
            [
                "5\r\n3 2 8\r\n13 5 12\r\n4 0 10\r\n14 1 7\r\n9 6 11\r\n",
                "4 6\r\n"
            ],
            [
                "10\r\n25 24 26\r\n10 0 2\r\n14 3 29\r\n27 1 11\r\n7 5 8\r\n28 13 18\r\n22 6 21\r\n9 4 17\r\n19 12 23\r\n16 15 20\r\n",
                "9 11\r\n"
            ],
            [
                "10\r\n28 18 20\r\n3 1 4\r\n10 5 24\r\n27 8 11\r\n7 2 12\r\n16 13 14\r\n9 0 29\r\n19 6 26\r\n17 15 21\r\n23 22 25\r\n",
                "9 11\r\n"
            ],
            [
                "6\r\n14 2 5\r\n17 6 10\r\n9 0 3\r\n11 1 8\r\n12 4 16\r\n13 7 15\r\n",
                "-1 -1\r\n"
            ],
            [
                "20\r\n49 7 29\r\n58 5 42\r\n46 19 23\r\n26 16 36\r\n8 0 24\r\n37 13 39\r\n53 14 20\r\n30 2 52\r\n51 18 27\r\n59 34 55\r\n4 3 57\r\n45 22 31\r\n47 6 50\r\n56 41 48\r\n32 11 15\r\n17 10 43\r\n44 38 40\r\n54 21 25\r\n33 12 28\r\n35 1 9\r\n",
                "9 11\r\n"
            ],
            [
                "5\r\n13 4 5\r\n12 8 10\r\n2 0 1\r\n11 7 9\r\n6 3 14\r\n",
                "4 15\r\n"
            ],
            [
                "8\r\n8 1 4\r\n21 7 10\r\n6 3 23\r\n17 9 12\r\n19 0 14\r\n15 5 11\r\n20 2 16\r\n22 13 18\r\n",
                "7 9\r\n"
            ],
            [
                "8\r\n21 12 20\r\n8 2 13\r\n9 3 4\r\n22 6 7\r\n17 16 19\r\n18 0 1\r\n15 5 14\r\n23 10 11\r\n",
                "7 9\r\n"
            ],
            [
                "20\r\n34 28 45\r\n54 23 25\r\n14 12 56\r\n48 9 55\r\n42 17 46\r\n33 5 22\r\n53 16 26\r\n36 6 10\r\n21 4 52\r\n15 11 30\r\n35 20 59\r\n51 18 57\r\n29 13 43\r\n19 1 58\r\n7 3 41\r\n40 0 49\r\n38 8 24\r\n27 2 32\r\n39 31 47\r\n50 37 44\r\n",
                "19 21\r\n"
            ],
            [
                "8\r\n13 5 12\r\n22 4 15\r\n2 1 6\r\n21 9 10\r\n8 3 16\r\n11 0 20\r\n14 7 19\r\n23 17 18\r\n",
                "7 9\r\n"
            ],
            [
                "20\r\n9 0 10\r\n53 17 57\r\n11 7 40\r\n59 1 43\r\n45 6 58\r\n49 27 32\r\n42 4 28\r\n56 23 46\r\n31 14 50\r\n34 30 54\r\n35 22 51\r\n26 16 44\r\n29 13 47\r\n19 3 55\r\n15 5 21\r\n37 25 52\r\n41 12 39\r\n48 2 8\r\n38 18 20\r\n36 24 33\r\n",
                "19 21\r\n"
            ],
            [
                "8\r\n23 5 6\r\n8 0 13\r\n3 1 2\r\n11 7 21\r\n9 4 16\r\n20 10 15\r\n22 14 17\r\n19 12 18\r\n",
                "7 9\r\n"
            ],
            [
                "20\r\n2 1 31\r\n43 15 23\r\n12 0 19\r\n27 7 38\r\n58 8 11\r\n40 9 37\r\n53 17 46\r\n35 34 59\r\n48 28 52\r\n39 14 21\r\n41 20 55\r\n56 4 6\r\n49 32 42\r\n47 22 45\r\n36 13 16\r\n33 5 29\r\n57 10 18\r\n51 24 44\r\n26 3 54\r\n50 25 30\r\n",
                "19 21\r\n"
            ]
        ]
    }
]