[
    {
        "name": "Binary String Reconstruction",
        "description": "Consider the following process. You have a binary string (a string where each\ncharacter is either 0 or 1) \n    w\n of length \n    n\n and an integer \n    x\n.\nYou build a new binary string \n    s\n consisting of \n    n\n characters. The\n\n    i\n-th character of \n    s\n is chosen as follows: if the character\n\n    w_i-x\n exists and is equal to 1, then \n    s_i\n is 1 (formally, if \n    i\n    > x\n and \n    w_i-x =\n 1, then \n    s_i =\n 1); if the character\n\n    w_i+x\n exists and is equal to 1, then \n    s_i\n is 1 (formally, if \n    i\n    + x \n    \u2264 n\n and \n    w_i+x =\n 1, then \n    s_i =\n 1); if both of the\naforementioned conditions are false, then \n    s_i\n is 0. You are given the\ninteger \n    x\n and the resulting string \n    s\n. Reconstruct the original\nstring \n    w\n. Input The first line contains one integer \n    t\n (\n    1 \n    \u2264\n    t \n    \u2264 1000\n) \u2014 the number of test cases. Each test case consists of two\nlines. The first line contains the resulting string \n    s\n (\n    2 \n    \u2264 |s|\n    \n    \u2264 10^5\n, each character of \n    s\n is either 0 or 1). The second line\ncontains one integer \n    x\n (\n    1 \n    \u2264 x \n    \u2264 |s| - 1\n). The total length\nof all strings \n    s\n in the input does not exceed \n    10^5\n. Output For\neach test case, print the answer on a separate line as follows: if no string\n\n    w\n can produce the string \n    s\n at the end of the process, print\n\n    -1\n; otherwise, print the binary string \n    w\n consisting of \n    |s|\n\ncharacters. If there are multiple answers, print any of them. Example Input 3\n101110 2 01 1 110 1 Output 111011 10 -1\n\n",
        "cf_contest_id": 1400,
        "cf_index": "C",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "2-sat",
            "brute force",
            "constructive algorithms",
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n101110\r\n2\r\n01\r\n1\r\n110\r\n1\r\n",
                "111011\r\n10\r\n-1\r\n"
            ]
        ],
        "private_cases": []
    }
]