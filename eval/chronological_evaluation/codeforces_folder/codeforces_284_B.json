[
    {
        "name": "Cows and Poker Game",
        "description": "There are n cows playing poker at a table. For the current betting phase, each\nplayer's status is either \"ALLIN\", \"IN\", or \"FOLDED\", and does not change\nthroughout the phase. To increase the suspense, a player whose current status\nis not \"FOLDED\" may show his/her hand to the table. However, so as not to\naffect any betting decisions, he/she may only do so if all other players have\na status of either \"ALLIN\" or \"FOLDED\". The player's own status may be either\n\"ALLIN\" or \"IN\". Find the number of cows that can currently show their hands\nwithout affecting any betting decisions. Input The first line contains a\nsingle integer, n (2 \u2264 n \u2264 2\u00b710^5). The second line contains n characters,\neach either \"A\", \"I\", or \"F\". The i-th character is \"A\" if the i-th player's\nstatus is \"ALLIN\", \"I\" if the i-th player's status is \"IN\", or \"F\" if the i-th\nplayer's status is \"FOLDED\". Output The first line should contain a single\ninteger denoting the number of players that can currently show their hands.\nExamples Input 6 AFFAAA Output 4 Input 3 AFI Output 1 Note In the first\nsample, cows 1, 4, 5, and 6 can show their hands. In the second sample, only\ncow 3 can show her hand.\n\n",
        "cf_contest_id": 284,
        "cf_index": "B",
        "cf_rating": 1000,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\nAFFAAA\r\n",
                "4\r\n"
            ],
            [
                "3\r\nAFI\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\nFFF\r\n",
                "0\r\n"
            ],
            [
                "3\r\nFIF\r\n",
                "1\r\n"
            ],
            [
                "3\r\nAAA\r\n",
                "3\r\n"
            ],
            [
                "3\r\nIII\r\n",
                "0\r\n"
            ],
            [
                "3\r\nIIA\r\n",
                "0\r\n"
            ],
            [
                "3\r\nAFF\r\n",
                "1\r\n"
            ],
            [
                "5\r\nFAFFF\r\n",
                "1\r\n"
            ],
            [
                "3\r\nIAA\r\n",
                "1\r\n"
            ],
            [
                "3\r\nIIF\r\n",
                "0\r\n"
            ],
            [
                "2\r\nFA\r\n",
                "1\r\n"
            ],
            [
                "2\r\nFF\r\n",
                "0\r\n"
            ],
            [
                "2\r\nIF\r\n",
                "1\r\n"
            ],
            [
                "5\r\nAAAAI\r\n",
                "1\r\n"
            ],
            [
                "5\r\nIIIIF\r\n",
                "0\r\n"
            ],
            [
                "10\r\nAAAAAAAAAA\r\n",
                "10\r\n"
            ],
            [
                "100\r\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\r\n",
                "100\r\n"
            ],
            [
                "5\r\nFAIAF\r\n",
                "1\r\n"
            ],
            [
                "5\r\nAIAIF\r\n",
                "0\r\n"
            ],
            [
                "5\r\nFAAII\r\n",
                "0\r\n"
            ],
            [
                "5\r\nAIFFF\r\n",
                "1\r\n"
            ],
            [
                "5\r\nAFAFA\r\n",
                "3\r\n"
            ],
            [
                "2\r\nFA\r\n",
                "1\r\n"
            ],
            [
                "8\r\nAFFFFIAF\r\n",
                "1\r\n"
            ],
            [
                "8\r\nIAAIFFFI\r\n",
                "0\r\n"
            ],
            [
                "5\r\nIIIII\r\n",
                "0\r\n"
            ]
        ]
    }
]