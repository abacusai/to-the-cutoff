[
    {
        "name": "Nim Shortcuts",
        "description": "After your debut mobile game \"Nim\" blew up, you decided to make a sequel\ncalled \"Nim 2\". This game will expand on the trusted Nim game formula, adding\nthe much awaited second heap! In the game, there are two heaps, each\ncontaining a non-negative number of stones. Two players make moves in turn. On\ntheir turn, a player can take any positive number of stones from either one of\nthe heaps. A player who is unable to move loses the game. To make the game\neasier to playtest, you've introduced developer shortcuts. There are \n    n\n\nshortcut positions \n    (x_1, y_1), \n    \u2026, (x_n, y_n)\n. These change the\ngame as follows: suppose that before a player's turn the first and second heap\ncontain \n    x\n and \n    y\n stones respectively. If the pair \n    (x, y)\n is\nequal to one of the pairs \n    (x_i, y_i)\n, then the player about to move\nloses instantly, otherwise they are able to make moves as normal. Note that in\nthe above explanation the two heaps and all pairs are ordered, that is,\n\n    x\n must refer to the size of the first heap, and \n    y\n must refer to\nthe size of the second heap. The game release was followed by too much\ncelebration, and next thing you know is developer shortcuts made their way to\nthe next official update of the game! Players now complain that the AI\nopponent has become unbeatable at certain stages of the game. You now have to\nwrite a program to figure out which of the given initial positions can be won\nby the starting player, assuming both players act optimally. Input The first\nline contains two integers \n    n\n and \n    m\n (\n    1 \n    \u2264 n, m \n    \u2264\n    10^5\n) \u2014 the number of shortcut positions, and the number of initial\npositions that need to be evaluated. The following \n    n\n lines describe\nshortcut positions. The \n    i\n-th of these lines contains two integers\n\n    x_i, y_i\n (\n    0 \n    \u2264 x_i, y_i \n    \u2264 10^9\n). It is guaranteed that\nall shortcut positions are distinct. The following \n    m\n lines describe\ninitial positions. The \n    i\n-th of these lines contains two integers \n    a_i,\n    b_i\n (\n    0 \n    \u2264 a_i, b_i \n    \u2264 10^9\n) \u2014 the number of stones in the\nfirst and second heap respectively. It is guaranteed that all initial\npositions are distinct. However, initial positions are not necessarily\ndistinct from shortcut positions. Output For each initial position, on a\nseparate line print \"WIN\" if the starting player is able to win from this\nposition, and \"LOSE\" otherwise. Example Input 3 5 3 0 0 1 2 2 0 0 1 1 2 2 3 3\n5 4 Output LOSE WIN LOSE WIN LOSE\n\n",
        "cf_contest_id": 1458,
        "cf_index": "E",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "games"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 5\r\n3 0\r\n0 1\r\n2 2\r\n0 0\r\n1 1\r\n2 2\r\n3 3\r\n5 4\r\n",
                "LOSE\r\nWIN\r\nLOSE\r\nWIN\r\nLOSE\r\n"
            ]
        ],
        "private_cases": []
    }
]