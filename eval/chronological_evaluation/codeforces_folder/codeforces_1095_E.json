[
    {
        "name": "Almost Regular Bracket Sequence",
        "description": "You are given a bracket sequence \n    s\n consisting of \n    n\n opening '(' and\nclosing ')' brackets. A regular bracket sequence is a bracket sequence that\ncan be transformed into a correct arithmetic expression by inserting\ncharacters '1' and '+' between the original characters of the sequence. For\nexample, bracket sequences \"()()\", \"(())\" are regular (the resulting\nexpressions are: \"(1)+(1)\", \"((1+1)+1)\"), and \")(\" and \"(\" are not. You can\nchange the type of some bracket \n    s_i\n. It means that if \n    s_i =\n ')'\nthen you can change it to '(' and vice versa. Your task is to calculate the\nnumber of positions \n    i\n such that if you change the type of the \n    i\n-th\nbracket, then the resulting bracket sequence becomes regular. Input The first\nline of the input contains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^6\n) \u2014\nthe length of the bracket sequence. The second line of the input contains the\nstring \n    s\n consisting of \n    n\n opening '(' and closing ')' brackets.\nOutput Print one integer \u2014 the number of positions \n    i\n such that if you\nchange the type of the \n    i\n-th bracket, then the resulting bracket sequence\nbecomes regular. Examples Input 6 (((()) Output 3 Input 6 ()()() Output 0\nInput 1 ) Output 0 Input 8 )))((((( Output 0\n\n",
        "cf_contest_id": 1095,
        "cf_index": "E",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n(((())\r\n",
                "3\r\n"
            ],
            [
                "6\r\n()()()\r\n",
                "0\r\n"
            ],
            [
                "1\r\n)\r\n",
                "0\r\n"
            ],
            [
                "8\r\n)))(((((\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n))()))((()\r\n",
                "0\r\n"
            ],
            [
                "2\r\n((\r\n",
                "1\r\n"
            ],
            [
                "2\r\n))\r\n",
                "1\r\n"
            ],
            [
                "4\r\n())(\r\n",
                "0\r\n"
            ],
            [
                "4\r\n))))\r\n",
                "0\r\n"
            ],
            [
                "6\r\n))((((\r\n",
                "0\r\n"
            ],
            [
                "12\r\n()()))())()(\r\n",
                "0\r\n"
            ],
            [
                "9\r\n(((()((()\r\n",
                "0\r\n"
            ],
            [
                "10\r\n)())((()((\r\n",
                "0\r\n"
            ],
            [
                "17\r\n))((()(((()()))()\r\n",
                "0\r\n"
            ],
            [
                "8\r\n())(((()\r\n",
                "0\r\n"
            ],
            [
                "8\r\n())()(((\r\n",
                "0\r\n"
            ],
            [
                "4\r\n)(((\r\n",
                "0\r\n"
            ],
            [
                "10\r\n)(()()(()(\r\n",
                "0\r\n"
            ],
            [
                "16\r\n((())()((()()(()\r\n",
                "0\r\n"
            ],
            [
                "20\r\n(())(()((((()())()((\r\n",
                "0\r\n"
            ],
            [
                "10\r\n(()(())(((\r\n",
                "0\r\n"
            ],
            [
                "19\r\n)(()()()()))(()))))\r\n",
                "0\r\n"
            ],
            [
                "6\r\n)(()((\r\n",
                "0\r\n"
            ],
            [
                "3\r\n))(\r\n",
                "0\r\n"
            ],
            [
                "4\r\n))((\r\n",
                "0\r\n"
            ],
            [
                "6\r\n())(((\r\n",
                "0\r\n"
            ],
            [
                "6\r\n()))))\r\n",
                "0\r\n"
            ],
            [
                "3\r\n)))\r\n",
                "0\r\n"
            ],
            [
                "12\r\n)())(())((((\r\n",
                "0\r\n"
            ],
            [
                "2\r\n)(\r\n",
                "0\r\n"
            ],
            [
                "6\r\n)(((()\r\n",
                "0\r\n"
            ],
            [
                "15\r\n(((((()(()(()()\r\n",
                "0\r\n"
            ],
            [
                "3\r\n(((\r\n",
                "0\r\n"
            ],
            [
                "4\r\n)))(\r\n",
                "0\r\n"
            ],
            [
                "10\r\n())))((())\r\n",
                "0\r\n"
            ]
        ]
    }
]