[
    {
        "name": "Image",
        "description": "You have an image file of size \n    2 \n    \u00d7 2\n, consisting of \n    4\n\npixels. Each pixel can have one of \n    26\n different colors, denoted by\nlowercase Latin letters. You want to recolor some of the pixels of the image\nso that all \n    4\n pixels have the same color. In one move, you can choose no\nmore than two pixels of the same color and paint them into some other color\n(if you choose two pixels, both should be painted into the same color). What\nis the minimum number of moves you have to make in order to fulfill your goal?\nInput The first line contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n)\n\u2014 the number of test cases. Each test case consists of two lines. Each of\nthese lines contains two lowercase letters of Latin alphabet without any\nseparators, denoting a row of pixels in the image. Output For each test case,\nprint one integer \u2014 the minimum number of moves you have to make so that all\n\n    4\n pixels of the image have the same color. Example Input 5 rb br cc wb\naa aa ab cd yy xx Output 1 2 0 3 1 Note Let's analyze the test cases of the\nexample. In the first test case, you can paint the bottom left pixel and the\ntop right pixel (which share the same color) into the color r, so all pixels\nhave this color. In the second test case, two moves are enough: paint both top\npixels, which have the same color c, into the color b; paint the bottom left\npixel into the color b. In the third test case, all pixels already have the\nsame color. In the fourth test case, you may leave any of the pixels\nunchanged, and paint all three other pixels into the color of that pixel in\nthree moves. In the fifth test case, you can paint both top pixels into the\ncolor x.\n\n",
        "cf_contest_id": 1721,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\nrb\r\nbr\r\ncc\r\nwb\r\naa\r\naa\r\nab\r\ncd\r\nyy\r\nxx\r\n",
                "1\r\n2\r\n0\r\n3\r\n1\r\n"
            ]
        ],
        "private_cases": []
    }
]