[
    {
        "name": "NIT Destroys the Universe",
        "description": "For a collection of integers \n    S\n, define \n    mex(S)\n as\nthe smallest non-negative integer that does not appear in \n    S\n. NIT, the\ncleaver, decides to destroy the universe. He is not so powerful as Thanos, so\nhe can only destroy the universe by snapping his fingers several times. The\nuniverse can be represented as a 1-indexed array \n    a\n of length \n    n\n.\nWhen NIT snaps his fingers, he does the following operation on the array: He\nselects positive integers \n    l\n and \n    r\n such that \n    1\n    \u2264 l\n    \u2264\n    r\n    \u2264 n\n. Let\n\n    w=\n    mex(\n    \n    a_l,a_l+1,\n    \u2026,a_r\n    \n    )\n. Then, for all\n\n    l\n    \u2264 i\n    \u2264 r\n, set \n    a_i\n to \n    w\n. We say the universe is\ndestroyed if and only if for all \n    1\n    \u2264 i\n    \u2264 n\n, \n    a_i=0\n holds.\nFind the minimum number of times NIT needs to snap his fingers to destroy the\nuniverse. That is, find the minimum number of operations NIT needs to perform\nto make all elements in the array equal to \n    0\n. Input Each test contains\nmultiple test cases. The first line contains the number of test cases \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 10^4\n). Description of the test cases follows. The first\nline of each test case contains one integer \n    n\n (\n    1\n    \u2264 n\n    \u2264\n    10^5\n). The second line of each test case contains \n    n\n integers\n\n    a_1\n, \n    a_2\n, \n    \u2026\n, \n    a_n\n (\n    0\n    \u2264 a_i\n    \u2264 10^9\n).\nIt is guaranteed that the sum of \n    n\n over all test cases does not exceed\n\n    2\n    \u00b7 10^5\n. Output For each test case, print one integer \u2014 the answer\nto the problem. Example Input 4 4 0 0 0 0 5 0 1 2 3 4 7 0 2 3 0 1 2 0 1\n1000000000 Output 0 1 2 1 Note In the first test case, we do \n    0\n\noperations and all elements in the array are already equal to \n    0\n. In the\nsecond test case, one optimal way is doing the operation with \n    l=2\n,\n\n    r=5\n. In the third test case, one optimal way is doing the operation\ntwice, respectively with \n    l=4\n, \n    r=4\n and \n    l=2\n, \n    r=6\n. In the\nfourth test case, one optimal way is doing the operation with \n    l=1\n,\n\n    r=1\n.\n\n",
        "cf_contest_id": 1696,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "greedy"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4\r\n4\r\n0 0 0 0\r\n5\r\n0 1 2 3 4\r\n7\r\n0 2 3 0 1 2 0\r\n1\r\n1000000000\r\n",
                "0\r\n1\r\n2\r\n1\r\n"
            ]
        ],
        "private_cases": []
    }
]