[
    {
        "name": "Kingdom Partition",
        "description": "The King is gone. After the King's rule, all the roads in the Kingdom are run\ndown and need repair. Three of the King's children, Adrian, Beatrice and\nCecilia, are dividing the Kingdom between themselves. Adrian and Beatrice do\nnot like each other and do not plan to maintain any relations between\nthemselves in the future. Cecilia is on good terms with both of them.\nMoreover, most of the Kingdom's workers support Cecilia, so she has better\nresources and more opportunity to repair the infrastructure and develop the\neconomy. Cecilia proposes to partition the Kingdom into three districts: A\n(for Adrian), B (for Beatrice), and C (for Cecilia), and let Adrian and\nBeatrice to negotiate and choose any towns they want to be in their districts,\nand agree on how they want to partition the Kingdom into three districts.\nAdrian's castle is located in town \n    a\n, and Beatrice's one is located in\ntown \n    b\n. So Adrian and Beatrice want their castles to be located in\ndistricts A and B, respectively. Cecilia doesn't have a castle, so district C\ncan consist of no towns. There is an issue for Adrian and Beatrice. When they\nchoose the towns, they will have to pay for the roads' repair. The cost to\nrepair the road of length \n    l\n is \n    2l\n gold. However, Adrian and\nBeatrice don't have to bear all the repair costs. The repair cost for the road\nof length \n    l\n that they bear depends on what towns it connects: For a road\nbetween two towns inside district A, Adrian has to pay \n    2l\n gold; For a\nroad between two towns inside district B, Beatrice has to pay \n    2l\n gold;\nFor a road between towns from district A and district C, Adrian has to pay\n\n    l\n gold, Cecilia bears the remaining cost; For a road between towns from\ndistrict B and district C, Beatrice has to pay \n    l\n gold, Cecilia bears the\nremaining cost. The roads that connect towns from district A and district B\nwon't be repaired, since Adrian and Beatrice are not planning to use them, so\nno one pays for them. Cecilia herself will repair the roads that connect the\ntowns inside district C, so Adrian and Beatrice won't bear the cost of their\nrepair either. Adrian and Beatrice want to minimize the total cost they spend\non roads' repair. Find the cheapest way for them to partition the Kingdom into\nthree districts. Input The first line contains two integers \n    n\n and\n\n    m\n \u2014 the number of towns and the number of roads in the Kingdom (\n    2\n    \n    \u2264 n \n    \u2264 1000\n; \n    0 \n    \u2264 m \n    \u2264 2000\n). The second line contains\ntwo integers that represent town \n    a\n and town \n    b\n \u2014 the towns that\nhave to be located in district A and district B, respectively (\n    1 \n    \u2264 a, b\n    \n    \u2264 n\n; \n    a \n     b\n). The following \n    m\n lines describe the Kingdom\nroads. The \n    i\n-th of them consists of three integers \n    u_i\n, \n    v_i\n,\nand \n    l_i\n representing a road of length \n    l_i\n between towns \n    u_i\n\nand \n    v_i\n (\n    1 \n    \u2264 u_i, v_i \n    \u2264 n\n; \n    u_i \n     v_i\n; \n    1 \n    \u2264\n    l_i \n    \u2264 10^9\n). Each pair of towns is connected with at most one road.\nOutput In the first line output a single integer \u2014 the minimum total cost of\nroads' repair for Adrian and Beatrice. In the second line output a string\nconsisting of \n    n\n characters 'A', 'B', and 'C', \n    i\n-th of the\ncharacters representing the district that the \n    i\n-th town should belong\nto. If several cheapest ways to partition the Kingdom exist, print any of\nthem. Example Input 6 7 1 3 1 2 10 2 3 5 1 3 7 4 5 3 3 6 100 4 6 3 5 6 8\nOutput 16 ABBCBA Note The following picture illustrates the example. Adrian\nand Beatrice don't pay for the dashed roads, they pay \n    2l\n for the bold\nroads, and \n    l\n for the solid roads. So the total cost is \n    2 \n    \u00b7 5 +\n    3 + 3 = 16\n. The castles of Adrian and Beatrice are located in bold towns.\n\n",
        "cf_contest_id": 1666,
        "cf_index": "K",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "flows"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "6 7\r\n1 3\r\n1 2 10\r\n2 3 5\r\n1 3 7\r\n4 5 3\r\n3 6 100\r\n4 6 3\r\n5 6 8\r\n",
                "16\r\nABBCBA"
            ]
        ],
        "private_cases": [
            [
                "3 2\r\n3 2\r\n1 2 3\r\n3 1 2\r\n",
                "4\r\nABA"
            ],
            [
                "3 3\r\n1 2\r\n2 3 17\r\n2 1 8\r\n3 1 16\r\n",
                "32\r\nABA"
            ],
            [
                "4 6\r\n1 4\r\n4 3 14\r\n4 1 1\r\n1 3 5\r\n2 1 8\r\n4 2 2\r\n3 2 17\r\n",
                "14\r\nABAB"
            ],
            [
                "5 10\r\n4 2\r\n5 1 1\r\n2 3 18\r\n5 4 11\r\n2 1 9\r\n4 2 7\r\n4 1 20\r\n4 3 11\r\n5 2 11\r\n3 1 10\r\n3 5 3\r\n",
                "64\r\nBBAAB"
            ],
            [
                "6 10\r\n2 6\r\n5 1 16\r\n4 5 20\r\n1 3 1\r\n3 5 10\r\n4 2 19\r\n4 3 20\r\n5 2 13\r\n6 3 9\r\n4 1 17\r\n1 2 20\r\n",
                "61\r\nCACCCB"
            ],
            [
                "7 10\r\n3 2\r\n1 2 16\r\n6 7 15\r\n6 1 17\r\n6 2 14\r\n2 7 10\r\n2 4 14\r\n1 3 19\r\n3 2 8\r\n7 5 7\r\n4 6 4\r\n",
                "60\r\nBBAAAAB"
            ],
            [
                "8 10\r\n2 1\r\n4 5 3\r\n4 2 1\r\n6 2 2\r\n1 5 16\r\n1 8 16\r\n4 8 19\r\n3 2 11\r\n4 3 14\r\n7 8 17\r\n3 8 12\r\n",
                "28\r\nBABBABBA"
            ],
            [
                "9 10\r\n7 9\r\n3 8 18\r\n7 8 7\r\n8 1 20\r\n3 1 9\r\n3 9 20\r\n5 8 10\r\n6 1 10\r\n9 6 5\r\n4 8 10\r\n1 9 7\r\n",
                "28\r\nACAAABABB"
            ],
            [
                "10 10\r\n7 5\r\n4 5 15\r\n4 7 4\r\n1 5 6\r\n7 9 5\r\n8 4 1\r\n4 2 10\r\n3 10 14\r\n6 5 7\r\n6 2 11\r\n1 10 19\r\n",
                "8\r\nABAABAABBB"
            ],
            [
                "11 10\r\n1 8\r\n9 2 18\r\n4 5 15\r\n2 8 14\r\n11 3 4\r\n8 9 20\r\n2 6 13\r\n6 4 2\r\n4 3 3\r\n7 3 17\r\n1 11 10\r\n",
                "28\r\nABABAABBACB"
            ],
            [
                "10 16\r\n5 6\r\n7 6 28\r\n5 9 27\r\n5 1 23\r\n5 10 15\r\n1 6 21\r\n5 8 20\r\n3 6 25\r\n4 6 30\r\n8 6 29\r\n5 4 15\r\n5 2 29\r\n2 6 23\r\n5 3 29\r\n10 6 27\r\n9 6 17\r\n5 7 18\r\n",
                "308\r\nBBBAABAABA"
            ],
            [
                "40 48\r\n7 12\r\n7 26 88\r\n21 12 60\r\n7 5 57\r\n16 12 99\r\n22 12 91\r\n7 16 90\r\n7 3 53\r\n7 35 83\r\n7 15 57\r\n23 12 97\r\n31 12 57\r\n25 12 54\r\n7 8 88\r\n27 12 54\r\n7 21 94\r\n39 12 85\r\n7 25 82\r\n1 12 96\r\n7 17 76\r\n10 12 78\r\n38 12 84\r\n7 30 67\r\n7 31 79\r\n7 4 80\r\n7 33 65\r\n3 12 63\r\n37 12 77\r\n7 28 99\r\n7 36 64\r\n4 12 59\r\n17 12 92\r\n7 20 64\r\n40 12 57\r\n7 34 82\r\n7 29 82\r\n7 10 76\r\n29 12 87\r\n9 12 63\r\n7 24 97\r\n15 12 71\r\n7 32 54\r\n13 12 83\r\n7 9 83\r\n28 12 63\r\n7 37 94\r\n7 6 75\r\n20 12 52\r\n14 12 71\r\n",
                "1838\r\nACABBBABBACBAAAAACCBBAABBBABABBBBBBBBAAA"
            ],
            [
                "2 0\r\n1 2\r\n",
                "0\r\nAB"
            ],
            [
                "2 1\r\n1 2\r\n2 1 4987\r\n",
                "0\r\nAB"
            ],
            [
                "3 3\r\n3 2\r\n1 2 85\r\n3 2 35\r\n1 3 163\r\n",
                "170\r\nBBA"
            ],
            [
                "4 4\r\n4 3\r\n2 1 53\r\n4 3 163\r\n1 3 187\r\n1 4 145\r\n",
                "290\r\nABBA"
            ],
            [
                "5 8\r\n3 5\r\n1 2 199\r\n2 4 15\r\n4 1 19\r\n2 3 44\r\n3 5 71\r\n4 5 13\r\n5 2 23\r\n4 3 36\r\n",
                "102\r\nABABB"
            ],
            [
                "6 10\r\n2 6\r\n3 2 192\r\n6 4 160\r\n4 5 140\r\n3 1 45\r\n2 4 142\r\n1 4 42\r\n6 2 42\r\n1 5 42\r\n6 3 187\r\n6 1 30\r\n",
                "711\r\nCACCCB"
            ],
            [
                "7 10\r\n3 1\r\n7 5 58\r\n6 3 70\r\n1 2 144\r\n6 5 55\r\n4 1 154\r\n4 3 148\r\n7 6 54\r\n5 4 122\r\n3 5 39\r\n2 4 172\r\n",
                "494\r\nBAABABB"
            ],
            [
                "8 10\r\n6 7\r\n1 5 21\r\n3 2 188\r\n2 1 51\r\n1 7 161\r\n6 4 10\r\n3 5 164\r\n1 6 120\r\n2 5 35\r\n3 7 68\r\n4 7 51\r\n",
                "330\r\nABAABABC"
            ],
            [
                "9 10\r\n9 1\r\n7 2 88\r\n3 8 195\r\n5 2 46\r\n5 8 74\r\n6 5 7\r\n9 2 188\r\n8 7 43\r\n6 8 180\r\n6 7 130\r\n6 1 63\r\n",
                "197\r\nBBCCCCCCA"
            ],
            [
                "10 10\r\n8 6\r\n6 2 123\r\n5 7 26\r\n1 6 112\r\n10 6 131\r\n2 8 188\r\n7 8 61\r\n6 9 6\r\n8 3 62\r\n9 3 192\r\n10 3 94\r\n",
                "246\r\nABBCABBAAA"
            ],
            [
                "11 10\r\n3 4\r\n4 10 103\r\n10 6 81\r\n11 1 74\r\n11 2 66\r\n3 7 57\r\n3 10 101\r\n8 3 129\r\n6 1 156\r\n2 9 42\r\n5 6 29\r\n",
                "202\r\nAAABABBBBAB"
            ],
            [
                "3 2\r\n1 2\r\n2 1 20\r\n1 3 13\r\n",
                "0\r\nABB"
            ],
            [
                "4 5\r\n1 2\r\n1 4 12\r\n3 4 8\r\n4 2 9\r\n1 3 19\r\n1 2 12\r\n",
                "24\r\nABBA"
            ],
            [
                "5 9\r\n5 3\r\n1 3 9\r\n5 4 11\r\n2 5 12\r\n4 1 20\r\n1 5 2\r\n4 3 16\r\n3 2 4\r\n4 2 14\r\n2 1 18\r\n",
                "54\r\nCCBCA"
            ],
            [
                "6 13\r\n3 5\r\n4 6 11\r\n6 5 19\r\n1 3 7\r\n1 6 13\r\n3 6 14\r\n4 1 3\r\n5 4 4\r\n2 6 13\r\n5 1 5\r\n2 1 13\r\n3 5 1\r\n4 2 8\r\n3 4 13\r\n",
                "62\r\nCCACBC"
            ],
            [
                "7 20\r\n6 3\r\n7 3 12\r\n1 6 20\r\n7 6 20\r\n4 7 11\r\n1 5 4\r\n5 7 16\r\n5 4 3\r\n6 4 20\r\n2 7 7\r\n1 3 14\r\n4 1 7\r\n6 3 13\r\n6 2 18\r\n3 2 7\r\n1 7 4\r\n3 5 20\r\n2 1 3\r\n5 2 14\r\n5 6 17\r\n4 2 1\r\n",
                "148\r\nCCBCCAC"
            ],
            [
                "8 20\r\n4 5\r\n8 7 9\r\n2 4 1\r\n2 5 15\r\n5 7 17\r\n2 7 8\r\n6 3 16\r\n4 6 4\r\n8 6 4\r\n5 1 18\r\n6 7 19\r\n4 3 4\r\n2 3 20\r\n8 4 19\r\n3 1 2\r\n2 1 20\r\n3 8 1\r\n7 4 2\r\n3 5 8\r\n5 8 17\r\n6 1 14\r\n",
                "88\r\nABAABBAB"
            ],
            [
                "9 20\r\n9 5\r\n6 9 11\r\n6 4 8\r\n3 8 20\r\n6 5 18\r\n7 2 9\r\n8 2 13\r\n2 6 9\r\n9 2 8\r\n2 3 7\r\n8 5 10\r\n3 1 11\r\n4 2 5\r\n6 3 18\r\n2 1 10\r\n8 1 1\r\n4 9 19\r\n9 8 18\r\n9 7 17\r\n9 5 3\r\n3 4 14\r\n",
                "93\r\nCCCCBCBCA"
            ],
            [
                "10 20\r\n2 3\r\n4 10 8\r\n5 2 9\r\n1 6 10\r\n2 4 2\r\n4 7 13\r\n9 2 10\r\n8 4 6\r\n8 9 5\r\n2 1 18\r\n1 4 18\r\n9 6 14\r\n9 10 3\r\n2 8 12\r\n10 7 19\r\n1 9 10\r\n1 8 16\r\n7 9 14\r\n5 7 6\r\n9 3 6\r\n10 8 15\r\n",
                "54\r\nCABCBCCCCC"
            ],
            [
                "11 20\r\n8 4\r\n11 5 15\r\n4 2 7\r\n2 11 1\r\n11 3 17\r\n8 2 10\r\n2 10 11\r\n6 8 20\r\n5 2 11\r\n7 5 15\r\n9 3 12\r\n7 1 20\r\n4 5 8\r\n7 4 9\r\n7 8 2\r\n3 10 5\r\n6 2 17\r\n1 11 18\r\n2 7 6\r\n3 5 6\r\n11 9 6\r\n",
                "53\r\nCCCBCBCACCC"
            ]
        ]
    }
]