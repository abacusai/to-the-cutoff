[
    {
        "name": "Airport",
        "description": "Lolek and Bolek are about to travel abroad by plane. The local airport has a\nspecial \"Choose Your Plane\" offer. The offer's conditions are as follows: it\nis up to a passenger to choose a plane to fly on; if the chosen plane has x (x\n> 0) empty seats at the given moment, then the ticket for such a plane costs x\nzlotys (units of Polish currency). The only ticket office of the airport\nalready has a queue of n passengers in front of it. Lolek and Bolek have not\nstood in the queue yet, but they are already wondering what is the maximum and\nthe minimum number of zlotys the airport administration can earn if all n\npassengers buy tickets according to the conditions of this offer? The\npassengers buy tickets in turn, the first person in the queue goes first, then\ngoes the second one, and so on up to n-th person. Input The first line\ncontains two integers n and m (1 \u2264 n, m \u2264 1000) \u2014 the number of passengers in\nthe queue and the number of planes in the airport, correspondingly. The next\nline contains m integers a1, a2, ..., am (1 \u2264 ai \u2264 1000) \u2014 ai stands for the\nnumber of empty seats in the i-th plane before the ticket office starts\nselling tickets. The numbers in the lines are separated by a space. It is\nguaranteed that there are at least n empty seats in total. Output Print two\nintegers \u2014 the maximum and the minimum number of zlotys that the airport\nadministration can earn, correspondingly. Examples Input 4 3 2 1 1 Output 5 5\nInput 4 3 2 2 2 Output 7 6 Note In the first test sample the number of\npassengers is equal to the number of empty seats, so regardless of the way the\nplanes are chosen, the administration will earn the same sum. In the second\nsample the sum is maximized if the 1-st person in the queue buys a ticket to\nthe 1-st plane, the 2-nd person \u2014 to the 2-nd plane, the 3-rd person \u2014 to the\n3-rd plane, the 4-th person \u2014 to the 1-st plane. The sum is minimized if the\n1-st person in the queue buys a ticket to the 1-st plane, the 2-nd person \u2014 to\nthe 1-st plane, the 3-rd person \u2014 to the 2-nd plane, the 4-th person \u2014 to the\n2-nd plane.\n\n",
        "cf_contest_id": 218,
        "cf_index": "B",
        "cf_rating": 1100,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 3\r\n2 1 1\r\n",
                "5 5"
            ],
            [
                "4 3\r\n2 2 2\r\n",
                "7 6"
            ]
        ],
        "private_cases": [
            [
                "10 5\r\n10 3 3 1 2\r\n",
                "58 26"
            ],
            [
                "10 1\r\n10\r\n",
                "55 55"
            ],
            [
                "10 1\r\n100\r\n",
                "955 955"
            ],
            [
                "10 2\r\n4 7\r\n",
                "37 37"
            ],
            [
                "40 10\r\n1 2 3 4 5 6 7 10 10 10\r\n",
                "223 158"
            ],
            [
                "1 1\r\n6\r\n",
                "6 6"
            ],
            [
                "1 2\r\n10 9\r\n",
                "10 9"
            ],
            [
                "2 1\r\n7\r\n",
                "13 13"
            ],
            [
                "2 2\r\n7 2\r\n",
                "13 3"
            ],
            [
                "3 2\r\n4 7\r\n",
                "18 9"
            ],
            [
                "3 3\r\n2 1 1\r\n",
                "4 4"
            ],
            [
                "3 3\r\n2 1 1\r\n",
                "4 4"
            ],
            [
                "10 10\r\n3 1 2 2 1 1 2 1 2 3\r\n",
                "20 13"
            ],
            [
                "10 2\r\n7 3\r\n",
                "34 34"
            ],
            [
                "10 1\r\n19\r\n",
                "145 145"
            ],
            [
                "100 3\r\n29 36 35\r\n",
                "1731 1731"
            ],
            [
                "100 5\r\n3 38 36 35 2\r\n",
                "2019 1941"
            ],
            [
                "510 132\r\n50 76 77 69 94 30 47 65 14 62 18 121 26 35 49 17 105 93 47 16 78 3 7 74 7 37 30 36 30 83 71 113 7 58 86 10 65 57 34 102 55 44 43 47 106 44 115 75 109 70 47 45 16 57 62 55 20 88 74 40 45 84 41 1 9 53 65 25 67 31 115 2 63 51 123 70 65 65 18 14 75 14 103 26 117 105 36 104 81 37 35 61 44 90 71 70 88 89 26 21 64 77 89 16 87 99 13 79 27 3 46 120 116 11 14 17 32 70 113 94 108 57 29 100 53 48 44 29 70 30 32 62\r\n",
                "50279 5479"
            ],
            [
                "510 123\r\n5 2 3 2 5 7 2 3 1 3 6 6 3 1 5 3 5 6 2 2 1 5 5 5 2 2 3 1 6 3 5 8 4 6 1 5 4 5 1 6 5 5 3 6 4 1 6 1 3 5 2 7 5 2 4 4 5 6 5 5 4 3 4 6 5 4 4 3 5 8 5 5 6 3 1 7 4 4 3 3 5 3 6 3 3 6 2 5 3 2 4 5 4 5 2 2 4 4 4 7 3 4 6 5 3 6 4 7 1 6 5 7 6 5 7 3 7 4 4 1 6 6 4\r\n",
                "1501 1501"
            ],
            [
                "610 33\r\n15 44 8 8 17 11 39 39 38 25 17 36 17 25 21 37 10 11 34 30 29 50 29 50 4 20 32 13 41 14 2 11 2\r\n",
                "12204 8871"
            ]
        ]
    }
]