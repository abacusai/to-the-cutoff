[
    {
        "name": "Sonya and Bitwise OR",
        "description": "Sonya has an array \n    a_1, a_2, \n    \u2026, a_n\n consisting of \n    n\n\nintegers and also one non-negative integer \n    x\n. She has to perform \n    m\n\nqueries of two types: \n    1\n \n    i\n \n    y\n: replace \n    i\n-th element by\nvalue \n    y\n, i.e. to perform an operation \n    a_i\n := \n    y\n; \n    2\n\n\n    l\n \n    r\n: find the number of pairs (\n    L\n, \n    R\n) that \n    l\n    \u2264\n    L\n    \u2264 R\n    \u2264 r\n and bitwise OR of all integers in the range \n    [L, R]\n\nis at least \n    x\n (note that \n    x\n is a constant for all queries). Can you\nhelp Sonya perform all her queries? Bitwise OR is a binary operation on a pair\nof non-negative integers. To calculate the bitwise OR of two numbers, you need\nto write both numbers in binary notation. The result is a number, in binary,\nwhich contains a one in each digit if there is a one in the binary notation of\nat least one of the two numbers. For example, \n    10\n OR \n    19\n =\n\n    1010_2\n OR \n    10011_2\n = \n    11011_2\n = \n    27\n. Input The first line\ncontains three integers \n    n\n, \n    m\n, and \n    x\n (\n    1\n    \u2264 n, m\n    \u2264\n    10^5\n, \n    0\n    \u2264 x<2^20\n) \u2014 the number of numbers, the number of\nqueries, and the constant for all queries. The second line contains \n    n\n\nintegers \n    a_1, a_2, \n    \u2026, a_n\n (\n    0\n    \u2264 a_i<2^20\n) \u2014 numbers of\nthe array. The following \n    m\n lines each describe an query. A line has one\nof the following formats: \n    1\n \n    i\n \n    y\n (\n    1\n    \u2264 i\n    \u2264 n\n,\n\n    0\n    \u2264 y<2^20\n), meaning that you have to replace \n    a_i\n by\n\n    y\n; \n    2\n \n    l\n \n    r\n (\n    1\n    \u2264 l\n    \u2264 r\n    \u2264 n\n), meaning\nthat you have to find the number of subarrays on the segment from \n    l\n to\n\n    r\n that the bitwise OR of all numbers there is at least \n    x\n. Output\nFor each query of type 2, print the number of subarrays such that the bitwise\nOR of all the numbers in the range is at least \n    x\n. Examples Input 4 8 7 0\n3 6 1 2 1 4 2 3 4 1 1 7 2 1 4 2 1 3 2 1 1 1 3 0 2 1 4 Output 5 1 7 4 1 4 Input\n5 5 7 6 0 3 15 2 2 1 5 1 4 4 2 1 5 2 3 5 2 1 4 Output 9 7 2 4 Note In the\nfirst example, there are an array [\n    0\n, \n    3\n, \n    6\n, \n    1\n] and\nqueries: on the segment [\n    1\n    \u20264\n], you can choose pairs (\n    1\n,\n\n    3\n), (\n    1\n, \n    4\n), (\n    2\n, \n    3\n), (\n    2\n, \n    4\n), and\n(\n    3\n, \n    4\n); on the segment [\n    3\n    \u20264\n], you can choose pair\n(\n    3\n, \n    4\n); the first number is being replacing by \n    7\n, after this\noperation, the array will consist of [\n    7\n, \n    3\n, \n    6\n, \n    1\n]; on\nthe segment [\n    1\n    \u20264\n], you can choose pairs (\n    1\n, \n    1\n),\n(\n    1\n, \n    2\n), (\n    1\n, \n    3\n), (\n    1\n, \n    4\n), (\n    2\n,\n\n    3\n), (\n    2\n, \n    4\n), and (\n    3\n, \n    4\n); on the segment\n[\n    1\n    \u20263\n], you can choose pairs (\n    1\n, \n    1\n), (\n    1\n,\n\n    2\n), (\n    1\n, \n    3\n), and (\n    2\n, \n    3\n); on the segment\n[\n    1\n    \u20261\n], you can choose pair (\n    1\n, \n    1\n); the third number\nis being replacing by \n    0\n, after this operation, the array will consist of\n[\n    7\n, \n    3\n, \n    0\n, \n    1\n]; on the segment [\n    1\n    \u20264\n], you\ncan choose pairs (\n    1\n, \n    1\n), (\n    1\n, \n    2\n), (\n    1\n, \n    3\n),\nand (\n    1\n, \n    4\n). In the second example, there are an array [\n    6\n,\n\n    0\n, \n    3\n, \n    15\n, \n    2\n] are queries: on the segment\n[\n    1\n    \u20265\n], you can choose pairs (\n    1\n, \n    3\n), (\n    1\n,\n\n    4\n), (\n    1\n, \n    5\n), (\n    2\n, \n    4\n), (\n    2\n, \n    5\n),\n(\n    3\n, \n    4\n), (\n    3\n, \n    5\n), (\n    4\n, \n    4\n), and (\n    4\n,\n\n    5\n); the fourth number is being replacing by \n    4\n, after this\noperation, the array will consist of [\n    6\n, \n    0\n, \n    3\n, \n    4\n,\n\n    2\n]; on the segment [\n    1\n    \u20265\n], you can choose pairs (\n    1\n,\n\n    3\n), (\n    1\n, \n    4\n), (\n    1\n, \n    5\n), (\n    2\n, \n    4\n),\n(\n    2\n, \n    5\n), (\n    3\n, \n    4\n), and (\n    3\n, \n    5\n); on the segment\n[\n    3\n    \u20265\n], you can choose pairs (\n    3\n, \n    4\n) and (\n    3\n,\n\n    5\n); on the segment [\n    1\n    \u20264\n], you can choose pairs (\n    1\n,\n\n    3\n), (\n    1\n, \n    4\n), (\n    2\n, \n    4\n), and (\n    3\n, \n    4\n).\n\n",
        "cf_contest_id": 1004,
        "cf_index": "F",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "data structures",
            "divide and conquer"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "4 8 7\r\n0 3 6 1\r\n2 1 4\r\n2 3 4\r\n1 1 7\r\n2 1 4\r\n2 1 3\r\n2 1 1\r\n1 3 0\r\n2 1 4\r\n",
                "5\r\n1\r\n7\r\n4\r\n1\r\n4\r\n"
            ],
            [
                "5 5 7\r\n6 0 3 15 2\r\n2 1 5\r\n1 4 4\r\n2 1 5\r\n2 3 5\r\n2 1 4\r\n",
                "9\r\n7\r\n2\r\n4\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1 0\r\n1\r\n2 1 1\r\n",
                "1\r\n"
            ],
            [
                "1 4 1048575\r\n1048575\r\n1 1 0\r\n1 1 1048575\r\n1 1 0\r\n2 1 1\r\n",
                "0\r\n"
            ],
            [
                "10 10 240\r\n14 42 115 6 216 76 11 139 222 192\r\n2 3 3\r\n1 10 204\r\n1 10 170\r\n1 6 14\r\n1 2 33\r\n1 4 229\r\n2 1 7\r\n2 2 6\r\n2 1 5\r\n2 4 5\r\n",
                "0\r\n15\r\n8\r\n7\r\n1\r\n"
            ]
        ]
    }
]