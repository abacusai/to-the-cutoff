[
    {
        "name": "Removing Graph",
        "description": "Alice and Bob are playing a game on a graph. They have an undirected graph\nwithout self-loops and multiple edges. All vertices of the graph have degree\nequal to \n    2\n. The graph may consist of several components. Note that if\nsuch graph has \n    n\n vertices, it will have exactly \n    n\n edges. Alice and\nBob take turn. Alice goes first. In each turn, the player can choose \n    k\n\n(\n    l \n    \u2264 k \n    \u2264 r\n; \n    l < r\n) vertices that form a connected subgraph\nand erase these vertices from the graph, including all incident edges. The\nplayer who can't make a step loses. For example, suppose they are playing on\nthe given graph with given \n    l = 2\n and \n    r = 3\n: A valid vertex set for\nAlice to choose at the first move is one of the following: \n    1,\n    2\n \n    1, 3\n \n    2, 3\n \n    4, 5\n\n\n    4, 6\n \n    5, 6\n \n    1, 2, 3\n \n    4,\n    5, 6\n Suppose, Alice chooses subgraph \n    4, 6\n.Then a valid\nvertex set for Bob to choose at the first move is one of the following:\n\n    1, 2\n \n    1, 3\n \n    2, 3\n \n    1, 2,\n    3\n Suppose, Bob chooses subgraph \n    1, 2, 3\n.Alice can't\nmake a move, so she loses. You are given a graph of size \n    n\n and integers\n\n    l\n and \n    r\n. Who will win if both Alice and Bob play optimally. Input\nThe first line contains three integers \n    n\n, \n    l\n and \n    r\n (\n    3\n    \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n; \n    1 \n    \u2264 l < r \n    \u2264 n\n) \u2014 the number of\nvertices in the graph, and the constraints on the number of vertices Alice or\nBob can choose in one move. Next \n    n\n lines contains edges of the graph:\none edge per line. The \n    i\n-th line contains two integers \n    u_i\n and\n\n    v_i\n (\n    1 \n    \u2264 u_i, v_i \n    \u2264 n\n; \n    u_i \n    \u2260 v_i\n) \u2014 description\nof the \n    i\n-th edge. It's guaranteed that the degree of each vertex of the\ngiven graph is equal to \n    2\n. Output Print Alice (case-insensitive) if\nAlice wins, or Bob otherwise. Examples Input 6 2 3 1 2 2 3 3 1 4 5 5 6 6 4\nOutput Bob Input 6 1 2 1 2 2 3 3 1 4 5 5 6 6 4 Output Bob Input 12 1 3 1 2 2 3\n3 1 4 5 5 6 6 7 7 4 8 9 9 10 10 11 11 12 12 8 Output Alice Note In the first\ntest the same input as in legend is shown. In the second test the same graph\nas in legend is shown, but with \n    l = 1\n and \n    r = 2\n.\n\n",
        "cf_contest_id": 1823,
        "cf_index": "E",
        "cf_rating": 2500,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "games",
            "graphs",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6 2 3\r\n1 2\r\n2 3\r\n3 1\r\n4 5\r\n5 6\r\n6 4\r\n",
                "Bob\r\n"
            ],
            [
                "6 1 2\r\n1 2\r\n2 3\r\n3 1\r\n4 5\r\n5 6\r\n6 4\r\n",
                "Bob\r\n"
            ],
            [
                "12 1 3\r\n1 2\r\n2 3\r\n3 1\r\n4 5\r\n5 6\r\n6 7\r\n7 4\r\n8 9\r\n9 10\r\n10 11\r\n11 12\r\n12 8\r\n",
                "Alice\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 1 3\r\n3 2\r\n4 2\r\n4 1\r\n1 3\r\n",
                "Bob\r\n"
            ],
            [
                "4 2 3\r\n2 4\r\n3 2\r\n3 1\r\n1 4\r\n",
                "Alice\r\n"
            ],
            [
                "69 12 42\r\n15 61\r\n18 61\r\n18 14\r\n30 14\r\n30 9\r\n9 55\r\n1 55\r\n1 7\r\n40 7\r\n40 35\r\n4 35\r\n10 4\r\n64 10\r\n15 64\r\n25 24\r\n25 68\r\n68 17\r\n17 45\r\n45 44\r\n44 5\r\n39 5\r\n39 52\r\n52 50\r\n50 66\r\n21 66\r\n51 21\r\n51 54\r\n54 16\r\n16 41\r\n58 41\r\n31 58\r\n31 2\r\n67 2\r\n42 67\r\n65 42\r\n46 65\r\n46 48\r\n48 37\r\n37 8\r\n23 8\r\n23 6\r\n6 56\r\n56 11\r\n49 11\r\n49 36\r\n36 20\r\n20 27\r\n27 33\r\n19 33\r\n19 62\r\n12 62\r\n47 12\r\n22 47\r\n29 22\r\n13 29\r\n63 13\r\n63 53\r\n53 69\r\n69 34\r\n34 59\r\n59 57\r\n57 26\r\n60 26\r\n60 3\r\n43 3\r\n32 43\r\n32 28\r\n38 28\r\n24 38\r\n",
                "Alice\r\n"
            ],
            [
                "3 1 2\r\n2 1\r\n3 1\r\n2 3\r\n",
                "Bob\r\n"
            ],
            [
                "3 1 3\r\n2 1\r\n1 3\r\n2 3\r\n",
                "Alice\r\n"
            ],
            [
                "3 2 3\r\n2 1\r\n3 1\r\n3 2\r\n",
                "Alice\r\n"
            ]
        ]
    }
]