[
    {
        "name": "Word Folding",
        "description": "You will receive 5 points for solving this problem. Manao has invented a new\noperation on strings that is called folding. Each fold happens between a pair\nof consecutive letters and places the second part of the string above first\npart, running in the opposite direction and aligned to the position of the\nfold. Using this operation, Manao converts the string into a structure that\nhas one more level than there were fold operations performed. See the\nfollowing examples for clarity. We will denote the positions of folds with '|'\ncharacters. For example, the word \"ABRACADABRA\" written as \"AB|RACA|DAB|RA\"\nindicates that it has been folded three times: first, between the leftmost\npair of 'B' and 'R' letters; second, between 'A' and 'D'; and third, between\nthe rightmost pair of 'B' and 'R' letters. Here are several examples of folded\nstrings: \"ABCDEF|GHIJK\" | \"A|BCDEFGHIJK\" | \"AB|RACA|DAB|RA\" |\n\"X|XXXXX|X|X|XXXXXX\" | | | XXXXXX KJIHG | KJIHGFEDCB | AR | X ABCDEF | A | DAB\n| X | | ACAR | XXXXX | | AB | X One last example for \"ABCD|EFGH|IJ|K\": K IJ\nHGFE ABCD Manao noticed that each folded string can be viewed as several piles\nof letters. For instance, in the previous example, there are four piles, which\ncan be read as \"AHI\", \"BGJK\", \"CF\", and \"DE\" from bottom to top. Manao wonders\nwhat is the highest pile of identical letters he can build using fold\noperations on a given word. Note that the pile should not contain gaps and\nshould start at the bottom level. For example, in the rightmost of the four\nexamples above, none of the piles would be considered valid since each of them\nhas gaps, starts above the bottom level, or both. Input The input will consist\nof one line containing a single string of n characters with 1 \u2264 n \u2264 1000 and\nno spaces. All characters of the string will be uppercase letters. This\nproblem doesn't have subproblems. You will get 5 points for the correct\nsubmission. Output Print a single integer \u2014 the size of the largest pile\ncomposed of identical characters that can be seen in a valid result of folding\noperations on the given string. Examples Input ABRACADABRA Output 3 Input\nABBBCBDB Output 3 Input AB Output 1 Note Consider the first example. Manao can\ncreate a pile of three 'A's using the folding \"AB|RACAD|ABRA\", which results\nin the following structure: ABRA DACAR AB In the second example, Manao can\ncreate a pile of three 'B's using the following folding: \"AB|BB|CBDB\". CBDB BB\nAB Another way for Manao to create a pile of three 'B's with \"ABBBCBDB\" is the\nfollowing folding: \"AB|B|BCBDB\". BCBDB B AB In the third example, there are no\nfolds performed and the string is just written in one line.\n\n",
        "cf_contest_id": 391,
        "cf_index": "B",
        "cf_rating": 0,
        "difficulty": 0,
        "cf_tags": [
            "brute force"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "ABRACADABRA\r\n",
                "3\r\n"
            ],
            [
                "ABBBCBDB\r\n",
                "3\r\n"
            ],
            [
                "AB\r\n",
                "1\r\n"
            ]
        ],
        "private_cases": [
            [
                "ABBCDEFB\r\n",
                "3\r\n"
            ],
            [
                "THISISATEST\r\n",
                "3\r\n"
            ],
            [
                "Z\r\n",
                "1\r\n"
            ],
            [
                "ZZ\r\n",
                "2\r\n"
            ],
            [
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n",
                "1\r\n"
            ],
            [
                "ABACBCABACACB\r\n",
                "4\r\n"
            ],
            [
                "LEHLLLLLLHAFGEGLLHAFDLHHLLLLLDGGEHGGHLLLLLLLLDFLCBLLEFLLCBLLCGLEDLGGLECLDGLEHLLLGELLLEGLLLLGDLLLDALD\r\n",
                "49\r\n"
            ],
            [
                "THISISTHELASTTEST\r\n",
                "3\r\n"
            ]
        ]
    }
]