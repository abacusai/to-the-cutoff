[
    {
        "name": "Robots protection",
        "description": "Company \"Robots industries\" produces robots for territory protection. Robots\nprotect triangle territories \u2014 right isosceles triangles with catheti parallel\nto North-South and East-West directions. Owner of some land buys and sets\nrobots on his territory to protect it. From time to time, businessmen want to\nbuild offices on that land and want to know how many robots will guard it. You\nare to handle these queries. Input The first line contains integer N \u2014 width\nand height of the land, and integer Q \u2014 number of queries to handle. Next Q\nlines contain queries you need to process. Two types of queries: 1 dir x y len\n\u2014 add a robot to protect a triangle. Depending on the value of dir, the values\nof x, y and len represent a different triangle: dir = 1: Triangle is defined\nby the points (x, y), (x + len, y), (x, y + len) dir = 2: Triangle is defined\nby the points (x, y), (x + len, y), (x, y - len) dir = 3: Triangle is defined\nby the points (x, y), (x - len, y), (x, y + len) dir = 4: Triangle is defined\nby the points (x, y), (x - len, y), (x, y - len) 2 x y \u2014 output how many\nrobots guard this point (robot guards a point if the point is inside or on the\nborder of its triangle) 1 \u2264 N \u2264 5000 1 \u2264 Q \u2264 10^5 1 \u2264 dir \u2264 4 All points of\ntriangles are within range [1, N] All numbers are positive integers Output For\neach second type query output how many robots guard this point. Each answer\nshould be in a separate line. Examples Input 17 10 1 1 3 2 4 1 3 10 3 7 1 2 6\n8 2 1 3 9 4 2 2 4 4 1 4 15 10 6 2 7 7 2 9 4 2 12 2 2 13 8 Output 2 2 2 0 1\n\n",
        "cf_contest_id": 575,
        "cf_index": "I",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "17 10\r\n1 1 3 2 4\r\n1 3 10 3 7\r\n1 2 6 8 2\r\n1 3 9 4 2\r\n2 4 4\r\n1 4 15 10 6\r\n2 7 7\r\n2 9 4\r\n2 12 2\r\n2 13 8\r\n",
                "2\r\n2\r\n2\r\n0\r\n1\r\n"
            ]
        ],
        "private_cases": []
    }
]