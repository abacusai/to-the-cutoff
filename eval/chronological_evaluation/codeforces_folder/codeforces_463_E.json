[
    {
        "name": "Caisa and Tree",
        "description": "Caisa is now at home and his son has a simple task for him. Given a rooted\ntree with n vertices, numbered from 1 to n (vertex 1 is the root). Each vertex\nof the tree has a value. You should answer q queries. Each query is one of the\nfollowing: Format of the query is \"1 v\". Let's write out the sequence of\nvertices along the path from the root to vertex v: u1, u2, ..., uk (u1 = 1; uk\n= v). You need to output such a vertex ui that gcd(value of ui, value of v) >\n1 and i < k. If there are several possible vertices ui pick the one with\nmaximum value of i. If there is no such vertex output -1. Format of the query\nis \"2 v w\". You must change the value of vertex v to w. You are given all the\nqueries, help Caisa to solve the problem. Input The first line contains two\nspace-separated integers n, q (1 \u2264 n, q \u2264 10^5). The second line contains n\nintegers a1, a2, ..., an (1 \u2264 ai \u2264 2\u00b710^6), where ai represent the value of\nnode i. Each of the next n - 1 lines contains two integers xi and yi (1 \u2264 xi,\nyi \u2264 n; xi \u2260 yi), denoting the edge of the tree between vertices xi and yi.\nEach of the next q lines contains a query in the format that is given above.\nFor each query the following inequalities hold: 1 \u2264 v \u2264 n and 1 \u2264 w \u2264 2\u00b710^6.\nNote that: there are no more than 50 queries that changes the value of a\nvertex. Output For each query of the first type output the result of the\nquery. Examples Input 4 6 10 8 4 3 1 2 2 3 3 4 1 1 1 2 1 3 1 4 2 1 9 1 4\nOutput -1 1 2 -1 1 Note gcd(x, y) is greatest common divisor of two integers x\nand y.\n\n",
        "cf_contest_id": 463,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dfs and similar",
            "math",
            "number theory",
            "trees"
        ],
        "time_limit_seconds": 10.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4 6\r\n10 8 4 3\r\n1 2\r\n2 3\r\n3 4\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n2 1 9\r\n1 4\r\n",
                "-1\r\n1\r\n2\r\n-1\r\n1\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 46\r\n1826622 227609 1815373 691816\r\n4 1\r\n3 1\r\n1 2\r\n1 2\r\n1 3\r\n2 3 1226461\r\n1 2\r\n2 2 329857\r\n1 4\r\n1 2\r\n1 2\r\n1 3\r\n1 3\r\n1 1\r\n1 4\r\n1 1\r\n1 3\r\n1 3\r\n1 2\r\n1 4\r\n1 4\r\n1 3\r\n1 2\r\n1 2\r\n2 3 1069926\r\n2 3 411551\r\n1 2\r\n2 2 1089706\r\n1 1\r\n1 4\r\n1 2\r\n1 2\r\n2 3 1787276\r\n2 2 698073\r\n1 4\r\n1 3\r\n1 3\r\n1 1\r\n1 3\r\n1 4\r\n1 4\r\n1 3\r\n1 4\r\n1 1\r\n1 2\r\n1 2\r\n1 3\r\n2 3 327698\r\n1 3\r\n",
                "-1\r\n1\r\n-1\r\n1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n1\r\n-1\r\n-1\r\n-1\r\n-1\r\n1\r\n1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n-1\r\n1\r\n1\r\n1\r\n1\r\n1\r\n-1\r\n1\r\n1\r\n1\r\n1\r\n"
            ]
        ]
    }
]