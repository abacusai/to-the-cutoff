[
    {
        "name": "New Year and Ancient Prophecy",
        "description": "Limak is a little polar bear. In the snow he found a scroll with the ancient\nprophecy. Limak doesn't know any ancient languages and thus is unable to\nunderstand the prophecy. But he knows digits! One fragment of the prophecy is\na sequence of n digits. The first digit isn't zero. Limak thinks that it's a\nlist of some special years. It's hard to see any commas or spaces, so maybe\nancient people didn't use them. Now Limak wonders what years are listed there.\nLimak assumes three things: Years are listed in the strictly increasing order;\nEvery year is a positive integer number; There are no leading zeros. Limak is\ngoing to consider all possible ways to split a sequence into numbers (years),\nsatisfying the conditions above. He will do it without any help. However, he\nasked you to tell him the number of ways to do so. Since this number may be\nvery large, you are only asked to calculate it modulo 10^9 + 7. Input The\nfirst line of the input contains a single integer n (1 \u2264 n \u2264 5000) \u2014 the\nnumber of digits. The second line contains a string of digits and has length\nequal to n. It's guaranteed that the first digit is not '0'. Output Print the\nnumber of ways to correctly split the given sequence modulo 10^9 + 7. Examples\nInput 6 123434 Output 8 Input 8 20152016 Output 4 Note In the first sample\nthere are 8 ways to split the sequence: \"123434\" = \"123434\" (maybe the given\nsequence is just one big number) \"123434\" = \"1\" + \"23434\" \"123434\" = \"12\" +\n\"3434\" \"123434\" = \"123\" + \"434\" \"123434\" = \"1\" + \"23\" + \"434\" \"123434\" = \"1\" +\n\"2\" + \"3434\" \"123434\" = \"1\" + \"2\" + \"3\" + \"434\" \"123434\" = \"1\" + \"2\" + \"3\" +\n\"4\" + \"34\" Note that we don't count a split \"123434\" = \"12\" + \"34\" + \"34\"\nbecause numbers have to be strictly increasing. In the second sample there are\n4 ways: \"20152016\" = \"20152016\" \"20152016\" = \"20\" + \"152016\" \"20152016\" =\n\"201\" + \"52016\" \"20152016\" = \"2015\" + \"2016\"\n\n",
        "cf_contest_id": 611,
        "cf_index": "D",
        "cf_rating": 2000,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "hashing",
            "strings"
        ],
        "time_limit_seconds": 2.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "6\r\n123434\r\n",
                "8"
            ],
            [
                "8\r\n20152016\r\n",
                "4"
            ]
        ],
        "private_cases": [
            [
                "10\r\n5558403946\r\n",
                "11"
            ],
            [
                "20\r\n92630835862615307364\r\n",
                "91"
            ],
            [
                "30\r\n110110001101001110011000010100\r\n",
                "76"
            ],
            [
                "1\r\n1\r\n",
                "1"
            ],
            [
                "1\r\n8\r\n",
                "1"
            ],
            [
                "2\r\n55\r\n",
                "1"
            ],
            [
                "2\r\n68\r\n",
                "2"
            ],
            [
                "3\r\n567\r\n",
                "3"
            ],
            [
                "40\r\n1211122211121211111122121111221121112221\r\n",
                "3257"
            ],
            [
                "50\r\n11111111111111111111111111111111111111111111111111\r\n",
                "3658"
            ],
            [
                "100\r\n9898888999899988989898898898898888889889888988989988999888989899888888889899889989898989898988989999\r\n",
                "1225541"
            ],
            [
                "65\r\n25852165999999999999942386995999999999999999999999999999999999999\r\n",
                "90036"
            ]
        ]
    }
]