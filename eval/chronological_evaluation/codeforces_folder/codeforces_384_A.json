[
    {
        "name": "Coder",
        "description": "Iahub likes chess very much. He even invented a new chess piece named Coder. A\nCoder can move (and attack) one square horizontally or vertically. More\nprecisely, if the Coder is located at position (x, y), he can move to (or\nattack) positions (x + 1, y), (x\u20131, y), (x, y + 1) and (x, y\u20131). Iahub wants\nto know how many Coders can be placed on an n \u00d7 n chessboard, so that no Coder\nattacks any other Coder. Input The first line contains an integer n (1 \u2264 n \u2264\n1000). Output On the first line print an integer, the maximum number of Coders\nthat can be placed on the chessboard. On each of the next n lines print n\ncharacters, describing the configuration of the Coders. For an empty cell\nprint an '.', and for a Coder print a 'C'. If there are multiple correct\nanswers, you can print any. Examples Input 2 Output 2 C. .C\n\n",
        "cf_contest_id": 384,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n",
                "2\r\nC.\r\n.C\r\n"
            ]
        ],
        "private_cases": [
            [
                "3\r\n",
                "5\r\nC.C\r\n.C.\r\nC.C\r\n"
            ],
            [
                "4\r\n",
                "8\r\nC.C.\r\n.C.C\r\nC.C.\r\n.C.C\r\n"
            ],
            [
                "10\r\n",
                "50\r\nC.C.C.C.C.\r\n.C.C.C.C.C\r\nC.C.C.C.C.\r\n.C.C.C.C.C\r\nC.C.C.C.C.\r\n.C.C.C.C.C\r\nC.C.C.C.C.\r\n.C.C.C.C.C\r\nC.C.C.C.C.\r\n.C.C.C.C.C\r\n"
            ],
            [
                "15\r\n",
                "113\r\nC.C.C.C.C.C.C.C\r\n.C.C.C.C.C.C.C.\r\nC.C.C.C.C.C.C.C\r\n.C.C.C.C.C.C.C.\r\nC.C.C.C.C.C.C.C\r\n.C.C.C.C.C.C.C.\r\nC.C.C.C.C.C.C.C\r\n.C.C.C.C.C.C.C.\r\nC.C.C.C.C.C.C.C\r\n.C.C.C.C.C.C.C.\r\nC.C.C.C.C.C.C.C\r\n.C.C.C.C.C.C.C.\r\nC.C.C.C.C.C.C.C\r\n.C.C.C.C.C.C.C.\r\nC.C.C.C.C.C.C.C\r\n"
            ],
            [
                "1\r\n",
                "1\r\nC\r\n"
            ]
        ]
    }
]