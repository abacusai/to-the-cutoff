[
    {
        "name": "Road Repair in Treeland",
        "description": "There are \n    n\n cities and \n    n-1\n two-way roads in Treeland. Each road\nconnects a pair of different cities. From any city you can drive to any other,\nmoving only along the roads. Cities are numbered from \n    1\n to \n    n\n. Yes,\nof course, you recognized an undirected tree in this description. The\ngovernment plans to repair all the roads. Each road will be repaired by some\nprivate company. In total, the country has \n    10^6\n private companies that\nare numbered from \n    1\n to \n    10^6\n. It is possible that some companies\nwill not repair roads at all, and some will repair many roads. To simplify the\ncontrol over the work of private companies, the following restriction was\nintroduced: for each city, we calculate the number of different companies that\nrepair roads that have this city at one end. This number for each city should\nnot exceed \n    2\n. In other words, for each city, there should be no more\nthan two different companies that repair roads related to this city. The\nNational Anti-Corruption Committee of Treeland raises concerns that all (or\nalmost all) of the work will go to one private company. For this reason, the\ncommittee requires that roads be distributed among companies in such a way as\nto minimize the value of \n    r\n. For each company, we calculate the number of\nroads assigned to it, the maximum among all companies is called the number\n\n    r\n. Help the government find such a way to distribute all roads among\ncompanies in the required way. Input The first line contains an integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014 the number of input cases in the input.\nNext, the input cases themselves are given. The first line of each test case\nset contains an integer \n    n\n (\n    2 \n    \u2264 n \n    \u2264 3000\n) \u2014 the number of\ncities in Treeland. Next, in the \n    n-1\n lines the roads are written: a line\ncontains two integers \n    x_i\n, \n    y_i\n (\n    1 \n    \u2264 x_i, y_i \n    \u2264 n\n),\nindicating that the \n    i\n-th road connects the cities \n    x_i\n and\n\n    y_i\n. It is guaranteed that the sum of all values \n    n\n \u200b\u200bfor all test\ncases in the input does not exceed \n    3000\n. Output Print the answers for\nall \n    t\n test cases in the input. Each test case must begin with a line\nthat contains \n    r\n \u2014 the minimum possible number of roads assigned to the\nmost used company. Next, in the next line print \n    n-1\n the number \n    c_1,\n    c_2, \n    \u2026, c_n-1\n (\n    1 \n    \u2264 c_i \n    \u2264 10^6\n), where \n    c_i\n\nindicates the company to repair the \n    i\n-th road. If there are several\noptimal assignments, print any of them. Example Input 3 3 1 2 2 3 6 1 2 1 3 1\n4 1 5 1 6 7 3 1 1 4 4 6 5 1 2 4 1 7 Output 1 10 20 3 1 1 1 2 2 2 11 11 12 13\n12 13\n\n",
        "cf_contest_id": 1211,
        "cf_index": "H",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "binary search",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n1 2\r\n2 3\r\n6\r\n1 2\r\n1 3\r\n1 4\r\n1 5\r\n1 6\r\n7\r\n3 1\r\n1 4\r\n4 6\r\n5 1\r\n2 4\r\n1 7\r\n",
                "1\r\n2 1\r\n3\r\n1 1 1 2 2\r\n2\r\n2 2 1 3 1 3\r\n"
            ]
        ],
        "private_cases": []
    }
]