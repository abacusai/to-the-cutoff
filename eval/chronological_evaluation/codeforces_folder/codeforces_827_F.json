[
    {
        "name": "Dirty Arkady's Kitchen",
        "description": "Arkady likes to walk around his kitchen. His labyrinthine kitchen consists of\nseveral important places connected with passages. Unfortunately it happens\nthat these passages are flooded with milk so that it's impossible to pass\nthrough them. Namely, it's possible to pass through each passage in any\ndirection only during some time interval. The lengths of all passages are\nequal and Arkady makes through them in one second. For security reasons,\nArkady can never stop, also, he can't change direction while going through a\npassage. In other words, if he starts walking in some passage, he should reach\nits end and immediately leave the end. Today Arkady needs to quickly reach\nimportant place n from place 1. He plans to exit the place 1 at time moment 0\nand reach the place n as early as he can. Please find the minimum time he\nshould spend on his way. Input The first line contains two integers n and m (1\n\u2264 n \u2264 5\u00b710^5, 0 \u2264 m \u2264 5\u00b710^5) \u2014 the number of important places and the number\nof passages, respectively. After that, m lines follow, each of them describe\none passage. Each line contains four integers a, b, l and r (1 \u2264 a, b \u2264 n, a \u2260\nb, 0 \u2264 l < r \u2264 10^9) \u2014 the places the passage connects and the time segment\nduring which it's possible to use this passage. Output Print one integer \u2014\nminimum time Arkady should spend to reach the destination. If he can't reach\nthe place n, print -1. Examples Input 5 6 1 2 0 1 2 5 2 3 2 5 0 1 1 3 0 1 3 4\n1 2 4 5 2 3 Output 3 Input 2 1 1 2 1 100 Output -1 Note In the first example\nArkady should go through important places 1 \u2192 3 \u2192 4 \u2192 5. In the second example\nArkady can't start his walk because at time moment 0 it's impossible to use\nthe only passage.\n\n",
        "cf_contest_id": 827,
        "cf_index": "F",
        "cf_rating": 3200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "dp",
            "graphs",
            "shortest paths"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5 6\r\n1 2 0 1\r\n2 5 2 3\r\n2 5 0 1\r\n1 3 0 1\r\n3 4 1 2\r\n4 5 2 3\r\n",
                "3"
            ],
            [
                "2 1\r\n1 2 1 100\r\n",
                "-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 4\r\n2 3 6 8\r\n2 5 9 10\r\n4 3 2 6\r\n1 4 5 7\r\n",
                "-1\r\n"
            ],
            [
                "5 4\r\n2 3 0 7\r\n2 5 0 4\r\n4 3 0 10\r\n1 4 0 3\r\n",
                "4"
            ],
            [
                "1 0\r\n",
                "0\r\n"
            ],
            [
                "6 5\r\n3 4 0 11\r\n4 1 0 2\r\n3 2 9 24\r\n5 6 7 34\r\n2 5 9 10\r\n",
                "-1\r\n"
            ],
            [
                "6 5\r\n1 2 0 10\r\n1 5 8 9\r\n5 3 8 12\r\n5 4 12 16\r\n5 6 15 20\r\n",
                "-1\r\n"
            ],
            [
                "5 4\r\n2 3 5 11\r\n2 5 3 18\r\n4 3 7 14\r\n1 4 0 15\r\n",
                "10"
            ],
            [
                "20 19\r\n1 4 0 1579\r\n1 19 0 324\r\n1 15 0 1614\r\n8 1 0 1001\r\n1 18 0 1956\r\n7 1 0 1182\r\n1 3 0 849\r\n14 1 0 2136\r\n1 9 0 2255\r\n6 1 0 1282\r\n11 1 0 2082\r\n1 16 0 734\r\n12 1 0 500\r\n1 5 0 1684\r\n13 1 0 1230\r\n17 1 0 1650\r\n1 10 0 417\r\n20 1 0 1621\r\n1 2 0 274\r\n",
                "1"
            ],
            [
                "20 19\r\n15 13 134 1299\r\n11 6 967 1578\r\n4 9 127 711\r\n20 2 439 1655\r\n1 7 0 59\r\n8 9 301 471\r\n12 14 609 1044\r\n16 7 58 149\r\n6 5 557 1477\r\n16 10 46 72\r\n12 13 1040 1140\r\n5 15 275 1217\r\n19 18 21 92\r\n17 4 412 843\r\n3 17 682 999\r\n14 3 590 1037\r\n18 8 55 518\r\n10 19 35 61\r\n11 2 868 1297\r\n",
                "-1\r\n"
            ],
            [
                "6 5\r\n1 2 0 10\r\n2 5 7 8\r\n5 3 8 12\r\n5 4 12 16\r\n5 6 15 20\r\n",
                "17"
            ],
            [
                "5 10\r\n4 1 29 35\r\n1 2 18 24\r\n2 1 46 52\r\n1 4 0 6\r\n3 1 35 41\r\n1 2 41 47\r\n1 4 12 18\r\n1 5 52 58\r\n1 4 23 29\r\n2 1 6 12\r\n",
                "-1\r\n"
            ],
            [
                "5 10\r\n2 1 35 40\r\n1 3 10 15\r\n1 5 44 49\r\n2 1 0 5\r\n4 1 15 20\r\n1 4 5 10\r\n3 1 25 30\r\n1 4 30 35\r\n1 3 40 45\r\n1 4 20 25\r\n",
                "-1\r\n"
            ],
            [
                "5 10\r\n1 3 0 6\r\n4 1 11 17\r\n2 1 27 33\r\n1 4 21 27\r\n1 3 5 11\r\n2 1 38 44\r\n1 3 16 22\r\n1 3 33 39\r\n1 5 49 55\r\n1 3 44 50\r\n",
                "-1\r\n"
            ],
            [
                "5 10\r\n2 1 0 5\r\n1 4 21 26\r\n3 1 5 10\r\n1 2 30 35\r\n4 1 13 18\r\n1 2 25 30\r\n1 2 17 22\r\n4 1 35 40\r\n5 1 39 44\r\n4 1 9 14\r\n",
                "-1\r\n"
            ],
            [
                "5 10\r\n1 3 9 14\r\n1 4 24 29\r\n1 3 4 9\r\n1 4 14 19\r\n5 1 43 48\r\n1 2 0 5\r\n4 1 38 43\r\n1 3 34 39\r\n2 1 19 24\r\n2 1 29 34\r\n",
                "-1\r\n"
            ],
            [
                "5 20\r\n4 3 22 28\r\n2 1 38 44\r\n4 5 50 56\r\n1 4 41 46\r\n2 4 14 19\r\n4 2 27 32\r\n1 2 4 9\r\n3 4 11 17\r\n4 3 16 22\r\n4 3 1 6\r\n1 4 33 39\r\n3 1 31 36\r\n4 2 44 50\r\n1 2 0 6\r\n3 2 9 14\r\n2 4 17 22\r\n4 2 6 12\r\n4 3 27 33\r\n1 2 17 22\r\n1 3 14 19\r\n",
                "51"
            ],
            [
                "5 20\r\n1 2 44 49\r\n3 4 34 39\r\n3 4 3 8\r\n2 4 44 50\r\n2 1 0 6\r\n3 4 22 28\r\n3 1 15 20\r\n4 1 45 50\r\n1 2 38 44\r\n4 1 5 10\r\n2 4 6 12\r\n4 3 16 22\r\n5 4 50 56\r\n4 1 5 10\r\n2 4 1 6\r\n3 4 27 33\r\n4 3 11 17\r\n2 3 37 42\r\n4 1 33 39\r\n1 2 44 49\r\n",
                "51"
            ],
            [
                "5 20\r\n3 4 22 28\r\n2 4 6 12\r\n2 1 0 6\r\n2 4 32 37\r\n1 2 38 44\r\n2 4 21 26\r\n3 4 14 19\r\n4 3 12 17\r\n4 1 41 46\r\n3 4 27 33\r\n4 3 29 34\r\n3 1 0 5\r\n2 3 30 35\r\n4 2 44 50\r\n5 4 50 56\r\n4 3 11 17\r\n1 2 5 10\r\n3 4 16 21\r\n4 3 16 22\r\n1 4 33 39\r\n",
                "51"
            ]
        ]
    }
]