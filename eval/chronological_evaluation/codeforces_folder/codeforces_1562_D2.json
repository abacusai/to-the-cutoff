[
    {
        "name": "Two Hundred Twenty One (hard version)",
        "description": "This is the hard version of the problem. The difference between the versions\nis that the hard version does require you to output the numbers of the rods to\nbe removed. You can make hacks only if all versions of the problem are solved.\nStitch likes experimenting with different machines with his friend Sparky.\nToday they built another machine. The main element of this machine are \n    n\n\nrods arranged along one straight line and numbered from \n    1\n to \n    n\n\ninclusive. Each of these rods must carry an electric charge quantitatively\nequal to either \n    1\n or \n    -1\n (otherwise the machine will not work).\nAnother condition for this machine to work is that the sign-variable sum of\nthe charge on all rods must be zero. More formally, the rods can be\nrepresented as an array of \n    n\n numbers characterizing the charge: either\n\n    1\n or \n    -1\n. Then the condition must hold: \n    a_1 - a_2 + a_3 - a_4 +\n    \n    \u2026 = 0\n, or \n    \u2211\n    _i=1^n (-1)^i-1\n    \u00b7 a_i = 0\n.\nSparky charged all \n    n\n rods with an electric current, but unfortunately it\nhappened that the rods were not charged correctly (the sign-variable sum of\nthe charge is not zero). The friends decided to leave only some of the rods in\nthe machine. Sparky has \n    q\n questions. In the \n    i\nth question Sparky\nasks: if the machine consisted only of rods with numbers \n    l_i\n to\n\n    r_i\n inclusive, what minimal number of rods could be removed from the\nmachine so that the sign-variable sum of charges on the remaining ones would\nbe zero? Also Sparky wants to know the numbers of these rods. Perhaps the\nfriends got something wrong, and the sign-variable sum is already zero. In\nthat case, you don't have to remove the rods at all. If the number of rods is\nzero, we will assume that the sign-variable sum of charges is zero, that is,\nwe can always remove all rods. Help your friends and answer all of Sparky's\nquestions! Input Each test contains multiple test cases. The first line\ncontains one positive integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^3\n), denoting\nthe number of test cases. Description of the test cases follows. The first\nline of each test case contains two positive integers \n    n\n and \n    q\n\n(\n    1 \n    \u2264 n, q \n    \u2264 3 \n    \u00b7 10^5\n) \u2014 the number of rods and the number\nof questions. The second line of each test case contains a non-empty string\n\n    s\n of length \n    n\n, where the charge of the \n    i\n-th rod is \n    1\n\nif \n    s_i\n is the \"+\" symbol, or \n    -1\n if \n    s_i\n is the \"-\" symbol.\nEach next line from the next \n    q\n lines contains two positive integers\n\n    l_i\n ans \n    r_i\n (\n    1 \n    \u2264 l_i \n    \u2264 r_i \n    \u2264 n\n) \u2014 numbers,\ndescribing Sparky's questions. It is guaranteed that the sum of \n    n\n over\nall test cases does not exceed \n    3 \n    \u00b7 10^5\n, and the sum of \n    q\n\nover all test cases does not exceed \n    3 \n    \u00b7 10^5\n. It is guaranteed\nthat the sum of the answers (minimal number of rods that can be removed) over\nall test cases does not exceed \n    10^6\n. Output For each test case, print\nthe answer in the following format: In the first line print a single integer\n\n    k\n \u2014 the minimal number of rods that can be removed. In the second line\nprint \n    k\n numbers separated by a space \u2014 the numbers of rods to be\nremoved. If there is more than one correct answer, you can print any. Example\nInput 3 14 1 +\u2013++\u2014++-++- 1 14 14 3 +\u2013++\u2014+++\u2014 1 14 6 12 3 10 4 10 +-+-\n1 1 1 2 1 3 1 4 2 2 2 3 2 4 3 3 3 4 4 4 Output 2 5 8 2 1 11 1 9 0 1 1 2 1 2 1\n2 2 1 3 1 2 2 2 3 1 3 1 3 2 3 4 1 4 Note In the first test case for the first\nquery you can remove the rods numbered \n    5\n and \n    8\n, then the following\nset of rods will remain: +\u2013+\u2013++-++-. It is easy to see that here the sign-\nvariable sum is zero. In the second test case: For the first query, we can\nremove the rods numbered \n    1\n and \n    11\n, then the following set of rods\nwill remain: \u2013++\u2014++\u2014. It is easy to see that here the sign-variable sum\nis zero. For the second query we can remove the rod numbered \n    9\n, then the\nfollowing set of rods will remain: \u2014++-. It is easy to see that here the\nvariable sum is zero. For the third query we can not remove the rods at all.\n\n",
        "cf_contest_id": 1562,
        "cf_index": "D2",
        "cf_rating": 2200,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3\r\n14 1\r\n+--++---++-++-\r\n1 14\r\n14 3\r\n+--++---+++---\r\n1 14\r\n6 12\r\n3 10\r\n4 10\r\n+-+-\r\n1 1\r\n1 2\r\n1 3\r\n1 4\r\n2 2\r\n2 3\r\n2 4\r\n3 3\r\n3 4\r\n4 4\r\n",
                "2\r\n14 1\r\n2\r\n14 2\r\n1\r\n9\r\n0\r\n1\r\n1\r\n2\r\n2 1\r\n1\r\n2\r\n2\r\n4 2\r\n1\r\n2\r\n2\r\n3 2\r\n1\r\n3\r\n1\r\n3\r\n2\r\n4 3\r\n1\r\n4\r\n"
            ]
        ],
        "private_cases": []
    }
]