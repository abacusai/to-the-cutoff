[
    {
        "name": "Woeful Permutation",
        "description": "I wonder, does the falling rain Forever yearn for it's disdain? Effluvium of\nthe Mind You are given a positive integer \n    n\n. Find any permutation\n\n    p\n of length \n    n\n such that the sum \n    lcm(1,p_1) +\n    \n    lcm(2, p_2) + \n    \u2026 + \n    lcm(n, p_n)\n is\nas large as possible. Here \n    lcm(x, y)\n denotes the least\ncommon multiple (LCM) of integers \n    x\n and \n    y\n. A permutation is an\narray consisting of \n    n\n distinct integers from \n    1\n to \n    n\n in\narbitrary order. For example, \n    [2,3,1,5,4]\n is a permutation, but\n\n    [1,2,2]\n is not a permutation (\n    2\n appears twice in the array) and\n\n    [1,3,4]\n is also not a permutation (\n    n=3\n but there is \n    4\n in the\narray). Input Each test contains multiple test cases. The first line contains\nthe number of test cases \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1\n     000\n). Description\nof the test cases follows. The only line for each test case contains a single\ninteger \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^5\n). It is guaranteed that the sum of\n\n    n\n over all test cases does not exceed \n    10^5\n. Output For each test\ncase print \n    n\n integers \n    p_1\n, \n    p_2\n, \n    \u2026\n, \n    p_n\n \u2014\nthe permutation with the maximum possible value of\n\n    lcm(1,p_1) + \n    lcm(2, p_2) + \n    \u2026 +\n    \n    lcm(n, p_n)\n. If there are multiple answers, print any of\nthem. Example Input 2 1 2 Output 1 2 1 Note For \n    n = 1\n, there is only one\npermutation, so the answer is \n    [1]\n. For \n    n = 2\n, there are two\npermutations: \n    [1, 2]\n \u2014 the sum is \n    lcm(1,1) +\n    \n    lcm(2, 2) = 1 + 2 = 3\n. \n    [2, 1]\n \u2014 the sum is\n\n    lcm(1,2) + \n    lcm(2, 1) = 2 + 2 = 4\n.\n\n",
        "cf_contest_id": 1712,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n1\r\n2\r\n",
                "1\r\n2 1\r\n"
            ]
        ],
        "private_cases": []
    }
]