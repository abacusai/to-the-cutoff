[
    {
        "name": "Space Navigation ",
        "description": "You were dreaming that you are traveling to a planet named Planetforces on\nyour personal spaceship. Unfortunately, its piloting system was corrupted and\nnow you need to fix it in order to reach Planetforces. Space can be\nrepresented as the \n    XY\n plane. You are starting at point \n    (0, 0)\n, and\nPlanetforces is located in point \n    (p_x, p_y)\n. The piloting system of your\nspaceship follows its list of orders which can be represented as a string\n\n    s\n. The system reads \n    s\n from left to right. Suppose you are at point\n\n    (x, y)\n and current order is \n    s_i\n: if \n    s_i = \n    U\n, you\nmove to \n    (x, y + 1)\n; if \n    s_i = \n    D\n, you move to \n    (x, y -\n    1)\n; if \n    s_i = \n    R\n, you move to \n    (x + 1, y)\n; if \n    s_i =\n    \n    L\n, you move to \n    (x - 1, y)\n. Since string \n    s\n could be\ncorrupted, there is a possibility that you won't reach Planetforces in the\nend. Fortunately, you can delete some orders from \n    s\n but you can't change\ntheir positions. Can you delete several orders (possibly, zero) from \n    s\n\nin such a way, that you'll reach Planetforces after the system processes all\norders? Input The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 1000\n) \u2014 the number of test cases. Each test case consists of two\nlines. The first line in each test case contains two integers \n    p_x\n and\n\n    p_y\n (\n    -10^5 \n    \u2264 p_x, p_y \n    \u2264 10^5\n; \n    (p_x, p_y) \n    \u2260 (0,\n    0)\n) \u2014 the coordinates of Planetforces \n    (p_x, p_y)\n. The second line\ncontains the string \n    s\n (\n    1 \n    \u2264 |s| \n    \u2264 10^5\n: \n    |s|\n is the\nlength of string \n    s\n) \u2014 the list of orders. It is guaranteed that the sum\nof \n    |s|\n over all test cases does not exceed \n    10^5\n. Output For each\ntest case, print \"YES\" if you can delete several orders (possibly, zero) from\n\n    s\n in such a way, that you'll reach Planetforces. Otherwise, print \"NO\".\nYou can print each letter in any case (upper or lower). Example Input 6 10 5\nRRRRRRRRRRUUUUU 1 1 UDDDRLLL -3 -5 LDLDLDDDR 1 2 LLLLUU 3 -2 RDULRLLDR -1 6\nRUDURUUUUR Output YES YES YES NO YES NO Note In the first case, you don't need\nto modify \n    s\n, since the given \n    s\n will bring you to Planetforces. In\nthe second case, you can delete orders \n    s_2\n, \n    s_3\n, \n    s_4\n,\n\n    s_6\n, \n    s_7\n and \n    s_8\n, so \n    s\n becomes equal to \"UR\". In the\nthird test case, you have to delete order \n    s_9\n, otherwise, you won't\nfinish in the position of Planetforces.\n\n",
        "cf_contest_id": 1481,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n10 5\r\nRRRRRRRRRRUUUUU\r\n1 1\r\nUDDDRLLL\r\n-3 -5\r\nLDLDLDDDR\r\n1 2\r\nLLLLUU\r\n3 -2\r\nRDULRLLDR\r\n-1 6\r\nRUDURUUUUR\r\n",
                "YES\r\nYES\r\nYES\r\nNO \r\nYES\r\nNO \r\n"
            ]
        ],
        "private_cases": []
    }
]