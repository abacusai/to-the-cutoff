[
    {
        "name": "Five Dimensional Points",
        "description": "You are given set of n points in 5-dimensional space. The points are labeled\nfrom 1 to n. No two points coincide. We will call point a bad if there are\ndifferent points b and c, not equal to a, from the given set such that angle\nbetween vectors and is acute (i.e. strictly less than ). Otherwise, the point\nis called good. The angle between vectors and in 5-dimensional space is\ndefined as , where is the scalar product and is length of . Given the list of\npoints, print the indices of the good points in ascending order. Input The\nfirst line of input contains a single integer n (1 \u2264 n \u2264 10^3) \u2014 the number of\npoints. The next n lines of input contain five integers ai, bi, ci, di, ei\n(|ai|, |bi|, |ci|, |di|, |ei| \u2264 10^3) \u2014 the coordinates of the i-th point. All\npoints are distinct. Output First, print a single integer k \u2014 the number of\ngood points. Then, print k integers, each on their own line \u2014 the indices of\nthe good points in ascending order. Examples Input 6 0 0 0 0 0 1 0 0 0 0 0 1 0\n0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 Output 1 1 Input 3 0 0 1 2 0 0 0 9 2 0 0 0 5\n9 0 Output 0 Note In the first sample, the first point forms exactly a angle\nwith all other pairs of points, so it is good. In the second sample, along the\ncd plane, we can see the points look as follows: We can see that all angles\nhere are acute, so no points are good.\n\n",
        "cf_contest_id": 850,
        "cf_index": "A",
        "cf_rating": 1700,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "geometry",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "6\r\n0 0 0 0 0\r\n1 0 0 0 0\r\n0 1 0 0 0\r\n0 0 1 0 0\r\n0 0 0 1 0\r\n0 0 0 0 1\r\n",
                "1\r\n1\r\n"
            ],
            [
                "3\r\n0 0 1 2 0\r\n0 0 9 2 0\r\n0 0 5 9 0\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n0 0 0 0 0\r\n",
                "1\r\n1\r\n"
            ],
            [
                "2\r\n0 1 2 3 4\r\n5 6 7 8 9\r\n",
                "2\r\n1\r\n2\r\n"
            ],
            [
                "10\r\n0 -110 68 -51 -155\r\n-85 -110 68 -51 -155\r\n85 -70 51 68 -230\r\n0 -40 51 68 75\r\n0 5 -51 -68 -190\r\n85 0 0 0 0\r\n85 -115 -68 51 35\r\n85 -75 -187 34 -40\r\n-85 -110 -136 102 -155\r\n85 -110 -17 119 -155\r\n",
                "0\r\n"
            ],
            [
                "6\r\n-305 -390 638 -623 343\r\n479 755 -343 144 89\r\n-268 843 -461 989 -301\r\n-986 -274 347 -847 -728\r\n278 718 -372 -674 270\r\n-477 562 -489 -858 611\r\n",
                "0\r\n"
            ],
            [
                "10\r\n-705 38 170 -768 689\r\n-705 86 248 -768 709\r\n-705 86 170 -742 709\r\n-705 86 144 -768 709\r\n-705 86 170 -820 709\r\n-705 106 170 -768 661\r\n-822 86 170 -768 709\r\n-705 98 170 -768 714\r\n-705 86 170 -768 709\r\n-601 86 170 -768 709\r\n",
                "1\r\n9\r\n"
            ],
            [
                "11\r\n358 -724 -232 53 -520\r\n486 -554 -328 53 -220\r\n358 -554 -232 -372 -520\r\n358 -554 -232 308 -520\r\n868 -554 448 53 -520\r\n478 -554 -322 53 -600\r\n358 296 -232 53 -520\r\n256 -554 -368 53 -520\r\n230 -554 -136 53 -820\r\n-182 -554 173 53 -160\r\n358 -554 -232 53 -520\r\n",
                "1\r\n11\r\n"
            ],
            [
                "8\r\n-559 581 509 257 343\r\n-544 451 569 277 343\r\n-451 451 434 401 343\r\n-559 451 509 257 83\r\n-664 451 89 117 343\r\n-559 451 509 257 993\r\n-715 451 509 374 343\r\n-811 451 684 -79 343\r\n",
                "0\r\n"
            ],
            [
                "11\r\n8 8 8 8 8\r\n2 2 2 2 2\r\n0 0 0 0 0\r\n6 6 6 6 6\r\n7 7 7 7 7\r\n10 10 10 10 10\r\n9 9 9 9 9\r\n3 3 3 3 3\r\n1 1 1 1 1\r\n5 5 5 5 5\r\n4 4 4 4 4\r\n",
                "0\r\n"
            ],
            [
                "7\r\n49 457 -650 325 -325\r\n0 0 325 325 0\r\n253 204 -325 0 -325\r\n204 -253 325 325 325\r\n408 -506 -325 -325 325\r\n49 457 -650 325 -650\r\n0 0 0 650 -325\r\n",
                "0\r\n"
            ],
            [
                "11\r\n1 0 0 0 0\r\n-1 0 0 0 0\r\n0 1 0 0 0\r\n0 -1 0 0 0\r\n0 0 1 0 0\r\n0 0 -1 0 0\r\n0 0 0 1 0\r\n0 0 0 -1 0\r\n0 0 0 0 1\r\n0 0 0 0 -1\r\n0 0 0 0 0\r\n",
                "1\r\n11\r\n"
            ],
            [
                "4\r\n0 0 0 0 0\r\n1 0 0 0 0\r\n0 1 0 0 0\r\n0 1 1 0 0\r\n",
                "0\r\n"
            ]
        ]
    }
]