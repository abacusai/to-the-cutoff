[
    {
        "name": "Paths on the Tree",
        "description": "You are given a rooted tree consisting of \n    n\n vertices. The vertices are\nnumbered from \n    1\n to \n    n\n, and the root is the vertex \n    1\n. You are\nalso given a score array \n    s_1, s_2, \n    \u2026, s_n\n. A multiset of \n    k\n\nsimple paths is called valid if the following two conditions are both true.\nEach path starts from \n    1\n. Let \n    c_i\n be the number of paths covering\nvertex \n    i\n. For each pair of vertices \n    (u,v)\n (\n    2\n    \u2264 u,v\n    \u2264\n    n\n) that have the same parent, \n    |c_u-c_v|\n    \u2264 1\n holds. The value of\nthe path multiset is defined as \n    \u2211\n    _i=1^n c_i s_i\n.It can\nbe shown that it is always possible to find at least one valid multiset. Find\nthe maximum value among all valid multisets. Input Each test contains multiple\ntest cases. The first line contains a single integer \n    t\n (\n    1 \n    \u2264 t\n    \n    \u2264 10^4\n) \u2014 the number of test cases. The description of the test cases\nfollows. The first line of each test case contains two space-separated\nintegers \n    n\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) and \n    k\n (\n    1\n    \n    \u2264 k \n    \u2264 10^9\n) \u2014 the size of the tree and the required number of\npaths. The second line contains \n    n - 1\n space-separated integers\n\n    p_2,p_3,\n    \u2026,p_n\n (\n    1\n    \u2264 p_i\n    \u2264 n\n), where \n    p_i\n is the\nparent of the \n    i\n-th vertex. It is guaranteed that this value describe a\nvalid tree with root \n    1\n. The third line contains \n    n\n space-separated\nintegers \n    s_1,s_2,\n    \u2026,s_n\n (\n    0 \n    \u2264 s_i \n    \u2264 10^4\n) \u2014 the\nscores of the vertices. It is guaranteed that the sum of \n    n\n over all test\ncases does not exceed \n    2 \n    \u00b7 10 ^ 5\n. Output For each test case, print\na single integer \u2014 the maximum value of a path multiset. Example Input 2 5 4 1\n2 1 3 6 2 1 5 7 5 3 1 2 1 3 6 6 1 4 10 Output 54 56 Note In the first test\ncase, one of optimal solutions is four paths \n    1 \n    \u2192 2 \n    \u2192 3 \n    \u2192 5\n,\n\n    1 \n    \u2192 2 \n    \u2192 3 \n    \u2192 5\n, \n    1 \n    \u2192 4\n, \n    1 \n    \u2192 4\n, here\n\n    c=[4,2,2,2,2]\n. The value equals to \n    4\n    \u00b7 6+ 2\n    \u00b7 2+2\n    \u00b7\n    1+2\n    \u00b7 5+2\n    \u00b7 7=54\n. In the second test case, one of optimal\nsolution is three paths \n    1 \n    \u2192 2 \n    \u2192 3 \n    \u2192 5\n, \n    1 \n    \u2192 2 \n    \u2192 3\n    \n    \u2192 5\n, \n    1 \n    \u2192 4\n, here \n    c=[3,2,2,1,2]\n. The value equals to\n\n    3\n    \u00b7 6+ 2\n    \u00b7 6+2\n    \u00b7 1+1\n    \u00b7 4+2\n    \u00b7 10=56\n.\n\n",
        "cf_contest_id": 1746,
        "cf_index": "D",
        "cf_rating": 1900,
        "difficulty": 0,
        "cf_tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "sortings",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2\r\n5 4\r\n1 2 1 3\r\n6 2 1 5 7\r\n5 3\r\n1 2 1 3\r\n6 6 1 4 10\r\n",
                "54\r\n56\r\n"
            ]
        ],
        "private_cases": []
    }
]