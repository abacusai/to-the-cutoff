[
    {
        "name": "Social Network",
        "description": "William arrived at a conference dedicated to cryptocurrencies. Networking,\nmeeting new people, and using friends' connections are essential to stay up to\ndate with the latest news from the world of cryptocurrencies. The conference\nhas \n    n\n participants, who are initially unfamiliar with each other.\nWilliam can introduce any two people, \n    a\n and \n    b\n, who were not\nfamiliar before, to each other. William has \n    d\n conditions, \n    i\n'th of\nwhich requires person \n    x_i\n to have a connection to person \n    y_i\n.\nFormally, two people \n    x\n and \n    y\n have a connection if there is such a\nchain \n    p_1=x, p_2, p_3, \n    \u2026, p_k=y\n for which for all \n    i\n from\n\n    1\n to \n    k - 1\n it's true that two people with numbers \n    p_i\n and\n\n    p_i + 1\n know each other. For every \n    i\n (\n    1 \n    \u2264 i \n    \u2264 d\n)\nWilliam wants you to calculate the maximal number of acquaintances one person\ncan have, assuming that William satisfied all conditions from \n    1\n and up\nto and including \n    i\n and performed exactly \n    i\n introductions. The\nconditions are being checked after William performed \n    i\n introductions.\nThe answer for each \n    i\n must be calculated independently. It means that\nwhen you compute an answer for \n    i\n, you should assume that no two people\nhave been introduced to each other yet. Input The first line contains two\nintegers \n    n\n and \n    d\n (\n    2 \n    \u2264 n \n    \u2264 10^3, 1 \n    \u2264 d \n    \u2264 n -\n    1\n), the number of people, and number of conditions, respectively. Each of\nthe next \n    d\n lines each contain two integers \n    x_i\n and \n    y_i\n (\n    1\n    \n    \u2264 x_i, y_i \n    \u2264 n, x_i \n    \u2260 y_i\n), the numbers of people which must\nhave a connection according to condition \n    i\n. Output Output \n    d\n\nintegers. \n    i\nth number must equal the number of acquaintances the person\nwith the maximal possible acquaintances will have, if William performed\n\n    i\n introductions and satisfied the first \n    i\n conditions. Examples\nInput 7 6 1 2 3 4 2 4 7 6 6 5 1 7 Output 1 1 3 3 3 6 Input 10 8 1 2 2 3 3 4 1\n4 6 7 8 9 8 10 1 4 Output 1 2 3 4 5 5 6 8 Note The explanation for the first\ntest case: In this explanation, the circles and the numbers in them denote a\nperson with the corresponding number. The line denotes that William introduced\ntwo connected people. The person marked with red has the most acquaintances.\nThese are not the only correct ways to introduce people.\n\n",
        "cf_contest_id": 1609,
        "cf_index": "D",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "dsu",
            "graphs",
            "greedy",
            "implementation",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 6\r\n1 2\r\n3 4\r\n2 4\r\n7 6\r\n6 5\r\n1 7\r\n",
                "1\r\n1\r\n3\r\n3\r\n3\r\n6\r\n"
            ],
            [
                "10 8\r\n1 2\r\n2 3\r\n3 4\r\n1 4\r\n6 7\r\n8 9\r\n8 10\r\n1 4\r\n",
                "1\r\n2\r\n3\r\n4\r\n5\r\n5\r\n6\r\n8\r\n"
            ]
        ],
        "private_cases": [
            [
                "2 1\r\n1 2\r\n",
                "1\r\n"
            ],
            [
                "3 1\r\n2 3\r\n",
                "1\r\n"
            ],
            [
                "3 2\r\n1 3\r\n3 1\r\n",
                "1\r\n2\r\n"
            ],
            [
                "4 1\r\n2 4\r\n",
                "1\r\n"
            ],
            [
                "4 2\r\n2 4\r\n3 4\r\n",
                "1\r\n2\r\n"
            ],
            [
                "4 3\r\n2 1\r\n4 1\r\n1 2\r\n",
                "1\r\n2\r\n3\r\n"
            ]
        ]
    }
]