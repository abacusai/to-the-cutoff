[
    {
        "name": "Rooks Defenders",
        "description": "You have a square chessboard of size \n    n \n    \u00d7 n\n. Rows are numbered\nfrom top to bottom with numbers from \n    1\n to \n    n\n, and columns \u2014 from\nleft to right with numbers from \n    1\n to \n    n\n. So, each cell is denoted\nwith pair of integers \n    (x, y)\n (\n    1 \n    \u2264 x, y \n    \u2264 n\n), where \n    x\n\nis a row number and \n    y\n is a column number. You have to perform \n    q\n\nqueries of three types: Put a new rook in cell \n    (x, y)\n. Remove a rook\nfrom cell \n    (x, y)\n. It's guaranteed that the rook was put in this cell\nbefore. Check if each cell of subrectangle \n    (x_1, y_1) - (x_2, y_2)\n of\nthe board is attacked by at least one rook. Subrectangle is a set of cells\n\n    (x, y)\n such that for each cell two conditions are satisfied: \n    x_1\n    \n    \u2264 x \n    \u2264 x_2\n and \n    y_1 \n    \u2264 y \n    \u2264 y_2\n. Recall that cell \n    (a,\n    b)\n is attacked by a rook placed in cell \n    (c, d)\n if either \n    a = c\n\nor \n    b = d\n. In particular, the cell containing a rook is attacked by this\nrook. Input The first line contains two integers \n    n\n and \n    q\n (\n    1\n    \n    \u2264 n \n    \u2264 10^5\n, \n    1 \n    \u2264 q \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the size of the\nchessboard and the number of queries, respectively. Each of the following\n\n    q\n lines contains description of a query. Description begins with integer\n\n    t\n (\n    t \n    \u2208\n    \n    1, 2, 3\n) which denotes type of a query: If\n\n    t = 1\n, two integers \n    x\n and \n    y\n follows (\n    1 \n    \u2264 x, y \n    \u2264\n    n\n) \u2014 coordinated of the cell where the new rook should be put in. It's\nguaranteed that there is no rook in the cell \n    (x, y)\n at the moment of the\ngiven query. If \n    t = 2\n, two integers \n    x\n and \n    y\n follows (\n    1\n    \n    \u2264 x, y \n    \u2264 n\n) \u2014 coordinates of the cell to remove a rook from. It's\nguaranteed that there is a rook in the cell \n    (x, y)\n at the moment of the\ngiven query. If \n    t = 3\n, four integers \n    x_1, y_1, x_2\n and \n    y_2\n\nfollows (\n    1 \n    \u2264 x_1 \n    \u2264 x_2 \n    \u2264 n\n, \n    1 \n    \u2264 y_1 \n    \u2264 y_2 \n    \u2264\n    n\n) \u2014 subrectangle to check if each cell of it is attacked by at least one\nrook. It's guaranteed that among \n    q\n queries there is at least one query\nof the third type. Output Print the answer for each query of the third type in\na separate line. Print \"Yes\" (without quotes) if each cell of the subrectangle\nis attacked by at least one rook. Otherwise print \"No\" (without quotes).\nExample Input 8 10 1 2 4 3 6 2 7 2 1 3 2 3 6 2 7 2 1 4 3 3 2 6 4 8 2 4 3 3 2 6\n4 8 1 4 8 3 2 6 4 8 Output No Yes Yes No Yes Note Consider example. After the\nfirst two queries the board will look like the following picture (the letter\n\n    R\n denotes cells in which rooks are located, the subrectangle of the\nquery of the third type is highlighted in green): Chessboard after performing\nthe third and the fourth queries: Chessboard after performing the fifth and\nthe sixth queries: Chessboard after performing the seventh and the eighth\nqueries: Chessboard after performing the last two queries:\n\n",
        "cf_contest_id": 1679,
        "cf_index": "C",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "8 10\r\n1 2 4\r\n3 6 2 7 2\r\n1 3 2\r\n3 6 2 7 2\r\n1 4 3\r\n3 2 6 4 8\r\n2 4 3\r\n3 2 6 4 8\r\n1 4 8\r\n3 2 6 4 8\r\n",
                "No\r\nYes\r\nYes\r\nNo\r\nYes\r\n"
            ]
        ],
        "private_cases": [
            [
                "10 15\r\n3 10 1 10 7\r\n1 3 9\r\n3 2 7 8 7\r\n1 4 5\r\n1 9 5\r\n3 4 9 5 9\r\n1 1 10\r\n3 3 8 3 9\r\n1 7 7\r\n3 1 8 1 10\r\n3 8 4 9 10\r\n1 9 4\r\n2 9 5\r\n2 7 7\r\n2 9 4\r\n",
                "No\r\nNo\r\nYes\r\nYes\r\nYes\r\nNo\r\n"
            ],
            [
                "6 9\r\n1 1 2\r\n2 1 2\r\n1 3 6\r\n2 3 6\r\n3 2 5 6 6\r\n3 4 5 5 5\r\n3 5 3 6 6\r\n3 6 6 6 6\r\n1 6 5\r\n",
                "No\r\nNo\r\nNo\r\nNo\r\n"
            ],
            [
                "10 6\r\n1 8 9\r\n1 5 1\r\n3 1 1 3 5\r\n2 8 9\r\n2 5 1\r\n1 1 4\r\n",
                "No\r\n"
            ],
            [
                "6 10\r\n1 5 3\r\n2 5 3\r\n3 1 4 3 4\r\n1 2 6\r\n1 2 2\r\n3 2 2 2 4\r\n1 3 4\r\n3 4 4 5 6\r\n2 2 6\r\n1 1 5\r\n",
                "No\r\nYes\r\nNo\r\n"
            ],
            [
                "8 5\r\n1 4 2\r\n2 4 2\r\n1 6 6\r\n2 6 6\r\n3 7 2 8 2\r\n",
                "No\r\n"
            ],
            [
                "10 7\r\n3 6 7 6 10\r\n1 2 5\r\n3 10 5 10 5\r\n2 2 5\r\n3 10 4 10 6\r\n1 4 8\r\n1 2 8\r\n",
                "No\r\nYes\r\nNo\r\n"
            ],
            [
                "14 11\r\n3 6 2 14 11\r\n3 13 11 14 11\r\n3 12 4 12 13\r\n1 1 5\r\n1 4 9\r\n2 1 5\r\n2 4 9\r\n3 12 12 13 12\r\n1 8 1\r\n2 8 1\r\n1 12 9\r\n",
                "No\r\nNo\r\nNo\r\nNo\r\n"
            ],
            [
                "12 15\r\n3 4 4 5 4\r\n1 10 9\r\n2 10 9\r\n3 12 2 12 12\r\n3 1 11 5 12\r\n1 6 5\r\n1 11 8\r\n1 4 2\r\n3 9 8 12 8\r\n2 11 8\r\n1 12 8\r\n2 4 2\r\n1 11 5\r\n1 8 4\r\n2 11 5\r\n",
                "No\r\nNo\r\nNo\r\nYes\r\n"
            ],
            [
                "10 12\r\n1 8 8\r\n2 8 8\r\n1 7 8\r\n3 7 1 7 7\r\n1 10 3\r\n2 7 8\r\n2 10 3\r\n1 7 9\r\n3 9 6 9 7\r\n2 7 9\r\n1 9 7\r\n1 10 10\r\n",
                "Yes\r\nNo\r\n"
            ],
            [
                "10 14\r\n1 6 10\r\n1 6 9\r\n1 1 6\r\n3 1 6 1 9\r\n3 6 7 8 8\r\n2 6 10\r\n3 4 6 4 6\r\n2 6 9\r\n1 9 9\r\n2 1 6\r\n2 9 9\r\n3 3 9 4 10\r\n1 7 5\r\n1 7 9\r\n",
                "Yes\r\nNo\r\nYes\r\nNo\r\n"
            ],
            [
                "14 14\r\n1 3 13\r\n2 3 13\r\n3 9 7 14 11\r\n1 3 2\r\n3 1 2 2 2\r\n3 6 4 12 7\r\n2 3 2\r\n3 6 3 12 5\r\n3 3 8 13 11\r\n3 7 14 13 14\r\n3 1 5 6 8\r\n3 2 13 6 13\r\n1 12 1\r\n1 11 3\r\n",
                "No\r\nYes\r\nNo\r\nNo\r\nNo\r\nNo\r\nNo\r\nNo\r\n"
            ],
            [
                "4 4\r\n1 4 4\r\n1 2 2\r\n1 3 3\r\n3 1 2 2 3\r\n",
                "Yes\r\n"
            ]
        ]
    }
]