[
    {
        "name": "Arena",
        "description": "\n    n\n heroes fight against each other in the Arena. Initially, the\n\n    i\n-th hero has level \n    a_i\n. Each minute, a fight between two\ndifferent heroes occurs. These heroes can be chosen arbitrarily (it's even\npossible that it is the same two heroes that were fighting during the last\nminute). When two heroes of equal levels fight, nobody wins the fight. When\ntwo heroes of different levels fight, the one with the higher level wins, and\nhis level increases by \n    1\n. The winner of the tournament is the first hero\nthat wins in at least \n    100^500\n fights (note that it's possible that the\ntournament lasts forever if no hero wins this number of fights, then there is\nno winner). A possible winner is a hero such that there exists a sequence of\nfights that this hero becomes the winner of the tournament. Calculate the\nnumber of possible winners among \n    n\n heroes. Input The first line contains\none integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 500\n) \u2014 the number of test cases.\nEach test case consists of two lines. The first line contains one integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 100\n) \u2014 the number of heroes. The second line\ncontains \n    n\n integers \n    a_1, a_2, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264\n    100\n), where \n    a_i\n is the initial level of the \n    i\n-th hero. Output\nFor each test case, print one integer \u2014 the number of possible winners among\nthe given \n    n\n heroes. Example Input 3 3 3 2 2 2 5 5 4 1 3 3 7 Output 1 0 3\nNote In the first test case of the example, the only possible winner is the\nfirst hero. In the second test case of the example, each fight between the\nheroes results in nobody winning it, so the tournament lasts forever and there\nis no winner.\n\n",
        "cf_contest_id": 1487,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3\r\n3 2 2\r\n2\r\n5 5\r\n4\r\n1 3 3 7\r\n",
                "1\r\n0\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "2\r\n5\r\n1 1 1 1 1\r\n4\r\n1 1 1 1\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n6\r\n6 6 6 6 6 6\r\n5\r\n6 6 6 6 6\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n3\r\n2 2 2\r\n2\r\n2 2\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n5\r\n1 1 1 1 2\r\n4\r\n2 2 2 2\r\n",
                "1\r\n0\r\n"
            ],
            [
                "1\r\n3\r\n90 91 92\r\n",
                "2\r\n"
            ],
            [
                "2\r\n3\r\n1 1 1\r\n2\r\n1 1\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n4\r\n1 1 1 1\r\n3\r\n1 1 1\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n3\r\n3 3 3\r\n2\r\n3 3\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n4\r\n5 5 5 5\r\n2\r\n5 5\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n4\r\n5 5 5 5\r\n3\r\n5 5 5\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n4\r\n1 2 4 4\r\n2\r\n4 4\r\n",
                "3\r\n0\r\n"
            ],
            [
                "2\r\n4\r\n1 1 1 1\r\n2\r\n1 1\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n4\r\n2 2 2 3\r\n2\r\n2 2\r\n",
                "1\r\n0\r\n"
            ],
            [
                "2\r\n8\r\n1 9 1 9 8 10 10 10\r\n5\r\n10 10 10 10 10\r\n",
                "6\r\n0\r\n"
            ],
            [
                "2\r\n5\r\n1 1 1 1 1\r\n3\r\n1 1 1\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n3\r\n4 4 4\r\n2\r\n4 4\r\n",
                "0\r\n0\r\n"
            ],
            [
                "2\r\n5\r\n9 3 3 4 100\r\n4\r\n100 100 100 100\r\n",
                "3\r\n0\r\n"
            ],
            [
                "2\r\n5\r\n1 2 3 5 5\r\n3\r\n5 5 5\r\n",
                "4\r\n0\r\n"
            ],
            [
                "2\r\n4\r\n1 1 2 2\r\n2\r\n2 2\r\n",
                "2\r\n0\r\n"
            ],
            [
                "2\r\n6\r\n1 2 2 2 2 2\r\n4\r\n2 2 2 2\r\n",
                "5\r\n0\r\n"
            ],
            [
                "2\r\n4\r\n1 1 1 2\r\n2\r\n1 1\r\n",
                "1\r\n0\r\n"
            ],
            [
                "3\r\n4\r\n1 1 1 1\r\n2\r\n1 1\r\n3\r\n1 1 1\r\n",
                "0\r\n0\r\n0\r\n"
            ],
            [
                "2\r\n4\r\n2 2 2 2\r\n3\r\n2 2 2\r\n",
                "0\r\n0\r\n"
            ]
        ]
    }
]