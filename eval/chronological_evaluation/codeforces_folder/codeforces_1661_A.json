[
    {
        "name": "Array Balancing",
        "description": "You are given two arrays of length \n    n\n: \n    a_1, a_2, \n    \u2026, a_n\n and\n\n    b_1, b_2, \n    \u2026, b_n\n. You can perform the following operation any\nnumber of times: Choose integer index \n    i\n (\n    1 \n    \u2264 i \n    \u2264 n\n); Swap\n\n    a_i\n and \n    b_i\n. What is the minimum possible sum \n    |a_1 - a_2| +\n    |a_2 - a_3| + \n    \u2026 + |a_n-1 - a_n|\n \n    +\n \n    |b_1 - b_2| + |b_2 -\n    b_3| + \n    \u2026 + |b_n-1 - b_n|\n (in other words,\n\n    \u2211\n    _i=1^n - 1\n    (|a_i - a_i+1| + |b_i -\n    b_i+1|\n    )\n) you can achieve after performing several (possibly,\nzero) operations? Input The first line contains a single integer \n    t\n (\n    1\n    \n    \u2264 t \n    \u2264 4000\n) \u2014 the number of test cases. Then, \n    t\n test cases\nfollow. The first line of each test case contains the single integer \n    n\n\n(\n    2 \n    \u2264 n \n    \u2264 25\n) \u2014 the length of arrays \n    a\n and \n    b\n. The\nsecond line of each test case contains \n    n\n integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the array \n    a\n. The third line of\neach test case contains \n    n\n integers \n    b_1, b_2, \n    \u2026, b_n\n (\n    1\n    \n    \u2264 b_i \n    \u2264 10^9\n) \u2014 the array \n    b\n. Output For each test case, print\none integer \u2014 the minimum possible sum\n\n    \u2211\n    _i=1^n-1\n    (|a_i - a_i+1| + |b_i -\n    b_i+1|\n    )\n. Example Input 3 4 3 3 10 10 10 10 3 3 5 1 2 3 4 5 6 7 8\n9 10 6 72 101 108 108 111 44 10 87 111 114 108 100 Output 0 8 218 Note In the\nfirst test case, we can, for example, swap \n    a_3\n with \n    b_3\n and\n\n    a_4\n with \n    b_4\n. We'll get arrays \n    a = [3, 3, 3, 3]\n and \n    b =\n    [10, 10, 10, 10]\n with sum \n    3 \n    \u00b7 |3 - 3| + 3 \n    \u00b7 |10 - 10| =\n    0\n. In the second test case, arrays already have minimum sum (described\nabove) equal to \n    |1 - 2| + \n    \u2026 + |4 - 5| + |6 - 7| + \n    \u2026 + |9 -\n    10|\n \n    = 4 + 4 = 8\n. In the third test case, we can, for example, swap\n\n    a_5\n and \n    b_5\n.\n\n",
        "cf_contest_id": 1661,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n4\r\n3 3 10 10\r\n10 10 3 3\r\n5\r\n1 2 3 4 5\r\n6 7 8 9 10\r\n6\r\n72 101 108 108 111 44\r\n10 87 111 114 108 100\r\n",
                "0\r\n8\r\n218\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n2\r\n114514 1919810\r\n114514 1919810\r\n",
                "3610592\r\n"
            ],
            [
                "1\r\n3\r\n141592 653589 793238\r\n141592 653589 793238\r\n",
                "1303292\r\n"
            ],
            [
                "1\r\n10\r\n12345 12345 12345 12345 12345 12345 12345 12345 12345 12345\r\n1 1 1 1 11 1 1 1 11 1\r\n",
                "40\r\n"
            ],
            [
                "1\r\n10\r\n123 123 123 123 123 123 123 123 123 123\r\n1 1 1 1 1 11 1 1 11 1\r\n",
                "40\r\n"
            ],
            [
                "1\r\n2\r\n114514233 114514233\r\n114514233 114514233\r\n",
                "0\r\n"
            ]
        ]
    }
]