[
    {
        "name": "Easy Scheduling",
        "description": "Eonathan Eostar decided to learn the magic of multiprocessor systems. He has a\nfull binary tree of tasks with height \n    h\n. In the beginning, there is only\none ready task in the tree \u2014 the task in the root. At each moment of time,\n\n    p\n processes choose at most \n    p\n ready tasks and perform them. After\nthat, tasks whose parents were performed become ready for the next moment of\ntime. Once the task becomes ready, it stays ready until it is performed. You\nshall calculate the smallest number of time moments the system needs to\nperform all the tasks. Input The first line of the input contains the number\nof tests \n    t\n (\n    1 \n    \u2264 t \n    \u2264 5\n    \u00b7 10^5\n). Each of the next\n\n    t\n lines contains the description of a test. A test is described by two\nintegers \n    h\n (\n    1 \n    \u2264 h \n    \u2264 50\n) and \n    p\n (\n    1 \n    \u2264 p\n    \n    \u2264 10^4\n) \u2014 the height of the full binary tree and the number of\nprocesses. It is guaranteed that all the tests are different. Output For each\ntest output one integer on a separate line \u2014 the smallest number of time\nmoments the system needs to perform all the tasks. Example Input 3 3 1 3 2 10\n6 Output 7 4 173 Note Let us consider the second test from the sample input.\nThere is a full binary tree of height \n    3\n and there are two processes. At\nthe first moment of time, there is only one ready task, \n    1\n, and \n    p_1\n\nperforms it. At the second moment of time, there are two ready tasks, \n    2\n\nand \n    3\n, and the processes perform them. At the third moment of time,\nthere are four ready tasks, \n    4\n, \n    5\n, \n    6\n, and \n    7\n, and\n\n    p_1\n performs \n    6\n and \n    p_2\n performs \n    5\n. At the fourth\nmoment of time, there are two ready tasks, \n    4\n and \n    7\n, and the\nprocesses perform them. Thus, the system spends \n    4\n moments of time to\nperform all the tasks.\n\n",
        "cf_contest_id": 1578,
        "cf_index": "E",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 1024.0,
        "public_cases": [],
        "private_cases": []
    }
]