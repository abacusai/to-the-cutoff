[
    {
        "name": "Expected Earnings",
        "description": "You are playing a game with a bag of red and black balls. Initially, you are\ntold that the bag has n balls total. In addition, you are also told that the\nbag has probability pi / 10^6 of containing exactly i red balls. You now would\nlike to buy balls from this bag. You really like the color red, so red balls\nare worth a unit of 1, while black balls are worth nothing. To buy a ball, if\nthere are still balls in the bag, you pay a cost c with 0 \u2264 c \u2264 1, and draw a\nball randomly from the bag. You can choose to stop buying at any point (and\nyou can even choose to not buy anything at all). Given that you buy optimally\nto maximize the expected profit (i.e. # red balls - cost needed to obtain\nthem), print the maximum expected profit. Input The first line of input will\ncontain two integers n, X (1 \u2264 n \u2264 10 000, 0 \u2264 X \u2264 10^6). The next line of\ninput will contain n + 1 integers p0, p1, ... pn (0 \u2264 pi \u2264 10^6, ) The value\nof c can be computed as . Output Print a single floating point number\nrepresenting the optimal expected value. Your answer will be accepted if it\nhas absolute or relative error at most 10^-9. More specifically, if your\nanswer is a and the jury answer is b, your answer will be accepted if .\nExample Input 3 200000 250000 250000 250000 250000 Output 0.9000000000 Note\nHere, there is equal probability for the bag to contain 0,1,2,3 red balls.\nAlso, it costs 0.2 to draw a ball from the bag.\n\n",
        "cf_contest_id": 838,
        "cf_index": "F",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 200000\r\n250000 250000 250000 250000\r\n",
                "0.9000000000"
            ]
        ],
        "private_cases": [
            [
                "3 590909\r\n250000 250000 250000 250000\r\n",
                "0.0000001667"
            ],
            [
                "5 999999\r\n0 0 0 0 1 999999\r\n",
                "0.0000040000"
            ],
            [
                "6 202020\r\n100000 10000 100000 10000 670000 10000 100000\r\n",
                "2.4344387867"
            ],
            [
                "10 234567\r\n200000 0 0 0 200000 0 200000 0 200000 0 200000\r\n",
                "3.5495784771"
            ],
            [
                "1 499999\r\n500000 500000\r\n",
                "0.0000010000"
            ],
            [
                "1 1000000\r\n0 1000000\r\n",
                "0.0000000000"
            ],
            [
                "1 0\r\n1000000 0\r\n",
                "0.0000000000"
            ],
            [
                "20 123123\r\n1682 7 254283 3077 0 0 62970 31538 847 13907 136 114786 8896 21735 366 197843 34 5405 85982 151831 44675\r\n",
                "8.9640029962"
            ],
            [
                "20 432432\r\n819 6 114860 85975 254174 31601 21342 5378 0 9060 44688 41 1 14140 133 62548 3175 352 1727 152041 197939\r\n",
                "3.8973078653"
            ],
            [
                "20 539824\r\n89 745 2051 4086 6484 9638 13708 18398 23681 29010 35616 43101 50384 59257 68339 77831 88430 99269 110714 122979 136190\r\n",
                "4.5786473969"
            ]
        ]
    }
]