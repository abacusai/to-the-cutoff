[
    {
        "name": "Square?",
        "description": "Vasya claims that he had a paper square. He cut it into two rectangular parts\nusing one vertical or horizontal cut. Then Vasya informed you the dimensions\nof these two rectangular parts. You need to check whether Vasya originally had\na square. In other words, check if it is possible to make a square using two\ngiven rectangles. Input The first line contains an integer \n    t\n (\n    1 \n    \u2264\n    t \n    \u2264 10^4\n) \u2014 the number of test cases in the input. Then \n    t\n test\ncases follow. Each test case is given in two lines. The first line contains\ntwo integers \n    a_1\n and \n    b_1\n (\n    1 \n    \u2264 a_1, b_1 \n    \u2264 100\n) \u2014 the\ndimensions of the first one obtained after cutting rectangle. The sizes are\ngiven in random order (that is, it is not known which of the numbers is the\nwidth, and which of the numbers is the length). The second line contains two\nintegers \n    a_2\n and \n    b_2\n (\n    1 \n    \u2264 a_2, b_2 \n    \u2264 100\n) \u2014 the\ndimensions of the second obtained after cutting rectangle. The sizes are given\nin random order (that is, it is not known which of the numbers is the width,\nand which of the numbers is the length). Output Print \n    t\n answers, each of\nwhich is a string \"YES\" (in the case of a positive answer) or \"NO\" (in the\ncase of a negative answer). The letters in words can be printed in any case\n(upper or lower). Example Input 3 2 3 3 1 3 2 1 3 3 3 1 3 Output Yes Yes No\n\n",
        "cf_contest_id": 1351,
        "cf_index": "B",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2 3\r\n3 1\r\n3 2\r\n1 3\r\n3 3\r\n1 3\r\n",
                "YES\r\nYES\r\nNO \r\n"
            ]
        ],
        "private_cases": []
    }
]