[
    {
        "name": "Build From Suffixes",
        "description": "You are given an integer \n    n\n and a sequence \n    a\n of \n    n-1\n integers,\neach element is either \n    0\n or \n    1\n. You are asked to build a string of\nlength \n    n\n such that: each letter is one of \"abcd\"; if \n    a_i=1\n, then\nthe \n    i\n-th suffix of the string is lexicographically smaller than the\n\n    (i+1)\n-th suffix; if \n    a_i=0\n, then the \n    i\n-th suffix of the\nstring is lexicographically greater than the \n    (i+1)\n-th suffix. You will\nbe asked \n    q\n queries of form: \n    i\n (\n    1 \n    \u2264 i \n    \u2264 n - 1\n) \u2014 flip\nthe value of \n    a_i\n (if \n    a_i=0\n, then set \n    a_i\n to \n    1\n, and\nvice versa). After each query print the number of different strings that\nsatisfy the given constraints modulo \n    998\n     244\n     353\n. Input The first\nline contains two integers \n    n\n and \n    q\n (\n    2 \n    \u2264 n \n    \u2264 10^5\n;\n\n    1 \n    \u2264 q \n    \u2264 10^5\n) \u2014 the length of the string and the number of\nqueries. The second line contains \n    n-1\n integers \n    a_1, a_2, \n    \u2026,\n    a_n-1\n (\n    a_i \n    \u2208\n    \n    0, 1\n) \u2014 the constraints on suffixes of\nthe string. Each of the next \n    q\n lines contains a query: an integer\n\n    i\n (\n    1 \n    \u2264 i \n    \u2264 n - 1\n) \u2014 flip the value of \n    a_i\n (if\n\n    a_i=0\n, then set \n    a_i\n to \n    1\n, and vice versa). Output After each\nquery print the number of different strings that satisfy the given constraints\nmodulo \n    998\n     244\n     353\n. Examples Input 2 2 0 1 1 Output 6 10 Input 3 4\n0 0 1 2 1 2 Output 20 10 14 20 Input 10 10 0 0 0 1 1 1 0 1 0 4 1 8 4 2 9 5 6 6\n8 Output 1815 3201 2710 2776 2290 1644 2668 1271 2668 2436 Note The \n    i\n-th\nsuffix of a string is a continuous substring that starts from the \n    i\n-th\nposition and ends in the last position. A string \n    a\n is lexicographically\nsmaller than a string \n    b\n if and only if one of the following holds:\n\n    a\n is a prefix of \n    b\n, but \n    a \n     b\n; in the first position\nwhere \n    a\n and \n    b\n differ, the string \n    a\n has a letter that appears\nearlier in the alphabet than the corresponding letter in \n    b\n. Two strings\n\n    a\n and \n    b\n of length \n    n\n differ if there exists a position\n\n    i\n such that \n    a_i \n    \u2260 b_i\n.\n\n",
        "cf_contest_id": 1488,
        "cf_index": "H",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "*special",
            "combinatorics",
            "data structures"
        ],
        "time_limit_seconds": 10.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "2 2\r\n0\r\n1\r\n1\r\n",
                "6\r\n10\r\n"
            ],
            [
                "3 4\r\n0 0\r\n1\r\n2\r\n1\r\n2\r\n",
                "20\r\n10\r\n14\r\n20\r\n"
            ],
            [
                "10 10\r\n0 0 0 1 1 1 0 1 0\r\n4\r\n1\r\n8\r\n4\r\n2\r\n9\r\n5\r\n6\r\n6\r\n8\r\n",
                "1815\r\n3201\r\n2710\r\n2776\r\n2290\r\n1644\r\n2668\r\n1271\r\n2668\r\n2436\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 10\r\n1 1 0\r\n2\r\n3\r\n2\r\n3\r\n2\r\n2\r\n3\r\n3\r\n1\r\n2\r\n",
                "45\r\n31\r\n15\r\n35\r\n45\r\n35\r\n15\r\n35\r\n45\r\n35\r\n"
            ],
            [
                "5 10\r\n1 1 0 0\r\n3\r\n3\r\n4\r\n4\r\n2\r\n4\r\n4\r\n2\r\n1\r\n4\r\n",
                "54\r\n81\r\n54\r\n81\r\n84\r\n61\r\n84\r\n81\r\n99\r\n70\r\n"
            ]
        ]
    }
]