[
    {
        "name": "Minimum Difficulty",
        "description": "Mike is trying rock climbing but he is awful at it. There are n holds on the\nwall, i-th hold is at height ai off the ground. Besides, let the sequence ai\nincrease, that is, ai < ai + 1 for all i from 1 to n - 1; we will call such\nsequence a track. Mike thinks that the track a1, ..., an has difficulty . In\nother words, difficulty equals the maximum distance between two holds that are\nadjacent in height. Today Mike decided to cover the track with holds hanging\non heights a1, ..., an. To make the problem harder, Mike decided to remove one\nhold, that is, remove one element of the sequence (for example, if we take the\nsequence (1, 2, 3, 4, 5) and remove the third element from it, we obtain the\nsequence (1, 2, 4, 5)). However, as Mike is awful at climbing, he wants the\nfinal difficulty (i.e. the maximum difference of heights between adjacent\nholds after removing the hold) to be as small as possible among all possible\noptions of removing a hold. The first and last holds must stay at their\npositions. Help Mike determine the minimum difficulty of the track after\nremoving one hold. Input The first line contains a single integer n (3 \u2264 n \u2264\n100) \u2014 the number of holds. The next line contains n space-separated integers\nai (1 \u2264 ai \u2264 1000), where ai is the height where the hold number i hangs. The\nsequence ai is increasing (i.e. each element except for the first one is\nstrictly larger than the previous one). Output Print a single number \u2014 the\nminimum difficulty of the track after removing a single hold. Examples Input 3\n1 4 6 Output 5 Input 5 1 2 3 4 5 Output 2 Input 5 1 2 3 7 8 Output 4 Note In\nthe first sample you can remove only the second hold, then the sequence looks\nlike (1, 6), the maximum difference of the neighboring elements equals 5. In\nthe second test after removing every hold the difficulty equals 2. In the\nthird test you can obtain sequences (1, 3, 7, 8), (1, 2, 7, 8), (1, 2, 3, 8),\nfor which the difficulty is 4, 5 and 5, respectively. Thus, after removing the\nsecond element we obtain the optimal answer \u2014 4.\n\n",
        "cf_contest_id": 496,
        "cf_index": "A",
        "cf_rating": 900,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation",
            "math"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 4 6\r\n",
                "5"
            ],
            [
                "5\r\n1 2 3 4 5\r\n",
                "2"
            ],
            [
                "5\r\n1 2 3 7 8\r\n",
                "4"
            ]
        ],
        "private_cases": [
            [
                "3\r\n1 500 1000\r\n",
                "999"
            ],
            [
                "10\r\n1 2 3 4 5 6 7 8 9 10\r\n",
                "2"
            ],
            [
                "10\r\n1 4 9 16 25 36 49 64 81 100\r\n",
                "19"
            ],
            [
                "10\r\n300 315 325 338 350 365 379 391 404 416\r\n",
                "23"
            ],
            [
                "15\r\n87 89 91 92 93 95 97 99 101 103 105 107 109 111 112\r\n",
                "2"
            ],
            [
                "60\r\n3 5 7 8 15 16 18 21 24 26 40 41 43 47 48 49 50 51 52 54 55 60 62 71 74 84 85 89 91 96 406 407 409 412 417 420 423 424 428 431 432 433 436 441 445 446 447 455 458 467 469 471 472 475 480 485 492 493 497 500\r\n",
                "310"
            ],
            [
                "3\r\n159 282 405\r\n",
                "246"
            ],
            [
                "81\r\n6 7 22 23 27 38 40 56 59 71 72 78 80 83 86 92 95 96 101 122 125 127 130 134 154 169 170 171 172 174 177 182 184 187 195 197 210 211 217 223 241 249 252 253 256 261 265 269 274 277 291 292 297 298 299 300 302 318 338 348 351 353 381 386 387 397 409 410 419 420 428 430 453 460 461 473 478 493 494 500 741\r\n",
                "241"
            ],
            [
                "10\r\n218 300 388 448 535 629 680 740 836 925\r\n",
                "111"
            ],
            [
                "100\r\n6 16 26 36 46 56 66 76 86 96 106 116 126 136 146 156 166 176 186 196 206 216 226 236 246 256 266 276 286 296 306 316 326 336 346 356 366 376 386 396 406 416 426 436 446 456 466 476 486 496 506 516 526 536 546 556 566 576 586 596 606 616 626 636 646 656 666 676 686 696 706 716 726 736 746 756 766 776 786 796 806 816 826 836 846 856 866 876 886 896 906 916 926 936 946 956 966 976 986 996\r\n",
                "20"
            ],
            [
                "100\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000\r\n",
                "901"
            ],
            [
                "100\r\n1 9 15 17 28 29 30 31 32 46 48 49 52 56 62 77 82 85 90 91 94 101 102 109 111 113 116 118 124 125 131 132 136 138 139 143 145 158 161 162 165 167 171 173 175 177 179 183 189 196 801 802 804 806 817 819 827 830 837 840 842 846 850 855 858 862 863 866 869 870 878 881 883 884 896 898 899 901 904 906 908 909 910 911 912 917 923 924 925 935 939 943 945 956 963 964 965 972 976 978\r\n",
                "605"
            ],
            [
                "100\r\n2 43 47 49 50 57 59 67 74 98 901 903 904 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 938 939 940 942 943 944 945 946 947 948 949 950 952 953 954 956 957 958 959 960 961 962 963 965 966 967 968 969 970 971 972 973 974 975 976 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 998 999\r\n",
                "803"
            ],
            [
                "72\r\n178 186 196 209 217 226 236 248 260 273 281 291 300 309 322 331 343 357 366 377 389 399 409 419 429 442 450 459 469 477 491 501 512 524 534 548 557 568 582 593 602 616 630 643 652 660 670 679 693 707 715 728 737 750 759 768 776 789 797 807 815 827 837 849 863 873 881 890 901 910 920 932\r\n",
                "17"
            ],
            [
                "38\r\n1 28 55 82 109 136 163 190 217 244 271 298 325 352 379 406 433 460 487 514 541 568 595 622 649 676 703 730 757 784 811 838 865 892 919 946 973 1000\r\n",
                "54"
            ],
            [
                "28\r\n1 38 75 112 149 186 223 260 297 334 371 408 445 482 519 556 593 630 667 704 741 778 815 852 889 926 963 1000\r\n",
                "74"
            ]
        ]
    }
]