[
    {
        "name": "Patchouli's Magical Talisman",
        "description": "She is skilled in all kinds of magics, and is keen on inventing new one.\n\u2014Perfect Memento in Strict Sense Patchouli is making a magical talisman. She\ninitially has \n    n\n magical tokens. Their magical power can be represented\nwith positive integers \n    a_1, a_2, \n    \u2026, a_n\n. Patchouli may perform\nthe following two operations on the tokens. Fusion: Patchouli chooses two\ntokens, removes them, and creates a new token with magical power equal to the\nsum of the two chosen tokens. Reduction: Patchouli chooses a token with an\neven value of magical power \n    x\n, removes it and creates a new token with\nmagical power equal to \n    x/2\n. Tokens are more effective when\ntheir magical powers are odd values. Please help Patchouli to find the minimum\nnumber of operations she needs to make magical powers of all tokens odd\nvalues. Input Each test contains multiple test cases. The first line contains\na single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^3\n) \u2014 the number of test\ncases. The description of the test cases follows. For each test case, the\nfirst line contains one integer \n    n\n (\n    1 \n    \u2264 n\n    \u2264 2\n    \u00b7 10^5\n)\n\u2014 the initial number of tokens. The second line contains \n    n\n intergers\n\n    a_1,a_2,\n    \u2026,a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the initial\nmagical power of the \n    n\n tokens. It is guaranteed that the sum of \n    n\n\nover all test cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test\ncase, print a single integer \u2014 the minimum number of operations Patchouli\nneeds to make all tokens have an odd value of magical power. It can be shown\nthat under such restrictions the required sequence of operations exists.\nExample Input 4 2 1 9 3 1 1 2 3 2 4 8 3 1049600 33792 1280 Output 0 1 3 10\nNote Test case 1: \n    a\n consists solely of odd numbers initially. Test case\n2: Choose the tokens with magical power of \n    1\n and \n    2\n and perform\nFusion. Now \n    a=[1,3]\n, both are odd numbers. Test case 3: Choose the\ntokens with magical power of \n    2\n and \n    8\n and perform Fusion. Now\n\n    a=[4,10]\n. Choose the token with magical power of \n    10\n and perform\nReduction. Now \n    a=[4,5]\n. Choose the tokens with magical power of \n    4\n\nand \n    5\n and perform Fusion. Now \n    a=[9]\n, and \n    9\n is an odd number.\nIt can be shown that you can not make all the magical powers odd numbers in\nless than \n    3\n moves, so the answer is \n    3\n.\n\n",
        "cf_contest_id": 1688,
        "cf_index": "B",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "constructive algorithms",
            "greedy",
            "sortings"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n2\r\n1 9\r\n3\r\n1 1 2\r\n3\r\n2 4 8\r\n3\r\n1049600 33792 1280\r\n",
                "0\r\n1\r\n3\r\n10\r\n"
            ]
        ],
        "private_cases": []
    }
]