[
    {
        "name": "Dima and Continuous Line",
        "description": "Dima and Seryozha live in an ordinary dormitory room for two. One day Dima had\na date with his girl and he asked Seryozha to leave the room. As a\ncompensation, Seryozha made Dima do his homework. The teacher gave Seryozha\nthe coordinates of n distinct points on the abscissa axis and asked to\nconsecutively connect them by semi-circus in a certain order: first connect\nthe first point with the second one, then connect the second point with the\nthird one, then the third one with the fourth one and so on to the n-th point.\nTwo points with coordinates (x1, 0) and (x2, 0) should be connected by a semi-\ncircle that passes above the abscissa axis with the diameter that coincides\nwith the segment between points. Seryozha needs to find out if the line on the\npicture intersects itself. For clarifications, see the picture Seryozha showed\nto Dima (the left picture has self-intersections, the right picture doesn't\nhave any). Seryozha is not a small boy, so the coordinates of the points can\nbe rather large. Help Dima cope with the problem. Input The first line\ncontains a single integer n (1 \u2264 n \u2264 10^3). The second line contains n\ndistinct integers x1, x2, ..., xn ( - 10^6 \u2264 xi \u2264 10^6) \u2014 the i-th point has\ncoordinates (xi, 0). The points are not necessarily sorted by their x\ncoordinate. Output In the single line print \"yes\" (without the quotes), if the\nline has self-intersections. Otherwise, print \"no\" (without the quotes).\nExamples Input 4 0 10 5 15 Output yes Input 4 0 15 5 10 Output no Note The\nfirst test from the statement is on the picture to the left, the second test\nis on the picture to the right.\n\n",
        "cf_contest_id": 358,
        "cf_index": "A",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n0 10 5 15\r\n",
                "yes\n"
            ],
            [
                "4\r\n0 15 5 10\r\n",
                "no\n"
            ]
        ],
        "private_cases": [
            [
                "5\r\n0 1000 2000 3000 1500\r\n",
                "yes\n"
            ],
            [
                "5\r\n-724093 710736 -383722 -359011 439613\r\n",
                "no\n"
            ],
            [
                "50\r\n384672 661179 -775591 -989608 611120 442691 601796 502406 384323 -315945 -934146 873993 -156910 -94123 -930137 208544 816236 466922 473696 463604 794454 -872433 -149791 -858684 -467655 -555239 623978 -217138 -408658 493342 -733576 -350871 711210 884148 -426172 519986 -356885 527171 661680 977247 141654 906254 -961045 -759474 -48634 891473 -606365 -513781 -966166 27696\r\n",
                "yes\n"
            ],
            [
                "100\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n",
                "no\n"
            ],
            [
                "11\r\n1 11 10 2 3 9 8 4 5 7 6\r\n",
                "no\n"
            ],
            [
                "10\r\n3 2 4 5 1 6 9 7 8 10\r\n",
                "yes\n"
            ],
            [
                "11\r\n3 4 2 5 1 6 11 7 10 8 9\r\n",
                "no\n"
            ],
            [
                "15\r\n0 -1 1 2 3 13 12 4 11 10 5 6 7 9 8\r\n",
                "no\n"
            ],
            [
                "16\r\n6 7 8 9 5 10 11 12 13 14 15 4 16 2 1 3\r\n",
                "yes\n"
            ],
            [
                "1\r\n0\r\n",
                "no\n"
            ],
            [
                "4\r\n3 1 4 2\r\n",
                "yes\n"
            ],
            [
                "5\r\n0 2 4 -2 5\r\n",
                "no\n"
            ],
            [
                "5\r\n1 9 8 7 0\r\n",
                "yes\n"
            ],
            [
                "3\r\n5 10 0\r\n",
                "no\n"
            ],
            [
                "6\r\n1 3 -1 5 2 4\r\n",
                "yes\n"
            ],
            [
                "4\r\n3 2 4 1\r\n",
                "no\n"
            ],
            [
                "4\r\n10 5 15 0\r\n",
                "no\n"
            ],
            [
                "2\r\n-5 -10\r\n",
                "no\n"
            ],
            [
                "3\r\n1 0 3\r\n",
                "no\n"
            ],
            [
                "4\r\n-2 -4 1 -3\r\n",
                "yes\n"
            ],
            [
                "4\r\n3 6 0 2\r\n",
                "no\n"
            ],
            [
                "4\r\n-9 10 -10 0\r\n",
                "yes\n"
            ],
            [
                "4\r\n5 10 1 15\r\n",
                "no\n"
            ],
            [
                "3\r\n1 0 2\r\n",
                "no\n"
            ],
            [
                "4\r\n2 3 4 1\r\n",
                "no\n"
            ],
            [
                "4\r\n7 5 9 12\r\n",
                "no\n"
            ]
        ]
    }
]