[
    {
        "name": "Xor Tree",
        "description": "For a given sequence of distinct non-negative integers \n    (b_1, b_2, \n    \u2026,\n    b_k)\n we determine if it is good in the following way: Consider a graph on\n\n    k\n nodes, with numbers from \n    b_1\n to \n    b_k\n written on them. For\nevery \n    i\n from \n    1\n to \n    k\n: find such \n    j\n (\n    1 \n    \u2264 j \n    \u2264\n    k\n, \n    j\n    \u2260 i\n), for which \n    (b_i \n    \u2295 b_j)\n is the smallest\namong all such \n    j\n, where \n    \u2295\n denotes the operation of bitwise\nXOR (https://en.wikipedia.org/wiki/Bitwise_operation#XOR). Next, draw an\nundirected edge between vertices with numbers \n    b_i\n and \n    b_j\n in this\ngraph. We say that the sequence is good if and only if the resulting graph\nforms a tree (is connected and doesn't have any simple cycles). It is possible\nthat for some numbers \n    b_i\n and \n    b_j\n, you will try to add the edge\nbetween them twice. Nevertheless, you will add this edge only once. You can\nfind an example below (the picture corresponding to the first test case).\nSequence \n    (0, 1, 5, 2, 6)\n is not good as we cannot reach \n    1\n from\n\n    5\n. However, sequence \n    (0, 1, 5, 2)\n is good. You are given a\nsequence \n    (a_1, a_2, \n    \u2026, a_n)\n of distinct non-negative integers. You\nwould like to remove some of the elements (possibly none) to make the\nremaining sequence good. What is the minimum possible number of removals\nrequired to achieve this goal? It can be shown that for any sequence, we can\nremove some number of elements, leaving at least \n    2\n, so that the\nremaining sequence is good. Input The first line contains a single integer\n\n    n\n (\n    2 \n    \u2264 n \n    \u2264 200,000\n) \u2014 length of the sequence. The second\nline contains \n    n\n distinct non-negative integers \n    a_1, a_2, \n    \u2026,\n    a_n\n (\n    0 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014 the elements of the sequence. Output\nYou should output exactly one integer \u2014 the minimum possible number of\nelements to remove in order to make the remaining sequence good. Examples\nInput 5 0 1 5 2 6 Output 1 Input 7 6 9 8 7 3 5 2 Output 2 Note Note that\nnumbers which you remove don't impact the procedure of telling whether the\nresulting sequence is good. It is possible that for some numbers \n    b_i\n and\n\n    b_j\n, you will try to add the edge between them twice. Nevertheless, you\nwill add this edge only once.\n\n",
        "cf_contest_id": 1446,
        "cf_index": "C",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "bitmasks",
            "data structures",
            "divide and conquer",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\n0 1 5 2 6\r\n",
                "1\r\n"
            ],
            [
                "7\r\n6 9 8 7 3 5 2\r\n",
                "2\r\n"
            ]
        ],
        "private_cases": [
            [
                "7\r\n32 35 2 20 52 59 28\r\n",
                "3\r\n"
            ],
            [
                "31\r\n59 189 95 1 107 144 39 5 174 124 100 46 94 84 67 26 56 165 140 157 128 130 35 14 24 182 90 66 173 62 109\r\n",
                "23\r\n"
            ],
            [
                "2\r\n0 1000000000\r\n",
                "0\r\n"
            ],
            [
                "3\r\n4 9 1\r\n",
                "0\r\n"
            ],
            [
                "7\r\n12 11 0 13 3 1 9\r\n",
                "3\r\n"
            ],
            [
                "2\r\n9 8\r\n",
                "0\r\n"
            ],
            [
                "13\r\n30 35 32 36 23 24 47 19 22 1 60 8 11\r\n",
                "7\r\n"
            ],
            [
                "14\r\n39 16 34 2 15 19 30 43 37 36 51 33 13 55\r\n",
                "7\r\n"
            ],
            [
                "91\r\n17 103 88 138 9 153 65 105 140 44 175 46 55 2 70 11 10 156 120 24 99 147 48 124 180 178 38 159 133 41 131 155 79 166 163 22 118 119 53 66 132 125 146 109 37 75 35 148 164 13 183 152 170 98 160 43 0 165 110 106 122 157 81 134 135 83 31 162 176 42 49 33 54 16 30 115 3 71 59 74 69 56 168 151 28 61 95 127 52 150 64\r\n",
                "82\r\n"
            ],
            [
                "109\r\n74 18 237 179 195 112 156 11 72 68 173 202 78 250 224 251 107 55 186 144 57 62 28 210 132 64 93 6 211 0 174 163 248 226 167 246 46 102 253 180 121 56 151 35 150 254 168 201 242 118 190 158 196 30 75 116 187 96 215 244 192 73 12 175 33 222 131 256 181 230 114 165 128 234 63 90 44 70 229 182 101 69 92 26 205 171 130 249 23 106 220 240 241 47 42 223 216 178 161 113 225 53 94 209 146 162 15 198 159\r\n",
                "99\r\n"
            ]
        ]
    }
]