[
    {
        "name": "Array and Operations",
        "description": "You have written on a piece of paper an array of n positive integers a[1],\na[2], ..., a[n] and m good pairs of integers (i1, j1), (i2, j2), ..., (im,\njm). Each good pair (ik, jk) meets the following conditions: ik + jk is an odd\nnumber and 1 \u2264 ik < jk \u2264 n. In one operation you can perform a sequence of\nactions: take one of the good pairs (ik, jk) and some integer v (v > 1), which\ndivides both numbers a[ik] and a[jk]; divide both numbers by v, i. e. perform\nthe assignments: and . Determine the maximum number of operations you can\nsequentially perform on the given array. Note that one pair may be used\nseveral times in the described operations. Input The first line contains two\nspace-separated integers n, m (2 \u2264 n \u2264 100, 1 \u2264 m \u2264 100). The second line\ncontains n space-separated integers a[1], a[2], ..., a[n] (1 \u2264 a[i] \u2264 10^9) \u2014\nthe description of the array. The following m lines contain the description of\ngood pairs. The k-th line contains two space-separated integers ik, jk (1 \u2264 ik\n< jk \u2264 n, ik + jk is an odd number). It is guaranteed that all the good pairs\nare distinct. Output Output the answer for the problem. Examples Input 3 2 8 3\n8 1 2 2 3 Output 0 Input 3 2 8 12 8 1 2 2 3 Output 2\n\n",
        "cf_contest_id": 498,
        "cf_index": "C",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "flows",
            "graph matchings",
            "number theory"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 2\r\n8 3 8\r\n1 2\r\n2 3\r\n",
                "0"
            ],
            [
                "3 2\r\n8 12 8\r\n1 2\r\n2 3\r\n",
                "2"
            ]
        ],
        "private_cases": [
            [
                "6 4\r\n35 33 46 58 7 61\r\n4 5\r\n3 6\r\n5 6\r\n1 6\r\n",
                "0"
            ],
            [
                "10 25\r\n262144 262144 64 64 16 134217728 32 512 32 8192\r\n1 2\r\n3 10\r\n5 8\r\n9 10\r\n2 5\r\n5 10\r\n3 6\r\n3 8\r\n2 9\r\n4 5\r\n8 9\r\n1 4\r\n4 9\r\n3 4\r\n1 6\r\n4 7\r\n7 8\r\n5 6\r\n2 3\r\n1 10\r\n1 8\r\n6 9\r\n6 7\r\n2 7\r\n7 10\r\n",
                "38"
            ],
            [
                "10 9\r\n67108864 8 2 131072 268435456 256 16384 128 8 128\r\n4 9\r\n5 10\r\n6 9\r\n9 10\r\n1 4\r\n3 8\r\n8 9\r\n1 2\r\n4 5\r\n",
                "31"
            ],
            [
                "20 10\r\n512 64 536870912 256 1 262144 8 2097152 8192 524288 32 2 16 16777216 524288 64 268435456 256 67108864 131072\r\n17 20\r\n2 13\r\n11 12\r\n18 19\r\n4 7\r\n4 13\r\n8 9\r\n14 17\r\n8 19\r\n7 10\r\n",
                "65"
            ],
            [
                "20 19\r\n512 524288 268435456 2048 16384 8192 524288 16777216 128 536870912 256 1 32768 2097152 131072 268435456 262144 134217728 8388608 16\r\n3 20\r\n5 12\r\n19 20\r\n10 15\r\n3 18\r\n3 4\r\n6 19\r\n3 14\r\n3 16\r\n5 10\r\n3 12\r\n5 20\r\n12 17\r\n6 9\r\n13 18\r\n2 11\r\n7 12\r\n6 11\r\n2 15\r\n",
                "99"
            ],
            [
                "20 19\r\n4 65536 2097152 512 16777216 262144 4096 4096 64 32 268435456 2 2048 128 512 1048576 524288 1024 512 536870912\r\n10 15\r\n16 17\r\n15 18\r\n19 20\r\n9 12\r\n2 9\r\n12 19\r\n8 19\r\n2 11\r\n4 17\r\n2 5\r\n7 18\r\n7 10\r\n17 20\r\n9 10\r\n4 15\r\n10 19\r\n5 18\r\n1 16\r\n",
                "71"
            ],
            [
                "22 2\r\n2097152 2048 1024 134217728 536870912 2097152 32768 2 16777216 67108864 4194304 4194304 512 16 1048576 8 16384 131072 8388608 8192 2097152 4\r\n9 10\r\n14 21\r\n",
                "28"
            ],
            [
                "10 25\r\n2048 536870912 64 65536 524288 2048 4194304 131072 8 128\r\n7 10\r\n3 6\r\n8 9\r\n9 10\r\n1 2\r\n1 8\r\n2 9\r\n2 3\r\n4 7\r\n5 6\r\n5 8\r\n6 9\r\n1 4\r\n3 10\r\n4 5\r\n3 8\r\n5 10\r\n6 7\r\n2 7\r\n1 10\r\n4 9\r\n1 6\r\n3 4\r\n2 5\r\n7 8\r\n",
                "61"
            ],
            [
                "2 1\r\n1020407 1020407\r\n1 2\r\n",
                "1"
            ],
            [
                "8 6\r\n1020407 1020407 1020407 1020407 1020407 1020407 1020407 1020407\r\n1 2\r\n1 4\r\n2 3\r\n5 6\r\n6 7\r\n7 8\r\n",
                "4"
            ],
            [
                "2 1\r\n9999991 9999991\r\n1 2\r\n",
                "1"
            ],
            [
                "2 1\r\n19961993 19961993\r\n1 2\r\n",
                "1"
            ],
            [
                "5 3\r\n1 2 2 2 2\r\n2 3\r\n3 4\r\n2 5\r\n",
                "2"
            ],
            [
                "2 1\r\n10 10\r\n1 2\r\n",
                "2"
            ],
            [
                "5 3\r\n1 1000003 1000003 1000003 1000003\r\n2 3\r\n3 4\r\n2 5\r\n",
                "2"
            ],
            [
                "6 3\r\n12 7 8 12 7 8\r\n1 4\r\n1 6\r\n3 4\r\n",
                "5"
            ],
            [
                "4 3\r\n2 2 2 2\r\n1 2\r\n1 4\r\n2 3\r\n",
                "2"
            ],
            [
                "6 3\r\n12 3 4 12 8 8\r\n1 4\r\n4 5\r\n1 6\r\n",
                "5"
            ]
        ]
    }
]