[
    {
        "name": "Mushroom Gnomes",
        "description": "Once upon a time in the thicket of the mushroom forest lived mushroom gnomes.\nThey were famous among their neighbors for their magic mushrooms. Their magic\nnature made it possible that between every two neighboring mushrooms every\nminute grew another mushroom with the weight equal to the sum of weights of\ntwo neighboring ones. The mushroom gnomes loved it when everything was in\norder, that's why they always planted the mushrooms in one line in the order\nof their weights' increasing. Well... The gnomes planted the mushrooms and\nwent to eat. After x minutes they returned and saw that new mushrooms had\ngrown up, so that the increasing order had been violated. The gnomes replanted\nall the mushrooms in the correct order, that is, they sorted the mushrooms in\nthe order of the weights' increasing. And went to eat again (those gnomes were\nquite big eaters). What total weights modulo p will the mushrooms have in\nanother y minutes? Input The first line contains four integers n, x, y, p (1 \u2264\nn \u2264 10^6, 0 \u2264 x, y \u2264 10^18, x + y > 0, 2 \u2264 p \u2264 10^9) which represent the\nnumber of mushrooms, the number of minutes after the first replanting, the\nnumber of minutes after the second replanting and the module. The next line\ncontains n integers ai which represent the mushrooms' weight in the non-\ndecreasing order (0 \u2264 ai \u2264 10^9). Please, do not use \nor write 64-bit integers in C++. It is preffered to use cin (also you may use\n\nweights of the mushrooms modulo p in the end after x + y minutes. Examples\nInput 2 1 0 657276545 1 2 Output 6 Input 2 1 1 888450282 1 2 Output 14 Input 4\n5 0 10000 1 2 3 4 Output 1825\n\n",
        "cf_contest_id": 60,
        "cf_index": "E",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "math",
            "matrices"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1 0 657276545\r\n1 2\r\n",
                "6"
            ],
            [
                "2 1 1 888450282\r\n1 2\r\n",
                "14"
            ],
            [
                "4 5 0 10000\r\n1 2 3 4\r\n",
                "1825"
            ]
        ],
        "private_cases": [
            [
                "4 0 8 78731972\r\n1 52 76 81\r\n",
                "1108850"
            ],
            [
                "4 0 8 414790855\r\n1 88 97 99\r\n",
                "1541885"
            ],
            [
                "11 10 6 560689961\r\n2 17 20 24 32 37 38 39 40 61 86\r\n",
                "9840917"
            ],
            [
                "8 4 9 371687114\r\n1 7 22 31 35 38 62 84\r\n",
                "1827639"
            ],
            [
                "4 8 6 398388678\r\n21 22 78 88\r\n",
                "338926799"
            ],
            [
                "49 46 48 698397508\r\n1098 1160 1173 1269 1438 1731 2082 2361 2602 2655 2706 2788 2957 3014 3142 3269 3338 3814 3849 3972 4618 4798 4809 5280 5642 5681 5699 6320 6427 6493 6827 7367 7413 7492 7667 7684 7850 8130 8302 8666 8709 8945 9022 9095 9391 9434 9557 9724 9781\r\n",
                "691613145"
            ],
            [
                "33 93 37 411512841\r\n71 76 339 357 511 822 1564 1747 1974 2499 2763 3861 3950 4140 4306 4992 5056 5660 5694 5773 6084 6512 6742 6898 7133 8616 8772 8852 8918 9046 9572 9679 9708\r\n",
                "158919800"
            ],
            [
                "62 47 14 888621154\r\n202 268 300 401 422 660 782 822 1164 1300 1571 1670 1713 1807 2677 2700 2747 2873 2956 3068 3798 4159 4221 4232 4485 4507 4803 5071 5161 5161 5595 5600 5623 5846 5867 5949 6140 6560 6727 6781 6873 7159 7218 7232 7241 7333 7369 7415 7486 7506 7538 7681 7781 8074 8783 8861 9208 9313 9339 9512 9831 9877\r\n",
                "588339858"
            ],
            [
                "1 1 0 2\r\n1\r\n",
                "1"
            ],
            [
                "1 1 1 2\r\n1000000000\r\n",
                "0"
            ],
            [
                "1 1 1 2\r\n0\r\n",
                "0"
            ],
            [
                "1 1 1 2\r\n2\r\n",
                "0"
            ],
            [
                "1 0 1 1000000000\r\n0\r\n",
                "0"
            ],
            [
                "1 1 1 1000000000\r\n1\r\n",
                "1"
            ],
            [
                "1 0 1 1000000000\r\n1000000000\r\n",
                "0"
            ],
            [
                "2 1 1 1000\r\n0 0\r\n",
                "0"
            ],
            [
                "2 1000000000 1000000000000 10000\r\n1 2\r\n",
                "3"
            ]
        ]
    }
]