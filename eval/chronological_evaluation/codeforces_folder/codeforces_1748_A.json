[
    {
        "name": "The Ultimate Square",
        "description": "You have \n    n\n rectangular wooden blocks, which are numbered from \n    1\n to\n\n    n\n. The \n    i\n-th block is \n    1\n unit high and \n    \u2308\n    i/2\n    \u2309\n units long. Here, \n    \u2308\n    x/2\n    \u2309\n denotes the result of division of \n    x\n by \n    2\n, rounded up.\nFor example, \n    \u2308\n    4/2\n    \u2309 = 2\n and \n    \u2308\n    5/2\n    \u2309 = \n    \u2308 2.5 \n    \u2309 = 3\n. For example, if\n\n    n=5\n, then the blocks have the following sizes: \n    1 \n    \u00d7 1\n, \n    1\n    \n    \u00d7 1\n, \n    1 \n    \u00d7 2\n, \n    1 \n    \u00d7 2\n, \n    1 \n    \u00d7 3\n. The\navailable blocks for \n    n=5\n Find the maximum possible side length of a\nsquare you can create using these blocks, without rotating any of them. Note\nthat you don't have to use all of the blocks. One of the ways to create \n    3\n    \n    \u00d7 3\n square using blocks \n    1\n through \n    5\n Input Each test\ncontains multiple test cases. The first line contains a single integer \n    t\n\n(\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test cases. The first line of\neach test case contains a single integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 10^9\n)\n\u2014 the number of blocks. Output For each test case, print one integer \u2014 the\nmaximum possible side length of a square you can create. Example Input 3 2 5\n197654321 Output 1 3 98827161 Note In the first test case, you can create a\n\n    1 \n    \u00d7 1\n square using only one of the blocks. In the second test\ncase, one of the possible ways to create a \n    3 \n    \u00d7 3\n square is shown\nin the statement. It is impossible to create a \n    4 \n    \u00d7 4\n or larger\nsquare, so the answer is \n    3\n.\n\n",
        "cf_contest_id": 1748,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n2\r\n5\r\n197654321\r\n",
                "1\r\n3\r\n98827161\r\n"
            ]
        ],
        "private_cases": []
    }
]