[
    {
        "name": "Penalty",
        "description": "Consider a simplified penalty phase at the end of a football match. A penalty\nphase consists of at most \n    10\n kicks, the first team takes the first kick,\nthe second team takes the second kick, then the first team takes the third\nkick, and so on. The team that scores more goals wins; if both teams score the\nsame number of goals, the game results in a tie (note that it goes against the\nusual football rules). The penalty phase is stopped if one team has scored\nmore goals than the other team could reach with all of its remaining kicks.\nFor example, if after the \n    7\n-th kick the first team has scored \n    1\n\ngoal, and the second team has scored \n    3\n goals, the penalty phase ends \u2014\nthe first team cannot reach \n    3\n goals. You know which player will be\ntaking each kick, so you have your predictions for each of the \n    10\n kicks.\nThese predictions are represented by a string \n    s\n consisting of \n    10\n\ncharacters. Each character can either be 1, 0, or ?. This string represents\nyour predictions in the following way: if \n    s_i\n is 1, then the \n    i\n-th\nkick will definitely score a goal; if \n    s_i\n is 0, then the \n    i\n-th kick\ndefinitely won't score a goal; if \n    s_i\n is ?, then the \n    i\n-th kick\ncould go either way. Based on your predictions, you have to calculate the\nminimum possible number of kicks there can be in the penalty phase (that\nmeans, the earliest moment when the penalty phase is stopped, considering all\npossible ways it could go). Note that the referee doesn't take into account\nany predictions when deciding to stop the penalty phase \u2014 you may know that\nsome kick will/won't be scored, but the referee doesn't. Input The first line\ncontains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1\n     000\n) \u2014 the number of\ntest cases. Each test case is represented by one line containing the string\n\n    s\n, consisting of exactly \n    10\n characters. Each character is either\n1, 0, or ?. Output For each test case, print one integer \u2014 the minimum\npossible number of kicks in the penalty phase. Example Input 4 1?0???1001\n1111111111 ?????????? 0100000000 Output 7 10 6 9 Note Consider the example\ntest: In the first test case, consider the situation when the \n    1\n-st,\n\n    5\n-th and \n    7\n-th kicks score goals, and kicks \n    2\n, \n    3\n,\n\n    4\n and \n    6\n are unsuccessful. Then the current number of goals for the\nfirst team is \n    3\n, for the second team is \n    0\n, and the referee sees\nthat the second team can score at most \n    2\n goals in the remaining kicks.\nSo the penalty phase can be stopped after the \n    7\n-th kick. In the second\ntest case, the penalty phase won't be stopped until all \n    10\n kicks are\nfinished. In the third test case, if the first team doesn't score any of its\nthree first kicks and the second team scores all of its three first kicks,\nthen after the \n    6\n-th kick, the first team has scored \n    0\n goals and\nthe second team has scored \n    3\n goals, and the referee sees that the first\nteam can score at most \n    2\n goals in the remaining kicks. So, the penalty\nphase can be stopped after the \n    6\n-th kick. In the fourth test case, even\nthough you can predict the whole penalty phase, the referee understands that\nthe phase should be ended only after the \n    9\n-th kick.\n\n",
        "cf_contest_id": 1553,
        "cf_index": "C",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "brute force",
            "dp",
            "greedy"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n1?0???1001\r\n1111111111\r\n??????????\r\n0100000000\r\n",
                "7\r\n10\r\n6\r\n9\r\n"
            ]
        ],
        "private_cases": []
    }
]