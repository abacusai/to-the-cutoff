[
    {
        "name": "Special Task",
        "description": "Special Agent Smart Beaver works in a secret research department of ABBYY.\nHe's been working there for a long time and is satisfied with his job, as it\nallows him to eat out in the best restaurants and order the most expensive and\nexotic wood types there. The content special agent has got an important task:\nto get the latest research by British scientists on the English Language.\nThese developments are encoded and stored in a large safe. The Beaver's teeth\nare strong enough, so the authorities assured that upon arriving at the place\nthe beaver won't have any problems with opening the safe. And he finishes his\naspen sprig and leaves for this important task. Of course, the Beaver arrived\nat the location without any problems, but alas. He can't open the safe with\nhis strong and big teeth. At this point, the Smart Beaver get a call from the\nheadquarters and learns that opening the safe with the teeth is not necessary,\nas a reliable source has sent the following information: the safe code\nconsists of digits and has no leading zeroes. There also is a special hint,\nwhich can be used to open the safe. The hint is string s with the following\nstructure: if si = \"?\", then the digit that goes i-th in the safe code can be\nanything (between 0 to 9, inclusively); if si is a digit (between 0 to 9,\ninclusively), then it means that there is digit si on position i in code; if\nthe string contains letters from \"A\" to \"J\", then all positions with the same\nletters must contain the same digits and the positions with distinct letters\nmust contain distinct digits. The length of the safe code coincides with the\nlength of the hint. For example, hint \"?JGJ9\" has such matching safe code\nvariants: \"51919\", \"55959\", \"12329\", \"93539\" and so on, and has wrong variants\nsuch as: \"56669\", \"00111\", \"03539\" and \"13666\". After receiving such\ninformation, the authorities change the plan and ask the special agents to\nwork quietly and gently and not to try to open the safe by mechanical means,\nand try to find the password using the given hint. At a special agent school\nthe Smart Beaver was the fastest in his platoon finding codes for such safes,\nbut now he is not in that shape: the years take their toll ... Help him to\ndetermine the number of possible variants of the code to the safe, matching\nthe given hint. After receiving this information, and knowing his own speed of\nentering codes, the Smart Beaver will be able to determine whether he will\nhave time for tonight's show \"Beavers are on the trail\" on his favorite TV\nchannel, or he should work for a sleepless night... Input The first line\ncontains string s \u2014 the hint to the safe code. String s consists of the\nfollowing characters: ?, 0-9, A-J. It is guaranteed that the first character\nof string s doesn't equal to character 0. The input limits for scoring 30\npoints are (subproblem A1): 1 \u2264 |s| \u2264 5. The input limits for scoring 100\npoints are (subproblems A1+A2): 1 \u2264 |s| \u2264 10^5. Here |s| means the length of\nstring s. Output Print the number of codes that match the given hint. Examples\nInput AJ Output 81 Input 1?AA Output 100\n\n",
        "cf_contest_id": 316,
        "cf_index": "A2",
        "cf_rating": 1400,
        "difficulty": 0,
        "cf_tags": [
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "AJ\r\n",
                "81\r\n"
            ],
            [
                "1?AA\r\n",
                "100\r\n"
            ]
        ],
        "private_cases": [
            [
                "?\r\n",
                "9\r\n"
            ],
            [
                "7\r\n",
                "1\r\n"
            ],
            [
                "A\r\n",
                "9\r\n"
            ],
            [
                "BBB?\r\n",
                "90\r\n"
            ],
            [
                "BC??\r\n",
                "8100\r\n"
            ],
            [
                "CC\r\n",
                "9\r\n"
            ],
            [
                "CB?\r\n",
                "810\r\n"
            ],
            [
                "B??C?\r\n",
                "81000\r\n"
            ],
            [
                "BB?C?\r\n",
                "8100\r\n"
            ],
            [
                "?BCB?\r\n",
                "8100\r\n"
            ],
            [
                "?C\r\n",
                "90\r\n"
            ],
            [
                "??C?C\r\n",
                "9000\r\n"
            ],
            [
                "???2\r\n",
                "900\r\n"
            ],
            [
                "9???\r\n",
                "1000\r\n"
            ],
            [
                "GJH2?\r\n",
                "6480\r\n"
            ],
            [
                "7I9G4\r\n",
                "90\r\n"
            ],
            [
                "JG50?\r\n",
                "810\r\n"
            ],
            [
                "CDEFG\r\n",
                "27216\r\n"
            ],
            [
                "1023456789??????????????????????????????????????ABCDIFGHIJ\r\n",
                "362880000000000000000000000000000000000000000\r\n"
            ]
        ]
    }
]