[
    {
        "name": "Josuke and Complete Graph",
        "description": "Josuke received a huge undirected weighted complete\n    ^\n    \u2020\n graph\n\n    G\n as a gift from his grandfather. The graph contains \n    10^18\n\nvertices. The peculiarity of the gift is that the weight of the edge between\nthe different vertices \n    u\n and \n    v\n is equal to \n    (u,\n    v)^\n. Josuke decided to experiment and make a new graph \n    G'\n.\nTo do this, he chooses two integers \n    l \n    \u2264 r\n and deletes all vertices\nexcept such vertices \n    v\n that \n    l \n    \u2264 v \n    \u2264 r\n, and also deletes\nall the edges except between the remaining vertices. Now Josuke is wondering\nhow many different weights are there in \n    G'\n. Since their count turned out\nto be huge, he asks for your help. \n    ^\n    \u2020\n A complete graph is a\nsimple undirected graph in which every pair of distinct vertices is adjacent.\n\n    ^\n \n    (x, y)\n denotes the greatest common divisor (GCD)\nof the numbers \n    x\n and \n    y\n. Input The first line contains one integer\n\n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases. The first line\nof each test case contains two numbers \n    l\n, \n    r\n (\n    1 \n    \u2264 l \n    \u2264 r\n    \n    \u2264 10^18\n, \n    l \n    \u2264 10^9\n). Output For each test case print a\nsingle number \u2014 the number of different weights among the remaining edges.\nExample Input 7 2 4 16 24 2 6 1 10 3 3 2562 2568 125 100090 Output 2 6 3 5 0 5\n50045 Note The graph \n    G'\n for the first test case. The picture above shows\nthat the graph has \n    2\n different weights. In the fifth test case, there is\nonly one vertex from which no edges originate, so the answer is \n    0\n.\n\n",
        "cf_contest_id": 1780,
        "cf_index": "E",
        "cf_rating": 2400,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "brute force",
            "data structures",
            "math",
            "number theory"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n2 4\r\n16 24\r\n2 6\r\n1 10\r\n3 3\r\n2562 2568\r\n125 100090\r\n",
                "2\r\n6\r\n3\r\n5\r\n0\r\n5\r\n50045\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n1000000000 1000000000\r\n",
                "0\r\n"
            ]
        ]
    }
]