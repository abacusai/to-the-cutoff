[
    {
        "name": "Anti-knapsack",
        "description": "You are given two integers \n    n\n and \n    k\n. You are asked to choose\nmaximum number of distinct integers from \n    1\n to \n    n\n so that there is\nno subset of chosen numbers with sum equal to \n    k\n. A subset of a set is a\nset that can be obtained from initial one by removing some (possibly all or\nnone) elements of it. Input The first line contains the number of test cases\n\n    T\n (\n    1 \n    \u2264 T \n    \u2264 100\n). Each of the next \n    T\n lines contains\ntwo integers \n    n\n and \n    k\n (\n    1 \n    \u2264 k \n    \u2264 n \n    \u2264 1000\n) \u2014 the\ndescription of test cases. Output For each test case output two lines. In the\nfirst line output a single integer \n    m\n \u2014 the number of chosen integers. In\nthe second line output \n    m\n distinct integers from \n    1\n to \n    n\n \u2014 the\nchosen numbers. If there are multiple answers, print any. You can print the\nnumbers in any order. Example Input 3 3 2 5 3 1 1 Output 2 3 1 3 4 5 2 0\n\n",
        "cf_contest_id": 1493,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "constructive algorithms",
            "greedy"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 2\r\n5 3\r\n1 1\r\n",
                "2 1 3\r\n3 2 4 5\r\n0\r\n"
            ]
        ],
        "private_cases": []
    }
]