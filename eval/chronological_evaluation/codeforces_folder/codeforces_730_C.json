[
    {
        "name": "Bulmart",
        "description": "A new trade empire is rising in Berland. Bulmart, an emerging trade giant,\ndecided to dominate the market of ... shovels! And now almost every city in\nBerland has a Bulmart store, and some cities even have several of them! The\nonly problem is, at the moment sales are ... let's say a little below\nestimates. Some people even say that shovels retail market is too small for\nsuch a big company to make a profit. But the company management believes in\nthe future of that market and seeks new ways to increase income. There are n\ncities in Berland connected with m bi-directional roads. All roads have equal\nlengths. It can happen that it is impossible to reach a city from another city\nusing only roads. There is no road which connects a city to itself. Any pair\nof cities can be connected by at most one road. There are w Bulmart stores in\nBerland. Each of them is described by three numbers: ci \u2014 the number of city\nwhere the i-th store is located (a city can have no stores at all or have\nseveral of them), ki \u2014 the number of shovels in the i-th store, pi \u2014 the price\nof a single shovel in the i-th store (in burles). The latest idea of the\nBulmart management is to create a program which will help customers get\nshovels as fast as possible for affordable budget. Formally, the program has\nto find the minimum amount of time needed to deliver rj shovels to the\ncustomer in the city gj for the total cost of no more than aj burles. The\ndelivery time between any two adjacent cities is equal to 1. If shovels are\ndelivered from several cities, the delivery time is equal to the arrival time\nof the last package. The delivery itself is free of charge. The program needs\nto find answers to q such queries. Each query has to be processed\nindependently from others, i.e. a query does not change number of shovels in\nstores for the next queries. Input The first line contains two integers n, m\n(1 \u2264 n \u2264 5000, 0 \u2264 m \u2264 min(5000, n\u00b7(n - 1) / 2)). Each of the next m lines\ncontains two integers xe and ye, meaning that the e-th road connects cities xe\nand ye (1 \u2264 xe, ye \u2264 n). The next line contains a single integer w (1 \u2264 w \u2264\n5000) \u2014 the total number of Bulmart stores in Berland. Each of the next w\nlines contains three integers describing the i-th store: ci, ki, pi (1 \u2264 ci \u2264\nn, 1 \u2264 ki, pi \u2264 2\u00b710^5). The next line contains a single integer q (1 \u2264 q \u2264\n1000) \u2014 the number of queries. Each of the next q lines contains three\nintegers describing the j-th query: gj, rj and aj (1 \u2264 gj \u2264 n, 1 \u2264 rj, aj \u2264\n10^9) Output Output q lines. On the j-th line, print an answer for the j-th\nquery \u2014 the minimum amount of time needed to deliver rj shovels to the\ncustomer in city gj spending no more than aj burles. Print -1 if there is no\nsolution for the j-th query. Example Input 6 4 4 2 5 4 1 2 3 2 2 4 1 2 3 2 3 6\n1 2 6 2 3 7 3 1 2 4 3 8 5 2 5 6 1 10 Output 2 -1 2 2 3 -1\n\n",
        "cf_contest_id": 730,
        "cf_index": "C",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "dfs and similar"
        ],
        "time_limit_seconds": 1.5,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "6 4\r\n4 2\r\n5 4\r\n1 2\r\n3 2\r\n2\r\n4 1 2\r\n3 2 3\r\n6\r\n1 2 6\r\n2 3 7\r\n3 1 2\r\n4 3 8\r\n5 2 5\r\n6 1 10\r\n",
                "2\r\n-1\r\n2\r\n2\r\n3\r\n-1\r\n"
            ]
        ],
        "private_cases": [
            [
                "4 3\r\n1 2\r\n2 3\r\n3 4\r\n4\r\n1 115 738\r\n2 147 458\r\n3 29 494\r\n4 148 316\r\n1\r\n4 325 157529\r\n",
                "3\r\n"
            ],
            [
                "3 2\r\n1 3\r\n1 2\r\n1\r\n1 2 1\r\n4\r\n1 2 3\r\n1 2 3\r\n3 3 3\r\n3 3 2\r\n",
                "0\r\n0\r\n-1\r\n-1\r\n"
            ],
            [
                "1 0\r\n1\r\n1 1 1\r\n2\r\n1 1 1\r\n1 2 1\r\n",
                "0\r\n-1\r\n"
            ],
            [
                "4 4\r\n3 1\r\n4 3\r\n2 4\r\n1 4\r\n2\r\n1 5 5\r\n3 2 3\r\n4\r\n2 6 32\r\n1 7 32\r\n4 7 28\r\n1 5 31\r\n",
                "2\r\n1\r\n-1\r\n0\r\n"
            ],
            [
                "5 9\r\n3 4\r\n1 3\r\n4 1\r\n5 3\r\n1 5\r\n5 2\r\n2 3\r\n4 2\r\n4 5\r\n3\r\n2 5 4\r\n3 5 1\r\n5 3 2\r\n7\r\n4 14 30\r\n2 10 29\r\n5 12 29\r\n3 9 24\r\n3 13 28\r\n2 12 26\r\n2 7 27\r\n",
                "-1\r\n1\r\n1\r\n1\r\n-1\r\n-1\r\n1\r\n"
            ],
            [
                "6 11\r\n3 5\r\n6 3\r\n1 5\r\n4 6\r\n2 6\r\n2 1\r\n4 5\r\n3 4\r\n3 2\r\n2 4\r\n6 1\r\n2\r\n1 5 3\r\n3 1 2\r\n5\r\n6 5 16\r\n2 7 18\r\n4 7 13\r\n2 7 16\r\n4 7 18\r\n",
                "1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "6 14\r\n5 2\r\n2 6\r\n3 1\r\n5 1\r\n3 2\r\n4 5\r\n5 6\r\n6 4\r\n3 6\r\n4 1\r\n6 1\r\n3 5\r\n2 4\r\n1 2\r\n1\r\n2 1 5\r\n3\r\n6 1 6\r\n3 2 6\r\n3 1 6\r\n",
                "1\r\n-1\r\n1\r\n"
            ],
            [
                "6 14\r\n4 2\r\n5 2\r\n6 2\r\n4 6\r\n4 5\r\n1 3\r\n3 6\r\n5 1\r\n3 5\r\n1 2\r\n4 1\r\n5 6\r\n6 1\r\n2 3\r\n2\r\n2 4 2\r\n3 2 1\r\n2\r\n5 7 9\r\n4 5 7\r\n",
                "-1\r\n-1\r\n"
            ],
            [
                "6 10\r\n1 6\r\n5 6\r\n4 5\r\n4 2\r\n3 1\r\n4 1\r\n2 6\r\n3 4\r\n3 6\r\n3 2\r\n1\r\n4 4 2\r\n1\r\n3 5 9\r\n",
                "-1\r\n"
            ],
            [
                "6 10\r\n2 3\r\n5 4\r\n1 4\r\n2 5\r\n1 2\r\n6 5\r\n6 4\r\n3 4\r\n6 1\r\n3 5\r\n1\r\n1 3 2\r\n3\r\n1 4 7\r\n4 3 5\r\n3 4 6\r\n",
                "-1\r\n-1\r\n-1\r\n"
            ],
            [
                "7 17\r\n7 2\r\n4 1\r\n2 4\r\n7 6\r\n3 7\r\n6 1\r\n2 1\r\n5 2\r\n2 3\r\n2 6\r\n7 4\r\n6 5\r\n4 5\r\n6 3\r\n5 3\r\n1 5\r\n1 7\r\n4\r\n4 4 5\r\n6 5 1\r\n7 1 2\r\n3 2 1\r\n1\r\n6 13 20\r\n",
                "-1\r\n"
            ],
            [
                "7 14\r\n1 7\r\n5 7\r\n5 1\r\n3 2\r\n7 4\r\n7 3\r\n4 6\r\n5 6\r\n2 7\r\n2 6\r\n1 3\r\n2 4\r\n6 1\r\n5 3\r\n4\r\n1 1 5\r\n4 3 2\r\n5 3 4\r\n1 4 4\r\n10\r\n4 9 17\r\n3 12 33\r\n6 11 19\r\n5 12 38\r\n1 12 28\r\n6 12 36\r\n1 10 34\r\n7 10 27\r\n2 11 31\r\n6 12 34\r\n",
                "-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n2\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "7 8\r\n1 5\r\n6 1\r\n6 3\r\n4 6\r\n2 5\r\n3 5\r\n7 6\r\n1 7\r\n5\r\n7 3 3\r\n2 1 5\r\n1 3 3\r\n4 3 5\r\n2 1 3\r\n3\r\n7 11 29\r\n6 11 21\r\n2 12 41\r\n",
                "-1\r\n-1\r\n-1\r\n"
            ],
            [
                "7 18\r\n6 4\r\n2 6\r\n1 5\r\n3 5\r\n4 5\r\n2 5\r\n5 6\r\n1 2\r\n7 4\r\n3 6\r\n2 4\r\n7 1\r\n1 3\r\n1 6\r\n2 3\r\n3 4\r\n7 3\r\n7 5\r\n3\r\n1 5 3\r\n1 2 4\r\n2 2 3\r\n3\r\n5 9 28\r\n4 10 15\r\n3 10 12\r\n",
                "-1\r\n-1\r\n-1\r\n"
            ],
            [
                "7 11\r\n2 6\r\n7 4\r\n3 5\r\n1 7\r\n3 7\r\n7 5\r\n4 2\r\n1 4\r\n2 1\r\n7 6\r\n5 2\r\n1\r\n2 1 5\r\n8\r\n5 2 5\r\n3 2 6\r\n7 2 3\r\n5 2 5\r\n6 2 4\r\n7 2 4\r\n5 2 6\r\n6 2 5\r\n",
                "-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "2 1\r\n1 2\r\n2\r\n1 200000 20000\r\n2 200000 20000\r\n4\r\n1 400000 1\r\n2 400000 1\r\n1 200000 1\r\n2 200000 1\r\n",
                "-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "8 9\r\n6 2\r\n2 7\r\n7 1\r\n5 7\r\n8 3\r\n4 6\r\n1 8\r\n6 3\r\n3 7\r\n3\r\n5 5 5\r\n8 1 2\r\n7 4 1\r\n9\r\n5 8 28\r\n6 11 18\r\n1 6 30\r\n8 11 28\r\n2 11 29\r\n2 9 28\r\n8 9 24\r\n5 9 26\r\n2 11 5\r\n",
                "1\r\n-1\r\n2\r\n-1\r\n-1\r\n3\r\n-1\r\n3\r\n-1\r\n"
            ],
            [
                "8 9\r\n7 2\r\n3 8\r\n2 4\r\n2 5\r\n5 1\r\n3 4\r\n1 7\r\n6 4\r\n4 7\r\n3\r\n6 1 1\r\n6 4 4\r\n1 2 5\r\n3\r\n4 8 26\r\n8 7 23\r\n3 8 23\r\n",
                "-1\r\n-1\r\n-1\r\n"
            ],
            [
                "8 17\r\n4 3\r\n5 3\r\n1 8\r\n6 5\r\n7 8\r\n4 5\r\n5 1\r\n4 6\r\n6 2\r\n4 2\r\n7 2\r\n6 7\r\n1 2\r\n8 4\r\n4 1\r\n1 3\r\n2 8\r\n3\r\n4 2 3\r\n4 5 5\r\n7 3 4\r\n3\r\n6 11 20\r\n7 11 37\r\n2 8 42\r\n",
                "-1\r\n-1\r\n1\r\n"
            ],
            [
                "8 16\r\n2 7\r\n3 2\r\n7 3\r\n5 6\r\n2 8\r\n3 8\r\n5 3\r\n4 2\r\n6 8\r\n6 7\r\n1 3\r\n7 4\r\n4 8\r\n5 4\r\n6 2\r\n8 7\r\n1\r\n7 1 4\r\n10\r\n2 2 4\r\n7 2 4\r\n2 2 5\r\n5 2 4\r\n1 2 5\r\n6 2 5\r\n6 2 5\r\n2 2 4\r\n2 2 4\r\n8 2 3\r\n",
                "-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "8 12\r\n1 2\r\n4 2\r\n7 4\r\n4 6\r\n8 5\r\n1 4\r\n1 8\r\n2 6\r\n7 6\r\n1 3\r\n7 2\r\n3 5\r\n1\r\n4 5 1\r\n10\r\n1 6 5\r\n6 5 6\r\n5 5 5\r\n3 6 6\r\n5 6 6\r\n7 6 5\r\n7 6 4\r\n1 5 5\r\n4 5 4\r\n3 6 5\r\n",
                "-1\r\n1\r\n3\r\n-1\r\n-1\r\n-1\r\n-1\r\n1\r\n-1\r\n-1\r\n"
            ],
            [
                "9 9\r\n2 4\r\n2 5\r\n8 7\r\n5 7\r\n6 1\r\n5 3\r\n3 9\r\n7 3\r\n7 6\r\n1\r\n2 2 5\r\n2\r\n9 3 8\r\n3 3 8\r\n",
                "-1\r\n-1\r\n"
            ],
            [
                "9 9\r\n3 1\r\n9 6\r\n4 5\r\n2 9\r\n1 2\r\n7 4\r\n2 5\r\n7 3\r\n4 8\r\n1\r\n4 2 2\r\n1\r\n2 3 4\r\n",
                "-1\r\n"
            ],
            [
                "9 27\r\n6 1\r\n9 5\r\n7 1\r\n9 1\r\n3 1\r\n7 4\r\n7 2\r\n9 8\r\n4 2\r\n4 1\r\n1 8\r\n3 9\r\n8 7\r\n8 3\r\n4 8\r\n3 7\r\n9 7\r\n3 2\r\n5 3\r\n6 5\r\n9 4\r\n1 5\r\n8 2\r\n4 3\r\n2 1\r\n7 5\r\n8 5\r\n2\r\n1 4 5\r\n3 2 3\r\n9\r\n9 4 21\r\n6 6 23\r\n9 7 23\r\n2 7 27\r\n3 7 15\r\n8 6 15\r\n6 7 13\r\n3 5 24\r\n5 4 24\r\n",
                "1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n1\r\n1\r\n"
            ],
            [
                "9 31\r\n3 4\r\n1 7\r\n5 9\r\n7 3\r\n3 9\r\n7 2\r\n4 7\r\n5 7\r\n6 1\r\n4 1\r\n1 2\r\n1 5\r\n2 9\r\n3 8\r\n3 1\r\n2 3\r\n9 1\r\n6 7\r\n9 4\r\n8 4\r\n5 4\r\n5 3\r\n6 9\r\n2 5\r\n6 5\r\n4 6\r\n2 4\r\n8 5\r\n8 6\r\n8 1\r\n6 2\r\n1\r\n8 2 3\r\n9\r\n3 3 7\r\n2 2 4\r\n7 2 7\r\n8 3 7\r\n8 3 7\r\n3 3 3\r\n2 3 4\r\n2 3 7\r\n7 3 6\r\n",
                "-1\r\n-1\r\n2\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n-1\r\n"
            ],
            [
                "9 32\r\n1 7\r\n4 6\r\n5 6\r\n6 7\r\n8 1\r\n2 6\r\n1 5\r\n7 4\r\n2 1\r\n1 6\r\n4 2\r\n7 3\r\n4 1\r\n6 8\r\n3 6\r\n1 9\r\n9 6\r\n9 4\r\n5 7\r\n4 5\r\n8 9\r\n5 3\r\n8 3\r\n4 8\r\n2 5\r\n2 8\r\n2 9\r\n4 3\r\n9 7\r\n2 7\r\n9 5\r\n1 3\r\n1\r\n5 5 3\r\n3\r\n1 4 15\r\n2 6 16\r\n4 6 16\r\n",
                "1\r\n-1\r\n-1\r\n"
            ],
            [
                "1 0\r\n1\r\n1 200000 200000\r\n1\r\n1 1000000000 1000000000\r\n",
                "-1\r\n"
            ]
        ]
    }
]