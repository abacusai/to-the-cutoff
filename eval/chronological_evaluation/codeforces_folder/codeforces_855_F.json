[
    {
        "name": "Nagini",
        "description": "Nagini, being a horcrux You-know-who created with the murder of Bertha\nJorkins, has accumulated its army of snakes and is launching an attack on\nHogwarts school. Hogwarts' entrance can be imagined as a straight line\n(x-axis) from 1 to 10^5. Nagini is launching various snakes at the Hogwarts\nentrance. Each snake lands parallel to the entrance, covering a segment at a\ndistance k from x = l to x = r. Formally, each snake can be imagined as being\na line segment between points (l, k) and (r, k). Note that k can be both\npositive and negative, but not 0. Let, at some x-coordinate x = i, there be\nsnakes at point (i, y1) and point (i, y2), such that y1 > 0 and y2 < 0\u1e6ahen,\nif for any point (i, y3) containing a snake such that y3 > 0, y1 \u2264 y3 holds\nand for any point (i, y4) containing a snake such that y4 < 0, |y2| \u2264 |y4|\nholds, then the danger value at coordinate x = i is y1 + |y2|. If no such y1\nand y2 exist, danger value is 0. Harry wants to calculate the danger value of\nvarious segments of the Hogwarts entrance. Danger value for a segment [l, r)\nof the entrance can be calculated by taking the sum of danger values for each\ninteger x-coordinate present in the segment. Formally, you have to implement\ntwo types of queries: 1 l r k: a snake is added parallel to entrance from x =\nl to x = r at y-coordinate y = k (l inclusive, r exclusive). 2 l r: you have\nto calculate the danger value of segment l to r (l inclusive, r exclusive).\nInput First line of input contains a single integer q (1 \u2264 q \u2264 5\u00b710^4)\ndenoting the number of queries. Next q lines each describe a query. Each query\ndescription first contains the query type typei (1 \u2264 typei \u2264 2). This is\nfollowed by further description of the query. In case of the type being 1, it\nis followed by integers li, ri and ki (, - 10^9 \u2264 ki \u2264 10^9, k \u2260 0).\nOtherwise, it just contains two integers, li and ri (1 \u2264 li < ri \u2264 10^5).\nOutput Output the answer for each query of type 2 in a separate line. Examples\nInput 3 1 1 10 10 1 2 4 -7 2 1 10 Output 34 Input 7 1 2 3 5 1 1 10 10 1 4 5 -5\n2 4 8 1 1 10 -10 2 4 8 2 1 10 Output 15 75 170 Note In the first sample case,\nthe danger value for x-coordinates 1 is 0 as there is no y2 satisfying the\nabove condition for x = 1. Danger values for x-coordinates 2 and 3 is 10 + | -\n7| = 17. Danger values for x-coordinates 4 to 9 is again 0 as there is no y2\nsatisfying the above condition for these coordinates. Thus, total danger value\nis 17 + 17 = 34.\n\n",
        "cf_contest_id": 855,
        "cf_index": "F",
        "cf_rating": 3100,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "data structures"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n1 1 10 10\r\n1 2 4 -7\r\n2 1 10\r\n",
                "34\r\n"
            ],
            [
                "7\r\n1 2 3 5\r\n1 1 10 10\r\n1 4 5 -5\r\n2 4 8\r\n1 1 10 -10\r\n2 4 8\r\n2 1 10\r\n",
                "15\r\n75\r\n170\r\n"
            ]
        ],
        "private_cases": [
            [
                "9\r\n1 53121 91273 -513994713\r\n1 70296 71843 -58265855\r\n1 93992 95954 -186774359\r\n2 85507 92451\r\n2 21667 53346\r\n1 62087 91229 461796409\r\n2 40520 74676\r\n1 8640 69454 -595041001\r\n2 1 100000\r\n",
                "0\r\n0\r\n11579221891532\r\n27731492333998\r\n"
            ],
            [
                "16\r\n2 24458 38623\r\n1 68671 95622 -444184972\r\n2 61459 80233\r\n1 86471 99254 73842336\r\n1 43403 96500 -612080836\r\n2 28987 35380\r\n1 3800 51386 -190705915\r\n1 69454 88978 -873455915\r\n2 87624 93469\r\n2 57539 68124\r\n1 16739 44186 649913003\r\n2 98162 99761\r\n2 76665 77891\r\n2 6151 53044\r\n1 74361 79554 865990206\r\n2 1 100000\r\n",
                "0\r\n0\r\n0\r\n3027869615260\r\n0\r\n0\r\n0\r\n23072467442346\r\n35218915582224\r\n"
            ],
            [
                "21\r\n2 25643 73336\r\n2 96503 96903\r\n2 48234 55872\r\n2 30904 57061\r\n2 18573 66501\r\n1 86207 96861 -717802881\r\n2 27581 43920\r\n1 96035 96144 694729965\r\n2 26176 54720\r\n1 65576 68622 -333153747\r\n2 37173 96190\r\n1 57277 63939 -165740466\r\n2 63089 72612\r\n1 29899 40943 903631686\r\n1 41691 98962 373166844\r\n2 42214 99111\r\n1 51884 77809 -696186514\r\n1 99587 99952 -966803487\r\n2 76413 93623\r\n2 87714 98753\r\n2 1 100000\r\n",
                "0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n0\r\n153966080214\r\n0\r\n17364844469556\r\n9583448768368\r\n9979100074575\r\n34706547876242\r\n"
            ],
            [
                "3\r\n1 86375 89884 804928248\r\n2 59311 99382\r\n2 1 100000\r\n",
                "0\r\n0\r\n"
            ]
        ]
    }
]