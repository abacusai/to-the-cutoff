[
    {
        "name": "AquaMoon and Stolen String",
        "description": "AquaMoon had \n    n\n strings of length \n    m\n each. \n    n\n is an odd number.\nWhen AquaMoon was gone, Cirno tried to pair these \n    n\n strings together.\nAfter making \n    n-1/2\n pairs, she found out that there was exactly\none string without the pair! In her rage, she disrupted each pair of strings.\nFor each pair, she selected some positions (at least \n    1\n and at most\n\n    m\n) and swapped the letters in the two strings of this pair at the\nselected positions. For example, if \n    m = 6\n and two strings \"abcdef\" and\n\"xyzklm\" are in one pair and Cirno selected positions \n    2\n, \n    3\n and\n\n    6\n she will swap 'b' with 'y', 'c' with 'z' and 'f' with 'm'. The\nresulting strings will be \"ayzdem\" and \"xbcklf\". Cirno then stole away the\nstring without pair and shuffled all remaining strings in arbitrary order.\nAquaMoon found the remaining \n    n-1\n strings in complete disarray. Also, she\nremembers the initial \n    n\n strings. She wants to know which string was\nstolen, but she is not good at programming. Can you help her? Input This\nproblem is made as interactive. It means, that your solution will read the\ninput, given by the interactor. But the interactor will give you the full\ninput at the beginning and after that, you should print the answer. So you\nshould solve the problem, like as you solve the usual, non-interactive problem\nbecause you won't have any interaction process. The only thing you should not\nforget is to flush the output buffer, after printing the answer. Otherwise,\nyou can get an \"Idleness limit exceeded\" verdict. Refer to the interactive\nproblems guide for the detailed information about flushing the output buffer.\nThe input consists of multiple test cases. The first line contains a single\ninteger \n    t\n (\n    1 \n    \u2264 t \n    \u2264 100\n) \u2014 the number of test cases. The\nfirst line of each test case contains two integers \n    n\n, \n    m\n (\n    1\n    \n    \u2264 n \n    \u2264 10^5\n, \n    1 \n    \u2264 m \n    \u2264 10^5\n) \u2014 the number of strings\nand the length of each string, respectively. The next \n    n\n lines each\ncontain a string with length \n    m\n, describing the original \n    n\n strings.\nAll string consists of lowercase Latin letters. The next \n    n-1\n lines each\ncontain a string with length \n    m\n, describing the strings after Cirno\nexchanged and reordered them. It is guaranteed that \n    n\n is odd and that\nthe sum of \n    n \n    \u00b7 m\n over all test cases does not exceed \n    10^5\n.\nHack format: The first line should contain a single integer \n    t\n. After\nthat \n    t\n test cases should follow in the following format: The first line\nshould contain two integers \n    n\n and \n    m\n. The following \n    n\n lines\nshould contain \n    n\n strings of length \n    m\n, describing the original\nstrings. The following \n    n-1/2\n lines should describe the pairs.\nThey should contain, in the following order: the index of the first string\n\n    i\n (\n    1 \n    \u2264 i \n    \u2264 n\n), the index of the second string \n    j\n\n(\n    1 \n    \u2264 j \n    \u2264 n\n, \n    i \n    \u2260 j\n), the number of exchanged\npositions \n    k\n (\n    1 \n    \u2264 k \n    \u2264 m\n), and the list of \n    k\n\npositions that are exchanged (\n    k\n distinct indices from \n    1\n to \n    m\n\nin any order). The final line should contain a permutation of integers from\n\n    1\n to \n    n\n, describing the way the strings should be reordered. The\nstrings will be placed in the order indices placed in this permutation, the\nstolen string index will be ignored. Output For each test case print a single\nline with the stolen string. Example Input 3 3 5 aaaaa bbbbb ccccc aaaaa bbbbb\n3 4 aaaa bbbb cccc aabb bbaa 5 6 abcdef uuuuuu kekeke ekekek xyzklm xbcklf\neueueu ayzdem ukukuk Output ccccc cccc kekeke Note In the first test case,\n\"aaaaa\" and \"bbbbb\" exchanged all positions, and \"ccccc\" is the stolen string.\nIn the second test case, \"aaaa\" and \"bbbb\" exchanged two first positions, and\n\"cccc\" is the stolen string. This is the first test in the hack format: 3 3 5\naaaaa bbbbb ccccc 1 2 5 1 2 3 4 5 2 1 3 3 4 aaaa bbbb cccc 1 2 2 1 2 2 1 3 5 6\nabcdef uuuuuu kekeke ekekek xyzklm 1 5 3 2 3 6 2 4 3 2 4 6 5 4 1 2 3\n\n",
        "cf_contest_id": 1546,
        "cf_index": "B",
        "cf_rating": 1200,
        "difficulty": 0,
        "cf_tags": [
            "interactive",
            "math"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n3 5\r\naaaaa\r\nbbbbb\r\nccccc\r\n1 2 5 1 2 3 4 5\r\n2 1 3\r\n3 4\r\naaaa\r\nbbbb\r\ncccc\r\n1 2 2 1 2\r\n2 1 3\r\n5 6\r\nabcdef\r\nuuuuuu\r\nkekeke\r\nekekek\r\nxyzklm\r\n1 5 3 2 3 6\r\n2 4 3 2 4 6\r\n5 4 1 2 3\r\n",
                "ccccc\r\ncccc\r\nkekeke\r\n"
            ]
        ],
        "private_cases": []
    }
]