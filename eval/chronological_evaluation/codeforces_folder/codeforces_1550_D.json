[
    {
        "name": "Excellent Arrays",
        "description": "Let's call an integer array \n    a_1, a_2, \n    \u2026, a_n\n good if \n    a_i \n    \u2260\n    i\n for each \n    i\n. Let \n    F(a)\n be the number of pairs \n    (i, j)\n\n(\n    1 \n    \u2264 i < j \n    \u2264 n\n) such that \n    a_i + a_j = i + j\n. Let's say\nthat an array \n    a_1, a_2, \n    \u2026, a_n\n is excellent if: \n    a\n is good;\n\n    l \n    \u2264 a_i \n    \u2264 r\n for each \n    i\n; \n    F(a)\n is the maximum possible\namong all good arrays of size \n    n\n. Given \n    n\n, \n    l\n and \n    r\n,\ncalculate the number of excellent arrays modulo \n    10^9 + 7\n. Input The\nfirst line contains a single integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 1000\n) \u2014\nthe number of test cases. The first and only line of each test case contains\nthree integers \n    n\n, \n    l\n, and \n    r\n (\n    2 \n    \u2264 n \n    \u2264 2 \n    \u00b7\n    10^5\n; \n    -10^9 \n    \u2264 l \n    \u2264 1\n; \n    n \n    \u2264 r \n    \u2264 10^9\n). It's\nguaranteed that the sum of \n    n\n doesn't exceed \n    2 \n    \u00b7 10^5\n. Output\nFor each test case, print the number of excellent arrays modulo \n    10^9 +\n    7\n. Example Input 4 3 0 3 4 -3 5 42 -33 55 69 -42 146 Output 4 10 143922563\n698570404 Note In the first test case, it can be proven that the maximum\n\n    F(a)\n among all good arrays \n    a\n is equal to \n    2\n. The excellent\narrays are: \n    [2, 1, 2]\n; \n    [0, 3, 2]\n; \n    [2, 3, 2]\n; \n    [3, 0,\n    1]\n.\n\n",
        "cf_contest_id": 1550,
        "cf_index": "D",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "binary search",
            "combinatorics",
            "constructive algorithms",
            "implementation",
            "math",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "4\r\n3 0 3\r\n4 -3 5\r\n42 -33 55\r\n69 -42 146\r\n",
                "4\r\n10\r\n143922563\r\n698570404\r\n"
            ]
        ],
        "private_cases": [
            [
                "10\r\n20000 -431912570 597469643\r\n20000 -13928452 414987414\r\n20000 -472808872 367983694\r\n20000 -84913058 517394906\r\n20000 -514402152 597357115\r\n20000 -720971736 526102810\r\n20000 -416160739 748291750\r\n20000 -665939649 743938438\r\n20000 -80741314 634025883\r\n20000 -824743396 138091345\r\n",
                "248035877\r\n914985694\r\n81736080\r\n620577277\r\n582075219\r\n178924585\r\n43838681\r\n877575075\r\n638560874\r\n633099813\r\n"
            ],
            [
                "2\r\n90501 -717514174 948500173\r\n19190 -636413697 445854046\r\n",
                "347544843\r\n176249538\r\n"
            ],
            [
                "2\r\n100000 -441248421 284504519\r\n100000 -26375717 863206865\r\n",
                "934527396\r\n783567825\r\n"
            ],
            [
                "1\r\n167208 -643096130 843266036\r\n",
                "957368733\r\n"
            ],
            [
                "1\r\n200000 -926527577 520580266\r\n",
                "414986480\r\n"
            ]
        ]
    }
]