[
    {
        "name": "New Year Tree",
        "description": "The New Year holidays are over, but Resha doesn't want to throw away the New\nYear tree. He invited his best friends Kerim and Gural to help him to\nredecorate the New Year tree. The New Year tree is an undirected tree with n\nvertices and root in the vertex 1. You should process the queries of the two\ntypes: Change the colours of all vertices in the subtree of the vertex v to\nthe colour c. Find the number of different colours in the subtree of the\nvertex v. Input The first line contains two integers n, m (1 \u2264 n, m \u2264 4\u00b710^5)\n\u2014 the number of vertices in the tree and the number of the queries. The second\nline contains n integers ci (1 \u2264 ci \u2264 60) \u2014 the colour of the i-th vertex.\nEach of the next n - 1 lines contains two integers xj, yj (1 \u2264 xj, yj \u2264 n) \u2014\nthe vertices of the j-th edge. It is guaranteed that you are given correct\nundirected tree. The last m lines contains the description of the queries.\nEach description starts with the integer tk (1 \u2264 tk \u2264 2) \u2014 the type of the\nk-th query. For the queries of the first type then follows two integers vk, ck\n(1 \u2264 vk \u2264 n, 1 \u2264 ck \u2264 60) \u2014 the number of the vertex whose subtree will be\nrecoloured with the colour ck. For the queries of the second type then follows\ninteger vk (1 \u2264 vk \u2264 n) \u2014 the number of the vertex for which subtree you\nshould find the number of different colours. Output For each query of the\nsecond type print the integer a \u2014 the number of different colours in the\nsubtree of the vertex given in the query. Each of the numbers should be\nprinted on a separate line in order of query appearing in the input. Examples\nInput 7 10 1 1 1 1 1 1 1 1 2 1 3 1 4 3 5 3 6 3 7 1 3 2 2 1 1 4 3 2 1 1 2 5 2 1\n1 6 4 2 1 2 2 2 3 Output 2 3 4 5 1 2 Input 23 30 1 2 2 6 5 3 2 1 1 1 2 4 5 3 4\n4 3 3 3 3 3 4 6 1 2 1 3 1 4 2 5 2 6 3 7 3 8 4 9 4 10 4 11 6 12 6 13 7 14 7 15\n7 16 8 17 8 18 10 19 10 20 10 21 11 22 11 23 2 1 2 5 2 6 2 7 2 8 2 9 2 10 2 11\n2 4 1 12 1 1 13 1 1 14 1 1 15 1 1 16 1 1 17 1 1 18 1 1 19 1 1 20 1 1 21 1 1 22\n1 1 23 1 2 1 2 5 2 6 2 7 2 8 2 9 2 10 2 11 2 4 Output 6 1 3 3 2 1 2 3 5 5 1 2\n2 1 1 1 2 3\n\n",
        "cf_contest_id": 620,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "bitmasks",
            "data structures",
            "trees"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7 10\r\n1 1 1 1 1 1 1\r\n1 2\r\n1 3\r\n1 4\r\n3 5\r\n3 6\r\n3 7\r\n1 3 2\r\n2 1\r\n1 4 3\r\n2 1\r\n1 2 5\r\n2 1\r\n1 6 4\r\n2 1\r\n2 2\r\n2 3\r\n",
                "2\r\n3\r\n4\r\n5\r\n1\r\n2\r\n"
            ],
            [
                "23 30\r\n1 2 2 6 5 3 2 1 1 1 2 4 5 3 4 4 3 3 3 3 3 4 6\r\n1 2\r\n1 3\r\n1 4\r\n2 5\r\n2 6\r\n3 7\r\n3 8\r\n4 9\r\n4 10\r\n4 11\r\n6 12\r\n6 13\r\n7 14\r\n7 15\r\n7 16\r\n8 17\r\n8 18\r\n10 19\r\n10 20\r\n10 21\r\n11 22\r\n11 23\r\n2 1\r\n2 5\r\n2 6\r\n2 7\r\n2 8\r\n2 9\r\n2 10\r\n2 11\r\n2 4\r\n1 12 1\r\n1 13 1\r\n1 14 1\r\n1 15 1\r\n1 16 1\r\n1 17 1\r\n1 18 1\r\n1 19 1\r\n1 20 1\r\n1 21 1\r\n1 22 1\r\n1 23 1\r\n2 1\r\n2 5\r\n2 6\r\n2 7\r\n2 8\r\n2 9\r\n2 10\r\n2 11\r\n2 4\r\n",
                "6\r\n1\r\n3\r\n3\r\n2\r\n1\r\n2\r\n3\r\n5\r\n5\r\n1\r\n2\r\n2\r\n1\r\n1\r\n1\r\n2\r\n3\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n14\r\n2 1\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n36\r\n2 1\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n25\r\n1 1 25\r\n",
                ""
            ],
            [
                "1 1\r\n12\r\n1 1 43\r\n",
                ""
            ],
            [
                "1 1\r\n3\r\n2 1\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n43\r\n2 1\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n41\r\n2 1\r\n",
                "1\r\n"
            ],
            [
                "1 1\r\n35\r\n1 1 32\r\n",
                ""
            ],
            [
                "10 10\r\n59 59 59 59 59 59 59 59 59 59\r\n6 8\r\n6 10\r\n2 6\r\n2 5\r\n7 2\r\n10 1\r\n4 2\r\n7 3\r\n9 1\r\n1 8 59\r\n2 8\r\n1 3 59\r\n1 4 59\r\n1 8 59\r\n1 2 59\r\n1 5 59\r\n1 10 59\r\n2 2\r\n2 5\r\n",
                "1\r\n1\r\n1\r\n"
            ],
            [
                "10 10\r\n8 8 14 32 14 8 32 8 14 32\r\n4 5\r\n4 1\r\n4 8\r\n4 9\r\n7 4\r\n2 5\r\n3 5\r\n4 6\r\n10 4\r\n2 2\r\n1 9 8\r\n1 1 40\r\n1 7 32\r\n1 4 8\r\n2 8\r\n1 1 8\r\n2 2\r\n2 8\r\n2 4\r\n",
                "1\r\n1\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "10 10\r\n39 50 50 7 39 7 46 7 39 7\r\n10 7\r\n7 3\r\n3 5\r\n3 4\r\n6 4\r\n1 4\r\n1 8\r\n8 2\r\n2 9\r\n2 8\r\n1 6 50\r\n2 4\r\n2 6\r\n1 7 39\r\n1 3 39\r\n2 9\r\n1 1 15\r\n2 7\r\n1 10 7\r\n",
                "3\r\n4\r\n1\r\n1\r\n1\r\n"
            ],
            [
                "10 10\r\n23 25 23 42 23 53 49 40 28 44\r\n1 7\r\n1 2\r\n2 4\r\n4 10\r\n8 10\r\n6 8\r\n3 8\r\n5 3\r\n9 5\r\n2 10\r\n1 6 52\r\n1 8 43\r\n2 3\r\n1 4 39\r\n1 8 44\r\n1 9 39\r\n2 1\r\n2 4\r\n1 6 36\r\n",
                "5\r\n1\r\n5\r\n2\r\n"
            ],
            [
                "10 10\r\n16 25 25 27 39 29 29 58 50 30\r\n8 2\r\n2 10\r\n4 2\r\n2 1\r\n6 2\r\n2 3\r\n9 2\r\n5 2\r\n2 7\r\n2 4\r\n1 3 31\r\n2 5\r\n1 7 27\r\n1 4 56\r\n1 4 52\r\n1 5 25\r\n1 6 32\r\n1 6 22\r\n1 7 42\r\n",
                "1\r\n1\r\n"
            ],
            [
                "10 10\r\n60 46 56 7 4 27 43 28 4 9\r\n1 5\r\n5 8\r\n10 8\r\n10 6\r\n7 6\r\n2 10\r\n4 2\r\n9 4\r\n9 3\r\n2 3\r\n1 9 57\r\n2 2\r\n1 6 50\r\n1 5 34\r\n1 8 45\r\n1 9 39\r\n2 2\r\n1 10 1\r\n2 4\r\n",
                "1\r\n3\r\n2\r\n1\r\n"
            ],
            [
                "10 10\r\n15 39 52 24 36 30 46 21 40 24\r\n5 9\r\n5 3\r\n5 10\r\n1 3\r\n9 4\r\n9 8\r\n9 7\r\n7 2\r\n3 6\r\n1 4 47\r\n1 7 25\r\n1 10 42\r\n2 10\r\n1 2 18\r\n1 1 60\r\n1 7 56\r\n2 7\r\n2 9\r\n2 10\r\n",
                "1\r\n1\r\n2\r\n1\r\n"
            ],
            [
                "10 10\r\n39 28 21 20 11 11 40 30 42 14\r\n7 1\r\n10 1\r\n6 1\r\n1 9\r\n5 1\r\n8 1\r\n1 3\r\n1 4\r\n2 10\r\n1 7 55\r\n2 3\r\n1 8 18\r\n1 10 48\r\n2 7\r\n1 6 26\r\n2 2\r\n1 1 4\r\n2 9\r\n1 5 31\r\n",
                "1\r\n1\r\n1\r\n1\r\n"
            ]
        ]
    }
]