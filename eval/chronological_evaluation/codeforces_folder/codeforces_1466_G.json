[
    {
        "name": "Song of the Sirens",
        "description": "Whoso in ignorance draws near to them and hears the Sirens' voice, he\nnevermore returns.Homer, Odyssey In the times of Jason and the Argonauts, it\nwas well known that sirens use the sound of their songs to lure sailors into\ntheir demise. Yet only a few knew that every time sirens call a sailor by his\nname, his will weakens, making him more vulnerable. For the purpose of this\nproblem, both siren songs and names of the sailors will be represented as\nstrings of lowercase English letters. The more times the sailor's name occurs\nas a contiguous substring of the song, the greater danger he is in. Jason\nfound out that sirens can sing one of the \n    n+1\n songs, which have the\nfollowing structure: let \n    s_i\n (\n    0 \n    \u2264 i \n    \u2264 n\n) be the\n\n    i\n-th song and \n    t\n be a string of length \n    n\n, then for every \n    i\n    < n\n: \n    s_i+1 = s_i t_i s_i\n. In other words \n    i+1\n-st song is the\nconcatenation of \n    i\n-th song, \n    i\n-th letter (\n    0\n-indexed) of\n\n    t\n and the \n    i\n-th song. Fortunately, he also knows \n    s_0\n and\n\n    t\n. Jason wonders how many times a sailor's name is mentioned in a\nparticular song. Answer \n    q\n queries: given the sailor's name (\n    w\n) and\nthe index of a song (\n    i\n) output the number of occurrences of \n    w\n in\n\n    s_i\n as a substring. As this number can be quite large, output its\nremainder modulo \n    10^9+7\n. Input In the first line of input there are two\nintegers \n    n\n, \n    q\n ( \n    1 \n    \u2264 n, q \n    \u2264 10^5\n) meaning that\nthere are \n    n+1\n songs and \n    q\n queries. In the next two lines strings\n\n    s_0\n and \n    t\n follow (\n    1 \n    \u2264 |s_0| \n    \u2264 100, |t| = n\n). Next\n\n    q\n lines describe the queries; each one contains an integer \n    k\n (\n    0 \n    \u2264 k \n    \u2264 n\n), the index of the song sung by the sirens, and a non-\nempty string \n    w\n, which is the name of a sailor. All strings in this\nproblem consist only of lowercase English letters, and the sum of lengths of\nsailors' names does not exceed \n    10^6\n. Output Output \n    q\n lines,\n\n    i\n-th of them should contain the remainder modulo \n    10^9+7\n of the\nnumber of occurrences of \n    w\n in \n    s_k\n. Examples Input 3 3 aa bcd 2 aba\n3 ca 3 aa Output 2 2 8 Input 4 5 aba bbac 1 a 3 baca 3 ab 2 bab 4 aba Output 4\n0 14 6 28 Note In the first example songs of the sirens are as follows: Song\n\n    0\n: aa Song \n    1\n: aabaa Song \n    2\n: aabaacaabaa Song \n    3\n:\naabaacaabaadaabaacaabaa\n\n",
        "cf_contest_id": 1466,
        "cf_index": "G",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "combinatorics",
            "divide and conquer",
            "hashing",
            "math",
            "string suffix structures",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3 3\r\naa\r\nbcd\r\n2 aba\r\n3 ca\r\n3 aa\r\n",
                "2\r\n2\r\n8\r\n"
            ],
            [
                "4 5\r\naba\r\nbbac\r\n1 a\r\n3 baca\r\n3 ab\r\n2 bab\r\n4 aba\r\n",
                "4\r\n0\r\n14\r\n6\r\n28\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\nagaabdamaafadaebabgdaaaafeaccf\r\nx\r\n0 gajaaacacdabadaacaaaaddbaaaaaa\r\n",
                "0\r\n"
            ],
            [
                "4 4\r\naba\r\nbbac\r\n1 a\r\n3 baca\r\n3 ab\r\n2 bab\r\n",
                "4\r\n0\r\n14\r\n6\r\n"
            ]
        ]
    }
]