[
    {
        "name": "Sending a Sequence Over the Network",
        "description": "The sequence \n    a\n is sent over the network as follows: sequence \n    a\n is\nsplit into segments (each element of the sequence belongs to exactly one\nsegment, each segment is a group of consecutive elements of sequence); for\neach segment, its length is written next to it, either to the left of it or to\nthe right of it; the resulting sequence \n    b\n is sent over the network. For\nexample, we needed to send the sequence \n    a = [1, 2, 3, 1, 2, 3]\n. Suppose\nit was split into segments as follows: \n    [\n    1] +\n    [\n    2, 3, 1] + [\n    2, 3]\n. Then we could have the\nfollowing sequences: \n    b = [1, \n    1, 3, \n    2, 3, 1,\n    \n    2, 3, 2]\n, \n    b = [\n    1, 1, 3,\n    \n    2, 3, 1, 2, \n    2, 3]\n, \n    b =\n    [\n    1, 1, \n    2, 3, 1, 3, 2, \n    2,\n    3]\n, \n    b = [\n    1, 1,\n    2, 3, 1, 3,\n    \n    2, 3, 2]\n. If a different segmentation had been used, the\nsent sequence might have been different. The sequence \n    b\n is given. Could\nthe sequence \n    b\n be sent over the network? In other words, is there such a\nsequence \n    a\n that converting \n    a\n to send it over the network could\nresult in a sequence \n    b\n? Input The first line of input data contains a\nsingle integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the number of test\ncases. Each test case consists of two lines. The first line of the test case\ncontains an integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the size\nof the sequence \n    b\n. The second line of test case contains \n    n\n\nintegers \n    b_1, b_2, \n    \u2026, b_n\n (\n    1 \n    \u2264 b_i \n    \u2264 10^9\n) \u2014 the\nsequence \n    b\n itself. It is guaranteed that the sum of \n    n\n over all\ntest cases does not exceed \n    2 \n    \u00b7 10^5\n. Output For each test case\nprint on a separate line: YES if sequence \n    b\n could be sent over the\nnetwork, that is, if sequence \n    b\n could be obtained from some sequence\n\n    a\n to send \n    a\n over the network. NO otherwise. You can output YES and\nNO in any case (for example, strings yEs, yes, Yes and YES will be recognized\nas positive response). Example Input 7 9 1 1 2 3 1 3 2 2 3 5 12 1 2 7 5 6 5 7\n8 9 10 3 4 4 8 6 2 2 3 1 10 4 6 2 1 9 4 9 3 4 2 1 1 Output YES YES YES NO YES\nYES NO Note In the first case, the sequence \n    b\n could be obtained from the\nsequence \n    a = [1, 2, 3, 1, 2, 3]\n with the following partition:\n\n    [\n    1] + [\n    2, 3, 1] + [\n    2,\n    3]\n. The sequence \n    b\n: \n    [\n    1, 1, \n    2, 3,\n    1, 3, 2, \n    2, 3]\n. In the second case, the sequence \n    b\n\ncould be obtained from the sequence \n    a = [12, 7, 5]\n with the following\npartition: \n    [\n    12] + [\n    7, 5]\n. The sequence\n\n    b\n: \n    [\n    12, 1, 2, \n    7, 5]\n. In the third\ncase, the sequence \n    b\n could be obtained from the sequence \n    a = [7, 8,\n    9, 10, 3]\n with the following partition: \n    [\n    7, 8, 9, 10,\n    3]\n. The sequence \n    b\n: \n    [5, \n    7, 8, 9, 10, 3]\n. In the\nfourth case, there is no sequence \n    a\n such that changing \n    a\n for\ntransmission over the network could produce a sequence \n    b\n.\n\n",
        "cf_contest_id": 1741,
        "cf_index": "E",
        "cf_rating": 1600,
        "difficulty": 0,
        "cf_tags": [
            "dp"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "7\r\n9\r\n1 1 2 3 1 3 2 2 3\r\n5\r\n12 1 2 7 5\r\n6\r\n5 7 8 9 10 3\r\n4\r\n4 8 6 2\r\n2\r\n3 1\r\n10\r\n4 6 2 1 9 4 9 3 4 2\r\n1\r\n1\r\n",
                "YES\r\nYES\r\nYES\r\nNO\r\nYES\r\nYES\r\nNO\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n100\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 8 8\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n73\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 100 100 100 100\r\n",
                "NO\r\n"
            ],
            [
                "1\r\n111\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "NO\r\n"
            ]
        ]
    }
]