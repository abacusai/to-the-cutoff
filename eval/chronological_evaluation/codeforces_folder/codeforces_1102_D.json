[
    {
        "name": "Balanced Ternary String",
        "description": "You are given a string \n    s\n consisting of exactly \n    n\n characters, and\neach character is either '0', '1' or '2'. Such strings are called ternary\nstrings. Your task is to replace minimum number of characters in this string\nwith other characters to obtain a balanced ternary string (balanced ternary\nstring is a ternary string such that the number of characters '0' in this\nstring is equal to the number of characters '1', and the number of characters\n'1' (and '0' obviously) is equal to the number of characters '2'). Among all\npossible balanced ternary strings you have to obtain the lexicographically\n(alphabetically) smallest. Note that you can neither remove characters from\nthe string nor add characters to the string. Also note that you can replace\nthe given characters only with characters '0', '1' and '2'. It is guaranteed\nthat the answer exists. Input The first line of the input contains one integer\n\n    n\n (\n    3 \n    \u2264 n \n    \u2264 3 \n    \u00b7 10^5\n, \n    n\n is divisible by\n\n    3\n) \u2014 the number of characters in \n    s\n. The second line contains the\nstring \n    s\n consisting of exactly \n    n\n characters '0', '1' and '2'.\nOutput Print one string \u2014 the lexicographically (alphabetically) smallest\nbalanced ternary string which can be obtained from the given one with minimum\nnumber of replacements. Because \n    n\n is divisible by \n    3\n it is obvious\nthat the answer exists. And it is obvious that there is only one possible\nanswer. Examples Input 3 121 Output 021 Input 6 000000 Output 001122 Input 6\n211200 Output 211200 Input 6 120110 Output 120120\n\n",
        "cf_contest_id": 1102,
        "cf_index": "D",
        "cf_rating": 1500,
        "difficulty": 0,
        "cf_tags": [
            "greedy",
            "strings"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "3\r\n121\r\n",
                "021"
            ],
            [
                "6\r\n000000\r\n",
                "001122"
            ],
            [
                "6\r\n211200\r\n",
                "211200"
            ],
            [
                "6\r\n120110\r\n",
                "120120"
            ]
        ],
        "private_cases": [
            [
                "6\r\n111111\r\n",
                "001122"
            ],
            [
                "69\r\n000000000000000000000000000000000000000000000000000000000000000000000\r\n",
                "000000000000000000000001111111111111111111111122222222222222222222222"
            ],
            [
                "12\r\n222222200000\r\n",
                "111222200001"
            ],
            [
                "3\r\n111\r\n",
                "012"
            ],
            [
                "9\r\n222210000\r\n",
                "122210001"
            ],
            [
                "12\r\n111111111111\r\n",
                "000011112222"
            ],
            [
                "12\r\n222111220110\r\n",
                "022011220110"
            ],
            [
                "12\r\n000022220000\r\n",
                "000022221111"
            ],
            [
                "12\r\n012012222000\r\n",
                "011012222001"
            ],
            [
                "12\r\n222222111111\r\n",
                "002222001111"
            ],
            [
                "9\r\n211112221\r\n",
                "000112221"
            ],
            [
                "6\r\n220000\r\n",
                "220011"
            ],
            [
                "6\r\n002202\r\n",
                "001212"
            ],
            [
                "6\r\n222000\r\n",
                "122001"
            ],
            [
                "3\r\n002\r\n",
                "012"
            ],
            [
                "3\r\n000\r\n",
                "012"
            ],
            [
                "60\r\n122202011021020021110110101221221001221010101110221212112211\r\n",
                "022202000020020020110110101221221001221010101110221212112212"
            ],
            [
                "3\r\n001\r\n",
                "021"
            ],
            [
                "3\r\n022\r\n",
                "012"
            ],
            [
                "15\r\n000000000222222\r\n",
                "000001111122222"
            ],
            [
                "6\r\n020202\r\n",
                "010212"
            ],
            [
                "3\r\n211\r\n",
                "201"
            ],
            [
                "3\r\n020\r\n",
                "021"
            ],
            [
                "3\r\n122\r\n",
                "102"
            ],
            [
                "9\r\n211112212\r\n",
                "000112212"
            ],
            [
                "6\r\n221211\r\n",
                "020211"
            ],
            [
                "3\r\n021\r\n",
                "021"
            ]
        ]
    }
]