[
    {
        "name": "Median Mountain Range",
        "description": "Berland \u2014 is a huge country with diverse geography. One of the most famous\nnatural attractions of Berland is the \"Median mountain range\". This mountain\nrange is \n    n\n mountain peaks, located on one straight line and numbered in\norder of \n    1\n to \n    n\n. The height of the \n    i\n-th mountain top is\n\n    a_i\n. \"Median mountain range\" is famous for the so called alignment of\nmountain peaks happening to it every day. At the moment of alignment\nsimultaneously for each mountain from \n    2\n to \n    n - 1\n its height\nbecomes equal to the median height among it and two neighboring mountains.\nFormally, if before the alignment the heights were equal \n    b_i\n, then after\nthe alignment new heights \n    a_i\n are as follows: \n    a_1 = b_1\n, \n    a_n =\n    b_n\n and for all \n    i\n from \n    2\n to \n    n - 1\n \n    a_i =\n    \n    (b_i-1, b_i, b_i+1)\n. The median of three integers is\nthe second largest number among them. For example, \n    (5,1,2)\n    = 2\n, and \n    (4,2,4) = 4\n. Recently, Berland scientists\nhave proved that whatever are the current heights of the mountains, the\nalignment process will stabilize sooner or later, i.e. at some point the\naltitude of the mountains won't changing after the alignment any more. The\ngovernment of Berland wants to understand how soon it will happen, i.e. to\nfind the value of \n    c\n \u2014 how many alignments will occur, which will change\nthe height of at least one mountain. Also, the government of Berland needs to\ndetermine the heights of the mountains after \n    c\n alignments, that is, find\nout what heights of the mountains stay forever. Help scientists solve this\nimportant problem! Input The first line contains integers \n    n\n (\n    1 \n    \u2264\n    n \n    \u2264 500\n     000\n) \u2014 the number of mountains. The second line contains\nintegers \n    a_1, a_2, a_3, \n    \u2026, a_n\n (\n    1 \n    \u2264 a_i \n    \u2264 10^9\n) \u2014\ncurrent heights of the mountains. Output In the first line print \n    c\n \u2014 the\nnumber of alignments, which change the height of at least one mountain. In the\nsecond line print \n    n\n integers \u2014 the final heights of the mountains after\n\n    c\n alignments. Examples Input 5 1 2 1 2 1 Output 2 1 1 1 1 1 Input 6 1 3\n2 5 4 6 Output 1 1 2 3 4 5 6 Input 6 1 1 2 2 1 1 Output 0 1 1 2 2 1 1 Note In\nthe first example, the heights of the mountains at index \n    1\n and \n    5\n\nnever change. Since the median of \n    1\n, \n    2\n, \n    1\n is \n    1\n, the\nsecond and the fourth mountains will have height 1 after the first alignment,\nand since the median of \n    2\n, \n    1\n, \n    2\n is \n    2\n, the third\nmountain will have height 2 after the first alignment. This way, after one\nalignment the heights are \n    1\n, \n    1\n, \n    2\n, \n    1\n, \n    1\n. After\nthe second alignment the heights change into \n    1\n, \n    1\n, \n    1\n,\n\n    1\n, \n    1\n and never change from now on, so there are only \n    2\n\nalignments changing the mountain heights. In the third examples the alignment\ndoesn't change any mountain height, so the number of alignments changing any\nheight is \n    0\n.\n\n",
        "cf_contest_id": 1322,
        "cf_index": "E",
        "cf_rating": 3300,
        "difficulty": 0,
        "cf_tags": [
            "data structures"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n1 2 1 2 1\r\n",
                "2\r\n1 1 1 1 1 "
            ],
            [
                "6\r\n1 3 2 5 4 6\r\n",
                "1\r\n1 2 3 4 5 6 "
            ],
            [
                "6\r\n1 1 2 2 1 1\r\n",
                "0\r\n1 1 2 2 1 1 "
            ]
        ],
        "private_cases": [
            [
                "1\r\n44884539\r\n",
                "0\r\n44884539 "
            ]
        ]
    }
]