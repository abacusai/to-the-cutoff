[
    {
        "name": "Online Meeting",
        "description": "Nearly each project of the F company has a whole team of developers working on\nit. They often are in different rooms of the office in different cities and\neven countries. To keep in touch and track the results of the project, the F\ncompany conducts shared online meetings in a Spyke chat. One day the director\nof the F company got hold of the records of a part of an online meeting of one\nsuccessful team. The director watched the record and wanted to talk to the\nteam leader. But how can he tell who the leader is? The director logically\nsupposed that the leader is the person who is present at any conversation\nduring a chat meeting. In other words, if at some moment of time at least one\nperson is present on the meeting, then the leader is present on the meeting.\nYou are the assistant director. Given the 'user logged on'/'user logged off'\nmessages of the meeting in the chronological order, help the director\ndetermine who can be the leader. Note that the director has the record of only\na continuous part of the meeting (probably, it's not the whole meeting). Input\nThe first line contains integers n and m (1 \u2264 n, m \u2264 10^5) \u2014 the number of\nteam participants and the number of messages. Each of the next m lines\ncontains a message in the format: '+ id': the record means that the person\nwith number id (1 \u2264 id \u2264 n) has logged on to the meeting. '- id': the record\nmeans that the person with number id (1 \u2264 id \u2264 n) has logged off from the\nmeeting. Assume that all the people of the team are numbered from 1 to n and\nthe messages are given in the chronological order. It is guaranteed that the\ngiven sequence is the correct record of a continuous part of the meeting. It\nis guaranteed that no two log on/log off events occurred simultaneously.\nOutput In the first line print integer k (0 \u2264 k \u2264 n) \u2014 how many people can be\nleaders. In the next line, print k integers in the increasing order \u2014 the\nnumbers of the people who can be leaders. If the data is such that no member\nof the team can be a leader, print a single number 0. Examples Input 5 4  1\n 2 \u00ad 2 \u00ad 1 Output 4 1 3 4 5 Input 3 2  1 \u00ad 2 Output 1 3 Input 2 4  1\n\u00ad 1  2 \u00ad 2 Output 0 Input 5 6  1 \u00ad 1 \u00ad 3  3  4 \u00ad 4 Output 3 2 3 5\nInput 2 4  1 \u00ad 2  2 \u00ad 1 Output 0\n\n",
        "cf_contest_id": 420,
        "cf_index": "B",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5 4\r\n+ 1\r\n+ 2\r\n- 2\r\n- 1\r\n",
                "4\r\n1 3 4 5 "
            ],
            [
                "3 2\r\n+ 1\r\n- 2\r\n",
                "1\r\n3 "
            ],
            [
                "2 4\r\n+ 1\r\n- 1\r\n+ 2\r\n- 2\r\n",
                "0\r\n"
            ],
            [
                "5 6\r\n+ 1\r\n- 1\r\n- 3\r\n+ 3\r\n+ 4\r\n- 4\r\n",
                "3\r\n2 3 5 "
            ],
            [
                "2 4\r\n+ 1\r\n- 2\r\n+ 2\r\n- 1\r\n",
                "0\r\n"
            ]
        ],
        "private_cases": [
            [
                "1 1\r\n+ 1\r\n",
                "1\r\n1 "
            ],
            [
                "2 1\r\n- 2\r\n",
                "2\r\n1 2 "
            ],
            [
                "3 5\r\n- 1\r\n+ 1\r\n+ 2\r\n- 2\r\n+ 3\r\n",
                "1\r\n1 "
            ],
            [
                "10 8\r\n+ 1\r\n- 1\r\n- 2\r\n- 3\r\n+ 3\r\n+ 7\r\n- 7\r\n+ 9\r\n",
                "6\r\n3 4 5 6 8 10 "
            ],
            [
                "5 5\r\n+ 5\r\n+ 2\r\n+ 3\r\n+ 4\r\n+ 1\r\n",
                "1\r\n5 "
            ],
            [
                "5 4\r\n+ 1\r\n- 1\r\n+ 1\r\n+ 2\r\n",
                "4\r\n1 3 4 5 "
            ],
            [
                "10 3\r\n+ 1\r\n+ 2\r\n- 7\r\n",
                "7\r\n3 4 5 6 8 9 10 "
            ],
            [
                "1 20\r\n- 1\r\n+ 1\r\n- 1\r\n+ 1\r\n- 1\r\n+ 1\r\n- 1\r\n+ 1\r\n- 1\r\n+ 1\r\n- 1\r\n+ 1\r\n- 1\r\n+ 1\r\n- 1\r\n+ 1\r\n- 1\r\n+ 1\r\n- 1\r\n+ 1\r\n",
                "1\r\n1 "
            ],
            [
                "20 1\r\n- 16\r\n",
                "20\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 "
            ],
            [
                "50 20\r\n- 6\r\n+ 40\r\n- 3\r\n- 23\r\n+ 31\r\n- 27\r\n- 40\r\n+ 25\r\n+ 29\r\n- 41\r\n- 16\r\n+ 23\r\n+ 20\r\n+ 13\r\n- 45\r\n+ 40\r\n+ 24\r\n+ 22\r\n- 23\r\n+ 17\r\n",
                "34\r\n1 2 4 5 7 8 9 10 11 12 14 15 18 19 21 26 28 30 32 33 34 35 36 37 38 39 42 43 44 46 47 48 49 50 "
            ],
            [
                "20 50\r\n+ 5\r\n+ 11\r\n- 5\r\n+ 6\r\n- 16\r\n- 13\r\n+ 5\r\n+ 7\r\n- 8\r\n- 7\r\n- 10\r\n+ 10\r\n- 20\r\n- 19\r\n+ 17\r\n- 2\r\n+ 2\r\n+ 19\r\n+ 18\r\n- 2\r\n- 6\r\n- 5\r\n+ 6\r\n+ 4\r\n- 14\r\n+ 14\r\n- 9\r\n+ 15\r\n- 17\r\n- 15\r\n+ 2\r\n+ 5\r\n- 2\r\n+ 9\r\n- 11\r\n+ 2\r\n- 19\r\n+ 7\r\n+ 12\r\n+ 16\r\n+ 19\r\n- 18\r\n- 2\r\n+ 18\r\n- 9\r\n- 10\r\n+ 9\r\n+ 13\r\n- 14\r\n- 16\r\n",
                "2\r\n1 3 "
            ],
            [
                "100 5\r\n- 60\r\n- 58\r\n+ 25\r\n- 32\r\n+ 86\r\n",
                "95\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 26 27 28 29 30 31 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 59 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 87 88 89 90 91 92 93 94 95 96 97 98 99 100 "
            ],
            [
                "4 4\r\n+ 2\r\n- 1\r\n- 3\r\n- 2\r\n",
                "1\r\n4 "
            ],
            [
                "3 3\r\n- 2\r\n+ 1\r\n+ 2\r\n",
                "1\r\n3 "
            ],
            [
                "5 4\r\n- 1\r\n- 2\r\n+ 3\r\n+ 4\r\n",
                "1\r\n5 "
            ],
            [
                "6 6\r\n- 5\r\n- 6\r\n- 3\r\n- 1\r\n- 2\r\n- 4\r\n",
                "1\r\n4 "
            ],
            [
                "10 7\r\n- 8\r\n+ 1\r\n+ 2\r\n+ 3\r\n- 2\r\n- 3\r\n- 1\r\n",
                "6\r\n4 5 6 7 9 10 "
            ],
            [
                "10 7\r\n- 8\r\n+ 1\r\n+ 2\r\n+ 3\r\n- 2\r\n- 3\r\n- 1\r\n",
                "6\r\n4 5 6 7 9 10 "
            ],
            [
                "4 10\r\n+ 2\r\n- 1\r\n- 2\r\n- 3\r\n+ 3\r\n+ 2\r\n+ 4\r\n- 2\r\n+ 2\r\n+ 1\r\n",
                "1\r\n3 "
            ],
            [
                "4 9\r\n+ 2\r\n- 1\r\n- 2\r\n- 3\r\n+ 3\r\n+ 2\r\n+ 4\r\n- 2\r\n+ 2\r\n",
                "1\r\n3 "
            ],
            [
                "10 8\r\n+ 1\r\n- 1\r\n- 4\r\n+ 4\r\n+ 3\r\n+ 7\r\n- 7\r\n+ 9\r\n",
                "6\r\n2 4 5 6 8 10 "
            ],
            [
                "10 6\r\n+ 2\r\n- 2\r\n+ 2\r\n- 2\r\n+ 2\r\n- 3\r\n",
                "8\r\n1 4 5 6 7 8 9 10 "
            ],
            [
                "10 5\r\n+ 2\r\n- 2\r\n+ 2\r\n- 2\r\n- 3\r\n",
                "9\r\n1 3 4 5 6 7 8 9 10 "
            ],
            [
                "10 11\r\n+ 1\r\n- 1\r\n- 2\r\n+ 3\r\n- 3\r\n- 4\r\n+ 5\r\n- 5\r\n- 6\r\n+ 6\r\n+ 7\r\n",
                "4\r\n6 8 9 10 "
            ],
            [
                "10 10\r\n+ 1\r\n- 1\r\n- 2\r\n+ 3\r\n- 3\r\n- 4\r\n+ 5\r\n- 5\r\n- 6\r\n+ 6\r\n",
                "5\r\n6 7 8 9 10 "
            ],
            [
                "10 9\r\n+ 1\r\n- 1\r\n- 2\r\n+ 3\r\n- 3\r\n- 4\r\n+ 5\r\n- 5\r\n- 6\r\n",
                "5\r\n6 7 8 9 10 "
            ],
            [
                "10 12\r\n+ 1\r\n- 1\r\n- 2\r\n+ 3\r\n- 3\r\n- 4\r\n+ 5\r\n- 5\r\n- 6\r\n+ 6\r\n+ 7\r\n- 7\r\n",
                "4\r\n6 8 9 10 "
            ],
            [
                "2 2\r\n- 1\r\n+ 1\r\n",
                "2\r\n1 2 "
            ],
            [
                "7 4\r\n- 2\r\n- 3\r\n+ 3\r\n- 6\r\n",
                "4\r\n1 4 5 7 "
            ],
            [
                "2 3\r\n+ 1\r\n+ 2\r\n- 1\r\n",
                "0\r\n"
            ],
            [
                "5 5\r\n- 2\r\n+ 1\r\n+ 2\r\n- 2\r\n+ 4\r\n",
                "2\r\n3 5 "
            ],
            [
                "5 3\r\n+ 1\r\n- 1\r\n+ 2\r\n",
                "3\r\n3 4 5 "
            ],
            [
                "4 4\r\n- 1\r\n+ 1\r\n- 1\r\n+ 2\r\n",
                "2\r\n3 4 "
            ]
        ]
    }
]