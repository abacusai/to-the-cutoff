[
    {
        "name": "Bamboo Partition",
        "description": "Vladimir wants to modernize partitions in his office. To make the office more\ncomfortable he decided to remove a partition and plant several bamboos in a\nrow. He thinks it would be nice if there are n bamboos in a row, and the i-th\nfrom the left is ai meters high. Vladimir has just planted n bamboos in a row,\neach of which has height 0 meters right now, but they grow 1 meter each day.\nIn order to make the partition nice Vladimir can cut each bamboo once at any\nheight (no greater that the height of the bamboo), and then the bamboo will\nstop growing. Vladimir wants to check the bamboos each d days (i.e. d days\nafter he planted, then after 2d days and so on), and cut the bamboos that\nreached the required height. Vladimir wants the total length of bamboo parts\nhe will cut off to be no greater than k meters. What is the maximum value d he\ncan choose so that he can achieve what he wants without cutting off more than\nk meters of bamboo? Input The first line contains two integers n and k (1 \u2264 n\n\u2264 100, 1 \u2264 k \u2264 10^11) \u2014 the number of bamboos and the maximum total length of\ncut parts, in meters. The second line contains n integers a1, a2, ..., an (1 \u2264\nai \u2264 10^9) \u2014 the required heights of bamboos, in meters. Output Print a single\ninteger \u2014 the maximum value of d such that Vladimir can reach his goal.\nExamples Input 3 4 1 3 5 Output 3 Input 3 40 10 30 50 Output 32 Note In the\nfirst example Vladimir can check bamboos each 3 days. Then he will cut the\nfirst and the second bamboos after 3 days, and the third bamboo after 6 days.\nThe total length of cut parts is 2 + 0 + 1 = 3 meters.\n\n",
        "cf_contest_id": 830,
        "cf_index": "C",
        "cf_rating": 2300,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "data structures",
            "implementation",
            "math",
            "number theory",
            "sortings",
            "two pointers"
        ],
        "time_limit_seconds": 2.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "3 4\r\n1 3 5\r\n",
                "3\r\n"
            ],
            [
                "3 40\r\n10 30 50\r\n",
                "32\r\n"
            ]
        ],
        "private_cases": [
            [
                "20 53\r\n32 64 20 41 97 50 20 66 68 22 60 74 61 97 54 80 30 72 59 18\r\n",
                "6\r\n"
            ],
            [
                "100 82\r\n51 81 14 37 17 78 92 64 15 8 86 89 8 87 77 66 10 15 12 100 25 92 47 21 78 20 63 13 49 41 36 41 79 16 87 87 69 3 76 80 60 100 49 70 59 72 8 38 71 45 97 71 14 76 54 81 4 59 46 39 29 92 3 49 22 53 99 59 52 74 31 92 43 42 23 44 9 82 47 7 40 12 9 3 55 37 85 46 22 84 52 98 41 21 77 63 17 62 91 64\r\n",
                "2\r\n"
            ],
            [
                "10 99\r\n62 10 47 53 9 83 33 15 24 28\r\n",
                "21\r\n"
            ],
            [
                "100 7\r\n4 5 5 10 10 5 8 5 7 4 5 4 6 8 8 2 6 3 3 10 7 10 8 6 2 7 3 9 7 7 2 4 5 2 4 9 5 10 1 10 5 10 4 1 3 4 2 6 9 9 9 10 6 2 5 6 1 8 10 4 10 3 4 10 5 5 4 10 4 5 3 7 10 2 7 3 6 9 6 1 6 5 5 4 6 6 4 4 1 5 1 6 6 6 8 8 6 2 6 3\r\n",
                "1\r\n"
            ],
            [
                "100 5\r\n5 2 4 5 4 4 4 4 2 5 3 4 2 4 4 1 1 5 3 2 2 1 3 3 2 5 3 4 5 1 3 5 4 4 4 3 1 4 4 3 4 5 2 5 4 2 1 2 2 3 5 5 5 1 4 5 3 1 4 2 2 5 1 5 3 4 1 5 1 2 2 3 5 1 3 2 4 2 4 2 2 4 1 3 5 2 2 2 3 3 4 3 2 2 5 5 4 2 5 4\r\n",
                "1\r\n"
            ],
            [
                "100 2619\r\n1207 5971 951 8250 6594 219 9403 9560 2368 289 3502 6626 1009 828 2378 615 3092 3751 841 7454 8001 1345 1644 1021 7088 7083 2805 1971 7456 6494 3805 9279 8737 8994 2975 2566 6490 1720 3595 8721 8500 4850 9716 2076 9532 1077 8370 2809 2885 1838 6081 667 900 9786 5600 3707 8818 7580 6067 2215 1726 2171 2338 462 7592 9281 4104 1733 7223 6557 372 4197 9956 2098 6875 3226 9997 4214 8644 1237 259 5252 2379 1115 7452 9338 8430 5013 7906 7804 8339 4782 5329 4607 7632 2664 1437 7518 2674 8519\r\n",
                "57\r\n"
            ],
            [
                "2 948507270\r\n461613425 139535653\r\n",
                "774828174\r\n"
            ],
            [
                "1 1215752192\r\n1000000000\r\n",
                "2215752192\r\n"
            ],
            [
                "2 1215752192\r\n999999999 1000000000\r\n",
                "1607876095\r\n"
            ],
            [
                "100 1215752192\r\n33 37 57 77 50 53 88 83 76 89 79 28 73 25 5 15 22 29 97 7 46 69 51 52 81 14 9 35 27 74 66 2 84 59 10 1 19 39 40 99 78 82 100 95 3 21 44 75 62 12 58 36 72 31 26 98 64 34 63 41 65 4 86 85 32 96 71 11 94 60 56 45 8 13 47 61 80 43 67 49 87 68 55 48 16 18 54 90 42 20 70 92 38 30 17 24 91 6 93 23\r\n",
                "12157572\r\n"
            ],
            [
                "100 1\r\n73 83 99 13 69 2 60 3 68 46 1 87 58 39 21 84 7 82 55 80 33 40 4 16 20 50 78 5 62 94 95 66 75 42 65 63 72 76 11 45 56 37 93 91 98 52 74 71 49 90 8 53 38 85 86 27 100 92 97 32 59 34 14 22 19 79 51 89 18 64 31 44 6 29 47 10 41 30 70 81 24 9 26 35 15 17 36 43 25 61 77 57 88 96 12 54 28 48 23 67\r\n",
                "1\r\n"
            ],
            [
                "100 100\r\n87 37 55 61 98 38 79 11 32 56 23 27 83 36 41 9 94 82 57 7 39 19 1 29 77 59 78 35 70 50 30 26 64 21 46 5 18 60 93 74 3 73 34 14 22 91 8 69 12 10 58 89 17 65 80 63 71 15 31 33 66 45 90 20 86 76 96 81 40 6 85 25 42 44 2 100 16 51 95 49 62 47 4 52 43 28 99 97 53 48 13 72 68 88 54 75 84 67 24 92\r\n",
                "2\r\n"
            ],
            [
                "100 1215752192\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n",
                "12157522\r\n"
            ],
            [
                "39 33087783\r\n70600647 2266901 11966839 31198350 24855193 11526437 976383 74744419 100554597 48347342 72742435 1886535 15699879 12775143 3554161 31308764 25824153 31740293 25001473 15377604 90766535 81246786 35305728 88961314 70878298 47024065 96680069 38135882 80553110 18049023 63601987 81673677 39237071 79565855 13467611 66174846 75022463 63762145 3355796\r\n",
                "2290215\r\n"
            ],
            [
                "27 56379627\r\n67793612 34811850 20130370 79625926 35488291 62695111 76809609 2652596 18057723 61935027 62863641 43354418 50508660 29330027 28838758 19040655 19092404 56094994 69200145 36483441 18502131 77853701 20991083 67819468 32956589 80681963 41432161\r\n",
                "5275618\r\n"
            ],
            [
                "1 100000000000\r\n1000000000\r\n",
                "101000000000\r\n"
            ],
            [
                "1 100000000000\r\n1\r\n",
                "100000000001\r\n"
            ],
            [
                "4 1\r\n999999998 999999998 1000000000 1000000000\r\n",
                "2\r\n"
            ],
            [
                "1 78110679371\r\n570497240\r\n",
                "78681176611\r\n"
            ],
            [
                "42 54763468991\r\n628145517 376140463 883515281 186969586 762888636 326402540 98152103 158176573 61402893 127860890 9580639 570870045 646139320 178509023 484027667 61263305 841082556 558212775 940563716 26389630 579113529 496148000 925801173 837151741 70301174 656585276 285845006 902071051 403573724 727123763 9467291 296231663 631265401 899374334 520690250 798571511 491747710 799313373 643215696 789204467 614608449 162733265\r\n",
                "1791188095\r\n"
            ]
        ]
    }
]