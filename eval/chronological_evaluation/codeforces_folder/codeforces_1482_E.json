[
    {
        "name": "Skyline Photo",
        "description": "Alice is visiting New York City. To make the trip fun, Alice will take photos\nof the city skyline and give the set of photos as a present to Bob. However,\nshe wants to find the set of photos with maximum beauty and she needs your\nhelp. There are \n    n\n buildings in the city, the \n    i\n-th of them has\npositive height \n    h_i\n. All \n    n\n building heights in the city are\ndifferent. In addition, each building has a beauty value \n    b_i\n. Note that\nbeauty can be positive or negative, as there are ugly buildings in the city\ntoo. A set of photos consists of one or more photos of the buildings in the\nskyline. Each photo includes one or more buildings in the skyline that form a\ncontiguous segment of indices. Each building needs to be in exactly one photo.\nThis means that if a building does not appear in any photo, or if a building\nappears in more than one photo, the set of pictures is not valid. The beauty\nof a photo is equivalent to the beauty \n    b_i\n of the shortest building in\nit. The total beauty of a set of photos is the sum of the beauty of all photos\nin it. Help Alice to find the maximum beauty a valid set of photos can have.\nInput The first line contains an integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 3 \n    \u00b7\n    10^5\n), the number of buildings on the skyline. The second line contains\n\n    n\n distinct integers \n    h_1, h_2, \n    \u2026, h_n\n (\n    1 \n    \u2264 h_i \n    \u2264\n    n\n). The \n    i\n-th number represents the height of building \n    i\n. The\nthird line contains \n    n\n integers \n    b_1, b_2, \n    \u2026, b_n\n (\n    -10^9\n    \n    \u2264 b_i \n    \u2264 10^9\n). The \n    i\n-th number represents the beauty of\nbuilding \n    i\n. Output Print one number representing the maximum beauty\nAlice can achieve for a valid set of photos of the skyline. Examples Input 5 1\n2 3 5 4 1 5 3 2 4 Output 15 Input 5 1 4 3 2 5 -3 4 -10 2 7 Output 10 Input 2 2\n1 -2 -3 Output -3 Input 10 4 7 3 2 5 1 9 10 6 8 -4 40 -46 -8 -16 4 -10 41 12 3\nOutput 96 Note In the first example, Alice can achieve maximum beauty by\ntaking five photos, each one containing one building. In the second example,\nAlice can achieve a maximum beauty of \n    10\n by taking four pictures: three\njust containing one building, on buildings \n    1\n, \n    2\n and \n    5\n, each\nphoto with beauty \n    -3\n, \n    4\n and \n    7\n respectively, and another\nphoto containing building \n    3\n and \n    4\n, with beauty \n    2\n. In the\nthird example, Alice will just take one picture of the whole city. In the\nfourth example, Alice can take the following pictures to achieve maximum\nbeauty: photos with just one building on buildings \n    1\n, \n    2\n, \n    8\n,\n\n    9\n, and \n    10\n, and a single photo of buildings \n    3\n, \n    4\n,\n\n    5\n, \n    6\n, and \n    7\n.\n\n",
        "cf_contest_id": 1482,
        "cf_index": "E",
        "cf_rating": 2100,
        "difficulty": 0,
        "cf_tags": [
            "data structures",
            "divide and conquer",
            "dp"
        ],
        "time_limit_seconds": 2.5,
        "memory_limit_bytes": 256.0,
        "public_cases": [],
        "private_cases": []
    }
]