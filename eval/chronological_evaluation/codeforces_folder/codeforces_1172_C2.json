[
    {
        "name": "Nauuo and Pictures (hard version)",
        "description": "The only difference between easy and hard versions is constraints. Nauuo is a\ngirl who loves random picture websites. One day she made a random picture\nwebsite by herself which includes \n    n\n pictures. When Nauuo visits the\nwebsite, she sees exactly one picture. The website does not display each\npicture with equal probability. The \n    i\n-th picture has a non-negative\nweight \n    w_i\n, and the probability of the \n    i\n-th picture being\ndisplayed is \n    w_i/\n    \u2211_j=1^nw_j\n. That is to say, the\nprobability of a picture to be displayed is proportional to its weight.\nHowever, Nauuo discovered that some pictures she does not like were displayed\ntoo often. To solve this problem, she came up with a great idea: when she saw\na picture she likes, she would add \n    1\n to its weight; otherwise, she would\nsubtract \n    1\n from its weight. Nauuo will visit the website \n    m\n times.\nShe wants to know the expected weight of each picture after all the \n    m\n\nvisits modulo \n    998244353\n. Can you help her? The expected weight of the\n\n    i\n-th picture can be denoted by \n    q_i/p_i\n where\n\n    (p_i,q_i)=1\n, you need to print an integer \n    r_i\n satisfying\n\n    0\n    \u2264 r_i<998244353\n and \n    r_i\n    \u00b7 p_i\n    \u2261\n    q_i\n    998244353\n. It can be proved that such \n    r_i\n exists and is\nunique. Input The first line contains two integers \n    n\n and \n    m\n\n(\n    1\n    \u2264 n\n    \u2264 2\n    \u00b7 10^5\n, \n    1\n    \u2264 m\n    \u2264 3000\n) \u2014 the number of\npictures and the number of visits to the website. The second line contains\n\n    n\n integers \n    a_1,a_2,\n    \u2026,a_n\n (\n    a_i\n is either \n    0\n or\n\n    1\n) \u2014 if \n    a_i=0\n , Nauuo does not like the \n    i\n-th picture;\notherwise Nauuo likes the \n    i\n-th picture. It is guaranteed that there is\nat least one picture which Nauuo likes. The third line contains \n    n\n\npositive integers \n    w_1,w_2,\n    \u2026,w_n\n (\n    w_i \n    \u2265 1\n) \u2014 the\ninitial weights of the pictures. It is guaranteed that the sum of all the\ninitial weights does not exceed \n    998244352-m\n. Output The output contains\n\n    n\n integers \n    r_1,r_2,\n    \u2026,r_n\n \u2014 the expected weights modulo\n\n    998244353\n. Examples Input 2 1 0 1 2 1 Output 332748119 332748119 Input 1\n2 1 1 Output 3 Input 3 3 0 1 1 4 3 5 Output 160955686 185138929 974061117 Note\nIn the first example, if the only visit shows the first picture with a\nprobability of \n    2/3\n, the final weights are \n    (1,1)\n; if the\nonly visit shows the second picture with a probability of \n    1/3\n,\nthe final weights are \n    (2,2)\n. So, both expected weights are \n    2/3\n    \u00b7 1+\n    1/3\n    \u00b7 2=\n    4/3\n . Because \n    332748119\n    \u00b7\n    3\n    \u2261 4\n    998244353\n, you need to print \n    332748119\n instead of\n\n    4/3\n or \n    1.3333333333\n. In the second example, there is only\none picture which Nauuo likes, so every time Nauuo visits the website,\n\n    w_1\n will be increased by \n    1\n. So, the expected weight is\n\n    1+2=3\n. Nauuo is very naughty so she didn't give you any hint of the\nthird example.\n\n",
        "cf_contest_id": 1172,
        "cf_index": "C2",
        "cf_rating": 2600,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "probabilities"
        ],
        "time_limit_seconds": 4.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "2 1\r\n0 1\r\n2 1\r\n",
                "332748119\r\n332748119\r\n"
            ],
            [
                "1 2\r\n1\r\n1\r\n",
                "3\r\n"
            ],
            [
                "3 3\r\n0 1 1\r\n4 3 5\r\n",
                "160955686\r\n185138929\r\n974061117\r\n"
            ]
        ],
        "private_cases": [
            [
                "5 5\r\n0 1 0 0 1\r\n2 4 1 2 1\r\n",
                "665717847\r\n333191345\r\n831981100\r\n665717847\r\n831981101\r\n"
            ],
            [
                "20 20\r\n0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 0\r\n109 1 24 122 136 42 25 112 110 15 26 48 35 10 86 13 41 6 24 15\r\n",
                "217595927\r\n149660176\r\n322657182\r\n290143118\r\n388896876\r\n296261274\r\n86540143\r\n507489163\r\n979723241\r\n248413934\r\n896431517\r\n195977977\r\n246884395\r\n633562669\r\n891842900\r\n947337935\r\n146601098\r\n897961056\r\n597111165\r\n451221827\r\n"
            ],
            [
                "20 30\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n1 1 3 2 1 3 2 1 1 2 1 1 2 2 4 2 1 5 2 3\r\n",
                "249561090\r\n249561090\r\n748683270\r\n499122180\r\n249561090\r\n748683270\r\n499122180\r\n249561090\r\n249561090\r\n499122180\r\n249561090\r\n249561090\r\n499122180\r\n499122180\r\n7\r\n499122180\r\n249561090\r\n249561097\r\n499122180\r\n748683270\r\n"
            ],
            [
                "20 30\r\n1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n1 2 1 3 1 4 1 5 1 1 2 3 1 1 3 3 2 2 1 2\r\n",
                "902255482\r\n806266611\r\n902255482\r\n710277740\r\n902255482\r\n537377994\r\n902255482\r\n518299998\r\n902255482\r\n902255482\r\n806266611\r\n710277740\r\n902255482\r\n902255482\r\n710277740\r\n710277740\r\n806266611\r\n806266611\r\n902255482\r\n806266611\r\n"
            ],
            [
                "20 30\r\n0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0\r\n3 4 1 2 1 1 1 2 5 2 1 2 3 1 1 2 3 2 1 2\r\n",
                "441078046\r\n920852179\r\n479774133\r\n959548266\r\n479774133\r\n479774133\r\n479774133\r\n959548266\r\n402381959\r\n263018694\r\n479774133\r\n959548266\r\n441078046\r\n479774133\r\n479774133\r\n959548266\r\n441078046\r\n959548266\r\n479774133\r\n959548266\r\n"
            ],
            [
                "20 30\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0\r\n1 1 3 2 3 1 2 2 3 2 2 2 2 2 2 3 3 1 1 2\r\n",
                "550803098\r\n550803098\r\n654164941\r\n103361843\r\n654164941\r\n550803098\r\n103361843\r\n103361843\r\n654164941\r\n103361843\r\n103361843\r\n103361843\r\n103361843\r\n103361843\r\n276551708\r\n654164941\r\n654164941\r\n138275854\r\n550803098\r\n103361843\r\n"
            ],
            [
                "20 30\r\n0 0 1 1 1 0 0 1 0 0 1 0 0 1 1 1 1 0 0 1\r\n1 2 2 2 2 2 1 1 2 1 4 1 2 5 3 4 1 1 2 1\r\n",
                "297511613\r\n595023226\r\n756311680\r\n756311680\r\n756311680\r\n595023226\r\n297511613\r\n378155840\r\n595023226\r\n297511613\r\n514379007\r\n297511613\r\n595023226\r\n892534847\r\n136223167\r\n514379007\r\n378155840\r\n297511613\r\n595023226\r\n378155840\r\n"
            ],
            [
                "20 30\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n765 451 7275 385 1686 78 554 114 1980 394 776 232 627 760 782 7 486 32 1100 1516\r\n",
                "491636110\r\n498623506\r\n486651408\r\n182179980\r\n6989399\r\n10980766\r\n871467875\r\n92836839\r\n509106603\r\n951327263\r\n211628580\r\n83852758\r\n11480438\r\n618912260\r\n58897200\r\n820057743\r\n605934809\r\n183676993\r\n948333237\r\n341401087\r\n"
            ],
            [
                "20 30\r\n1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1\r\n779 1317 1275 234 857 1531 785 265 679 767 1994 11 918 1146 1807 71 813 245 3926 580\r\n",
                "552990868\r\n90431251\r\n712871250\r\n952916426\r\n537881559\r\n151361542\r\n321464532\r\n89445141\r\n86037605\r\n17799187\r\n586392419\r\n241031286\r\n40642277\r\n699465709\r\n481837969\r\n920500985\r\n572000768\r\n195703359\r\n903238702\r\n911489090\r\n"
            ],
            [
                "20 30\r\n0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n128 574 205 490 611 1294 283 1690 1466 1896 272 19 1020 5032 357 1500 36 1749 1202 176\r\n",
                "389864218\r\n157345415\r\n537589523\r\n962131647\r\n753565149\r\n104281847\r\n378440811\r\n873692367\r\n690552162\r\n658861420\r\n578900375\r\n198248582\r\n923070965\r\n228091231\r\n572635926\r\n887695253\r\n795942304\r\n70748620\r\n510359933\r\n785624388\r\n"
            ],
            [
                "20 30\r\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0\r\n61 849 320 1007 624 441 1332 3939 1176 718 419 634 657 914 858 882 1019 1567 62 2521\r\n",
                "514012356\r\n393871659\r\n166092575\r\n569465276\r\n74319433\r\n306884170\r\n254628439\r\n656312237\r\n485609669\r\n216694535\r\n825782618\r\n110704962\r\n294216114\r\n131255421\r\n733108087\r\n613768340\r\n14181299\r\n610566194\r\n624888021\r\n887363731\r\n"
            ],
            [
                "20 30\r\n0 1 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 0 0\r\n244 1901 938 1350 1010 763 318 2158 1645 534 1356 563 295 1449 2306 224 1302 195 639 810\r\n",
                "300071414\r\n595185476\r\n40756239\r\n113904636\r\n440148868\r\n947268885\r\n456535325\r\n542868956\r\n183161324\r\n427608407\r\n61171180\r\n375813928\r\n43680359\r\n55509680\r\n30410255\r\n360521133\r\n535772284\r\n722568686\r\n663107799\r\n390646234\r\n"
            ],
            [
                "20 30\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n126679203 179924771 16639504 67055540 14134870 36407782 15024189 39367944 121531542 5400023 5834434 8539193 3686913 11287136 36370086 71808281 138206490 59846864 19052959 21446598\r\n",
                "615913610\r\n488825486\r\n773371096\r\n742795989\r\n193664548\r\n323188752\r\n32686082\r\n709701410\r\n293733249\r\n161181348\r\n193396792\r\n354491196\r\n708550409\r\n644392716\r\n323187536\r\n646345011\r\n487479735\r\n1930544\r\n322628919\r\n966734748\r\n"
            ],
            [
                "20 30\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\r\n144831196 28660251 62050800 52660762 23189000 12771861 73096012 25119113 119648684 16011144 51600638 74708999 6312006 26945863 68746869 58112898 5070 19157938 74351320 60263898\r\n",
                "132556548\r\n711988928\r\n6999755\r\n208709864\r\n320161276\r\n865416376\r\n320896979\r\n458941660\r\n671806481\r\n158009043\r\n351362956\r\n78248147\r\n927871852\r\n882014191\r\n988190329\r\n830735503\r\n1958329\r\n787106839\r\n942059547\r\n341315444\r\n"
            ],
            [
                "20 30\r\n0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0\r\n34095514 37349809 60555988 40280455 19504485 77297461 41415742 66290058 20631093 185280391 7151718 64927972 15611855 4317891 24600598 24588269 60808977 9108470 13217752 191209824\r\n",
                "313283482\r\n21804622\r\n682197550\r\n361027027\r\n756362680\r\n151917509\r\n716108102\r\n131732975\r\n237068086\r\n731869119\r\n190595295\r\n847684643\r\n847454143\r\n501579235\r\n129856516\r\n246699402\r\n205385635\r\n639100445\r\n614421017\r\n227076269\r\n"
            ],
            [
                "20 30\r\n0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0\r\n9380933 34450681 12329733 7732927 73910078 16165679 149467043 56914401 21809098 36934833 71019254 168559440 12033996 40465391 7156881 3312348 37150678 130625432 42709585 66115911\r\n",
                "813231583\r\n458087744\r\n445793615\r\n651101155\r\n484645642\r\n506668954\r\n896602699\r\n556862659\r\n145127201\r\n302005399\r\n558418033\r\n213871822\r\n57299634\r\n564466143\r\n767349204\r\n290138481\r\n12657688\r\n925337836\r\n827843024\r\n119362169\r\n"
            ],
            [
                "20 30\r\n0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 1 0 1\r\n66166717 200301718 6725634 95379617 42880832 48874211 64912554 36809296 13248978 58406666 53142218 45080678 19902257 58554006 23570140 14484661 7589423 78746789 11072716 52395211\r\n",
                "823107880\r\n742699237\r\n987770596\r\n549924308\r\n730188349\r\n913535291\r\n936423447\r\n122869154\r\n581668441\r\n749452306\r\n615454312\r\n176148736\r\n874336841\r\n897418997\r\n235568492\r\n24727530\r\n143875067\r\n15270097\r\n200154604\r\n356406452\r\n"
            ],
            [
                "20 30\r\n0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661 26210661\r\n",
                "76898501\r\n989279651\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n76898501\r\n"
            ],
            [
                "20 30\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\r\n5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803 5766803\r\n",
                "504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n504888981\r\n"
            ],
            [
                "10 3000\r\n1 1 1 1 1 0 0 0 1 1\r\n6 22 5 2 4 15 4 7 31 4\r\n",
                "561258918\r\n61460660\r\n467715765\r\n187086306\r\n374172612\r\n538110090\r\n143496024\r\n251118042\r\n903349037\r\n374172612\r\n"
            ]
        ]
    }
]