[
    {
        "name": "Tree Queries",
        "description": "You are given a tree consisting of \n    n\n vertices. Recall that a tree is an\nundirected connected acyclic graph. The given tree is rooted at the vertex\n\n    1\n. You have to process \n    q\n queries. In each query, you are given a\nvertex of the tree \n    v\n and an integer \n    k\n. To process a query, you may\ndelete any vertices from the tree in any order, except for the root and the\nvertex \n    v\n. When a vertex is deleted, its children become the children of\nits parent. You have to process a query in such a way that maximizes the value\nof \n    c(v) - m \n    \u00b7 k\n (where \n    c(v)\n is the resulting number of\nchildren of the vertex \n    v\n, and \n    m\n is the number of vertices you have\ndeleted). Print the maximum possible value you can obtain. The queries are\nindependent: the changes you make to the tree while processing a query don't\naffect the tree in other queries. Input The first line contains one integer\n\n    n\n (\n    1 \n    \u2264 n \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the number of vertices in the\ntree. Then \n    n-1\n lines follow, the \n    i\n-th of them contains two\nintegers \n    x_i\n and \n    y_i\n (\n    1 \n    \u2264 x_i, y_i \n    \u2264 n\n; \n    x_i \n    \n    y_i\n) \u2014 the endpoints of the \n    i\n-th edge. These edges form a tree. The\nnext line contains one integer \n    q\n (\n    1 \n    \u2264 q \n    \u2264 2 \n    \u00b7 10^5\n)\n\u2014 the number of queries. Then \n    q\n lines follow, the \n    j\n-th of them\ncontains two integers \n    v_j\n and \n    k_j\n (\n    1 \n    \u2264 v_j \n    \u2264 n\n; \n    0\n    \n    \u2264 k_j \n    \u2264 2 \n    \u00b7 10^5\n) \u2014 the parameters of the \n    j\n-th query.\nOutput For each query, print one integer \u2014 the maximum value of \n    c(v) - m\n    \n    \u00b7 k\n you can achieve. Example Input 8 6 7 3 2 8 3 5 7 7 4 7 1 7 3 6 1\n0 1 2 1 3 7 1 5 0 7 200000 Output 5 2 1 4 0 4 Note The tree in the first\nexample is shown in the following picture: Answers to the queries are obtained\nas follows: \n    v=1,k=0\n: you can delete vertices \n    7\n and \n    3\n, so the\nvertex \n    1\n has \n    5\n children (vertices \n    2\n, \n    4\n, \n    5\n,\n\n    6\n, and \n    8\n), and the score is \n    5 - 2 \n    \u00b7 0 = 5\n;\n\n    v=1,k=2\n: you can delete the vertex \n    7\n, so the vertex \n    1\n has\n\n    4\n children (vertices \n    3\n, \n    4\n, \n    5\n, and \n    6\n), and the\nscore is \n    4 - 1 \n    \u00b7 2 = 2\n. \n    v=1,k=3\n: you shouldn't delete any\nvertices, so the vertex \n    1\n has only one child (vertex \n    7\n), and the\nscore is \n    1 - 0 \n    \u00b7 3 = 1\n; \n    v=7,k=1\n: you can delete the vertex\n\n    3\n, so the vertex \n    7\n has \n    5\n children (vertices \n    2\n,\n\n    4\n, \n    5\n, \n    6\n, and \n    8\n), and the score is \n    5 - 1 \n    \u00b7 1 =\n    4\n; \n    v=5,k=0\n: no matter what you do, the vertex \n    5\n will have no\nchildren, so the score is \n    0\n; \n    v=7,k=200000\n: you shouldn't delete\nany vertices, so the vertex \n    7\n has \n    4\n children (vertices \n    3\n,\n\n    4\n, \n    5\n, and \n    6\n), and the score is \n    4 - 0 \n    \u00b7 200000 =\n    4\n.\n\n",
        "cf_contest_id": 1606,
        "cf_index": "F",
        "cf_rating": 2800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "dp",
            "trees"
        ],
        "time_limit_seconds": 6.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "8\r\n6 7\r\n3 2\r\n8 3\r\n5 7\r\n7 4\r\n7 1\r\n7 3\r\n6\r\n1 0\r\n1 2\r\n1 3\r\n7 1\r\n5 0\r\n7 200000\r\n",
                "5\r\n2\r\n1\r\n4\r\n0\r\n4\r\n"
            ]
        ],
        "private_cases": []
    }
]