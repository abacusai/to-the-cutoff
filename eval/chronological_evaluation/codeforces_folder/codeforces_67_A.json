[
    {
        "name": "Partial Teacher",
        "description": "A teacher decides to give toffees to his students. He asks n students to stand\nin a queue. Since the teacher is very partial, he follows the following rule\nto distribute toffees. He looks at the first two students and gives more\ntoffees to the student having higher marks than the other one. If they have\nthe same marks they get the same number of toffees. The same procedure is\nfollowed for each pair of adjacent students starting from the first one to the\nlast one. It is given that each student receives at least one toffee. You have\nto find the number of toffees given to each student by the teacher such that\nthe total number of toffees is minimum. Input The first line of input contains\nthe number of students n (2 \u2264 n \u2264 1000). The second line gives (n - 1)\ncharacters consisting of \"L\", \"R\" and \"=\". For each pair of adjacent students\n\"L\" means that the left student has higher marks, \"R\" means that the right\nstudent has higher marks and \"=\" means that both have equal marks. Output\nOutput consists of n integers separated by a space representing the number of\ntoffees each student receives in the queue starting from the first one to the\nlast one. Examples Input 5 LRLR Output 2 1 2 1 2 Input 5 =RRR Output 1 1 2 3 4\n\n",
        "cf_contest_id": 67,
        "cf_index": "A",
        "cf_rating": 1800,
        "difficulty": 0,
        "cf_tags": [
            "dp",
            "graphs",
            "greedy",
            "implementation"
        ],
        "time_limit_seconds": 1.0,
        "memory_limit_bytes": 256.0,
        "public_cases": [
            [
                "5\r\nLRLR\r\n",
                "2 1 2 1 2"
            ],
            [
                "5\r\n=RRR\r\n",
                "1 1 2 3 4"
            ]
        ],
        "private_cases": [
            [
                "6\r\nRLRL=\r\n",
                "1 2 1 2 1 1"
            ],
            [
                "3\r\nR=\r\n",
                "1 2 2"
            ],
            [
                "7\r\nRR==RR\r\n",
                "1 2 3 3 3 4 5"
            ],
            [
                "24\r\nR=R==RL=RL=RLL=LLL=LLRL\r\n",
                "1 2 2 3 3 3 4 1 1 2 1 1 8 7 6 6 5 4 3 3 2 1 2 1"
            ],
            [
                "100\r\n=L=L=L=R=LR=RRRLRL=LRL=RRLLLLRL=R==R=LLLRR===RR=LR==LRLR===RRLRLLRLLR=LRLRR=L=LRRLLLRR==LLRLLLL==RL\r\n",
                "4 4 3 3 2 2 1 1 2 2 1 2 2 3 4 5 1 3 2 2 1 2 1 1 2 5 4 3 2 1 2 1 1 2 2 2 4 4 3 2 1 2 3 3 3 3 4 5 5 1 2 2 2 1 2 1 2 2 2 2 3 4 1 3 2 1 3 2 1 2 2 1 2 1 2 3 3 2 2 1 2 4 3 2 1 2 3 3 3 2 1 5 4 3 2 1 1 1 2 1"
            ],
            [
                "10\r\nRL=R=RLR=\r\n",
                "1 2 1 1 2 2 3 1 2 2"
            ],
            [
                "2\r\nL\r\n",
                "2 1"
            ],
            [
                "100\r\nR=R=RRR=R=RR=RRLL=RLRLLLLLR==L=======L=LLR==RL=R=LRLLLR==LLLL=RRRL=LRL=LR=====L=LLLRRL=LLR===RLR=RR\r\n",
                "1 2 2 3 3 4 5 6 6 7 7 8 9 9 10 11 2 1 1 2 1 6 5 4 3 2 1 5 5 5 4 4 4 4 4 4 4 4 3 3 2 1 2 2 2 3 1 1 2 2 1 4 3 2 1 5 5 5 4 3 2 1 1 2 3 4 2 2 1 3 2 2 1 5 5 5 5 5 5 4 4 3 2 1 2 4 3 3 2 1 2 2 2 2 3 1 2 2 3 4"
            ],
            [
                "23\r\nL=LLLLRL=RR=RLLLL=RR==\r\n",
                "6 5 5 4 3 2 1 2 1 1 2 3 3 5 4 3 2 1 1 2 3 3 3"
            ],
            [
                "4\r\nRRL\r\n",
                "1 2 3 1"
            ],
            [
                "17\r\n=RRR=L==LLLLRRRL\r\n",
                "1 1 2 3 6 6 5 5 5 4 3 2 1 2 3 4 1"
            ],
            [
                "20\r\nRRLLLLLRRRRRRRRLRLR\r\n",
                "1 2 6 5 4 3 2 1 2 3 4 5 6 7 8 9 1 2 1 2"
            ],
            [
                "9\r\nR===RRLL\r\n",
                "1 2 2 2 2 3 4 2 1"
            ],
            [
                "15\r\n=RRR=LLLLLRRRL\r\n",
                "1 1 2 3 6 6 5 4 3 2 1 2 3 4 1"
            ]
        ]
    }
]