[
    {
        "name": "Extremely Round",
        "description": "Let's call a positive integer extremely round if it has only one non-zero\ndigit. For example, \n    5000\n, \n    4\n, \n    1\n, \n    10\n, \n    200\n are\nextremely round integers; \n    42\n, \n    13\n, \n    666\n, \n    77\n, \n    101\n\nare not. You are given an integer \n    n\n. You have to calculate the number of\nextremely round integers \n    x\n such that \n    1 \n    \u2264 x \n    \u2264 n\n. Input The\nfirst line contains one integer \n    t\n (\n    1 \n    \u2264 t \n    \u2264 10^4\n) \u2014 the\nnumber of test cases. Then, \n    t\n lines follow. The \n    i\n-th of them\ncontains one integer \n    n\n (\n    1 \n    \u2264 n \n    \u2264 999999\n) \u2014 the description\nof the \n    i\n-th test case. Output For each test case, print one integer \u2014\nthe number of extremely round integers \n    x\n such that \n    1 \n    \u2264 x \n    \u2264\n    n\n. Example Input 5 9 42 13 100 111 Output 9 13 10 19 19\n\n",
        "cf_contest_id": 1766,
        "cf_index": "A",
        "cf_rating": 800,
        "difficulty": 0,
        "cf_tags": [
            "brute force",
            "implementation"
        ],
        "time_limit_seconds": 3.0,
        "memory_limit_bytes": 512.0,
        "public_cases": [
            [
                "5\r\n9\r\n42\r\n13\r\n100\r\n111\r\n",
                "9\r\n13\r\n10\r\n19\r\n19\r\n"
            ]
        ],
        "private_cases": [
            [
                "1\r\n707951\r\n",
                "52\r\n"
            ],
            [
                "1\r\n69\r\n",
                "15\r\n"
            ],
            [
                "1\r\n9123\r\n",
                "36\r\n"
            ],
            [
                "1\r\n912\r\n",
                "27\r\n"
            ],
            [
                "1\r\n9999\r\n",
                "36\r\n"
            ],
            [
                "1\r\n9998\r\n",
                "36\r\n"
            ],
            [
                "1\r\n9997\r\n",
                "36\r\n"
            ],
            [
                "1\r\n9996\r\n",
                "36\r\n"
            ],
            [
                "1\r\n9995\r\n",
                "36\r\n"
            ],
            [
                "1\r\n9991\r\n",
                "36\r\n"
            ],
            [
                "1\r\n9990\r\n",
                "36\r\n"
            ],
            [
                "1\r\n9988\r\n",
                "36\r\n"
            ],
            [
                "1\r\n99889\r\n",
                "45\r\n"
            ],
            [
                "1\r\n1\r\n",
                "1\r\n"
            ],
            [
                "2\r\n1\r\n1\r\n",
                "1\r\n1\r\n"
            ]
        ]
    }
]